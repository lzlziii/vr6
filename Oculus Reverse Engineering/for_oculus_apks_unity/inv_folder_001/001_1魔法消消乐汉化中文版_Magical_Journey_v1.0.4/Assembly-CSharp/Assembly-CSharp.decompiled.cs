using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using Facebook.WitAi;
using Facebook.WitAi.Lib;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Sirenix.OdinInspector;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Playables;
using UnityEngine.Profiling;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using Utility;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x11CC4D8", Offset = "0x11CC4D8", VA = "0x11CC4D8")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x11CC644", Offset = "0x11CC644", VA = "0x11CC644")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x11CC9E8", Offset = "0x11CC9E8", VA = "0x11CC9E8")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x11CCB90", Offset = "0x11CCB90", VA = "0x11CCB90", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x11CCBBC", Offset = "0x11CCBBC", VA = "0x11CCBBC")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000003")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xD43AF4", Offset = "0xD43AF4", VA = "0xD43AF4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xD43B80", Offset = "0xD43B80", VA = "0xD43B80")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xD43CEC", Offset = "0xD43CEC", VA = "0xD43CEC")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000004")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000001")]
	public bool IsVisible
	{
		[Token(Token = "0x6000009")]
		[Address(RVA = "0x1F3EE4C", Offset = "0x1F3EE4C", VA = "0x1F3EE4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600000A")]
		[Address(RVA = "0x1F3EE54", Offset = "0x1F3EE54", VA = "0x1F3EE54")]
		set
		{
		}
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x1F3EF7C", Offset = "0x1F3EF7C", VA = "0x1F3EF7C")]
	private void Start()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x1F3F198", Offset = "0x1F3F198", VA = "0x1F3F198")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x1F3F1A0", Offset = "0x1F3F1A0", VA = "0x1F3F1A0")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000005")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000314")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xD46714", Offset = "0xD46714", VA = "0xD46714")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000315")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFD930", Offset = "0xAFD930")]
		public float FakeLatencyMax;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFD948", Offset = "0xAFD948")]
		public float FakeLatencyMin;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFD960", Offset = "0xAFD960")]
		public float LatencyWeight;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFD978", Offset = "0xAFD978")]
		public int MaxSamples;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xD4671C", Offset = "0xD4671C", VA = "0xD4671C")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xD468B4", Offset = "0xD468B4", VA = "0xD468B4")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xD45DB4", Offset = "0xD45DB4", VA = "0xD45DB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xD45ED8", Offset = "0xD45ED8", VA = "0xD45ED8")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xD4623C", Offset = "0xD4623C", VA = "0xD4623C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xD461A0", Offset = "0xD461A0", VA = "0xD461A0")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xD46498", Offset = "0xD46498", VA = "0xD46498")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xD46828", Offset = "0xD46828", VA = "0xD46828")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000006")]
public class P2PManager
{
	[Token(Token = "0x2000316")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4001019")]
		Update = 1
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x11CDAF8", Offset = "0x11CDAF8", VA = "0x11CDAF8")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x11CDBB8", Offset = "0x11CDBB8", VA = "0x11CDBB8")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x11CDC9C", Offset = "0x11CDC9C", VA = "0x11CDC9C")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x11CDD20", Offset = "0x11CDD20", VA = "0x11CDD20")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x11CDE7C", Offset = "0x11CDE7C", VA = "0x11CDE7C")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x11CE12C", Offset = "0x11CE12C", VA = "0x11CE12C")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x11CE520", Offset = "0x11CE520", VA = "0x11CE520")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x11CE7C4", Offset = "0x11CE7C4", VA = "0x11CE7C4")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x11CE2F0", Offset = "0x11CE2F0", VA = "0x11CE2F0")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x11CE6F4", Offset = "0x11CE6F4", VA = "0x11CE6F4")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x11CE3D8", Offset = "0x11CE3D8", VA = "0x11CE3D8")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x11CE9DC", Offset = "0x11CE9DC", VA = "0x11CE9DC")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x11CE338", Offset = "0x11CE338", VA = "0x11CE338")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x11CE738", Offset = "0x11CE738", VA = "0x11CE738")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x11CE480", Offset = "0x11CE480", VA = "0x11CE480")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x11CEA68", Offset = "0x11CEA68", VA = "0x11CEA68")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000007")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xD3E39C", Offset = "0xD3E39C", VA = "0xD3E39C", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xD3E6D0", Offset = "0xD3E6D0", VA = "0xD3E6D0", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xD3E6F4", Offset = "0xD3E6F4", VA = "0xD3E6F4", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xD3EAA4", Offset = "0xD3EAA4", VA = "0xD3EAA4")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xD3EC44", Offset = "0xD3EC44", VA = "0xD3EC44")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xD3ECC4", Offset = "0xD3ECC4", VA = "0xD3ECC4")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xD3ED18", Offset = "0xD3ED18", VA = "0xD3ED18")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000008")]
public class RemotePlayer
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xD4693C", Offset = "0xD4693C", VA = "0xD4693C")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000009")]
public class RoomManager
{
	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xD470E8", Offset = "0xD470E8", VA = "0xD470E8")]
	public RoomManager()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xD471B4", Offset = "0xD471B4", VA = "0xD471B4")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xD47478", Offset = "0xD47478", VA = "0xD47478")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xD47584", Offset = "0xD47584", VA = "0xD47584")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xD47638", Offset = "0xD47638", VA = "0xD47638")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xD47C44", Offset = "0xD47C44", VA = "0xD47C44")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xD474A8", Offset = "0xD474A8", VA = "0xD474A8")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xD47CCC", Offset = "0xD47CCC", VA = "0xD47CCC")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xD48340", Offset = "0xD48340", VA = "0xD48340")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xD48608", Offset = "0xD48608", VA = "0xD48608")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xD47F68", Offset = "0xD47F68", VA = "0xD47F68")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x200000A")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000317")]
	public enum State
	{
		[Token(Token = "0x400101B")]
		INITIALIZING,
		[Token(Token = "0x400101C")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x400101D")]
		CREATING_A_ROOM,
		[Token(Token = "0x400101E")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x400101F")]
		JOINING_A_ROOM,
		[Token(Token = "0x4001020")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4001021")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4001022")]
		SHUTDOWN
	}

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000002")]
	public static State CurrentState
	{
		[Token(Token = "0x6000043")]
		[Address(RVA = "0xD53030", Offset = "0xD53030", VA = "0xD53030")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000003")]
	public static ulong MyID
	{
		[Token(Token = "0x6000044")]
		[Address(RVA = "0xD4775C", Offset = "0xD4775C", VA = "0xD4775C")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000004")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000045")]
		[Address(RVA = "0xD530A4", Offset = "0xD530A4", VA = "0xD530A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xD3E718", Offset = "0xD3E718", VA = "0xD3E718", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xD3E3D4", Offset = "0xD3E3D4", VA = "0xD3E3D4", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xD51EA0", Offset = "0xD51EA0", VA = "0xD51EA0")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xD3E6F0", Offset = "0xD3E6F0", VA = "0xD3E6F0", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xD51FFC", Offset = "0xD51FFC", VA = "0xD51FFC")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xD520F0", Offset = "0xD520F0", VA = "0xD520F0")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xD527F0", Offset = "0xD527F0", VA = "0xD527F0")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xD52CA8", Offset = "0xD52CA8", VA = "0xD52CA8")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xD52E74", Offset = "0xD52E74", VA = "0xD52E74")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xD52FC0", Offset = "0xD52FC0", VA = "0xD52FC0")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xD51DEC", Offset = "0xD51DEC", VA = "0xD51DEC")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xD4730C", Offset = "0xD4730C", VA = "0xD4730C")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xD47834", Offset = "0xD47834", VA = "0xD47834")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xD531B8", Offset = "0xD531B8", VA = "0xD531B8")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xD47B5C", Offset = "0xD47B5C", VA = "0xD47B5C")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xD48680", Offset = "0xD48680", VA = "0xD48680")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xD48A04", Offset = "0xD48A04", VA = "0xD48A04")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xD48AD4", Offset = "0xD48AD4", VA = "0xD48AD4")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xD473BC", Offset = "0xD473BC", VA = "0xD473BC")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xD487A4", Offset = "0xD487A4", VA = "0xD487A4")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xD48830", Offset = "0xD48830", VA = "0xD48830")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xD53338", Offset = "0xD53338", VA = "0xD53338")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xD53514", Offset = "0xD53514", VA = "0xD53514")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xD51D64", Offset = "0xD51D64", VA = "0xD51D64")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xAFD9E0", Offset = "0xAFD9E0")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xD53650", Offset = "0xD53650", VA = "0xD53650")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xD3ED84", Offset = "0xD3ED84", VA = "0xD3ED84")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x200000B")]
public class VoipManager
{
	[Token(Token = "0x6000055")]
	[Address(RVA = "0xE06E84", Offset = "0xE06E84", VA = "0xE06E84")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xE06F44", Offset = "0xE06F44", VA = "0xE06F44")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xE07028", Offset = "0xE07028", VA = "0xE07028")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xE070AC", Offset = "0xE070AC", VA = "0xE070AC")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xE07208", Offset = "0xE07208", VA = "0xE07208")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x200000C")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x1F3EAD8", Offset = "0x1F3EAD8", VA = "0x1F3EAD8")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x1F3EB48", Offset = "0x1F3EB48", VA = "0x1F3EB48")]
	private void Start()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x1F3ECC4", Offset = "0x1F3ECC4", VA = "0x1F3ECC4")]
	private void Update()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x1F3ED28", Offset = "0x1F3ED28", VA = "0x1F3ED28")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x1F3EB84", Offset = "0x1F3EB84", VA = "0x1F3EB84")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x1F3EDE4", Offset = "0x1F3EDE4", VA = "0x1F3EDE4")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x1F3EE44", Offset = "0x1F3EE44", VA = "0x1F3EE44")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x200000D")]
public class AvatarLayer
{
	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xE87164", Offset = "0xE87164", VA = "0xE87164")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x200000E")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x11CEAF4", Offset = "0x11CEAF4", VA = "0x11CEAF4")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200000F")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000318")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x11BFC98", Offset = "0x11BFC98", VA = "0x11BFC98")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000319")]
	public enum HandType
	{
		[Token(Token = "0x4001025")]
		Right,
		[Token(Token = "0x4001026")]
		Left,
		[Token(Token = "0x4001027")]
		Max
	}

	[Token(Token = "0x200031A")]
	public enum HandJoint
	{
		[Token(Token = "0x4001029")]
		HandBase,
		[Token(Token = "0x400102A")]
		IndexBase,
		[Token(Token = "0x400102B")]
		IndexTip,
		[Token(Token = "0x400102C")]
		ThumbBase,
		[Token(Token = "0x400102D")]
		ThumbTip,
		[Token(Token = "0x400102E")]
		Max
	}

	[Token(Token = "0x200031B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA4D8", Offset = "0xAFA4D8")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x1700007D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001372")]
			[Address(RVA = "0x11BFC28", Offset = "0x11BFC28", VA = "0x11BFC28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001374")]
			[Address(RVA = "0x11BFC90", Offset = "0x11BFC90", VA = "0x11BFC90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x11BFA6C", Offset = "0x11BFA6C", VA = "0x11BFA6C")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x11BFA98", Offset = "0x11BFA98", VA = "0x11BFA98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x11BFA9C", Offset = "0x11BFA9C", VA = "0x11BFA9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x11BFC30", Offset = "0x11BFC30", VA = "0x11BFC30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAFB2B8", Offset = "0xAFB2B8")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAFB2F0", Offset = "0xAFB2F0")]
	public bool EnableBody;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAFB328", Offset = "0xAFB328")]
	public bool RecordPackets;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAFB360", Offset = "0xAFB360")]
	public bool StartWithControllers;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAFB398", Offset = "0xAFB398")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB398", Offset = "0xAFB398")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB408", Offset = "0xAFB408")]
	private bool CombineMeshes;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB440", Offset = "0xAFB440")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAFB478", Offset = "0xAFB478")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAFB4B0", Offset = "0xAFB4B0")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB4E8", Offset = "0xAFB4E8")]
	public bool EnableLaughter;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x4000085")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x4000087")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x4000088")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x4000089")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x400008A")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x400008B")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xDEE218", Offset = "0xDEE218", VA = "0xDEE218")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xDEE580", Offset = "0xDEE580", VA = "0xDEE580")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xDEE60C", Offset = "0xDEE60C", VA = "0xDEE60C")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xDEE678", Offset = "0xDEE678", VA = "0xDEE678")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xDEE7A0", Offset = "0xDEE7A0", VA = "0xDEE7A0")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xDEE884", Offset = "0xDEE884", VA = "0xDEE884")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xDEE964", Offset = "0xDEE964", VA = "0xDEE964")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xDEEB4C", Offset = "0xDEEB4C", VA = "0xDEEB4C")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xDEEC14", Offset = "0xDEEC14", VA = "0xDEEC14")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xDEEC98", Offset = "0xDEEC98", VA = "0xDEEC98")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xDEED80", Offset = "0xDEED80", VA = "0xDEED80")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xDEEE0C", Offset = "0xDEEE0C", VA = "0xDEEE0C")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xDEEF28", Offset = "0xDEEF28", VA = "0xDEEF28")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xDEEF88", Offset = "0xDEEF88", VA = "0xDEEF88")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000071")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xDEF40C", Offset = "0xDEF40C", VA = "0xDEF40C")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xDEF76C", Offset = "0xDEF76C", VA = "0xDEF76C")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xDEF8D0", Offset = "0xDEF8D0", VA = "0xDEF8D0")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xDEFB98", Offset = "0xDEFB98", VA = "0xDEFB98")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xDEFC84", Offset = "0xDEFC84", VA = "0xDEFC84")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xDF0038", Offset = "0xDF0038", VA = "0xDF0038")]
	private void Start()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xDF0338", Offset = "0xDF0338", VA = "0xDF0338")]
	private void Update()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xDF0D50", Offset = "0xDF0D50", VA = "0xDF0D50")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xDF0DA4", Offset = "0xDF0DA4", VA = "0xDF0DA4")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xDEFF00", Offset = "0xDEFF00", VA = "0xDEFF00")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xDEFF9C", Offset = "0xDEFF9C", VA = "0xDEFF9C")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xDF0DD4", Offset = "0xDF0DD4", VA = "0xDF0DD4")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xDF06AC", Offset = "0xDF06AC", VA = "0xDF06AC")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xDF1020", Offset = "0xDF1020", VA = "0xDF1020")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xDF0E3C", Offset = "0xDF0E3C", VA = "0xDF0E3C")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xDF12BC", Offset = "0xDF12BC", VA = "0xDF12BC")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xDF16C0", Offset = "0xDF16C0", VA = "0xDF16C0")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xDF18F0", Offset = "0xDF18F0", VA = "0xDF18F0")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xDF1A30", Offset = "0xDF1A30", VA = "0xDF1A30")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xDF1BE8", Offset = "0xDF1BE8", VA = "0xDF1BE8")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xDF084C", Offset = "0xDF084C", VA = "0xDF084C")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xDF1CC0", Offset = "0xDF1CC0", VA = "0xDF1CC0")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xDF06BC", Offset = "0xDF06BC", VA = "0xDF06BC")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xDF1DB4", Offset = "0xDF1DB4", VA = "0xDF1DB4")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xDF2360", Offset = "0xDF2360", VA = "0xDF2360")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xDF2820", Offset = "0xDF2820", VA = "0xDF2820")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xDF2898", Offset = "0xDF2898", VA = "0xDF2898")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xDF2914", Offset = "0xDF2914", VA = "0xDF2914")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xDF0BE4", Offset = "0xDF0BE4", VA = "0xDF0BE4")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xDF1E70", Offset = "0xDF1E70", VA = "0xDF1E70")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xDF2DAC", Offset = "0xDF2DAC", VA = "0xDF2DAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFDA44", Offset = "0xAFDA44")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xDF2E1C", Offset = "0xDF2E1C", VA = "0xDF2E1C")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xDF2C50", Offset = "0xDF2C50", VA = "0xDF2C50")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xDF2EE4", Offset = "0xDF2EE4", VA = "0xDF2EE4")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xDF2FD0", Offset = "0xDF2FD0", VA = "0xDF2FD0")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xDF29E4", Offset = "0xDF29E4", VA = "0xDF29E4")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xDF30BC", Offset = "0xDF30BC", VA = "0xDF30BC")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000010")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x11BFD14", Offset = "0x11BFD14", VA = "0x11BFD14")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000011")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x11BFDC4", Offset = "0x11BFDC4", VA = "0x11BFDC4")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x11C10A4", Offset = "0x11C10A4", VA = "0x11C10A4")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x11C0C48", Offset = "0x11C0C48", VA = "0x11C0C48")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x11C09EC", Offset = "0x11C09EC", VA = "0x11C09EC")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x11C0ABC", Offset = "0x11C0ABC", VA = "0x11C0ABC")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x11C1308", Offset = "0x11C1308", VA = "0x11C1308")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000012")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40000A8")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x11C1888", Offset = "0x11C1888", VA = "0x11C1888")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000013")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x11C1AF0", Offset = "0x11C1AF0", VA = "0x11C1AF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x11C1EF0", Offset = "0x11C1EF0", VA = "0x11C1EF0")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000014")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x11C1FEC", Offset = "0x11C1FEC", VA = "0x11C1FEC")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x11C2148", Offset = "0x11C2148", VA = "0x11C2148")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x11C2264", Offset = "0x11C2264", VA = "0x11C2264")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000015")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x11C22C8", Offset = "0x11C22C8", VA = "0x11C22C8")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x11C1C0C", Offset = "0x11C1C0C", VA = "0x11C1C0C")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x11C28AC", Offset = "0x11C28AC", VA = "0x11C28AC")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x11C290C", Offset = "0x11C290C", VA = "0x11C290C")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x11C30F0", Offset = "0x11C30F0", VA = "0x11C30F0")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x11C1F54", Offset = "0x11C1F54", VA = "0x11C1F54")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000016")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x200031C")]
	public enum PacketMode
	{
		[Token(Token = "0x4001033")]
		SDK,
		[Token(Token = "0x4001034")]
		Unity
	}

	[Token(Token = "0x200031D")]
	public struct ControllerPose
	{
		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x11C4718", Offset = "0x11C4718", VA = "0x11C4718")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x200031E")]
	public struct PoseFrame
	{
		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x11C4874", Offset = "0x11C4874", VA = "0x11C4874")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x11C43EC", Offset = "0x11C43EC", VA = "0x11C43EC")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60000AC")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x11C43FC", Offset = "0x11C43FC", VA = "0x11C43FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x11C4488", Offset = "0x11C4488", VA = "0x11C4488")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x11C4700", Offset = "0x11C4700", VA = "0x11C4700")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x11C4708", Offset = "0x11C4708", VA = "0x11C4708")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000017")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x11C4C2C", Offset = "0x11C4C2C", VA = "0x11C4C2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x11C4D88", Offset = "0x11C4D88", VA = "0x11C4D88")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000018")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x11C4DF4", Offset = "0x11C4DF4", VA = "0x11C4DF4")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x11C4F60", Offset = "0x11C4F60", VA = "0x11C4F60")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x11C5304", Offset = "0x11C5304", VA = "0x11C5304")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x11C5520", Offset = "0x11C5520", VA = "0x11C5520", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x11C554C", Offset = "0x11C554C", VA = "0x11C554C")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000019")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x200031F")]
	public enum TextureType
	{
		[Token(Token = "0x4001045")]
		DiffuseTextures,
		[Token(Token = "0x4001046")]
		NormalMaps,
		[Token(Token = "0x4001047")]
		RoughnessMaps,
		[Token(Token = "0x4001048")]
		Count
	}

	[Token(Token = "0x2000320")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000321")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000322")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000323")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x11C776C", Offset = "0x11C776C", VA = "0x11C776C")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA4E8", Offset = "0xAFA4E8")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x1700007F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600137B")]
			[Address(RVA = "0x11C807C", Offset = "0x11C807C", VA = "0x11C807C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600137D")]
			[Address(RVA = "0x11C80E4", Offset = "0x11C80E4", VA = "0x11C80E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x11C75D4", Offset = "0x11C75D4", VA = "0x11C75D4")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x11C7A04", Offset = "0x11C7A04", VA = "0x11C7A04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x11C7A08", Offset = "0x11C7A08", VA = "0x11C7A08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x11C8084", Offset = "0x11C8084", VA = "0x11C8084", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x40000DC")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x40000DD")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x40000DE")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x40000DF")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x11C55FC", Offset = "0x11C55FC", VA = "0x11C55FC")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x11C575C", Offset = "0x11C575C", VA = "0x11C575C")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x11C5784", Offset = "0x11C5784", VA = "0x11C5784")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x11C5E9C", Offset = "0x11C5E9C", VA = "0x11C5E9C")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x11C611C", Offset = "0x11C611C", VA = "0x11C611C")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x11C5818", Offset = "0x11C5818", VA = "0x11C5818")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x11C620C", Offset = "0x11C620C", VA = "0x11C620C")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x11C5C18", Offset = "0x11C5C18", VA = "0x11C5C18")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x11C6474", Offset = "0x11C6474", VA = "0x11C6474")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x11C66EC", Offset = "0x11C66EC", VA = "0x11C66EC")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x11C67E8", Offset = "0x11C67E8", VA = "0x11C67E8")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x11C6820", Offset = "0x11C6820", VA = "0x11C6820")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x11C5E20", Offset = "0x11C5E20", VA = "0x11C5E20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFDAA8", Offset = "0xAFDAA8")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x11C7600", Offset = "0x11C7600", VA = "0x11C7600")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x200001A")]
public class OvrAvatarPacket
{
	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000005")]
	public float Duration
	{
		[Token(Token = "0x60000C7")]
		[Address(RVA = "0x11C80EC", Offset = "0x11C80EC", VA = "0x11C80EC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000006")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x60000C8")]
		[Address(RVA = "0x11C8158", Offset = "0x11C8158", VA = "0x11C8158")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x11C81DC", Offset = "0x11C81DC", VA = "0x11C81DC")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x11C82A0", Offset = "0x11C82A0", VA = "0x11C82A0")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x11C83E0", Offset = "0x11C83E0", VA = "0x11C83E0")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x11C84BC", Offset = "0x11C84BC", VA = "0x11C84BC")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x11C858C", Offset = "0x11C858C", VA = "0x11C858C")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x11C8794", Offset = "0x11C8794", VA = "0x11C8794")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x11C89EC", Offset = "0x11C89EC", VA = "0x11C89EC")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x200001B")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xE8B9FC", Offset = "0xE8B9FC", VA = "0xE8B9FC")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xE8BB10", Offset = "0xE8BB10", VA = "0xE8BB10")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xE8BCBC", Offset = "0xE8BCBC", VA = "0xE8BCBC")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xE8BB80", Offset = "0xE8BB80", VA = "0xE8BB80")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xE8BC14", Offset = "0xE8BC14", VA = "0xE8BC14")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x200001C")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xE8B5FC", Offset = "0xE8B5FC", VA = "0xE8B5FC")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xE8B9A0", Offset = "0xE8B9A0", VA = "0xE8B9A0")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xE8B79C", Offset = "0xE8B79C", VA = "0xE8B79C")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xE8B814", Offset = "0xE8B814", VA = "0xE8B814")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xE8B8B0", Offset = "0xE8B8B0", VA = "0xE8B8B0")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x200001D")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x40000E7")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x40000E8")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x11C8BDC", Offset = "0x11C8BDC", VA = "0x11C8BDC")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x11C8C68", Offset = "0x11C8C68", VA = "0x11C8C68", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x11C8C84", Offset = "0x11C8C84", VA = "0x11C8C84")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x11C8E30", Offset = "0x11C8E30", VA = "0x11C8E30")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x11C8FD8", Offset = "0x11C8FD8", VA = "0x11C8FD8")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x200001E")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x11C9058", Offset = "0x11C9058", VA = "0x11C9058")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x11C913C", Offset = "0x11C913C", VA = "0x11C913C")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x11C9330", Offset = "0x11C9330", VA = "0x11C9330")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x11C96C4", Offset = "0x11C96C4", VA = "0x11C96C4")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x11C97BC", Offset = "0x11C97BC", VA = "0x11C97BC")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x200001F")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x40000F1")]
	Body = 1,
	[Token(Token = "0x40000F2")]
	Hands = 2,
	[Token(Token = "0x40000F3")]
	Base = 4,
	[Token(Token = "0x40000F4")]
	BodyTilt = 0x10,
	[Token(Token = "0x40000F5")]
	Expressive = 0x20,
	[Token(Token = "0x40000F6")]
	All = -1
}
[Token(Token = "0x2000020")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x40000F8")]
	AvatarSpecification,
	[Token(Token = "0x40000F9")]
	AssetLoaded,
	[Token(Token = "0x40000FA")]
	Count
}
[Token(Token = "0x2000021")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000022")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000023")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000100")]
	Mesh,
	[Token(Token = "0x4000101")]
	Texture,
	[Token(Token = "0x4000102")]
	Pose,
	[Token(Token = "0x4000103")]
	Material,
	[Token(Token = "0x4000104")]
	CombinedMesh,
	[Token(Token = "0x4000105")]
	PBSMaterial,
	[Token(Token = "0x4000106")]
	FailedLoad,
	[Token(Token = "0x4000107")]
	Count
}
[Token(Token = "0x2000024")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000025")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000026")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000027")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000028")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000029")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x400013C")]
	RGB24,
	[Token(Token = "0x400013D")]
	DXT1,
	[Token(Token = "0x400013E")]
	DXT5,
	[Token(Token = "0x400013F")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000140")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000141")]
	Count
}
[Token(Token = "0x200002A")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x200002B")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000149")]
	SkinnedMeshRender,
	[Token(Token = "0x400014A")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x400014B")]
	ProjectorRender,
	[Token(Token = "0x400014C")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x400014D")]
	Count
}
[Token(Token = "0x200002C")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x400014F")]
	Unknown,
	[Token(Token = "0x4000150")]
	Default,
	[Token(Token = "0x4000151")]
	Verbose,
	[Token(Token = "0x4000152")]
	Debug,
	[Token(Token = "0x4000153")]
	Info,
	[Token(Token = "0x4000154")]
	Warn,
	[Token(Token = "0x4000155")]
	Error,
	[Token(Token = "0x4000156")]
	Fatal,
	[Token(Token = "0x4000157")]
	Silent
}
[Token(Token = "0x200002D")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x200002E")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x400015C")]
	One = 1,
	[Token(Token = "0x400015D")]
	Two = 2,
	[Token(Token = "0x400015E")]
	Three = 4,
	[Token(Token = "0x400015F")]
	Joystick = 8
}
[Token(Token = "0x200002F")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000161")]
	One = 1,
	[Token(Token = "0x4000162")]
	Two = 2,
	[Token(Token = "0x4000163")]
	Joystick = 4,
	[Token(Token = "0x4000164")]
	ThumbRest = 8,
	[Token(Token = "0x4000165")]
	Index = 0x10,
	[Token(Token = "0x4000166")]
	Pointing = 0x40,
	[Token(Token = "0x4000167")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000030")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000031")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000032")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000033")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000034")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000035")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000036")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000037")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000038")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000187")]
	Add,
	[Token(Token = "0x4000188")]
	Multiply,
	[Token(Token = "0x4000189")]
	Count
}
[Token(Token = "0x2000039")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x400018B")]
	Color,
	[Token(Token = "0x400018C")]
	Texture,
	[Token(Token = "0x400018D")]
	TextureSingleChannel,
	[Token(Token = "0x400018E")]
	Parallax,
	[Token(Token = "0x400018F")]
	Count
}
[Token(Token = "0x200003A")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000191")]
	None,
	[Token(Token = "0x4000192")]
	Positional,
	[Token(Token = "0x4000193")]
	ViewReflection,
	[Token(Token = "0x4000194")]
	Fresnel,
	[Token(Token = "0x4000195")]
	Pulse,
	[Token(Token = "0x4000196")]
	Count
}
[Token(Token = "0x200003B")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000198")]
	Touch,
	[Token(Token = "0x4000199")]
	Malibu,
	[Token(Token = "0x400019A")]
	Go,
	[Token(Token = "0x400019B")]
	Quest,
	[Token(Token = "0x400019C")]
	Count
}
[Token(Token = "0x200003C")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x400019E")]
	Lowest = 1,
	[Token(Token = "0x400019F")]
	Medium = 3,
	[Token(Token = "0x40001A0")]
	Highest = 5
}
[Token(Token = "0x200003D")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40001A2")]
	Unknown = -1,
	[Token(Token = "0x40001A3")]
	One,
	[Token(Token = "0x40001A4")]
	Two
}
[Token(Token = "0x200003E")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x1CB9E28", Offset = "0x1CB9E28", VA = "0x1CB9E28")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x1CB9E58", Offset = "0x1CB9E58", VA = "0x1CB9E58", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x1CBA078", Offset = "0x1CBA078", VA = "0x1CBA078", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200003F")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x1CBA15C", Offset = "0x1CBA15C", VA = "0x1CBA15C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x1CBA18C", Offset = "0x1CBA18C", VA = "0x1CBA18C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x1CBA520", Offset = "0x1CBA520", VA = "0x1CBA520", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000040")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x1CB94D0", Offset = "0x1CB94D0", VA = "0x1CB94D0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x1CB9500", Offset = "0x1CB9500", VA = "0x1CB9500", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x1CB9794", Offset = "0x1CB9794", VA = "0x1CB9794", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000041")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x1CBA688", Offset = "0x1CBA688", VA = "0x1CBA688")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x1CBA6B8", Offset = "0x1CBA6B8", VA = "0x1CBA6B8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x1CBA8AC", Offset = "0x1CBA8AC", VA = "0x1CBA8AC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000042")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x11BFD1C", Offset = "0x11BFD1C", VA = "0x11BFD1C")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000043")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000044")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40001D9")]
	FirstPerson = 1,
	[Token(Token = "0x40001DA")]
	ThirdPerson = 2,
	[Token(Token = "0x40001DB")]
	SelfOccluding = 4
}
[Token(Token = "0x2000045")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000046")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000047")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000048")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000049")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x40001F1")]
	Default,
	[Token(Token = "0x40001F2")]
	GripSphere,
	[Token(Token = "0x40001F3")]
	GripCube,
	[Token(Token = "0x40001F4")]
	Count
}
[Token(Token = "0x200004A")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x40001F6")]
	Body,
	[Token(Token = "0x40001F7")]
	Clothing,
	[Token(Token = "0x40001F8")]
	Eyewear,
	[Token(Token = "0x40001F9")]
	Hair,
	[Token(Token = "0x40001FA")]
	Beard,
	[Token(Token = "0x40001FB")]
	Count
}
[Token(Token = "0x200004B")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x200004C")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x200004D")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x200004E")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x200004F")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000205")]
	AvatarHead,
	[Token(Token = "0x4000206")]
	AvatarHand,
	[Token(Token = "0x4000207")]
	Object,
	[Token(Token = "0x4000208")]
	ObjectStatic,
	[Token(Token = "0x4000209")]
	Count
}
[Token(Token = "0x2000050")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000051")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000052")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000053")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000054")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000215")]
	Point,
	[Token(Token = "0x4000216")]
	Direction,
	[Token(Token = "0x4000217")]
	Spot,
	[Token(Token = "0x4000218")]
	Count
}
[Token(Token = "0x2000055")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000056")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000057")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000058")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000059")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x400022E")]
	None = 0u,
	[Token(Token = "0x400022F")]
	GazeTarget = 1u,
	[Token(Token = "0x4000230")]
	Any = uint.MaxValue
}
[Token(Token = "0x200005A")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x200005B")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x200005C")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x200005D")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x200005E")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x200005F")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000325")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x11CA81C", Offset = "0x11CA81C", VA = "0x11CA81C")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000245")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000007")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000105")]
		[Address(RVA = "0x11C3184", Offset = "0x11C3184", VA = "0x11C3184")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x11C97CC", Offset = "0x11C97CC", VA = "0x11C97CC")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x11C9A18", Offset = "0x11C9A18", VA = "0x11C9A18")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x11C9A8C", Offset = "0x11C9A8C", VA = "0x11C9A8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x11CA2D0", Offset = "0x11CA2D0", VA = "0x11CA2D0")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x11CA328", Offset = "0x11CA328", VA = "0x11CA328")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x11CA380", Offset = "0x11CA380", VA = "0x11CA380")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x11CA3E8", Offset = "0x11CA3E8", VA = "0x11CA3E8")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x11CA450", Offset = "0x11CA450", VA = "0x11CA450")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x11CA108", Offset = "0x11CA108", VA = "0x11CA108")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x11CA530", Offset = "0x11CA530", VA = "0x11CA530")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x11CA64C", Offset = "0x11CA64C", VA = "0x11CA64C")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x11C3314", Offset = "0x11C3314", VA = "0x11C3314")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x11CA72C", Offset = "0x11CA72C", VA = "0x11CA72C")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x11C99CC", Offset = "0x11C99CC", VA = "0x11C99CC")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x11C5EFC", Offset = "0x11C5EFC", VA = "0x11C5EFC")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x11CA804", Offset = "0x11CA804", VA = "0x11CA804")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000060")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000008")]
	public static string AppID
	{
		[Token(Token = "0x6000116")]
		[Address(RVA = "0x11CA7C4", Offset = "0x11CA7C4", VA = "0x11CA7C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000117")]
		[Address(RVA = "0x11CA95C", Offset = "0x11CA95C", VA = "0x11CA95C")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000118")]
		[Address(RVA = "0x11CA7E4", Offset = "0x11CA7E4", VA = "0x11CA7E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000119")]
		[Address(RVA = "0x11CA988", Offset = "0x11CA988", VA = "0x11CA988")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x600011A")]
		[Address(RVA = "0x11CA848", Offset = "0x11CA848", VA = "0x11CA848")]
		get
		{
			return null;
		}
		[Token(Token = "0x600011B")]
		[Address(RVA = "0x11CA9B4", Offset = "0x11CA9B4", VA = "0x11CA9B4")]
		set
		{
		}
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x11CAA08", Offset = "0x11CAA08", VA = "0x11CAA08")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000061")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x11CC0E4", Offset = "0x11CC0E4", VA = "0x11CC0E4")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x11C22D0", Offset = "0x11C22D0", VA = "0x11C22D0")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x11CC228", Offset = "0x11CC228", VA = "0x11CC228")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x11CC388", Offset = "0x11CC388", VA = "0x11CC388")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000062")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x11CC398", Offset = "0x11CC398", VA = "0x11CC398")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x11C24F8", Offset = "0x11C24F8", VA = "0x11C24F8")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x11CC4C8", Offset = "0x11CC4C8", VA = "0x11CC4C8")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000063")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000254")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000255")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000256")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x11CAA60", Offset = "0x11CAA60", VA = "0x11CAA60")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x11C2690", Offset = "0x11C2690", VA = "0x11C2690")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x11CB8A0", Offset = "0x11CB8A0", VA = "0x11CB8A0")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x11CB034", Offset = "0x11CB034", VA = "0x11CB034")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x11CAE04", Offset = "0x11CAE04", VA = "0x11CAE04")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x11CAF18", Offset = "0x11CAF18", VA = "0x11CAF18")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x11CC0D4", Offset = "0x11CC0D4", VA = "0x11CC0D4")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000064")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000326")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000327")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x11CD1D0", Offset = "0x11CD1D0", VA = "0x11CD1D0")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000328")]
	public struct TextureSet
	{
		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x11CD1E0", Offset = "0x11CD1E0", VA = "0x11CD1E0")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA4F8", Offset = "0xAFA4F8")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000081")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001384")]
			[Address(RVA = "0x11CD8C0", Offset = "0x11CD8C0", VA = "0x11CD8C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000082")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001386")]
			[Address(RVA = "0x11CD928", Offset = "0x11CD928", VA = "0x11CD928", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x11CD284", Offset = "0x11CD284", VA = "0x11CD284")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x11CD3EC", Offset = "0x11CD3EC", VA = "0x11CD3EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x11CD3F0", Offset = "0x11CD3F0", VA = "0x11CD3F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x11CD8C8", Offset = "0x11CD8C8", VA = "0x11CD8C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x400025A")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x400025B")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x400025E")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x400025F")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000260")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000261")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000262")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000263")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000264")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x11CCC7C", Offset = "0x11CCC7C", VA = "0x11CCC7C")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x11CCFD8", Offset = "0x11CCFD8", VA = "0x11CCFD8")]
	public void Update()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x11C802C", Offset = "0x11C802C", VA = "0x11C802C")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x11C62F0", Offset = "0x11C62F0", VA = "0x11C62F0")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x11CD140", Offset = "0x11CD140", VA = "0x11CD140")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x11C5F80", Offset = "0x11C5F80", VA = "0x11C5F80")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x11C6164", Offset = "0x11C6164", VA = "0x11C6164")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x11CD1F0", Offset = "0x11CD1F0", VA = "0x11CD1F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFDBAC", Offset = "0xAFDBAC")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x11CA4E4", Offset = "0x11CA4E4", VA = "0x11CA4E4")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x11CD2B0", Offset = "0x11CD2B0", VA = "0x11CD2B0")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000065")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x11CD930", Offset = "0x11CD930", VA = "0x11CD930")]
	private void Update()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x11CDA8C", Offset = "0x11CDA8C", VA = "0x11CDA8C")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000066")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200032A")]
	public delegate void OnClick();

	[Token(Token = "0x200032B")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200032C")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200032D")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA508", Offset = "0xAFA508")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x1EF84BC", Offset = "0x1EF84BC", VA = "0x1EF84BC")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x1EF8F48", Offset = "0x1EF8F48", VA = "0x1EF8F48")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200032F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA518", Offset = "0xAFA518")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x1EF8730", Offset = "0x1EF8730", VA = "0x1EF8730")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x1EF916C", Offset = "0x1EF916C", VA = "0x1EF916C")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000330")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA528", Offset = "0xAFA528")]
	private sealed class <>c__DisplayClass45_0
	{
		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x1EF8948", Offset = "0x1EF8948", VA = "0x1EF8948")]
		public <>c__DisplayClass45_0()
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x1EF93E4", Offset = "0x1EF93E4", VA = "0x1EF93E4")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA538", Offset = "0xAFA538")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x1EF8ADC", Offset = "0x1EF8ADC", VA = "0x1EF8ADC")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x1EF9798", Offset = "0x1EF9798", VA = "0x1EF9798")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA548", Offset = "0xAFA548")]
	private sealed class <>c__DisplayClass47_0
	{
		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x1EF8D34", Offset = "0x1EF8D34", VA = "0x1EF8D34")]
		public <>c__DisplayClass47_0()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x1EF97B8", Offset = "0x1EF97B8", VA = "0x1EF97B8")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000267")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000268")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000269")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x1EF6FE0", Offset = "0x1EF6FE0", VA = "0x1EF6FE0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x1EF73E8", Offset = "0x1EF73E8", VA = "0x1EF73E8")]
	public void Show()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1EF7770", Offset = "0x1EF7770", VA = "0x1EF7770")]
	public void Hide()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1EF7918", Offset = "0x1EF7918", VA = "0x1EF7918")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1EF7B84", Offset = "0x1EF7B84", VA = "0x1EF7B84")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1EF7760", Offset = "0x1EF7760", VA = "0x1EF7760")]
	private void Relayout()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1EF7ED0", Offset = "0x1EF7ED0", VA = "0x1EF7ED0")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1EF8184", Offset = "0x1EF8184", VA = "0x1EF8184")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1EF84C4", Offset = "0x1EF84C4", VA = "0x1EF84C4")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1EF85A8", Offset = "0x1EF85A8", VA = "0x1EF85A8")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1EF8738", Offset = "0x1EF8738", VA = "0x1EF8738")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1EF87D4", Offset = "0x1EF87D4", VA = "0x1EF87D4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x1EF8950", Offset = "0x1EF8950", VA = "0x1EF8950")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1EF8AE4", Offset = "0x1EF8AE4", VA = "0x1EF8AE4")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1EF8D3C", Offset = "0x1EF8D3C", VA = "0x1EF8D3C")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1EF8E18", Offset = "0x1EF8E18", VA = "0x1EF8E18")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1EF8EC8", Offset = "0x1EF8EC8", VA = "0x1EF8EC8")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000067")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1F474EC", Offset = "0x1F474EC", VA = "0x1F474EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x1F47574", Offset = "0x1F47574", VA = "0x1F47574")]
	private void Update()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x1F4763C", Offset = "0x1F4763C", VA = "0x1F4763C")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1F47678", Offset = "0x1F47678", VA = "0x1F47678")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000068")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000333")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4001083")]
		On,
		[Token(Token = "0x4001084")]
		Off,
		[Token(Token = "0x4001085")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700000B")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600014D")]
		[Address(RVA = "0x1EE0F60", Offset = "0x1EE0F60", VA = "0x1EE0F60")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600014C")]
		[Address(RVA = "0x1EE0F1C", Offset = "0x1EE0F1C", VA = "0x1EE0F1C")]
		set
		{
		}
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x1EE0F68", Offset = "0x1EE0F68", VA = "0x1EE0F68")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x1EE0FC0", Offset = "0x1EE0FC0", VA = "0x1EE0FC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x1EE10D8", Offset = "0x1EE10D8", VA = "0x1EE10D8", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x1EE10F4", Offset = "0x1EE10F4", VA = "0x1EE10F4", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x1EE1148", Offset = "0x1EE1148", VA = "0x1EE1148")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x1EE13A4", Offset = "0x1EE13A4", VA = "0x1EE13A4")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x1EE14B8", Offset = "0x1EE14B8", VA = "0x1EE14B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x1EE154C", Offset = "0x1EE154C", VA = "0x1EE154C")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1EE161C", Offset = "0x1EE161C", VA = "0x1EE161C")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1EE16D4", Offset = "0x1EE16D4", VA = "0x1EE16D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x1EE17A0", Offset = "0x1EE17A0", VA = "0x1EE17A0")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000069")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000290")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000291")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000292")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB600", Offset = "0xAFB600")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB638", Offset = "0xAFB638")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB670", Offset = "0xAFB670")]
	public float HeightOffset;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB6A8", Offset = "0xAFB6A8")]
	public float MinimumHeight;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB6E0", Offset = "0xAFB6E0")]
	public float MaximumHeight;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1F2668C", Offset = "0x1F2668C", VA = "0x1F2668C")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1F26694", Offset = "0x1F26694", VA = "0x1F26694")]
	private void Awake()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x1F26704", Offset = "0x1F26704", VA = "0x1F26704")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x1F26790", Offset = "0x1F26790", VA = "0x1F26790")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x1F2681C", Offset = "0x1F2681C", VA = "0x1F2681C")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x1F26C24", Offset = "0x1F26C24", VA = "0x1F26C24")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x1F26ECC", Offset = "0x1F26ECC", VA = "0x1F26ECC")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x200006A")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x1EECD88", Offset = "0x1EECD88", VA = "0x1EECD88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x1EECE34", Offset = "0x1EECE34", VA = "0x1EECE34")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200006B")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000334")]
	public enum States
	{
		[Token(Token = "0x4001087")]
		Ready,
		[Token(Token = "0x4001088")]
		Aim,
		[Token(Token = "0x4001089")]
		CancelAim,
		[Token(Token = "0x400108A")]
		PreTeleport,
		[Token(Token = "0x400108B")]
		CancelTeleport,
		[Token(Token = "0x400108C")]
		Teleporting,
		[Token(Token = "0x400108D")]
		PostTeleport
	}

	[Token(Token = "0x2000335")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x400108F")]
		None,
		[Token(Token = "0x4001090")]
		Aim,
		[Token(Token = "0x4001091")]
		PreTeleport,
		[Token(Token = "0x4001092")]
		Teleport
	}

	[Token(Token = "0x2000336")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4001094")]
		Point,
		[Token(Token = "0x4001095")]
		Sphere,
		[Token(Token = "0x4001096")]
		Capsule
	}

	[Token(Token = "0x2000337")]
	public class AimData
	{
		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFD990", Offset = "0xAFD990")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000083")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0x1EF0018", Offset = "0x1EF0018", VA = "0x1EF0018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB018F0", Offset = "0xB018F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A3")]
			[Address(RVA = "0x1EF0020", Offset = "0x1EF0020", VA = "0x1EF0020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01900", Offset = "0xB01900")]
			private set
			{
			}
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x1EEFFA4", Offset = "0x1EEFFA4", VA = "0x1EEFFA4")]
		public AimData()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x1EF0028", Offset = "0x1EF0028", VA = "0x1EF0028")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA558", Offset = "0xAFA558")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000084")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0x1EEFDF0", Offset = "0x1EEFDF0", VA = "0x1EEFDF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000085")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0x1EEFE58", Offset = "0x1EEFE58", VA = "0x1EEFE58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x1EEE2F4", Offset = "0x1EEE2F4", VA = "0x1EEE2F4")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x1EEFD08", Offset = "0x1EEFD08", VA = "0x1EEFD08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x1EEFD0C", Offset = "0x1EEFD0C", VA = "0x1EEFD0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x1EEFDF8", Offset = "0x1EEFDF8", VA = "0x1EEFDF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000339")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA568", Offset = "0xAFA568")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000086")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0x1EEF7D0", Offset = "0x1EEF7D0", VA = "0x1EEF7D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0x1EEF838", Offset = "0x1EEF838", VA = "0x1EEF838", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x1EEE7DC", Offset = "0x1EEE7DC", VA = "0x1EEE7DC")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x1EEF698", Offset = "0x1EEF698", VA = "0x1EEF698", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x1EEF69C", Offset = "0x1EEF69C", VA = "0x1EEF69C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x1EEF7D8", Offset = "0x1EEF7D8", VA = "0x1EEF7D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA578", Offset = "0xAFA578")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000088")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013B4")]
			[Address(RVA = "0x1EEF8E4", Offset = "0x1EEF8E4", VA = "0x1EEF8E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000089")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013B6")]
			[Address(RVA = "0x1EEF94C", Offset = "0x1EEF94C", VA = "0x1EEF94C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x1EEE9C0", Offset = "0x1EEE9C0", VA = "0x1EEE9C0")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x1EEF840", Offset = "0x1EEF840", VA = "0x1EEF840", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x1EEF844", Offset = "0x1EEF844", VA = "0x1EEF844", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x1EEF8EC", Offset = "0x1EEF8EC", VA = "0x1EEF8EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA588", Offset = "0xAFA588")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700008A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0x1EEFC98", Offset = "0x1EEFC98", VA = "0x1EEFC98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0x1EEFD00", Offset = "0x1EEFD00", VA = "0x1EEFD00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x1EEEBA4", Offset = "0x1EEEBA4", VA = "0x1EEEBA4")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x1EEFBC0", Offset = "0x1EEFBC0", VA = "0x1EEFBC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x1EEFBC4", Offset = "0x1EEFBC4", VA = "0x1EEFBC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x1EEFCA0", Offset = "0x1EEFCA0", VA = "0x1EEFCA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA598", Offset = "0xAFA598")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700008C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x1EEF9F8", Offset = "0x1EEF9F8", VA = "0x1EEF9F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0x1EEFA60", Offset = "0x1EEFA60", VA = "0x1EEFA60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x1EEED88", Offset = "0x1EEED88", VA = "0x1EEED88")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x1EEF954", Offset = "0x1EEF954", VA = "0x1EEF954", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x1EEF958", Offset = "0x1EEF958", VA = "0x1EEF958", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x1EEFA00", Offset = "0x1EEFA00", VA = "0x1EEFA00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA5A8", Offset = "0xAFA5A8")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700008E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013C6")]
			[Address(RVA = "0x1EEFF34", Offset = "0x1EEFF34", VA = "0x1EEFF34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013C8")]
			[Address(RVA = "0x1EEFF9C", Offset = "0x1EEFF9C", VA = "0x1EEFF9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x1EEEF6C", Offset = "0x1EEEF6C", VA = "0x1EEEF6C")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x1EEFE60", Offset = "0x1EEFE60", VA = "0x1EEFE60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x1EEFE64", Offset = "0x1EEFE64", VA = "0x1EEFE64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x1EEFF3C", Offset = "0x1EEFF3C", VA = "0x1EEFF3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA5B8", Offset = "0xAFA5B8")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000090")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0x1EEFB50", Offset = "0x1EEFB50", VA = "0x1EEFB50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0x1EEFBB8", Offset = "0x1EEFBB8", VA = "0x1EEFBB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x1EEF150", Offset = "0x1EEF150", VA = "0x1EEF150")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x1EEFA68", Offset = "0x1EEFA68", VA = "0x1EEFA68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x1EEFA6C", Offset = "0x1EEFA6C", VA = "0x1EEFA6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x1EEFB58", Offset = "0x1EEFB58", VA = "0x1EEFB58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB718", Offset = "0xAFB718")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB750", Offset = "0xAFB750")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB788", Offset = "0xAFB788")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB7C0", Offset = "0xAFB7C0")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB7F8", Offset = "0xAFB7F8")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB830", Offset = "0xAFB830")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB868", Offset = "0xAFB868")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB8A0", Offset = "0xAFB8A0")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB8D8", Offset = "0xAFB8D8")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB8E8", Offset = "0xAFB8E8")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB920", Offset = "0xAFB920")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB968", Offset = "0xAFB968")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB978", Offset = "0xAFB978")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB9B0", Offset = "0xAFB9B0")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFB9E8", Offset = "0xAFB9E8")]
	public float AimCollisionRadius;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBA20", Offset = "0xAFBA20")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700000C")]
	public States CurrentState
	{
		[Token(Token = "0x6000164")]
		[Address(RVA = "0x1EED838", Offset = "0x1EED838", VA = "0x1EED838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDC10", Offset = "0xAFDC10")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000165")]
		[Address(RVA = "0x1EED840", Offset = "0x1EED840", VA = "0x1EED840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDC20", Offset = "0xAFDC20")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000169")]
		[Address(RVA = "0x1EEDA70", Offset = "0x1EEDA70", VA = "0x1EEDA70")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700000E")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x600016A")]
		[Address(RVA = "0x1EEDA98", Offset = "0x1EEDA98", VA = "0x1EEDA98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDC50", Offset = "0xAFDC50")]
		get
		{
			return null;
		}
		[Token(Token = "0x600016B")]
		[Address(RVA = "0x1EEDAA0", Offset = "0x1EEDAA0", VA = "0x1EEDAA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDC60", Offset = "0xAFDC60")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000166")]
		[Address(RVA = "0x1EED848", Offset = "0x1EED848", VA = "0x1EED848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDC30", Offset = "0xAFDC30")]
		add
		{
		}
		[Token(Token = "0x6000167")]
		[Address(RVA = "0x1EED8EC", Offset = "0x1EED8EC", VA = "0x1EED8EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDC40", Offset = "0xAFDC40")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000175")]
		[Address(RVA = "0x1EEE1AC", Offset = "0x1EEE1AC", VA = "0x1EEE1AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDCA8", Offset = "0xAFDCA8")]
		add
		{
		}
		[Token(Token = "0x6000176")]
		[Address(RVA = "0x1EEE250", Offset = "0x1EEE250", VA = "0x1EEE250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDCB8", Offset = "0xAFDCB8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000178")]
		[Address(RVA = "0x1EEE320", Offset = "0x1EEE320", VA = "0x1EEE320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDD2C", Offset = "0xAFDD2C")]
		add
		{
		}
		[Token(Token = "0x6000179")]
		[Address(RVA = "0x1EEE3C4", Offset = "0x1EEE3C4", VA = "0x1EEE3C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDD3C", Offset = "0xAFDD3C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x600017A")]
		[Address(RVA = "0x1EEE468", Offset = "0x1EEE468", VA = "0x1EEE468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDD4C", Offset = "0xAFDD4C")]
		add
		{
		}
		[Token(Token = "0x600017B")]
		[Address(RVA = "0x1EEE50C", Offset = "0x1EEE50C", VA = "0x1EEE50C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDD5C", Offset = "0xAFDD5C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x600017D")]
		[Address(RVA = "0x1EEE624", Offset = "0x1EEE624", VA = "0x1EEE624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDD6C", Offset = "0xAFDD6C")]
		add
		{
		}
		[Token(Token = "0x600017E")]
		[Address(RVA = "0x1EEE6C8", Offset = "0x1EEE6C8", VA = "0x1EEE6C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDD7C", Offset = "0xAFDD7C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000180")]
		[Address(RVA = "0x1EEE808", Offset = "0x1EEE808", VA = "0x1EEE808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDDF0", Offset = "0xAFDDF0")]
		add
		{
		}
		[Token(Token = "0x6000181")]
		[Address(RVA = "0x1EEE8AC", Offset = "0x1EEE8AC", VA = "0x1EEE8AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDE00", Offset = "0xAFDE00")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000183")]
		[Address(RVA = "0x1EEE9EC", Offset = "0x1EEE9EC", VA = "0x1EEE9EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDE74", Offset = "0xAFDE74")]
		add
		{
		}
		[Token(Token = "0x6000184")]
		[Address(RVA = "0x1EEEA90", Offset = "0x1EEEA90", VA = "0x1EEEA90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDE84", Offset = "0xAFDE84")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x1EEEBD0", Offset = "0x1EEEBD0", VA = "0x1EEEBD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDEF8", Offset = "0xAFDEF8")]
		add
		{
		}
		[Token(Token = "0x6000187")]
		[Address(RVA = "0x1EEEC74", Offset = "0x1EEEC74", VA = "0x1EEEC74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDF08", Offset = "0xAFDF08")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000189")]
		[Address(RVA = "0x1EEEDB4", Offset = "0x1EEEDB4", VA = "0x1EEEDB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDF7C", Offset = "0xAFDF7C")]
		add
		{
		}
		[Token(Token = "0x600018A")]
		[Address(RVA = "0x1EEEE58", Offset = "0x1EEEE58", VA = "0x1EEEE58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFDF8C", Offset = "0xAFDF8C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600018C")]
		[Address(RVA = "0x1EEEF98", Offset = "0x1EEEF98", VA = "0x1EEEF98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE000", Offset = "0xAFE000")]
		add
		{
		}
		[Token(Token = "0x600018D")]
		[Address(RVA = "0x1EEF03C", Offset = "0x1EEF03C", VA = "0x1EEF03C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE010", Offset = "0xAFE010")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x600018F")]
		[Address(RVA = "0x1EEF17C", Offset = "0x1EEF17C", VA = "0x1EEF17C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE084", Offset = "0xAFE084")]
		add
		{
		}
		[Token(Token = "0x6000190")]
		[Address(RVA = "0x1EEF220", Offset = "0x1EEF220", VA = "0x1EEF220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE094", Offset = "0xAFE094")]
		remove
		{
		}
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x1EED508", Offset = "0x1EED508", VA = "0x1EED508")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x1EED52C", Offset = "0x1EED52C", VA = "0x1EED52C")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1EED990", Offset = "0x1EED990", VA = "0x1EED990")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x1EEDAA8", Offset = "0x1EEDAA8", VA = "0x1EEDAA8")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x1EEDE00", Offset = "0x1EEDE00", VA = "0x1EEDE00")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAFDC70", Offset = "0xAFDC70")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x1EEDEB8", Offset = "0x1EEDEB8", VA = "0x1EEDEB8")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x1EEDF80", Offset = "0x1EEDF80", VA = "0x1EEDF80")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x1EEDF9C", Offset = "0x1EEDF9C", VA = "0x1EEDF9C")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x1EEE064", Offset = "0x1EEE064", VA = "0x1EEE064")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x1EEE0A8", Offset = "0x1EEE0A8", VA = "0x1EEE0A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x1EEE104", Offset = "0x1EEE104", VA = "0x1EEE104", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x1EEE1A4", Offset = "0x1EEE1A4", VA = "0x1EEE1A4", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x1EEE134", Offset = "0x1EEE134", VA = "0x1EEE134")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFDCC8", Offset = "0xAFDCC8")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x1EEE5B0", Offset = "0x1EEE5B0", VA = "0x1EEE5B0")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x1EEE76C", Offset = "0x1EEE76C", VA = "0x1EEE76C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFDD8C", Offset = "0xAFDD8C")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x1EEE950", Offset = "0x1EEE950", VA = "0x1EEE950")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFDE10", Offset = "0xAFDE10")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x1EEEB34", Offset = "0x1EEEB34", VA = "0x1EEEB34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFDE94", Offset = "0xAFDE94")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x1EEED18", Offset = "0x1EEED18", VA = "0x1EEED18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFDF18", Offset = "0xAFDF18")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1EEEEFC", Offset = "0x1EEEEFC", VA = "0x1EEEEFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFDF9C", Offset = "0xAFDF9C")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x1EEF0E0", Offset = "0x1EEF0E0", VA = "0x1EEF0E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE020", Offset = "0xAFE020")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x1EEF2C4", Offset = "0x1EEF2C4", VA = "0x1EEF2C4")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x1EEF408", Offset = "0x1EEF408", VA = "0x1EEF408")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x1EEF43C", Offset = "0x1EEF43C", VA = "0x1EEF43C")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x1EEF55C", Offset = "0x1EEF55C", VA = "0x1EEF55C")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x1EEF688", Offset = "0x1EEF688", VA = "0x1EEF688")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200006C")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000196")]
		[Address(RVA = "0xD4F070", Offset = "0xD4F070", VA = "0xD4F070")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE0A4", Offset = "0xAFE0A4")]
		add
		{
		}
		[Token(Token = "0x6000197")]
		[Address(RVA = "0xD4F114", Offset = "0xD4F114", VA = "0xD4F114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE0B4", Offset = "0xAFE0B4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000198")]
		[Address(RVA = "0xD4F1B8", Offset = "0xD4F1B8", VA = "0xD4F1B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE0C4", Offset = "0xAFE0C4")]
		add
		{
		}
		[Token(Token = "0x6000199")]
		[Address(RVA = "0xD4F25C", Offset = "0xD4F25C", VA = "0xD4F25C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE0D4", Offset = "0xAFE0D4")]
		remove
		{
		}
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xD4F300", Offset = "0xD4F300", VA = "0xD4F300")]
	private void Awake()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xD4F3A8", Offset = "0xD4F3A8", VA = "0xD4F3A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xD4F3AC", Offset = "0xD4F3AC", VA = "0xD4F3AC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xD4F420", Offset = "0xD4F420", VA = "0xD4F420")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xD4F590", Offset = "0xD4F590", VA = "0xD4F590")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xD4F874", Offset = "0xD4F874", VA = "0xD4F874")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xD4FAC0", Offset = "0xD4FAC0", VA = "0xD4FAC0")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200006D")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xDFC838", Offset = "0xDFC838", VA = "0xDFC838", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xDFC8CC", Offset = "0xDFC8CC", VA = "0xDFC8CC", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60001A3")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xDFC99C", Offset = "0xDFC99C", VA = "0xDFC99C")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200006E")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBB18", Offset = "0xAFBB18")]
	public float Range;

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xDFC9AC", Offset = "0xDFC9AC", VA = "0xDFC9AC", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xDFCB08", Offset = "0xDFCB08", VA = "0xDFCB08")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200006F")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBB50", Offset = "0xAFBB50")]
	public float Range;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBB88", Offset = "0xAFBB88")]
	public float MinimumElevation;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBBC0", Offset = "0xAFBBC0")]
	public float Gravity;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBBF8", Offset = "0xAFBBF8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFBBF8", Offset = "0xAFBBF8")]
	public float AimVelocity;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBC54", Offset = "0xAFBC54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFBC54", Offset = "0xAFBC54")]
	public float AimStep;

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xDFCB18", Offset = "0xDFCB18", VA = "0xDFCB18", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xDFCD64", Offset = "0xDFCD64", VA = "0xDFCD64")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000070")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBCAC", Offset = "0xAFBCAC")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xDFCD78", Offset = "0xDFCD78", VA = "0xDFCD78")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xDFCE5C", Offset = "0xDFCE5C", VA = "0xDFCE5C")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xDFCE8C", Offset = "0xDFCE8C", VA = "0xDFCE8C")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xDFCEBC", Offset = "0xDFCEBC", VA = "0xDFCEBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xDFCF5C", Offset = "0xDFCF5C", VA = "0xDFCF5C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xDFCFC8", Offset = "0xDFCFC8", VA = "0xDFCFC8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xDFD030", Offset = "0xDFD030", VA = "0xDFD030")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000071")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFBCE4", Offset = "0xAFBCE4")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBCF4", Offset = "0xAFBCF4")]
	public Transform PositionIndicator;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBD2C", Offset = "0xAFBD2C")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBD64", Offset = "0xAFBD64")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700000F")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60001B0")]
		[Address(RVA = "0xDFD14C", Offset = "0xDFD14C", VA = "0xDFD14C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE0E4", Offset = "0xAFE0E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xDFD154", Offset = "0xDFD154", VA = "0xDFD154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE0F4", Offset = "0xAFE0F4")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0xDFD304", Offset = "0xDFD304", VA = "0xDFD304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE104", Offset = "0xAFE104")]
		add
		{
		}
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0xDFD3A8", Offset = "0xDFD3A8", VA = "0xDFD3A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE114", Offset = "0xAFE114")]
		remove
		{
		}
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xDFD160", Offset = "0xDFD160", VA = "0xDFD160")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xDFD1E8", Offset = "0xDFD1E8", VA = "0xDFD1E8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xDFD2C0", Offset = "0xDFD2C0", VA = "0xDFD2C0")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xDFD300", Offset = "0xDFD300", VA = "0xDFD300")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xDFD44C", Offset = "0xDFD44C", VA = "0xDFD44C")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xDFD4B4", Offset = "0xDFD4B4", VA = "0xDFD4B4")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xDFD4D4", Offset = "0xDFD4D4", VA = "0xDFD4D4", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000072")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA5C8", Offset = "0xAFA5C8")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000092")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013D2")]
			[Address(RVA = "0xDFDB98", Offset = "0xDFDB98", VA = "0xDFDB98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013D4")]
			[Address(RVA = "0xDFDC00", Offset = "0xDFDC00", VA = "0xDFDC00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xDFD8E4", Offset = "0xDFD8E4", VA = "0xDFD8E4")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xDFDB08", Offset = "0xDFDB08", VA = "0xDFDB08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xDFDB0C", Offset = "0xDFDB0C", VA = "0xDFDB0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xDFDBA0", Offset = "0xDFDBA0", VA = "0xDFDBA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA5D8", Offset = "0xAFA5D8")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000094")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013D8")]
			[Address(RVA = "0xDFDA98", Offset = "0xDFDA98", VA = "0xDFDA98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013DA")]
			[Address(RVA = "0xDFDB00", Offset = "0xDFDB00", VA = "0xDFDB00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xDFD980", Offset = "0xDFD980", VA = "0xDFD980")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xDFDA04", Offset = "0xDFDA04", VA = "0xDFDA04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xDFDA08", Offset = "0xDFDA08", VA = "0xDFDA08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xDFDAA0", Offset = "0xDFDAA0", VA = "0xDFDAA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xDFD6B4", Offset = "0xDFD6B4", VA = "0xDFD6B4")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xDFD760", Offset = "0xDFD760", VA = "0xDFD760", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xDFD7B8", Offset = "0xDFD7B8", VA = "0xDFD7B8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xDFD874", Offset = "0xDFD874", VA = "0xDFD874")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE124", Offset = "0xAFE124")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xDFD910", Offset = "0xDFD910", VA = "0xDFD910")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE188", Offset = "0xAFE188")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001C0")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60001C1")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xDFD9AC", Offset = "0xDFD9AC", VA = "0xDFD9AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE1EC", Offset = "0xAFE1EC")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xDFD9D8", Offset = "0xDFD9D8", VA = "0xDFD9D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE1FC", Offset = "0xAFE1FC")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000073")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFBDAC", Offset = "0xAFBDAC")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBDBC", Offset = "0xAFBDBC")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBDF4", Offset = "0xAFBDF4")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBE2C", Offset = "0xAFBE2C")]
	public bool FastTeleport;

	[Token(Token = "0x17000010")]
	public Transform Pointer
	{
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0xDFDC08", Offset = "0xDFDC08", VA = "0xDFDC08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE20C", Offset = "0xAFE20C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0xDFDC10", Offset = "0xDFDC10", VA = "0xDFDC10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE21C", Offset = "0xAFE21C")]
		private set
		{
		}
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xDFDC18", Offset = "0xDFDC18", VA = "0xDFDC18", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xDFDD74", Offset = "0xDFDD74", VA = "0xDFDD74", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xDFDE2C", Offset = "0xDFDE2C", VA = "0xDFDE2C")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000074")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000341")]
	public enum InputModes
	{
		[Token(Token = "0x40010B8")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x40010B9")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x40010BA")]
		ThumbstickTeleport,
		[Token(Token = "0x40010BB")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000342")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x40010BD")]
		A,
		[Token(Token = "0x40010BE")]
		B,
		[Token(Token = "0x40010BF")]
		LeftTrigger,
		[Token(Token = "0x40010C0")]
		LeftThumbstick,
		[Token(Token = "0x40010C1")]
		RightTrigger,
		[Token(Token = "0x40010C2")]
		RightThumbstick,
		[Token(Token = "0x40010C3")]
		X,
		[Token(Token = "0x40010C4")]
		Y
	}

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBE64", Offset = "0xAFBE64")]
	public InputModes InputMode;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBE9C", Offset = "0xAFBE9C")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBED4", Offset = "0xAFBED4")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBF0C", Offset = "0xAFBF0C")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xDFDE30", Offset = "0xDFDE30", VA = "0xDFDE30")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xDFDE34", Offset = "0xDFDE34", VA = "0xDFDE34", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xDFE27C", Offset = "0xDFE27C", VA = "0xDFE27C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xDFE33C", Offset = "0xDFE33C", VA = "0xDFE33C")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000075")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000343")]
	public enum OrientationModes
	{
		[Token(Token = "0x40010C6")]
		HeadRelative,
		[Token(Token = "0x40010C7")]
		ForwardFacing
	}

	[Token(Token = "0x2000344")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA5E8", Offset = "0xAFA5E8")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000096")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0xDFE7CC", Offset = "0xDFE7CC", VA = "0xDFE7CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000097")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0xDFE834", Offset = "0xDFE834", VA = "0xDFE834", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xDFE5A8", Offset = "0xDFE5A8", VA = "0xDFE5A8")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xDFE724", Offset = "0xDFE724", VA = "0xDFE724", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xDFE728", Offset = "0xDFE728", VA = "0xDFE728", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xDFE7D4", Offset = "0xDFE7D4", VA = "0xDFE7D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xDFE3E8", Offset = "0xDFE3E8", VA = "0xDFE3E8")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xDFE49C", Offset = "0xDFE49C", VA = "0xDFE49C")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xDFE4A4", Offset = "0xDFE4A4", VA = "0xDFE4A4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xDFE4F0", Offset = "0xDFE4F0", VA = "0xDFE4F0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xDFE538", Offset = "0xDFE538", VA = "0xDFE538")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE22C", Offset = "0xAFE22C")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001D2")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60001D3")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xDFE5D4", Offset = "0xDFE5D4", VA = "0xDFE5D4")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xDFE6F8", Offset = "0xDFE6F8", VA = "0xDFE6F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE290", Offset = "0xAFE290")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000076")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xDFE83C", Offset = "0xDFE83C", VA = "0xDFE83C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xDFE840", Offset = "0xDFE840", VA = "0xDFE840", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xDFE8BC", Offset = "0xDFE8BC", VA = "0xDFE8BC")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000077")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBF44", Offset = "0xAFBF44")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBF7C", Offset = "0xAFBF7C")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBFB4", Offset = "0xAFBFB4")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFBFEC", Offset = "0xAFBFEC")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xDFE8C0", Offset = "0xDFE8C0", VA = "0xDFE8C0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xDFE930", Offset = "0xDFE930", VA = "0xDFE930", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xDFEDA8", Offset = "0xDFEDA8", VA = "0xDFEDA8")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000078")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFC024", Offset = "0xAFC024")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFC05C", Offset = "0xAFC05C")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFC094", Offset = "0xAFC094")]
	public float RotateStickThreshold;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xDFEDAC", Offset = "0xDFEDAC", VA = "0xDFEDAC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xDFEDF0", Offset = "0xDFEDF0", VA = "0xDFEDF0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xDFF260", Offset = "0xDFF260", VA = "0xDFF260")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000079")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xDFF270", Offset = "0xDFF270", VA = "0xDFF270")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xDFF274", Offset = "0xDFF274", VA = "0xDFF274")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xDFF27C", Offset = "0xDFF27C", VA = "0xDFF27C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xDFF364", Offset = "0xDFF364", VA = "0xDFF364")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xDFF38C", Offset = "0xDFF38C", VA = "0xDFF38C")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200007A")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFC0CC", Offset = "0xAFC0CC")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000011")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0xDFF3A4", Offset = "0xDFF3A4", VA = "0xDFF3A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE2A0", Offset = "0xAFE2A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0xDFF3AC", Offset = "0xDFF3AC", VA = "0xDFF3AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE2B0", Offset = "0xAFE2B0")]
		private set
		{
		}
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xDFC868", Offset = "0xDFC868", VA = "0xDFC868", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xDFC970", Offset = "0xDFC970", VA = "0xDFC970", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xDFF3B4", Offset = "0xDFF3B4", VA = "0xDFF3B4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAFE2C0", Offset = "0xAFE2C0")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xDFCFBC", Offset = "0xDFCFBC", VA = "0xDFCFBC", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xDFD028", Offset = "0xDFD028", VA = "0xDFD028", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xDFC9A4", Offset = "0xDFC9A4", VA = "0xDFC9A4")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x200007B")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000345")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA5F8", Offset = "0xAFA5F8")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000098")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013E4")]
			[Address(RVA = "0xDFFA08", Offset = "0xDFFA08", VA = "0xDFFA08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0xDFFA70", Offset = "0xDFFA70", VA = "0xDFFA70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xDFF604", Offset = "0xDFF604", VA = "0xDFF604")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xDFF79C", Offset = "0xDFF79C", VA = "0xDFF79C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xDFF7A0", Offset = "0xDFF7A0", VA = "0xDFF7A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xDFFA10", Offset = "0xDFFA10", VA = "0xDFFA10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFC0DC", Offset = "0xAFC0DC")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000307")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xDFF47C", Offset = "0xDFF47C", VA = "0xDFF47C")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xDFF540", Offset = "0xDFF540", VA = "0xDFF540", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xDFF56C", Offset = "0xDFF56C", VA = "0xDFF56C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xDFF594", Offset = "0xDFF594", VA = "0xDFF594")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE2F8", Offset = "0xAFE2F8")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xDFF630", Offset = "0xDFF630", VA = "0xDFF630", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60001F1")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xDFF64C", Offset = "0xDFF64C", VA = "0xDFF64C", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xDFF770", Offset = "0xDFF770", VA = "0xDFF770")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE35C", Offset = "0xAFE35C")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200007C")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xDFFA78", Offset = "0xDFFA78", VA = "0xDFFA78")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xDFFAD8", Offset = "0xDFFAD8", VA = "0xDFFAD8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xDFFC5C", Offset = "0xDFFC5C", VA = "0xDFFC5C", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xDFFD4C", Offset = "0xDFFD4C", VA = "0xDFFD4C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAFE36C", Offset = "0xAFE36C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xDFFD50", Offset = "0xDFFD50", VA = "0xDFFD50")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x200007D")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFC114", Offset = "0xAFC114")]
	public float LOSOffset;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFC14C", Offset = "0xAFC14C")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xDFFD5C", Offset = "0xDFFD5C", VA = "0xDFFD5C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xDFFF8C", Offset = "0xDFFF8C", VA = "0xDFFF8C")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x200007E")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xDFFF98", Offset = "0xDFFF98", VA = "0xDFFF98", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xE0011C", Offset = "0xE0011C", VA = "0xE0011C")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x200007F")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xE00120", Offset = "0xE00120", VA = "0xE00120", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xE001B8", Offset = "0xE001B8", VA = "0xE001B8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60001FF")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xE0024C", Offset = "0xE0024C", VA = "0xE0024C")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000080")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000346")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA608", Offset = "0xAFA608")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x1700009A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0xE005B4", Offset = "0xE005B4", VA = "0xE005B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013EC")]
			[Address(RVA = "0xE0061C", Offset = "0xE0061C", VA = "0xE0061C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xE002F0", Offset = "0xE002F0", VA = "0xE002F0")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xE004B4", Offset = "0xE004B4", VA = "0xE004B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xE004B8", Offset = "0xE004B8", VA = "0xE004B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xE005BC", Offset = "0xE005BC", VA = "0xE005BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFC184", Offset = "0xAFC184")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFC184", Offset = "0xAFC184")]
	public float TransitionDuration;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFC1DC", Offset = "0xAFC1DC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFC1DC", Offset = "0xAFC1DC")]
	public float TeleportDelay;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFC230", Offset = "0xAFC230")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xE00254", Offset = "0xE00254", VA = "0xE00254", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xE00280", Offset = "0xE00280", VA = "0xE00280")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE3A4", Offset = "0xAFE3A4")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xE0031C", Offset = "0xE0031C", VA = "0xE0031C")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000081")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000204")]
	[Address(RVA = "0xE00624", Offset = "0xE00624", VA = "0xE00624", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xE00640", Offset = "0xE00640", VA = "0xE00640")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000082")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000347")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA618", Offset = "0xAFA618")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700009C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013F0")]
			[Address(RVA = "0xE0088C", Offset = "0xE0088C", VA = "0xE0088C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013F2")]
			[Address(RVA = "0xE008F4", Offset = "0xE008F4", VA = "0xE008F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xE006E4", Offset = "0xE006E4", VA = "0xE006E4")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xE00758", Offset = "0xE00758", VA = "0xE00758", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xE0075C", Offset = "0xE0075C", VA = "0xE0075C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xE00894", Offset = "0xE00894", VA = "0xE00894", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFC268", Offset = "0xAFC268")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFC268", Offset = "0xAFC268")]
	public float TransitionDuration;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xE00648", Offset = "0xE00648", VA = "0xE00648", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xE00674", Offset = "0xE00674", VA = "0xE00674")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE408", Offset = "0xAFE408")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xE00710", Offset = "0xE00710", VA = "0xE00710")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000083")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000348")]
	public enum PlabackState
	{
		[Token(Token = "0x40010DA")]
		Idle = 1,
		[Token(Token = "0x40010DB")]
		Preparing,
		[Token(Token = "0x40010DC")]
		Buffering,
		[Token(Token = "0x40010DD")]
		Ready,
		[Token(Token = "0x40010DE")]
		Ended
	}

	[Token(Token = "0x2000349")]
	public enum StereoMode
	{
		[Token(Token = "0x40010E0")]
		Unknown = -1,
		[Token(Token = "0x40010E1")]
		Mono,
		[Token(Token = "0x40010E2")]
		TopBottom,
		[Token(Token = "0x40010E3")]
		LeftRight,
		[Token(Token = "0x40010E4")]
		Mesh
	}

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000012")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000209")]
		[Address(RVA = "0xE14E94", Offset = "0xE14E94", VA = "0xE14E94")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000013")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600020A")]
		[Address(RVA = "0xE15150", Offset = "0xE15150", VA = "0xE15150")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000014")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0xE117CC", Offset = "0xE117CC", VA = "0xE117CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000015")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0xE12DC8", Offset = "0xE12DC8", VA = "0xE12DC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000016")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x600020D")]
		[Address(RVA = "0xE15394", Offset = "0xE15394", VA = "0xE15394")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000017")]
	public static long Duration
	{
		[Token(Token = "0x600020E")]
		[Address(RVA = "0xE12FAC", Offset = "0xE12FAC", VA = "0xE12FAC")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000018")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x600020F")]
		[Address(RVA = "0xE11DB4", Offset = "0xE11DB4", VA = "0xE11DB4")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000019")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000210")]
		[Address(RVA = "0xE11BCC", Offset = "0xE11BCC", VA = "0xE11BCC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700001A")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000211")]
		[Address(RVA = "0xE11CC0", Offset = "0xE11CC0", VA = "0xE11CC0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700001B")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000212")]
		[Address(RVA = "0xE12EB8", Offset = "0xE12EB8", VA = "0xE12EB8")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000213")]
		[Address(RVA = "0xE1258C", Offset = "0xE1258C", VA = "0xE1258C")]
		set
		{
		}
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xE1360C", Offset = "0xE1360C", VA = "0xE1360C")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xE13350", Offset = "0xE13350", VA = "0xE13350")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xE1221C", Offset = "0xE1221C", VA = "0xE1221C")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xE123A0", Offset = "0xE123A0", VA = "0xE123A0")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xE13178", Offset = "0xE13178", VA = "0xE13178")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xE13800", Offset = "0xE13800", VA = "0xE13800")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xE12C0C", Offset = "0xE12C0C", VA = "0xE12C0C")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000084")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x600021C")]
		[Address(RVA = "0xE93C50", Offset = "0xE93C50", VA = "0xE93C50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE46C", Offset = "0xAFE46C")]
		add
		{
		}
		[Token(Token = "0x600021D")]
		[Address(RVA = "0xE93CF4", Offset = "0xE93CF4", VA = "0xE93CF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE47C", Offset = "0xAFE47C")]
		remove
		{
		}
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xE93D98", Offset = "0xE93D98", VA = "0xE93D98", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xE93DAC", Offset = "0xE93DAC", VA = "0xE93DAC")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000085")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x200034A")]
	public enum ButtonType
	{
		[Token(Token = "0x40010E6")]
		Play,
		[Token(Token = "0x40010E7")]
		Pause,
		[Token(Token = "0x40010E8")]
		FastForward,
		[Token(Token = "0x40010E9")]
		Rewind,
		[Token(Token = "0x40010EA")]
		SkipForward,
		[Token(Token = "0x40010EB")]
		SkipBack,
		[Token(Token = "0x40010EC")]
		Stop
	}

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700001C")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000220")]
		[Address(RVA = "0xE0B400", Offset = "0xE0B400", VA = "0xE0B400")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000221")]
		[Address(RVA = "0xE0B408", Offset = "0xE0B408", VA = "0xE0B408")]
		set
		{
		}
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xE0B42C", Offset = "0xE0B42C", VA = "0xE0B42C", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xE0C8F8", Offset = "0xE0C8F8", VA = "0xE0C8F8")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000086")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x200034B")]
	public enum VideoShape
	{
		[Token(Token = "0x40010EE")]
		_360,
		[Token(Token = "0x40010EF")]
		_180,
		[Token(Token = "0x40010F0")]
		Quad
	}

	[Token(Token = "0x200034C")]
	public enum VideoStereo
	{
		[Token(Token = "0x40010F2")]
		Mono,
		[Token(Token = "0x40010F3")]
		TopBottom,
		[Token(Token = "0x40010F4")]
		LeftRight,
		[Token(Token = "0x40010F5")]
		BottomTop
	}

	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA628", Offset = "0xAFA628")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700009E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013F6")]
			[Address(RVA = "0xE13AC8", Offset = "0xE13AC8", VA = "0xE13AC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013F8")]
			[Address(RVA = "0xE13B30", Offset = "0xE13B30", VA = "0xE13B30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xE11F18", Offset = "0xE11F18", VA = "0xE11F18")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xE13944", Offset = "0xE13944", VA = "0xE13944", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xE13948", Offset = "0xE13948", VA = "0xE13948", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xE13AD0", Offset = "0xE13AD0", VA = "0xE13AD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA638", Offset = "0xAFA638")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xE12180", Offset = "0xE12180", VA = "0xE12180")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xE13538", Offset = "0xE13538", VA = "0xE13538")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFC2F0", Offset = "0xAFC2F0")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFC300", Offset = "0xAFC300")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFC310", Offset = "0xAFC310")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700001D")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000224")]
		[Address(RVA = "0xE11580", Offset = "0xE11580", VA = "0xE11580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE48C", Offset = "0xAFE48C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000225")]
		[Address(RVA = "0xE11588", Offset = "0xE11588", VA = "0xE11588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE49C", Offset = "0xAFE49C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public long Duration
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0xE11594", Offset = "0xE11594", VA = "0xE11594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE4AC", Offset = "0xAFE4AC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000227")]
		[Address(RVA = "0xE1159C", Offset = "0xE1159C", VA = "0xE1159C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE4BC", Offset = "0xAFE4BC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000228")]
		[Address(RVA = "0xE115A4", Offset = "0xE115A4", VA = "0xE115A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE4CC", Offset = "0xAFE4CC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000229")]
		[Address(RVA = "0xE115AC", Offset = "0xE115AC", VA = "0xE115AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE4DC", Offset = "0xAFE4DC")]
		private set
		{
		}
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xE115B4", Offset = "0xE115B4", VA = "0xE115B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xE11834", Offset = "0xE11834", VA = "0xE11834")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xE1189C", Offset = "0xE1189C", VA = "0xE1189C")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xE11EA8", Offset = "0xE11EA8", VA = "0xE11EA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE4EC", Offset = "0xAFE4EC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xE11F44", Offset = "0xE11F44", VA = "0xE11F44")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xE12188", Offset = "0xE12188", VA = "0xE12188")]
	public void Play()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xE12310", Offset = "0xE12310", VA = "0xE12310")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xE12494", Offset = "0xE12494", VA = "0xE12494")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xE126CC", Offset = "0xE126CC", VA = "0xE126CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xE130A0", Offset = "0xE130A0", VA = "0xE130A0")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xE132C0", Offset = "0xE132C0", VA = "0xE132C0")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xE13444", Offset = "0xE13444", VA = "0xE13444")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xE13528", Offset = "0xE13528", VA = "0xE13528")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000087")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200034F")]
	private enum PlaybackState
	{
		[Token(Token = "0x40010FD")]
		Playing,
		[Token(Token = "0x40010FE")]
		Paused,
		[Token(Token = "0x40010FF")]
		Rewinding,
		[Token(Token = "0x4001100")]
		FastForwarding
	}

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xE13B38", Offset = "0xE13B38", VA = "0xE13B38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xE13E34", Offset = "0xE13E34", VA = "0xE13E34")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xE14010", Offset = "0xE14010", VA = "0xE14010")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xE14144", Offset = "0xE14144", VA = "0xE14144")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xE1424C", Offset = "0xE1424C", VA = "0xE1424C")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xE14118", Offset = "0xE14118", VA = "0xE14118")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xE14314", Offset = "0xE14314", VA = "0xE14314")]
	private void Update()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xE13D28", Offset = "0xE13D28", VA = "0xE13D28")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xE146A8", Offset = "0xE146A8", VA = "0xE146A8")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x2000088")]
public static class VectorUtil
{
	[Token(Token = "0x6000240")]
	[Address(RVA = "0xE06D80", Offset = "0xE06D80", VA = "0xE06D80")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000089")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x4000352")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x4000353")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xE85A5C", Offset = "0xE85A5C", VA = "0xE85A5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xE85D7C", Offset = "0xE85D7C", VA = "0xE85D7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xE85F9C", Offset = "0xE85F9C", VA = "0xE85F9C")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xE860D8", Offset = "0xE860D8", VA = "0xE860D8")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xE86218", Offset = "0xE86218", VA = "0xE86218")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xE8637C", Offset = "0xE8637C", VA = "0xE8637C")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x200008A")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x400035C")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x1F09414", Offset = "0x1F09414", VA = "0x1F09414")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x1F09468", Offset = "0x1F09468", VA = "0x1F09468")]
	private void Start()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1F0946C", Offset = "0x1F0946C", VA = "0x1F0946C")]
	private void Update()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1F09470", Offset = "0x1F09470", VA = "0x1F09470")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1F09664", Offset = "0x1F09664", VA = "0x1F09664")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x1F09844", Offset = "0x1F09844", VA = "0x1F09844")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x200008B")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x1EF9B88", Offset = "0x1EF9B88", VA = "0x1EF9B88")]
	private void Start()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x1EF9F60", Offset = "0x1EF9F60", VA = "0x1EF9F60")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x1EFA018", Offset = "0x1EFA018", VA = "0x1EFA018")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x1EFA218", Offset = "0x1EFA218", VA = "0x1EFA218")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x1EFA300", Offset = "0x1EFA300", VA = "0x1EFA300")]
	private void Update()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x1EFA3DC", Offset = "0x1EFA3DC", VA = "0x1EFA3DC")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x1EFA448", Offset = "0x1EFA448", VA = "0x1EFA448")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x1EFA450", Offset = "0x1EFA450", VA = "0x1EFA450")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE560", Offset = "0xAFE560")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x1EFA4AC", Offset = "0x1EFA4AC", VA = "0x1EFA4AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE570", Offset = "0xAFE570")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x1EFA508", Offset = "0x1EFA508", VA = "0x1EFA508")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE580", Offset = "0xAFE580")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x1EFA564", Offset = "0x1EFA564", VA = "0x1EFA564")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE590", Offset = "0xAFE590")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x200008C")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x6000258")]
	[Address(RVA = "0xE83580", Offset = "0xE83580", VA = "0xE83580")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x200008D")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xD4905C", Offset = "0xD4905C", VA = "0xD4905C")]
	private void Start()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xD490F8", Offset = "0xD490F8", VA = "0xD490F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xD491DC", Offset = "0xD491DC", VA = "0xD491DC")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xD49240", Offset = "0xD49240", VA = "0xD49240")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x200008E")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x600025D")]
	[Address(RVA = "0xDF9A84", Offset = "0xDF9A84", VA = "0xDF9A84")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x200008F")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA648", Offset = "0xAFA648")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x170000A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0x1F47ACC", Offset = "0x1F47ACC", VA = "0x1F47ACC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001400")]
			[Address(RVA = "0x1F47B34", Offset = "0x1F47B34", VA = "0x1F47B34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x1F4797C", Offset = "0x1F4797C", VA = "0x1F4797C")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x1F479B0", Offset = "0x1F479B0", VA = "0x1F479B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x1F479B4", Offset = "0x1F479B4", VA = "0x1F479B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x1F47AD4", Offset = "0x1F47AD4", VA = "0x1F47AD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x1F47680", Offset = "0x1F47680", VA = "0x1F47680")]
	private void Awake()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x1F47780", Offset = "0x1F47780", VA = "0x1F47780")]
	private void Update()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x1F47710", Offset = "0x1F47710", VA = "0x1F47710")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE5A0", Offset = "0xAFE5A0")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x1F479A8", Offset = "0x1F479A8", VA = "0x1F479A8")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000090")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFC340", Offset = "0xAFC340")]
	public int SubdivisionsU;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFC35C", Offset = "0xAFC35C")]
	public int SubdivisionsV;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x1F2747C", Offset = "0x1F2747C", VA = "0x1F2747C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x1F27F34", Offset = "0x1F27F34", VA = "0x1F27F34")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000091")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000020")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000264")]
		[Address(RVA = "0x1EECE3C", Offset = "0x1EECE3C", VA = "0x1EECE3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x1EECE94", Offset = "0x1EECE94", VA = "0x1EECE94")]
	public void Start()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x1EED1F8", Offset = "0x1EED1F8", VA = "0x1EED1F8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x1EED2DC", Offset = "0x1EED2DC", VA = "0x1EED2DC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAFE604", Offset = "0xAFE604")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000268")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000269")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x600026A")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x600026B")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x600026C")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x600026D")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x600026E")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x600026F")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x1EED344", Offset = "0x1EED344", VA = "0x1EED344")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x1EED380", Offset = "0x1EED380", VA = "0x1EED380")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x1EED3F4", Offset = "0x1EED3F4", VA = "0x1EED3F4")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x1EED550", Offset = "0x1EED550", VA = "0x1EED550")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x1EED624", Offset = "0x1EED624", VA = "0x1EED624")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x1EED104", Offset = "0x1EED104", VA = "0x1EED104")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x1EED6E4", Offset = "0x1EED6E4", VA = "0x1EED6E4")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x1EED74C", Offset = "0x1EED74C", VA = "0x1EED74C")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x1EED830", Offset = "0x1EED830", VA = "0x1EED830")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000092")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAF9E0C", Offset = "0xAF9E0C")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000351")]
	public enum DrawMode
	{
		[Token(Token = "0x4001105")]
		Opaque,
		[Token(Token = "0x4001106")]
		OpaqueWithClip,
		[Token(Token = "0x4001107")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4001108")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000021")]
	public bool overlayEnabled
	{
		[Token(Token = "0x600027F")]
		[Address(RVA = "0xE17014", Offset = "0xE17014", VA = "0xE17014")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000280")]
		[Address(RVA = "0xE170A8", Offset = "0xE170A8", VA = "0xE170A8")]
		set
		{
		}
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xE159A4", Offset = "0xE159A4", VA = "0xE159A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xE16614", Offset = "0xE16614", VA = "0xE16614")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xE16698", Offset = "0xE16698", VA = "0xE16698")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xE1678C", Offset = "0xE1678C", VA = "0xE1678C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xE16880", Offset = "0xE16880", VA = "0xE16880", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xE16A84", Offset = "0xE16A84", VA = "0xE16A84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xE17178", Offset = "0xE17178", VA = "0xE17178")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000093")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xE869D4", Offset = "0xE869D4", VA = "0xE869D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xE86B50", Offset = "0xE86B50", VA = "0xE86B50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xE86D08", Offset = "0xE86D08", VA = "0xE86D08")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xE86D10", Offset = "0xE86D10", VA = "0xE86D10")]
	public void Release()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xE86CF8", Offset = "0xE86CF8", VA = "0xE86CF8")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xE86D18", Offset = "0xE86D18", VA = "0xE86D18")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x2000094")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x2000352")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA658", Offset = "0xAFA658")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x170000A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001404")]
			[Address(RVA = "0xE924D0", Offset = "0xE924D0", VA = "0xE924D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001406")]
			[Address(RVA = "0xE92538", Offset = "0xE92538", VA = "0xE92538", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xE92334", Offset = "0xE92334", VA = "0xE92334")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xE92394", Offset = "0xE92394", VA = "0xE92394", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xE92398", Offset = "0xE92398", VA = "0xE92398", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xE924D8", Offset = "0xE924D8", VA = "0xE924D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA668", Offset = "0xAFA668")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x170000A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600140A")]
			[Address(RVA = "0xE926E4", Offset = "0xE926E4", VA = "0xE926E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600140C")]
			[Address(RVA = "0xE9274C", Offset = "0xE9274C", VA = "0xE9274C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xE92360", Offset = "0xE92360", VA = "0xE92360")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xE92540", Offset = "0xE92540", VA = "0xE92540", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xE92544", Offset = "0xE92544", VA = "0xE92544", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xE926EC", Offset = "0xE926EC", VA = "0xE926EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xE91DC8", Offset = "0xE91DC8", VA = "0xE91DC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xE9200C", Offset = "0xE9200C", VA = "0xE9200C")]
	private void Update()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xE92068", Offset = "0xE92068", VA = "0xE92068")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xE921D0", Offset = "0xE921D0", VA = "0xE921D0")]
	public void Release()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xE92294", Offset = "0xE92294", VA = "0xE92294")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE63C", Offset = "0xAFE63C")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xE92114", Offset = "0xE92114", VA = "0xE92114")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE6A0", Offset = "0xAFE6A0")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xE9238C", Offset = "0xE9238C", VA = "0xE9238C")]
	public BrushController()
	{
	}
}
[Token(Token = "0x2000095")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x6000290")]
	[Address(RVA = "0x1EFF528", Offset = "0x1EFF528", VA = "0x1EFF528")]
	private void Start()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x1EFF58C", Offset = "0x1EFF58C", VA = "0x1EFF58C")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x2000096")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x1F37580", Offset = "0x1F37580", VA = "0x1F37580")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x1F37760", Offset = "0x1F37760", VA = "0x1F37760")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x1F377F4", Offset = "0x1F377F4", VA = "0x1F377F4")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x1F3785C", Offset = "0x1F3785C", VA = "0x1F3785C")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x2000097")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x2000354")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA678", Offset = "0xAFA678")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x170000A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001410")]
			[Address(RVA = "0x1F38AF4", Offset = "0x1F38AF4", VA = "0x1F38AF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001412")]
			[Address(RVA = "0x1F38B5C", Offset = "0x1F38B5C", VA = "0x1F38B5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x1F387F8", Offset = "0x1F387F8", VA = "0x1F387F8")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x1F388D4", Offset = "0x1F388D4", VA = "0x1F388D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x1F388D8", Offset = "0x1F388D8", VA = "0x1F388D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x1F38AFC", Offset = "0x1F38AFC", VA = "0x1F38AFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x1F37864", Offset = "0x1F37864", VA = "0x1F37864")]
	private void Start()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x1F37AAC", Offset = "0x1F37AAC", VA = "0x1F37AAC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x1F37DDC", Offset = "0x1F37DDC", VA = "0x1F37DDC")]
	private void FindHands()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x1F380F4", Offset = "0x1F380F4", VA = "0x1F380F4")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x1F38464", Offset = "0x1F38464", VA = "0x1F38464")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1F3855C", Offset = "0x1F3855C", VA = "0x1F3855C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1F38718", Offset = "0x1F38718", VA = "0x1F38718")]
	public void Release()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x1F3866C", Offset = "0x1F3866C", VA = "0x1F3866C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE704", Offset = "0xAFE704")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x1F38824", Offset = "0x1F38824", VA = "0x1F38824")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x2000098")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x2000355")]
	public enum ManipulationType
	{
		[Token(Token = "0x4001121")]
		Default,
		[Token(Token = "0x4001122")]
		ForcedHand,
		[Token(Token = "0x4001123")]
		DollyHand,
		[Token(Token = "0x4001124")]
		DollyAttached,
		[Token(Token = "0x4001125")]
		HorizontalScaled,
		[Token(Token = "0x4001126")]
		VerticalScaled,
		[Token(Token = "0x4001127")]
		Menu
	}

	[Token(Token = "0x2000356")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x2000357")]
	public delegate void ReleasedObject();

	[Token(Token = "0x2000358")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xAFC3E8", Offset = "0xAFC3E8")]
	public string ObjectName;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xAFC3F8", Offset = "0xAFC3F8")]
	public string ObjectInstructions;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x1F41044", Offset = "0x1F41044", VA = "0x1F41044")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x1F4130C", Offset = "0x1F4130C", VA = "0x1F4130C")]
	public void Release()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x1F41528", Offset = "0x1F41528", VA = "0x1F41528")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x1F417D0", Offset = "0x1F417D0", VA = "0x1F417D0")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x2000099")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFC418", Offset = "0xAFC418")]
	public int radialDivisions;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFC450", Offset = "0xAFC450")]
	public float borderSize;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFC488", Offset = "0xAFC488")]
	public float fingerTaper;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFC4C0", Offset = "0xAFC4C0")]
	public float fingerTipLength;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFC4F8", Offset = "0xAFC4F8")]
	public float webOffset;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x1F42E38", Offset = "0x1F42E38", VA = "0x1F42E38")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x1F42FF0", Offset = "0x1F42FF0", VA = "0x1F42FF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1F43218", Offset = "0x1F43218", VA = "0x1F43218")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x1F43880", Offset = "0x1F43880", VA = "0x1F43880")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x1F4401C", Offset = "0x1F4401C", VA = "0x1F4401C")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x1F466C0", Offset = "0x1F466C0", VA = "0x1F466C0")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x1F4677C", Offset = "0x1F4677C", VA = "0x1F4677C")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x200009A")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x1F467A0", Offset = "0x1F467A0", VA = "0x1F467A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x1F46AB4", Offset = "0x1F46AB4", VA = "0x1F46AB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x1F46848", Offset = "0x1F46848", VA = "0x1F46848")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x1F46F4C", Offset = "0x1F46F4C", VA = "0x1F46F4C")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x1F474DC", Offset = "0x1F474DC", VA = "0x1F474DC")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x200009B")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x2000359")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA688", Offset = "0xAFA688")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x170000A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001422")]
			[Address(RVA = "0xE1B3B0", Offset = "0xE1B3B0", VA = "0xE1B3B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001424")]
			[Address(RVA = "0xE1B418", Offset = "0xE1B418", VA = "0xE1B418", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xE1ACC8", Offset = "0xE1ACC8", VA = "0xE1ACC8")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xE1B048", Offset = "0xE1B048", VA = "0xE1B048", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xE1B04C", Offset = "0xE1B04C", VA = "0xE1B04C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xE1B3B8", Offset = "0xE1B3B8", VA = "0xE1B3B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xE188D0", Offset = "0xE188D0", VA = "0xE188D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xE18B04", Offset = "0xE18B04", VA = "0xE18B04")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xE199B8", Offset = "0xE199B8", VA = "0xE199B8")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xE1A98C", Offset = "0xE1A98C", VA = "0xE1A98C")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xE18A94", Offset = "0xE18A94", VA = "0xE18A94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE768", Offset = "0xAFE768")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xE18DA8", Offset = "0xE18DA8", VA = "0xE18DA8")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xE19CD8", Offset = "0xE19CD8", VA = "0xE19CD8")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xE1ACF4", Offset = "0xE1ACF4", VA = "0xE1ACF4")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xE1ADCC", Offset = "0xE1ADCC", VA = "0xE1ADCC")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xE1AE2C", Offset = "0xE1AE2C", VA = "0xE1AE2C")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xE1AB98", Offset = "0xE1AB98", VA = "0xE1AB98")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xE1AF48", Offset = "0xE1AF48", VA = "0xE1AF48")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x200009C")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xDEDFF0", Offset = "0xDEDFF0", VA = "0xDEDFF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xDEE144", Offset = "0xDEE144", VA = "0xDEE144")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xDEE210", Offset = "0xDEE210", VA = "0xDEE210")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x200009D")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x200035A")]
	public enum BrushState
	{
		[Token(Token = "0x400112E")]
		Idle,
		[Token(Token = "0x400112F")]
		Inking
	}

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x11CEB2C", Offset = "0x11CEB2C", VA = "0x11CEB2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x11CEB34", Offset = "0x11CEB34", VA = "0x11CEB34")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x11CEEA4", Offset = "0x11CEEA4", VA = "0x11CEEA4")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x11CF074", Offset = "0x11CF074", VA = "0x11CF074")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x11CF234", Offset = "0x11CF234", VA = "0x11CF234")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x11CEDAC", Offset = "0x11CEDAC", VA = "0x11CEDAC")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x11CF314", Offset = "0x11CF314", VA = "0x11CF314")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x200009E")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x11CF398", Offset = "0x11CF398", VA = "0x11CF398")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x11CF4EC", Offset = "0x11CF4EC", VA = "0x11CF4EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x11CF6FC", Offset = "0x11CF6FC", VA = "0x11CF6FC")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x200009F")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x11CF704", Offset = "0x11CF704", VA = "0x11CF704")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x11CF8B4", Offset = "0x11CF8B4", VA = "0x11CF8B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x11CFA88", Offset = "0x11CFA88", VA = "0x11CFA88")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x20000A0")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x200035B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA698", Offset = "0xAFA698")]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x170000AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001428")]
			[Address(RVA = "0x11D0634", Offset = "0x11D0634", VA = "0x11D0634", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600142A")]
			[Address(RVA = "0x11D069C", Offset = "0x11D069C", VA = "0x11D069C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x11D0288", Offset = "0x11D0288", VA = "0x11D0288")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x11D0444", Offset = "0x11D0444", VA = "0x11D0444", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x11D0448", Offset = "0x11D0448", VA = "0x11D0448", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x11D063C", Offset = "0x11D063C", VA = "0x11D063C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA6A8", Offset = "0xAFA6A8")]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x170000AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600142E")]
			[Address(RVA = "0x11D08D4", Offset = "0x11D08D4", VA = "0x11D08D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001430")]
			[Address(RVA = "0x11D093C", Offset = "0x11D093C", VA = "0x11D093C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x11D02B4", Offset = "0x11D02B4", VA = "0x11D02B4")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x11D06A4", Offset = "0x11D06A4", VA = "0x11D06A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x11D06A8", Offset = "0x11D06A8", VA = "0x11D06A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x11D08DC", Offset = "0x11D08DC", VA = "0x11D08DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x11CFA90", Offset = "0x11CFA90", VA = "0x11CFA90")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x11CFD44", Offset = "0x11CFD44", VA = "0x11CFD44")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x11CFFB4", Offset = "0x11CFFB4", VA = "0x11CFFB4")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x11D0124", Offset = "0x11D0124", VA = "0x11D0124")]
	public void Release()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x11D00A4", Offset = "0x11D00A4", VA = "0x11D00A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE7CC", Offset = "0xAFE7CC")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x11D0208", Offset = "0x11D0208", VA = "0x11D0208")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE830", Offset = "0xAFE830")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x11D02E0", Offset = "0x11D02E0", VA = "0x11D02E0")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x11D0300", Offset = "0x11D0300", VA = "0x11D0300")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x11D0320", Offset = "0x11D0320", VA = "0x11D0320")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x11D0340", Offset = "0x11D0340", VA = "0x11D0340")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x11CFCC8", Offset = "0x11CFCC8", VA = "0x11CFCC8")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x11D03A4", Offset = "0x11D03A4", VA = "0x11D03A4")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x11D03B0", Offset = "0x11D03B0", VA = "0x11D03B0")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x11CFD5C", Offset = "0x11CFD5C", VA = "0x11CFD5C")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x11D03BC", Offset = "0x11D03BC", VA = "0x11D03BC")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x20000A1")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x11D0944", Offset = "0x11D0944", VA = "0x11D0944")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x11D09FC", Offset = "0x11D09FC", VA = "0x11D09FC")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x20000A2")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xD48DEC", Offset = "0xD48DEC", VA = "0xD48DEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xD48FB0", Offset = "0xD48FB0", VA = "0xD48FB0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xD49008", Offset = "0xD49008", VA = "0xD49008")]
	public void Release()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xD49054", Offset = "0xD49054", VA = "0xD49054")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x20000A3")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xD4A684", Offset = "0xD4A684", VA = "0xD4A684")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xD4A700", Offset = "0xD4A700", VA = "0xD4A700")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xD4AA9C", Offset = "0xD4AA9C", VA = "0xD4AA9C")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x20000A4")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xD4E094", Offset = "0xD4E094", VA = "0xD4E094")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xD4E5A8", Offset = "0xD4E5A8", VA = "0xD4E5A8")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x20000A5")]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong anchorHandle_;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Canvas canvas_;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform pivot_;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject anchorMenu_;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isSelected_;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isHovered_;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI anchorName_;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject saveIcon_;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image labelImage_;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color labelBaseColor_;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Color labelHighlightColor_;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color labelSelectedColor_;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AnchorUIManager uiManager_;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private MeshRenderer[] renderers_;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int menuIndex_;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Button selectedButton_;

	[Token(Token = "0x17000022")]
	public ulong anchorHandle
	{
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0xE836CC", Offset = "0xE836CC", VA = "0xE836CC")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xE836D4", Offset = "0xE836D4", VA = "0xE836D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xE8379C", Offset = "0xE8379C", VA = "0xE8379C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xE83A70", Offset = "0xE83A70", VA = "0xE83A70")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xE83ADC", Offset = "0xE83ADC", VA = "0xE83ADC")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xE83B44", Offset = "0xE83B44", VA = "0xE83B44")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xE83BAC", Offset = "0xE83BAC", VA = "0xE83BAC")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xE83CB8", Offset = "0xE83CB8", VA = "0xE83CB8")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xE83DDC", Offset = "0xE83DDC", VA = "0xE83DDC")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xE83EF4", Offset = "0xE83EF4", VA = "0xE83EF4")]
	public void SetAnchorHandle(ulong handle)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xE83F9C", Offset = "0xE83F9C", VA = "0xE83F9C")]
	public void ShowSaveIcon()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xE837E0", Offset = "0xE837E0", VA = "0xE837E0")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xE8395C", Offset = "0xE8395C", VA = "0xE8395C")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xE83FBC", Offset = "0xE83FBC", VA = "0xE83FBC")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xE840BC", Offset = "0xE840BC", VA = "0xE840BC")]
	public Anchor()
	{
	}
}
[Token(Token = "0x20000A6")]
public class AnchorHelpers
{
	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera camera;

	[Token(Token = "0x17000023")]
	private static Camera MainCamera
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0xE840C4", Offset = "0xE840C4", VA = "0xE840C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xE84168", Offset = "0xE84168", VA = "0xE84168")]
	public static OVRPose getTransformUnityWorldFromDevice()
	{
		return default(OVRPose);
	}

	[Token(Token = "0x60002F6")]
	public static T ByteArrayToStruct<T>(byte[] bytes) where T : struct
	{
		return (T)null;
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xE841A4", Offset = "0xE841A4", VA = "0xE841A4")]
	public static string UuidToString(byte[] encodedMessage)
	{
		return null;
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xE8440C", Offset = "0xE8440C", VA = "0xE8440C")]
	public static byte[] StringToUuid(string str)
	{
		return null;
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xE84568", Offset = "0xE84568", VA = "0xE84568")]
	private static int GetHexVal(char hex)
	{
		return default(int);
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xE84630", Offset = "0xE84630", VA = "0xE84630")]
	public AnchorHelpers()
	{
	}
}
[Token(Token = "0x20000A7")]
public abstract class AnchorSession : MonoBehaviour
{
	[Token(Token = "0x200035D")]
	public enum StorageLocation
	{
		[Token(Token = "0x4001143")]
		LOCAL
	}

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSession Instance;

	[Token(Token = "0x4000408")]
	public const ulong kInvalidHandle = ulong.MaxValue;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<ulong, Anchor> handleToAnchor;

	[Token(Token = "0x400040A")]
	protected const int maxEvents = 5;

	[Token(Token = "0x400040B")]
	protected const float eventPollingRate = 0.1f;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected GameObject anchorPrefab_;

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xE84638", Offset = "0xE84638", VA = "0xE84638", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xE84384", Offset = "0xE84384", VA = "0xE84384")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xE84720", Offset = "0xE84720", VA = "0xE84720")]
	protected static bool isFlagSet(uint bitset, uint flag)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FE")]
	public abstract ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor);

	[Token(Token = "0x60002FF")]
	public abstract void DestroyAnchor(ulong anchorHandle);

	[Token(Token = "0x6000300")]
	public abstract void SaveAnchor(ulong anchorHandle, StorageLocation location);

	[Token(Token = "0x6000301")]
	public abstract void EraseAnchor(ulong anchorHandle);

	[Token(Token = "0x6000302")]
	public abstract void QueryAllLocalAnchors();

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xE8472C", Offset = "0xE8472C", VA = "0xE8472C")]
	protected AnchorSession()
	{
	}
}
[Token(Token = "0x20000A8")]
public class AnchorSpawner : MonoBehaviour
{
	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSpawner Instance;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject anchorPrefab_;

	[Token(Token = "0x17000024")]
	public GameObject AnchorPrefab
	{
		[Token(Token = "0x6000304")]
		[Address(RVA = "0xE8479C", Offset = "0xE8479C", VA = "0xE8479C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xE847A4", Offset = "0xE847A4", VA = "0xE847A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xE84888", Offset = "0xE84888", VA = "0xE84888")]
	public void PlaceAnchorAtTransform(Transform transform)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xE84A6C", Offset = "0xE84A6C", VA = "0xE84A6C")]
	public AnchorSpawner()
	{
	}
}
[Token(Token = "0x20000A9")]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x200035E")]
	public enum AnchorMode
	{
		[Token(Token = "0x4001145")]
		Create,
		[Token(Token = "0x4001146")]
		Select
	}

	[Token(Token = "0x200035F")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject mainMenu_;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject createModeButton_;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject selectModeButton_;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform trackedDevice_;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform raycastOrigin_;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool drawRaycast_;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LineRenderer lineRenderer_;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor hoveredAnchor_;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Anchor selectedAnchor_;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnchorMode mode_;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int menuIndex_;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Button selectedButton_;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject placementPreview_;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform anchorPlacementTransform_;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate primaryPressDelegate_;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isFocused_;

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xE84A74", Offset = "0xE84A74", VA = "0xE84A74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xE84B40", Offset = "0xE84B40", VA = "0xE84B40")]
	private void Start()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xE84C90", Offset = "0xE84C90", VA = "0xE84C90")]
	private void Update()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xE85314", Offset = "0xE85314", VA = "0xE85314")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xE85384", Offset = "0xE85384", VA = "0xE85384")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xE84C30", Offset = "0xE84C30", VA = "0xE84C30")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xE85408", Offset = "0xE85408", VA = "0xE85408")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xE8547C", Offset = "0xE8547C", VA = "0xE8547C")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xE854A0", Offset = "0xE854A0", VA = "0xE854A0")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xE853E4", Offset = "0xE853E4", VA = "0xE853E4")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xE84FF4", Offset = "0xE84FF4", VA = "0xE84FF4")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xE855D8", Offset = "0xE855D8", VA = "0xE855D8")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xE85514", Offset = "0xE85514", VA = "0xE85514")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xE85544", Offset = "0xE85544", VA = "0xE85544")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xE856D8", Offset = "0xE856D8", VA = "0xE856D8")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xE85564", Offset = "0xE85564", VA = "0xE85564")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xE855A0", Offset = "0xE855A0", VA = "0xE855A0")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xE84D90", Offset = "0xE84D90", VA = "0xE84D90")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xE85738", Offset = "0xE85738", VA = "0xE85738")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xE85754", Offset = "0xE85754", VA = "0xE85754")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xE857E0", Offset = "0xE857E0", VA = "0xE857E0")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xE85938", Offset = "0xE85938", VA = "0xE85938")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x20000AA")]
public class SpatialAnchorSession : AnchorSession
{
	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<ulong, ulong> locateAnchorRequest;

	[Token(Token = "0x4000422")]
	private const string numUuids = "numUuids";

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xDF5B8C", Offset = "0xDF5B8C", VA = "0xDF5B8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xDF5D28", Offset = "0xDF5D28", VA = "0xDF5D28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xDF5EC4", Offset = "0xDF5EC4", VA = "0xDF5EC4")]
	private void SpatialEntitySetComponentEnabled(ulong requestId, bool result, OVRPlugin.SpatialEntityComponentType componentType, ulong space)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xDF6094", Offset = "0xDF6094", VA = "0xDF6094")]
	private void SpatialAnchorSaved(ulong requestId, ulong space, bool result, OVRPlugin.SpatialEntityUuid uuid)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xDF64D0", Offset = "0xDF64D0", VA = "0xDF64D0")]
	private void SpatialEntityStorageErase(ulong requestId, bool result, OVRPlugin.SpatialEntityUuid uuid, OVRPlugin.SpatialEntityStorageLocation location)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xDF674C", Offset = "0xDF674C", VA = "0xDF674C")]
	private void SpatialEntityQueryResults(ulong requestId, int numResults, OVRPlugin.SpatialEntityQueryResult[] results)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xDF6DF8", Offset = "0xDF6DF8", VA = "0xDF6DF8")]
	private void SpatialEntityQueryComplete(ulong requestId, bool result, int numFound)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xDF63FC", Offset = "0xDF63FC", VA = "0xDF63FC")]
	private string GetUuidString(OVRPlugin.SpatialEntityUuid uuid)
	{
		return null;
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xDF69EC", Offset = "0xDF69EC", VA = "0xDF69EC")]
	private void tryEnableComponent(ulong anchorHandle, OVRPlugin.SpatialEntityComponentType type)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xDF5FA0", Offset = "0xDF5FA0", VA = "0xDF5FA0")]
	private void CreateAnchorGameobject(ulong anchorHandle)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xDF6FF8", Offset = "0xDF6FF8", VA = "0xDF6FF8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xDF7258", Offset = "0xDF7258", VA = "0xDF7258", Slot = "5")]
	public override ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor)
	{
		return default(ulong);
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xDF73D8", Offset = "0xDF73D8", VA = "0xDF73D8", Slot = "6")]
	public override void DestroyAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xDF756C", Offset = "0xDF756C", VA = "0xDF756C", Slot = "8")]
	public override void EraseAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xDF770C", Offset = "0xDF770C", VA = "0xDF770C")]
	public void QueryAnchorByUuid()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xDF7960", Offset = "0xDF7960", VA = "0xDF7960", Slot = "9")]
	public override void QueryAllLocalAnchors()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xDF7A3C", Offset = "0xDF7A3C", VA = "0xDF7A3C", Slot = "7")]
	public override void SaveAnchor(ulong anchorHandle, StorageLocation location)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xDF7C44", Offset = "0xDF7C44", VA = "0xDF7C44")]
	public SpatialAnchorSession()
	{
	}
}
[Token(Token = "0x20000AB")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000360")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA6B8", Offset = "0xAFA6B8")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xDF9C54", Offset = "0xDF9C54", VA = "0xDF9C54")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xDF9D64", Offset = "0xDF9D64", VA = "0xDF9D64")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xDF9A8C", Offset = "0xDF9A8C", VA = "0xDF9A8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xDF9C5C", Offset = "0xDF9C5C", VA = "0xDF9C5C")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xDF9D5C", Offset = "0xDF9D5C", VA = "0xDF9D5C")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000AC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAF9E70", Offset = "0xAF9E70")]
public class SmoothCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomRate;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float autoRotate;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float xDeg;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float yDeg;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentDistance;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float desiredDistance;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion currentRotation;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion desiredRotation;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion rotation;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 position;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float idleTimer;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleSmooth;

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xD50754", Offset = "0xD50754", VA = "0xD50754")]
	private void Start()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xD50B0C", Offset = "0xD50B0C", VA = "0xD50B0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xD50758", Offset = "0xD50758", VA = "0xD50758")]
	public void Init()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xD50B10", Offset = "0xD50B10", VA = "0xD50B10")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xD510D0", Offset = "0xD510D0", VA = "0xD510D0")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xD51180", Offset = "0xD51180", VA = "0xD51180")]
	public SmoothCameraOrbit()
	{
	}
}
[Token(Token = "0x20000AD")]
public class Twist : MonoBehaviour
{
	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float twist;

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xE030B8", Offset = "0xE030B8", VA = "0xE030B8")]
	public void Update()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xE0318C", Offset = "0xE0318C", VA = "0xE0318C")]
	public Twist()
	{
	}
}
[Token(Token = "0x20000AE")]
public class FPController : MonoBehaviour
{
	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float mouseSensitivity;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float jumpSpeed;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float rotationLeftRight;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float verticalRotation;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float forwardspeed;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float sideSpeed;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float verticalVelocity;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 speedCombined;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CharacterController cc;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera cam;

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x1F4DE2C", Offset = "0x1F4DE2C", VA = "0x1F4DE2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x1F4DEA4", Offset = "0x1F4DEA4", VA = "0x1F4DEA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x1F4E1DC", Offset = "0x1F4E1DC", VA = "0x1F4E1DC")]
	public FPController()
	{
	}
}
[Token(Token = "0x20000AF")]
public class UIKeys : MonoBehaviour
{
	[Token(Token = "0x600033E")]
	[Address(RVA = "0xE0319C", Offset = "0xE0319C", VA = "0xE0319C")]
	private void Start()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xE031A0", Offset = "0xE031A0", VA = "0xE031A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xE032D8", Offset = "0xE032D8", VA = "0xE032D8")]
	public UIKeys()
	{
	}
}
[Token(Token = "0x20000B0")]
public class FPSDisplay : MonoBehaviour
{
	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float deltaTime;

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x1F4E1F8", Offset = "0x1F4E1F8", VA = "0x1F4E1F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1F4E244", Offset = "0x1F4E244", VA = "0x1F4E244")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x1F4E424", Offset = "0x1F4E424", VA = "0x1F4E424")]
	public FPSDisplay()
	{
	}
}
[Token(Token = "0x20000B1")]
public class Flythrough : MonoBehaviour
{
	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float lookSpeed;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float moveSpeed;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float rotationX;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float rotationY;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject sun;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera mycamera;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion baseSunTransform;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float sunX;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float sunY;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float sunZ;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float defaultFov;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float baseDOFFocusDistance;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float baseAperture;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float baseFocalLength;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float depthFocus;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float apertureValue;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float focalLength;

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x1F3A8AC", Offset = "0x1F3A8AC", VA = "0x1F3A8AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x1F3A92C", Offset = "0x1F3A92C", VA = "0x1F3A92C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x1F3B1F4", Offset = "0x1F3B1F4", VA = "0x1F3B1F4")]
	public Flythrough()
	{
	}
}
[Token(Token = "0x20000B2")]
public class LevelSelect : MonoBehaviour
{
	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int increment;

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x1EE2C1C", Offset = "0x1EE2C1C", VA = "0x1EE2C1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x1EE2C20", Offset = "0x1EE2C20", VA = "0x1EE2C20")]
	public void LoadRedForest()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x1EE2C8C", Offset = "0x1EE2C8C", VA = "0x1EE2C8C")]
	public void LoadGreenForest()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x1EE2CF8", Offset = "0x1EE2CF8", VA = "0x1EE2CF8")]
	public void LoadAlienForest()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x1EE2D64", Offset = "0x1EE2D64", VA = "0x1EE2D64")]
	public void LoadAutumnForest()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x1EE2DD0", Offset = "0x1EE2DD0", VA = "0x1EE2DD0")]
	private void Update()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x1EE2F5C", Offset = "0x1EE2F5C", VA = "0x1EE2F5C")]
	public LevelSelect()
	{
	}
}
[Token(Token = "0x20000B3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAF9EA8", Offset = "0xAF9EA8")]
public class MenuButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler
{
	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text txt;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color baseColor;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Button btn;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool interactableDelay;

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xE0E2E4", Offset = "0xE0E2E4", VA = "0xE0E2E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xE0E38C", Offset = "0xE0E38C", VA = "0xE0E38C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xE0E43C", Offset = "0xE0E43C", VA = "0xE0E43C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xE0E4BC", Offset = "0xE0E4BC", VA = "0xE0E4BC", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xE0E53C", Offset = "0xE0E53C", VA = "0xE0E53C", Slot = "7")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xE0E5BC", Offset = "0xE0E5BC", VA = "0xE0E5BC", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xE0E63C", Offset = "0xE0E63C", VA = "0xE0E63C")]
	public MenuButton()
	{
	}
}
[Token(Token = "0x20000B4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAF9F0C", Offset = "0xAF9F0C")]
public class SmoothMouseLook : MonoBehaviour
{
	[Token(Token = "0x2000361")]
	public enum RotationAxes
	{
		[Token(Token = "0x400114A")]
		MouseXAndY,
		[Token(Token = "0x400114B")]
		MouseX,
		[Token(Token = "0x400114C")]
		MouseY
	}

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MoveSpeed;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RotationAxes axes;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityX;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float sensitivityY;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minimumX;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maximumX;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minimumY;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maximumY;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float rotationX;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float rotationY;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<float> rotArrayX;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float rotAverageX;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<float> rotArrayY;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float rotAverageY;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _moveSpeedStep;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _rotateSpeedStep;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float frameCounter;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion originalRotation;

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xD511C4", Offset = "0xD511C4", VA = "0xD511C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xD511E8", Offset = "0xD511E8", VA = "0xD511E8")]
	private void Rotate()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xD5146C", Offset = "0xD5146C", VA = "0xD5146C")]
	private void Move()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xD517B0", Offset = "0xD517B0", VA = "0xD517B0")]
	private Quaternion RotateX(string axis)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xD5195C", Offset = "0xD5195C", VA = "0xD5195C")]
	private Quaternion RotateY(string axis)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xD51BD8", Offset = "0xD51BD8", VA = "0xD51BD8")]
	private void Start()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xD51B08", Offset = "0xD51B08", VA = "0xD51B08")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xD51C9C", Offset = "0xD51C9C", VA = "0xD51C9C")]
	public SmoothMouseLook()
	{
	}
}
[Token(Token = "0x20000B5")]
public class PartycleSystemEnabler : MonoBehaviour
{
	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem Partycle;

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x11CEB08", Offset = "0x11CEB08", VA = "0x11CEB08")]
	public void Enable()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x11CEB24", Offset = "0x11CEB24", VA = "0x11CEB24")]
	public PartycleSystemEnabler()
	{
	}
}
[Token(Token = "0x20000B6")]
public class TestGlobalShaderManager : MonoBehaviour
{
	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int Color;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int Emission;

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xE00B58", Offset = "0xE00B58", VA = "0xE00B58")]
	private void DoColor()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xE00C8C", Offset = "0xE00C8C", VA = "0xE00C8C")]
	private void DoEmission()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xE00DC0", Offset = "0xE00DC0", VA = "0xE00DC0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xE00F64", Offset = "0xE00F64", VA = "0xE00F64")]
	public TestGlobalShaderManager()
	{
	}
}
[Token(Token = "0x20000B7")]
public class CubeSpawner : MonoBehaviour
{
	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> Cubes;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int CubeMatrix;

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x1F08D58", Offset = "0x1F08D58", VA = "0x1F08D58")]
	private void SpawnCubes()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x1F08F08", Offset = "0x1F08F08", VA = "0x1F08F08")]
	private void RemoveCubes()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1F08FC4", Offset = "0x1F08FC4", VA = "0x1F08FC4")]
	public CubeSpawner()
	{
	}
}
[Token(Token = "0x20000B8")]
public class SpriteAdjuster : MonoBehaviour
{
	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve MoveCurve;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve RotateCurve;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool EditorCam;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _defaultForward;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _defaultPosition;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _cam;

	[Token(Token = "0x17000025")]
	private Transform GetCamera
	{
		[Token(Token = "0x6000367")]
		[Address(RVA = "0xDF94D0", Offset = "0xDF94D0", VA = "0xDF94D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xDF94F4", Offset = "0xDF94F4", VA = "0xDF94F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xDF9550", Offset = "0xDF9550", VA = "0xDF9550")]
	private void Update()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xDF97E0", Offset = "0xDF97E0", VA = "0xDF97E0")]
	public SpriteAdjuster()
	{
	}
}
[Token(Token = "0x20000B9")]
public class SpriteFader : MonoBehaviour
{
	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer Sprite;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MinDistance;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float TweenTime;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool EditorCam;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _cam;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isFaded;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _defaultAlpha;

	[Token(Token = "0x17000026")]
	private Transform GetCamera
	{
		[Token(Token = "0x600036B")]
		[Address(RVA = "0xDF97E8", Offset = "0xDF97E8", VA = "0xDF97E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xDF98C0", Offset = "0xDF98C0", VA = "0xDF98C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xDF98F4", Offset = "0xDF98F4", VA = "0xDF98F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xDF9A70", Offset = "0xDF9A70", VA = "0xDF9A70")]
	public SpriteFader()
	{
	}
}
[Token(Token = "0x20000BA")]
public class Autumn_1BatEndIntroAction : BaseGameAction
{
	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Portal;

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xE86FF4", Offset = "0xE86FF4", VA = "0xE86FF4", Slot = "4")]
	public override void Execute(CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xE87040", Offset = "0xE87040", VA = "0xE87040")]
	public Autumn_1BatEndIntroAction()
	{
	}
}
[Token(Token = "0x20000BB")]
public class Autumn_1StartAction : BaseGameAction
{
	[Token(Token = "0x2000362")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA6C8", Offset = "0xAFA6C8")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompleteGameAction onComplete;

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xE87138", Offset = "0xE87138", VA = "0xE87138")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xE87150", Offset = "0xE87150", VA = "0xE87150")]
		internal void <Execute>b__0()
		{
		}
	}

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem Bats;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float WaitTime;

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xE87050", Offset = "0xE87050", VA = "0xE87050", Slot = "4")]
	public override void Execute(CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xE87140", Offset = "0xE87140", VA = "0xE87140")]
	public Autumn_1StartAction()
	{
	}
}
[Token(Token = "0x20000BC")]
public delegate void CompleteGameAction();
[Token(Token = "0x20000BD")]
public abstract class BaseGameAction : MonoBehaviour
{
	[Token(Token = "0x6000377")]
	public abstract void Execute(CompleteGameAction onComplete);

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xE87048", Offset = "0xE87048", VA = "0xE87048")]
	protected BaseGameAction()
	{
	}
}
[Token(Token = "0x20000BE")]
public abstract class CharacterGameAction : MonoBehaviour
{
	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected CompleteGameAction _onComplete;

	[Token(Token = "0x6000379")]
	public abstract void Execute(CharacterControllerNavMesh character, CompleteGameAction onComplete);

	[Token(Token = "0x600037A")]
	public abstract bool StopAction(CharacterControllerNavMesh character);

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1F2A434", Offset = "0x1F2A434", VA = "0x1F2A434")]
	private void Awake()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x1F2A440", Offset = "0x1F2A440", VA = "0x1F2A440", Slot = "6")]
	protected virtual void OnAwake()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x1F2A444", Offset = "0x1F2A444", VA = "0x1F2A444")]
	protected CharacterGameAction()
	{
	}
}
[Token(Token = "0x20000BF")]
public class DragonMultiPluginsCharacterCastAction : SimpleCharacterCastAction
{
	[Token(Token = "0x2000363")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA6D8", Offset = "0xAFA6D8")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CharacterControllerNavMesh stump;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DragonMultiPluginsCharacterCastAction <>4__this;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TweenCallback <>9__3;

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x1EFDA00", Offset = "0x1EFDA00", VA = "0x1EFDA00")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x1EFDF08", Offset = "0x1EFDF08", VA = "0x1EFDF08")]
		internal void <Execute>b__3()
		{
		}
	}

	[Token(Token = "0x2000364")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA6E8", Offset = "0xAFA6E8")]
	private sealed class <>c__DisplayClass10_1
	{
		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform tmp;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startPoint;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public <>c__DisplayClass10_0 CS$<>8__locals1;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TweenCallback <>9__4;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TweenCallback <>9__2;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TweenCallback <>9__1;

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x1EFDA08", Offset = "0x1EFDA08", VA = "0x1EFDA08")]
		public <>c__DisplayClass10_1()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x1EFDF24", Offset = "0x1EFDF24", VA = "0x1EFDF24")]
		internal void <Execute>b__0()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x1EFE094", Offset = "0x1EFE094", VA = "0x1EFE094")]
		internal void <Execute>b__1()
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x1EFE194", Offset = "0x1EFE194", VA = "0x1EFE194")]
		internal void <Execute>b__2()
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x1EFE380", Offset = "0x1EFE380", VA = "0x1EFE380")]
		internal void <Execute>b__4()
		{
		}
	}

	[Token(Token = "0x2000365")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA6F8", Offset = "0xAFA6F8")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CharacterControllerNavMesh stump;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startPoint;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DragonMultiPluginsCharacterCastAction <>4__this;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TweenCallback <>9__1;

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x1EFDAF4", Offset = "0x1EFDAF4", VA = "0x1EFDAF4")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x1EFE3B4", Offset = "0x1EFE3B4", VA = "0x1EFE3B4")]
		internal void <BackMove>b__0()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x1EFE4BC", Offset = "0x1EFE4BC", VA = "0x1EFE4BC")]
		internal void <BackMove>b__1()
		{
		}
	}

	[Token(Token = "0x2000366")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA708", Offset = "0xAFA708")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DragonMultiPluginsCharacterCastAction <>4__this;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Coordinates tmpCoords;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CellVisualizer tmp;

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x1EFDD3C", Offset = "0x1EFDD3C", VA = "0x1EFDD3C")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x1EFE538", Offset = "0x1EFE538", VA = "0x1EFE538")]
		internal void <GeneratePluginOnComplete>b__0()
		{
		}
	}

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<Transform> CastPoints;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float FlySpeed;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve Curve;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int MinPluginToGenerate;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int MaxPluginToGenerate;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PluginType Plugin;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float FlyTime;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _isReady;

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1EFD794", Offset = "0x1EFD794", VA = "0x1EFD794")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x1EFD810", Offset = "0x1EFD810", VA = "0x1EFD810")]
	private void OnGenerationAnalysisComplete(Field field)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x1EFD81C", Offset = "0x1EFD81C", VA = "0x1EFD81C", Slot = "4")]
	public override void Execute(CharacterControllerNavMesh stump, CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x1EFDA10", Offset = "0x1EFDA10", VA = "0x1EFDA10")]
	private void BackMove(CharacterControllerNavMesh stump, Vector3 startPoint)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x1EFDAFC", Offset = "0x1EFDAFC", VA = "0x1EFDAFC")]
	private void GeneratePlugins(List<Cell> cells, CharacterControllerNavMesh stump)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1EFDBC4", Offset = "0x1EFDBC4", VA = "0x1EFDBC4")]
	private void GeneratePluginOnComplete(Cell cell, CharacterControllerNavMesh stump)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x1EFDD44", Offset = "0x1EFDD44", VA = "0x1EFDD44")]
	private void CreateCell(CellVisualizer tmpVisualizer, Cell cell)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x1EFDEDC", Offset = "0x1EFDEDC", VA = "0x1EFDEDC", Slot = "5")]
	public override bool StopAction(CharacterControllerNavMesh character)
	{
		return default(bool);
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x1EFDEE4", Offset = "0x1EFDEE4", VA = "0x1EFDEE4", Slot = "7")]
	protected override void OnCast(Cell pickedCell)
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x1EFDEE8", Offset = "0x1EFDEE8", VA = "0x1EFDEE8")]
	public DragonMultiPluginsCharacterCastAction()
	{
	}
}
[Token(Token = "0x20000C0")]
public class DragonSetPluginCharacterCastAction : SetNewPluginTypeCharacterCastAction
{
	[Token(Token = "0x2000367")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA718", Offset = "0xAFA718")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CharacterControllerNavMesh stump;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DragonSetPluginCharacterCastAction <>4__this;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TweenCallback <>9__3;

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x1EFE90C", Offset = "0x1EFE90C", VA = "0x1EFE90C")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x1EFEA20", Offset = "0x1EFEA20", VA = "0x1EFEA20")]
		internal void <Execute>b__3()
		{
		}
	}

	[Token(Token = "0x2000368")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA728", Offset = "0xAFA728")]
	private sealed class <>c__DisplayClass6_1
	{
		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform tmp;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startPoint;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public <>c__DisplayClass6_0 CS$<>8__locals1;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TweenCallback <>9__4;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TweenCallback <>9__2;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TweenCallback <>9__1;

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x1EFE914", Offset = "0x1EFE914", VA = "0x1EFE914")]
		public <>c__DisplayClass6_1()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x1EFEA3C", Offset = "0x1EFEA3C", VA = "0x1EFEA3C")]
		internal void <Execute>b__0()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x1EFEBAC", Offset = "0x1EFEBAC", VA = "0x1EFEBAC")]
		internal void <Execute>b__1()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x1EFECAC", Offset = "0x1EFECAC", VA = "0x1EFECAC")]
		internal void <Execute>b__2()
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x1EFEFEC", Offset = "0x1EFEFEC", VA = "0x1EFEFEC")]
		internal void <Execute>b__4()
		{
		}
	}

	[Token(Token = "0x2000369")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA738", Offset = "0xAFA738")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CharacterControllerNavMesh stump;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startPoint;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DragonSetPluginCharacterCastAction <>4__this;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TweenCallback <>9__1;

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x1EFEA00", Offset = "0x1EFEA00", VA = "0x1EFEA00")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x1EFF020", Offset = "0x1EFF020", VA = "0x1EFF020")]
		internal void <BackMove>b__0()
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x1EFF128", Offset = "0x1EFF128", VA = "0x1EFF128")]
		internal void <BackMove>b__1()
		{
		}
	}

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Transform> CastPoints;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float FlySpeed;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve Curve;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _isReady;

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x1EFE6A0", Offset = "0x1EFE6A0", VA = "0x1EFE6A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x1EFE71C", Offset = "0x1EFE71C", VA = "0x1EFE71C")]
	private void OnGenerationAnalysisComplete(Field field)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1EFE728", Offset = "0x1EFE728", VA = "0x1EFE728", Slot = "4")]
	public override void Execute(CharacterControllerNavMesh stump, CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x1EFE91C", Offset = "0x1EFE91C", VA = "0x1EFE91C")]
	private void BackMove(CharacterControllerNavMesh stump, Vector3 startPoint)
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x1EFEA08", Offset = "0x1EFEA08", VA = "0x1EFEA08", Slot = "5")]
	public override bool StopAction(CharacterControllerNavMesh character)
	{
		return default(bool);
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x1EFEA10", Offset = "0x1EFEA10", VA = "0x1EFEA10")]
	public DragonSetPluginCharacterCastAction()
	{
	}
}
[Token(Token = "0x20000C1")]
public class FlyingInTheSkyCharcterAction : CharacterGameAction
{
	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> StartEndFlyingPoints;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> TargetPoints;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float MaxSpeed;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float EndSpeed;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float RotateSpeed;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float StartUpTime;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve Curve;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve EndCurve;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float FlyTime;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CharacterControllerNavMesh _character;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform _currentPoint;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform _cachedTransform;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform _target;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Tween _currentTween;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _startSpeed;

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x1F39648", Offset = "0x1F39648", VA = "0x1F39648", Slot = "4")]
	public override void Execute(CharacterControllerNavMesh character, CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x1F39768", Offset = "0x1F39768", VA = "0x1F39768", Slot = "5")]
	public override bool StopAction(CharacterControllerNavMesh character)
	{
		return default(bool);
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x1F3986C", Offset = "0x1F3986C", VA = "0x1F3986C")]
	private void DoFly()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x1F397A4", Offset = "0x1F397A4", VA = "0x1F397A4")]
	private void OnEnd()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x1F39954", Offset = "0x1F39954", VA = "0x1F39954")]
	private void Update()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x1F39C00", Offset = "0x1F39C00", VA = "0x1F39C00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x1F39C18", Offset = "0x1F39C18", VA = "0x1F39C18")]
	public FlyingInTheSkyCharcterAction()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1F39C34", Offset = "0x1F39C34", VA = "0x1F39C34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE894", Offset = "0xAFE894")]
	private void <DoFly>b__17_0()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x1F39DDC", Offset = "0x1F39DDC", VA = "0x1F39DDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE8A4", Offset = "0xAFE8A4")]
	private float <DoFly>b__17_1()
	{
		return default(float);
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1F39DE4", Offset = "0x1F39DE4", VA = "0x1F39DE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE8B4", Offset = "0xAFE8B4")]
	private void <DoFly>b__17_2(float value)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1F39DEC", Offset = "0x1F39DEC", VA = "0x1F39DEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE8C4", Offset = "0xAFE8C4")]
	private void <OnEnd>b__18_0()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1F39ECC", Offset = "0x1F39ECC", VA = "0x1F39ECC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE8D4", Offset = "0xAFE8D4")]
	private void <OnEnd>b__18_1()
	{
	}
}
[Token(Token = "0x20000C2")]
public class JumpAndProvokeCharacterAction : CharacterGameAction
{
	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform StartJumpPoint;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform JumpPoint;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ProvokeTime;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float UpJumpPower;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float DownJumpPower;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float JumpTime;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip JumpClip;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip ProvokeClip;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float DelayToJumpSound;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float DelayToProvokeSound;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CharacterControllerNavMesh _stump;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Tween _currentTween;

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1EE0684", Offset = "0x1EE0684", VA = "0x1EE0684", Slot = "4")]
	public override void Execute(CharacterControllerNavMesh stump, CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1EE0754", Offset = "0x1EE0754", VA = "0x1EE0754", Slot = "5")]
	public override bool StopAction(CharacterControllerNavMesh character)
	{
		return default(bool);
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1EE075C", Offset = "0x1EE075C", VA = "0x1EE075C")]
	private void DoJump()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1EE0844", Offset = "0x1EE0844", VA = "0x1EE0844")]
	private void DoProvoke()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x1EE092C", Offset = "0x1EE092C", VA = "0x1EE092C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x1EE0944", Offset = "0x1EE0944", VA = "0x1EE0944")]
	public JumpAndProvokeCharacterAction()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x1EE0964", Offset = "0x1EE0964", VA = "0x1EE0964")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE8E4", Offset = "0xAFE8E4")]
	private void <DoJump>b__14_0()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x1EE0A84", Offset = "0x1EE0A84", VA = "0x1EE0A84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE8F4", Offset = "0xAFE8F4")]
	private void <DoJump>b__14_1()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1EE0AA8", Offset = "0x1EE0AA8", VA = "0x1EE0AA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE904", Offset = "0xAFE904")]
	private void <DoJump>b__14_2()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x1EE0C40", Offset = "0x1EE0C40", VA = "0x1EE0C40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE914", Offset = "0xAFE914")]
	private void <DoJump>b__14_3()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x1EE0C44", Offset = "0x1EE0C44", VA = "0x1EE0C44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE924", Offset = "0xAFE924")]
	private void <DoJump>b__14_4()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x1EE0C48", Offset = "0x1EE0C48", VA = "0x1EE0C48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE934", Offset = "0xAFE934")]
	private void <DoProvoke>b__15_0()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x1EE0C6C", Offset = "0x1EE0C6C", VA = "0x1EE0C6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE944", Offset = "0xAFE944")]
	private void <DoProvoke>b__15_1()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x1EE0D38", Offset = "0x1EE0D38", VA = "0x1EE0D38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE954", Offset = "0xAFE954")]
	private void <DoProvoke>b__15_2()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x1EE0E54", Offset = "0x1EE0E54", VA = "0x1EE0E54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE964", Offset = "0xAFE964")]
	private void <DoProvoke>b__15_3()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x1EE0E78", Offset = "0x1EE0E78", VA = "0x1EE0E78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE974", Offset = "0xAFE974")]
	private void <DoProvoke>b__15_4()
	{
	}
}
[Token(Token = "0x20000C3")]
public class MicroBatDisturbCharacterAction : CharacterGameAction
{
	[Token(Token = "0x200036A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA748", Offset = "0xAFA748")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CharacterControllerNavMesh stump;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MicroBatDisturbCharacterAction <>4__this;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompleteGameAction onComplete;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__2;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CompleteGameAction <>9__1;

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xE0F0FC", Offset = "0xE0F0FC", VA = "0xE0F0FC")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xE0F120", Offset = "0xE0F120", VA = "0xE0F120")]
		internal void <Execute>b__0()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xE0F200", Offset = "0xE0F200", VA = "0xE0F200")]
		internal void <Execute>b__1()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xE0F3F4", Offset = "0xE0F3F4", VA = "0xE0F3F4")]
		internal void <Execute>b__2()
		{
		}
	}

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform TargetPoint;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform RotatePoint;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float RotateSpeed;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float AgentSpeed;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ActionTime;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float PunchPower;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve Curve;

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xE0F00C", Offset = "0xE0F00C", VA = "0xE0F00C", Slot = "4")]
	public override void Execute(CharacterControllerNavMesh stump, CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xE0F104", Offset = "0xE0F104", VA = "0xE0F104", Slot = "5")]
	public override bool StopAction(CharacterControllerNavMesh character)
	{
		return default(bool);
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xE0F10C", Offset = "0xE0F10C", VA = "0xE0F10C")]
	public MicroBatDisturbCharacterAction()
	{
	}
}
[Token(Token = "0x20000C4")]
public class RemoveBonusCharacterCastAction : RemoveCellCharacterCastAction
{
	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xD46944", Offset = "0xD46944", VA = "0xD46944", Slot = "8")]
	protected override void FillCellList()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xD46B38", Offset = "0xD46B38", VA = "0xD46B38")]
	public RemoveBonusCharacterCastAction()
	{
	}
}
[Token(Token = "0x20000C5")]
public class RemoveCellCharacterCastAction : SimpleCharacterCastAction
{
	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xD46B40", Offset = "0xD46B40", VA = "0xD46B40", Slot = "7")]
	protected override void OnCast(Cell pickedCell)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xD46B3C", Offset = "0xD46B3C", VA = "0xD46B3C")]
	public RemoveCellCharacterCastAction()
	{
	}
}
[Token(Token = "0x20000C6")]
public class RemoveCellsCrossCharacterCastAction : SimpleCharacterCastAction
{
	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xD46C14", Offset = "0xD46C14", VA = "0xD46C14", Slot = "7")]
	protected override void OnCast(Cell pickedCell)
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xD46EEC", Offset = "0xD46EEC", VA = "0xD46EEC")]
	public RemoveCellsCrossCharacterCastAction()
	{
	}
}
[Token(Token = "0x20000C7")]
public class ReplaceCellCharacterCastAction : SimpleCharacterCastAction
{
	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<CellType> _types;

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xD46EF0", Offset = "0xD46EF0", VA = "0xD46EF0", Slot = "7")]
	protected override void OnCast(Cell pickedCell)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xD4707C", Offset = "0xD4707C", VA = "0xD4707C")]
	public ReplaceCellCharacterCastAction()
	{
	}
}
[Token(Token = "0x20000C8")]
public class SaturationDownCharacterAction : CharacterGameAction
{
	[Token(Token = "0x200036B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA758", Offset = "0xAFA758")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SaturationDownCharacterAction <>4__this;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterControllerNavMesh stump;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompleteGameAction onComplete;

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xD493B0", Offset = "0xD493B0", VA = "0xD493B0")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xD4959C", Offset = "0xD4959C", VA = "0xD4959C")]
		internal void <Execute>b__0()
		{
		}
	}

	[Token(Token = "0x200036C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA768", Offset = "0xAFA768")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CharacterControllerNavMesh stump;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SaturationDownCharacterAction <>4__this;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompleteGameAction onComplete;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__2;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TweenCallback <>9__1;

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xD4949C", Offset = "0xD4949C", VA = "0xD4949C")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xD495BC", Offset = "0xD495BC", VA = "0xD495BC")]
		internal void <DoCast>b__0()
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xD49670", Offset = "0xD49670", VA = "0xD49670")]
		internal void <DoCast>b__1()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xD49718", Offset = "0xD49718", VA = "0xD49718")]
		internal void <DoCast>b__2()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200036D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA778", Offset = "0xAFA778")]
	private sealed class <>c
	{
		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static TweenCallback <>9__5_3;

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xD49534", Offset = "0xD49534", VA = "0xD49534")]
		public <>c()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xD4953C", Offset = "0xD4953C", VA = "0xD4953C")]
		internal void <DoCast>b__5_3()
		{
		}
	}

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float CastTime;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DebaffTime;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Tween _currentTween;

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xD49248", Offset = "0xD49248", VA = "0xD49248", Slot = "4")]
	public override void Execute(CharacterControllerNavMesh stump, CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xD49494", Offset = "0xD49494", VA = "0xD49494", Slot = "5")]
	public override bool StopAction(CharacterControllerNavMesh character)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xD493B8", Offset = "0xD493B8", VA = "0xD493B8")]
	private void DoCast(CharacterControllerNavMesh stump, CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xD494A4", Offset = "0xD494A4", VA = "0xD494A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xD494BC", Offset = "0xD494BC", VA = "0xD494BC")]
	public SaturationDownCharacterAction()
	{
	}
}
[Token(Token = "0x20000C9")]
public class SetNewPluginTypeCharacterCastAction : SimpleCharacterCastAction
{
	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BaseGeneratorPlugin PluginGenerator;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PluginType Plugin;

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xD4E784", Offset = "0xD4E784", VA = "0xD4E784", Slot = "7")]
	protected override void OnCast(Cell pickedCell)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xD4E880", Offset = "0xD4E880", VA = "0xD4E880")]
	public SetNewPluginTypeCharacterCastAction()
	{
	}
}
[Token(Token = "0x20000CA")]
public class SetNewPluginTypeLineCharacterCastAction : SimpleCharacterCastAction
{
	[Token(Token = "0x200036E")]
	public enum LineType
	{
		[Token(Token = "0x400117B")]
		Horizontal,
		[Token(Token = "0x400117C")]
		Vertical
	}

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PluginType Plugin;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public LineType Line;

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xD4E884", Offset = "0xD4E884", VA = "0xD4E884", Slot = "7")]
	protected override void OnCast(Cell pickedCell)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xD4EA58", Offset = "0xD4EA58", VA = "0xD4EA58")]
	private void OnVerticalLine(Cell pickedCell)
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xD4E8D8", Offset = "0xD4E8D8", VA = "0xD4E8D8")]
	private void OnHorizontalLine(Cell pickedCell)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xD4EBD8", Offset = "0xD4EBD8", VA = "0xD4EBD8")]
	public SetNewPluginTypeLineCharacterCastAction()
	{
	}
}
[Token(Token = "0x20000CB")]
public abstract class SimpleCharacterCastAction : CharacterGameAction
{
	[Token(Token = "0x200036F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA788", Offset = "0xAFA788")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SimpleCharacterCastAction <>4__this;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterControllerNavMesh stump;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompleteGameAction onComplete;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__3;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TweenCallback <>9__2;

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xD4FCF8", Offset = "0xD4FCF8", VA = "0xD4FCF8")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xD4FF40", Offset = "0xD4FF40", VA = "0xD4FF40")]
		internal void <Execute>b__0()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xD50024", Offset = "0xD50024", VA = "0xD50024")]
		internal void <Execute>b__2()
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xD50230", Offset = "0xD50230", VA = "0xD50230")]
		internal void <Execute>b__3()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xD5024C", Offset = "0xD5024C", VA = "0xD5024C")]
		internal void <Execute>b__1()
		{
		}
	}

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Field FieldToCast;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float CastTime;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float WaitTimeForAniamtion;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseEndCastEffect;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float DelayToPlayEndCastSound;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool RepeatIfFailed;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected List<Cell> _cells;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected CharacterControllerNavMesh _character;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Tween _currentTween;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Tween _currentWaitTween;

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xD4FAE0", Offset = "0xD4FAE0", VA = "0xD4FAE0", Slot = "4")]
	public override void Execute(CharacterControllerNavMesh stump, CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xD4FD00", Offset = "0xD4FD00", VA = "0xD4FD00", Slot = "5")]
	public override bool StopAction(CharacterControllerNavMesh character)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C2")]
	protected abstract void OnCast(Cell pickedCell);

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xD4FD48", Offset = "0xD4FD48", VA = "0xD4FD48", Slot = "8")]
	protected virtual void FillCellList()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xD4FF28", Offset = "0xD4FF28", VA = "0xD4FF28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xD46B88", Offset = "0xD46B88", VA = "0xD46B88")]
	protected SimpleCharacterCastAction()
	{
	}
}
[Token(Token = "0x20000CC")]
public class StumpDisturbCharacterGameAction : CharacterGameAction
{
	[Token(Token = "0x2000370")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA798", Offset = "0xAFA798")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StumpDisturbCharacterGameAction <>4__this;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterControllerNavMesh stump;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TweenCallback <>9__1;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CompleteGameAction <>9__2;

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xDFB07C", Offset = "0xDFB07C", VA = "0xDFB07C")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xDFB0F0", Offset = "0xDFB0F0", VA = "0xDFB0F0")]
		internal void <Execute>b__0()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xDFB1EC", Offset = "0xDFB1EC", VA = "0xDFB1EC")]
		internal void <Execute>b__1()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xDFB228", Offset = "0xDFB228", VA = "0xDFB228")]
		internal void <Execute>b__2()
		{
		}
	}

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ActionMaxTime;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> DisturbPoints;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip StopDisturbClip;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Tween _currentTween;

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xDFAF1C", Offset = "0xDFAF1C", VA = "0xDFAF1C", Slot = "4")]
	public override void Execute(CharacterControllerNavMesh stump, CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xDFB084", Offset = "0xDFB084", VA = "0xDFB084", Slot = "5")]
	public override bool StopAction(CharacterControllerNavMesh character)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xDFB0E0", Offset = "0xDFB0E0", VA = "0xDFB0E0")]
	public StumpDisturbCharacterGameAction()
	{
	}
}
[Token(Token = "0x20000CD")]
public class ThrowMechanicsMrSnowAction : SimpleCharacterCastAction
{
	[Token(Token = "0x2000371")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA7A8", Offset = "0xAFA7A8")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CellVisualizerChristamsTreeToy tmpVisualizer;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Coordinates tmpCoords;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CellType tmpType;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ThrowMechanicsMrSnowAction <>4__this;

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xE01EC4", Offset = "0xE01EC4", VA = "0xE01EC4")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xE02094", Offset = "0xE02094", VA = "0xE02094")]
		internal void <OnCast>b__0()
		{
		}
	}

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float ThrowPower;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float ThrowTime;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve Curve;

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xE01BB4", Offset = "0xE01BB4", VA = "0xE01BB4", Slot = "7")]
	protected override void OnCast(Cell pickedCell)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xE01ECC", Offset = "0xE01ECC", VA = "0xE01ECC")]
	private void CreateCell(CellVisualizerChristamsTreeToy tmpVisualizer, Cell cell, CellType type)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xE02080", Offset = "0xE02080", VA = "0xE02080")]
	public ThrowMechanicsMrSnowAction()
	{
	}
}
[Token(Token = "0x20000CE")]
public class GameObjectEnableDisableGameAction : BaseGameAction
{
	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> Objects;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Enabled;

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x1F3EA0C", Offset = "0x1F3EA0C", VA = "0x1F3EA0C", Slot = "4")]
	public override void Execute(CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x1F3EAC8", Offset = "0x1F3EAC8", VA = "0x1F3EAC8")]
	public GameObjectEnableDisableGameAction()
	{
	}
}
[Token(Token = "0x20000CF")]
public class NextLevelGameAction : BaseGameAction
{
	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelLoader.LevelID NexeLevel;

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xE1574C", Offset = "0xE1574C", VA = "0xE1574C", Slot = "4")]
	public override void Execute(CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xE15784", Offset = "0xE15784", VA = "0xE15784")]
	public void DoOnExecute()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xE157F0", Offset = "0xE157F0", VA = "0xE157F0")]
	public NextLevelGameAction()
	{
	}
}
[Token(Token = "0x20000D0")]
public class PortalEffectEndLevelGameAction : BaseGameAction
{
	[Token(Token = "0x2000372")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA7B8", Offset = "0xAFA7B8")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompleteGameAction onComplete;

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xD43A44", Offset = "0xD43A44", VA = "0xD43A44")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xD43AE0", Offset = "0xD43AE0", VA = "0xD43AE0")]
		internal void <Execute>b__0()
		{
		}
	}

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject WinText;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource Audio;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Renderer> Portal;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem Effect;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ColorMultiplayer;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float TweenTime;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _emissionId;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Color> _deffaultColor;

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xD436B8", Offset = "0xD436B8", VA = "0xD436B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xD43784", Offset = "0xD43784", VA = "0xD43784", Slot = "4")]
	public override void Execute(CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xD43A4C", Offset = "0xD43A4C", VA = "0xD43A4C")]
	public PortalEffectEndLevelGameAction()
	{
	}
}
[Token(Token = "0x20000D1")]
public class StartTimeLineAction : BaseGameAction
{
	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayableDirector Timeline;

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xDF9D80", Offset = "0xDF9D80", VA = "0xDF9D80", Slot = "4")]
	public override void Execute(CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xDF9D9C", Offset = "0xDF9D9C", VA = "0xDF9D9C")]
	public StartTimeLineAction()
	{
	}
}
[Token(Token = "0x20000D2")]
public class TimelineGameAction : BaseGameAction
{
	[Token(Token = "0x2000373")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA7C8", Offset = "0xAFA7C8")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompleteGameAction onComplete;

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xE02A70", Offset = "0xE02A70", VA = "0xE02A70")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xE02A80", Offset = "0xE02A80", VA = "0xE02A80")]
		internal void <Execute>b__0(PlayableDirector director)
		{
		}
	}

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayableDirector Timeline;

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xE029A4", Offset = "0xE029A4", VA = "0xE029A4", Slot = "4")]
	public override void Execute(CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xE02A78", Offset = "0xE02A78", VA = "0xE02A78")]
	public TimelineGameAction()
	{
	}
}
[Token(Token = "0x20000D3")]
public class TutorialGameAction : BaseGameAction
{
	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Display;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CompleteGameAction _onComplete;

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xE02FFC", Offset = "0xE02FFC", VA = "0xE02FFC", Slot = "4")]
	public override void Execute(CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xE0309C", Offset = "0xE0309C", VA = "0xE0309C")]
	public void DoComplete()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xE030B0", Offset = "0xE030B0", VA = "0xE030B0")]
	public TutorialGameAction()
	{
	}
}
[Token(Token = "0x20000D4")]
public class ArtifactMover : MonoBehaviour
{
	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform FirstArtifact;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform SecondArtifact;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LevelTarget FirstTarget;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LevelTarget SecondTarget;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LevelTarget MainTarget;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float FirstTweenTime;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float SecondTweenTime;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve Curve;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator FirstAnimationController;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator SecondAnimationController;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform FirstArtifactPoint;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform SecondArtifactPoint;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform SecondPoint;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Tween _currentTween;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int _doIdle;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _isMainTargetComplete;

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xE865AC", Offset = "0xE865AC", VA = "0xE865AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xE86714", Offset = "0xE86714", VA = "0xE86714")]
	private void FirstTargetComplete(LevelTarget leveltarget)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xE867D8", Offset = "0xE867D8", VA = "0xE867D8")]
	private void SecondTargetComplete(LevelTarget leveltarget)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xE8689C", Offset = "0xE8689C", VA = "0xE8689C")]
	private void MainComplete(LevelTarget leveltarget)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xE8695C", Offset = "0xE8695C", VA = "0xE8695C")]
	public ArtifactMover()
	{
	}
}
[Token(Token = "0x20000D5")]
public class CannonAnimationController : MonoBehaviour
{
	[Token(Token = "0x2000374")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA7D8", Offset = "0xAFA7D8")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CannonAnimationController <>4__this;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xE94AAC", Offset = "0xE94AAC", VA = "0xE94AAC")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xE94D9C", Offset = "0xE94D9C", VA = "0xE94D9C")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform RotatePoint;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animation Anim;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform WaterSphere;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TweenTime;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float TweenLookTime;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform StartPoint;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem EndEffect;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float ShotDelay;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource StartSound;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float StartSoundFade;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform _target;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 _localRotation;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _defaultStartSoundVolume;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Action _onComplete;

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xE94840", Offset = "0xE94840", VA = "0xE94840")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xE94898", Offset = "0xE94898", VA = "0xE94898")]
	public void Play(Transform target, [Optional] Action onComplete)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xE94AB4", Offset = "0xE94AB4", VA = "0xE94AB4")]
	private void StartPlay(Transform target)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xE94BA8", Offset = "0xE94BA8", VA = "0xE94BA8")]
	public void ShotWaterSphere()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xE94CD0", Offset = "0xE94CD0", VA = "0xE94CD0")]
	public CannonAnimationController()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xE94CF0", Offset = "0xE94CF0", VA = "0xE94CF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE984", Offset = "0xAFE984")]
	private void <ShotWaterSphere>b__17_0()
	{
	}
}
[Token(Token = "0x20000D6")]
public abstract class CharacterControllerNavMesh : Raycastable
{
	[Token(Token = "0x2000375")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA7E8", Offset = "0xAFA7E8")]
	private sealed class <>c__DisplayClass65_0
	{
		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompleteGameAction onComplete;

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x1F28A44", Offset = "0x1F28A44", VA = "0x1F28A44")]
		public <>c__DisplayClass65_0()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x1F2A1E4", Offset = "0x1F2A1E4", VA = "0x1F2A1E4")]
		internal void <Rotate>b__0()
		{
		}
	}

	[Token(Token = "0x2000376")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA7F8", Offset = "0xAFA7F8")]
	private sealed class <>c__DisplayClass66_0
	{
		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompleteGameAction oncomplete;

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x1F28B54", Offset = "0x1F28B54", VA = "0x1F28B54")]
		public <>c__DisplayClass66_0()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x1F2A1F8", Offset = "0x1F2A1F8", VA = "0x1F2A1F8")]
		internal void <LookAt>b__0()
		{
		}
	}

	[Token(Token = "0x2000377")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA808", Offset = "0xAFA808")]
	private sealed class <>c__DisplayClass67_0
	{
		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompleteGameAction onComplete;

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x1F28CB0", Offset = "0x1F28CB0", VA = "0x1F28CB0")]
		public <>c__DisplayClass67_0()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x1F2A20C", Offset = "0x1F2A20C", VA = "0x1F2A20C")]
		internal void <DoJump>b__0()
		{
		}
	}

	[Token(Token = "0x2000378")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA818", Offset = "0xAFA818")]
	private sealed class <CheckDistance>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterControllerNavMesh <>4__this;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CompleteGameAction onComplete;

		[Token(Token = "0x170000AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001476")]
			[Address(RVA = "0x1F2A3C4", Offset = "0x1F2A3C4", VA = "0x1F2A3C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001478")]
			[Address(RVA = "0x1F2A42C", Offset = "0x1F2A42C", VA = "0x1F2A42C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x1F29234", Offset = "0x1F29234", VA = "0x1F29234")]
		[DebuggerHidden]
		public <CheckDistance>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x1F2A270", Offset = "0x1F2A270", VA = "0x1F2A270", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x1F2A274", Offset = "0x1F2A274", VA = "0x1F2A274", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x1F2A3CC", Offset = "0x1F2A3CC", VA = "0x1F2A3CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000379")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA828", Offset = "0xAFA828")]
	private sealed class <>c__DisplayClass87_0
	{
		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float defaultVolume;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterControllerNavMesh <>4__this;

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x1F29EE0", Offset = "0x1F29EE0", VA = "0x1F29EE0")]
		public <>c__DisplayClass87_0()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x1F2A220", Offset = "0x1F2A220", VA = "0x1F2A220")]
		internal void <StopAggression>b__0()
		{
		}
	}

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NavMeshAgent Agent;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator AnimationController;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool OnlyCastAction;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<CharacterGameAction> PosibleCastAction;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Transform> PosibleCastPosition;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<CharacterGameAction> PosibleOtherAction;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float RotateTime;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float JumpDelay;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve JumpCurve;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector2 RandomMoveTimerRange;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float RandomMoveRadius;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector2 RandomActionTimerRange;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform Head;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform HandPosition;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ParticleSystem CastEffect;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFC680", Offset = "0xAFC680")]
	public float ProbabilityToCastAction;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSource WalkingSound;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioSource AggressionSound;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioSource CastSound;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<AudioClip> StartCastClips;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<AudioClip> CastClips;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<AudioClip> EndCastClips;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<AudioClip> DisturbClips;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float AggressionFadeTime;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	protected int _velocityAnimtionID;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected int _startCastID;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	protected int _endCastID;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected int _goToIdleID;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	protected int _startProvokeID;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected int _endProvokeID;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	protected int _jumpID;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected int _startAggresion;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	protected int _endAggresion;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected int _aggresionID;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected CharacterGameAction _currentAction;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected Transform _currentDestination;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected CompleteGameAction _endCastAction;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected CompleteGameAction _endOtherAction;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	protected Coroutine _currentCoroutine;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected bool _actionInProgress;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	protected bool _aggressionInProgress;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected EventTimer _randomMoveTimer;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected EventTimer _randomActionTimer;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected Vector3 _moveDestination;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	protected bool _endlessMove;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	protected float _deffaultNotAgentVelocity;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	protected float _notAgentVelocity;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool _stopCast;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private AudioClip _lastCastClip;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private List<AudioClip> _castCachedClips;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private CompleteGameAction _aggressionCompleteAction;

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x1F27F3C", Offset = "0x1F27F3C", VA = "0x1F27F3C", Slot = "16")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x1F280A8", Offset = "0x1F280A8", VA = "0x1F280A8")]
	private void OnLevelCompleteEvent()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x1F280B4", Offset = "0x1F280B4", VA = "0x1F280B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x1F280BC", Offset = "0x1F280BC", VA = "0x1F280BC")]
	public void StartCast()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x1F2825C", Offset = "0x1F2825C", VA = "0x1F2825C")]
	public void StartProvoke()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x1F28280", Offset = "0x1F28280", VA = "0x1F28280")]
	public void EndProvoke()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x1F282A4", Offset = "0x1F282A4", VA = "0x1F282A4")]
	public void OnCast()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x1F28348", Offset = "0x1F28348", VA = "0x1F28348")]
	public void PlayCastSound()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x1F28538", Offset = "0x1F28538", VA = "0x1F28538")]
	public void PlayEndCastSound()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x1F28168", Offset = "0x1F28168", VA = "0x1F28168")]
	public void PlayStartCastSound()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x1F2862C", Offset = "0x1F2862C", VA = "0x1F2862C")]
	public void PlayDisturbSound()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x1F28720", Offset = "0x1F28720", VA = "0x1F28720")]
	public void PlayCustomSound(AudioClip clip)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x1F287D4", Offset = "0x1F287D4", VA = "0x1F287D4")]
	public void EndCastAction()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x1F287E0", Offset = "0x1F287E0", VA = "0x1F287E0")]
	public void EndAction()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x1F287EC", Offset = "0x1F287EC", VA = "0x1F287EC")]
	public void Move(Vector3 position, CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x1F28940", Offset = "0x1F28940", VA = "0x1F28940")]
	public void Rotate(Quaternion rotate, CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x1F28A4C", Offset = "0x1F28A4C", VA = "0x1F28A4C")]
	public void LookAt(Vector3 target, CompleteGameAction oncomplete)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x1F28B5C", Offset = "0x1F28B5C", VA = "0x1F28B5C")]
	public void DoJump(Vector3 position, float jumpPower, float jumpTime, CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x1F28CB8", Offset = "0x1F28CB8", VA = "0x1F28CB8")]
	public void SetEndlessMove()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x1F28DB4", Offset = "0x1F28DB4", VA = "0x1F28DB4")]
	public void SetDeffaultMove()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x1F28F2C", Offset = "0x1F28F2C", VA = "0x1F28F2C")]
	public void DoCastAction()
	{
	}

	[Token(Token = "0x60003FC")]
	public abstract void EndCastEffect(Vector3 targetPosition);

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x1F290C4", Offset = "0x1F290C4", VA = "0x1F290C4")]
	public void DoOtherAction()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x1F2888C", Offset = "0x1F2888C", VA = "0x1F2888C")]
	public void StartCheckCoroutine(CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1F291B8", Offset = "0x1F291B8", VA = "0x1F291B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE994", Offset = "0xAFE994")]
	protected IEnumerator CheckDistance(CompleteGameAction onComplete)
	{
		return null;
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x1F29260", Offset = "0x1F29260", VA = "0x1F29260", Slot = "20")]
	protected virtual float GetVelocityMagnitude()
	{
		return default(float);
	}

	[Token(Token = "0x6000401")]
	protected abstract void OnUpdate();

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x1F292B8", Offset = "0x1F292B8", VA = "0x1F292B8")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x1F2931C", Offset = "0x1F2931C", VA = "0x1F2931C")]
	protected void DoRandomAction()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x1F29370", Offset = "0x1F29370", VA = "0x1F29370")]
	public void RandomMove()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x1F294B8", Offset = "0x1F294B8", VA = "0x1F294B8")]
	public static Vector2 RandomPointOnUnitCircle(float radius)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x1F29578", Offset = "0x1F29578", VA = "0x1F29578")]
	public void StartAggression(CompleteGameAction action)
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x1F297FC", Offset = "0x1F297FC", VA = "0x1F297FC")]
	private void DoAggression()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x1F298C0", Offset = "0x1F298C0", VA = "0x1F298C0")]
	public bool IsAggressionInProgress()
	{
		return default(bool);
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x1F298C8", Offset = "0x1F298C8", VA = "0x1F298C8", Slot = "13")]
	public override void OnInteractionStart(Wand wand)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x1F29D3C", Offset = "0x1F29D3C", VA = "0x1F29D3C")]
	public void ResetRandomMoveTimer()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x1F29D5C", Offset = "0x1F29D5C", VA = "0x1F29D5C")]
	public void StopAggression()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x1F29EE8", Offset = "0x1F29EE8", VA = "0x1F29EE8")]
	protected CharacterControllerNavMesh()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x1F2A0C8", Offset = "0x1F2A0C8", VA = "0x1F2A0C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE9F8", Offset = "0xAFE9F8")]
	private float <SetEndlessMove>b__68_0()
	{
		return default(float);
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x1F2A0D0", Offset = "0x1F2A0D0", VA = "0x1F2A0D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEA08", Offset = "0xAFEA08")]
	private void <SetEndlessMove>b__68_1(float value)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1F2A0D8", Offset = "0x1F2A0D8", VA = "0x1F2A0D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEA18", Offset = "0xAFEA18")]
	private float <SetDeffaultMove>b__69_0()
	{
		return default(float);
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x1F2A0E0", Offset = "0x1F2A0E0", VA = "0x1F2A0E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEA28", Offset = "0xAFEA28")]
	private void <SetDeffaultMove>b__69_1(float value)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1F2A0E8", Offset = "0x1F2A0E8", VA = "0x1F2A0E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEA38", Offset = "0xAFEA38")]
	private void <SetDeffaultMove>b__69_2()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x1F2A0F0", Offset = "0x1F2A0F0", VA = "0x1F2A0F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEA48", Offset = "0xAFEA48")]
	private void <DoCastAction>b__70_0()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x1F2A144", Offset = "0x1F2A144", VA = "0x1F2A144")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEA58", Offset = "0xAFEA58")]
	private void <OnInteractionStart>b__85_0()
	{
	}
}
[Token(Token = "0x20000D7")]
public class CharacterWandEffect : PoolableBehaviour, IUpdatable
{
	[Token(Token = "0x4000530")]
	public const int POOL_SIZE = 128;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PrefabPool<CharacterWandEffect> _pool;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ScaleTime;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float DelayTimeBetweenRelease;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer SphereMesh;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float RotateSpeed;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float FlySpeed;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve RotateCurve;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _target;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _defaultScale;

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x1F2A44C", Offset = "0x1F2A44C", VA = "0x1F2A44C")]
	public static void InitPool(PrefabPool<CharacterWandEffect> pool)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x1F29ABC", Offset = "0x1F29ABC", VA = "0x1F29ABC")]
	public static CharacterWandEffect Get()
	{
		return null;
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1F29B1C", Offset = "0x1F29B1C", VA = "0x1F29B1C")]
	public void Init(Transform startPoint, Transform endPoint)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x1F2A4A0", Offset = "0x1F2A4A0", VA = "0x1F2A4A0")]
	private void OnLoadCompleteEvent(LevelLoader.LevelID level, LevelLoader.LevelRegion region, LevelLoader.LevelID previouslevel)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x1F2A59C", Offset = "0x1F2A59C", VA = "0x1F2A59C", Slot = "17")]
	public void OnUpdate()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x1F2A9C4", Offset = "0x1F2A9C4", VA = "0x1F2A9C4")]
	public CharacterWandEffect()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x1F2AA38", Offset = "0x1F2AA38", VA = "0x1F2AA38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEA68", Offset = "0xAFEA68")]
	private void <Init>b__12_0()
	{
	}
}
[Token(Token = "0x20000D8")]
public class GoToLobbyButton : MonoBehaviour
{
	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameMenuButton LobbyButton;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource Hover;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource Press;

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x1F40DBC", Offset = "0x1F40DBC", VA = "0x1F40DBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x1F40F30", Offset = "0x1F40F30", VA = "0x1F40F30")]
	private void OnHover()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x1F40F4C", Offset = "0x1F40F4C", VA = "0x1F40F4C")]
	private void OnInteractionStarted()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x1F4103C", Offset = "0x1F4103C", VA = "0x1F4103C")]
	public GoToLobbyButton()
	{
	}
}
[Token(Token = "0x20000D9")]
public class HitSounds : MonoBehaviour
{
	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource Sound;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 PitchRange;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _isActive;

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x1F48ED4", Offset = "0x1F48ED4", VA = "0x1F48ED4")]
	public void SetActive()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x1F48EE0", Offset = "0x1F48EE0", VA = "0x1F48EE0")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x1F48EE8", Offset = "0x1F48EE8", VA = "0x1F48EE8")]
	private void AutoLink()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x1F48F40", Offset = "0x1F48F40", VA = "0x1F48F40")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x1F48FA0", Offset = "0x1F48FA0", VA = "0x1F48FA0")]
	public HitSounds()
	{
	}
}
[Token(Token = "0x20000DA")]
public class PhysicsTremor : MonoBehaviour
{
	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Rigidbody> Bodys;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MeshRenderer> Renderers;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve EmissiveCurve;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAFC698", Offset = "0xAFC698")]
	public Color TargetColor;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float TweenTime;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector2 TremorPowerRange;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Tween> _tweens;

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xD3DAD4", Offset = "0xD3DAD4", VA = "0xD3DAD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xD3DBA8", Offset = "0xD3DBA8", VA = "0xD3DBA8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xD3DCAC", Offset = "0xD3DCAC", VA = "0xD3DCAC")]
	public PhysicsTremor()
	{
	}
}
[Token(Token = "0x20000DB")]
public class SyncPlayerHeadWithTargetPoint : MonoBehaviour
{
	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform TargetPoint;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera VR_cam;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Rig;

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xDFB2A0", Offset = "0xDFB2A0", VA = "0xDFB2A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xDFB338", Offset = "0xDFB338", VA = "0xDFB338")]
	public SyncPlayerHeadWithTargetPoint()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xDFB340", Offset = "0xDFB340", VA = "0xDFB340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEA78", Offset = "0xAFEA78")]
	private void <Start>b__3_0()
	{
	}
}
[Token(Token = "0x20000DC")]
public class URP_PP_VigneteFader : MonoBehaviour
{
	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Volume PP_Volume;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TweenTime;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float StartIntensity;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve FadeCurve;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vignette _vignette;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _defaultIntensity;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Tween _currentTween;

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xE048A8", Offset = "0xE048A8", VA = "0xE048A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xE04958", Offset = "0xE04958", VA = "0xE04958")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xE04A5C", Offset = "0xE04A5C", VA = "0xE04A5C")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xE04B64", Offset = "0xE04B64", VA = "0xE04B64")]
	public URP_PP_VigneteFader()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xE04B78", Offset = "0xE04B78", VA = "0xE04B78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEA88", Offset = "0xAFEA88")]
	private float <FadeIn>b__8_0()
	{
		return default(float);
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xE04BA4", Offset = "0xE04BA4", VA = "0xE04BA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEA98", Offset = "0xAFEA98")]
	private void <FadeIn>b__8_1(float value)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xE04BD4", Offset = "0xE04BD4", VA = "0xE04BD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEAA8", Offset = "0xAFEAA8")]
	private float <FadeOut>b__9_0()
	{
		return default(float);
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xE04C00", Offset = "0xE04C00", VA = "0xE04C00")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEAB8", Offset = "0xAFEAB8")]
	private void <FadeOut>b__9_1(float value)
	{
	}
}
[Token(Token = "0x20000DD")]
public class WaitForEnableTimeline : MonoBehaviour
{
	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayableDirector TimeLIne;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float WaitTime;

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xE074B8", Offset = "0xE074B8", VA = "0xE074B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xE0755C", Offset = "0xE0755C", VA = "0xE0755C")]
	public WaitForEnableTimeline()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xE0756C", Offset = "0xE0756C", VA = "0xE0756C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEAC8", Offset = "0xAFEAC8")]
	private void <OnEnable>b__2_0()
	{
	}
}
[Token(Token = "0x20000DE")]
public class CloudKiteRopeController : MonoBehaviour
{
	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer Line;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> Points;

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x1F082BC", Offset = "0x1F082BC", VA = "0x1F082BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x1F082C0", Offset = "0x1F082C0", VA = "0x1F082C0")]
	private void UpdatePoints()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x1F08370", Offset = "0x1F08370", VA = "0x1F08370")]
	public CloudKiteRopeController()
	{
	}
}
[Token(Token = "0x20000DF")]
public class DelayAnimationObject : MonoBehaviour
{
	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation AnimationController;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 RandomDelayTimeRange;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TimerEvent _delayOnAwake;

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x1EFA8E4", Offset = "0x1EFA8E4", VA = "0x1EFA8E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x1EFA998", Offset = "0x1EFA998", VA = "0x1EFA998")]
	private void DelayOnAwake()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x1EFA9B4", Offset = "0x1EFA9B4", VA = "0x1EFA9B4")]
	public DelayAnimationObject()
	{
	}
}
[Token(Token = "0x20000E0")]
public class DragonCharacterEffect : PoolableBehaviour
{
	[Token(Token = "0x4000558")]
	public const int POOL_SIZE = 128;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PrefabPool<DragonCharacterEffect> _pool;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float FlyTime;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float DelayTimeBetweenRelease;

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x1EFD3E8", Offset = "0x1EFD3E8", VA = "0x1EFD3E8")]
	public static void InitPool(PrefabPool<DragonCharacterEffect> pool)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x1EFD43C", Offset = "0x1EFD43C", VA = "0x1EFD43C")]
	public static DragonCharacterEffect Get()
	{
		return null;
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x1EFD49C", Offset = "0x1EFD49C", VA = "0x1EFD49C")]
	public void Init(Transform startPoint, Transform endPoint)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x1EFD59C", Offset = "0x1EFD59C", VA = "0x1EFD59C")]
	public DragonCharacterEffect()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x1EFD610", Offset = "0x1EFD610", VA = "0x1EFD610")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEAD8", Offset = "0xAFEAD8")]
	private void <Init>b__6_0()
	{
	}
}
[Token(Token = "0x20000E1")]
public class DragonControllerNavMesh : CharacterControllerNavMesh
{
	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public ParticleSystem EndCastFireEffect;

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x1EFD69C", Offset = "0x1EFD69C", VA = "0x1EFD69C", Slot = "19")]
	public override void EndCastEffect(Vector3 targetPosition)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x1EFD6A0", Offset = "0x1EFD6A0", VA = "0x1EFD6A0", Slot = "21")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x1EFD78C", Offset = "0x1EFD78C", VA = "0x1EFD78C")]
	public DragonControllerNavMesh()
	{
	}
}
[Token(Token = "0x20000E2")]
public class FinalFade : MonoBehaviour
{
	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Volume PP_Volume;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TweenTimeExposure;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float TweenTimeColor;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float UpExposure;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color OFF_Color;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _defaultExpsoure;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color _defaultColorFilter;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ColorAdjustments _colorAdjust;

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x1F3650C", Offset = "0x1F3650C", VA = "0x1F3650C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x1F365D0", Offset = "0x1F365D0", VA = "0x1F365D0")]
	public void StartFade()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x1F366E4", Offset = "0x1F366E4", VA = "0x1F366E4")]
	public void StartExposure()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x1F36744", Offset = "0x1F36744", VA = "0x1F36744")]
	public void ExposureUp()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x1F367A4", Offset = "0x1F367A4", VA = "0x1F367A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x1F36804", Offset = "0x1F36804", VA = "0x1F36804")]
	public FinalFade()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x1F36820", Offset = "0x1F36820", VA = "0x1F36820")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEAE8", Offset = "0xAFEAE8")]
	private Color <StartFade>b__9_0()
	{
		return default(Color);
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x1F3684C", Offset = "0x1F3684C", VA = "0x1F3684C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEAF8", Offset = "0xAFEAF8")]
	private void <StartFade>b__9_1(Color value)
	{
	}
}
[Token(Token = "0x20000E3")]
public class MrSnowThrow : MonoBehaviour
{
	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> Snowballs;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> Targets;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ThrowPower;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ThrowTime;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve Curve;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform HandPosition;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator AnimController;

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xE14ADC", Offset = "0xE14ADC", VA = "0xE14ADC")]
	public void Throw()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xE14B98", Offset = "0xE14B98", VA = "0xE14B98")]
	public MrSnowThrow()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xE14BAC", Offset = "0xE14BAC", VA = "0xE14BAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEB08", Offset = "0xAFEB08")]
	private void <Throw>b__7_0()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xE14C48", Offset = "0xE14C48", VA = "0xE14C48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEB18", Offset = "0xAFEB18")]
	private void <Throw>b__7_1()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xE14DE0", Offset = "0xE14DE0", VA = "0xE14DE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEB28", Offset = "0xAFEB28")]
	private void <Throw>b__7_2()
	{
	}
}
[Token(Token = "0x20000E4")]
public class TimeLineEvents : MonoBehaviour
{
	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Action _onTimeLineStart;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Action _onTimeLineEnd;

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xE02698", Offset = "0xE02698", VA = "0xE02698")]
	public static void SubscribeOnTimeLineStart(Action action)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xE02724", Offset = "0xE02724", VA = "0xE02724")]
	public static void UnSubscribeOnTimeLineStart(Action action)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xE027B0", Offset = "0xE027B0", VA = "0xE027B0")]
	public static void SubscribeOnTimeLineEnd(Action action)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xE0283C", Offset = "0xE0283C", VA = "0xE0283C")]
	public static void UnSubscribeOnTimeLineEnd(Action action)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xE028C8", Offset = "0xE028C8", VA = "0xE028C8")]
	public void TimeLineStart()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xE02930", Offset = "0xE02930", VA = "0xE02930")]
	public void TimeLineEnd()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xE0299C", Offset = "0xE0299C", VA = "0xE0299C")]
	public TimeLineEvents()
	{
	}
}
[Token(Token = "0x20000E5")]
public class FlyToPointObject : PoolableBehaviour, IUpdatable
{
	[Token(Token = "0x400056E")]
	public const int POOL_SIZE = 128;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PrefabPool<FlyToPointObject> _pool;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float MaxSpeed;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float RotateSpeed;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float StartUpTime;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve Curve;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _startSpeed;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TargetPoint _target;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform _cachedTransform;

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x1F38B64", Offset = "0x1F38B64", VA = "0x1F38B64")]
	public static void InitPool(PrefabPool<FlyToPointObject> pool)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x1F38BB8", Offset = "0x1F38BB8", VA = "0x1F38BB8")]
	public static FlyToPointObject Get()
	{
		return null;
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x1F38C18", Offset = "0x1F38C18", VA = "0x1F38C18", Slot = "12")]
	public override void OnCreate(Action turnBackEvent)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x1F38C4C", Offset = "0x1F38C4C", VA = "0x1F38C4C", Slot = "10")]
	public override void OnPull()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x1F38DBC", Offset = "0x1F38DBC", VA = "0x1F38DBC", Slot = "17")]
	public void OnUpdate()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x1F390BC", Offset = "0x1F390BC", VA = "0x1F390BC", Slot = "11")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x1F39180", Offset = "0x1F39180", VA = "0x1F39180")]
	public FlyToPointObject()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x1F391E8", Offset = "0x1F391E8", VA = "0x1F391E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEB38", Offset = "0xAFEB38")]
	private float <OnPull>b__12_0()
	{
		return default(float);
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x1F391F0", Offset = "0x1F391F0", VA = "0x1F391F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEB48", Offset = "0xAFEB48")]
	private void <OnPull>b__12_1(float value)
	{
	}
}
[Token(Token = "0x20000E6")]
public class FlyToTarget : MonoBehaviour, IUpdatable
{
	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MaxSpeed;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float StartUpTime;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve Curve;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 RandomRotateSpeedRange;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform StartTarget;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _cachedTransform;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _target;

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x1F391F8", Offset = "0x1F391F8", VA = "0x1F391F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x1F39270", Offset = "0x1F39270", VA = "0x1F39270")]
	private void Start()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x1F3932C", Offset = "0x1F3932C", VA = "0x1F3932C", Slot = "4")]
	public void OnUpdate()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x1F39638", Offset = "0x1F39638", VA = "0x1F39638")]
	public void RemoveTarget()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x1F39640", Offset = "0x1F39640", VA = "0x1F39640")]
	public FlyToTarget()
	{
	}
}
[Token(Token = "0x20000E7")]
public class FlyingObject : MonoBehaviour
{
	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody Body;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaxSpeed;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float RotateSpeed;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float StartUpTime;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float LifeTime;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve Curve;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<SpriteRenderer> Renderers;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 RotateRange;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _startSpeed;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _rotateSpeed;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _speedUpComplete;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EventTimer _timer;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private EventTimer _flyAwayTimer;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ButterfliesSitPoint _myPoint;

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x1F39F38", Offset = "0x1F39F38", VA = "0x1F39F38")]
	public void Init(CellType type, Color color)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x1F3A390", Offset = "0x1F3A390", VA = "0x1F3A390")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x1F3A468", Offset = "0x1F3A468", VA = "0x1F3A468")]
	private void Update()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x1F3A77C", Offset = "0x1F3A77C", VA = "0x1F3A77C")]
	private void DoOnEnd()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x1F3A7F8", Offset = "0x1F3A7F8", VA = "0x1F3A7F8")]
	public FlyingObject()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x1F3A890", Offset = "0x1F3A890", VA = "0x1F3A890")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEB58", Offset = "0xAFEB58")]
	private float <Init>b__13_0()
	{
		return default(float);
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x1F3A898", Offset = "0x1F3A898", VA = "0x1F3A898")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEB68", Offset = "0xAFEB68")]
	private void <Init>b__13_1(float value)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x1F3A8A0", Offset = "0x1F3A8A0", VA = "0x1F3A8A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEB78", Offset = "0xAFEB78")]
	private void <Init>b__13_2()
	{
	}
}
[Token(Token = "0x20000E8")]
public class LookZoneOnObject : MonoBehaviour
{
	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider RotateObjectCollider;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float RotateSpeedOnTarget;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float RotateSpeedDefault;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _currentTarget;

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x1EF008C", Offset = "0x1EF008C", VA = "0x1EF008C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x1EF012C", Offset = "0x1EF012C", VA = "0x1EF012C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x1EF01B4", Offset = "0x1EF01B4", VA = "0x1EF01B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x1EF04FC", Offset = "0x1EF04FC", VA = "0x1EF04FC")]
	public LookZoneOnObject()
	{
	}
}
[Token(Token = "0x20000E9")]
public class MicroBatCharacterControllerNavMesh : CharacterControllerNavMesh
{
	[Token(Token = "0x6000471")]
	[Address(RVA = "0xE0EDD0", Offset = "0xE0EDD0", VA = "0xE0EDD0", Slot = "19")]
	public override void EndCastEffect(Vector3 targetPosition)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xE0EDD4", Offset = "0xE0EDD4", VA = "0xE0EDD4", Slot = "21")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xE0F004", Offset = "0xE0F004", VA = "0xE0F004")]
	public MicroBatCharacterControllerNavMesh()
	{
	}
}
[Token(Token = "0x20000EA")]
public class MrSnowCharacterControolerNavMesh : CharacterControllerNavMesh
{
	[Token(Token = "0x6000474")]
	[Address(RVA = "0xE147FC", Offset = "0xE147FC", VA = "0xE147FC", Slot = "16")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xE14880", Offset = "0xE14880", VA = "0xE14880")]
	private void OnGenerationAnalysisComplete(Field field)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xE14904", Offset = "0xE14904", VA = "0xE14904", Slot = "17")]
	protected override void DoOnDisable()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xE1490C", Offset = "0xE1490C", VA = "0xE1490C", Slot = "19")]
	public override void EndCastEffect(Vector3 targetPosition)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xE14910", Offset = "0xE14910", VA = "0xE14910", Slot = "21")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xE14AD4", Offset = "0xE14AD4", VA = "0xE14AD4")]
	public MrSnowCharacterControolerNavMesh()
	{
	}
}
[Token(Token = "0x20000EB")]
public class NavMeshMover : MonoBehaviour
{
	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NavMeshAgent Agent;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EventTimer _timer;

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xE154EC", Offset = "0xE154EC", VA = "0xE154EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xE15508", Offset = "0xE15508", VA = "0xE15508")]
	private void Update()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xE1555C", Offset = "0xE1555C", VA = "0xE1555C")]
	public void Move()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xE1561C", Offset = "0xE1561C", VA = "0xE1561C")]
	public static Vector2 RandomPointOnUnitCircle(float radius)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xE156DC", Offset = "0xE156DC", VA = "0xE156DC")]
	public NavMeshMover()
	{
	}
}
[Token(Token = "0x20000EC")]
public enum Vector3Axis
{
	[Token(Token = "0x4000593")]
	X,
	[Token(Token = "0x4000594")]
	Y,
	[Token(Token = "0x4000595")]
	Z,
	[Token(Token = "0x4000596")]
	All
}
[Token(Token = "0x20000ED")]
public class ScalingObjectAction : BaseGameAction
{
	[Token(Token = "0x200037A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA838", Offset = "0xAFA838")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ScalingObjectAction <>4__this;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CompleteGameAction onComplete;

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xD49AAC", Offset = "0xD49AAC", VA = "0xD49AAC")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xD49ADC", Offset = "0xD49ADC", VA = "0xD49ADC")]
		internal void <Execute>b__0()
		{
		}
	}

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ScalingObject;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Time;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve Curve;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool SkipWaitComplete;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool FadeIn;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool OneAxis;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3Axis Axis;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool ExecuteOnEnable;

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xD49828", Offset = "0xD49828", VA = "0xD49828")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xD49844", Offset = "0xD49844", VA = "0xD49844")]
	private Tweener GetScaleTween(Vector3Axis axis)
	{
		return null;
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xD49940", Offset = "0xD49940", VA = "0xD49940", Slot = "4")]
	public override void Execute(CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xD49AB4", Offset = "0xD49AB4", VA = "0xD49AB4")]
	public void SimpleExecute()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xD49AC4", Offset = "0xD49AC4", VA = "0xD49AC4")]
	public ScalingObjectAction()
	{
	}
}
[Token(Token = "0x20000EE")]
public class StumpControllerNavMesh : CharacterControllerNavMesh
{
	[Token(Token = "0x200037B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA848", Offset = "0xAFA848")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StumpControllerNavMesh <>4__this;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 targetPosition;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xDFAA48", Offset = "0xDFAA48", VA = "0xDFAA48")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xDFAD1C", Offset = "0xDFAD1C", VA = "0xDFAD1C")]
		internal void <EndCastEffect>b__0()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xDFAE10", Offset = "0xDFAE10", VA = "0xDFAE10")]
		internal void <EndCastEffect>b__1()
		{
		}
	}

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public ParticleSystem CastMoveEffect;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ParticleSystem CastEndEffect;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float CastLineTime;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AnimationCurve CastMoveCurve;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float DelayToDisableCastMoveEffect;

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xDFA8D8", Offset = "0xDFA8D8", VA = "0xDFA8D8", Slot = "19")]
	public override void EndCastEffect(Vector3 targetPosition)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xDFAA50", Offset = "0xDFAA50", VA = "0xDFAA50", Slot = "21")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xDFAD00", Offset = "0xDFAD00", VA = "0xDFAD00")]
	public StumpControllerNavMesh()
	{
	}
}
[Token(Token = "0x20000EF")]
public class TargetPoint : MonoBehaviour
{
	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<TargetPoint> Points;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableMove;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve MoveCurve;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 TimeRange;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int ObjectCount;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<TargetPoint> _tmpTargetPoints;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TimerUpdateEvent _timerUpdateEvent;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EventTimer _timer;

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xDFB490", Offset = "0xDFB490", VA = "0xDFB490")]
	public static TargetPoint GetPoint()
	{
		return null;
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xDFB750", Offset = "0xDFB750", VA = "0xDFB750")]
	public void ReleasePoint()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xDFB760", Offset = "0xDFB760", VA = "0xDFB760")]
	private void Update()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xDFB814", Offset = "0xDFB814", VA = "0xDFB814")]
	private void Awake()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xDFB914", Offset = "0xDFB914", VA = "0xDFB914")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xDFB998", Offset = "0xDFB998", VA = "0xDFB998")]
	private void TimerUpdateEvent(float percent, float targettime)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xDFBA28", Offset = "0xDFBA28", VA = "0xDFBA28")]
	public TargetPoint()
	{
	}
}
[Token(Token = "0x20000F0")]
public class ArtifactAnimation : MonoBehaviour
{
	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Artifact;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TweenTime;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve Curve;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem BatFlyOnPlayer;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem LoopintBat;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TimerEvent _loopintBat;

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xE8638C", Offset = "0xE8638C", VA = "0xE8638C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xE863FC", Offset = "0xE863FC", VA = "0xE863FC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xE86504", Offset = "0xE86504", VA = "0xE86504")]
	private void PlayLoopintBat()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xE86520", Offset = "0xE86520", VA = "0xE86520")]
	public ArtifactAnimation()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xE86528", Offset = "0xE86528", VA = "0xE86528")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEB88", Offset = "0xAFEB88")]
	private void <OnEnable>b__7_0()
	{
	}
}
[Token(Token = "0x20000F1")]
public class EffectLifeCycleSound : MonoBehaviour
{
	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem Effect;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource Sound;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 PitchRange;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve ReplayCurve;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _idleDefaultVolume;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TimerEvent _fadeOutIdleSound;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _doReplay;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TimerEvent _replayTimer;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ParticleSystem.Particle[] _particles;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _startTime;

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x1EFF2DC", Offset = "0x1EFF2DC", VA = "0x1EFF2DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x1EFF34C", Offset = "0x1EFF34C", VA = "0x1EFF34C")]
	public void Execute()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x1EFF374", Offset = "0x1EFF374", VA = "0x1EFF374")]
	public void OnUpdate()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x1EFF490", Offset = "0x1EFF490", VA = "0x1EFF490")]
	private void ReplayTimer()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x1EFF49C", Offset = "0x1EFF49C", VA = "0x1EFF49C")]
	public EffectLifeCycleSound()
	{
	}
}
[Token(Token = "0x20000F2")]
public class PlayRandomSound : MonoBehaviour
{
	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AudioClip> Clips;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource Sound;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool PlayOnEnable;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float FadeTime;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _defaultVolume;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioClip _lastClip;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<AudioClip> _cachedClips;

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xD3DD24", Offset = "0xD3DD24", VA = "0xD3DD24")]
	private void Awake()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xD3DD58", Offset = "0xD3DD58", VA = "0xD3DD58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xD3DD68", Offset = "0xD3DD68", VA = "0xD3DD68")]
	public void Play()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xD3E008", Offset = "0xD3E008", VA = "0xD3E008")]
	public void Stop(bool fade)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xD3E0D0", Offset = "0xD3E0D0", VA = "0xD3E0D0")]
	public PlayRandomSound()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xD3E14C", Offset = "0xD3E14C", VA = "0xD3E14C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEB98", Offset = "0xAFEB98")]
	private void <Stop>b__10_0()
	{
	}
}
[Token(Token = "0x20000F3")]
public class SoundForFireMechanics : MonoBehaviour
{
	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FieldFireMechanicsValues FieldFireValue;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource Source;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve SoundCurve;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _maxFireOnField;

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xD53A40", Offset = "0xD53A40", VA = "0xD53A40")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xD53B20", Offset = "0xD53B20", VA = "0xD53B20")]
	private void OnFieldFireCellCount(int count)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xD53B70", Offset = "0xD53B70", VA = "0xD53B70")]
	public SoundForFireMechanics()
	{
	}
}
[Token(Token = "0x20000F4")]
public static class SoundMuffler
{
	[Serializable]
	[Token(Token = "0x200037C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA858", Offset = "0xAFA858")]
	private sealed class <>c
	{
		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static DOGetter<float> <>9__11_0;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static DOSetter<float> <>9__11_1;

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xDF4290", Offset = "0xDF4290", VA = "0xDF4290")]
		public <>c()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xDF4298", Offset = "0xDF4298", VA = "0xDF4298")]
		internal float <InitMuffler>b__11_0()
		{
			return default(float);
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xDF42E8", Offset = "0xDF42E8", VA = "0xDF42E8")]
		internal void <InitMuffler>b__11_1(float x)
		{
		}
	}

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Tweener _muffler;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AudioMixer _mixer;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float _defaultVolume;

	[Token(Token = "0x40005CA")]
	private const float FADE_TIME = 0.5f;

	[Token(Token = "0x40005CB")]
	private const float VOLUME_MIN = -20f;

	[Token(Token = "0x40005CC")]
	private const string MIXER_NAME = "Main";

	[Token(Token = "0x40005CD")]
	private const string CHANNEL_NAME = "Master";

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xD53B78", Offset = "0xD53B78", VA = "0xD53B78")]
	public static void FadeIn(bool instant = false)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xD53C2C", Offset = "0xD53C2C", VA = "0xD53C2C")]
	public static void FadeOut(bool instant = false)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xD53CE0", Offset = "0xD53CE0", VA = "0xD53CE0")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xAFEBA8", Offset = "0xAFEBA8")]
	public static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xD53CF4", Offset = "0xD53CF4", VA = "0xD53CF4")]
	private static void InitMixer()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xD53DF0", Offset = "0xD53DF0", VA = "0xD53DF0")]
	private static void InitMuffler()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xD54070", Offset = "0xD54070", VA = "0xD54070")]
	private static void UpdateTweenValue(float value)
	{
	}
}
[Token(Token = "0x20000F5")]
public class WindSoundGenerator : MonoBehaviour
{
	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 WindPushRandomTime;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<PlayRandomSound> Sounds;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> StartPoints;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Transform> EndPoints;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 FlySpeedRandomRange;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<AnimationCurve> FlyCurve;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float FadeSoundTime;

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x1CB63FC", Offset = "0x1CB63FC", VA = "0x1CB63FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x1CB6400", Offset = "0x1CB6400", VA = "0x1CB6400")]
	private void StartPushWind()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x1CB64B8", Offset = "0x1CB64B8", VA = "0x1CB64B8")]
	private void PushWind()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x1CB6740", Offset = "0x1CB6740", VA = "0x1CB6740")]
	public WindSoundGenerator()
	{
	}
}
[Token(Token = "0x20000F6")]
public class AnimatedBossAction : BossAction
{
	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BaseTweenVisualizer Visualizer;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TweenCallback _tweenOnComplete;

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xE85980", Offset = "0xE85980", VA = "0xE85980", Slot = "4")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xE859F4", Offset = "0xE859F4", VA = "0xE859F4", Slot = "6")]
	protected override void DoOnExecute()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xE85A1C", Offset = "0xE85A1C", VA = "0xE85A1C", Slot = "7")]
	protected override void DoOnAbort()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xE85A3C", Offset = "0xE85A3C", VA = "0xE85A3C")]
	public AnimatedBossAction()
	{
	}
}
[Token(Token = "0x20000F7")]
public enum HitEffectType
{
	[Token(Token = "0x40005D8")]
	Damage,
	[Token(Token = "0x40005D9")]
	Regeneration,
	[Token(Token = "0x40005DA")]
	MiniBatTwister,
	[Token(Token = "0x40005DB")]
	MiniBatPull,
	[Token(Token = "0x40005DC")]
	Lightning,
	[Token(Token = "0x40005DD")]
	TentacleEffect,
	[Token(Token = "0x40005DE")]
	LightningLavaBoss
}
[Token(Token = "0x20000F8")]
public class BaseHitEffect : PoolableBehaviour
{
	[Token(Token = "0x40005DF")]
	public const int POOL_SIZE = 32;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static MultiPrefabPool<HitEffectType, BaseHitEffect> _pool;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool Autoplay;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem Effect;

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xE88368", Offset = "0xE88368", VA = "0xE88368")]
	public static BaseHitEffect Get(HitEffectType type)
	{
		return null;
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xE883EC", Offset = "0xE883EC", VA = "0xE883EC")]
	public static void Register(HitEffectType type, GameObject prefab, [Optional] Transform poolRoot, int defaultSize = 0)
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xE88498", Offset = "0xE88498", VA = "0xE88498", Slot = "17")]
	public virtual void Play(Transform placeToPlay)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xE885C0", Offset = "0xE885C0", VA = "0xE885C0")]
	public BaseHitEffect()
	{
	}
}
[Token(Token = "0x20000F9")]
public abstract class BaseTweenVisualizer : MonoBehaviour
{
	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<DOTweenAnimation> TweenAnimations;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected List<Tween> _tweens;

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xE8AFFC", Offset = "0xE8AFFC", VA = "0xE8AFFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xE8B008", Offset = "0xE8B008", VA = "0xE8B008", Slot = "4")]
	protected virtual void OnStart()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xE8B0B8", Offset = "0xE8B0B8", VA = "0xE8B0B8")]
	private void GetTweens()
	{
	}

	[Token(Token = "0x60004B8")]
	public abstract void Play([Optional] TweenCallback onComplete);

	[Token(Token = "0x60004B9")]
	public abstract void Stop();

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xE8B1B8", Offset = "0xE8B1B8", VA = "0xE8B1B8")]
	protected BaseTweenVisualizer()
	{
	}
}
[Token(Token = "0x20000FA")]
public abstract class BossAction : MonoBehaviour
{
	[Token(Token = "0x200037D")]
	public delegate void OnBossActionCallback();

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xAFC6B0", Offset = "0xAFC6B0")]
	public int ActionWeight;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayRandomSound ActionSound;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected BossEntity Boss;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isActive;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OnBossActionCallback _onComplete;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OnBossActionCallback _onAbort;

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xE8BD10", Offset = "0xE8BD10", VA = "0xE8BD10")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xE859F0", Offset = "0xE859F0", VA = "0xE859F0", Slot = "4")]
	protected virtual void OnAwake()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xE8BD1C", Offset = "0xE8BD1C", VA = "0xE8BD1C")]
	protected void Complete()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xE8BF68", Offset = "0xE8BF68", VA = "0xE8BF68")]
	protected void Cancel()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xE8BF74", Offset = "0xE8BF74", VA = "0xE8BF74", Slot = "5")]
	protected virtual void DoOnComplete()
	{
	}

	[Token(Token = "0x60004C0")]
	protected abstract void DoOnExecute();

	[Token(Token = "0x60004C1")]
	protected abstract void DoOnAbort();

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xE8BF78", Offset = "0xE8BF78", VA = "0xE8BF78")]
	public static Cell GetRuneByRandomCoordinates(Field field)
	{
		return null;
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xE8BFF4", Offset = "0xE8BFF4", VA = "0xE8BFF4")]
	public void Execute(BossEntity boss)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xE8C0A4", Offset = "0xE8C0A4", VA = "0xE8C0A4")]
	public void Abort()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xE8C0E0", Offset = "0xE8C0E0", VA = "0xE8C0E0")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xE8C0E8", Offset = "0xE8C0E8", VA = "0xE8C0E8")]
	public BossAction OnComplete(OnBossActionCallback onComplete)
	{
		return null;
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xE8C0F0", Offset = "0xE8C0F0", VA = "0xE8C0F0")]
	public BossAction OnAbort(OnBossActionCallback onAbort)
	{
		return null;
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xE85A4C", Offset = "0xE85A4C", VA = "0xE85A4C")]
	protected BossAction()
	{
	}
}
[Token(Token = "0x20000FB")]
public class BossActionControl : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200037E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA868", Offset = "0xAFA868")]
	private sealed class <>c
	{
		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<BossAction, int> <>9__9_0;

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xE8CBBC", Offset = "0xE8CBBC", VA = "0xE8CBBC")]
		public <>c()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xE8CBC4", Offset = "0xE8CBC4", VA = "0xE8CBC4")]
		internal int <SelectRandomAction>b__9_0(BossAction item)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool AutoGetFromChildren;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool UseTimerToAddEvent;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xAFC6C4", Offset = "0xAFC6C4")]
	public float WaitToAddTime;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BossEntity BossLink;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<BossAction> ActionList;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TimerEvent _timerEvent;

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xE8C140", Offset = "0xE8C140", VA = "0xE8C140")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xE8C440", Offset = "0xE8C440", VA = "0xE8C440")]
	private bool CheckErrors()
	{
		return default(bool);
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xE8C55C", Offset = "0xE8C55C", VA = "0xE8C55C")]
	private void ActivateTimerSubscription()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xE8C6A8", Offset = "0xE8C6A8", VA = "0xE8C6A8")]
	protected BossAction SelectRandomAction()
	{
		return null;
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xE8C82C", Offset = "0xE8C82C", VA = "0xE8C82C")]
	private void TimerLogic()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xE8C8B8", Offset = "0xE8C8B8", VA = "0xE8C8B8", Slot = "4")]
	protected virtual void OnAwake()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xE8C9F8", Offset = "0xE8C9F8", VA = "0xE8C9F8", Slot = "5")]
	protected virtual void DoOnTimerLogic()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xE8CA04", Offset = "0xE8CA04", VA = "0xE8CA04", Slot = "6")]
	public virtual void AddActionToBoss()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xE8CB40", Offset = "0xE8CB40", VA = "0xE8CB40")]
	public BossActionControl()
	{
	}
}
[Token(Token = "0x20000FC")]
public class BossBodyPart : MonoBehaviour
{
	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform PartTransform;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2Int Dimensions;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Coordinates TopLeftCornerCoords;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2Int VerticalConstraints;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2Int HorizontalConstraints;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem ImpactEffect;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem BurnEffect;

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xE8CBDC", Offset = "0xE8CBDC", VA = "0xE8CBDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xE8CC04", Offset = "0xE8CC04", VA = "0xE8CC04")]
	public BossBodyPart()
	{
	}
}
[Token(Token = "0x20000FD")]
public class BossEntity : MonoBehaviour, IUpdatable
{
	[Token(Token = "0x200037F")]
	protected enum BossEntityState
	{
		[Token(Token = "0x40011A2")]
		Inactive,
		[Token(Token = "0x40011A3")]
		Idle,
		[Token(Token = "0x40011A4")]
		InAction,
		[Token(Token = "0x40011A5")]
		Dead
	}

	[Token(Token = "0x2000380")]
	public delegate void OnHealthChange(int currentHealth);

	[Token(Token = "0x2000381")]
	public delegate void OnBossAppear();

	[Token(Token = "0x2000382")]
	public delegate void OnBossDefeat();

	[Token(Token = "0x2000383")]
	public delegate void OnBossFieldChange(Field newField);

	[Token(Token = "0x40005F8")]
	private const int MAX_ACTION_QUEUE = 4;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xAFC6D8", Offset = "0xAFC6D8")]
	public int DefaultBossHealth;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xAFC6EC", Offset = "0xAFC6EC")]
	public int DefaultBossHeight;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xAFC700", Offset = "0xAFC700")]
	public int DefaultBossWidth;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float ShootRadius;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BossActionControl IdleActions;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BossVisualizer BossVisualPart;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BossMoveController MoveController;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ForceImpulseDuringDestruction;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float ForceCustomDespawnTime;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BossHitRegenEffectsZone HitRegenEffectControl;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform BossExplosionScatterPoint;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform ForwardSpellPosition;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform MidSpellPosition;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected int _currentBossHealth;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected OnHealthChange _onHealthChangeEvent;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private OnBossAppear _onBossAppearEvent;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private OnBossDefeat _onBossDefeatEvent;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private OnBossFieldChange _onBossFieldChangeEvent;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Field _currentBossField;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Queue<BossAction> _actionQueue;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private BossAction _currentActiveAction;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private BossEntityState _currentBossState;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _isBossActive;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OnImpactOrExplodeEvent _hiddenCellEvent;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _isInvincible;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Coordinates _currentBossCoordinates;

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xE8E3A8", Offset = "0xE8E3A8", VA = "0xE8E3A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xE8E490", Offset = "0xE8E490", VA = "0xE8E490")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xE8E498", Offset = "0xE8E498", VA = "0xE8E498")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xE8E500", Offset = "0xE8E500", VA = "0xE8E500")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xE8E650", Offset = "0xE8E650", VA = "0xE8E650")]
	private void DoOnLoadStart(LevelLoader.LevelID level, LevelLoader.LevelRegion region, LevelLoader.LevelID previousLevel)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xE8E6DC", Offset = "0xE8E6DC", VA = "0xE8E6DC")]
	protected void Spawn(Field field)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xE8EB18", Offset = "0xE8EB18", VA = "0xE8EB18")]
	private void Defeat()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xE8EC60", Offset = "0xE8EC60", VA = "0xE8EC60")]
	private void TakeDamage(Cell cell)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xE8E814", Offset = "0xE8E814", VA = "0xE8E814")]
	protected void ChangeState(BossEntityState newState)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xE8F174", Offset = "0xE8F174", VA = "0xE8F174")]
	private void DoOnIdleState()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xE8F1E4", Offset = "0xE8F1E4", VA = "0xE8F1E4")]
	private void DoOnInActionState()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xE8F24C", Offset = "0xE8F24C", VA = "0xE8F24C")]
	private void DoOnDeathState()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xE8F484", Offset = "0xE8F484", VA = "0xE8F484")]
	private void CheckNextAction()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xE8F540", Offset = "0xE8F540", VA = "0xE8F540", Slot = "5")]
	protected virtual void OnAwake()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xE8F5F4", Offset = "0xE8F5F4", VA = "0xE8F5F4")]
	public void SubOnHealthChangeEvent(OnHealthChange onEvent)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xE8F674", Offset = "0xE8F674", VA = "0xE8F674")]
	public void UnsubOnHealthChangeEvent(OnHealthChange onEvent)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xE8C978", Offset = "0xE8C978", VA = "0xE8C978")]
	public void SubOnBossAppearEvent(OnBossAppear onEvent)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xE8C628", Offset = "0xE8C628", VA = "0xE8C628")]
	public void UnsubOnBossAppearEvent(OnBossAppear onEvent)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xE8F6F4", Offset = "0xE8F6F4", VA = "0xE8F6F4")]
	public void SubOnBossDefeatEvent(OnBossDefeat onEvent)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xE8F774", Offset = "0xE8F774", VA = "0xE8F774")]
	public void UnsubOnBossDefeatEvent(OnBossDefeat onEvent)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xE8F7F4", Offset = "0xE8F7F4", VA = "0xE8F7F4")]
	public void SubOnBossFieldChangeEvent(OnBossFieldChange onEvent)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xE8F874", Offset = "0xE8F874", VA = "0xE8F874")]
	public void UnsubOnBossFieldChangeEvent(OnBossFieldChange onEvent)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xE8F8F4", Offset = "0xE8F8F4", VA = "0xE8F8F4")]
	public void ForcedEnqueueAction(BossAction action)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xE8F974", Offset = "0xE8F974", VA = "0xE8F974")]
	public void ForcedEnqueueAction(List<BossAction> bossActions)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xE8FA40", Offset = "0xE8FA40", VA = "0xE8FA40")]
	public void ForcedExecute(BossAction forceAction)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xE8CA3C", Offset = "0xE8CA3C", VA = "0xE8CA3C")]
	public bool TryEnqueueAction(BossAction action, bool overrideAll = false, bool ignoreLimit = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xE8FAC4", Offset = "0xE8FAC4", VA = "0xE8FAC4")]
	public int GetCurrentHealth()
	{
		return default(int);
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xE8FACC", Offset = "0xE8FACC", VA = "0xE8FACC")]
	public void SetInvincibleState(bool isInvincible)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xE8FAD8", Offset = "0xE8FAD8", VA = "0xE8FAD8")]
	public Coordinates GetCurrentBossCoordinates()
	{
		return default(Coordinates);
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xE8FAE0", Offset = "0xE8FAE0", VA = "0xE8FAE0")]
	public void SetCurrentBossCoordinates(Coordinates newCoords)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xE8FAE8", Offset = "0xE8FAE8", VA = "0xE8FAE8")]
	public void Regenerate(int addHealth = 1)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xE8FC34", Offset = "0xE8FC34", VA = "0xE8FC34")]
	public Field GetBossField()
	{
		return null;
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xE8E74C", Offset = "0xE8E74C", VA = "0xE8E74C")]
	public void ChangeField(Field newField)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xE8FFD0", Offset = "0xE8FFD0", VA = "0xE8FFD0", Slot = "4")]
	public void OnUpdate()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xE90044", Offset = "0xE90044", VA = "0xE90044")]
	public void SetDespawnEffect(Cell cell, float forceImpulse, float despawnTime, bool useBossPosition, ScatteringEffectWithCustomImpulse.CustomScatteringType scatteringType = ScatteringEffectWithCustomImpulse.CustomScatteringType.DefaultBehaviour, float radius = 1f)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xE901A4", Offset = "0xE901A4", VA = "0xE901A4")]
	public void SetDespawnEffect(Cell cell)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xE901B8", Offset = "0xE901B8", VA = "0xE901B8")]
	public BossEntity()
	{
	}
}
[Token(Token = "0x20000FE")]
public class BossHitRegenEffectsZone : MonoBehaviour
{
	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> EffectPoints;

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xE8ED64", Offset = "0xE8ED64", VA = "0xE8ED64")]
	public void HitEffect()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xE8FB6C", Offset = "0xE8FB6C", VA = "0xE8FB6C")]
	public void RegenEffect()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xE90694", Offset = "0xE90694", VA = "0xE90694")]
	public BossHitRegenEffectsZone()
	{
	}
}
[Token(Token = "0x20000FF")]
public class BossIdleWait : BossAction
{
	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xAFC714", Offset = "0xAFC714")]
	public float MinimalIdleTime;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xAFC728", Offset = "0xAFC728")]
	public float MaximalIdleTime;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TimerEvent _timerEvent;

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xE9069C", Offset = "0xE9069C", VA = "0xE9069C", Slot = "4")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xE9070C", Offset = "0xE9070C", VA = "0xE9070C", Slot = "6")]
	protected override void DoOnExecute()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xE90794", Offset = "0xE90794", VA = "0xE90794", Slot = "7")]
	protected override void DoOnAbort()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xE90800", Offset = "0xE90800", VA = "0xE90800")]
	private void WaitToComplete()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xE90804", Offset = "0xE90804", VA = "0xE90804")]
	public BossIdleWait()
	{
	}
}
[Token(Token = "0x2000100")]
public class BossLinkedActions : BossAction, IUpdatable
{
	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<BossAction> LinkedActions;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private BossAction _currentAction;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _currentListIndex;

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xE9081C", Offset = "0xE9081C", VA = "0xE9081C", Slot = "6")]
	protected override void DoOnExecute()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xE908BC", Offset = "0xE908BC", VA = "0xE908BC", Slot = "7")]
	protected override void DoOnAbort()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xE90934", Offset = "0xE90934", VA = "0xE90934", Slot = "8")]
	public void OnUpdate()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xE90A28", Offset = "0xE90A28", VA = "0xE90A28")]
	public BossLinkedActions()
	{
	}
}
[Token(Token = "0x2000101")]
public class BossMoveController : MonoBehaviour
{
	[Token(Token = "0x2000384")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA878", Offset = "0xAFA878")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BossMoveController <>4__this;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TweenCallback onComplete;

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xE90D80", Offset = "0xE90D80", VA = "0xE90D80")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xE91028", Offset = "0xE91028", VA = "0xE91028")]
		internal void <DoSingleBossJump>b__0()
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xE91074", Offset = "0xE91074", VA = "0xE91074")]
		internal void <DoSingleBossJump>b__1()
		{
		}
	}

	[Token(Token = "0x2000385")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA888", Offset = "0xAFA888")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TweenCallback onComplete;

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xE90EA8", Offset = "0xE90EA8", VA = "0xE90EA8")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xE910E0", Offset = "0xE910E0", VA = "0xE910E0")]
		internal void <DoSerialBossJump>b__0()
		{
		}
	}

	[Token(Token = "0x2000386")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA898", Offset = "0xAFA898")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BossMoveController <>4__this;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool stopFly;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TweenCallback onComplete;

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xE90EB0", Offset = "0xE90EB0", VA = "0xE90EB0")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xE910F4", Offset = "0xE910F4", VA = "0xE910F4")]
		internal void <DoFlyToPoint>b__0()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xE9111C", Offset = "0xE9111C", VA = "0xE9111C")]
		internal void <DoFlyToPoint>b__1()
		{
		}
	}

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem BossMoveEffect;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BossWingsController WingsController;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Boss;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float SingleJumpPower;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float SingleJumpDuration;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Ease SingleJumpEase;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float SerialJumpPower;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float SerialJumpDuration;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Ease SerialJumpEase;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float MoveDuration;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Ease MoveEase;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Tween _tween;

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xE90A38", Offset = "0xE90A38", VA = "0xE90A38")]
	private void TestJumpToCell(Cell cell, Field field, int jumpsCount)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xE90B94", Offset = "0xE90B94", VA = "0xE90B94")]
	public void DoSingleBossJump(Vector3 jumpPosition, [Optional] TweenCallback onComplete)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xE90A80", Offset = "0xE90A80", VA = "0xE90A80")]
	public void DoSerialBossJump(Vector3 jumpPosition, int jumpsCount, [Optional] TweenCallback onComplete)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xE8DDAC", Offset = "0xE8DDAC", VA = "0xE8DDAC")]
	public void DoFlyToPoint(Vector3 movePoint, bool stopFly, [Optional] TweenCallback onComplete)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xE90EB8", Offset = "0xE90EB8", VA = "0xE90EB8")]
	public void StopMovement()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xE90FF8", Offset = "0xE90FF8", VA = "0xE90FF8")]
	public BossMoveController()
	{
	}
}
[Token(Token = "0x2000102")]
public class BossMultiAction : BossAction
{
	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<BossAction> ActionSequence;

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xE91170", Offset = "0xE91170", VA = "0xE91170", Slot = "6")]
	protected override void DoOnExecute()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xE9121C", Offset = "0xE9121C", VA = "0xE9121C", Slot = "7")]
	protected override void DoOnAbort()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xE912B0", Offset = "0xE912B0", VA = "0xE912B0")]
	public BossMultiAction()
	{
	}
}
[Token(Token = "0x2000103")]
public class BossPositionEffectController : MonoBehaviour
{
	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem PositionEffect;

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xE912C0", Offset = "0xE912C0", VA = "0xE912C0")]
	public void MoveTo(Vector3 pos)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xE91314", Offset = "0xE91314", VA = "0xE91314")]
	public void Play()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xE91330", Offset = "0xE91330", VA = "0xE91330")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xE91354", Offset = "0xE91354", VA = "0xE91354")]
	public BossPositionEffectController()
	{
	}
}
[Token(Token = "0x2000104")]
public class BossVisualizer : MonoBehaviour
{
	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Renderer> BossVisualParts;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BossAction SpawnAction;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BossAction DespawnAction;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SimpleTweenVisualizer DamageTween;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayRandomSound TakeDamageSounds;

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xE91BA8", Offset = "0xE91BA8", VA = "0xE91BA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xE8E764", Offset = "0xE8E764", VA = "0xE8E764")]
	public void Spawn(BossEntity boss)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xE8EBBC", Offset = "0xE8EBBC", VA = "0xE8EBBC")]
	public void Despawn(BossEntity boss)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xE91C64", Offset = "0xE91C64", VA = "0xE91C64")]
	public void RenderersState(bool isEnabled)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xE8EE2C", Offset = "0xE8EE2C", VA = "0xE8EE2C")]
	public void TakeDamageVisualization()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xE91D08", Offset = "0xE91D08", VA = "0xE91D08")]
	public BossVisualizer()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xE91D10", Offset = "0xE91D10", VA = "0xE91D10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEBBC", Offset = "0xAFEBBC")]
	private void <Awake>b__5_0()
	{
	}
}
[Token(Token = "0x2000105")]
public class BossWing : MonoBehaviour
{
	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Wing;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SimpleTweenVisualizer ShowAnimation;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleTweenVisualizer HideAnimation;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SimpleTweenVisualizer FlyAnimation;

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xE91D18", Offset = "0xE91D18", VA = "0xE91D18")]
	public void StartFly()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xE91D64", Offset = "0xE91D64", VA = "0xE91D64")]
	public void StopFly()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xE91DAC", Offset = "0xE91DAC", VA = "0xE91DAC")]
	public BossWing()
	{
	}
}
[Token(Token = "0x2000106")]
public class BossWingsController : MonoBehaviour
{
	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<BossWing> WingsList;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SimpleTweenVisualizer HoverAction;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float CallbackDelay;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayRandomSound WingsSound;

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xE90D88", Offset = "0xE90D88", VA = "0xE90D88")]
	public void StartFly([Optional] TweenCallback onComplete)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xE90EF4", Offset = "0xE90EF4", VA = "0xE90EF4")]
	public void StopFly()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xE91DB4", Offset = "0xE91DB4", VA = "0xE91DB4")]
	public BossWingsController()
	{
	}
}
[Token(Token = "0x2000107")]
public class EvilEyeDespawnAction : AnimatedBossAction
{
	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem DespawnBatTwister;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BossPositionEffectController PositionAura;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource DespawnSound;

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x1F02D04", Offset = "0x1F02D04", VA = "0x1F02D04", Slot = "6")]
	protected override void DoOnExecute()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x1F02E20", Offset = "0x1F02E20", VA = "0x1F02E20", Slot = "5")]
	protected override void DoOnComplete()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x1F02E64", Offset = "0x1F02E64", VA = "0x1F02E64")]
	public EvilEyeDespawnAction()
	{
	}
}
[Token(Token = "0x2000108")]
public class EvilEyeDespawnEffectPullBonus : DespawnEffect
{
	[Token(Token = "0x2000387")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA8A8", Offset = "0xAFA8A8")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Cell cell;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform cellTransform;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EvilEyeDespawnEffectPullBonus <>4__this;

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x1F03090", Offset = "0x1F03090", VA = "0x1F03090")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x1F031F0", Offset = "0x1F031F0", VA = "0x1F031F0")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000638")]
	public new const int POOL_SIZE = 32;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PrefabPool<EvilEyeDespawnEffectPullBonus> _pool;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float PullTime;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float FlyForwardTime;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float MoveForwardDistance;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve ScaleCurve;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 _destination;

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x1F02E6C", Offset = "0x1F02E6C", VA = "0x1F02E6C")]
	public static void InitPool(PrefabPool<EvilEyeDespawnEffectPullBonus> pool)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x1F01E04", Offset = "0x1F01E04", VA = "0x1F01E04")]
	public static EvilEyeDespawnEffectPullBonus Get()
	{
		return null;
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x1F02EC0", Offset = "0x1F02EC0", VA = "0x1F02EC0", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x1F03098", Offset = "0x1F03098", VA = "0x1F03098", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x1F030A4", Offset = "0x1F030A4", VA = "0x1F030A4")]
	public void SetDestinationPoint(Vector3 destination)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x1F030B0", Offset = "0x1F030B0", VA = "0x1F030B0", Slot = "20")]
	protected override void TimerUpdate(float percent, float targetTime)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x1F03170", Offset = "0x1F03170", VA = "0x1F03170")]
	public EvilEyeDespawnEffectPullBonus()
	{
	}
}
[Token(Token = "0x2000109")]
public class EvilEyeLightningHit : BaseHitEffect
{
	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float ReleaseTime;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int ShortDistance;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int MidDistance;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<LightningMesh> ShortHitVariants;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<LightningMesh> MidHitVariants;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<LightningMesh> FarHitVariants;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource LightHitSound;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private LightningMesh _currentMesh;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform _destination;

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x1F022E8", Offset = "0x1F022E8", VA = "0x1F022E8")]
	public static EvilEyeLightningHit Get()
	{
		return null;
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x1F03330", Offset = "0x1F03330", VA = "0x1F03330", Slot = "17")]
	public override void Play(Transform placeToPlay)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x1F03564", Offset = "0x1F03564", VA = "0x1F03564", Slot = "11")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x1EFC1CC", Offset = "0x1EFC1CC", VA = "0x1EFC1CC")]
	public void SelectByDistance(int cellDistance, Transform destination)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x1F035A0", Offset = "0x1F035A0", VA = "0x1F035A0")]
	public EvilEyeLightningHit()
	{
	}
}
[Token(Token = "0x200010A")]
public class EvilEyeMoveActionControl : BossActionControl
{
	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool UseCountValidationMovement;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xAFC73C", Offset = "0xAFC73C")]
	public int RepeatCountValidationsToMove;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool UseHealthCountMovement;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xAFC750", Offset = "0xAFC750")]
	public int HealthCount;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float EmergencySituationUnlockTime;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _counter;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _prevBosshealth;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _lastTimeAddedMove;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _isMoveInBossList;

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x1F03620", Offset = "0x1F03620", VA = "0x1F03620", Slot = "4")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x1F0375C", Offset = "0x1F0375C", VA = "0x1F0375C", Slot = "5")]
	protected override void DoOnTimerLogic()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x1F037AC", Offset = "0x1F037AC", VA = "0x1F037AC")]
	private void RepeatMoveLogic(Field field)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x1F03828", Offset = "0x1F03828", VA = "0x1F03828")]
	private void OnBossHealthChange(int currentHealth)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x1F03804", Offset = "0x1F03804", VA = "0x1F03804")]
	private void ResetCounters()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x1F03884", Offset = "0x1F03884", VA = "0x1F03884")]
	private void UnblockAndResetOnMoveComplete()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x1F038C8", Offset = "0x1F038C8", VA = "0x1F038C8", Slot = "6")]
	public override void AddActionToBoss()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x1F039F8", Offset = "0x1F039F8", VA = "0x1F039F8")]
	public EvilEyeMoveActionControl()
	{
	}
}
[Token(Token = "0x200010B")]
public class EvilEyeMoveOnField : BossAction
{
	[Serializable]
	[Token(Token = "0x2000388")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA8B8", Offset = "0xAFA8B8")]
	private sealed class <>c
	{
		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Field, Coordinates> <>9__19_0;

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x1F04498", Offset = "0x1F04498", VA = "0x1F04498")]
		public <>c()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x1F044A0", Offset = "0x1F044A0", VA = "0x1F044A0")]
		internal void <DoOnMove>b__19_0(Field field, Coordinates coords)
		{
		}
	}

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BossPositionEffectController BossPositionEffect;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int ShortJumpDistanceLimit;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float MoveSlamImpulse;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float MoveSlamDespawnTime;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float MoveSlamRadius;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CamRigShakeService ShakeService;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PlayRandomSound SlamSounds;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _directionEnumLength;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coordinates _currentCoords;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Coordinates _futureCoords;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _onBossDefeatSub;

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x1F03A14", Offset = "0x1F03A14", VA = "0x1F03A14")]
	public void DoOnBossDefeat()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x1F03A30", Offset = "0x1F03A30", VA = "0x1F03A30")]
	private void DoActionAroundCoordinates(Coordinates coords, Action<Field, Coordinates> action)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x1F03B2C", Offset = "0x1F03B2C", VA = "0x1F03B2C")]
	private bool TrySelectPositionToMove()
	{
		return default(bool);
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x1F03C4C", Offset = "0x1F03C4C", VA = "0x1F03C4C")]
	private bool CheckIsPossibleToMove(Coordinates checkCoord)
	{
		return default(bool);
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x1F03DA4", Offset = "0x1F03DA4", VA = "0x1F03DA4")]
	private bool TryOffsetCheck(Coordinates coords, Direction dir)
	{
		return default(bool);
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x1F03EA4", Offset = "0x1F03EA4", VA = "0x1F03EA4")]
	private bool CheckDistanceForShortMove()
	{
		return default(bool);
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x1F03F3C", Offset = "0x1F03F3C", VA = "0x1F03F3C", Slot = "6")]
	protected override void DoOnExecute()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x1F03F80", Offset = "0x1F03F80", VA = "0x1F03F80", Slot = "5")]
	protected override void DoOnComplete()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x1F0409C", Offset = "0x1F0409C", VA = "0x1F0409C", Slot = "8")]
	protected virtual void DoOnMove()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x1F04228", Offset = "0x1F04228", VA = "0x1F04228", Slot = "7")]
	protected override void DoOnAbort()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x1F04250", Offset = "0x1F04250", VA = "0x1F04250")]
	public EvilEyeMoveOnField()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x1F04340", Offset = "0x1F04340", VA = "0x1F04340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEBCC", Offset = "0xAFEBCC")]
	private void <DoOnComplete>b__18_0(Field field, Coordinates coords)
	{
	}
}
[Token(Token = "0x200010C")]
public class EvilEyeMoveToCastPoint : MonoBehaviour
{
	[Token(Token = "0x6000543")]
	[Address(RVA = "0x1F044C4", Offset = "0x1F044C4", VA = "0x1F044C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x1F044C8", Offset = "0x1F044C8", VA = "0x1F044C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x1F044CC", Offset = "0x1F044CC", VA = "0x1F044CC")]
	public EvilEyeMoveToCastPoint()
	{
	}
}
[Token(Token = "0x200010D")]
public class EvilEyeSimpleTentacleEffect : BaseHitEffect
{
	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<EvilEyeTentacleTweenVisualizer> Tentacles;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float ReleaseTime;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float EventCallTime;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _destination;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _offset;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TimerEvent _timerEvent;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private EvilEyeTentacleTweenVisualizer _selectedTentacle;

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x1F051CC", Offset = "0x1F051CC", VA = "0x1F051CC")]
	public static EvilEyeSimpleTentacleEffect Get()
	{
		return null;
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x1F053DC", Offset = "0x1F053DC", VA = "0x1F053DC", Slot = "17")]
	public override void Play(Transform placeToPlay)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x1F05290", Offset = "0x1F05290", VA = "0x1F05290")]
	public void SetDestinationAndEventLogic(Transform destination, Vector3 offset, TimerEvent doOnEvent)
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x1F055C0", Offset = "0x1F055C0", VA = "0x1F055C0", Slot = "11")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x1F05658", Offset = "0x1F05658", VA = "0x1F05658")]
	public EvilEyeSimpleTentacleEffect()
	{
	}
}
[Token(Token = "0x200010E")]
public class EvilEyeSpawnAction : AnimatedBossAction
{
	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem SpawnBatTwister;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource SpawnSound;

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x1F056C8", Offset = "0x1F056C8", VA = "0x1F056C8", Slot = "6")]
	protected override void DoOnExecute()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x1F057A4", Offset = "0x1F057A4", VA = "0x1F057A4")]
	public EvilEyeSpawnAction()
	{
	}
}
[Token(Token = "0x200010F")]
public class EvilEyeSpellActionControl : BossActionControl
{
	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int NumberOfTries;

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x1F057AC", Offset = "0x1F057AC", VA = "0x1F057AC", Slot = "6")]
	public override void AddActionToBoss()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x1F059E4", Offset = "0x1F059E4", VA = "0x1F059E4")]
	public EvilEyeSpellActionControl()
	{
	}
}
[Token(Token = "0x2000110")]
public class EvilEyeSpellCastShort : MonoBehaviour
{
	[Token(Token = "0x600054F")]
	[Address(RVA = "0x1F059EC", Offset = "0x1F059EC", VA = "0x1F059EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x1F059F0", Offset = "0x1F059F0", VA = "0x1F059F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x1F059F4", Offset = "0x1F059F4", VA = "0x1F059F4")]
	public EvilEyeSpellCastShort()
	{
	}
}
[Token(Token = "0x2000111")]
public class EvilEyeTentacleControl : MonoBehaviour
{
	[Token(Token = "0x6000552")]
	[Address(RVA = "0x1F059FC", Offset = "0x1F059FC", VA = "0x1F059FC")]
	public EvilEyeTentacleControl()
	{
	}
}
[Token(Token = "0x2000112")]
public class EvilEyeTentacleTweenVisualizer : SimpleTweenVisualizer
{
	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer TentacleRenderer;

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x1F05A04", Offset = "0x1F05A04", VA = "0x1F05A04", Slot = "5")]
	public override void Play([Optional] TweenCallback onComplete)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x1F05AF8", Offset = "0x1F05AF8", VA = "0x1F05AF8", Slot = "6")]
	public override void Stop()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x1F055A0", Offset = "0x1F055A0", VA = "0x1F055A0")]
	public void SetRendererState(bool state)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x1F05B98", Offset = "0x1F05B98", VA = "0x1F05B98")]
	public EvilEyeTentacleTweenVisualizer()
	{
	}
}
[Token(Token = "0x2000113")]
public class EvilEyeTweenController : SerializedMonoBehaviour
{
	[Token(Token = "0x2000389")]
	public enum EvilEyeBlendableTweens
	{
		[Token(Token = "0x40011B2")]
		LookRight,
		[Token(Token = "0x40011B3")]
		EvilLaugh
	}

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform Eye;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform Visual;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform EvilEyeBoss;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Dictionary<EvilEyeBlendableTweens, EvilEyeBlendTweenVisualizer> Tweens;

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x1F05BA0", Offset = "0x1F05BA0", VA = "0x1F05BA0")]
	public void Play(EvilEyeBlendableTweens playSelected)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x1F05C10", Offset = "0x1F05C10", VA = "0x1F05C10")]
	public void Stop(EvilEyeBlendableTweens playSelected)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x1F05C80", Offset = "0x1F05C80", VA = "0x1F05C80")]
	public void StopAll(EvilEyeBlendableTweens playSelected)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x1F05D7C", Offset = "0x1F05D7C", VA = "0x1F05D7C")]
	public EvilEyeTweenController()
	{
	}
}
[Token(Token = "0x2000114")]
public abstract class EvilEyeBlendTweenVisualizer
{
	[Token(Token = "0x200038A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA8C8", Offset = "0xAFA8C8")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Tween tween;

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x1F017D4", Offset = "0x1F017D4", VA = "0x1F017D4")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x1F017DC", Offset = "0x1F017DC", VA = "0x1F017DC")]
		internal void <Stop>b__0()
		{
		}
	}

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Tween> Tweens;

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x1F015A0", Offset = "0x1F015A0", VA = "0x1F015A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600055C")]
	protected abstract void CreateTweens();

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x1F015AC", Offset = "0x1F015AC", VA = "0x1F015AC")]
	public void Play()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x1F01670", Offset = "0x1F01670", VA = "0x1F01670")]
	public void Stop()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x1F01598", Offset = "0x1F01598", VA = "0x1F01598")]
	protected EvilEyeBlendTweenVisualizer()
	{
	}
}
[Token(Token = "0x2000115")]
public class LavaBossLightningHit : EvilEyeLightningHit
{
	[Token(Token = "0x6000560")]
	[Address(RVA = "0x1EE17B0", Offset = "0x1EE17B0", VA = "0x1EE17B0")]
	public new static EvilEyeLightningHit Get()
	{
		return null;
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x1EE1874", Offset = "0x1EE1874", VA = "0x1EE1874")]
	public LavaBossLightningHit()
	{
	}
}
[Token(Token = "0x2000116")]
public class LightningMesh : MonoBehaviour
{
	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer Renderer;

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x1EEA78C", Offset = "0x1EEA78C", VA = "0x1EEA78C")]
	public void SetRendererState(bool state)
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x1EEA7AC", Offset = "0x1EEA7AC", VA = "0x1EEA7AC")]
	public void ScaleLength(float length)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x1EEA7F8", Offset = "0x1EEA7F8", VA = "0x1EEA7F8")]
	public LightningMesh()
	{
	}
}
[Token(Token = "0x2000117")]
public class BossCellAreaConvertCastAction : BossCoroutineCastAction
{
	[Token(Token = "0x400066D")]
	private const int OVERLAP_MAX_BUFFER_SIZE = 32;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<PluginType> PossibleTargetCellPlugins;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xAFC764", Offset = "0xAFC764")]
	public float SpellRadius;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public LayerMask LayersToHit;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ParticleSystem SpellEffect;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SpellSteps _currentSpellStep;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Cell _targetCell;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Collider[] _overlapped;

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xE8CF3C", Offset = "0xE8CF3C", VA = "0xE8CF3C", Slot = "8")]
	protected override bool SpellCastCheckAndPrepare()
	{
		return default(bool);
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xE8CFE0", Offset = "0xE8CFE0", VA = "0xE8CFE0")]
	private void SpellLogic()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xE8D2D0", Offset = "0xE8D2D0", VA = "0xE8D2D0")]
	private void VisualiseImpact()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xE8D74C", Offset = "0xE8D74C", VA = "0xE8D74C", Slot = "10")]
	protected override bool CoroutineTickCondition()
	{
		return default(bool);
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xE8D75C", Offset = "0xE8D75C", VA = "0xE8D75C", Slot = "11")]
	protected override void DoOnSpellTick()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xE8D790", Offset = "0xE8D790", VA = "0xE8D790")]
	public BossCellAreaConvertCastAction()
	{
	}
}
[Token(Token = "0x2000118")]
public class EvilEyeBonusDestruction : BossCastAction
{
	[Token(Token = "0x600056B")]
	[Address(RVA = "0x1F0182C", Offset = "0x1F0182C", VA = "0x1F0182C", Slot = "8")]
	protected override bool SpellCastCheckAndPrepare()
	{
		return default(bool);
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x1F018C8", Offset = "0x1F018C8", VA = "0x1F018C8", Slot = "6")]
	protected override void DoOnExecute()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x1F01970", Offset = "0x1F01970", VA = "0x1F01970")]
	private void BonusRemove(Field field)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x1F01ACC", Offset = "0x1F01ACC", VA = "0x1F01ACC")]
	public EvilEyeBonusDestruction()
	{
	}
}
[Token(Token = "0x2000119")]
public class EvilEyeBonusesToBoss : BossCoroutineCastAction
{
	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float CastDuration;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int MaxCellIfNoBonusesPerTick;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float _castActiveTime;

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x1F01AD4", Offset = "0x1F01AD4", VA = "0x1F01AD4", Slot = "8")]
	protected override bool SpellCastCheckAndPrepare()
	{
		return default(bool);
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x1F01B7C", Offset = "0x1F01B7C", VA = "0x1F01B7C", Slot = "10")]
	protected override bool CoroutineTickCondition()
	{
		return default(bool);
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x1F01BB4", Offset = "0x1F01BB4", VA = "0x1F01BB4", Slot = "11")]
	protected override void DoOnSpellTick()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x1F01CC8", Offset = "0x1F01CC8", VA = "0x1F01CC8")]
	private void PullCastApplyCells(bool isLimited)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x1F01E64", Offset = "0x1F01E64", VA = "0x1F01E64")]
	public EvilEyeBonusesToBoss()
	{
	}
}
[Token(Token = "0x200011A")]
public class EvilEyeBonusesToDarkEnergy : BossCastAction
{
	[Token(Token = "0x6000574")]
	[Address(RVA = "0x1F01E78", Offset = "0x1F01E78", VA = "0x1F01E78", Slot = "8")]
	protected override bool SpellCastCheckAndPrepare()
	{
		return default(bool);
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x1F01F14", Offset = "0x1F01F14", VA = "0x1F01F14", Slot = "6")]
	protected override void DoOnExecute()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x1F01FBC", Offset = "0x1F01FBC", VA = "0x1F01FBC")]
	private void BonusConvertion(Field field)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x1F02144", Offset = "0x1F02144", VA = "0x1F02144")]
	public EvilEyeBonusesToDarkEnergy()
	{
	}
}
[Token(Token = "0x200011B")]
public class EvilEyeConvertionWithBats : BossCoroutineCastAction
{
	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xAFC778", Offset = "0xAFC778")]
	public int MinTargetCellCount;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xAFC78C", Offset = "0xAFC78C")]
	public int MaxTargetCellCount;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<PluginType> PossibleTargetTypes;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int TargetsPerTick;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int _currentTargetCellCount;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int _currentTick;

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x1F0214C", Offset = "0x1F0214C", VA = "0x1F0214C", Slot = "9")]
	protected override void CastCellEffects(Cell cell)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x1F02440", Offset = "0x1F02440", VA = "0x1F02440", Slot = "8")]
	protected override bool SpellCastCheckAndPrepare()
	{
		return default(bool);
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x1F0253C", Offset = "0x1F0253C", VA = "0x1F0253C", Slot = "10")]
	protected override bool CoroutineTickCondition()
	{
		return default(bool);
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x1F025A8", Offset = "0x1F025A8", VA = "0x1F025A8", Slot = "11")]
	protected override void DoOnSpellTick()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x1F026FC", Offset = "0x1F026FC", VA = "0x1F026FC")]
	private void ConvertionProcess(Cell cell)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x1F023AC", Offset = "0x1F023AC", VA = "0x1F023AC")]
	private int CalculateBossCellDistance(Coordinates cellCoordinates)
	{
		return default(int);
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x1F027AC", Offset = "0x1F027AC", VA = "0x1F027AC", Slot = "5")]
	protected override void DoOnComplete()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x1F02834", Offset = "0x1F02834", VA = "0x1F02834", Slot = "7")]
	protected override void DoOnAbort()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x1F028BC", Offset = "0x1F028BC", VA = "0x1F028BC")]
	public EvilEyeConvertionWithBats()
	{
	}
}
[Token(Token = "0x200011C")]
public class EvilEyeDarkEnergyConvertZone : BossCoroutineCastAction
{
	[Token(Token = "0x400067E")]
	private const int OVERLAP_MAX_BUFFER_SIZE = 32;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xAFC7A0", Offset = "0xAFC7A0")]
	public float SpellRadius;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public LayerMask LayersToHit;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ParticleSystem SpellEffect;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private SpellSteps _currentSpellStep;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 _spellPosition;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Collider[] _overlapped;

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x1F028D8", Offset = "0x1F028D8", VA = "0x1F028D8", Slot = "8")]
	protected override bool SpellCastCheckAndPrepare()
	{
		return default(bool);
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x1F029A4", Offset = "0x1F029A4", VA = "0x1F029A4")]
	private void SpellLogic()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x1F02B54", Offset = "0x1F02B54", VA = "0x1F02B54", Slot = "10")]
	protected override bool CoroutineTickCondition()
	{
		return default(bool);
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x1F02B64", Offset = "0x1F02B64", VA = "0x1F02B64", Slot = "11")]
	protected override void DoOnSpellTick()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x1F02C78", Offset = "0x1F02C78", VA = "0x1F02C78", Slot = "7")]
	protected override void DoOnAbort()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x1F02CA4", Offset = "0x1F02CA4", VA = "0x1F02CA4")]
	public EvilEyeDarkEnergyConvertZone()
	{
	}
}
[Token(Token = "0x200011D")]
public class EvilEyeRandomDestructionFromCastPoint : MonoBehaviour
{
	[Token(Token = "0x6000587")]
	[Address(RVA = "0x1F044D4", Offset = "0x1F044D4", VA = "0x1F044D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x1F044D8", Offset = "0x1F044D8", VA = "0x1F044D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x1F044DC", Offset = "0x1F044DC", VA = "0x1F044DC")]
	public EvilEyeRandomDestructionFromCastPoint()
	{
	}
}
[Token(Token = "0x200011E")]
public class EvilEyeRegeneration : BossCoroutineCastAction
{
	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int HealthRegenCount;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ParticleSystem RegenAura;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ParticleSystem RegenerationEffect;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BossPositionEffectController HealthAuraEffect;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int MinimalHealthToStartRegen;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int _needToRegen;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private SpellSteps _currentSpellStep;

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x1F044E4", Offset = "0x1F044E4", VA = "0x1F044E4", Slot = "8")]
	protected override bool SpellCastCheckAndPrepare()
	{
		return default(bool);
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x1F0452C", Offset = "0x1F0452C", VA = "0x1F0452C", Slot = "10")]
	protected override bool CoroutineTickCondition()
	{
		return default(bool);
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x1F0453C", Offset = "0x1F0453C", VA = "0x1F0453C", Slot = "11")]
	protected override void DoOnSpellTick()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x1F0468C", Offset = "0x1F0468C", VA = "0x1F0468C", Slot = "7")]
	protected override void DoOnAbort()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x1F046D0", Offset = "0x1F046D0", VA = "0x1F046D0")]
	public EvilEyeRegeneration()
	{
	}
}
[Token(Token = "0x200011F")]
public class EvilEyeRowColumnDestruction : BossCastAction
{
	[Token(Token = "0x200038B")]
	public enum RowColCastBehaviour
	{
		[Token(Token = "0x40011B6")]
		Row,
		[Token(Token = "0x40011B7")]
		Col,
		[Token(Token = "0x40011B8")]
		Both
	}

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RowColCastBehaviour CastBehaviour;

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x1F046E0", Offset = "0x1F046E0", VA = "0x1F046E0", Slot = "8")]
	protected override bool SpellCastCheckAndPrepare()
	{
		return default(bool);
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x1F04994", Offset = "0x1F04994", VA = "0x1F04994", Slot = "6")]
	protected override void DoOnExecute()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x1F049DC", Offset = "0x1F049DC", VA = "0x1F049DC")]
	private void DoActionWithCells()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1F0475C", Offset = "0x1F0475C", VA = "0x1F0475C")]
	private void SelectRowCells()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1F04878", Offset = "0x1F04878", VA = "0x1F04878")]
	private void SelectColCells()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x1F04AFC", Offset = "0x1F04AFC", VA = "0x1F04AFC", Slot = "9")]
	protected override void CastCellEffects(Cell cell)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1F04B38", Offset = "0x1F04B38", VA = "0x1F04B38")]
	public EvilEyeRowColumnDestruction()
	{
	}
}
[Token(Token = "0x2000120")]
public class EvilEyeScatterAround : BossCoroutineCastAction
{
	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int RunesPerCastScatterred;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int RunesPerTickMin;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int RunesPerTickMax;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float ScatterForce;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float DespawnTime;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool SetBossToInvincible;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float BossOffset;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int AdditionalTicks;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected int CurrentRuneCounter;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	protected int AdditionalTickCounter;

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x1F04B48", Offset = "0x1F04B48", VA = "0x1F04B48", Slot = "8")]
	protected override bool SpellCastCheckAndPrepare()
	{
		return default(bool);
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x1F04B78", Offset = "0x1F04B78", VA = "0x1F04B78", Slot = "10")]
	protected override bool CoroutineTickCondition()
	{
		return default(bool);
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x1F04BB8", Offset = "0x1F04BB8", VA = "0x1F04BB8", Slot = "11")]
	protected override void DoOnSpellTick()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x1F04CE4", Offset = "0x1F04CE4", VA = "0x1F04CE4", Slot = "9")]
	protected override void CastCellEffects(Cell cell)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x1F04D30", Offset = "0x1F04D30", VA = "0x1F04D30", Slot = "5")]
	protected override void DoOnComplete()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x1F04D6C", Offset = "0x1F04D6C", VA = "0x1F04D6C", Slot = "7")]
	protected override void DoOnAbort()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x1F04D94", Offset = "0x1F04D94", VA = "0x1F04D94")]
	public EvilEyeScatterAround()
	{
	}
}
[Token(Token = "0x2000121")]
public class EvilEyeScatterAroundBoss : EvilEyeScatterAround
{
	[Token(Token = "0x200038C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA8D8", Offset = "0xAFA8D8")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EvilEyeScatterAroundBoss <>4__this;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Coordinates coordinates;

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x1F051C4", Offset = "0x1F051C4", VA = "0x1F051C4")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x1F052CC", Offset = "0x1F052CC", VA = "0x1F052CC")]
		internal void <CastCellEffects>b__0()
		{
		}
	}

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float ScatterRadius;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xAFC7B4", Offset = "0xAFC7B4")]
	public int BossMaxDistance;

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x1F04DB0", Offset = "0x1F04DB0", VA = "0x1F04DB0", Slot = "11")]
	protected override void DoOnSpellTick()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x1F04EA4", Offset = "0x1F04EA4", VA = "0x1F04EA4")]
	private void GetRandomAroundBoss()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x1F05004", Offset = "0x1F05004", VA = "0x1F05004", Slot = "9")]
	protected override void CastCellEffects(Cell cell)
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x1F052A4", Offset = "0x1F052A4", VA = "0x1F052A4")]
	public EvilEyeScatterAroundBoss()
	{
	}
}
[Token(Token = "0x2000122")]
public class EvilEyeWhirlpool : BossCoroutineCastAction
{
	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Transform> Points;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SpellSteps _currentSpellStep;

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x1F05DEC", Offset = "0x1F05DEC", VA = "0x1F05DEC", Slot = "8")]
	protected override bool SpellCastCheckAndPrepare()
	{
		return default(bool);
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x1F05DF4", Offset = "0x1F05DF4", VA = "0x1F05DF4", Slot = "10")]
	protected override bool CoroutineTickCondition()
	{
		return default(bool);
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x1F05E04", Offset = "0x1F05E04", VA = "0x1F05E04", Slot = "11")]
	protected override void DoOnSpellTick()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x1F05E90", Offset = "0x1F05E90", VA = "0x1F05E90")]
	public EvilEyeWhirlpool()
	{
	}
}
[Token(Token = "0x2000123")]
public class EvilEyeBlendTweenEvilLaugh : EvilEyeBlendTweenVisualizer
{
	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x1F01530", Offset = "0x1F01530", VA = "0x1F01530", Slot = "4")]
	protected override void CreateTweens()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x1F01590", Offset = "0x1F01590", VA = "0x1F01590")]
	public EvilEyeBlendTweenEvilLaugh()
	{
	}
}
[Token(Token = "0x2000124")]
public class BossEntityLava : BossEntity
{
	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xE903B8", Offset = "0xE903B8", VA = "0xE903B8", Slot = "5")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xE904C0", Offset = "0xE904C0", VA = "0xE904C0")]
	private void TakeDamage()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xE90590", Offset = "0xE90590", VA = "0xE90590")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xE9068C", Offset = "0xE9068C", VA = "0xE9068C")]
	public BossEntityLava()
	{
	}
}
[Token(Token = "0x2000125")]
public class BossProjectile : PoolableBehaviour
{
	[Token(Token = "0x200038D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA8E8", Offset = "0xAFA8E8")]
	private sealed class <JumpRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossProjectile <>4__this;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Cell destination;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float speed;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float jumpPower;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <movedDistance>5__3;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <totalDistance>5__4;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <distanceFactor>5__5;

		[Token(Token = "0x170000B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014AF")]
			[Address(RVA = "0xE91B38", Offset = "0xE91B38", VA = "0xE91B38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014B1")]
			[Address(RVA = "0xE91BA0", Offset = "0xE91BA0", VA = "0xE91BA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xE91578", Offset = "0xE91578", VA = "0xE91578")]
		[DebuggerHidden]
		public <JumpRoutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xE91804", Offset = "0xE91804", VA = "0xE91804", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xE91808", Offset = "0xE91808", VA = "0xE91808", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xE91B40", Offset = "0xE91B40", VA = "0xE91B40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400069B")]
	public const int POOL_SIZE = 32;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PrefabPool<BossProjectile> _pool;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float FlyTime;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform FireballObject;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem FlyEffect;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem ExplosionEffect;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float JumpPower;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float FlyDelay;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Ease JumpEase;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float RleaseDelay;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve Curve;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve FlightCurve;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource FlySound;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource ExplosionSound;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource SpawnSound;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private TimerEvent _shootEvent;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Tween _flyTween;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private TweenCallback _doOnComplete;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Cell _shootTo;

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xE8D08C", Offset = "0xE8D08C", VA = "0xE8D08C")]
	public static BossProjectile Get()
	{
		return null;
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xE9135C", Offset = "0xE9135C", VA = "0xE9135C")]
	public static void InitPool(PrefabPool<BossProjectile> pool)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xE913B0", Offset = "0xE913B0", VA = "0xE913B0", Slot = "12")]
	public override void OnCreate(Action turnBackEvent)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xE8D0EC", Offset = "0xE8D0EC", VA = "0xE8D0EC")]
	public void Shoot(Transform shootFrom, Cell shootTo, [Optional] TweenCallback doOnComplete)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xE91440", Offset = "0xE91440", VA = "0xE91440", Slot = "17")]
	protected virtual void DoJump()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xE914E8", Offset = "0xE914E8", VA = "0xE914E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFEBDC", Offset = "0xAFEBDC")]
	private IEnumerator JumpRoutine(Cell destination, float jumpPower, float speed)
	{
		return null;
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xE915A4", Offset = "0xE915A4", VA = "0xE915A4")]
	private void DoOnComplete()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xE916F4", Offset = "0xE916F4", VA = "0xE916F4", Slot = "11")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xE91780", Offset = "0xE91780", VA = "0xE91780")]
	public BossProjectile()
	{
	}
}
[Token(Token = "0x2000126")]
public class DestroyBonusesCast : BossCoroutineCastAction
{
	[Token(Token = "0x200038E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA8F8", Offset = "0xAFA8F8")]
	private sealed class <LightningCastRoutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DestroyBonusesCast <>4__this;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Field <field>5__2;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x170000B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014B5")]
			[Address(RVA = "0x1EFC290", Offset = "0x1EFC290", VA = "0x1EFC290", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014B7")]
			[Address(RVA = "0x1EFC2F8", Offset = "0x1EFC2F8", VA = "0x1EFC2F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x1EFBDE4", Offset = "0x1EFBDE4", VA = "0x1EFBDE4")]
		[DebuggerHidden]
		public <LightningCastRoutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x1EFBE60", Offset = "0x1EFBE60", VA = "0x1EFBE60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x1EFBE64", Offset = "0x1EFBE64", VA = "0x1EFBE64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x1EFC298", Offset = "0x1EFC298", VA = "0x1EFC298", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float CastDuration;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<Vector2Int> OriginCoords;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public PlayRandomSound CastSound;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine _lightningCastRoutine;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _castActiveTime;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int _castCellsIndex;

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x1EFBBAC", Offset = "0x1EFBBAC", VA = "0x1EFBBAC", Slot = "8")]
	protected override bool SpellCastCheckAndPrepare()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x1EFBC54", Offset = "0x1EFBC54", VA = "0x1EFBC54", Slot = "10")]
	protected override bool CoroutineTickCondition()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x1EFBC8C", Offset = "0x1EFBC8C", VA = "0x1EFBC8C", Slot = "11")]
	protected override void DoOnSpellTick()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x1EFBD74", Offset = "0x1EFBD74", VA = "0x1EFBD74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFEC40", Offset = "0xAFEC40")]
	private IEnumerator LightningCastRoutine()
	{
		return null;
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x1EFBE10", Offset = "0x1EFBE10", VA = "0x1EFBE10", Slot = "7")]
	protected override void DoOnAbort()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x1EFBE50", Offset = "0x1EFBE50", VA = "0x1EFBE50")]
	public DestroyBonusesCast()
	{
	}
}
[Token(Token = "0x2000127")]
public class DestroyWaterCast : BossCoroutineCastAction
{
	[Token(Token = "0x200038F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA908", Offset = "0xAFA908")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DestroyWaterCast <>4__this;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Cell target;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossProjectile projectile;

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x1EFC474", Offset = "0x1EFC474", VA = "0x1EFC474")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x1EFC7B4", Offset = "0x1EFC7B4", VA = "0x1EFC7B4")]
		internal void <ShootFireball>b__0()
		{
		}
	}

	[Token(Token = "0x2000390")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA918", Offset = "0xAFA918")]
	private sealed class <ShootWithDelay>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DestroyWaterCast <>4__this;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Field <field>5__2;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <j>5__4;

		[Token(Token = "0x170000B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014BD")]
			[Address(RVA = "0x1EFC9B4", Offset = "0x1EFC9B4", VA = "0x1EFC9B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014BF")]
			[Address(RVA = "0x1EFCA1C", Offset = "0x1EFCA1C", VA = "0x1EFCA1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x1EFC718", Offset = "0x1EFC718", VA = "0x1EFC718")]
		[DebuggerHidden]
		public <ShootWithDelay>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x1EFC828", Offset = "0x1EFC828", VA = "0x1EFC828", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x1EFC82C", Offset = "0x1EFC82C", VA = "0x1EFC82C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x1EFC9BC", Offset = "0x1EFC9BC", VA = "0x1EFC9BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SpellSteps _currentSpellStep;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine _shootingRoutine;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<BossProjectile> _activeFireballs;

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x1EFC300", Offset = "0x1EFC300", VA = "0x1EFC300")]
	private void ShootFireball(Cell target)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x1EFC47C", Offset = "0x1EFC47C", VA = "0x1EFC47C")]
	private void ImpactFireball(Cell target)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x1EFC564", Offset = "0x1EFC564", VA = "0x1EFC564", Slot = "10")]
	protected override bool CoroutineTickCondition()
	{
		return default(bool);
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x1EFC574", Offset = "0x1EFC574", VA = "0x1EFC574", Slot = "11")]
	protected override void DoOnSpellTick()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x1EFC58C", Offset = "0x1EFC58C", VA = "0x1EFC58C", Slot = "8")]
	protected override bool SpellCastCheckAndPrepare()
	{
		return default(bool);
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x1EFC654", Offset = "0x1EFC654", VA = "0x1EFC654", Slot = "7")]
	protected override void DoOnAbort()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x1EFC5E4", Offset = "0x1EFC5E4", VA = "0x1EFC5E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFECA4", Offset = "0xAFECA4")]
	private IEnumerator ShootWithDelay()
	{
		return null;
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x1EFC744", Offset = "0x1EFC744", VA = "0x1EFC744")]
	public DestroyWaterCast()
	{
	}
}
[Token(Token = "0x2000128")]
public class ImpactAroundBodyPart : BossCastAction
{
	[Token(Token = "0x2000391")]
	public enum ImpactMode
	{
		[Token(Token = "0x40011D4")]
		OnePartRandom,
		[Token(Token = "0x40011D5")]
		OnePartSequential,
		[Token(Token = "0x40011D6")]
		AllParts
	}

	[Token(Token = "0x2000392")]
	public delegate void ImpactActionLogic();

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BossAction ImpactAction;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<BossBodyPart> Parts;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ImpactMode Mode;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _index;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ImpactActionLogic _impactLogic;

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x1EDD030", Offset = "0x1EDD030", VA = "0x1EDD030")]
	public void SetImpactMode(ImpactMode mode)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x1EDD0E4", Offset = "0x1EDD0E4", VA = "0x1EDD0E4", Slot = "8")]
	protected override bool SpellCastCheckAndPrepare()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x1EDD0EC", Offset = "0x1EDD0EC", VA = "0x1EDD0EC", Slot = "6")]
	protected override void DoOnExecute()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x1EDD308", Offset = "0x1EDD308", VA = "0x1EDD308")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x1EDD310", Offset = "0x1EDD310", VA = "0x1EDD310")]
	private void ImpactBodyPart(BossBodyPart part)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x1EDD510", Offset = "0x1EDD510", VA = "0x1EDD510")]
	private bool IsCellIgnitable(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x1EDD5A4", Offset = "0x1EDD5A4", VA = "0x1EDD5A4")]
	private void ImpactRandomPart()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x1EDD630", Offset = "0x1EDD630", VA = "0x1EDD630")]
	private void ImpactNextPart()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x1EDD6D4", Offset = "0x1EDD6D4", VA = "0x1EDD6D4")]
	private void ImpactAllParts()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x1EDD76C", Offset = "0x1EDD76C", VA = "0x1EDD76C")]
	public ImpactAroundBodyPart()
	{
	}
}
[Token(Token = "0x2000129")]
public class WaterCannon : Raycastable
{
	[Token(Token = "0x2000393")]
	public delegate void WaterCannonEvent();

	[Token(Token = "0x2000394")]
	public delegate void AnimationCallback();

	[Serializable]
	[Token(Token = "0x2000395")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA928", Offset = "0xAFA928")]
	private sealed class <>c
	{
		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__16_0;

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xE09BC4", Offset = "0xE09BC4", VA = "0xE09BC4")]
		public <>c()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xE09BCC", Offset = "0xE09BCC", VA = "0xE09BCC")]
		internal void <Discharge>b__16_0()
		{
		}
	}

	[Token(Token = "0x2000396")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA938", Offset = "0xAFA938")]
	private sealed class <ChargeRoutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterCannon <>4__this;

		[Token(Token = "0x170000B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014D2")]
			[Address(RVA = "0xE09D04", Offset = "0xE09D04", VA = "0xE09D04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014D4")]
			[Address(RVA = "0xE09D6C", Offset = "0xE09D6C", VA = "0xE09D6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xE0993C", Offset = "0xE0993C", VA = "0xE0993C")]
		[DebuggerHidden]
		public <ChargeRoutine>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xE09C2C", Offset = "0xE09C2C", VA = "0xE09C2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xE09C30", Offset = "0xE09C30", VA = "0xE09C30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xE09D0C", Offset = "0xE09D0C", VA = "0xE09D0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000397")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA948", Offset = "0xAFA948")]
	private sealed class <MoveOrbitingRocksRoutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterCannon <>4__this;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float targetLocalZ;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float timeSec;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCallback callback;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <cachedZ>5__2;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <movespeed>5__3;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <savedTime>5__4;

		[Token(Token = "0x170000B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014D8")]
			[Address(RVA = "0xE0A1FC", Offset = "0xE0A1FC", VA = "0xE0A1FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014DA")]
			[Address(RVA = "0xE0A264", Offset = "0xE0A264", VA = "0xE0A264", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xE09968", Offset = "0xE09968", VA = "0xE09968")]
		[DebuggerHidden]
		public <MoveOrbitingRocksRoutine>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xE09D74", Offset = "0xE09D74", VA = "0xE09D74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xE09D78", Offset = "0xE09D78", VA = "0xE09D78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xE0A204", Offset = "0xE0A204", VA = "0xE0A204", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WaterCannonEvent OnFire;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SimpleRotator Rotator;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> OrbitingRocks;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve RocksCurve;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 RotationSpeedConstraints;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BossEntity Boss;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform Target;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CannonAnimationController Animation;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform ChargeProgress;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource BackgroundSound;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool AutoFire;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ParticleSystem SuckParticles;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Coroutine _orbitingRocksRoutine;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFC7C8", Offset = "0xAFC7C8")]
	private float _charge;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 _cachedScale;

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xE0932C", Offset = "0xE0932C", VA = "0xE0932C")]
	public void MoveOrbitingRocks(float targetLocalZ, float timeSec, bool forced = false, [Optional] AnimationCallback callback)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xE09470", Offset = "0xE09470", VA = "0xE09470")]
	public void AddCharge(float chargeToAdd)
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xE095EC", Offset = "0xE095EC", VA = "0xE095EC")]
	public void Discharge()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xE09764", Offset = "0xE09764", VA = "0xE09764", Slot = "16")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xE0978C", Offset = "0xE0978C", VA = "0xE0978C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xE098CC", Offset = "0xE098CC", VA = "0xE098CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFED08", Offset = "0xAFED08")]
	private IEnumerator ChargeRoutine(Cell cell)
	{
		return null;
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xE093DC", Offset = "0xE093DC", VA = "0xE093DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFED6C", Offset = "0xAFED6C")]
	private IEnumerator MoveOrbitingRocksRoutine(float targetLocalZ, float timeSec, [Optional] AnimationCallback callback)
	{
		return null;
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xE093AC", Offset = "0xE093AC", VA = "0xE093AC")]
	private void TerminateRockRoutine()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xE09548", Offset = "0xE09548", VA = "0xE09548")]
	private void VisualiseCharge()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xE09994", Offset = "0xE09994", VA = "0xE09994", Slot = "18")]
	protected override void DoOnEnable()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xE0999C", Offset = "0xE0999C", VA = "0xE0999C", Slot = "17")]
	protected override void DoOnDisable()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xE099A4", Offset = "0xE099A4", VA = "0xE099A4")]
	private void Charge(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xE09ABC", Offset = "0xE09ABC", VA = "0xE09ABC", Slot = "13")]
	public override void OnInteractionStart(Wand wand)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xE09AE4", Offset = "0xE09AE4", VA = "0xE09AE4")]
	public WaterCannon()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xE09B44", Offset = "0xE09B44", VA = "0xE09B44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEDD0", Offset = "0xAFEDD0")]
	private void <Discharge>b__16_1()
	{
	}
}
[Token(Token = "0x200012A")]
public class LevelTargetBossDefeat : LevelTarget, ILevelTargetVisualizerCurrentTotal
{
	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LevelTargetBossDefeat _instance;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _currentBossHealth;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _totalBossHealth;

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x1EE3DCC", Offset = "0x1EE3DCC", VA = "0x1EE3DCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x1EE3E20", Offset = "0x1EE3E20", VA = "0x1EE3E20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x1EE3E70", Offset = "0x1EE3E70", VA = "0x1EE3E70", Slot = "4")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x1EE3E8C", Offset = "0x1EE3E8C", VA = "0x1EE3E8C", Slot = "11")]
	public void GetCurrentAndTotalProgress(out int current, out int total)
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x1EE3EA0", Offset = "0x1EE3EA0", VA = "0x1EE3EA0")]
	public static void RegisterBoss(BossEntity boss)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x1EE4010", Offset = "0x1EE4010", VA = "0x1EE4010")]
	private void OnBossHealthChange(int currentHealth)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x1EE4020", Offset = "0x1EE4020", VA = "0x1EE4020")]
	private void OnBossDefeat()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x1EE402C", Offset = "0x1EE402C", VA = "0x1EE402C")]
	public LevelTargetBossDefeat()
	{
	}
}
[Token(Token = "0x200012B")]
public class MoveBodyPart : BossAction
{
	[Token(Token = "0x2000398")]
	public delegate void MoveLogic(Field field, [Optional] MoveLogic callback);

	[Token(Token = "0x2000399")]
	public enum MoveMode
	{
		[Token(Token = "0x40011E6")]
		None,
		[Token(Token = "0x40011E7")]
		OneRandom,
		[Token(Token = "0x40011E8")]
		OneSequential,
		[Token(Token = "0x40011E9")]
		AllAtOnceScramble,
		[Token(Token = "0x40011EA")]
		AllAtOnceFormation,
		[Token(Token = "0x40011EB")]
		Sequence
	}

	[Token(Token = "0x200039A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA958", Offset = "0xAFA958")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MoveBodyPart <>4__this;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int times;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Field field;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MoveLogic logic;

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xE10440", Offset = "0xE10440", VA = "0xE10440")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xE10E6C", Offset = "0xE10E6C", VA = "0xE10E6C")]
		internal void <RepeatMoveAction>b__0(Field fieldd, MoveLogic callback)
		{
		}
	}

	[Token(Token = "0x200039B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA968", Offset = "0xAFA968")]
	private sealed class <AnimateMoveRoutine>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoveBodyPart <>4__this;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BossBodyPart part;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Field field;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Coordinates coords;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MoveLogic callback;

		[Token(Token = "0x170000BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014E4")]
			[Address(RVA = "0xE111CC", Offset = "0xE111CC", VA = "0xE111CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014E6")]
			[Address(RVA = "0xE11234", Offset = "0xE11234", VA = "0xE11234", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xE10B34", Offset = "0xE10B34", VA = "0xE10B34")]
		[DebuggerHidden]
		public <AnimateMoveRoutine>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xE10E94", Offset = "0xE10E94", VA = "0xE10E94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xE10E98", Offset = "0xE10E98", VA = "0xE10E98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xE111D4", Offset = "0xE111D4", VA = "0xE111D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<BossBodyPart> BodyParts;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MoveLogic Movement;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve Curve;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BossAction ImpactAction;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MinDroppedCells;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MaxDroppedCells;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PlayRandomSound Audio;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector2 JumpDuration;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector2 JumpPower;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CamRigShakeService ShakeService;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Dictionary<MoveMode, MoveLogic> MovementStrategy;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private MoveMode _partMoveMode;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int _partIndex;

	[Token(Token = "0x40006DB")]
	private const int ITERATION_COUNT_BEFORE_ABORT = 10;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int _stompsCount;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float _stompTime;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 _cachedPosition;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Coroutine> _activeAnimations;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _jumpTimer;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 _startPosition;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 _targetPosition;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float _duration;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float _durationMultiplier;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 _targetLocalPostiion;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float _jumpPower;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool _stopped;

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xE0F6F8", Offset = "0xE0F6F8", VA = "0xE0F6F8")]
	public void InitMoveLogic(MoveMode mode)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xE0F784", Offset = "0xE0F784", VA = "0xE0F784", Slot = "4")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xE0FA00", Offset = "0xE0FA00", VA = "0xE0FA00", Slot = "6")]
	protected override void DoOnExecute()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xE0FE18", Offset = "0xE0FE18", VA = "0xE0FE18", Slot = "7")]
	protected override void DoOnAbort()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xE0FE30", Offset = "0xE0FE30", VA = "0xE0FE30")]
	private void MovePartRandom(Field field, [Optional] MoveLogic callback)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xE0FF60", Offset = "0xE0FF60", VA = "0xE0FF60")]
	private void MovePartNext(Field field, [Optional] MoveLogic callback)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xE10020", Offset = "0xE10020", VA = "0xE10020")]
	private void MoveAllPartsRandom(Field field, [Optional] MoveLogic callback)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xE100C4", Offset = "0xE100C4", VA = "0xE100C4")]
	private void MovePartsInSequence(Field field, [Optional] MoveLogic callback)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xE10240", Offset = "0xE10240", VA = "0xE10240")]
	private void MoveAllPartsFormation(Field field, [Optional] MoveLogic callback)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xE10160", Offset = "0xE10160", VA = "0xE10160")]
	private void RepeatMoveAction(int times, Field field, MoveLogic logic)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xE10448", Offset = "0xE10448", VA = "0xE10448")]
	private bool TryGetTargetCoordinates(BossBodyPart part, Field field, out Coordinates coords)
	{
		return default(bool);
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xE1035C", Offset = "0xE1035C", VA = "0xE1035C")]
	private bool IsBodyPartPlaceable(BossBodyPart part, Field field, Coordinates coords)
	{
		return default(bool);
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xE105D0", Offset = "0xE105D0", VA = "0xE105D0")]
	private bool IsCellPlaceable(Field field, int row, int col)
	{
		return default(bool);
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xE0FED4", Offset = "0xE0FED4", VA = "0xE0FED4")]
	private bool TryMovePart(BossBodyPart part, Field field, [Optional] MoveLogic callback)
	{
		return default(bool);
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xE10644", Offset = "0xE10644", VA = "0xE10644")]
	private void MovePart(BossBodyPart part, Field field, Coordinates coords, [Optional] MoveLogic callback)
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xE106F8", Offset = "0xE106F8", VA = "0xE106F8")]
	private void RemovePart(BossBodyPart part, Field field, Coordinates coords)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xE108EC", Offset = "0xE108EC", VA = "0xE108EC")]
	private void PlacePart(BossBodyPart part, Field field, Coordinates coords)
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xE10854", Offset = "0xE10854", VA = "0xE10854")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFEDE0", Offset = "0xAFEDE0")]
	private IEnumerator AnimateMoveRoutine(BossBodyPart part, Field field, Coordinates coords, [Optional] MoveLogic callback)
	{
		return null;
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xE10B60", Offset = "0xE10B60", VA = "0xE10B60")]
	private void ForceFinishAnimation(LevelLoader.LevelID level, LevelLoader.LevelRegion region, LevelLoader.LevelID previousLevel)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xE0FE24", Offset = "0xE0FE24", VA = "0xE0FE24")]
	private void ForceFinishAnimation()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xE10B6C", Offset = "0xE10B6C", VA = "0xE10B6C")]
	private void DropRandomCells()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xE10CB0", Offset = "0xE10CB0", VA = "0xE10CB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xE10D94", Offset = "0xE10D94", VA = "0xE10D94")]
	public MoveBodyPart()
	{
	}
}
[Token(Token = "0x200012C")]
public class SequencedTweenVisualizer : BaseTweenVisualizer
{
	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Sequence CurrentSequence;

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xD4E5B0", Offset = "0xD4E5B0", VA = "0xD4E5B0", Slot = "5")]
	public override void Play([Optional] TweenCallback onComplete)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xD4E6A8", Offset = "0xD4E6A8", VA = "0xD4E6A8", Slot = "6")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xD4E6C0", Offset = "0xD4E6C0", VA = "0xD4E6C0")]
	public SequencedTweenVisualizer()
	{
	}
}
[Token(Token = "0x200012D")]
public class SimpleTweenVisualizer : BaseTweenVisualizer
{
	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xD505B8", Offset = "0xD505B8", VA = "0xD505B8", Slot = "5")]
	public override void Play([Optional] TweenCallback onComplete)
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xD506AC", Offset = "0xD506AC", VA = "0xD506AC", Slot = "6")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xD5074C", Offset = "0xD5074C", VA = "0xD5074C")]
	public SimpleTweenVisualizer()
	{
	}
}
[Token(Token = "0x200012E")]
public abstract class BossCastAction : BossAction
{
	[Token(Token = "0x200039C")]
	protected enum SpellSteps
	{
		[Token(Token = "0x40011F8")]
		Effect,
		[Token(Token = "0x40011F9")]
		Logic,
		[Token(Token = "0x40011FA")]
		Finished
	}

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected List<Cell> CastApplyCells;

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xE8CC0C", Offset = "0xE8CC0C", VA = "0xE8CC0C")]
	public bool CheckPossibilityAndPrepareCast(BossEntity boss)
	{
		return default(bool);
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xE8CC84", Offset = "0xE8CC84", VA = "0xE8CC84")]
	protected void FieldSelectionByRule(Action<Cell> selectionRule)
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xE8CCB0", Offset = "0xE8CCB0", VA = "0xE8CCB0")]
	protected void BonusSelectionRule(Cell cell)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xE8CD78", Offset = "0xE8CD78", VA = "0xE8CD78")]
	protected void BaseRuneSelectionRule(Cell cell)
	{
	}

	[Token(Token = "0x6000604")]
	protected abstract bool SpellCastCheckAndPrepare();

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xE8CEBC", Offset = "0xE8CEBC", VA = "0xE8CEBC", Slot = "9")]
	protected virtual void CastCellEffects(Cell cell)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xE8CEC0", Offset = "0xE8CEC0", VA = "0xE8CEC0", Slot = "7")]
	protected override void DoOnAbort()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xE8CEC4", Offset = "0xE8CEC4", VA = "0xE8CEC4")]
	protected BossCastAction()
	{
	}
}
[Token(Token = "0x200012F")]
public class BossCellConvertCastAction : BossCastAction
{
	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xAFC7F0", Offset = "0xAFC7F0")]
	public int MinTargetCellCount;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xAFC804", Offset = "0xAFC804")]
	public int MaxTargetCellCount;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<PluginType> PossibleTargetTypes;

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xE8D818", Offset = "0xE8D818", VA = "0xE8D818", Slot = "8")]
	protected override bool SpellCastCheckAndPrepare()
	{
		return default(bool);
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xE8D8B0", Offset = "0xE8D8B0", VA = "0xE8D8B0", Slot = "6")]
	protected override void DoOnExecute()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xE8D8F4", Offset = "0xE8D8F4", VA = "0xE8D8F4")]
	private void TryConvertToTargetCell(int convertCount)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xE8DA00", Offset = "0xE8DA00", VA = "0xE8DA00", Slot = "10")]
	protected virtual void ConvertionProcess(Cell cell)
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xE8DAC8", Offset = "0xE8DAC8", VA = "0xE8DAC8")]
	public BossCellConvertCastAction()
	{
	}
}
[Token(Token = "0x2000130")]
public abstract class BossCoroutineCastAction : BossCastAction
{
	[Token(Token = "0x200039D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA978", Offset = "0xAFA978")]
	private sealed class <SpellCoroutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossCoroutineCastAction <>4__this;

		[Token(Token = "0x170000BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014EA")]
			[Address(RVA = "0xE8E338", Offset = "0xE8E338", VA = "0xE8E338", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014EC")]
			[Address(RVA = "0xE8E3A0", Offset = "0xE8E3A0", VA = "0xE8E3A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xE8E0E0", Offset = "0xE8E0E0", VA = "0xE8E0E0")]
		[DebuggerHidden]
		public <SpellCoroutine>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xE8E10C", Offset = "0xE8E10C", VA = "0xE8E10C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xE8E110", Offset = "0xE8E110", VA = "0xE8E110", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xE8E340", Offset = "0xE8E340", VA = "0xE8E340", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xAFC818", Offset = "0xAFC818")]
	public float TimeBetweenTicks;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool UseFlyForward;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float BossMoveForwardOffsetFactor;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem CastEffect;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PlayRandomSound LoopActionSound;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WaitForSeconds _waitTime;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private IEnumerator _spellCoroutine;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Tween _bossSpellTween;

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xE8DAD4", Offset = "0xE8DAD4", VA = "0xE8DAD4", Slot = "4")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xE8DB44", Offset = "0xE8DB44", VA = "0xE8DB44", Slot = "6")]
	protected sealed override void DoOnExecute()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xE8DF54", Offset = "0xE8DF54", VA = "0xE8DF54", Slot = "7")]
	protected override void DoOnAbort()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xE8E048", Offset = "0xE8E048", VA = "0xE8E048", Slot = "5")]
	protected override void DoOnComplete()
	{
	}

	[Token(Token = "0x6000611")]
	protected abstract bool CoroutineTickCondition();

	[Token(Token = "0x6000612")]
	protected abstract void DoOnSpellTick();

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xE8DD3C", Offset = "0xE8DD3C", VA = "0xE8DD3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFEE44", Offset = "0xAFEE44")]
	private IEnumerator SpellCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xE8D800", Offset = "0xE8D800", VA = "0xE8D800")]
	protected BossCoroutineCastAction()
	{
	}
}
[Token(Token = "0x2000131")]
public static class GlobalShaderManager
{
	[Token(Token = "0x200039E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA988", Offset = "0xAFA988")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int propertyId;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer renderer;

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x1F3F880", Offset = "0x1F3F880", VA = "0x1F3F880")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x1F407E4", Offset = "0x1F407E4", VA = "0x1F407E4")]
		internal Color <AnimateColorProperty>b__0()
		{
			return default(Color);
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x1F40854", Offset = "0x1F40854", VA = "0x1F40854")]
		internal void <AnimateColorProperty>b__1(Color newColor)
		{
		}
	}

	[Token(Token = "0x200039F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA998", Offset = "0xAFA998")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer renderer;

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x1F3F9FC", Offset = "0x1F3F9FC", VA = "0x1F3F9FC")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x1F408F4", Offset = "0x1F408F4", VA = "0x1F408F4")]
		internal Color <AnimateColorProperty>b__0()
		{
			return default(Color);
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x1F40964", Offset = "0x1F40964", VA = "0x1F40964")]
		internal void <AnimateColorProperty>b__1(Color newColor)
		{
		}
	}

	[Token(Token = "0x20003A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA9A8", Offset = "0xAFA9A8")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer renderer;

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x1F40144", Offset = "0x1F40144", VA = "0x1F40144")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x1F40A04", Offset = "0x1F40A04", VA = "0x1F40A04")]
		internal Color <AnimateEmissionColorProperty>b__0()
		{
			return default(Color);
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x1F40A74", Offset = "0x1F40A74", VA = "0x1F40A74")]
		internal void <AnimateEmissionColorProperty>b__1(Color newColor)
		{
		}
	}

	[Token(Token = "0x20003A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA9B8", Offset = "0xAFA9B8")]
	private sealed class <>c__DisplayClass30_0
	{
		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int propertyId;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer renderer;

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x1F406F0", Offset = "0x1F406F0", VA = "0x1F406F0")]
		public <>c__DisplayClass30_0()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x1F40B14", Offset = "0x1F40B14", VA = "0x1F40B14")]
		internal float <AnimateFloatProperty>b__0()
		{
			return default(float);
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x1F40B84", Offset = "0x1F40B84", VA = "0x1F40B84")]
		internal void <AnimateFloatProperty>b__1(float newValue)
		{
		}
	}

	[Token(Token = "0x40006F5")]
	private const string COLOR_PROPERTY_NAME = "_BaseColor";

	[Token(Token = "0x40006F6")]
	private const string TINT_PROPERTY_NAME = "_Tint";

	[Token(Token = "0x40006F7")]
	private const string EMISSION_PROPERTY_NAME = "_EmissionColor";

	[Token(Token = "0x40006F8")]
	private const string MAIN_TEXTURE_PROPERTY_NAME = "_MainTex";

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int _colorId;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int _tintId;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int _emissionId;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int _mainTexId;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static MaterialPropertyBlock _prop;

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x1F3F1B4", Offset = "0x1F3F1B4", VA = "0x1F3F1B4")]
	public static int GetPropertyId(string propertyName)
	{
		return default(int);
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x1F3F1BC", Offset = "0x1F3F1BC", VA = "0x1F3F1BC")]
	public static void SetColor(int propertyId, Renderer renderer, Color newColor)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x1F3F2A8", Offset = "0x1F3F2A8", VA = "0x1F3F2A8")]
	public static void SetColor(Renderer renderer, Color newColor)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x1F3F388", Offset = "0x1F3F388", VA = "0x1F3F388")]
	public static void SetColor(int propertyId, List<Renderer> renderers, Color newColor)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x1F3F47C", Offset = "0x1F3F47C", VA = "0x1F3F47C")]
	public static void SetColor(List<Renderer> renderers, Color newColor)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x1F3F560", Offset = "0x1F3F560", VA = "0x1F3F560")]
	public static Color GetColor(int propertyId, Renderer renderer)
	{
		return default(Color);
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x1F3F660", Offset = "0x1F3F660", VA = "0x1F3F660")]
	public static Color GetColor(Renderer renderer)
	{
		return default(Color);
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x1F3F6F8", Offset = "0x1F3F6F8", VA = "0x1F3F6F8")]
	public static Tween AnimateColorProperty(int propertyId, Renderer renderer, Color endColor, float duration, bool autoKill = false)
	{
		return null;
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x1F3F888", Offset = "0x1F3F888", VA = "0x1F3F888")]
	public static Tween AnimateColorProperty(Renderer renderer, Color endColor, float duration)
	{
		return null;
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x1F3FA04", Offset = "0x1F3FA04", VA = "0x1F3FA04")]
	public static void SetTintColor(Renderer renderer, Color newColor)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x1F3FAE4", Offset = "0x1F3FAE4", VA = "0x1F3FAE4")]
	public static void SetTintColor(List<Renderer> renderers, Color newColor)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x1F3FBC8", Offset = "0x1F3FBC8", VA = "0x1F3FBC8")]
	public static Color GetTintColor(Renderer renderer)
	{
		return default(Color);
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x1F3FCE4", Offset = "0x1F3FCE4", VA = "0x1F3FCE4")]
	public static void SetEmissionColor(Renderer renderer, Color newColor)
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x1F3FDC4", Offset = "0x1F3FDC4", VA = "0x1F3FDC4")]
	public static void SetEmissionColor(List<Renderer> renderers, Color newColor)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x1F3FEA8", Offset = "0x1F3FEA8", VA = "0x1F3FEA8")]
	public static Color GetEmissionColor(Renderer renderer)
	{
		return default(Color);
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x1F3FFC4", Offset = "0x1F3FFC4", VA = "0x1F3FFC4")]
	public static Tween AnimateEmissionColorProperty(Renderer renderer, Color endColor, float duration, bool autoKill = false)
	{
		return null;
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x1F4014C", Offset = "0x1F4014C", VA = "0x1F4014C")]
	public static void SetMainTexture(Renderer renderer, Texture newTexture)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x1F4020C", Offset = "0x1F4020C", VA = "0x1F4020C")]
	public static void SetMainTexture(List<Renderer> renderers, Texture newTexture)
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x1F402D0", Offset = "0x1F402D0", VA = "0x1F402D0")]
	public static void SetFloat(int propertyId, Renderer renderer, float value)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x1F4039C", Offset = "0x1F4039C", VA = "0x1F4039C")]
	public static void SetFloat(int propertyId, List<Renderer> renderers, float value)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x1F40470", Offset = "0x1F40470", VA = "0x1F40470")]
	public static float GetFloat(int propertyId, Renderer renderer)
	{
		return default(float);
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x1F40570", Offset = "0x1F40570", VA = "0x1F40570")]
	public static Tween AnimateFloatProperty(int propertyId, Renderer renderer, float endValue, float duration, Ease tweenEase = Ease.Linear, bool autoKill = false)
	{
		return null;
	}
}
[Token(Token = "0x2000132")]
public class GrassColebator : MonoBehaviour
{
	[Token(Token = "0x20003A2")]
	private struct GrassColebatorData
	{
		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform GrassTransform;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AnimationCurve HeightCurve;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float StartGrassHeight;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float PersonalHeightOffset;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float WindCurveOffset;
	}

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> GrassList;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<AnimationCurve> HeightColebatorCurves;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFC82C", Offset = "0xAFC82C")]
	public float GrassHeightCurveOffsetRange;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFC848", Offset = "0xAFC848")]
	public float CycleDuration;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<float> _windCurveOffset;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<GrassColebatorData> _grassData;

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x1F41BB4", Offset = "0x1F41BB4", VA = "0x1F41BB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x1F41F3C", Offset = "0x1F41F3C", VA = "0x1F41F3C")]
	private void CreateGrassData()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x1F41C48", Offset = "0x1F41C48", VA = "0x1F41C48")]
	private void CalculateWindOffset()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x1F420CC", Offset = "0x1F420CC", VA = "0x1F420CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x1F420D0", Offset = "0x1F420D0", VA = "0x1F420D0")]
	private void ColebateGrass()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x1F421F4", Offset = "0x1F421F4", VA = "0x1F421F4")]
	public GrassColebator()
	{
	}
}
[Token(Token = "0x2000133")]
public class Clickable : InteractiveObject
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> DisabledObjects;

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x1F081C0", Offset = "0x1F081C0", VA = "0x1F081C0", Slot = "6")]
	public override void OnPress(HandInteraction handTransform, InputReader.HandEnum hand)
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x1F082B4", Offset = "0x1F082B4", VA = "0x1F082B4")]
	public Clickable()
	{
	}
}
[Token(Token = "0x2000134")]
public class GameMenuButton : EventableRaycastable
{
	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SpriteRenderer BackgroundSprite;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SpriteRenderer ForegroundSprite;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float HighlightMultiplier;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color _backgroundColor;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Color _foregroundColor;

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x1F3E8DC", Offset = "0x1F3E8DC", VA = "0x1F3E8DC", Slot = "10")]
	public override void OnFocusStart(Wand wand)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x1F3E970", Offset = "0x1F3E970", VA = "0x1F3E970", Slot = "12")]
	public override void OnFocusEnd(Wand wand)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x1F3E9E4", Offset = "0x1F3E9E4", VA = "0x1F3E9E4")]
	public void InitColors(Color background, Color foreground)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x1F3E904", Offset = "0x1F3E904", VA = "0x1F3E904")]
	private void Highlight()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x1F3E998", Offset = "0x1F3E998", VA = "0x1F3E998")]
	private void Unhighlight()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x1F3E9F8", Offset = "0x1F3E9F8", VA = "0x1F3E9F8")]
	public GameMenuButton()
	{
	}
}
[Token(Token = "0x2000135")]
public class GrabbleObject : InteractiveObject
{
	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HandInteraction _currentHand;

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x1F419C4", Offset = "0x1F419C4", VA = "0x1F419C4", Slot = "6")]
	public override void OnPress(HandInteraction handTransform, InputReader.HandEnum hand)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x1F419F0", Offset = "0x1F419F0", VA = "0x1F419F0", Slot = "7")]
	public override void OnHold(HandInteraction handTransform, InputReader.HandEnum hand)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x1F41A20", Offset = "0x1F41A20", VA = "0x1F41A20", Slot = "8")]
	public override void OnRelease(HandInteraction handTransform, InputReader.HandEnum hand)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x1F41ABC", Offset = "0x1F41ABC", VA = "0x1F41ABC", Slot = "9")]
	protected virtual void Grabble()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x1F41BAC", Offset = "0x1F41BAC", VA = "0x1F41BAC")]
	public GrabbleObject()
	{
	}
}
[Token(Token = "0x2000136")]
public class HandInteraction : MonoBehaviour
{
	[Token(Token = "0x20003A3")]
	public delegate void ButtonEvent(HandInteraction controller, InputReader.HandEnum hand);

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputReader.HandEnum Hand;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StickController Stick;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform InteractPoint;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ButtonEvent OnButtonHold;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _triggerPressed;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InteractiveObject _activeObject;

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x1F421FC", Offset = "0x1F421FC", VA = "0x1F421FC")]
	public InteractiveObject GetActiveObject()
	{
		return null;
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x1F42204", Offset = "0x1F42204", VA = "0x1F42204")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x1F42328", Offset = "0x1F42328", VA = "0x1F42328")]
	private void Update()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x1F423BC", Offset = "0x1F423BC", VA = "0x1F423BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x1F42508", Offset = "0x1F42508", VA = "0x1F42508")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x1F42654", Offset = "0x1F42654", VA = "0x1F42654")]
	private void OnPress(InputReader.HandEnum hand)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x1F4232C", Offset = "0x1F4232C", VA = "0x1F4232C")]
	private void OnHold()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x1F42CFC", Offset = "0x1F42CFC", VA = "0x1F42CFC")]
	private void OnRelease(InputReader.HandEnum hand)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x1F42D3C", Offset = "0x1F42D3C", VA = "0x1F42D3C")]
	public void Release()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x1F426A0", Offset = "0x1F426A0", VA = "0x1F426A0")]
	private InteractiveObject FindClosest()
	{
		return null;
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x1F42D78", Offset = "0x1F42D78", VA = "0x1F42D78")]
	public HandInteraction()
	{
	}
}
[Token(Token = "0x2000137")]
public class InputReader : MonoBehaviour
{
	[Token(Token = "0x20003A4")]
	public enum HandEnum
	{
		[Token(Token = "0x400120A")]
		None,
		[Token(Token = "0x400120B")]
		Left,
		[Token(Token = "0x400120C")]
		Right,
		[Token(Token = "0x400120D")]
		Both
	}

	[Token(Token = "0x20003A5")]
	public delegate void InputEvent(HandEnum hand);

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InputEvent OnTriggerPressed;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static InputEvent OnTriggerReleased;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static InputEvent OnTouchPadPressed;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static InputEvent OnTouchPadReleased;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static InputEvent OnGripPressed;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static InputEvent OnGripReleased;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static InputEvent OnPrimaryActionPressed;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static InputEvent OnPrimaryActionReleased;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static InputEvent OnSecondaryActionPressed;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static InputEvent OnSecondaryActionReleased;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static InputEvent OnMenuPressed;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static InputEvent OnMenuReleased;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode PrimaryLeft;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public KeyCode PrimaryRight;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode SecondaryLeft;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode SecondaryRight;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected static InputReader _instance;

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x1EDEDEC", Offset = "0x1EDEDEC", VA = "0x1EDEDEC")]
	public static InputReader GetInstance()
	{
		return null;
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x1EDEE3C", Offset = "0x1EDEE3C", VA = "0x1EDEE3C")]
	public static HandEnum GetActiveHands()
	{
		return default(HandEnum);
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x1EDEE9C", Offset = "0x1EDEE9C", VA = "0x1EDEE9C", Slot = "4")]
	protected virtual HandEnum GetMyActiveHands()
	{
		return default(HandEnum);
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x1EDEEA4", Offset = "0x1EDEEA4", VA = "0x1EDEEA4", Slot = "5")]
	public virtual void PrimaryActionPressed()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x1EDF1BC", Offset = "0x1EDF1BC", VA = "0x1EDF1BC", Slot = "6")]
	public virtual void PrimaryActionReleased()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x1EDF264", Offset = "0x1EDF264", VA = "0x1EDF264", Slot = "7")]
	public virtual void SecondaryActionPressed()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x1EDF30C", Offset = "0x1EDF30C", VA = "0x1EDF30C", Slot = "8")]
	public virtual void SecondaryActionReleased()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x1EDF3B4", Offset = "0x1EDF3B4", VA = "0x1EDF3B4", Slot = "9")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x1EDF414", Offset = "0x1EDF414", VA = "0x1EDF414", Slot = "10")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x1EDF468", Offset = "0x1EDF468", VA = "0x1EDF468", Slot = "11")]
	protected virtual void OnAwake()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x1EDF46C", Offset = "0x1EDF46C", VA = "0x1EDF46C")]
	public InputReader()
	{
	}
}
[Token(Token = "0x2000138")]
public static class InteractionData
{
	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<InteractiveObject> _leftHandHoveredObjects;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<InteractiveObject> _rightHandHoveredObjects;

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x1EDFC74", Offset = "0x1EDFC74", VA = "0x1EDFC74")]
	public static List<InteractiveObject> GetHoveredObjects(InputReader.HandEnum hand)
	{
		return null;
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x1EDFD28", Offset = "0x1EDFD28", VA = "0x1EDFD28")]
	public static void AddHoveredObject(InteractiveObject item, InputReader.HandEnum hand)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x1EDFEC0", Offset = "0x1EDFEC0", VA = "0x1EDFEC0")]
	public static void RemoveHoveredObject(InteractiveObject item, InputReader.HandEnum hand)
	{
	}
}
[Token(Token = "0x2000139")]
public class InteractiveObject : MonoBehaviour
{
	[Token(Token = "0x20003A6")]
	public delegate void InteractiveObjectEvent(InteractiveObject item, InputReader.HandEnum hand);

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InteractiveObjectEvent OnObjectDestroy;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InputReader.HandEnum _heldHand;

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x1EE00F4", Offset = "0x1EE00F4", VA = "0x1EE00F4", Slot = "4")]
	public virtual void OnHoverEnter(HandInteraction handTransform, InputReader.HandEnum hand)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x1EE00F8", Offset = "0x1EE00F8", VA = "0x1EE00F8", Slot = "5")]
	public virtual void OnHoverExit(HandInteraction handTransform, InputReader.HandEnum hand)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x1EE00FC", Offset = "0x1EE00FC", VA = "0x1EE00FC", Slot = "6")]
	public virtual void OnPress(HandInteraction handTransform, InputReader.HandEnum hand)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x1EE0104", Offset = "0x1EE0104", VA = "0x1EE0104", Slot = "7")]
	public virtual void OnHold(HandInteraction handTransform, InputReader.HandEnum hand)
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x1EE0108", Offset = "0x1EE0108", VA = "0x1EE0108", Slot = "8")]
	public virtual void OnRelease(HandInteraction handTransform, InputReader.HandEnum hand)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x1EE0110", Offset = "0x1EE0110", VA = "0x1EE0110")]
	public InputReader.HandEnum GetHand()
	{
		return default(InputReader.HandEnum);
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x1EE0118", Offset = "0x1EE0118", VA = "0x1EE0118")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x1EE0184", Offset = "0x1EE0184", VA = "0x1EE0184")]
	public InteractiveObject()
	{
	}
}
[Serializable]
[Token(Token = "0x200013A")]
public class PrimaryButtonEvent : UnityEvent<bool>
{
	[Token(Token = "0x6000661")]
	[Address(RVA = "0xD44248", Offset = "0xD44248", VA = "0xD44248")]
	public PrimaryButtonEvent()
	{
	}
}
[Token(Token = "0x200013B")]
public enum XrButton
{
	[Token(Token = "0x4000727")]
	Primary,
	[Token(Token = "0x4000728")]
	Secondary,
	[Token(Token = "0x4000729")]
	Trigger,
	[Token(Token = "0x400072A")]
	Grip,
	[Token(Token = "0x400072B")]
	Menu
}
[Token(Token = "0x200013C")]
public class PrimaryButtonWatcher : MonoBehaviour
{
	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputDeviceCharacteristics Selection;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PrimaryButtonEvent PrimaryButtonPress;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _lastPrimaryButtonState;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<InputDevice> _devicesWithPrimaryButton;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PrimaryButtonEvent SecondaryButtonPress;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _lastSecondaryButtonState;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<InputDevice> _devicesWithSecondaryButton;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PrimaryButtonEvent TriggerButtonPress;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _lastTriggerButtonState;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<InputDevice> _devicesWithTriggerButton;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PrimaryButtonEvent GripButtonPress;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _lastGripButtonState;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<InputDevice> _devicesWithGripButton;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PrimaryButtonEvent MenupButtonPress;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _lastMenuButtonState;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<InputDevice> _devicesWithMenuButton;

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xD44298", Offset = "0xD44298", VA = "0xD44298")]
	public void Test()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xD44644", Offset = "0xD44644", VA = "0xD44644")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xD44684", Offset = "0xD44684", VA = "0xD44684")]
	private void Init(out List<InputDevice> inputDevices)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xD446EC", Offset = "0xD446EC", VA = "0xD446EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xD4488C", Offset = "0xD4488C", VA = "0xD4488C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xD4442C", Offset = "0xD4442C", VA = "0xD4442C")]
	private void InputDevices_deviceConnected(InputDevice device)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xD4499C", Offset = "0xD4499C", VA = "0xD4499C")]
	private void InputDevices_deviceDisconnected(InputDevice device)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xD44B30", Offset = "0xD44B30", VA = "0xD44B30")]
	private void Update()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xD44C64", Offset = "0xD44C64", VA = "0xD44C64")]
	private bool CheckButton(List<InputDevice> deviceList, PrimaryButtonEvent button, bool lastState, InputFeatureUsage<bool> check)
	{
		return default(bool);
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xD44DCC", Offset = "0xD44DCC", VA = "0xD44DCC")]
	public void SubTo(XrButton toButton, UnityAction<bool> buttonAction)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xD44EF0", Offset = "0xD44EF0", VA = "0xD44EF0")]
	public PrimaryButtonWatcher()
	{
	}
}
[Token(Token = "0x200013D")]
public class ScreenCamControls : MonoBehaviour
{
	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MovementSpeed;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationSpeedY;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float RotationSpeedX;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool LinearDamp;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MovementDamp;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float RotationDamp;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFC868", Offset = "0xAFC868")]
	public float MovementDampMultiplier;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFC880", Offset = "0xAFC880")]
	public float RotationDampMultiplier;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float MovementClamp;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float RotationClamp;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFC898", Offset = "0xAFC898")]
	public float MaxTilt;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _moveSpeedForward;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _moveSpeedSide;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _rotSpeedTilt;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _rotSpeedTurn;

	[Token(Token = "0x400074B")]
	private const float MOVE_SPEED_STEP = 0.1f;

	[Token(Token = "0x400074C")]
	private const float ROT_SPEED_STEP = 2.5f;

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xD4D3DC", Offset = "0xD4D3DC", VA = "0xD4D3DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xD4D4A0", Offset = "0xD4D4A0", VA = "0xD4D4A0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xD4DA04", Offset = "0xD4DA04", VA = "0xD4DA04")]
	private bool CheckRotateConstraints()
	{
		return default(bool);
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xD4D4D4", Offset = "0xD4D4D4", VA = "0xD4D4D4")]
	private void ReadSpeedValuesInput()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xD4D3E0", Offset = "0xD4D3E0", VA = "0xD4D3E0")]
	private void ReadParametersChangeInput()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xD4D5D8", Offset = "0xD4D5D8", VA = "0xD4D5D8")]
	private void CalculateAllSpeed()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xD4DAC4", Offset = "0xD4DAC4", VA = "0xD4DAC4")]
	private float CalculateSpeed(float speedValue, float dampValue, float dampMultiplier, float ClampValue)
	{
		return default(float);
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xD4DBBC", Offset = "0xD4DBBC", VA = "0xD4DBBC")]
	private float ClampSpeed(float speedValue, float clampValue)
	{
		return default(float);
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xD4D808", Offset = "0xD4D808", VA = "0xD4D808")]
	private void Move()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xD4D66C", Offset = "0xD4D66C", VA = "0xD4D66C")]
	private void Rotate()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xD4DC38", Offset = "0xD4DC38", VA = "0xD4DC38")]
	public ScreenCamControls()
	{
	}
}
[Token(Token = "0x200013E")]
public class SteamVrInputReader : InputReader
{
	[Token(Token = "0x6000678")]
	[Address(RVA = "0xDF9DB8", Offset = "0xDF9DB8", VA = "0xDF9DB8")]
	public SteamVrInputReader()
	{
	}
}
[Token(Token = "0x200013F")]
public class UnityXRInputReader : InputReader
{
	[Token(Token = "0x20003A7")]
	public delegate void ControllerEvent(HandEnum hand);

	[Token(Token = "0x20003A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA9C8", Offset = "0xAFA9C8")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityXRInputReader <>4__this;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XrButton button;

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xE05F48", Offset = "0xE05F48", VA = "0xE05F48")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xE06538", Offset = "0xE06538", VA = "0xE06538")]
		internal void <SubscribeToButton>b__0(bool state)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xE06564", Offset = "0xE06564", VA = "0xE06564")]
		internal void <SubscribeToButton>b__1(bool state)
		{
		}
	}

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PrimaryButtonWatcher LeftHandWatcher;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PrimaryButtonWatcher RightHandWatcher;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ControllerEvent OnControllerEnabled;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static ControllerEvent OnControllerDisabled;

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xE05BB0", Offset = "0xE05BB0", VA = "0xE05BB0", Slot = "4")]
	protected override HandEnum GetMyActiveHands()
	{
		return default(HandEnum);
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xE05D04", Offset = "0xE05D04", VA = "0xE05D04", Slot = "11")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xE05D5C", Offset = "0xE05D5C", VA = "0xE05D5C")]
	private void SubscribeToButton(XrButton button)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xE05F50", Offset = "0xE05F50", VA = "0xE05F50")]
	private void InvokePressed(XrButton button, HandEnum hand)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xE06058", Offset = "0xE06058", VA = "0xE06058")]
	private void InvokeReleased(XrButton button, HandEnum hand)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xE05E94", Offset = "0xE05E94", VA = "0xE05E94")]
	private void SubscribeToDeviceEvents()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xE06160", Offset = "0xE06160", VA = "0xE06160")]
	private void DeviceConnected(InputDevice device)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xE06480", Offset = "0xE06480", VA = "0xE06480")]
	private void DeviceDisconnected(InputDevice device)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xE06530", Offset = "0xE06530", VA = "0xE06530")]
	public UnityXRInputReader()
	{
	}
}
[Token(Token = "0x2000140")]
public interface IUpdatable
{
	[Token(Token = "0x6000682")]
	void OnUpdate();
}
[Token(Token = "0x2000141")]
public class IntroDisplays : MonoBehaviour
{
	[Token(Token = "0x6000683")]
	[Address(RVA = "0x1EE0650", Offset = "0x1EE0650", VA = "0x1EE0650")]
	public void Start()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x1EE0654", Offset = "0x1EE0654", VA = "0x1EE0654")]
	private void DisableDisplay()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x1EE067C", Offset = "0x1EE067C", VA = "0x1EE067C")]
	public IntroDisplays()
	{
	}
}
[Token(Token = "0x2000142")]
public class LavaHighlighter : EventPlannerAction
{
	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer LavaRenderer;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAFC8B4", Offset = "0xAFC8B4")]
	public Color LavaLitColor;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float HighlightDuration;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Tween _highlighter;

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x1EE187C", Offset = "0x1EE187C", VA = "0x1EE187C", Slot = "6")]
	protected override void DoOnEnable()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x1EE18A4", Offset = "0x1EE18A4", VA = "0x1EE18A4")]
	private void InitTween()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x1EE1958", Offset = "0x1EE1958", VA = "0x1EE1958")]
	private void HighlightLava()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x1EE19D4", Offset = "0x1EE19D4", VA = "0x1EE19D4", Slot = "4")]
	public override void Execute(CompleteEventPlannerAction onComplete)
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x1EE1A8C", Offset = "0x1EE1A8C", VA = "0x1EE1A8C")]
	public LavaHighlighter()
	{
	}
}
[Token(Token = "0x2000143")]
public class LevelFailDisplay : MonoBehaviour
{
	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject DisplayFail;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAFC8CC", Offset = "0xAFC8CC")]
	public List<BaseGameAction> IntroAction;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BaseGameAction OutroAction;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> Limiters;

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x1EE1E18", Offset = "0x1EE1E18", VA = "0x1EE1E18")]
	private void Awake()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x1EE1E90", Offset = "0x1EE1E90", VA = "0x1EE1E90")]
	public void DisableDisplay()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x1EE1F2C", Offset = "0x1EE1F2C", VA = "0x1EE1F2C")]
	public void RegenerationEvent(Field field)
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x1EE2068", Offset = "0x1EE2068", VA = "0x1EE2068")]
	private void DisplayDisable()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x1EE20DC", Offset = "0x1EE20DC", VA = "0x1EE20DC")]
	public LevelFailDisplay()
	{
	}
}
[Token(Token = "0x2000144")]
public delegate void OnImpactOrExplodeEvent(Cell cell);
[Token(Token = "0x2000145")]
public abstract class BaseHiddenCellEventsReceiver : MonoBehaviour
{
	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BaseHiddenCellEventsReceiver _instance;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OnImpactOrExplodeEvent _onHiddenCellImpact;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OnImpactOrExplodeEvent _onHiddenCellExplode;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<HiddenCellEventWrapper> CellEventWrappers;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float DelayBetweenEvents;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventTimer _timer;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool _isCompleted;

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xE879F8", Offset = "0xE879F8", VA = "0xE879F8")]
	public static void NotifyImpactCellEvent(Cell cell)
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xE87A90", Offset = "0xE87A90", VA = "0xE87A90")]
	public static void NotifyExplodeCellEvent(Cell cell)
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xE87B28", Offset = "0xE87B28", VA = "0xE87B28")]
	public static void SubscribeOnExplodeEvent(OnImpactOrExplodeEvent action)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xE87C40", Offset = "0xE87C40", VA = "0xE87C40")]
	public static void UnSubscribeOnExplodeEvent(OnImpactOrExplodeEvent action)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xE87D58", Offset = "0xE87D58", VA = "0xE87D58")]
	public static void SubscribeOnImpactEvent(OnImpactOrExplodeEvent action)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xE87E70", Offset = "0xE87E70", VA = "0xE87E70")]
	public static void UnSubscribeOnImpactEvent(OnImpactOrExplodeEvent action)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xE87F88", Offset = "0xE87F88", VA = "0xE87F88", Slot = "4")]
	protected virtual void OnNotifyImpactCellEvent(Cell cell)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xE880A0", Offset = "0xE880A0", VA = "0xE880A0", Slot = "5")]
	protected virtual void OnNotifyExplodeCellEvent(Cell cell)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xE881B8", Offset = "0xE881B8", VA = "0xE881B8", Slot = "6")]
	protected virtual void OnNotifyImpactCellEventWithTimer(Cell cell)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xE881BC", Offset = "0xE881BC", VA = "0xE881BC", Slot = "7")]
	protected virtual void OnNotifyExplodeCellEventWithTimer(Cell cell)
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xE881C0", Offset = "0xE881C0", VA = "0xE881C0", Slot = "8")]
	protected virtual void OnValidInvoke()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xE881C4", Offset = "0xE881C4", VA = "0xE881C4", Slot = "9")]
	protected virtual void OnAwake()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xE88230", Offset = "0xE88230", VA = "0xE88230")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xE88290", Offset = "0xE88290", VA = "0xE88290")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xE882F4", Offset = "0xE882F4", VA = "0xE882F4")]
	protected BaseHiddenCellEventsReceiver()
	{
	}
}
[Token(Token = "0x2000146")]
public abstract class HiddenCellEventWrapper : MonoBehaviour
{
	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OpenForEvents;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Coordinates> EventsCoords;

	[Token(Token = "0x60006A3")]
	public abstract void OnImpactOrExplosionEvent();

	[Token(Token = "0x60006A4")]
	public abstract void OnInit();

	[Token(Token = "0x60006A5")]
	public abstract void NotifyOpenForEvents();

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x1F47F88", Offset = "0x1F47F88", VA = "0x1F47F88", Slot = "7")]
	public virtual void OnCompleteTarget()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x1F47F8C", Offset = "0x1F47F8C", VA = "0x1F47F8C")]
	public bool TryInvokeEvent(Coordinates coords)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x1F48054", Offset = "0x1F48054", VA = "0x1F48054")]
	protected HiddenCellEventWrapper()
	{
	}
}
[Token(Token = "0x2000147")]
public class BossHiddenCellEventsReceiver : BaseHiddenCellEventsReceiver
{
	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xE90690", Offset = "0xE90690", VA = "0xE90690")]
	public BossHiddenCellEventsReceiver()
	{
	}
}
[Token(Token = "0x2000148")]
public class ChristmasTreePoint : MonoBehaviour
{
	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<ChristmasTreePoint> _points;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _empty;

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x1F2ADB4", Offset = "0x1F2ADB4", VA = "0x1F2ADB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x1F2AE38", Offset = "0x1F2AE38", VA = "0x1F2AE38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x1F204B0", Offset = "0x1F204B0", VA = "0x1F204B0")]
	public static Transform GetEmptyPoint()
	{
		return null;
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x1F2AEBC", Offset = "0x1F2AEBC", VA = "0x1F2AEBC")]
	public ChristmasTreePoint()
	{
	}
}
[Token(Token = "0x2000149")]
public class ChristmasTreeToyAutoSpawner : MonoBehaviour
{
	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ScaleMultiplayer;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<CellVisualizer> _visualizers;

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x1F2AF40", Offset = "0x1F2AF40", VA = "0x1F2AF40")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x1F2B18C", Offset = "0x1F2B18C", VA = "0x1F2B18C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x1F2B22C", Offset = "0x1F2B22C", VA = "0x1F2B22C")]
	public ChristmasTreeToyAutoSpawner()
	{
	}
}
[Token(Token = "0x200014A")]
public class ChristmasTreeToyChecker : MonoBehaviour
{
	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ChristmasTreeToyChecker _instance;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MrSnowCharacterControolerNavMesh Character;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<CellVisualizerChristamsTreeToy> _visualizer;

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x1F206D8", Offset = "0x1F206D8", VA = "0x1F206D8")]
	public static void AddToListVisual(CellVisualizerChristamsTreeToy visuals)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x1F2B2A4", Offset = "0x1F2B2A4", VA = "0x1F2B2A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x1F2075C", Offset = "0x1F2075C", VA = "0x1F2075C")]
	public static void DoMrSnowHisWork()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x1F2B310", Offset = "0x1F2B310", VA = "0x1F2B310")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x1F2B428", Offset = "0x1F2B428", VA = "0x1F2B428")]
	public ChristmasTreeToyChecker()
	{
	}
}
[Token(Token = "0x200014B")]
public class ClassicHiddenCellEventsReciever : BaseHiddenCellEventsReceiver
{
	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x1F30C8C", Offset = "0x1F30C8C", VA = "0x1F30C8C")]
	public ClassicHiddenCellEventsReciever()
	{
	}
}
[Token(Token = "0x200014C")]
public class DarknessGeneratorMechanic : MonoBehaviour
{
	[Token(Token = "0x20003A9")]
	public delegate void DarknessGeneratorsMechanicEvent(float progress, int healthLeft);

	[Token(Token = "0x20003AA")]
	public delegate void DarknessGeneratorsMechanicRegisterEvent(int newTotalHealth);

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DarknessGeneratorsMechanicEvent OnTargetProgress;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static DarknessGeneratorsMechanicRegisterEvent OnGeneratorRegister;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ApplyCustomizedHealth;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int CustomizedLevelGeneratorHealth;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static DarknessGeneratorMechanic _instance;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _totalDarkEnergySourcesHealth;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _currentDarkEnergySourcesHealth;

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x1EF65A4", Offset = "0x1EF65A4", VA = "0x1EF65A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x1EF65F8", Offset = "0x1EF65F8", VA = "0x1EF65F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x1EF66AC", Offset = "0x1EF66AC", VA = "0x1EF66AC")]
	private static float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x1EF6774", Offset = "0x1EF6774", VA = "0x1EF6774")]
	public static void RegisterGeneratorHealth(CellPluginDarkEnergyGenerator generator)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x1EF6B00", Offset = "0x1EF6B00", VA = "0x1EF6B00")]
	public static void GeneratorHealthChange(int healthChange)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x1EF6E68", Offset = "0x1EF6E68", VA = "0x1EF6E68")]
	public DarknessGeneratorMechanic()
	{
	}
}
[Token(Token = "0x200014D")]
public class EventPlanner : MonoBehaviour, IUpdatable
{
	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EventPlanner _instance;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<EventPlannerAction> _currentActions;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<EventPlannerAction> _currentQueue;

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x1EFF594", Offset = "0x1EFF594", VA = "0x1EFF594")]
	public static bool TryToAddInQueue(EventPlannerAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x1EFF68C", Offset = "0x1EFF68C", VA = "0x1EFF68C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x1EFF6E0", Offset = "0x1EFF6E0", VA = "0x1EFF6E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x1EFF748", Offset = "0x1EFF748", VA = "0x1EFF748")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x1EFF7B0", Offset = "0x1EFF7B0", VA = "0x1EFF7B0", Slot = "4")]
	public void OnUpdate()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x1EFF818", Offset = "0x1EFF818", VA = "0x1EFF818")]
	protected void DoQueueAction()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x1EFF8FC", Offset = "0x1EFF8FC", VA = "0x1EFF8FC")]
	private void OnActionEnd(EventPlannerAction action)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x1EFF964", Offset = "0x1EFF964", VA = "0x1EFF964")]
	public EventPlanner()
	{
	}
}
[Token(Token = "0x200014E")]
public delegate void CompleteEventPlannerAction(EventPlannerAction action);
[Token(Token = "0x200014F")]
public abstract class EventPlannerAction : MonoBehaviour
{
	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 RandomActionTimerRange;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected CompleteEventPlannerAction _onComplete;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TimerEvent _tryAddInQueue;

	[Token(Token = "0x60006CB")]
	public abstract void Execute(CompleteEventPlannerAction onComplete);

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x1EFFA04", Offset = "0x1EFFA04", VA = "0x1EFFA04", Slot = "5")]
	public virtual void StopAction()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x1EFFA70", Offset = "0x1EFFA70", VA = "0x1EFFA70", Slot = "6")]
	protected virtual void DoOnEnable()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x1EFFA74", Offset = "0x1EFFA74", VA = "0x1EFFA74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x1EFFAF8", Offset = "0x1EFFAF8", VA = "0x1EFFAF8")]
	private void RegisterEvent()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x1EFFB80", Offset = "0x1EFFB80", VA = "0x1EFFB80")]
	private void TryAddInQueue()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x1EFFBA4", Offset = "0x1EFFBA4", VA = "0x1EFFBA4")]
	protected EventPlannerAction()
	{
	}
}
[Token(Token = "0x2000150")]
public class EventPlannerBlinkAction : EventPlannerRandomTimerAction
{
	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<ParticleSystem> Lightings;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 RandomLightingTimerRange;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EventTimer _lightingTimer;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<ParticleSystem> _cachedList;

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x1EFFBAC", Offset = "0x1EFFBAC", VA = "0x1EFFBAC", Slot = "6")]
	protected override void DoOnEnable()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x1EFFCCC", Offset = "0x1EFFCCC", VA = "0x1EFFCCC", Slot = "7")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x1EFFD54", Offset = "0x1EFFD54", VA = "0x1EFFD54", Slot = "8")]
	protected override void OnEnd()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x1EFFDD8", Offset = "0x1EFFDD8", VA = "0x1EFFDD8", Slot = "9")]
	protected override void OnActiveUpdate()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x1EFFE40", Offset = "0x1EFFE40", VA = "0x1EFFE40")]
	private void OnLightingOn()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x1F00000", Offset = "0x1F00000", VA = "0x1F00000", Slot = "5")]
	public override void StopAction()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x1F00004", Offset = "0x1F00004", VA = "0x1F00004")]
	public EventPlannerBlinkAction()
	{
	}
}
[Token(Token = "0x2000151")]
public class EventPlannerEarthquakesAction : EventPlannerRandomTimerAction
{
	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Field CurrentField;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform CameraRig;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource Sound;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float FadeTime;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float FadeShakeTime;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float RandomShakePosition;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector2 RandomTimeBetweenShake;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector2 RandomTimeBetweenCellRemove;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float CellForcePower;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 _defaultPosition;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EventTimer _shakeTimer;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private EventTimer _cellRemoveTimer;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected List<Cell> _cells;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _defaultSoundVolume;

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x1F000A0", Offset = "0x1F000A0", VA = "0x1F000A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x1F000D4", Offset = "0x1F000D4", VA = "0x1F000D4", Slot = "7")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x1F001B8", Offset = "0x1F001B8", VA = "0x1F001B8", Slot = "8")]
	protected override void OnEnd()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x1F00334", Offset = "0x1F00334", VA = "0x1F00334", Slot = "5")]
	public override void StopAction()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x1F00340", Offset = "0x1F00340", VA = "0x1F00340", Slot = "9")]
	protected override void OnActiveUpdate()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x1F00660", Offset = "0x1F00660", VA = "0x1F00660", Slot = "10")]
	protected virtual void FillCellList()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x1F00854", Offset = "0x1F00854", VA = "0x1F00854")]
	public EventPlannerEarthquakesAction()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x1F00920", Offset = "0x1F00920", VA = "0x1F00920")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEEA8", Offset = "0xAFEEA8")]
	private void <OnEnd>b__16_0()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x1F00960", Offset = "0x1F00960", VA = "0x1F00960")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEEB8", Offset = "0xAFEEB8")]
	private void <OnEnd>b__16_1(float percent, float time)
	{
	}
}
[Token(Token = "0x2000152")]
public abstract class EventPlannerRandomTimerAction : EventPlannerAction
{
	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 RandomDurationActionTimerRange;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TimerUpdateEvent _schedulerUpdateEvent;

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x1EFFC5C", Offset = "0x1EFFC5C", VA = "0x1EFFC5C", Slot = "6")]
	protected override void DoOnEnable()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x1F00AD8", Offset = "0x1F00AD8", VA = "0x1F00AD8", Slot = "5")]
	public override void StopAction()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x1F00B4C", Offset = "0x1F00B4C", VA = "0x1F00B4C", Slot = "4")]
	public override void Execute(CompleteEventPlannerAction onComplete)
	{
	}

	[Token(Token = "0x60006E5")]
	protected abstract void OnExecute();

	[Token(Token = "0x60006E6")]
	protected abstract void OnEnd();

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x1EFFE3C", Offset = "0x1EFFE3C", VA = "0x1EFFE3C", Slot = "9")]
	protected virtual void OnActiveUpdate()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x1F00BF4", Offset = "0x1F00BF4", VA = "0x1F00BF4")]
	private void SchedulerUpdateEvent(float percent, float targetTiemr)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x1F00098", Offset = "0x1F00098", VA = "0x1F00098")]
	protected EventPlannerRandomTimerAction()
	{
	}
}
[Token(Token = "0x2000153")]
public class EventPlannerRepeatedEffectAction : EventPlannerRandomTimerAction
{
	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem Effect;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource StartSound;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource IdleSound;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource CheckLifeCycleSound;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float FadeSoundTime;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float StartFadeTimer;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve ReplayCurve;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector2 PitchRange;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<EffectLifeCycleSound> LifeCyclesSounds;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _idleDefaultVolume;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private TimerEvent _fadeOutIdleSound;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _doReplay;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private TimerEvent _replayTimer;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ParticleSystem.Particle[] _particles;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _startTime;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ParticleSystem.Particle _lastParticle;

	[Token(Token = "0x17000027")]
	private bool IfLifeCycleOn
	{
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x1F00C68", Offset = "0x1F00C68", VA = "0x1F00C68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x1F00CD8", Offset = "0x1F00CD8", VA = "0x1F00CD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x1F00E08", Offset = "0x1F00E08", VA = "0x1F00E08", Slot = "7")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x1F00FC0", Offset = "0x1F00FC0", VA = "0x1F00FC0")]
	private void FadeOutIdleSound()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x1F01064", Offset = "0x1F01064", VA = "0x1F01064", Slot = "8")]
	protected override void OnEnd()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x1F01080", Offset = "0x1F01080", VA = "0x1F01080", Slot = "9")]
	protected override void OnActiveUpdate()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x1F01218", Offset = "0x1F01218", VA = "0x1F01218")]
	private void ReplayTimer()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x1F01224", Offset = "0x1F01224", VA = "0x1F01224")]
	public EventPlannerRepeatedEffectAction()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x1F01278", Offset = "0x1F01278", VA = "0x1F01278")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEEC8", Offset = "0xAFEEC8")]
	private void <FadeOutIdleSound>b__19_0()
	{
	}
}
[Token(Token = "0x2000154")]
public class Ice12HiddenCellEventWrapper : HiddenCellEventWrapper
{
	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer StartObject;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem CrackedEffect;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody Body;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float PullPower;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float DisableTime;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource Audio;

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x1F48FA8", Offset = "0x1F48FA8", VA = "0x1F48FA8", Slot = "7")]
	public override void OnCompleteTarget()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x1F49038", Offset = "0x1F49038", VA = "0x1F49038", Slot = "4")]
	public override void OnImpactOrExplosionEvent()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x1F49040", Offset = "0x1F49040", VA = "0x1F49040", Slot = "5")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x1F49250", Offset = "0x1F49250", VA = "0x1F49250", Slot = "6")]
	public override void NotifyOpenForEvents()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x1F49230", Offset = "0x1F49230", VA = "0x1F49230")]
	private void EnableStartObject()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x1F49050", Offset = "0x1F49050", VA = "0x1F49050")]
	private void EnableCrackedObject()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x1F4903C", Offset = "0x1F4903C", VA = "0x1F4903C")]
	private void DisableAllObjects()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x1F49278", Offset = "0x1F49278", VA = "0x1F49278")]
	public Ice12HiddenCellEventWrapper()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x1F4928C", Offset = "0x1F4928C", VA = "0x1F4928C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEED8", Offset = "0xAFEED8")]
	private void <EnableCrackedObject>b__11_0()
	{
	}
}
[Token(Token = "0x2000155")]
public class Ice12HiddenCellEventsReceiver : BaseHiddenCellEventsReceiver
{
	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int Health;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform PunchObject;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float PunchDuration;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve PunchCurve;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float PunchPower;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LevelTargetIce12 Target;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource Audio;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Ice12HiddenCellEventWrapper CentrallWrapper;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject FireWorks;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Field CurrentField;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _currentHealth;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int _healthOnPart;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<HiddenCellEventWrapper> _cellEventWrappersCache;

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x1EDC5E0", Offset = "0x1EDC5E0", VA = "0x1EDC5E0", Slot = "9")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x1EDC6F4", Offset = "0x1EDC6F4", VA = "0x1EDC6F4")]
	protected void OnGenerationAnalysisComplete(Field field)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x1EDC7F4", Offset = "0x1EDC7F4", VA = "0x1EDC7F4", Slot = "6")]
	protected override void OnNotifyImpactCellEventWithTimer(Cell cell)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x1EDC904", Offset = "0x1EDC904", VA = "0x1EDC904", Slot = "7")]
	protected override void OnNotifyExplodeCellEventWithTimer(Cell cell)
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x1EDC81C", Offset = "0x1EDC81C", VA = "0x1EDC81C")]
	private void DoOnImpactOrExplode()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x1EDCA40", Offset = "0x1EDCA40", VA = "0x1EDCA40")]
	private void OnComplete()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x1EDC92C", Offset = "0x1EDC92C", VA = "0x1EDC92C")]
	private void Punch()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x1EDCFB8", Offset = "0x1EDCFB8", VA = "0x1EDCFB8")]
	public Ice12HiddenCellEventsReceiver()
	{
	}
}
[Token(Token = "0x2000156")]
public class FireExcessQuantityChecker : MonoBehaviour
{
	[Token(Token = "0x40007AD")]
	private const string ON_FAIL_STRING_RU = "Сгорело слишком много ячеек";

	[Token(Token = "0x40007AE")]
	private const string ON_FAIL_STRING_EN = "Too many cells burned out";

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int TargetValue;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FieldReshuffleDisplay ReshufflerDisplay;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _currentFireCount;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _isComplete;

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x1F3687C", Offset = "0x1F3687C", VA = "0x1F3687C")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x1F36948", Offset = "0x1F36948", VA = "0x1F36948")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x1F36A14", Offset = "0x1F36A14", VA = "0x1F36A14")]
	private void OnFieldFireCellCount(int count)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x1F36B64", Offset = "0x1F36B64", VA = "0x1F36B64")]
	public float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x1F36B04", Offset = "0x1F36B04", VA = "0x1F36B04")]
	private string PickFailString()
	{
		return null;
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x1F36BDC", Offset = "0x1F36BDC", VA = "0x1F36BDC")]
	public FireExcessQuantityChecker()
	{
	}
}
[Token(Token = "0x2000157")]
public class FireMechanicVisualiser : MonoBehaviour, IUpdatable
{
	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FireExcessQuantityChecker FireChecker;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro TextPro;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Image> ProgresBars;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float LerpTime;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _currentProgressPercent;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _lastValue;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _newProgress;

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x1F36E70", Offset = "0x1F36E70", VA = "0x1F36E70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x1F37084", Offset = "0x1F37084", VA = "0x1F37084")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x1F36F74", Offset = "0x1F36F74", VA = "0x1F36F74")]
	private void OnFieldFireCellCount(int count)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x1F3717C", Offset = "0x1F3717C", VA = "0x1F3717C")]
	private void UpdateProgresBars()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x1F372D0", Offset = "0x1F372D0", VA = "0x1F372D0", Slot = "4")]
	public void OnUpdate()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x1F372D4", Offset = "0x1F372D4", VA = "0x1F372D4")]
	public FireMechanicVisualiser()
	{
	}
}
[Token(Token = "0x2000158")]
public delegate void OnPlayerMoveSpeedProgressChangeEvent(float progress);
[Token(Token = "0x2000159")]
public class PlayerMoveSpeedCheckerLevelMechanic : MonoBehaviour
{
	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Progress;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve ProgressCurve;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FadeTime;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float CellProgressBump;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float BonusProgressBump;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _isActive;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OnPlayerMoveSpeedProgressChangeEvent _onPlayerMoveSpeedProgressChange;

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xD3EDF4", Offset = "0xD3EDF4", VA = "0xD3EDF4")]
	public void SubscribeOnPlayerMoveSpeedProgressChangeEvent(OnPlayerMoveSpeedProgressChangeEvent action)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xD3EE74", Offset = "0xD3EE74", VA = "0xD3EE74")]
	public void UnSubscribeOnPlayerMoveSpeedProgressChangeEvent(OnPlayerMoveSpeedProgressChangeEvent action)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xD3EEF4", Offset = "0xD3EEF4", VA = "0xD3EEF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xD3EF6C", Offset = "0xD3EF6C", VA = "0xD3EF6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xD3EF74", Offset = "0xD3EF74", VA = "0xD3EF74")]
	private void OnCellsExplode(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xD3F0EC", Offset = "0xD3F0EC", VA = "0xD3F0EC")]
	private void BumpRune()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xD3F06C", Offset = "0xD3F06C", VA = "0xD3F06C")]
	private void BumpBonus()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xD3F16C", Offset = "0xD3F16C", VA = "0xD3F16C")]
	private void Update()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xD3F24C", Offset = "0xD3F24C", VA = "0xD3F24C")]
	public PlayerMoveSpeedCheckerLevelMechanic()
	{
	}
}
[Token(Token = "0x200015A")]
public delegate void MoveSpeedCheckerEvent(float seconds);
[Token(Token = "0x200015B")]
public class PlayerMoveSpeedCheckerLevelMechanicOld : MonoBehaviour
{
	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Progress;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve ProgressCurve;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FadeTime;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MoveSpeedCheckerEvent _onMoveSpeedCheckerEvent;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _timeBetweenLastMove;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _lastMoveTime;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _firstMove;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool _isActive;

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xD3F274", Offset = "0xD3F274", VA = "0xD3F274")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xD3F2EC", Offset = "0xD3F2EC", VA = "0xD3F2EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xD3F2F8", Offset = "0xD3F2F8", VA = "0xD3F2F8")]
	private void OnCellsExplode(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xD3F36C", Offset = "0xD3F36C", VA = "0xD3F36C")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xD3F374", Offset = "0xD3F374", VA = "0xD3F374")]
	public void SubscribeOnMoveSpeedCheckerEvent(MoveSpeedCheckerEvent action)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xD3F3F4", Offset = "0xD3F3F4", VA = "0xD3F3F4")]
	public void UnSubscribeOnMoveSpeedCheckerEvent(MoveSpeedCheckerEvent action)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xD3F474", Offset = "0xD3F474", VA = "0xD3F474")]
	public float GetLastMoveTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xD3F510", Offset = "0xD3F510", VA = "0xD3F510")]
	public float GetCurrentMoveTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xD3F5D0", Offset = "0xD3F5D0", VA = "0xD3F5D0")]
	public PlayerMoveSpeedCheckerLevelMechanicOld()
	{
	}
}
[Token(Token = "0x200015C")]
public class PlayerMoveSpeedFailController : MonoBehaviour
{
	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerMoveSpeedCheckerLevelMechanicOld moveSpeedMechanicOld;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FieldReshuffleDisplay FailDisplay;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MaxTurnSeconds;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _isComplete;

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xD3F5F0", Offset = "0xD3F5F0", VA = "0xD3F5F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xD3F658", Offset = "0xD3F658", VA = "0xD3F658")]
	public PlayerMoveSpeedFailController()
	{
	}
}
[Token(Token = "0x200015D")]
public class LevelTargetRockAnimator : MonoBehaviour
{
	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator Animator;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro Caption;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro Value;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image ProgressBar;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpriteRenderer Warning;

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x1EE6E4C", Offset = "0x1EE6E4C", VA = "0x1EE6E4C")]
	private void Activate(Field field)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x1EE6EAC", Offset = "0x1EE6EAC", VA = "0x1EE6EAC")]
	private void EnableUi()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x1EE701C", Offset = "0x1EE701C", VA = "0x1EE701C")]
	private void DisableUi()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x1EE718C", Offset = "0x1EE718C", VA = "0x1EE718C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x1EE720C", Offset = "0x1EE720C", VA = "0x1EE720C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x1EE7210", Offset = "0x1EE7210", VA = "0x1EE7210")]
	public LevelTargetRockAnimator()
	{
	}
}
[Token(Token = "0x200015E")]
public class PlayerMoveSpeedVisualiser : MonoBehaviour
{
	[Token(Token = "0x40007D2")]
	private const string ON_FAIL_STRING_RU = "Энергия портала истощена";

	[Token(Token = "0x40007D3")]
	private const string ON_FAIL_STRING_EN = "Portal energy depleted";

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerMoveSpeedCheckerLevelMechanic MoveSpeedLevelMechanic;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image ProgressBar;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FieldReshuffleDisplay ReshufflerDisplay;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LevelTarget MainTarget;

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xD3F668", Offset = "0xD3F668", VA = "0xD3F668")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xD3F760", Offset = "0xD3F760", VA = "0xD3F760")]
	private void Complete(LevelTarget leveltarget)
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xD3F828", Offset = "0xD3F828", VA = "0xD3F828")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xD3F8B0", Offset = "0xD3F8B0", VA = "0xD3F8B0")]
	private void OnProgressChange(float progress)
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xD3F988", Offset = "0xD3F988", VA = "0xD3F988")]
	private string PickFailString()
	{
		return null;
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xD3F9E8", Offset = "0xD3F9E8", VA = "0xD3F9E8")]
	public PlayerMoveSpeedVisualiser()
	{
	}
}
[Token(Token = "0x200015F")]
public class PossibleMovesVisualiser : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003AB")]
	public struct HealthTier
	{
		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<Renderer> Renderers;

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xD44144", Offset = "0xD44144", VA = "0xD44144")]
		public void PaintRenderers(Color color)
		{
		}
	}

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<HealthTier> RendererTiers;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro MovesCountCaptionText;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro MovesCountText;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "GradientUsageAttribute", RVA = "0xAFC904", Offset = "0xAFC904")]
	public Gradient HealthGradient;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float MoveCountFullBar;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WorldPalettes Palettes;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator Animator;

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xD43CF4", Offset = "0xD43CF4", VA = "0xD43CF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xD43E84", Offset = "0xD43E84", VA = "0xD43E84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xD43E88", Offset = "0xD43E88", VA = "0xD43E88")]
	private void Animate(Field field)
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xD43EE8", Offset = "0xD43EE8", VA = "0xD43EE8")]
	private void EnableTexts()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xD43F2C", Offset = "0xD43F2C", VA = "0xD43F2C")]
	private void UpdateProgressBar(Field field)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xD44230", Offset = "0xD44230", VA = "0xD44230")]
	public PossibleMovesVisualiser()
	{
	}
}
[Token(Token = "0x2000160")]
public class BalanceOfTwoCellLevelTarget : BaseBalanceLevelTarget
{
	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CellProperties FirstBalanceElement;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CellProperties SecondBalanceElement;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<CellType> OnChangedFirstElementType;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action<CellType> OnChangedSecondElementType;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _taskActivated;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _previousFirstElementCount;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _previousSecondElementCount;

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xE8716C", Offset = "0xE8716C", VA = "0xE8716C", Slot = "5")]
	protected override void OnActivate()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xE871F0", Offset = "0xE871F0", VA = "0xE871F0", Slot = "6")]
	protected override void OnDeactivate()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xE871F8", Offset = "0xE871F8", VA = "0xE871F8")]
	protected void CellExplode(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xE873EC", Offset = "0xE873EC", VA = "0xE873EC")]
	protected void ValidateProgress()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xE87290", Offset = "0xE87290", VA = "0xE87290")]
	private void CellAnalize(Cell cell)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xE875A4", Offset = "0xE875A4", VA = "0xE875A4")]
	private CellType ChangedTargetCellType(CellType type, bool isFirst)
	{
		return default(CellType);
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xE8748C", Offset = "0xE8748C", VA = "0xE8748C")]
	private bool AnalizerBalanceElement(Cell cell, CellProperties properties, bool isFirst)
	{
		return default(bool);
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xE87634", Offset = "0xE87634", VA = "0xE87634")]
	private bool IncrementBalanceElement(bool firstElement)
	{
		return default(bool);
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xE87664", Offset = "0xE87664", VA = "0xE87664")]
	public BalanceOfTwoCellLevelTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000161")]
public class CellProperties
{
	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CellType Type;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public PluginType Bonus;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CellModifiers Modifiers;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool BonusOneCollors;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool RandomChangedType;

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x1F23DA8", Offset = "0x1F23DA8", VA = "0x1F23DA8")]
	public CellProperties()
	{
	}
}
[Token(Token = "0x2000162")]
public class BalanceOfTwoCombinationLevelTarget : BaseBalanceLevelTarget
{
	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public CellType FirstBalanceType;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CellType SecondBalanceType;

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xE87674", Offset = "0xE87674", VA = "0xE87674", Slot = "5")]
	protected override void OnActivate()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xE876F8", Offset = "0xE876F8", VA = "0xE876F8", Slot = "6")]
	protected override void OnDeactivate()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xE87700", Offset = "0xE87700", VA = "0xE87700")]
	private void DoOnMatch(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xE877CC", Offset = "0xE877CC", VA = "0xE877CC")]
	private bool IsItCombinationThatType(List<Cell> cells, CellType type)
	{
		return default(bool);
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xE878F0", Offset = "0xE878F0", VA = "0xE878F0")]
	private void TargetAdjustment()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xE87918", Offset = "0xE87918", VA = "0xE87918")]
	public BalanceOfTwoCombinationLevelTarget()
	{
	}
}
[Token(Token = "0x2000163")]
public class BaseBalanceLevelTarget : LevelTarget
{
	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float TargetValue;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected float _firstElementCount;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected float _secondElementCount;

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xE87920", Offset = "0xE87920", VA = "0xE87920")]
	public float GetFirstBalanceElementCount()
	{
		return default(float);
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xE87928", Offset = "0xE87928", VA = "0xE87928")]
	public float GetSecondBalanceElementCount()
	{
		return default(float);
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xE8766C", Offset = "0xE8766C", VA = "0xE8766C")]
	public BaseBalanceLevelTarget()
	{
	}
}
[Token(Token = "0x2000164")]
public class CellGroupActivationLevelTarget : LevelTarget
{
	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<int> GroupIds;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private int _targetActiveCellGroupCount;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<int, float> _groupProgress;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _completed;

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x1F1CE84", Offset = "0x1F1CE84", VA = "0x1F1CE84", Slot = "5")]
	protected override void OnActivate()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x1F1D018", Offset = "0x1F1D018", VA = "0x1F1D018", Slot = "8")]
	protected override void OnProgressChange()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x1F1D078", Offset = "0x1F1D078", VA = "0x1F1D078", Slot = "4")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x1F1D1A0", Offset = "0x1F1D1A0", VA = "0x1F1D1A0", Slot = "7")]
	protected override void OnComplete()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x1F1D1B0", Offset = "0x1F1D1B0", VA = "0x1F1D1B0", Slot = "6")]
	protected override void OnDeactivate()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x1F1D2DC", Offset = "0x1F1D2DC", VA = "0x1F1D2DC")]
	private void CheckActivatedGroup(CellGroup group)
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x1F1D36C", Offset = "0x1F1D36C", VA = "0x1F1D36C")]
	private void UpdateGroupProgress(CellGroup group)
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x1F1D0A4", Offset = "0x1F1D0A4", VA = "0x1F1D0A4")]
	private float GetCurrentTotalProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x1F1D430", Offset = "0x1F1D430", VA = "0x1F1D430")]
	public CellGroupActivationLevelTarget()
	{
	}
}
[Token(Token = "0x2000165")]
public class FireExtinguishLevelTarget : LevelTargetCount
{
	[Token(Token = "0x600075A")]
	[Address(RVA = "0x1F36BEC", Offset = "0x1F36BEC", VA = "0x1F36BEC", Slot = "5")]
	protected override void OnActivate()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x1F36CC4", Offset = "0x1F36CC4", VA = "0x1F36CC4", Slot = "6")]
	protected override void OnDeactivate()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x1F36DA0", Offset = "0x1F36DA0", VA = "0x1F36DA0")]
	private void IncrementCount(int valueToAdd)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x1F36E00", Offset = "0x1F36E00", VA = "0x1F36E00")]
	public FireExtinguishLevelTarget()
	{
	}
}
[Token(Token = "0x2000166")]
public class FireflyLevelTarget : LevelTargetSimpleCount
{
	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<ParticleSystem> FlyingBats;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int MaxBatParticles;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _lastBatParticles;

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x1F372E4", Offset = "0x1F372E4", VA = "0x1F372E4", Slot = "5")]
	protected override void OnActivate()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x1F3736C", Offset = "0x1F3736C", VA = "0x1F3736C")]
	private void OnCellsExplode(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x1F37444", Offset = "0x1F37444", VA = "0x1F37444", Slot = "8")]
	protected override void OnProgressChange()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x1F37568", Offset = "0x1F37568", VA = "0x1F37568", Slot = "6")]
	protected override void OnDeactivate()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x1F37570", Offset = "0x1F37570", VA = "0x1F37570")]
	public FireflyLevelTarget()
	{
	}
}
[Token(Token = "0x2000167")]
public class DefrostField : LevelTarget
{
	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int FrozenElements;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool IncludeSnowflake;

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x1EFA5C0", Offset = "0x1EFA5C0", VA = "0x1EFA5C0", Slot = "5")]
	protected override void OnActivate()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x1EFA704", Offset = "0x1EFA704", VA = "0x1EFA704")]
	private void FieldHaveNotFrozenCells(Field field, int frozenCellCount, int snowflakeCount, int heatCount)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x1EFA748", Offset = "0x1EFA748", VA = "0x1EFA748", Slot = "4")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x1EFA760", Offset = "0x1EFA760", VA = "0x1EFA760")]
	private void FieldContainsObjects(Field field, int frozenCellCount, int snowflakeCount, int heatCount)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x1EFA790", Offset = "0x1EFA790", VA = "0x1EFA790", Slot = "6")]
	protected override void OnDeactivate()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x1EFA8D4", Offset = "0x1EFA8D4", VA = "0x1EFA8D4")]
	public DefrostField()
	{
	}
}
[Token(Token = "0x2000168")]
public class LevelTargetCellModifierAndPlugin : LevelTargetCellCount
{
	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<CellModifiers> Modifiers;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<PluginType> Plugins;

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x1EE414C", Offset = "0x1EE414C", VA = "0x1EE414C", Slot = "11")]
	protected override void CellExplode(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x1EE426C", Offset = "0x1EE426C", VA = "0x1EE426C")]
	private bool CheckPlugins(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x1EE4330", Offset = "0x1EE4330", VA = "0x1EE4330")]
	private bool CheckModifiers(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x1EE43F4", Offset = "0x1EE43F4", VA = "0x1EE43F4")]
	private bool CheckCoordinate(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x1EE4410", Offset = "0x1EE4410", VA = "0x1EE4410")]
	public LevelTargetCellModifierAndPlugin()
	{
	}
}
[Token(Token = "0x2000169")]
public class LevelTargetCellsInFieldCoordinates : LevelTargetCount
{
	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Coordinates> FieldTrackingCoordinate;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<PluginType> PluginsTracking;

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x1EE46EC", Offset = "0x1EE46EC", VA = "0x1EE46EC", Slot = "5")]
	protected override void OnActivate()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x1EE47D8", Offset = "0x1EE47D8", VA = "0x1EE47D8")]
	private void OnMoveEndIceCell(Cell cell)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x1EE496C", Offset = "0x1EE496C", VA = "0x1EE496C", Slot = "6")]
	protected override void OnDeactivate()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x1EE4890", Offset = "0x1EE4890", VA = "0x1EE4890")]
	private void CheckCoordinate(Cell cell)
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x1EE4A58", Offset = "0x1EE4A58", VA = "0x1EE4A58", Slot = "8")]
	protected override void OnProgressChange()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x1EE4ACC", Offset = "0x1EE4ACC", VA = "0x1EE4ACC")]
	public LevelTargetCellsInFieldCoordinates()
	{
	}
}
[Token(Token = "0x200016A")]
public class LevelTargetCountFreezeAndSnowflake : LevelTargetCount
{
	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool Freeze;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool Showflake;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<CellType> Types;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CellModifiers FREEZE_MODIFIER;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static PluginType SNOWFLAKE_PLUGIN;

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x1EE4B24", Offset = "0x1EE4B24", VA = "0x1EE4B24", Slot = "5")]
	protected override void OnActivate()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x1EE4C10", Offset = "0x1EE4C10", VA = "0x1EE4C10")]
	private void OnMoveEndIceCell(Cell cell)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x1EE4DCC", Offset = "0x1EE4DCC", VA = "0x1EE4DCC")]
	private void AddedProgress()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x1EE4DE8", Offset = "0x1EE4DE8", VA = "0x1EE4DE8", Slot = "8")]
	protected override void OnProgressChange()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x1EE4D24", Offset = "0x1EE4D24", VA = "0x1EE4D24")]
	private bool IsCellHasAnalizingType(CellType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x1EE4EE0", Offset = "0x1EE4EE0", VA = "0x1EE4EE0")]
	public LevelTargetCountFreezeAndSnowflake()
	{
	}
}
[Token(Token = "0x200016B")]
public class LevelTargetDestroyCombinationWithFreeze : LevelTargetCount
{
	[Token(Token = "0x4000802")]
	private const int MIN_CELL_COUNTS = 3;

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x1EE5768", Offset = "0x1EE5768", VA = "0x1EE5768")]
	private bool IsCellContainsFrozenModifier(List<Cell> cells)
	{
		return default(bool);
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x1EE5808", Offset = "0x1EE5808", VA = "0x1EE5808")]
	private bool IsCellHaveOneType(List<Cell> cells, CellType firstCellType)
	{
		return default(bool);
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x1EE5914", Offset = "0x1EE5914", VA = "0x1EE5914", Slot = "5")]
	protected override void OnActivate()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x1EE5994", Offset = "0x1EE5994", VA = "0x1EE5994", Slot = "6")]
	protected override void OnDeactivate()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x1EE5998", Offset = "0x1EE5998", VA = "0x1EE5998", Slot = "8")]
	protected override void OnProgressChange()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x1EE59AC", Offset = "0x1EE59AC", VA = "0x1EE59AC")]
	private void Match(Field filed, List<Cell> cell)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x1EE5AA4", Offset = "0x1EE5AA4", VA = "0x1EE5AA4")]
	public LevelTargetDestroyCombinationWithFreeze()
	{
	}
}
[Token(Token = "0x200016C")]
public class LevelTargetFreezeNumberOfCells : LevelTargetCount
{
	[Token(Token = "0x6000782")]
	[Address(RVA = "0x1EE6978", Offset = "0x1EE6978", VA = "0x1EE6978", Slot = "5")]
	protected override void OnActivate()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x1EE6A5C", Offset = "0x1EE6A5C", VA = "0x1EE6A5C", Slot = "6")]
	protected override void OnDeactivate()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x1EE6B40", Offset = "0x1EE6B40", VA = "0x1EE6B40", Slot = "8")]
	protected override void OnProgressChange()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x1EE6B88", Offset = "0x1EE6B88", VA = "0x1EE6B88")]
	private void FrozenFieldInformMethod(Field field, int frozenCellCount, int snowflakeCount, int heatCount)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x1EE6B94", Offset = "0x1EE6B94", VA = "0x1EE6B94")]
	public LevelTargetFreezeNumberOfCells()
	{
	}
}
[Token(Token = "0x200016D")]
public class LevelTargetIce12 : LevelTargetCount
{
	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform EndPoint;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform Star;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float TweenTime;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float FlySpeed;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve Curve;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LevelTargetIce12FlyingStar StarTarget;

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x1EDCB70", Offset = "0x1EDCB70", VA = "0x1EDCB70")]
	public void DoComplete()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x1EDCA24", Offset = "0x1EDCA24", VA = "0x1EDCA24")]
	public void DoProgressChange()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x1EE6CA8", Offset = "0x1EE6CA8", VA = "0x1EE6CA8")]
	public LevelTargetIce12()
	{
	}
}
[Token(Token = "0x200016E")]
public class LevelTargetIce12FlyingStar : LevelTargetCount
{
	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform EndPoint;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform Star;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float TweenTime;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float FlySpeed;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve Curve;

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x1EE6BA4", Offset = "0x1EE6BA4", VA = "0x1EE6BA4")]
	public void DoComplete()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x1EE6CC4", Offset = "0x1EE6CC4", VA = "0x1EE6CC4")]
	public LevelTargetIce12FlyingStar()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x1EE6CE0", Offset = "0x1EE6CE0", VA = "0x1EE6CE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEEE8", Offset = "0xAFEEE8")]
	private void <DoComplete>b__5_0()
	{
	}
}
[Token(Token = "0x200016F")]
public class LevelTargetIceChristmasTreeToy : LevelTargetCellCount
{
	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Transform> TreePoints;

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x1EE6CFC", Offset = "0x1EE6CFC", VA = "0x1EE6CFC", Slot = "5")]
	protected override void OnActivate()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x1EE6D5C", Offset = "0x1EE6D5C", VA = "0x1EE6D5C", Slot = "11")]
	protected override void CellExplode(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x1EE6E18", Offset = "0x1EE6E18", VA = "0x1EE6E18")]
	public LevelTargetIceChristmasTreeToy()
	{
	}
}
[Token(Token = "0x2000170")]
public class LevelTargetDestroyLimiters : LevelTarget
{
	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<LimiterForLavaLevels> Limiters;

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x1EE5D98", Offset = "0x1EE5D98", VA = "0x1EE5D98", Slot = "5")]
	protected override void OnActivate()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x1EE5EA4", Offset = "0x1EE5EA4", VA = "0x1EE5EA4", Slot = "6")]
	protected override void OnDeactivate()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x1EE5FB0", Offset = "0x1EE5FB0", VA = "0x1EE5FB0")]
	private void LimitersDamageChanged(float percent)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x1EE5FBC", Offset = "0x1EE5FBC", VA = "0x1EE5FBC", Slot = "8")]
	protected override void OnProgressChange()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x1EE6010", Offset = "0x1EE6010", VA = "0x1EE6010", Slot = "4")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x1EE60CC", Offset = "0x1EE60CC", VA = "0x1EE60CC")]
	public int GetActiveLimitersValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x1EE617C", Offset = "0x1EE617C", VA = "0x1EE617C")]
	public LevelTargetDestroyLimiters()
	{
	}
}
[Token(Token = "0x2000171")]
public class LevelTargetDestroyLimitersVisualizer : LevelTargetVisualizer
{
	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image Scale;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro LogsDestroyedText;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ScaleUpdatingTime;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected float _currentProgressPercent;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _newProgress;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _progressUpdating;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _previousProgress;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TimerUpdateEvent _timerEvent;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LevelTargetDestroyLimiters _target;

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x1EE6184", Offset = "0x1EE6184", VA = "0x1EE6184", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x1EE62E4", Offset = "0x1EE62E4", VA = "0x1EE62E4", Slot = "5")]
	protected override void OnTargetProgressChange(LevelTarget target)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x1EE62C8", Offset = "0x1EE62C8", VA = "0x1EE62C8")]
	private void SetProgressToScale(float newProgress)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x1EE6420", Offset = "0x1EE6420", VA = "0x1EE6420")]
	private float GetUpdatingTime()
	{
		return default(float);
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x1EE6498", Offset = "0x1EE6498", VA = "0x1EE6498")]
	private void TimerUpdateEvent(float percent, float targetTime)
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x1EE64D0", Offset = "0x1EE64D0", VA = "0x1EE64D0")]
	public LevelTargetDestroyLimitersVisualizer()
	{
	}
}
[Token(Token = "0x2000172")]
public class LevelTarget : MonoBehaviour
{
	[Token(Token = "0x20003AC")]
	public delegate void LevelTargetEvent(LevelTarget levelTarget);

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelTargetEvent Complete;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelTargetEvent ProgressChange;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<LevelTarget> SubTarget;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LevelTargetEvent _onActiveChange;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LevelTargetEvent _onProgressChange;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float _generalCurrentProgress;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected int _numberOfTrackedItems;

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x1EE30F8", Offset = "0x1EE30F8", VA = "0x1EE30F8")]
	public void Init(LevelTargetEvent onActiveChange, LevelTargetEvent onProgressChange)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x1EE3100", Offset = "0x1EE3100", VA = "0x1EE3100")]
	private void InitSubTargets()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x1EE31F0", Offset = "0x1EE31F0", VA = "0x1EE31F0", Slot = "4")]
	public virtual float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x1EE3258", Offset = "0x1EE3258", VA = "0x1EE3258")]
	private float AddSubTargetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x1EE3364", Offset = "0x1EE3364", VA = "0x1EE3364")]
	protected void GetSubsystemProgress()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x1EE3368", Offset = "0x1EE3368", VA = "0x1EE3368", Slot = "5")]
	protected virtual void OnActivate()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x1EE37DC", Offset = "0x1EE37DC", VA = "0x1EE37DC")]
	private void UnloadScene(LevelLoader.LevelID level, LevelLoader.LevelRegion region, LevelLoader.LevelID previousLevel)
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x1EE37E0", Offset = "0x1EE37E0", VA = "0x1EE37E0", Slot = "6")]
	protected virtual void OnDeactivate()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x1EE38B0", Offset = "0x1EE38B0", VA = "0x1EE38B0", Slot = "7")]
	protected virtual void OnComplete()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x1EE3984", Offset = "0x1EE3984", VA = "0x1EE3984", Slot = "8")]
	protected virtual void OnProgressChange()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x1EE39C8", Offset = "0x1EE39C8", VA = "0x1EE39C8", Slot = "9")]
	protected virtual void OnSubTargetActiveChange(LevelTarget target)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x1EE39CC", Offset = "0x1EE39CC", VA = "0x1EE39CC", Slot = "10")]
	protected virtual void OnSubTargetProgressChange(LevelTarget target)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x1EE3A4C", Offset = "0x1EE3A4C", VA = "0x1EE3A4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x1EE3A58", Offset = "0x1EE3A58", VA = "0x1EE3A58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x1EE3A64", Offset = "0x1EE3A64", VA = "0x1EE3A64")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x1EE3A68", Offset = "0x1EE3A68", VA = "0x1EE3A68")]
	public LevelTarget()
	{
	}
}
[Token(Token = "0x2000173")]
public class LevelTargetBonusType : LevelTargetCellCount
{
	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool AllBonus;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool RunicBonus;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool SpecialBonus;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<CellProperties> BonusTypes;

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x1EE3AA0", Offset = "0x1EE3AA0", VA = "0x1EE3AA0", Slot = "11")]
	protected override void CellExplode(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x1EE3DAC", Offset = "0x1EE3DAC", VA = "0x1EE3DAC")]
	public LevelTargetBonusType()
	{
	}
}
[Token(Token = "0x2000174")]
public class LevelTargetCellCount : LevelTargetCount
{
	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _previousProgress;

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x1EE4034", Offset = "0x1EE4034", VA = "0x1EE4034", Slot = "5")]
	protected override void OnActivate()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x1EE40B8", Offset = "0x1EE40B8", VA = "0x1EE40B8", Slot = "6")]
	protected override void OnDeactivate()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x1EE3D2C", Offset = "0x1EE3D2C", VA = "0x1EE3D2C", Slot = "11")]
	protected virtual void CellExplode(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x1EE3DBC", Offset = "0x1EE3DBC", VA = "0x1EE3DBC")]
	public LevelTargetCellCount()
	{
	}
}
[Token(Token = "0x2000175")]
public class LevelTargetCellType : LevelTargetCellCount
{
	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<CellType> CellTypes;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool AllType;

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x1EE4420", Offset = "0x1EE4420", VA = "0x1EE4420", Slot = "11")]
	protected override void CellExplode(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x1EE45D8", Offset = "0x1EE45D8", VA = "0x1EE45D8", Slot = "12")]
	protected virtual bool IsParametersCorrected(Cell cell, CellType checkingType)
	{
		return default(bool);
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x1EE45F8", Offset = "0x1EE45F8", VA = "0x1EE45F8")]
	public LevelTargetCellType()
	{
	}
}
[Token(Token = "0x2000176")]
public class LevelTargetCellTypeAndModifier : LevelTargetCellType
{
	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<CellModifiers> Modifiers;

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x1EE4608", Offset = "0x1EE4608", VA = "0x1EE4608", Slot = "12")]
	protected override bool IsParametersCorrected(Cell cell, CellType checkingType)
	{
		return default(bool);
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x1EE4634", Offset = "0x1EE4634", VA = "0x1EE4634")]
	private bool IsCellHasModifier(CellModifiers modifiers)
	{
		return default(bool);
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x1EE46DC", Offset = "0x1EE46DC", VA = "0x1EE46DC")]
	public LevelTargetCellTypeAndModifier()
	{
	}
}
[Token(Token = "0x2000177")]
public class LevelTargetCount : LevelTarget
{
	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float TargetValue;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float Progress;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected float _currentProgress;

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x1EE4ADC", Offset = "0x1EE4ADC", VA = "0x1EE4ADC", Slot = "4")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x1EE4AE4", Offset = "0x1EE4AE4", VA = "0x1EE4AE4")]
	public float GetCurrentProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x1EE4AF8", Offset = "0x1EE4AF8", VA = "0x1EE4AF8")]
	public float GetRemainingProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x1EE4AA0", Offset = "0x1EE4AA0", VA = "0x1EE4AA0", Slot = "8")]
	protected override void OnProgressChange()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x1EE4B10", Offset = "0x1EE4B10", VA = "0x1EE4B10")]
	public void SetHalfOnProgress()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x1EE413C", Offset = "0x1EE413C", VA = "0x1EE413C")]
	public LevelTargetCount()
	{
	}
}
[Token(Token = "0x2000178")]
public class LevelTargetDestroyCombination : LevelTarget
{
	[Token(Token = "0x20003AD")]
	public delegate void LevelTargetCombinationEvent(int inCombinationCount, CellType cellType);

	[Token(Token = "0x400082B")]
	private const int MIN_COMBINATION_COUNT = 3;

	[Token(Token = "0x400082C")]
	private const int MAX_COMBINATION_COUNT = 6;

	[Token(Token = "0x400082D")]
	private const int TRY_TAKE_NEW_TYPE = 4;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFC928", Offset = "0xAFC928")]
	public int MinInCombinationCount;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public uint TargetCombinationNumber;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool GenerateNewCombinationVariant;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LevelTargetCombinationEvent _onTargetCombinationChange;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private uint _currentCombinationDoneCount;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected CellType _combinationElementType;

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x1EE4F54", Offset = "0x1EE4F54", VA = "0x1EE4F54")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x1EE4FCC", Offset = "0x1EE4FCC", VA = "0x1EE4FCC", Slot = "11")]
	protected virtual bool IsThisRightCombination(List<Cell> cells)
	{
		return default(bool);
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x1EE5060", Offset = "0x1EE5060", VA = "0x1EE5060")]
	private void DoOnMatch(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x1EE5254", Offset = "0x1EE5254", VA = "0x1EE5254", Slot = "4")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x1EE5280", Offset = "0x1EE5280", VA = "0x1EE5280", Slot = "5")]
	protected override void OnActivate()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x1EE5300", Offset = "0x1EE5300", VA = "0x1EE5300", Slot = "6")]
	protected override void OnDeactivate()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x1EE50F8", Offset = "0x1EE50F8", VA = "0x1EE50F8")]
	public void RandomizeNewCombination(Field field)
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x1EE5304", Offset = "0x1EE5304", VA = "0x1EE5304")]
	public void SetNewCombination(int inCombinationCount, CellType newType)
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x1EE559C", Offset = "0x1EE559C", VA = "0x1EE559C")]
	public void SubscribeOnTargetCombinationChange(LevelTargetCombinationEvent onTargetCombinationChange)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x1EE561C", Offset = "0x1EE561C", VA = "0x1EE561C")]
	public void UnsubscribeOnTargetCombinationChange(LevelTargetCombinationEvent onTargetCombinationChange)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x1EE569C", Offset = "0x1EE569C", VA = "0x1EE569C")]
	public LevelTargetDestroyCombination()
	{
	}
}
[Token(Token = "0x2000179")]
public class LevelTargetDestroyDarkEnergyGenerators : LevelTarget
{
	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _darknessGeneratorTotalHealth;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _darknessGeneratorHealthLeft;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _targetProgress;

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x1EE5AB4", Offset = "0x1EE5AB4", VA = "0x1EE5AB4", Slot = "4")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x1EE5ABC", Offset = "0x1EE5ABC", VA = "0x1EE5ABC")]
	public void GetData(out int currentHealth, out int totalHealth)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x1EE5AD0", Offset = "0x1EE5AD0", VA = "0x1EE5AD0", Slot = "5")]
	protected override void OnActivate()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x1EE5C04", Offset = "0x1EE5C04", VA = "0x1EE5C04", Slot = "6")]
	protected override void OnDeactivate()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x1EE5D34", Offset = "0x1EE5D34", VA = "0x1EE5D34")]
	private void RenewTotalHealth(int newTotalHealth)
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x1EE5D3C", Offset = "0x1EE5D3C", VA = "0x1EE5D3C")]
	private void OnProgressCheck(float progress, int healthLeft)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x1EE5D90", Offset = "0x1EE5D90", VA = "0x1EE5D90")]
	public LevelTargetDestroyDarkEnergyGenerators()
	{
	}
}
[Token(Token = "0x200017A")]
public class LevelTargetDestroyPluginTypeOnField : LevelTarget
{
	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<PluginType> TargetCellTypesToDestroy;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool AutoCalculateAtFieldGeneration;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HashSet<PluginType> _checkTypeSet;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _startCountOfPluginTypeCells;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _leftToDestroyCountOfPluginTypeCells;

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x1EE64E8", Offset = "0x1EE64E8", VA = "0x1EE64E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x1EE6560", Offset = "0x1EE6560", VA = "0x1EE6560", Slot = "4")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x1EE659C", Offset = "0x1EE659C", VA = "0x1EE659C")]
	private void DoOnValidateEnd(Field field)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x1EE6754", Offset = "0x1EE6754", VA = "0x1EE6754")]
	private void CountPluginTypeCellsOnField(Field field)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x1EE68B0", Offset = "0x1EE68B0", VA = "0x1EE68B0", Slot = "5")]
	protected override void OnActivate()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x1EE696C", Offset = "0x1EE696C", VA = "0x1EE696C", Slot = "6")]
	protected override void OnDeactivate()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x1EE6970", Offset = "0x1EE6970", VA = "0x1EE6970")]
	public LevelTargetDestroyPluginTypeOnField()
	{
	}
}
[Token(Token = "0x200017B")]
public class LevelTargetPlayerMoveCount : LevelTargetCellCount
{
	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x1EE6E28", Offset = "0x1EE6E28", VA = "0x1EE6E28", Slot = "11")]
	protected override void CellExplode(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x1EE6E3C", Offset = "0x1EE6E3C", VA = "0x1EE6E3C")]
	public LevelTargetPlayerMoveCount()
	{
	}
}
[Token(Token = "0x200017C")]
public class LevelTargetScore : LevelTarget
{
	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Field CurrentField;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<CellType> TargetCellType;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<PluginType> TargetBonusTypes;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool BonusOnly;

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x1EE7218", Offset = "0x1EE7218", VA = "0x1EE7218")]
	private void UpdateLevelScore(int score)
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x1EE72C8", Offset = "0x1EE72C8", VA = "0x1EE72C8", Slot = "5")]
	protected override void OnActivate()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x1EE7424", Offset = "0x1EE7424", VA = "0x1EE7424", Slot = "6")]
	protected override void OnDeactivate()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x1EE74F0", Offset = "0x1EE74F0", VA = "0x1EE74F0")]
	protected void OnSeedCombo(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x1EE74F4", Offset = "0x1EE74F4", VA = "0x1EE74F4")]
	private void BonusAnalise()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x1EE74F8", Offset = "0x1EE74F8", VA = "0x1EE74F8")]
	private void TypeAnalise()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x1EE74FC", Offset = "0x1EE74FC", VA = "0x1EE74FC")]
	public LevelTargetScore()
	{
	}
}
[Token(Token = "0x200017D")]
public class LevelTargetSimpleCount : LevelTargetCount
{
	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x1EE7504", Offset = "0x1EE7504", VA = "0x1EE7504", Slot = "8")]
	protected override void OnProgressChange()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x1EE7518", Offset = "0x1EE7518", VA = "0x1EE7518")]
	public LevelTargetSimpleCount()
	{
	}
}
[Token(Token = "0x200017E")]
public class LevelTargetSpecificBonusOnField : LevelTargetCellCount
{
	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<int> Row;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<int> Col;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<Coordinates> CellCoordinates;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<PluginType> Plugins;

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x1EE7528", Offset = "0x1EE7528", VA = "0x1EE7528", Slot = "11")]
	protected override void CellExplode(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x1EE76C8", Offset = "0x1EE76C8", VA = "0x1EE76C8")]
	private bool IsCellReferToCoordinates(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x1EE782C", Offset = "0x1EE782C", VA = "0x1EE782C")]
	public LevelTargetSpecificBonusOnField()
	{
	}
}
[Token(Token = "0x200017F")]
public class LevelTargetVisualizerDarkEnergy : MonoBehaviour
{
	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x1EE8E6C", Offset = "0x1EE8E6C", VA = "0x1EE8E6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x1EE8E70", Offset = "0x1EE8E70", VA = "0x1EE8E70")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x1EE8E74", Offset = "0x1EE8E74", VA = "0x1EE8E74")]
	public LevelTargetVisualizerDarkEnergy()
	{
	}
}
[Token(Token = "0x2000180")]
public class MelodyLevelTarget : LevelTarget
{
	[Serializable]
	[Token(Token = "0x20003AE")]
	public struct KeySequence
	{
		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<int> Keys;
	}

	[Token(Token = "0x20003AF")]
	public delegate void MelodyEvent(List<int> keys);

	[Token(Token = "0x20003B0")]
	public delegate void MelodyResetEvent();

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MelodyResetEvent OnReset;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static MelodyNodeCellGroup.MelodyNodeEvent OnInstrumentActivate;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static MelodyNodeCellGroup.MelodyNodeEvent OnSequenceComplete;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<KeySequence> Sequences;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material DefaultMaterial;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material ActivationMaterial;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _currentActivationIndex;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _currentActiveSequence;

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xE0CE14", Offset = "0xE0CE14", VA = "0xE0CE14", Slot = "5")]
	protected override void OnActivate()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xE0CEE8", Offset = "0xE0CEE8", VA = "0xE0CEE8", Slot = "6")]
	protected override void OnDeactivate()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xE0CFAC", Offset = "0xE0CFAC", VA = "0xE0CFAC")]
	private void CheckCurrentKey(int key)
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xE0D62C", Offset = "0xE0D62C", VA = "0xE0D62C")]
	public MelodyLevelTarget()
	{
	}
}
[Token(Token = "0x2000181")]
public class MultiCellGroupActivationLevelTarget : CellGroupActivationLevelTarget
{
	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<CellGroup> _cellGroups;

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xE14E8C", Offset = "0xE14E8C", VA = "0xE14E8C")]
	public MultiCellGroupActivationLevelTarget()
	{
	}
}
[Token(Token = "0x2000182")]
public class ScatteringLevelTargetVisualizer : LevelTargetVisualizer
{
	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xD4A230", Offset = "0xD4A230", VA = "0xD4A230", Slot = "4")]
	protected override void OnTargetComplete(LevelTarget target)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xD4A67C", Offset = "0xD4A67C", VA = "0xD4A67C")]
	public ScatteringLevelTargetVisualizer()
	{
	}
}
[Token(Token = "0x2000183")]
public class TargetVisualiserAutumn : LevelTargetVisualizerCounter
{
	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xDFBF24", Offset = "0xDFBF24", VA = "0xDFBF24", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xDFBF58", Offset = "0xDFBF58", VA = "0xDFBF58", Slot = "5")]
	protected override void OnTargetProgressChange(LevelTarget target)
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xDFBF8C", Offset = "0xDFBF8C", VA = "0xDFBF8C", Slot = "4")]
	protected override void OnTargetComplete(LevelTarget target)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xDFBFD8", Offset = "0xDFBFD8", VA = "0xDFBFD8")]
	public TargetVisualiserAutumn()
	{
	}
}
[Token(Token = "0x2000184")]
public class CellGroupTargetVisualizer : LevelTargetVisualizer
{
	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x1F1D4B0", Offset = "0x1F1D4B0", VA = "0x1F1D4B0", Slot = "5")]
	protected override void OnTargetProgressChange(LevelTarget target)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x1F1D4B8", Offset = "0x1F1D4B8", VA = "0x1F1D4B8")]
	public CellGroupTargetVisualizer()
	{
	}
}
[Token(Token = "0x2000185")]
public class LevelTargetVisualizerMelody : LevelTargetVisualizer
{
	[Token(Token = "0x20003B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA9D8", Offset = "0xAFA9D8")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LevelTargetVisualizerMelody <>4__this;

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x1EE9AA0", Offset = "0x1EE9AA0", VA = "0x1EE9AA0")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x1EE9ACC", Offset = "0x1EE9ACC", VA = "0x1EE9ACC")]
		internal void <OnSequenceComplete>b__0()
		{
		}
	}

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MelodySequenceWrapper> SequenceWrappers;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MelodySequenceWrapper _currentSequenceWrapper;

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x1EE9630", Offset = "0x1EE9630", VA = "0x1EE9630")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x1EE9824", Offset = "0x1EE9824", VA = "0x1EE9824")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x1EE99A8", Offset = "0x1EE99A8", VA = "0x1EE99A8")]
	private void OnInstrumentActivate(int activatesCount)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x1EE99C4", Offset = "0x1EE99C4", VA = "0x1EE99C4")]
	private void OnSequenceComplete(int index)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x1EE9AA8", Offset = "0x1EE9AA8", VA = "0x1EE9AA8")]
	private void OnReset()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x1EE9AC4", Offset = "0x1EE9AC4", VA = "0x1EE9AC4")]
	public LevelTargetVisualizerMelody()
	{
	}
}
[Serializable]
[Token(Token = "0x2000186")]
public class MelodySequenceWrapper
{
	[Token(Token = "0x20003B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA9E8", Offset = "0xAFA9E8")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action onComplete;

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xE0E098", Offset = "0xE0E098", VA = "0xE0E098")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xE0E2D0", Offset = "0xE0E2D0", VA = "0xE0E2D0")]
		internal void <DoHide>b__0()
		{
		}
	}

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ShowTime;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float HideTime;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 HideDelay;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float FlyDistance;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<MelodyBell> Instruments;

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xE0DE78", Offset = "0xE0DE78", VA = "0xE0DE78")]
	public void DoShow()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xE0DF50", Offset = "0xE0DF50", VA = "0xE0DF50")]
	public void DoHide(Action onComplete)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xE0E0A0", Offset = "0xE0E0A0", VA = "0xE0E0A0")]
	public void DoDisable()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xE0E148", Offset = "0xE0E148", VA = "0xE0E148")]
	public void InstrumentActivate(int activatesCount)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xE0E1E0", Offset = "0xE0E1E0", VA = "0xE0E1E0")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xE0E274", Offset = "0xE0E274", VA = "0xE0E274")]
	public MelodySequenceWrapper()
	{
	}
}
[Token(Token = "0x2000187")]
public class CummulativeTargetLavaBoss : CumulativeTargetLevelGround
{
	[Token(Token = "0x6000802")]
	[Address(RVA = "0x1F08FD4", Offset = "0x1F08FD4", VA = "0x1F08FD4")]
	public CummulativeTargetLavaBoss()
	{
	}
}
[Token(Token = "0x2000188")]
public class CumulativeTargetVisualiser : LevelTargetVisualizerCounter
{
	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ScaleUpdatingTime;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected TimerUpdateEvent _scaleEvent;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float _currentProgressPercent;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _newProgress;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _progressUpdating;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _previousProgress;

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x1F09034", Offset = "0x1F09034", VA = "0x1F09034", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x1F09290", Offset = "0x1F09290", VA = "0x1F09290", Slot = "5")]
	protected override void OnTargetProgressChange(LevelTarget target)
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x1F0922C", Offset = "0x1F0922C", VA = "0x1F0922C", Slot = "10")]
	protected virtual void TimerUpdateEvent(float percent, float targetTime)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x1F0939C", Offset = "0x1F0939C", VA = "0x1F0939C")]
	private float GetUpdatingTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x1F0938C", Offset = "0x1F0938C", VA = "0x1F0938C")]
	public CumulativeTargetVisualiser()
	{
	}
}
[Token(Token = "0x2000189")]
public class CumulativeTargetLevelGround : CumulativeTargetVisualiser
{
	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Image> Progress;

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x1F08FF4", Offset = "0x1F08FF4", VA = "0x1F08FF4", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x1F09210", Offset = "0x1F09210", VA = "0x1F09210", Slot = "10")]
	protected override void TimerUpdateEvent(float percent, float targetTime)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x1F09248", Offset = "0x1F09248", VA = "0x1F09248", Slot = "5")]
	protected override void OnTargetProgressChange(LevelTarget target)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x1F0915C", Offset = "0x1F0915C", VA = "0x1F0915C")]
	private void SetToText(float value)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x1F090B4", Offset = "0x1F090B4", VA = "0x1F090B4")]
	private void SetProgressToImage(float progressValue)
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x1F08FE4", Offset = "0x1F08FE4", VA = "0x1F08FE4")]
	public CumulativeTargetLevelGround()
	{
	}
}
[Token(Token = "0x200018A")]
public class LimitersScaling : MonoBehaviour
{
	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 DefaultScale;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> EnableObject;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Transform _transform;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _targetScale;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _scaling;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float LerpCoef;

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x1EEA830", Offset = "0x1EEA830", VA = "0x1EEA830")]
	private void Start()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x1EEA83C", Offset = "0x1EEA83C", VA = "0x1EEA83C", Slot = "4")]
	protected virtual void OnStart()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x1EEA8DC", Offset = "0x1EEA8DC", VA = "0x1EEA8DC")]
	public void ScaleToZero()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x1EEA9B0", Offset = "0x1EEA9B0", VA = "0x1EEA9B0")]
	public void ScaleToDefaultScale()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x1EEA9CC", Offset = "0x1EEA9CC", VA = "0x1EEA9CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x1EEA9E4", Offset = "0x1EEA9E4", VA = "0x1EEA9E4", Slot = "5")]
	protected virtual void ChangedParameters()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x1EEABB4", Offset = "0x1EEABB4", VA = "0x1EEABB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x1EEACB4", Offset = "0x1EEACB4", VA = "0x1EEACB4")]
	public LimitersScaling()
	{
	}
}
[Token(Token = "0x200018B")]
public class MovingLimiter : LimitersScaling
{
	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 StartPosition;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _endPosition;

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xE146B8", Offset = "0xE146B8", VA = "0xE146B8", Slot = "4")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xE1470C", Offset = "0xE1470C", VA = "0xE1470C", Slot = "5")]
	protected override void ChangedParameters()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xE147F4", Offset = "0xE147F4", VA = "0xE147F4")]
	public MovingLimiter()
	{
	}
}
[Token(Token = "0x200018C")]
public class LevelTargetVisualizerGround10 : LevelTargetVisualizer
{
	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image Progress;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LevelTargetBonusType _target;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TimerUpdateEvent _timer;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ScalingTime;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _updating;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _previousProgress;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _newProgress;

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x1EE9178", Offset = "0x1EE9178", VA = "0x1EE9178", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x1EE92D0", Offset = "0x1EE92D0", VA = "0x1EE92D0", Slot = "5")]
	protected override void OnTargetProgressChange(LevelTarget target)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x1EE93B0", Offset = "0x1EE93B0", VA = "0x1EE93B0")]
	private float GetProgressTime()
	{
		return default(float);
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x1EE9428", Offset = "0x1EE9428", VA = "0x1EE9428")]
	private void TimerUpdate(float percent, float targetTime)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x1EE94A4", Offset = "0x1EE94A4", VA = "0x1EE94A4")]
	public LevelTargetVisualizerGround10()
	{
	}
}
[Token(Token = "0x200018D")]
public class LevelTargetVisualizerGround9 : LevelTargetVisualizer
{
	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro BonusNumber;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro Description;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected XBonusOnFieldLevelTarget _target;

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x1EE94B4", Offset = "0x1EE94B4", VA = "0x1EE94B4", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x1EE95CC", Offset = "0x1EE95CC", VA = "0x1EE95CC", Slot = "5")]
	protected override void OnTargetProgressChange(LevelTarget target)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x1EE9628", Offset = "0x1EE9628", VA = "0x1EE9628")]
	public LevelTargetVisualizerGround9()
	{
	}
}
[Token(Token = "0x200018E")]
public class Obelisk : LevelTargetVisualizerCounter
{
	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer Renderer;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform Scale;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ObeliskEnergyLine EnergyLine;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAFC940", Offset = "0xAFC940")]
	public Color ScaleColor;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float PROGRESS_SCALE_TIME;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _baseLocalScale;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _scaleInProgress;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TimerUpdateEvent _scaleEvent;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _referencePoint;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _additionalProgress;

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xE1835C", Offset = "0xE1835C", VA = "0xE1835C", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xE184D8", Offset = "0xE184D8", VA = "0xE184D8")]
	private void TimerUpdate(float percent, float targetTime)
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xE184D0", Offset = "0xE184D0", VA = "0xE184D0")]
	private Vector3 GetNewScale(Vector3 vect, float newScale)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xE18538", Offset = "0xE18538", VA = "0xE18538", Slot = "4")]
	protected override void OnTargetComplete(LevelTarget target)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xE186D8", Offset = "0xE186D8", VA = "0xE186D8", Slot = "5")]
	protected override void OnTargetProgressChange(LevelTarget target)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xE18634", Offset = "0xE18634", VA = "0xE18634")]
	private float GetTimeLeft(LevelTarget target)
	{
		return default(float);
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xE18424", Offset = "0xE18424", VA = "0xE18424")]
	private void SetComponentScaleColor()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xE188B8", Offset = "0xE188B8", VA = "0xE188B8")]
	public Obelisk()
	{
	}
}
[Token(Token = "0x200018F")]
public class ObeliskEnergyLine : MonoBehaviour
{
	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer LineRenderer;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem LineEnergy;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource EndLevelSound;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseCustomColorForParticles;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAFC958", Offset = "0xAFC958")]
	public Color CustomColor;

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xE187D0", Offset = "0xE187D0", VA = "0xE187D0")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xE18694", Offset = "0xE18694", VA = "0xE18694")]
	public void PlayTargetAchieved()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xE188C8", Offset = "0xE188C8", VA = "0xE188C8")]
	public ObeliskEnergyLine()
	{
	}
}
[Token(Token = "0x2000190")]
public class SpecificBonusOnFiledVisualizer : LevelTargetVisualizer
{
	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<TextMeshPro> Text;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Image> Progress;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LevelTargetSpecificBonusOnField _target;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TimerUpdateEvent _timerEvent;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _updating;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float ScaleTime;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _previousProgress;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _newProgress;

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xDF8FB8", Offset = "0xDF8FB8", VA = "0xDF8FB8", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xDF929C", Offset = "0xDF929C", VA = "0xDF929C", Slot = "5")]
	protected override void OnTargetProgressChange(LevelTarget target)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xDF93E0", Offset = "0xDF93E0", VA = "0xDF93E0")]
	private float GetTime()
	{
		return default(float);
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xDF9128", Offset = "0xDF9128", VA = "0xDF9128")]
	private void SetProgressToImages(float progress)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xDF91D0", Offset = "0xDF91D0", VA = "0xDF91D0")]
	private void SetProgressToText(float progress)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xDF9458", Offset = "0xDF9458", VA = "0xDF9458")]
	private void TimerUpdate(float percent, float targetTime)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xDF94C0", Offset = "0xDF94C0", VA = "0xDF94C0")]
	public SpecificBonusOnFiledVisualizer()
	{
	}
}
[Token(Token = "0x2000191")]
public class TargetVisualiserAmountToTarget : LevelTargetVisualizerCounter
{
	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string PREFIX;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string PREFIX_EN;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image Scale;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float ScaleTime;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TimerUpdateEvent _timerUpdate;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _updating;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _previousProgress;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _targetProgress;

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xDFBB64", Offset = "0xDFBB64", VA = "0xDFBB64", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xDFBC78", Offset = "0xDFBC78", VA = "0xDFBC78", Slot = "5")]
	protected override void OnTargetProgressChange(LevelTarget target)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xDFBD7C", Offset = "0xDFBD7C", VA = "0xDFBD7C")]
	private float GetTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xDFBDF4", Offset = "0xDFBDF4", VA = "0xDFBDF4", Slot = "4")]
	protected override void OnTargetComplete(LevelTarget target)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xDFBC5C", Offset = "0xDFBC5C", VA = "0xDFBC5C")]
	private void SetScaleProgress(float progress)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xDFBE34", Offset = "0xDFBE34", VA = "0xDFBE34")]
	private void TimerUpdate(float percent, float targetTime)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xDFBBFC", Offset = "0xDFBBFC", VA = "0xDFBBFC")]
	private void SetText()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xDFBEB4", Offset = "0xDFBEB4", VA = "0xDFBEB4")]
	public TargetVisualiserAmountToTarget()
	{
	}
}
[Token(Token = "0x2000192")]
public class TargetVisualiserLavaBoss : LevelTargetVisualizer
{
	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BossEntity Boss;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro RemainingHealth;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image ProgressBar;

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xDFBFE0", Offset = "0xDFBFE0", VA = "0xDFBFE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xDFC098", Offset = "0xDFC098", VA = "0xDFC098")]
	private void VisualiseProgress(LevelTarget levelTarget)
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xDFC134", Offset = "0xDFC134", VA = "0xDFC134")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xDFC1EC", Offset = "0xDFC1EC", VA = "0xDFC1EC")]
	public TargetVisualiserLavaBoss()
	{
	}
}
[Token(Token = "0x2000193")]
public class TargetVisualizerBalanceGround : LevelTargetVisualizerBalanceOfTwoCell
{
	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image FirstScale;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image SecondScale;

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xDFC1F4", Offset = "0xDFC1F4", VA = "0xDFC1F4", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xDFC240", Offset = "0xDFC240", VA = "0xDFC240", Slot = "7")]
	protected override void TimerUpdateEvent(float percent, float targetTime)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xDFC28C", Offset = "0xDFC28C", VA = "0xDFC28C")]
	public TargetVisualizerBalanceGround()
	{
	}
}
[Token(Token = "0x2000194")]
public class TargetVisualizerXBonusOnField : LevelTargetVisualizer
{
	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro Text;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private XBonusOnFieldLevelTarget _target;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TimerUpdateEvent _timerUpdate;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image Progress;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private StringBuilder _string;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _updating;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _previousProgress;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _newProgress;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float ScalingTime;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool OnlyRemainingCells;

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xDFC294", Offset = "0xDFC294", VA = "0xDFC294", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xDFC4FC", Offset = "0xDFC4FC", VA = "0xDFC4FC", Slot = "5")]
	protected override void OnTargetProgressChange(LevelTarget target)
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xDFC648", Offset = "0xDFC648", VA = "0xDFC648")]
	private float GetProgressTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xDFC6C0", Offset = "0xDFC6C0", VA = "0xDFC6C0", Slot = "4")]
	protected override void OnTargetComplete(LevelTarget target)
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xDFC3E4", Offset = "0xDFC3E4", VA = "0xDFC3E4")]
	private void SetCurrentProgressToText()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xDFC6E8", Offset = "0xDFC6E8", VA = "0xDFC6E8", Slot = "7")]
	protected virtual void TimerUpdateEvent(float percent, float targetTime)
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xDFC7C4", Offset = "0xDFC7C4", VA = "0xDFC7C4")]
	public TargetVisualizerXBonusOnField()
	{
	}
}
[Token(Token = "0x2000195")]
public interface ILevelTargetVisualizerCurrentTotal
{
	[Token(Token = "0x6000849")]
	void GetCurrentAndTotalProgress(out int current, out int total);
}
[Token(Token = "0x2000196")]
public class LevelTargetVisualizerCount : LevelTargetVisualizer
{
	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro Text;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected LevelTargetCount _target;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _targetValue;

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x1EE8994", Offset = "0x1EE8994", VA = "0x1EE8994", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x1EE8AC8", Offset = "0x1EE8AC8", VA = "0x1EE8AC8", Slot = "5")]
	protected override void OnTargetProgressChange(LevelTarget target)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x1EE8B18", Offset = "0x1EE8B18", VA = "0x1EE8B18")]
	public LevelTargetVisualizerCount()
	{
	}
}
[Token(Token = "0x2000197")]
public class LevelTargetVisualizerCountFreezeAndSnowflake : MonoBehaviour
{
	[Token(Token = "0x600084D")]
	[Address(RVA = "0x1EE8B20", Offset = "0x1EE8B20", VA = "0x1EE8B20")]
	private void Start()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x1EE8B24", Offset = "0x1EE8B24", VA = "0x1EE8B24")]
	private void Update()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x1EE8B28", Offset = "0x1EE8B28", VA = "0x1EE8B28")]
	public LevelTargetVisualizerCountFreezeAndSnowflake()
	{
	}
}
[Token(Token = "0x2000198")]
public class LevelTargetVisualizerDefrost : LevelTargetVisualizer
{
	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro Text;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected DefrostField _target;

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x1EE8FC8", Offset = "0x1EE8FC8", VA = "0x1EE8FC8", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x1EE9124", Offset = "0x1EE9124", VA = "0x1EE9124")]
	private void ProgressChanged(LevelTarget levelTarget)
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x1EE9170", Offset = "0x1EE9170", VA = "0x1EE9170")]
	public LevelTargetVisualizerDefrost()
	{
	}
}
[Token(Token = "0x2000199")]
public class LevelTargetVisualizer : MonoBehaviour
{
	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelTarget Target;

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x1EE783C", Offset = "0x1EE783C", VA = "0x1EE783C", Slot = "4")]
	protected virtual void OnTargetComplete(LevelTarget target)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x1EE641C", Offset = "0x1EE641C", VA = "0x1EE641C", Slot = "5")]
	protected virtual void OnTargetProgressChange(LevelTarget target)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x1EE62C4", Offset = "0x1EE62C4", VA = "0x1EE62C4", Slot = "6")]
	protected virtual void OnStart()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x1EE7840", Offset = "0x1EE7840", VA = "0x1EE7840")]
	private void Subscribe()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x1EE7938", Offset = "0x1EE7938", VA = "0x1EE7938")]
	private void Unsubscribe()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x1EE7A30", Offset = "0x1EE7A30", VA = "0x1EE7A30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x1EE7A34", Offset = "0x1EE7A34", VA = "0x1EE7A34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x1EE7A38", Offset = "0x1EE7A38", VA = "0x1EE7A38")]
	private void Start()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x1EE64E0", Offset = "0x1EE64E0", VA = "0x1EE64E0")]
	public LevelTargetVisualizer()
	{
	}
}
[Token(Token = "0x200019A")]
public class LevelTargetVisualizerBalanceGround : LevelTargetVisualizerBalanceOfTwoCell
{
	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image FirstScale;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image SecondScale;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshPro FirstCountText;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshPro SecondCountText;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool UsingBalanceIcons;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SpriteRenderer Scales;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SpriteRenderer ScalesLeft;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SpriteRenderer ScalesRight;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SpriteRenderer BaseIcon;

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x1EE7A44", Offset = "0x1EE7A44", VA = "0x1EE7A44", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x1EE7CCC", Offset = "0x1EE7CCC", VA = "0x1EE7CCC", Slot = "7")]
	protected override void TimerUpdateEvent(float percent, float targetTime)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x1EE7D6C", Offset = "0x1EE7D6C", VA = "0x1EE7D6C", Slot = "5")]
	protected override void OnTargetProgressChange(LevelTarget target)
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x1EE7C38", Offset = "0x1EE7C38", VA = "0x1EE7C38")]
	private void EnableLibra(bool center, bool left, bool right)
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x1EE7F3C", Offset = "0x1EE7F3C", VA = "0x1EE7F3C")]
	public LevelTargetVisualizerBalanceGround()
	{
	}
}
[Token(Token = "0x200019B")]
public class LevelTargetVisualizerBalanceOfTwoCell : LevelTargetVisualizer
{
	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TimeFullScaleOverflow;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected BaseBalanceLevelTarget _target;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _newFirstTarget;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _newSecondTarget;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float _previousFirstTarget;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float _previousSecondTarget;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float _currentFirstPosition;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected float _currentSecondPosition;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TimerUpdateEvent _scaleEvent;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _updating;

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x1EE7B1C", Offset = "0x1EE7B1C", VA = "0x1EE7B1C", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x1EE7E50", Offset = "0x1EE7E50", VA = "0x1EE7E50", Slot = "5")]
	protected override void OnTargetProgressChange(LevelTarget target)
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x1EE7F54", Offset = "0x1EE7F54", VA = "0x1EE7F54")]
	private float GetUpdateTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x1EE7FEC", Offset = "0x1EE7FEC", VA = "0x1EE7FEC")]
	private float GetPercentOnScale(float elementProgress, float generalProgress)
	{
		return default(float);
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x1EE7D3C", Offset = "0x1EE7D3C", VA = "0x1EE7D3C", Slot = "7")]
	protected virtual void TimerUpdateEvent(float percent, float targetTime)
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x1EE7F4C", Offset = "0x1EE7F4C", VA = "0x1EE7F4C")]
	public LevelTargetVisualizerBalanceOfTwoCell()
	{
	}
}
[Token(Token = "0x200019C")]
public class LevelTargetVisualizerCombination : MonoBehaviour
{
	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro InCombinationNumber;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> VisualizerPoints;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<CellVisualizerData> Visualizers;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LevelTargetDestroyCombination Target;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFC96C", Offset = "0xAFC96C")]
	public float ScaleVisual;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ScaleTime;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Tween _activeTween;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TweenCallback OnCompleteDeactivate;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<CellVisualizer> _currentCellVisualizer;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CellType _currentCellType;

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x1EE8000", Offset = "0x1EE8000", VA = "0x1EE8000")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x1EE8144", Offset = "0x1EE8144", VA = "0x1EE8144")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x1EE81C0", Offset = "0x1EE81C0", VA = "0x1EE81C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x1EE823C", Offset = "0x1EE823C", VA = "0x1EE823C")]
	private void OnDeactivation()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x1EE8360", Offset = "0x1EE8360", VA = "0x1EE8360")]
	private void OnActivation()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x1EE8574", Offset = "0x1EE8574", VA = "0x1EE8574")]
	public void OnTargetCombinationChange(int inCombinationCount, CellType cellType)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x1EE8770", Offset = "0x1EE8770", VA = "0x1EE8770")]
	private void SetScaleForVisualizer(Vector3 newScale)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x1EE883C", Offset = "0x1EE883C", VA = "0x1EE883C")]
	public LevelTargetVisualizerCombination()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x1EE88B4", Offset = "0x1EE88B4", VA = "0x1EE88B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEEF8", Offset = "0xAFEEF8")]
	private Vector3 <OnActivation>b__14_0()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x1EE8920", Offset = "0x1EE8920", VA = "0x1EE8920")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEF08", Offset = "0xAFEF08")]
	private void <OnActivation>b__14_1(Vector3 x)
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x1EE8924", Offset = "0x1EE8924", VA = "0x1EE8924")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEF18", Offset = "0xAFEF18")]
	private Vector3 <OnTargetCombinationChange>b__15_0()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x1EE8990", Offset = "0x1EE8990", VA = "0x1EE8990")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEF28", Offset = "0xAFEF28")]
	private void <OnTargetCombinationChange>b__15_1(Vector3 x)
	{
	}
}
[Token(Token = "0x200019D")]
public class LevelTargetVisualizerCounter : LevelTargetVisualizer
{
	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro Text;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected LevelTargetCount _target;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private StringBuilder _stringTime;

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x1EE8B30", Offset = "0x1EE8B30", VA = "0x1EE8B30", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x1EE8C28", Offset = "0x1EE8C28", VA = "0x1EE8C28", Slot = "7")]
	protected virtual void SetCurrentProgressNumber()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x1EE8C90", Offset = "0x1EE8C90", VA = "0x1EE8C90", Slot = "8")]
	protected virtual void SetCurrentProgressAndTargetValue([Optional] string prefix)
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x1EE8D94", Offset = "0x1EE8D94", VA = "0x1EE8D94", Slot = "9")]
	protected virtual void SetRemainingProgress()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x1EE8E00", Offset = "0x1EE8E00", VA = "0x1EE8E00")]
	public LevelTargetVisualizerCounter()
	{
	}
}
[Token(Token = "0x200019E")]
public class LevelTargetVisualizerDarkGeneratorHealth : LevelTargetVisualizerStringBuilder
{
	[Token(Token = "0x6000878")]
	[Address(RVA = "0x1EE8E7C", Offset = "0x1EE8E7C", VA = "0x1EE8E7C", Slot = "7")]
	protected override void RenewBuilderData(LevelTarget target)
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x1EE8F64", Offset = "0x1EE8F64", VA = "0x1EE8F64")]
	public LevelTargetVisualizerDarkGeneratorHealth()
	{
	}
}
[Token(Token = "0x200019F")]
public class LevelTargetVisualizerScaler : LevelTargetVisualizer
{
	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Image> Scales;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ScalingTime;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TimerUpdateEvent _updatingTimer;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _updating;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _previousProgress;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _targetProgress;

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x1EE9B80", Offset = "0x1EE9B80", VA = "0x1EE9B80", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x1EE9CDC", Offset = "0x1EE9CDC", VA = "0x1EE9CDC", Slot = "5")]
	protected override void OnTargetProgressChange(LevelTarget target)
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x1EE9DEC", Offset = "0x1EE9DEC", VA = "0x1EE9DEC")]
	private float GetTimeForUpdatingLoop()
	{
		return default(float);
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x1EE9E64", Offset = "0x1EE9E64", VA = "0x1EE9E64")]
	private void TimerUpdate(float percent, float targetTime)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x1EE9C34", Offset = "0x1EE9C34", VA = "0x1EE9C34")]
	private void SetProgressToImage(float progress)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x1EE9EC8", Offset = "0x1EE9EC8", VA = "0x1EE9EC8")]
	public LevelTargetVisualizerScaler()
	{
	}
}
[Token(Token = "0x20001A0")]
public class LevelTargetVisualizerStringBuilder : LevelTargetVisualizer
{
	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro Text;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int StringBuilderCacheSize;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string Divider;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected StringBuilder Data;

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x1EE9ED8", Offset = "0x1EE9ED8", VA = "0x1EE9ED8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x1EE9F48", Offset = "0x1EE9F48", VA = "0x1EE9F48", Slot = "5")]
	protected override void OnTargetProgressChange(LevelTarget target)
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x1EE9FA4", Offset = "0x1EE9FA4", VA = "0x1EE9FA4", Slot = "7")]
	protected virtual void RenewBuilderData(LevelTarget target)
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x1EEA08C", Offset = "0x1EEA08C", VA = "0x1EEA08C", Slot = "8")]
	protected virtual void SetCurrentProgressAndTargetValue(int currentProgressValue, int totalProgressValue)
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x1EE8F68", Offset = "0x1EE8F68", VA = "0x1EE8F68")]
	public LevelTargetVisualizerStringBuilder()
	{
	}
}
[Token(Token = "0x20001A1")]
public class XBonusOnFieldLevelTarget : LevelTarget
{
	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<PluginType> TargetPlugin;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int BonusTarget;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _maxBonusCount;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _bonusCount;

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x1CB6A8C", Offset = "0x1CB6A8C", VA = "0x1CB6A8C", Slot = "5")]
	protected override void OnActivate()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x1CB6B4C", Offset = "0x1CB6B4C", VA = "0x1CB6B4C", Slot = "6")]
	protected override void OnDeactivate()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x1CB6B54", Offset = "0x1CB6B54", VA = "0x1CB6B54")]
	protected void CreateBonus(Field field, Cell cell)
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x1CB6C98", Offset = "0x1CB6C98", VA = "0x1CB6C98")]
	protected void CellExplode(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x1CB6C48", Offset = "0x1CB6C48", VA = "0x1CB6C48")]
	private void ProgressWasChanged()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x1CB6DD0", Offset = "0x1CB6DD0", VA = "0x1CB6DD0", Slot = "4")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x1CB6E4C", Offset = "0x1CB6E4C", VA = "0x1CB6E4C")]
	public int GetBonusCount()
	{
		return default(int);
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x1CB6E54", Offset = "0x1CB6E54", VA = "0x1CB6E54")]
	public XBonusOnFieldLevelTarget()
	{
	}
}
[Token(Token = "0x20001A2")]
public delegate void LevelEvent(LevelLoader.LevelID level, LevelLoader.LevelRegion region, LevelLoader.LevelID previousLevel);
[Token(Token = "0x20001A3")]
public class LevelLoader : MonoBehaviour
{
	[Token(Token = "0x20003B3")]
	public enum LevelID
	{
		[Token(Token = "0x4001216")]
		None,
		[Token(Token = "0x4001217")]
		StartUp,
		[Token(Token = "0x4001218")]
		Lobby,
		[Token(Token = "0x4001219")]
		WorldLevel_Ground_1,
		[Token(Token = "0x400121A")]
		WorldLevel_Ground_2,
		[Token(Token = "0x400121B")]
		WorldLevel_Ground_3,
		[Token(Token = "0x400121C")]
		WorldLevel_Ground_4,
		[Token(Token = "0x400121D")]
		WorldLevel_Ground_5,
		[Token(Token = "0x400121E")]
		WorldLevel_Ground_6,
		[Token(Token = "0x400121F")]
		WorldLevel_Ground_7,
		[Token(Token = "0x4001220")]
		WorldLevel_Ground_8,
		[Token(Token = "0x4001221")]
		WorldLevel_Ground_9,
		[Token(Token = "0x4001222")]
		WorldLevel_Ground_10,
		[Token(Token = "0x4001223")]
		WorldLevel_Ground_11,
		[Token(Token = "0x4001224")]
		WorldLevel_Ground_12,
		[Token(Token = "0x4001225")]
		WorldLevel_Autumn_1,
		[Token(Token = "0x4001226")]
		WorldLevel_Autumn_2,
		[Token(Token = "0x4001227")]
		WorldLevel_Autumn_3,
		[Token(Token = "0x4001228")]
		WorldLevel_Autumn_4,
		[Token(Token = "0x4001229")]
		WorldLevel_Autumn_5,
		[Token(Token = "0x400122A")]
		WorldLevel_Autumn_6,
		[Token(Token = "0x400122B")]
		WorldLevel_Autumn_7,
		[Token(Token = "0x400122C")]
		WorldLevel_Autumn_8,
		[Token(Token = "0x400122D")]
		WorldLevel_Autumn_9,
		[Token(Token = "0x400122E")]
		WorldLevel_Autumn_10,
		[Token(Token = "0x400122F")]
		WorldLevel_Autumn_11,
		[Token(Token = "0x4001230")]
		WorldLevel_Autumn_12,
		[Token(Token = "0x4001231")]
		WorldLevel_Ice_1,
		[Token(Token = "0x4001232")]
		WorldLevel_Ice_2,
		[Token(Token = "0x4001233")]
		WorldLevel_Ice_3,
		[Token(Token = "0x4001234")]
		WorldLevel_Ice_4,
		[Token(Token = "0x4001235")]
		WorldLevel_Ice_5,
		[Token(Token = "0x4001236")]
		WorldLevel_Ice_6,
		[Token(Token = "0x4001237")]
		WorldLevel_Ice_7,
		[Token(Token = "0x4001238")]
		WorldLevel_Ice_8,
		[Token(Token = "0x4001239")]
		WorldLevel_Ice_9,
		[Token(Token = "0x400123A")]
		WorldLevel_Ice_10,
		[Token(Token = "0x400123B")]
		WorldLevel_Ice_11,
		[Token(Token = "0x400123C")]
		WorldLevel_Ice_12,
		[Token(Token = "0x400123D")]
		WorldLevel_Lava_1,
		[Token(Token = "0x400123E")]
		WorldLevel_Lava_2,
		[Token(Token = "0x400123F")]
		WorldLevel_Lava_3,
		[Token(Token = "0x4001240")]
		WorldLevel_Lava_4,
		[Token(Token = "0x4001241")]
		WorldLevel_Lava_5,
		[Token(Token = "0x4001242")]
		WorldLevel_Lava_6,
		[Token(Token = "0x4001243")]
		WorldLevel_Lava_7,
		[Token(Token = "0x4001244")]
		WorldLevel_Lava_8,
		[Token(Token = "0x4001245")]
		WorldLevel_Lava_9,
		[Token(Token = "0x4001246")]
		WorldLevel_Lava_10,
		[Token(Token = "0x4001247")]
		WorldLevel_Lava_11,
		[Token(Token = "0x4001248")]
		WorldLevel_Lava_12,
		[Token(Token = "0x4001249")]
		WorldLevel_Cloud_1,
		[Token(Token = "0x400124A")]
		WorldLevel_Cloud_2,
		[Token(Token = "0x400124B")]
		WorldLevel_Cloud_3,
		[Token(Token = "0x400124C")]
		WorldLevel_Cloud_4,
		[Token(Token = "0x400124D")]
		WorldLevel_Cloud_5,
		[Token(Token = "0x400124E")]
		WorldLevel_Cloud_6,
		[Token(Token = "0x400124F")]
		WorldLevel_Cloud_7,
		[Token(Token = "0x4001250")]
		WorldLevel_Cloud_8,
		[Token(Token = "0x4001251")]
		WorldLevel_Cloud_9,
		[Token(Token = "0x4001252")]
		WorldLevel_Cloud_10,
		[Token(Token = "0x4001253")]
		WorldLevel_Cloud_11,
		[Token(Token = "0x4001254")]
		WorldLevel_Cloud_12,
		[Token(Token = "0x4001255")]
		Main,
		[Token(Token = "0x4001256")]
		ChildrensRoom,
		[Token(Token = "0x4001257")]
		Total
	}

	[Token(Token = "0x20003B4")]
	public enum LevelRegion
	{
		[Token(Token = "0x4001259")]
		Ground,
		[Token(Token = "0x400125A")]
		Autumn,
		[Token(Token = "0x400125B")]
		Ice,
		[Token(Token = "0x400125C")]
		Lava,
		[Token(Token = "0x400125D")]
		Cloud,
		[Token(Token = "0x400125E")]
		Lobby
	}

	[Token(Token = "0x20003B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFA9F8", Offset = "0xAFA9F8")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LevelID levelID;

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x1EE22E8", Offset = "0x1EE22E8", VA = "0x1EE22E8")]
		public <>c__DisplayClass14_0()
		{
		}
	}

	[Token(Token = "0x20003B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAA08", Offset = "0xAFAA08")]
	private sealed class <>c__DisplayClass14_1
	{
		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LevelID previousLevel;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass14_0 CS$<>8__locals1;

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x1EE22F0", Offset = "0x1EE22F0", VA = "0x1EE22F0")]
		public <>c__DisplayClass14_1()
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x1EE242C", Offset = "0x1EE242C", VA = "0x1EE242C")]
		internal void <LoadLevel>b__0()
		{
		}
	}

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> DontDestroyObjects;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LevelLoader _instance;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LevelID _currentLoadedLevel;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LevelID StartLoadedLevel;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static LevelEvent OnLoadStartEvent;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static LevelEvent OnLoadCompleteEvent;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool _loading;

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x1EDE10C", Offset = "0x1EDE10C", VA = "0x1EDE10C")]
	public static LevelID GetCurrentLoadedLevel()
	{
		return default(LevelID);
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x1EE20E4", Offset = "0x1EE20E4", VA = "0x1EE20E4")]
	public static LevelRegion GetCurrentRegion()
	{
		return default(LevelRegion);
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x1EE2158", Offset = "0x1EE2158", VA = "0x1EE2158")]
	public static LevelRegion GetRegionByLevelID(LevelID id)
	{
		return default(LevelRegion);
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x1EE2184", Offset = "0x1EE2184", VA = "0x1EE2184")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x1EE226C", Offset = "0x1EE226C", VA = "0x1EE226C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x1EDE314", Offset = "0x1EDE314", VA = "0x1EDE314")]
	public static void LoadLevel(LevelID levelID)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x1EDE208", Offset = "0x1EDE208", VA = "0x1EDE208")]
	public static void Restart()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x1EE22F8", Offset = "0x1EE22F8", VA = "0x1EE22F8")]
	public static void NextLevel()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x1EE23B0", Offset = "0x1EE23B0", VA = "0x1EE23B0")]
	public LevelLoader()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x1EE23C4", Offset = "0x1EE23C4", VA = "0x1EE23C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEF38", Offset = "0xAFEF38")]
	private void <Start>b__13_0()
	{
	}
}
[Token(Token = "0x20001A4")]
public delegate void OnLevelComplete();
[Token(Token = "0x20001A5")]
public class LoadedLevel : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAA18", Offset = "0xAFAA18")]
	private sealed class <>c
	{
		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static CompleteGameAction <>9__9_1;

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x1EEB390", Offset = "0x1EEB390", VA = "0x1EEB390")]
		public <>c()
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x1EEB398", Offset = "0x1EEB398", VA = "0x1EEB398")]
		internal void <OnLevelEnd>b__9_1()
		{
		}
	}

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OnLevelComplete OnLevelCompleteEvent;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAFC984", Offset = "0xAFC984")]
	public List<BaseGameAction> IntroActions;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<BaseGameAction> OutroAction;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LevelTarget Target;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _currentIntroAction;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _currentOutroAction;

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x1EEACC8", Offset = "0x1EEACC8", VA = "0x1EEACC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x1EEACCC", Offset = "0x1EEACCC", VA = "0x1EEACCC")]
	private void OnInit(Field field)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x1EEB094", Offset = "0x1EEB094", VA = "0x1EEB094")]
	private void Complete(LevelTarget leveltarget)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x1EEB0F8", Offset = "0x1EEB0F8", VA = "0x1EEB0F8")]
	private void OnLevelEnd()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x1EEADA0", Offset = "0x1EEADA0", VA = "0x1EEADA0")]
	private void LaunchFields()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x1EEB324", Offset = "0x1EEB324", VA = "0x1EEB324")]
	public LoadedLevel()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x1EEAF7C", Offset = "0x1EEAF7C", VA = "0x1EEAF7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEF48", Offset = "0xAFEF48")]
	private void <OnInit>g__ActionCycle|7_0()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x1EEB190", Offset = "0x1EEB190", VA = "0x1EEB190")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEF58", Offset = "0xAFEF58")]
	private void <OnLevelEnd>g__ActionCycle|9_0()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A6")]
public class WorldPalettePreset
{
	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color PrimaryWorldColor;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color SecondaryWorldColor;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color PortalStars;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color ButtonBackground;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color ButtonFrame;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color ButtonHighlight;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color TextMeshProVertex;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public VertexGradient TextMeshProGradient;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Color LevelNumberVertex;

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x1CB6750", Offset = "0x1CB6750", VA = "0x1CB6750")]
	public void SetTextMeshProColors(TextMeshPro tmp)
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x1CB67BC", Offset = "0x1CB67BC", VA = "0x1CB67BC")]
	public WorldPalettePreset()
	{
	}
}
[Token(Token = "0x20001A7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAF9F44", Offset = "0xAF9F44")]
public class WorldPalettes : SerializedScriptableObject
{
	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public WorldPalettePreset GroundPreset;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public WorldPalettePreset AutumnPreset;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public WorldPalettePreset IcePreset;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public WorldPalettePreset LavaPreset;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public WorldPalettePreset CloudPreset;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public WorldPalettePreset LobbyPreset;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public LevelLoader.LevelRegion AppliedWorldPreset;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<TextMeshPro> ApplyTextMeshProList;

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x1CB67C4", Offset = "0x1CB67C4", VA = "0x1CB67C4")]
	private void ApplyVertexAndGradient()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x1CB6860", Offset = "0x1CB6860", VA = "0x1CB6860")]
	public void GetAndSetColors(LevelLoader.LevelRegion world, TextMeshPro tmp)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x1CB6984", Offset = "0x1CB6984", VA = "0x1CB6984")]
	public WorldPalettePreset GetWorldPreset(LevelLoader.LevelRegion world)
	{
		return null;
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x1CB6A84", Offset = "0x1CB6A84", VA = "0x1CB6A84")]
	public WorldPalettes()
	{
	}
}
[Token(Token = "0x20001A8")]
public class AutoRotationOnLastWorld : MonoBehaviour
{
	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> Portals;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform RigTransform;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform PortalsTransform;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float RotateTime;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float RotateStep;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LevelLoader.LevelRegion _lastRegion;

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xE86D20", Offset = "0xE86D20", VA = "0xE86D20")]
	private void Start()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xE86D24", Offset = "0xE86D24", VA = "0xE86D24")]
	private void SetOrientation()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xE86F0C", Offset = "0xE86F0C", VA = "0xE86F0C")]
	public void RotatePortal(bool isClockwise, bool fastRot = false)
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xE86FE0", Offset = "0xE86FE0", VA = "0xE86FE0")]
	public AutoRotationOnLastWorld()
	{
	}
}
[Token(Token = "0x20001A9")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAF9F90", Offset = "0xAF9F90")]
public class LobbyLevelData : SerializedScriptableObject
{
	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Language LanguageInfo;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string ObjectiveTitle;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string LoadButton;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string LockedTitle;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string RegionLockDisclaimer;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Dictionary<LevelLoader.LevelID, string> LevelTitles;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Dictionary<LevelLoader.LevelID, LocalizationWrapper> LevelTarget;

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x1EEB404", Offset = "0x1EEB404", VA = "0x1EEB404")]
	public void GetLevelTitleAndTarget(LevelLoader.LevelID level, out string title, out string target)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x1EEB51C", Offset = "0x1EEB51C", VA = "0x1EEB51C")]
	public LobbyLevelData()
	{
	}
}
[Token(Token = "0x20001AA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAF9FDC", Offset = "0xAF9FDC")]
public class LobbyLevelDataPreview : SerializedScriptableObject
{
	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Dictionary<LevelLoader.LevelID, Texture> LevelLargePreview;

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x1EEB5B4", Offset = "0x1EEB5B4", VA = "0x1EEB5B4")]
	public Texture GetLargePreview(LevelLoader.LevelID level)
	{
		return null;
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x1EEB648", Offset = "0x1EEB648", VA = "0x1EEB648")]
	public LobbyLevelDataPreview()
	{
	}
}
[Token(Token = "0x20001AB")]
public class LobbyLevelLoad : RaycastableHighlighter
{
	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LobbyPortal ConnectedPortal;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource StartButtonSFX;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SpriteRenderer ButtonFrame;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public WorldPalettes Palettes;

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x1EEB6B8", Offset = "0x1EEB6B8", VA = "0x1EEB6B8", Slot = "16")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x1EEB834", Offset = "0x1EEB834", VA = "0x1EEB834", Slot = "15")]
	public override void OnInteractionEnd(Wand wand)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x1EEB85C", Offset = "0x1EEB85C", VA = "0x1EEB85C")]
	private void DoLoad()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x1EEB71C", Offset = "0x1EEB71C", VA = "0x1EEB71C")]
	private void SetupButtonColors()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x1EEB948", Offset = "0x1EEB948", VA = "0x1EEB948")]
	public LobbyLevelLoad()
	{
	}
}
[Token(Token = "0x20001AC")]
public static class LobbyLevelWorldService
{
	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<LevelLoader.LevelRegion, LevelLoader.LevelID> _currentPortalLevel;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LevelLoader.LevelRegion _lastWorld;

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x1EEB950", Offset = "0x1EEB950", VA = "0x1EEB950")]
	static LobbyLevelWorldService()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x1EEBAAC", Offset = "0x1EEBAAC", VA = "0x1EEBAAC")]
	public static void SaveLastSelectedPortalLevel(LevelLoader.LevelID level, LevelLoader.LevelRegion region, LevelLoader.LevelID previousLevel)
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x1EEBBCC", Offset = "0x1EEBBCC", VA = "0x1EEBBCC")]
	public static void SaveLastWorld(LevelLoader.LevelID level, LevelLoader.LevelRegion region, LevelLoader.LevelID previousLevel)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x1EEBC68", Offset = "0x1EEBC68", VA = "0x1EEBC68")]
	public static LevelLoader.LevelRegion GetLastWorld()
	{
		return default(LevelLoader.LevelRegion);
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x1EEBCD0", Offset = "0x1EEBCD0", VA = "0x1EEBCD0")]
	public static bool GetLastSelectedPortalLevel(LevelLoader.LevelRegion world, out LevelLoader.LevelID level)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001AD")]
public class LobbyPortal : MonoBehaviour
{
	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IsLoading;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro Title;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro Target;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro LoadButton;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<LobbyLevelData> DataPerLanguage;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LobbyLevelDataPreview DataPreview;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform ShowPoint;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LobbyPortalPreview DefaultSelectedLevel;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LevelLoader.LevelRegion WorldBind;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RegionRatingUnlockControl LevelUnlockControl;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LobbyPortalPreview _currentSelected;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private LobbyLevelData _currentLanguageData;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject _loadButton;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _isTitlesEnabled;

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x1EEBD64", Offset = "0x1EEBD64", VA = "0x1EEBD64")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x1EEBEEC", Offset = "0x1EEBEEC", VA = "0x1EEBEEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x1EEBDEC", Offset = "0x1EEBDEC", VA = "0x1EEBDEC")]
	private void SelectLanguageData()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x1EEC168", Offset = "0x1EEC168", VA = "0x1EEC168")]
	public LobbyPortalPreview GetCurrentSelectedPortalPreview()
	{
		return null;
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x1EEC170", Offset = "0x1EEC170", VA = "0x1EEC170")]
	private void EnableTitles()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x1EEB798", Offset = "0x1EEB798", VA = "0x1EEB798")]
	public bool IsUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x1EEBFE4", Offset = "0x1EEBFE4", VA = "0x1EEBFE4")]
	public void SetLevel(LobbyPortalPreview preview)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x1EEC228", Offset = "0x1EEC228", VA = "0x1EEC228")]
	public LobbyPortal()
	{
	}
}
[Token(Token = "0x20001AE")]
public class LobbyPortalPreview : Raycastable
{
	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelLoader.LevelID Level;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer RingMeshRenderer;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer PortalPreviewMeshRenderer;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<SpriteRenderer> Rating;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float EffectDuration;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float EndScale;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float FloatingOffset;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float FloatingCycle;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFC9BC", Offset = "0xAFC9BC")]
	public float FloatingRandomStartDelay;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAFC9D4", Offset = "0xAFC9D4")]
	public Color RingMeshEmissionColor;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAFC9EC", Offset = "0xAFC9EC")]
	public Color RingMeshInactiveEmissionColor;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshPro LevelNumberText;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource LevelRingActivationSFX;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public WorldPalettes Palettes;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private LobbyPortal _connectedPortal;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Texture _levelLargePreview;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Tween _mover;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Tween _scaler;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Tween _emission;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Tween _floatingTween;

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x1EEC230", Offset = "0x1EEC230", VA = "0x1EEC230", Slot = "16")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x1EEC474", Offset = "0x1EEC474", VA = "0x1EEC474")]
	private bool CheckAndUpdateLevelRating()
	{
		return default(bool);
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x1EECA08", Offset = "0x1EECA08", VA = "0x1EECA08")]
	private void SetTexture(Texture tex)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x1EEC69C", Offset = "0x1EEC69C", VA = "0x1EEC69C")]
	private void ConfigurePreviewAndLevelNumber()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x1EEC36C", Offset = "0x1EEC36C", VA = "0x1EEC36C")]
	private void CreateFloatingTween()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x1EEC78C", Offset = "0x1EEC78C", VA = "0x1EEC78C")]
	private void CreateMoverScalerEmissionTweens()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x1EEC5C8", Offset = "0x1EEC5C8", VA = "0x1EEC5C8")]
	private void TransferToInactive()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x1EECAD4", Offset = "0x1EECAD4", VA = "0x1EECAD4", Slot = "13")]
	public override void OnInteractionStart(Wand wand)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x1EECB08", Offset = "0x1EECB08", VA = "0x1EECB08", Slot = "10")]
	public override void OnFocusStart(Wand wand)
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x1EECB34", Offset = "0x1EECB34", VA = "0x1EECB34", Slot = "12")]
	public override void OnFocusEnd(Wand wand)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x1EEC1E4", Offset = "0x1EEC1E4", VA = "0x1EEC1E4")]
	public void MoveTo()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x1EEC1B4", Offset = "0x1EEC1B4", VA = "0x1EEC1B4")]
	public void MoveBack()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x1EECB60", Offset = "0x1EECB60", VA = "0x1EECB60")]
	public LobbyPortalPreview()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x1EECB74", Offset = "0x1EECB74", VA = "0x1EECB74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEF68", Offset = "0xAFEF68")]
	private void <CreateMoverScalerEmissionTweens>b__25_0()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x1EECBA4", Offset = "0x1EECBA4", VA = "0x1EECBA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEF78", Offset = "0xAFEF78")]
	private void <CreateMoverScalerEmissionTweens>b__25_1()
	{
	}
}
[Token(Token = "0x20001AF")]
public class LobbyPortalRotateArrow : Raycastable
{
	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AutoRotationOnLastWorld RotationService;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsClockwise;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer ArrowRenderer;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float EmissionIntensity;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Tween _emission;

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x1EECBD4", Offset = "0x1EECBD4", VA = "0x1EECBD4", Slot = "16")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x1EECC74", Offset = "0x1EECC74", VA = "0x1EECC74", Slot = "10")]
	public override void OnFocusStart(Wand wand)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x1EECCA0", Offset = "0x1EECCA0", VA = "0x1EECCA0", Slot = "12")]
	public override void OnFocusEnd(Wand wand)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x1EECCCC", Offset = "0x1EECCCC", VA = "0x1EECCCC", Slot = "13")]
	public override void OnInteractionStart(Wand wand)
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x1EECD08", Offset = "0x1EECD08", VA = "0x1EECD08")]
	public LobbyPortalRotateArrow()
	{
	}
}
[Token(Token = "0x20001B0")]
public enum CellState
{
	[Token(Token = "0x4000929")]
	Initialized,
	[Token(Token = "0x400092A")]
	Active,
	[Token(Token = "0x400092B")]
	Remove,
	[Token(Token = "0x400092C")]
	Explode
}
[Token(Token = "0x20001B1")]
public enum PluginType
{
	[Token(Token = "0x400092E")]
	None,
	[Token(Token = "0x400092F")]
	Flame,
	[Token(Token = "0x4000930")]
	Hyper,
	[Token(Token = "0x4000931")]
	Cross,
	[Token(Token = "0x4000932")]
	Mega,
	[Token(Token = "0x4000933")]
	Firefly,
	[Token(Token = "0x4000934")]
	StoneBlock,
	[Token(Token = "0x4000935")]
	DestructibleStoneBlock,
	[Token(Token = "0x4000936")]
	DarkEnergy,
	[Token(Token = "0x4000937")]
	Heat,
	[Token(Token = "0x4000938")]
	Fire,
	[Token(Token = "0x4000939")]
	Dust,
	[Token(Token = "0x400093A")]
	Spark,
	[Token(Token = "0x400093B")]
	Water,
	[Token(Token = "0x400093C")]
	Snowflake,
	[Token(Token = "0x400093D")]
	Artifact,
	[Token(Token = "0x400093E")]
	ChristmasTreeToy,
	[Token(Token = "0x400093F")]
	HiddenEvents,
	[Token(Token = "0x4000940")]
	DarkEnergyGenerator,
	[Token(Token = "0x4000941")]
	FireFlyWithHealth,
	[Token(Token = "0x4000942")]
	WaterWithActivation,
	[Token(Token = "0x4000943")]
	Cloud,
	[Token(Token = "0x4000944")]
	CloudStorm,
	[Token(Token = "0x4000945")]
	Rainbow
}
[Token(Token = "0x20001B2")]
public enum CellType
{
	[Token(Token = "0x4000947")]
	None,
	[Token(Token = "0x4000948")]
	Rune1_Aqua,
	[Token(Token = "0x4000949")]
	Rune2_Red,
	[Token(Token = "0x400094A")]
	Rune3_Orange,
	[Token(Token = "0x400094B")]
	Rune4_Blue,
	[Token(Token = "0x400094C")]
	Rune5_Violet,
	[Token(Token = "0x400094D")]
	Rune6_Green,
	[Token(Token = "0x400094E")]
	Rune7_Yellow,
	[Token(Token = "0x400094F")]
	Universal,
	[Token(Token = "0x4000950")]
	Unmatchable,
	[Token(Token = "0x4000951")]
	RuneMatchable,
	[Token(Token = "0x4000952")]
	Total
}
[Token(Token = "0x20001B3")]
[Flags]
public enum CellModifiers
{
	[Token(Token = "0x4000954")]
	None = 0,
	[Token(Token = "0x4000955")]
	NotInteractive = 2,
	[Token(Token = "0x4000956")]
	Freeze = 4,
	[Token(Token = "0x4000957")]
	NotDroppable = 8
}
[Token(Token = "0x20001B4")]
public class Cell : PoolableBehaviour
{
	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PrefabPool<Cell> _pool;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<int, Cell> _cellColliders;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<int, Cell> _cellHightLight;

	[Token(Token = "0x400095B")]
	public const int CELL_POOL_SIZE = 128;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PluginType Plugin;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public CellModifiers Modifier;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Coordinates Coords;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CellState State;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public CellType Type;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Collider CellTrigger;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Rigidbody CellRigidboby;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CellEffect AdditionalEffect;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CellEffect ExplosionEffect;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CellEffect HighlightEffect;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CellEffect DespawnEff;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CellEffect FreezeEffectCell;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CellEffect NotInteractiveEffect;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CellEffect SpawnEffect;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public CellVisualizer Visualizer;

	[Token(Token = "0x400096B")]
	private const float LERP_COEF = 0.5f;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private CellPlugin _plugin;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 _position;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 _rotation;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Transform _temporaryTarget;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Field.MoveCallback _fieldChangePosition;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Wand.WandReleaseCallback _releaseProc;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Action<Cell> _onCellInNewPosition;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool LockedState;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AnimationCurve _movingCurve;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioSource MoveFailure;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool TriggerStatus;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public int Controlled;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Coordinates _nextCoordinate;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float _timeElapsed;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private bool _lerp;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int _fieldID;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool _isSetNewPosition;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 _startMovePosition;

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xE94DBC", Offset = "0xE94DBC", VA = "0xE94DBC")]
	public static void InitPool(PrefabPool<Cell> pool)
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xE94E28", Offset = "0xE94E28", VA = "0xE94E28")]
	public static Cell Get()
	{
		return null;
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xE94EA0", Offset = "0xE94EA0", VA = "0xE94EA0")]
	public static Cell GetCellByCollider(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xE94F9C", Offset = "0xE94F9C", VA = "0xE94F9C")]
	public static Cell GetCellHighlightCollider(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xE95098", Offset = "0xE95098", VA = "0xE95098")]
	public static void RegisterHighlightCollider(Collider collider, Cell cell)
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xE951A0", Offset = "0xE951A0", VA = "0xE951A0")]
	public static void RegisterCell(Collider collider, Cell cell)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xE952A8", Offset = "0xE952A8", VA = "0xE952A8")]
	public static void UnregisterHighlightCollider(Collider collider)
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xE953A8", Offset = "0xE953A8", VA = "0xE953A8")]
	public static void UnregisterCell(Collider collider)
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xE954A8", Offset = "0xE954A8", VA = "0xE954A8")]
	public static bool IsRune(CellType cellType, PluginType pluginType)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xE954CC", Offset = "0xE954CC", VA = "0xE954CC")]
	public static bool IsRunicBonus(PluginType pluginType)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xE954EC", Offset = "0xE954EC", VA = "0xE954EC")]
	public static bool IsSpecialBonus(PluginType pluginType)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xE95504", Offset = "0xE95504", VA = "0xE95504")]
	public static bool IsBonus(PluginType pluginType)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xE955B0", Offset = "0xE955B0", VA = "0xE955B0")]
	public static bool IsBonus(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xE95664", Offset = "0xE95664", VA = "0xE95664")]
	public static bool IsImpactableBonus(PluginType pluginType)
	{
		return default(bool);
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xE95690", Offset = "0xE95690", VA = "0xE95690")]
	public static bool IsSpecialElement(PluginType pluginType)
	{
		return default(bool);
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xE956B8", Offset = "0xE956B8", VA = "0xE956B8")]
	public static bool HasCellModifier(CellModifiers modifiers, CellModifiers value)
	{
		return default(bool);
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xE956C4", Offset = "0xE956C4", VA = "0xE956C4")]
	public void EnablePhysic(Vector3 velocity)
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xE9572C", Offset = "0xE9572C", VA = "0xE9572C")]
	public void Init(int fieldID, Field.MoveCallback moveCallback, CellType cellType, PluginType pluginType, Action<Cell> onCellInNewPosition, Vector3 startPosition, Vector3 startRotation, CellModifiers modifiers = CellModifiers.None)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xE95C7C", Offset = "0xE95C7C", VA = "0xE95C7C")]
	public Field GetField()
	{
		return null;
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xE95C88", Offset = "0xE95C88", VA = "0xE95C88")]
	public void SetTargetLocation(Vector3 position)
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xE95D7C", Offset = "0xE95D7C", VA = "0xE95D7C")]
	public void SetTargetLocation(Vector3 position, Vector3 rotation)
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xE95A40", Offset = "0xE95A40", VA = "0xE95A40")]
	public void Place(Vector3 position, Vector3 rotation)
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xE95DC0", Offset = "0xE95DC0", VA = "0xE95DC0")]
	public void SetTemporaryLocation(Transform transform, Wand.WandReleaseCallback releaseProc)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xE8D54C", Offset = "0xE8D54C", VA = "0xE8D54C")]
	public void SetPluginType(PluginType type)
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xE95AE0", Offset = "0xE95AE0", VA = "0xE95AE0")]
	public void SetCellType(CellType type)
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xE8CE34", Offset = "0xE8CE34", VA = "0xE8CE34")]
	public bool IsRune()
	{
		return default(bool);
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xE8D4C4", Offset = "0xE8D4C4", VA = "0xE8D4C4")]
	public bool IsRunicBonus()
	{
		return default(bool);
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xE95E8C", Offset = "0xE95E8C", VA = "0xE95E8C")]
	public bool IsSpecialBonus()
	{
		return default(bool);
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xE875FC", Offset = "0xE875FC", VA = "0xE875FC")]
	public bool IsBonus()
	{
		return default(bool);
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xE95F04", Offset = "0xE95F04", VA = "0xE95F04")]
	public bool IsSpecialElement()
	{
		return default(bool);
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xE95F88", Offset = "0xE95F88", VA = "0xE95F88")]
	public bool IsReshufflable()
	{
		return default(bool);
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xE95FC8", Offset = "0xE95FC8", VA = "0xE95FC8")]
	public bool IsDead()
	{
		return default(bool);
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xE95FDC", Offset = "0xE95FDC", VA = "0xE95FDC")]
	public bool IsImpactableBonus()
	{
		return default(bool);
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xE96068", Offset = "0xE96068", VA = "0xE96068")]
	public void NotifyExplode()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xE962D8", Offset = "0xE962D8", VA = "0xE962D8")]
	public void NotifyRemove()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xE96348", Offset = "0xE96348", VA = "0xE96348")]
	public void NotifyMove(Field field, Coordinates from, Coordinates to, bool isInteraction)
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xE96398", Offset = "0xE96398", VA = "0xE96398")]
	public void NotifyImpact(Coordinates impactCellCoordinate)
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xE95B74", Offset = "0xE95B74", VA = "0xE95B74")]
	public void AddCellModifiers(CellModifiers cellModifiers)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xE96430", Offset = "0xE96430", VA = "0xE96430")]
	public void RemoveCellModifiers(CellModifiers cellModifiers)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xE96550", Offset = "0xE96550", VA = "0xE96550")]
	public void RemoveCellModifiers()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xE9657C", Offset = "0xE9657C", VA = "0xE9657C")]
	public bool IsCellMoving()
	{
		return default(bool);
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xE96608", Offset = "0xE96608", VA = "0xE96608")]
	public bool IsSetModifiers(CellModifiers cellModifiers)
	{
		return default(bool);
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xE96618", Offset = "0xE96618", VA = "0xE96618")]
	public bool ChangedCellPositionOnField(Field field, Coordinates coordinates)
	{
		return default(bool);
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xE95E64", Offset = "0xE95E64", VA = "0xE95E64")]
	public void SetLockedState(bool state)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xE96700", Offset = "0xE96700", VA = "0xE96700")]
	public void DOHint(float shakeTime, float shakeStrength, int shakeVibration, AnimationCurve curve)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xE96714", Offset = "0xE96714", VA = "0xE96714", Slot = "13")]
	public override void Release()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xE9698C", Offset = "0xE9698C", VA = "0xE9698C", Slot = "14")]
	public override void Release(float timeOut)
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xE9699C", Offset = "0xE9699C", VA = "0xE9699C")]
	public void ForceStop()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xE96A68", Offset = "0xE96A68", VA = "0xE96A68", Slot = "10")]
	public override void OnPull()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xE96B68", Offset = "0xE96B68", VA = "0xE96B68", Slot = "11")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xE96C4C", Offset = "0xE96C4C", VA = "0xE96C4C")]
	public void ResetTargetLocation()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xE96C6C", Offset = "0xE96C6C", VA = "0xE96C6C")]
	public void OnHighlightStart()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xE96C8C", Offset = "0xE96C8C", VA = "0xE96C8C")]
	public void OnHighlightEnd()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xE96CA8", Offset = "0xE96CA8", VA = "0xE96CA8")]
	public void ReleaseVisualComponents()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xE96E60", Offset = "0xE96E60", VA = "0xE96E60")]
	public void SetVisualizer(CellVisualizer newVisualizer)
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xE9704C", Offset = "0xE9704C", VA = "0xE9704C")]
	private bool IsVisualizersHaveOneType(CellVisualizer newVisualizer, CellVisualizer currentVisualizer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xE97128", Offset = "0xE97128", VA = "0xE97128")]
	public void SetCellEffect(CellEffect newEffect)
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xE97164", Offset = "0xE97164", VA = "0xE97164")]
	public void SetExplosionEffect(CellEffect newEffect)
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xE971A0", Offset = "0xE971A0", VA = "0xE971A0")]
	public void SetHightlightEffect(CellEffect newEffect)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xE90168", Offset = "0xE90168", VA = "0xE90168")]
	public void SetDespawnEffect(CellEffect newEffect)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xE963F4", Offset = "0xE963F4", VA = "0xE963F4")]
	public void SetFreezeEffect(CellEffect newEffect)
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xE971DC", Offset = "0xE971DC", VA = "0xE971DC")]
	public void SetNotInteractiveEffect(CellEffect newEffect)
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xE97218", Offset = "0xE97218", VA = "0xE97218")]
	public void SetSpawnEffect(CellEffect newEffect)
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xE97254", Offset = "0xE97254", VA = "0xE97254")]
	protected void NotifyMoveEnd()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xE96D9C", Offset = "0xE96D9C", VA = "0xE96D9C")]
	private void SetReleaseForVisualizer()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xE95E0C", Offset = "0xE95E0C", VA = "0xE95E0C")]
	private void PluginRelease()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xE967E8", Offset = "0xE967E8", VA = "0xE967E8")]
	private void ResetStates()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xE972E4", Offset = "0xE972E4", VA = "0xE972E4")]
	private void Lerp()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xE972A8", Offset = "0xE972A8", VA = "0xE972A8")]
	private void ResetWandRulingState()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xE9752C", Offset = "0xE9752C", VA = "0xE9752C")]
	private void ReleaseCurrentPlugin()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xE963DC", Offset = "0xE963DC", VA = "0xE963DC")]
	private CellModifiers GetNewModifier(CellModifiers modifiers)
	{
		return default(CellModifiers);
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xE963E8", Offset = "0xE963E8", VA = "0xE963E8")]
	private bool HasFlag(CellModifiers a, CellModifiers b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xE96640", Offset = "0xE96640", VA = "0xE96640")]
	private void ChangeOfFrozenState(bool newState)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xE95DD8", Offset = "0xE95DD8", VA = "0xE95DD8")]
	private void ClearModifiersStates()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xE97530", Offset = "0xE97530", VA = "0xE97530")]
	private void Update()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xE976FC", Offset = "0xE976FC", VA = "0xE976FC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xE9783C", Offset = "0xE9783C", VA = "0xE9783C", Slot = "12")]
	public override void OnCreate(Action turnBackEvent)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xE97844", Offset = "0xE97844", VA = "0xE97844")]
	public Cell()
	{
	}
}
[Token(Token = "0x20001B5")]
public class BurnCell : PoolableBehaviour
{
	[Token(Token = "0x400097E")]
	public const int POOL_SIZE = 0;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Collider CellCollider;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject VisualRoot;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MultiPrefabPool<CellType, BurnCell> _pool;

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xE92F98", Offset = "0xE92F98", VA = "0xE92F98")]
	public static BurnCell Get(CellType type)
	{
		return null;
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xE9301C", Offset = "0xE9301C", VA = "0xE9301C")]
	public static void Register(CellType type, GameObject prefab, [Optional] Transform poolRoot, int defaultSize = 0)
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xE930C8", Offset = "0xE930C8", VA = "0xE930C8")]
	public BurnCell()
	{
	}
}
[Token(Token = "0x20001B6")]
public abstract class CellEffectVisualizer : Visualizer
{
	[Token(Token = "0x600092F")]
	public abstract void Init(CellVisualizer visualizer);

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xE97B80", Offset = "0xE97B80", VA = "0xE97B80")]
	protected CellEffectVisualizer()
	{
	}
}
[Token(Token = "0x20001B7")]
public abstract class CellVisualizer : PoolableBehaviour
{
	[Token(Token = "0x4000982")]
	public const int POOL_SIZE_BY_CELL_TYPE = 64;

	[Token(Token = "0x4000983")]
	public const int POOL_SIZE_BY_PLUGIN_TYPE = 16;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _baseScale;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _rootLocalScale;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Tween _shakeTween;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAFCA04", Offset = "0xAFCA04")]
	public Color EffectColor;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAFCA1C", Offset = "0xAFCA1C")]
	public Color AdditionalEffectColor;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Collider CellCollider;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MeshFilter MeshFilterCmp;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MeshRenderer MeshRendererCmp;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SpriteRenderer Sprite;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public CellType Type;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool Shake;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject VisualRoot;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MultiPrefabPool<CellType, CellVisualizer> _pool;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static MultiPrefabPool<PluginType, CellVisualizer> _additionalPool;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform _visualRootTransform;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Color _transparentColor;

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x1F24618", Offset = "0x1F24618", VA = "0x1F24618")]
	public GameObject GetVisualRoot()
	{
		return null;
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x1F24620", Offset = "0x1F24620", VA = "0x1F24620")]
	public void SetScaleIntoVisualRoot(Vector3 scale)
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x1F2463C", Offset = "0x1F2463C", VA = "0x1F2463C")]
	public void SetScaleIntoVisualRoot(float scalePercentage)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x1F1E820", Offset = "0x1F1E820", VA = "0x1F1E820")]
	public static CellVisualizer Get(CellType type)
	{
		return null;
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x1F1E79C", Offset = "0x1F1E79C", VA = "0x1F1E79C")]
	public static CellVisualizer Get(PluginType pluginType)
	{
		return null;
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x1F246E4", Offset = "0x1F246E4", VA = "0x1F246E4")]
	public static void Register(CellType type, GameObject prefab, [Optional] Transform poolRoot, int defaultSize = 0)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x1F24790", Offset = "0x1F24790", VA = "0x1F24790")]
	public static void RegisterPlugin(PluginType type, GameObject prefab, [Optional] Transform poolRoot, int defaultSize = 0)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x1F2483C", Offset = "0x1F2483C", VA = "0x1F2483C", Slot = "10")]
	public override void OnPull()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x1F249B4", Offset = "0x1F249B4", VA = "0x1F249B4", Slot = "11")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x1F24A90", Offset = "0x1F24A90", VA = "0x1F24A90", Slot = "14")]
	public override void Release(float delayTime)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x1F24B10", Offset = "0x1F24B10", VA = "0x1F24B10", Slot = "12")]
	public override void OnCreate(Action turnBackEvent)
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x1F24B70", Offset = "0x1F24B70", VA = "0x1F24B70")]
	public Mesh GetMesh()
	{
		return null;
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x1F24B8C", Offset = "0x1F24B8C", VA = "0x1F24B8C")]
	public MeshRenderer GetMeshRenderer()
	{
		return null;
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x1F24B94", Offset = "0x1F24B94", VA = "0x1F24B94")]
	public Color GetEffectColor()
	{
		return default(Color);
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x1F24BA0", Offset = "0x1F24BA0", VA = "0x1F24BA0")]
	public Color GetAdditionalColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x1F24BAC", Offset = "0x1F24BAC", VA = "0x1F24BAC")]
	public void DoShake(float shakeTime, float shakeStrength, int shakeVibration, AnimationCurve curve)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x1F24A70", Offset = "0x1F24A70", VA = "0x1F24A70")]
	public void SetColliderStatus(bool newStatus)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x1F24C58", Offset = "0x1F24C58", VA = "0x1F24C58")]
	protected CellVisualizer()
	{
	}
}
[Token(Token = "0x20001B8")]
public class CellVisualizerArtifact : CellVisualizer
{
	[Token(Token = "0x6000944")]
	[Address(RVA = "0x1F24D64", Offset = "0x1F24D64", VA = "0x1F24D64")]
	public CellVisualizerArtifact()
	{
	}
}
[Token(Token = "0x20001B9")]
public class CellVisualizerBase : CellVisualizer
{
	[Token(Token = "0x4000994")]
	public const int POOL_SIZE = 20;

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x1F24DC8", Offset = "0x1F24DC8", VA = "0x1F24DC8")]
	public CellVisualizerBase()
	{
	}
}
[Token(Token = "0x20001BA")]
public class CellVisualizerChristamsTreeToy : CellVisualizer
{
	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ParticleSystem FlyEffect;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MultiPrefabPool<CellType, CellVisualizer> _poolChristmasTreeToy;

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x1F20638", Offset = "0x1F20638", VA = "0x1F20638")]
	public new static CellVisualizer Get(CellType type)
	{
		return null;
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x1F24E2C", Offset = "0x1F24E2C", VA = "0x1F24E2C")]
	public new static void Register(CellType type, GameObject prefab, [Optional] Transform poolRoot, int defaultSize = 0)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x1F206BC", Offset = "0x1F206BC", VA = "0x1F206BC")]
	public void StartFly()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x1F20874", Offset = "0x1F20874", VA = "0x1F20874")]
	public void EndFly()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x1F24ED8", Offset = "0x1F24ED8", VA = "0x1F24ED8", Slot = "11")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x1F24F0C", Offset = "0x1F24F0C", VA = "0x1F24F0C")]
	public CellVisualizerChristamsTreeToy()
	{
	}
}
[Token(Token = "0x20001BB")]
public class CellVisualizerCloud : CellVisualizer
{
	[Token(Token = "0x600094D")]
	[Address(RVA = "0x1F24FE4", Offset = "0x1F24FE4", VA = "0x1F24FE4")]
	public CellVisualizerCloud()
	{
	}
}
[Token(Token = "0x20001BC")]
public class CellVisualizerCloudStorm : CellVisualizer
{
	[Token(Token = "0x600094E")]
	[Address(RVA = "0x1F25048", Offset = "0x1F25048", VA = "0x1F25048")]
	public CellVisualizerCloudStorm()
	{
	}
}
[Token(Token = "0x20001BD")]
public class CellVisualizerDarkEnergy : CellVisualizer
{
	[Token(Token = "0x600094F")]
	[Address(RVA = "0x1F250AC", Offset = "0x1F250AC", VA = "0x1F250AC")]
	public CellVisualizerDarkEnergy()
	{
	}
}
[Token(Token = "0x20001BE")]
public class CellVisualizerDarkEnergyGenerator : CellVisualizer
{
	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public DarkEnergyEffectController DarkEnergyIntensityController;

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x1F25110", Offset = "0x1F25110", VA = "0x1F25110")]
	public CellVisualizerDarkEnergyGenerator()
	{
	}
}
[Token(Token = "0x20001BF")]
public class CellVisualizerDestructibleStoneBlock : CellVisualizer
{
	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<MeshRenderer> BlocksMesh;

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x1F2574C", Offset = "0x1F2574C", VA = "0x1F2574C", Slot = "16")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x1F25828", Offset = "0x1F25828", VA = "0x1F25828")]
	public CellVisualizerDestructibleStoneBlock()
	{
	}
}
[Token(Token = "0x20001C0")]
public class CellVisualizerDust : CellVisualizer
{
	[Token(Token = "0x6000953")]
	[Address(RVA = "0x1F2588C", Offset = "0x1F2588C", VA = "0x1F2588C")]
	public CellVisualizerDust()
	{
	}
}
[Token(Token = "0x20001C1")]
public class CellVisualizerFirefly : CellVisualizer
{
	[Token(Token = "0x6000954")]
	[Address(RVA = "0x1F258F0", Offset = "0x1F258F0", VA = "0x1F258F0")]
	public CellVisualizerFirefly()
	{
	}
}
[Token(Token = "0x20001C2")]
public class CellVisualizerFireflyWithHealth : CellVisualizer
{
	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<FireFlyWithHealthLocksWrapper> Locks;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<FireFlyWithHealthLocksWrapper> _currentLocks;

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x1F2270C", Offset = "0x1F2270C", VA = "0x1F2270C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x1F229C0", Offset = "0x1F229C0", VA = "0x1F229C0")]
	public void OnImpact()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x1F25954", Offset = "0x1F25954", VA = "0x1F25954")]
	public CellVisualizerFireflyWithHealth()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C3")]
public class FireFlyWithHealthLocksWrapper
{
	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MeshRenderer Lock;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem Particle;

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x1F36E08", Offset = "0x1F36E08", VA = "0x1F36E08")]
	public void DisableLock()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x1F36E48", Offset = "0x1F36E48", VA = "0x1F36E48")]
	public void EnableLock()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x1F36E68", Offset = "0x1F36E68", VA = "0x1F36E68")]
	public FireFlyWithHealthLocksWrapper()
	{
	}
}
[Token(Token = "0x20001C4")]
public class CellVisualizerHeat : CellVisualizer
{
	[Token(Token = "0x600095B")]
	[Address(RVA = "0x1F259E0", Offset = "0x1F259E0", VA = "0x1F259E0")]
	public CellVisualizerHeat()
	{
	}
}
[Token(Token = "0x20001C5")]
public class CellVisualizerHiddenEvents : CellVisualizer
{
	[Token(Token = "0x600095C")]
	[Address(RVA = "0x1F25A44", Offset = "0x1F25A44", VA = "0x1F25A44")]
	public CellVisualizerHiddenEvents()
	{
	}
}
[Token(Token = "0x20001C6")]
public class CellVisualizerHyperBonus : CellVisualizer
{
	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ParticleSystem ContinuousElementEffect;

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x1F25AA8", Offset = "0x1F25AA8", VA = "0x1F25AA8", Slot = "10")]
	public override void OnPull()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x1F25AD8", Offset = "0x1F25AD8", VA = "0x1F25AD8", Slot = "11")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x1F25B0C", Offset = "0x1F25B0C", VA = "0x1F25B0C")]
	public CellVisualizerHyperBonus()
	{
	}
}
[Token(Token = "0x20001C7")]
public class CellVisualizerMegaBonus : CellVisualizer
{
	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ParticleSystem ContinuousElementEffect;

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x1F25B70", Offset = "0x1F25B70", VA = "0x1F25B70", Slot = "10")]
	public override void OnPull()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x1F25BA0", Offset = "0x1F25BA0", VA = "0x1F25BA0", Slot = "11")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x1F25BD4", Offset = "0x1F25BD4", VA = "0x1F25BD4")]
	public CellVisualizerMegaBonus()
	{
	}
}
[Token(Token = "0x20001C8")]
public class CellVisualizerRainbow : CellVisualizer
{
	[Token(Token = "0x6000963")]
	[Address(RVA = "0x1F25C38", Offset = "0x1F25C38", VA = "0x1F25C38")]
	public CellVisualizerRainbow()
	{
	}
}
[Token(Token = "0x20001C9")]
public class CellVisualizerSnowflake : CellVisualizer
{
	[Token(Token = "0x6000964")]
	[Address(RVA = "0x1F25C9C", Offset = "0x1F25C9C", VA = "0x1F25C9C")]
	public CellVisualizerSnowflake()
	{
	}
}
[Token(Token = "0x20001CA")]
public class CellVisualizerSpark : CellVisualizer
{
	[Token(Token = "0x6000965")]
	[Address(RVA = "0x1F25D00", Offset = "0x1F25D00", VA = "0x1F25D00")]
	public CellVisualizerSpark()
	{
	}
}
[Token(Token = "0x20001CB")]
public class CellVisualizerStoneBlock : CellVisualizer
{
	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<MeshRenderer> BlocksMesh;

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x1F25D64", Offset = "0x1F25D64", VA = "0x1F25D64", Slot = "16")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x1F25E40", Offset = "0x1F25E40", VA = "0x1F25E40")]
	public CellVisualizerStoneBlock()
	{
	}
}
[Token(Token = "0x20001CC")]
public class CellVisualizerWater : CellVisualizer, IUpdatable
{
	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Transform _transform;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float _fromX;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float _fromY;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float _xCoef;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float _yCoef;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float _XOffset;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float _YOffset;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float _xChange;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float _yChange;

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x1F25EA4", Offset = "0x1F25EA4", VA = "0x1F25EA4", Slot = "10")]
	public override void OnPull()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x1F25FE8", Offset = "0x1F25FE8", VA = "0x1F25FE8", Slot = "15")]
	public override void OnReset()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x1F25F2C", Offset = "0x1F25F2C", VA = "0x1F25F2C")]
	private void GetRandomValues()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x1F2605C", Offset = "0x1F2605C", VA = "0x1F2605C")]
	private void SetNewScale()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x1F26188", Offset = "0x1F26188", VA = "0x1F26188", Slot = "17")]
	private void IUpdatable.OnUpdate()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x1F2618C", Offset = "0x1F2618C", VA = "0x1F2618C")]
	public CellVisualizerWater()
	{
	}
}
[Token(Token = "0x20001CD")]
public abstract class AdditionalEffect : CellEffect
{
	[Token(Token = "0x40009A9")]
	public const int POOL_SIZE = 16;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiPrefabPool<PluginType, AdditionalEffect> _pool;

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xE82C28", Offset = "0xE82C28", VA = "0xE82C28")]
	public static AdditionalEffect Get(PluginType type)
	{
		return null;
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xE82CAC", Offset = "0xE82CAC", VA = "0xE82CAC")]
	public static void Register(PluginType type, GameObject prefab, [Optional] Transform poolRoot, int defaultSize = 0)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xE82D58", Offset = "0xE82D58", VA = "0xE82D58")]
	protected AdditionalEffect()
	{
	}
}
[Token(Token = "0x20001CE")]
public class AdditionalEffectCross : AdditionalEffect
{
	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ParticleSystem> ParticleSubSystems;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem AdditionalEffect;

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xE82E38", Offset = "0xE82E38", VA = "0xE82E38")]
	private void ConfigureEffect(Cell cell)
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xE82F90", Offset = "0xE82F90", VA = "0xE82F90")]
	public void GetAllParticleSubsystem()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xE82FE8", Offset = "0xE82FE8", VA = "0xE82FE8", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xE830B8", Offset = "0xE830B8", VA = "0xE830B8", Slot = "18")]
	public override void Stop()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xE830D8", Offset = "0xE830D8", VA = "0xE830D8")]
	public AdditionalEffectCross()
	{
	}
}
[Token(Token = "0x20001CF")]
public class AdditionalEffectFire : AdditionalEffect
{
	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem AdditionalEffectVFX;

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xE8313C", Offset = "0xE8313C", VA = "0xE8313C", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xE8328C", Offset = "0xE8328C", VA = "0xE8328C", Slot = "18")]
	public override void Stop()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xE832A0", Offset = "0xE832A0", VA = "0xE832A0")]
	public AdditionalEffectFire()
	{
	}
}
[Token(Token = "0x20001D0")]
public class AdditionalEffectFlame : AdditionalEffect
{
	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ParticleSystem> ParticleSubSystems;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem AdditionalEffect;

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xE83304", Offset = "0xE83304", VA = "0xE83304")]
	private void ConfigureEffect(Cell cell)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xE83468", Offset = "0xE83468", VA = "0xE83468")]
	public void GetAllParticleSubsystem()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xE834C0", Offset = "0xE834C0", VA = "0xE834C0", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xE83500", Offset = "0xE83500", VA = "0xE83500", Slot = "18")]
	public override void Stop()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xE8351C", Offset = "0xE8351C", VA = "0xE8351C")]
	public AdditionalEffectFlame()
	{
	}
}
[Token(Token = "0x20001D1")]
public abstract class CellEffect : PoolableBehaviour
{
	[Token(Token = "0x600097F")]
	[Address(RVA = "0xE97B44", Offset = "0xE97B44", VA = "0xE97B44", Slot = "13")]
	public override void Release()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xE83028", Offset = "0xE83028", VA = "0xE83028", Slot = "17")]
	public virtual void Play(Cell cell)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xE830D4", Offset = "0xE830D4", VA = "0xE830D4", Slot = "18")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xE97B78", Offset = "0xE97B78", VA = "0xE97B78", Slot = "19")]
	public virtual float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xE82D5C", Offset = "0xE82D5C", VA = "0xE82D5C")]
	protected CellEffect()
	{
	}
}
[Token(Token = "0x20001D2")]
public class DespawnEffect : CellEffect
{
	[Token(Token = "0x40009B0")]
	public const int POOL_SIZE = 128;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MultiPrefabPool<PluginType, DespawnEffect> _pool;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected TimerUpdateEvent _timerEvent;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected CellVisualizer _cellVisualizer;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector3 _startCellLocalScale;

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x1EFA9BC", Offset = "0x1EFA9BC", VA = "0x1EFA9BC")]
	public static DespawnEffect Get(PluginType type)
	{
		return null;
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x1EFAA40", Offset = "0x1EFAA40", VA = "0x1EFAA40")]
	public static void Register(PluginType type, GameObject prefab, [Optional] Transform poolRoot, int defaultSize = 0)
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x1EFAAEC", Offset = "0x1EFAAEC", VA = "0x1EFAAEC", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x1EFAC80", Offset = "0x1EFAC80", VA = "0x1EFAC80", Slot = "13")]
	public override void Release()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x1EFACD0", Offset = "0x1EFACD0", VA = "0x1EFACD0", Slot = "11")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x1EFAD48", Offset = "0x1EFAD48", VA = "0x1EFAD48", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x1EFAD50", Offset = "0x1EFAD50", VA = "0x1EFAD50", Slot = "16")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x1EFADD0", Offset = "0x1EFADD0", VA = "0x1EFADD0", Slot = "20")]
	protected virtual void TimerUpdate(float percent, float targetTime)
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x1EFAE7C", Offset = "0x1EFAE7C", VA = "0x1EFAE7C")]
	public DespawnEffect()
	{
	}
}
[Token(Token = "0x20001D3")]
public class DespawnEffectDust : DespawnEffect
{
	[Token(Token = "0x600098E")]
	[Address(RVA = "0x1EFAEF8", Offset = "0x1EFAEF8", VA = "0x1EFAEF8", Slot = "14")]
	public override void Release(float timeOut)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x1EFAF8C", Offset = "0x1EFAF8C", VA = "0x1EFAF8C")]
	public DespawnEffectDust()
	{
	}
}
[Token(Token = "0x20001D4")]
public class DespawnEffectForWaterCannon : DespawnEffect
{
	[Token(Token = "0x20003B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAA28", Offset = "0xAFAA28")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DespawnEffectForWaterCannon <>4__this;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Cell cell;

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x1EFB8AC", Offset = "0x1EFB8AC", VA = "0x1EFB8AC")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x1EFBB8C", Offset = "0x1EFBB8C", VA = "0x1EFBB8C")]
		internal void <Play>b__1(float x)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAA38", Offset = "0xAFAA38")]
	private sealed class <>c
	{
		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static DOGetter<float> <>9__9_0;

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x1EFBB7C", Offset = "0x1EFBB7C", VA = "0x1EFBB7C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x1EFBB84", Offset = "0x1EFBB84", VA = "0x1EFBB84")]
		internal float <Play>b__9_0()
		{
			return default(float);
		}
	}

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int SIZE_FOR_PUULL;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static PrefabPool<DespawnEffectForWaterCannon> _pool;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Tween _firstTween;

	[Token(Token = "0x40009B8")]
	private const float _flingTime = 3f;

	[Token(Token = "0x40009B9")]
	private const float _absorptionTime = 2f;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform _destination;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform _destination2;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Tween _tween;

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x1EFAFF4", Offset = "0x1EFAFF4", VA = "0x1EFAFF4")]
	public static DespawnEffectForWaterCannon Get()
	{
		return null;
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x1EFB06C", Offset = "0x1EFB06C", VA = "0x1EFB06C")]
	public static void InitPool(PrefabPool<DespawnEffectForWaterCannon> pool)
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x1EFB0D8", Offset = "0x1EFB0D8", VA = "0x1EFB0D8", Slot = "14")]
	public override void Release(float timeOut)
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x1EFB0E0", Offset = "0x1EFB0E0", VA = "0x1EFB0E0", Slot = "11")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x1EFB698", Offset = "0x1EFB698", VA = "0x1EFB698", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x1EFB6A0", Offset = "0x1EFB6A0", VA = "0x1EFB6A0")]
	public void SetDestination(Transform destination, Transform destination2)
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x1EFB6A8", Offset = "0x1EFB6A8", VA = "0x1EFB6A8", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x1EFB8B4", Offset = "0x1EFB8B4", VA = "0x1EFB8B4")]
	private void Absorption(Cell cell, float percent)
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x1EFBA5C", Offset = "0x1EFBA5C", VA = "0x1EFBA5C")]
	public DespawnEffectForWaterCannon()
	{
	}
}
[Token(Token = "0x20001D5")]
public abstract class Visualizer : PoolableBehaviour
{
	[Token(Token = "0x600099A")]
	[Address(RVA = "0xE06E14", Offset = "0xE06E14", VA = "0xE06E14", Slot = "17")]
	public virtual void Play()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xE06E18", Offset = "0xE06E18", VA = "0xE06E18", Slot = "18")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xE06E1C", Offset = "0xE06E1C", VA = "0xE06E1C")]
	protected Visualizer()
	{
	}
}
[Token(Token = "0x20001D6")]
public abstract class ExplosionEffect : CellEffect
{
	[Token(Token = "0x40009BD")]
	public const int POOL_SIZE = 128;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource SourceFromAudio;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<AudioClip> AudioClips;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MultiPrefabPool<CellType, ExplosionEffect> _pool;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static MultiPrefabPool<PluginType, ExplosionEffect> _bonusPool;

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x1F05E98", Offset = "0x1F05E98", VA = "0x1F05E98")]
	public static ExplosionEffect Get(CellType type)
	{
		return null;
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x1F02264", Offset = "0x1F02264", VA = "0x1F02264")]
	public static ExplosionEffect Get(PluginType type)
	{
		return null;
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x1F05F1C", Offset = "0x1F05F1C", VA = "0x1F05F1C")]
	public static void Register(CellType type, GameObject prefab, [Optional] Transform poolRoot, int defaultSize = 0)
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x1F05FC8", Offset = "0x1F05FC8", VA = "0x1F05FC8")]
	public static void Register(PluginType type, GameObject prefab, [Optional] Transform poolRoot, int defaultSize = 0)
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x1F06074", Offset = "0x1F06074", VA = "0x1F06074", Slot = "13")]
	public override void Release()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x1F060B0", Offset = "0x1F060B0", VA = "0x1F060B0", Slot = "11")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x1F060E4", Offset = "0x1F060E4", VA = "0x1F060E4", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x1F0610C", Offset = "0x1F0610C", VA = "0x1F0610C")]
	protected void PlayRandomSound()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x1F06204", Offset = "0x1F06204", VA = "0x1F06204")]
	protected ExplosionEffect()
	{
	}
}
[Token(Token = "0x20001D7")]
public class ExplosionEffectArtifact : ExplosionEffect
{
	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem Effect;

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x1F062B0", Offset = "0x1F062B0", VA = "0x1F062B0", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x1F06344", Offset = "0x1F06344", VA = "0x1F06344")]
	public ExplosionEffectArtifact()
	{
	}
}
[Token(Token = "0x20001D8")]
public class ExplosionEffectBaseRune : ExplosionEffect
{
	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CellTypeSpriteSerializedDictionary RuneSprites;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<ParticleSystem> ParticleSubSystems;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem EffectRoot;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem RuneExplosion;

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x1F063AC", Offset = "0x1F063AC", VA = "0x1F063AC")]
	private void ConfigureEffect(Cell cell)
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x1F06538", Offset = "0x1F06538", VA = "0x1F06538")]
	public void GetAllPatricleSubsystem()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x1F06590", Offset = "0x1F06590", VA = "0x1F06590", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x1F065E4", Offset = "0x1F065E4", VA = "0x1F065E4", Slot = "18")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x1F06620", Offset = "0x1F06620", VA = "0x1F06620", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x1F06660", Offset = "0x1F06660", VA = "0x1F06660")]
	public ExplosionEffectBaseRune()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D9")]
public struct RunesTextures
{
	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Sprite RuneSprite;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Texture2D RuneTexture;
}
[Token(Token = "0x20001DA")]
public class ExplosionEffectCrossBonus : ExplosionEffect
{
	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<ParticleSystem> ParticleSubSystems;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem Explosion;

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x1F066C8", Offset = "0x1F066C8", VA = "0x1F066C8")]
	private void ConfigureEffect(Cell cell)
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x1F06808", Offset = "0x1F06808", VA = "0x1F06808")]
	public void GetAllParticleSubsystem()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x1F06860", Offset = "0x1F06860", VA = "0x1F06860", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x1F068AC", Offset = "0x1F068AC", VA = "0x1F068AC", Slot = "18")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x1F068E0", Offset = "0x1F068E0", VA = "0x1F068E0", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x1F06920", Offset = "0x1F06920", VA = "0x1F06920")]
	public ExplosionEffectCrossBonus()
	{
	}
}
[Token(Token = "0x20001DB")]
public class ExplosionEffectDarkEnergy : ExplosionEffect
{
	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem EffectRoot;

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x1F4A2AC", Offset = "0x1F4A2AC", VA = "0x1F4A2AC", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x1F4A2E0", Offset = "0x1F4A2E0", VA = "0x1F4A2E0", Slot = "18")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x1F4A314", Offset = "0x1F4A314", VA = "0x1F4A314", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x1F4A354", Offset = "0x1F4A354", VA = "0x1F4A354")]
	public ExplosionEffectDarkEnergy()
	{
	}
}
[Token(Token = "0x20001DC")]
public class ExplosionEffectDarkEnergyGenerator : ExplosionEffect
{
	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem EffectRoot;

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x1F4A3BC", Offset = "0x1F4A3BC", VA = "0x1F4A3BC", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x1F4A3F0", Offset = "0x1F4A3F0", VA = "0x1F4A3F0", Slot = "18")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x1F4A424", Offset = "0x1F4A424", VA = "0x1F4A424", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x1F4A464", Offset = "0x1F4A464", VA = "0x1F4A464")]
	public ExplosionEffectDarkEnergyGenerator()
	{
	}
}
[Token(Token = "0x20001DD")]
public class ExplosionEffectDestructibleStone : ExplosionEffect
{
	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem Explosion;

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x1F4A4CC", Offset = "0x1F4A4CC", VA = "0x1F4A4CC", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x1F4A500", Offset = "0x1F4A500", VA = "0x1F4A500", Slot = "18")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x1F4A534", Offset = "0x1F4A534", VA = "0x1F4A534", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x1F4A53C", Offset = "0x1F4A53C", VA = "0x1F4A53C")]
	public ExplosionEffectDestructibleStone()
	{
	}
}
[Token(Token = "0x20001DE")]
public class ExplosionEffectDust : ExplosionEffect
{
	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem ExplosionEffect;

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x1F4A5A4", Offset = "0x1F4A5A4", VA = "0x1F4A5A4", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x1F4A5D8", Offset = "0x1F4A5D8", VA = "0x1F4A5D8", Slot = "18")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x1F4A60C", Offset = "0x1F4A60C", VA = "0x1F4A60C", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x1F4A64C", Offset = "0x1F4A64C", VA = "0x1F4A64C")]
	public ExplosionEffectDust()
	{
	}
}
[Token(Token = "0x20001DF")]
public class ExplosionEffectFirefly : ExplosionEffect
{
	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem Explosion;

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x1F4A6B4", Offset = "0x1F4A6B4", VA = "0x1F4A6B4", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x1F4A6E8", Offset = "0x1F4A6E8", VA = "0x1F4A6E8", Slot = "18")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x1F4A71C", Offset = "0x1F4A71C", VA = "0x1F4A71C", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x1F4A724", Offset = "0x1F4A724", VA = "0x1F4A724")]
	public ExplosionEffectFirefly()
	{
	}
}
[Token(Token = "0x20001E0")]
public class ExplosionEffectFlameBonus : ExplosionEffect
{
	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<ParticleSystem> ParticleSubSystems;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem Explosion;

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x1F4A78C", Offset = "0x1F4A78C", VA = "0x1F4A78C")]
	private void ConfigureEffect(Cell cell)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x1F4A8CC", Offset = "0x1F4A8CC", VA = "0x1F4A8CC")]
	public void GetAllParticleSubsystem()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x1F4A924", Offset = "0x1F4A924", VA = "0x1F4A924", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x1F4A968", Offset = "0x1F4A968", VA = "0x1F4A968", Slot = "18")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x1F4A99C", Offset = "0x1F4A99C", VA = "0x1F4A99C", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x1F4A9DC", Offset = "0x1F4A9DC", VA = "0x1F4A9DC")]
	public ExplosionEffectFlameBonus()
	{
	}
}
[Token(Token = "0x20001E1")]
public class ExplosionEffectHeat : ExplosionEffect
{
	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem Sparks;

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x1F4AA44", Offset = "0x1F4AA44", VA = "0x1F4AA44", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x1F4AB34", Offset = "0x1F4AB34", VA = "0x1F4AB34", Slot = "18")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x1F4AB70", Offset = "0x1F4AB70", VA = "0x1F4AB70", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x1F4ABB0", Offset = "0x1F4ABB0", VA = "0x1F4ABB0")]
	public ExplosionEffectHeat()
	{
	}
}
[Token(Token = "0x20001E2")]
public class ExplosionEffectHyperBonus : ExplosionEffect
{
	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem Explosion;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float ReleaseDelay;

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x1F4AC18", Offset = "0x1F4AC18", VA = "0x1F4AC18", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x1F4AC4C", Offset = "0x1F4AC4C", VA = "0x1F4AC4C", Slot = "18")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x1F4AC80", Offset = "0x1F4AC80", VA = "0x1F4AC80", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x1F4AC88", Offset = "0x1F4AC88", VA = "0x1F4AC88")]
	public ExplosionEffectHyperBonus()
	{
	}
}
[Token(Token = "0x20001E3")]
public class ExplosionEffectMegaBonus : ExplosionEffect
{
	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem Explosion;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float ReleaseDelay;

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x1F4ACF8", Offset = "0x1F4ACF8", VA = "0x1F4ACF8", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x1F4AD2C", Offset = "0x1F4AD2C", VA = "0x1F4AD2C", Slot = "18")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x1F4AD60", Offset = "0x1F4AD60", VA = "0x1F4AD60", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x1F4AD68", Offset = "0x1F4AD68", VA = "0x1F4AD68")]
	public ExplosionEffectMegaBonus()
	{
	}
}
[Token(Token = "0x20001E4")]
public class ExplosionEffectRainbow : ExplosionEffect
{
	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x1F4ADD8", Offset = "0x1F4ADD8", VA = "0x1F4ADD8")]
	public ExplosionEffectRainbow()
	{
	}
}
[Token(Token = "0x20001E5")]
public class ExplosionEffectSnowflake : ExplosionEffect
{
	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem Explosion;

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x1F4AE40", Offset = "0x1F4AE40", VA = "0x1F4AE40", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x1F4AE74", Offset = "0x1F4AE74", VA = "0x1F4AE74", Slot = "18")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x1F4AEA8", Offset = "0x1F4AEA8", VA = "0x1F4AEA8", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x1F4AEB0", Offset = "0x1F4AEB0", VA = "0x1F4AEB0")]
	public ExplosionEffectSnowflake()
	{
	}
}
[Token(Token = "0x20001E6")]
public class ExplosionEffectSparks : ExplosionEffect
{
	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem ExplosionEffect;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float ReleaseDelay;

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x1F4AF18", Offset = "0x1F4AF18", VA = "0x1F4AF18", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x1F4AF4C", Offset = "0x1F4AF4C", VA = "0x1F4AF4C", Slot = "18")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x1F4AF80", Offset = "0x1F4AF80", VA = "0x1F4AF80", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x1F4AF88", Offset = "0x1F4AF88", VA = "0x1F4AF88")]
	public ExplosionEffectSparks()
	{
	}
}
[Token(Token = "0x20001E7")]
public class ExplosionEffectWater : ExplosionEffect
{
	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem ExplosionEffect;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float ReleaseDelay;

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x1F4AFF8", Offset = "0x1F4AFF8", VA = "0x1F4AFF8", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x1F4B02C", Offset = "0x1F4B02C", VA = "0x1F4B02C", Slot = "18")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x1F4B060", Offset = "0x1F4B060", VA = "0x1F4B060", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x1F4B068", Offset = "0x1F4B068", VA = "0x1F4B068")]
	public ExplosionEffectWater()
	{
	}
}
[Token(Token = "0x20001E8")]
public class FreezeEffect : CellEffect
{
	[Token(Token = "0x40009DC")]
	public const int POOL_SIZE = 8;

	[Token(Token = "0x40009DD")]
	public const float TIME_FREEZE_EFFECT_CHANGED = 0.5f;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem EffectIce;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource PlaySound;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource StopSound;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _isActive;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TimerEvent _timerEvent;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MultiPrefabPool<PluginType, FreezeEffect> _pool;

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x1F3B208", Offset = "0x1F3B208", VA = "0x1F3B208")]
	public static FreezeEffect Get(PluginType type)
	{
		return null;
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x1F3B28C", Offset = "0x1F3B28C", VA = "0x1F3B28C", Slot = "12")]
	public override void OnCreate(Action turnBackEvent)
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x1F3B318", Offset = "0x1F3B318", VA = "0x1F3B318")]
	public static void Register(PluginType type, GameObject prefab, [Optional] Transform poolRoot, int defaultSize = 0)
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x1F3B3C4", Offset = "0x1F3B3C4", VA = "0x1F3B3C4", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x1F3B494", Offset = "0x1F3B494", VA = "0x1F3B494", Slot = "18")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x1F3B548", Offset = "0x1F3B548", VA = "0x1F3B548")]
	private void PauseSystem()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x1F3B564", Offset = "0x1F3B564", VA = "0x1F3B564", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x1F3B5A4", Offset = "0x1F3B5A4", VA = "0x1F3B5A4", Slot = "13")]
	public override void Release()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x1F3B5F4", Offset = "0x1F3B5F4", VA = "0x1F3B5F4", Slot = "11")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x1F3B5FC", Offset = "0x1F3B5FC", VA = "0x1F3B5FC")]
	public FreezeEffect()
	{
	}
}
[Token(Token = "0x20001E9")]
public class FreezeEffectSounds : MonoBehaviour
{
	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AudioClip> FreezeClips;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<AudioClip> UnfreezeClips;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Playhead;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float SoundVolume;

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x1F3B678", Offset = "0x1F3B678", VA = "0x1F3B678")]
	public void PlayFreezeSound()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x1F3B7CC", Offset = "0x1F3B7CC", VA = "0x1F3B7CC")]
	public void PlayUnfreezeSound()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x1F3B708", Offset = "0x1F3B708", VA = "0x1F3B708")]
	private void PlaySound(AudioClip clip)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x1F3B85C", Offset = "0x1F3B85C", VA = "0x1F3B85C")]
	public FreezeEffectSounds()
	{
	}
}
[Token(Token = "0x20001EA")]
public abstract class HighlightEffect : CellEffect
{
	[Token(Token = "0x40009E8")]
	public const int POOL_SIZE = 128;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource SourceFromAudio;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RunePitchSound Pitch;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MultiPrefabPool<PluginType, HighlightEffect> _pool;

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x1F4805C", Offset = "0x1F4805C", VA = "0x1F4805C")]
	public static HighlightEffect Get(PluginType type)
	{
		return null;
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x1F480E0", Offset = "0x1F480E0", VA = "0x1F480E0")]
	public static void Register(PluginType type, GameObject prefab, [Optional] Transform poolRoot, int defaultSize = 0)
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x1F4818C", Offset = "0x1F4818C", VA = "0x1F4818C", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x1F48314", Offset = "0x1F48314", VA = "0x1F48314")]
	private void PlayRandomSound()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x1F48328", Offset = "0x1F48328", VA = "0x1F48328")]
	protected HighlightEffect()
	{
	}
}
[Token(Token = "0x20001EB")]
public class HighlightEffectBonusNone : HighlightEffect
{
	[Token(Token = "0x40009EC")]
	public const float HIGHLIGHT_BASE_ALPHA = 0.05f;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float HIGHLIGHT_TIME;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SpriteRenderer _sprite;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color _spriteColor;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _up;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool _down;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool _upMoveActive;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	private bool _downMoveActive;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TimerUpdateEvent _alphaUp;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TimerUpdateEvent _alphaDown;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _startAlpha;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _endAlpha;

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x1F483A4", Offset = "0x1F483A4", VA = "0x1F483A4", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x1F4875C", Offset = "0x1F4875C", VA = "0x1F4875C", Slot = "18")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x1F488A0", Offset = "0x1F488A0", VA = "0x1F488A0", Slot = "13")]
	public override void Release()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x1F489D8", Offset = "0x1F489D8", VA = "0x1F489D8")]
	private void AlphaUp(float percent, float targetTime)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x1F48A44", Offset = "0x1F48A44", VA = "0x1F48A44")]
	private void AlphaDown(float percent, float targetTime)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x1F48688", Offset = "0x1F48688", VA = "0x1F48688")]
	private float GetRemainingTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x1F48508", Offset = "0x1F48508", VA = "0x1F48508")]
	private void Init(Cell cell)
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x1F489D0", Offset = "0x1F489D0", VA = "0x1F489D0")]
	private Color GetColorWithAlpha(Color color, float alpha)
	{
		return default(Color);
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x1F48AD0", Offset = "0x1F48AD0", VA = "0x1F48AD0")]
	public HighlightEffectBonusNone()
	{
	}
}
[Token(Token = "0x20001EC")]
public class Impulse : MonoBehaviour
{
	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform PlaceOfImpulse;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MinForce;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MaxForce;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Impulse _instance;

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x1EDD7AC", Offset = "0x1EDD7AC", VA = "0x1EDD7AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x1EDD800", Offset = "0x1EDD800", VA = "0x1EDD800")]
	public static Transform GetPlaceOnImpulse()
	{
		return null;
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x1EDD85C", Offset = "0x1EDD85C", VA = "0x1EDD85C")]
	public static float GetImpulseForce()
	{
		return default(float);
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x1EDD8BC", Offset = "0x1EDD8BC", VA = "0x1EDD8BC")]
	public Impulse()
	{
	}
}
[Token(Token = "0x20001ED")]
public class NotInteractiveEffect : CellEffect
{
	[Token(Token = "0x40009FC")]
	public const int POOL_SIZE = 8;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MultiPrefabPool<PluginType, NotInteractiveEffect> _pool;

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xE157F8", Offset = "0xE157F8", VA = "0xE157F8")]
	public static NotInteractiveEffect Get(PluginType type)
	{
		return null;
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xE1587C", Offset = "0xE1587C", VA = "0xE1587C")]
	public static void Register(PluginType type, GameObject prefab, [Optional] Transform poolRoot, int defaultSize = 0)
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xE15928", Offset = "0xE15928", VA = "0xE15928")]
	public NotInteractiveEffect()
	{
	}
}
[Token(Token = "0x20001EE")]
public class ScatteringEffect : DespawnEffect
{
	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MultiPrefabPool<PluginType, ScatteringEffect> _pool;

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xD49B54", Offset = "0xD49B54", VA = "0xD49B54")]
	public new static ScatteringEffect Get(PluginType type)
	{
		return null;
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xD42BAC", Offset = "0xD42BAC", VA = "0xD42BAC")]
	public new static void Register(PluginType type, GameObject prefab, [Optional] Transform poolRoot, int defaultSize = 0)
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xD49BD8", Offset = "0xD49BD8", VA = "0xD49BD8", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xD49D50", Offset = "0xD49D50", VA = "0xD49D50", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xD49D5C", Offset = "0xD49D5C", VA = "0xD49D5C")]
	public ScatteringEffect()
	{
	}
}
[Token(Token = "0x20001EF")]
public class ScatteringEffectWithCustomImpulse : DespawnEffect
{
	[Token(Token = "0x20003BA")]
	public enum CustomScatteringType
	{
		[Token(Token = "0x4001269")]
		DefaultBehaviour,
		[Token(Token = "0x400126A")]
		SphereBoom
	}

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float DespawnPlayTime;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private CustomScatteringType _scatteringType;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _forceDirection;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _forcePower;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _explosionRadius;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _despawnTime;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static PrefabPool<ScatteringEffectWithCustomImpulse> _pool;

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xD49E38", Offset = "0xD49E38", VA = "0xD49E38")]
	public static void InitPool(PrefabPool<ScatteringEffectWithCustomImpulse> pool)
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xD49EA4", Offset = "0xD49EA4", VA = "0xD49EA4")]
	public static ScatteringEffectWithCustomImpulse Get()
	{
		return null;
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xD49F1C", Offset = "0xD49F1C", VA = "0xD49F1C")]
	public void Init(Vector3 forceDirection, float forcePower, CustomScatteringType scatteringType = CustomScatteringType.DefaultBehaviour)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xD49F2C", Offset = "0xD49F2C", VA = "0xD49F2C", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xD4A0A8", Offset = "0xD4A0A8", VA = "0xD4A0A8", Slot = "19")]
	public override float GetReleaseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xD4A0B0", Offset = "0xD4A0B0", VA = "0xD4A0B0", Slot = "11")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xD4A12C", Offset = "0xD4A12C", VA = "0xD4A12C")]
	public void SetExplosionRadius(float explosionRadius)
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xD4A134", Offset = "0xD4A134", VA = "0xD4A134")]
	public void SetCustomDespawnTime(float customReleaseTime)
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xD49F8C", Offset = "0xD49F8C", VA = "0xD49F8C")]
	private void ApplyForceToCellRigidbody(Rigidbody body)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xD4A13C", Offset = "0xD4A13C", VA = "0xD4A13C")]
	public ScatteringEffectWithCustomImpulse()
	{
	}
}
[Token(Token = "0x20001F0")]
public class SpawnEffect : CellEffect
{
	[Token(Token = "0x4000A06")]
	public const int POOL_SIZE = 128;

	[Token(Token = "0x4000A07")]
	public const float SPAWN_SCALE_TIME = 0.5f;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource SpawnSound;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MultiPrefabPool<PluginType, SpawnEffect> _pool;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected TimerUpdateEvent _timerEvent;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector3 _startScale;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CellVisualizer _cellVisualizer;

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xDF8698", Offset = "0xDF8698", VA = "0xDF8698")]
	public static SpawnEffect Get(PluginType type)
	{
		return null;
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xDF871C", Offset = "0xDF871C", VA = "0xDF871C")]
	public static void Register(PluginType type, GameObject prefab, [Optional] Transform poolRoot, int defaultSize = 0)
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xDF87C8", Offset = "0xDF87C8", VA = "0xDF87C8")]
	public void PlaySpawnSound()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xDF885C", Offset = "0xDF885C", VA = "0xDF885C", Slot = "17")]
	public override void Play(Cell cell)
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xDF8898", Offset = "0xDF8898", VA = "0xDF8898", Slot = "13")]
	public override void Release()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xDF895C", Offset = "0xDF895C", VA = "0xDF895C", Slot = "20")]
	protected virtual void OnPlay(Cell cell)
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xDF8980", Offset = "0xDF8980", VA = "0xDF8980")]
	protected void PrepareToScaleIn(Cell cell)
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xDF8A54", Offset = "0xDF8A54", VA = "0xDF8A54")]
	protected void StartScaleIn()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xDF8AC4", Offset = "0xDF8AC4", VA = "0xDF8AC4")]
	private void SetBaseConfiguration(Cell cell)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xDF8B14", Offset = "0xDF8B14", VA = "0xDF8B14")]
	private void TimerUpdate(float percent, float targetTime)
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xDF8BF8", Offset = "0xDF8BF8", VA = "0xDF8BF8")]
	public SpawnEffect()
	{
	}
}
[Token(Token = "0x20001F1")]
public class SpawnEffectWithPartticleEffect : SpawnEffect, IUpdatable
{
	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem SpawnEffect;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float DelayTime;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float SpawnTime;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TimerEvent _onParticleSpawnEffectComplete;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TimerEvent _onSpawnEffectComplete;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform _target;

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xDF8C74", Offset = "0xDF8C74", VA = "0xDF8C74", Slot = "12")]
	public override void OnCreate(Action turnBackEvent)
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xDF8D30", Offset = "0xDF8D30", VA = "0xDF8D30", Slot = "20")]
	protected override void OnPlay(Cell cell)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xDF8E08", Offset = "0xDF8E08", VA = "0xDF8E08")]
	private void OnParticleSpawnEffectComplete()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xDF8E0C", Offset = "0xDF8E0C", VA = "0xDF8E0C")]
	private void OnSpawnEffectComplete()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xDF8E74", Offset = "0xDF8E74", VA = "0xDF8E74", Slot = "13")]
	public override void Release()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xDF8EF8", Offset = "0xDF8EF8", VA = "0xDF8EF8", Slot = "21")]
	public void OnUpdate()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xDF8F44", Offset = "0xDF8F44", VA = "0xDF8F44")]
	public SpawnEffectWithPartticleEffect()
	{
	}
}
[Token(Token = "0x20001F2")]
public abstract class CellPlugin : PoolableBehaviour
{
	[Token(Token = "0x4000A13")]
	public const int POOL_SIZE = 128;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MultiPrefabPool<PluginType, CellPlugin> _pool;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _onImpact;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Action<Field, Cell> _impact;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Action<Field, Cell> _text;

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x1F1E158", Offset = "0x1F1E158", VA = "0x1F1E158")]
	public static CellPlugin Get(PluginType type)
	{
		return null;
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x1F1E1DC", Offset = "0x1F1E1DC", VA = "0x1F1E1DC")]
	public static void Register(PluginType type, GameObject prefab, [Optional] Transform poolRoot, int defaultSize = 0)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x1F1E288", Offset = "0x1F1E288", VA = "0x1F1E288", Slot = "17")]
	public virtual void OnInit(Cell cell)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x1F1E298", Offset = "0x1F1E298", VA = "0x1F1E298", Slot = "18")]
	public virtual void OnCellTypeChange(Cell cell)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x1F1E2A8", Offset = "0x1F1E2A8", VA = "0x1F1E2A8", Slot = "19")]
	public virtual void OnFinalize(Cell cell)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x1F1E2B8", Offset = "0x1F1E2B8", VA = "0x1F1E2B8", Slot = "20")]
	public virtual void OnRemove(Cell cell)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x1F1E2BC", Offset = "0x1F1E2BC", VA = "0x1F1E2BC", Slot = "21")]
	public virtual bool OnExplode(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x1F1E2C4", Offset = "0x1F1E2C4", VA = "0x1F1E2C4", Slot = "22")]
	public virtual void OnImpactNeighbours(Cell cell)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x1F1E388", Offset = "0x1F1E388", VA = "0x1F1E388")]
	public static void HelperImpactCell(Field field, Cell cell)
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x1F1E3A8", Offset = "0x1F1E3A8", VA = "0x1F1E3A8", Slot = "23")]
	public virtual void OnImpact(Cell cell, Coordinates impactCellCoordinate)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x1F1E3AC", Offset = "0x1F1E3AC", VA = "0x1F1E3AC", Slot = "11")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x1F1E3D4", Offset = "0x1F1E3D4", VA = "0x1F1E3D4", Slot = "24")]
	public virtual void OnUpdate(Cell cell)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x1F1E3D8", Offset = "0x1F1E3D8", VA = "0x1F1E3D8", Slot = "25")]
	public virtual void OnMove(Cell cell, Field field, Coordinates from, Coordinates to, bool isInteraction)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x1F1E3DC", Offset = "0x1F1E3DC", VA = "0x1F1E3DC", Slot = "26")]
	public virtual void OnMoveEnd(Cell cell, Field field)
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x1F1E3E0", Offset = "0x1F1E3E0", VA = "0x1F1E3E0", Slot = "27")]
	protected virtual void ClearAdditionalEffect(Cell cell)
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x1F1E40C", Offset = "0x1F1E40C", VA = "0x1F1E40C", Slot = "28")]
	protected virtual void SetNewVisualModules(Cell cell)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x1F1E658", Offset = "0x1F1E658", VA = "0x1F1E658", Slot = "29")]
	protected virtual bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x1F1E660", Offset = "0x1F1E660", VA = "0x1F1E660", Slot = "30")]
	protected virtual bool TryGetNewDespawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x1F1E668", Offset = "0x1F1E668", VA = "0x1F1E668", Slot = "31")]
	protected virtual bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x1F1E670", Offset = "0x1F1E670", VA = "0x1F1E670", Slot = "32")]
	protected virtual bool TryGetNewHighlightEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x1F1E678", Offset = "0x1F1E678", VA = "0x1F1E678", Slot = "33")]
	protected virtual bool TryGetNewAdditionalEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x1F1E680", Offset = "0x1F1E680", VA = "0x1F1E680", Slot = "34")]
	protected virtual bool TryGetNewNotInteractiveEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x1F1E688", Offset = "0x1F1E688", VA = "0x1F1E688", Slot = "35")]
	protected virtual bool TryGetNewFreezeEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x1F1E690", Offset = "0x1F1E690", VA = "0x1F1E690", Slot = "36")]
	protected virtual bool TryGetNewSpawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x1F1E698", Offset = "0x1F1E698", VA = "0x1F1E698", Slot = "37")]
	protected virtual CellVisualizer GetCellVisualizer(Cell cell)
	{
		return null;
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x1F1E8F0", Offset = "0x1F1E8F0", VA = "0x1F1E8F0", Slot = "38")]
	protected virtual DespawnEffect GetDespawnEffect(Cell cell)
	{
		return null;
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x1F1E964", Offset = "0x1F1E964", VA = "0x1F1E964", Slot = "39")]
	protected virtual ExplosionEffect GetExplosionEffect(Cell cell)
	{
		return null;
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x1F1EA58", Offset = "0x1F1EA58", VA = "0x1F1EA58", Slot = "40")]
	protected virtual HighlightEffect GetHighlightEffect(Cell cell)
	{
		return null;
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x1F1EACC", Offset = "0x1F1EACC", VA = "0x1F1EACC", Slot = "41")]
	protected virtual AdditionalEffect GetAdditionalEffect(Cell cell)
	{
		return null;
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x1F1EB40", Offset = "0x1F1EB40", VA = "0x1F1EB40", Slot = "42")]
	protected virtual NotInteractiveEffect GetNotInteractiveEffect(Cell cell)
	{
		return null;
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x1F1EBB4", Offset = "0x1F1EBB4", VA = "0x1F1EBB4", Slot = "43")]
	protected virtual FreezeEffect GetFreezeEffect(Cell cell)
	{
		return null;
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x1F1EC28", Offset = "0x1F1EC28", VA = "0x1F1EC28", Slot = "44")]
	protected virtual SpawnEffect GetSpawnEffect(Cell cell)
	{
		return null;
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x1F1ECB8", Offset = "0x1F1ECB8", VA = "0x1F1ECB8", Slot = "45")]
	protected virtual void ReparentToCell(Cell cell, CellVisualizer visualizer)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x1F1EEA0", Offset = "0x1F1EEA0", VA = "0x1F1EEA0")]
	protected CellPlugin()
	{
	}
}
[Token(Token = "0x20001F3")]
public class CellPluginArtifact : CellPlugin
{
	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Coordinates> _targetCoordinates;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _cellCanBeExploded;

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x1F1EFF4", Offset = "0x1F1EFF4", VA = "0x1F1EFF4", Slot = "17")]
	public override void OnInit(Cell cell)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x1F1F0B4", Offset = "0x1F1F0B4", VA = "0x1F1F0B4", Slot = "22")]
	public override void OnImpactNeighbours(Cell cell)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x1F1F0B8", Offset = "0x1F1F0B8", VA = "0x1F1F0B8", Slot = "21")]
	public override bool OnExplode(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x1F1F0C0", Offset = "0x1F1F0C0", VA = "0x1F1F0C0", Slot = "11")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x1F1F0EC", Offset = "0x1F1F0EC", VA = "0x1F1F0EC", Slot = "26")]
	public override void OnMoveEnd(Cell cell, Field field)
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x1F1F24C", Offset = "0x1F1F24C", VA = "0x1F1F24C", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x1F1F254", Offset = "0x1F1F254", VA = "0x1F1F254", Slot = "30")]
	protected override bool TryGetNewDespawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x1F1F25C", Offset = "0x1F1F25C", VA = "0x1F1F25C", Slot = "31")]
	protected override bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x1F1F198", Offset = "0x1F1F198", VA = "0x1F1F198")]
	private bool InTargetCoordinates(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x1F1F264", Offset = "0x1F1F264", VA = "0x1F1F264")]
	public CellPluginArtifact()
	{
	}
}
[Token(Token = "0x20001F4")]
public class CellPluginBonusCrossElement : CellPlugin
{
	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<PluginType> CrossBlockingTypes;

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x1F1F2C8", Offset = "0x1F1F2C8", VA = "0x1F1F2C8", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x1F1F2D0", Offset = "0x1F1F2D0", VA = "0x1F1F2D0", Slot = "33")]
	protected override bool TryGetNewAdditionalEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x1F1F2D8", Offset = "0x1F1F2D8", VA = "0x1F1F2D8", Slot = "31")]
	protected override bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x1F1F2E0", Offset = "0x1F1F2E0", VA = "0x1F1F2E0", Slot = "36")]
	protected override bool TryGetNewSpawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x1F1F2E8", Offset = "0x1F1F2E8", VA = "0x1F1F2E8", Slot = "41")]
	protected override AdditionalEffect GetAdditionalEffect(Cell cell)
	{
		return null;
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x1F1F32C", Offset = "0x1F1F32C", VA = "0x1F1F32C", Slot = "21")]
	public override bool OnExplode(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x1F1F374", Offset = "0x1F1F374", VA = "0x1F1F374")]
	private void NotifyCrossEffectCells(Cell cell, Field field)
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x1F1F3C0", Offset = "0x1F1F3C0", VA = "0x1F1F3C0")]
	private void NotifyRow(int startCol, int rowIndex, Field field)
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x1F1F4E4", Offset = "0x1F1F4E4", VA = "0x1F1F4E4")]
	private void NotifyCol(int startRow, int colIndex, Field field)
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x1F1F5F8", Offset = "0x1F1F5F8", VA = "0x1F1F5F8")]
	private bool CheckCellForBlockingTypeAndNotify(Cell checkCell, Field field)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x1F1F6C4", Offset = "0x1F1F6C4", VA = "0x1F1F6C4")]
	private bool BlockingListCheck(PluginType cellPlugin)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x1F1F768", Offset = "0x1F1F768", VA = "0x1F1F768")]
	public CellPluginBonusCrossElement()
	{
	}
}
[Token(Token = "0x20001F5")]
public class CellPluginBonusFlameElement : CellPlugin
{
	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x1F1F7CC", Offset = "0x1F1F7CC", VA = "0x1F1F7CC", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x1F1F7D4", Offset = "0x1F1F7D4", VA = "0x1F1F7D4", Slot = "33")]
	protected override bool TryGetNewAdditionalEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x1F1F7DC", Offset = "0x1F1F7DC", VA = "0x1F1F7DC", Slot = "31")]
	protected override bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x1F1F7E4", Offset = "0x1F1F7E4", VA = "0x1F1F7E4", Slot = "36")]
	protected override bool TryGetNewSpawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x1F1F7EC", Offset = "0x1F1F7EC", VA = "0x1F1F7EC", Slot = "41")]
	protected override AdditionalEffect GetAdditionalEffect(Cell cell)
	{
		return null;
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x1F1F830", Offset = "0x1F1F830", VA = "0x1F1F830", Slot = "21")]
	public override bool OnExplode(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x1F1F878", Offset = "0x1F1F878", VA = "0x1F1F878")]
	private void NotifyFlameEffectCells(Cell cell, Field field)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x1F1F914", Offset = "0x1F1F914", VA = "0x1F1F914")]
	private void ExplodeNeighbour(Field field, Cell cell, Direction direction)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x1F1F9D8", Offset = "0x1F1F9D8", VA = "0x1F1F9D8")]
	public CellPluginBonusFlameElement()
	{
	}
}
[Token(Token = "0x20001F6")]
public class CellPluginBonusHyperElement : CellPlugin
{
	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coordinates _movedFrom;

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x1F1FA3C", Offset = "0x1F1FA3C", VA = "0x1F1FA3C", Slot = "17")]
	public override void OnInit(Cell cell)
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x1F1FA7C", Offset = "0x1F1FA7C", VA = "0x1F1FA7C", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x1F1FA84", Offset = "0x1F1FA84", VA = "0x1F1FA84", Slot = "31")]
	protected override bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x1F1FA8C", Offset = "0x1F1FA8C", VA = "0x1F1FA8C", Slot = "36")]
	protected override bool TryGetNewSpawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x1F1FA94", Offset = "0x1F1FA94", VA = "0x1F1FA94", Slot = "25")]
	public override void OnMove(Cell cell, Field field, Coordinates from, Coordinates to, bool isInteraction)
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x1F1FA9C", Offset = "0x1F1FA9C", VA = "0x1F1FA9C", Slot = "21")]
	public override bool OnExplode(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x1F1FADC", Offset = "0x1F1FADC", VA = "0x1F1FADC")]
	private void NotifyHyperEffectCells(Field field)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x1F1FCB4", Offset = "0x1F1FCB4", VA = "0x1F1FCB4")]
	public CellPluginBonusHyperElement()
	{
	}
}
[Token(Token = "0x20001F7")]
public class CellPluginBonusMegaElement : CellPlugin
{
	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<PluginType> MegaIgnoreTypes;

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x1F1FD18", Offset = "0x1F1FD18", VA = "0x1F1FD18", Slot = "17")]
	public override void OnInit(Cell cell)
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x1F1FD58", Offset = "0x1F1FD58", VA = "0x1F1FD58", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x1F1FD60", Offset = "0x1F1FD60", VA = "0x1F1FD60", Slot = "31")]
	protected override bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x1F1FD68", Offset = "0x1F1FD68", VA = "0x1F1FD68", Slot = "36")]
	protected override bool TryGetNewSpawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x1F1FD70", Offset = "0x1F1FD70", VA = "0x1F1FD70", Slot = "21")]
	public override bool OnExplode(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x1F1FDB0", Offset = "0x1F1FDB0", VA = "0x1F1FDB0")]
	private void NotifyMegaEffectCells(Field field)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x1F1FE88", Offset = "0x1F1FE88", VA = "0x1F1FE88")]
	private bool CheckCellForBlockingType(Cell checkCell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x1F1FF90", Offset = "0x1F1FF90", VA = "0x1F1FF90")]
	public CellPluginBonusMegaElement()
	{
	}
}
[Token(Token = "0x20001F8")]
public class CellPluginChristmasTreeToy : CellPlugin
{
	[Token(Token = "0x20003BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAA48", Offset = "0xAFAA48")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CellVisualizerChristamsTreeToy tmpVisualizer;

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x1F20630", Offset = "0x1F20630", VA = "0x1F20630")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x1F2084C", Offset = "0x1F2084C", VA = "0x1F2084C")]
		internal void <OnExplode>b__0()
		{
		}
	}

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float FlySpeed;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float RotateTime;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float ScaleMultiplayer;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve Curve;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Cell _cell;

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x1F1FFF4", Offset = "0x1F1FFF4", VA = "0x1F1FFF4", Slot = "11")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x1F20090", Offset = "0x1F20090", VA = "0x1F20090", Slot = "17")]
	public override void OnInit(Cell cell)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x1F200C4", Offset = "0x1F200C4", VA = "0x1F200C4", Slot = "18")]
	public override void OnCellTypeChange(Cell cell)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x1F200F8", Offset = "0x1F200F8", VA = "0x1F200F8", Slot = "30")]
	protected override bool TryGetNewDespawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x1F20100", Offset = "0x1F20100", VA = "0x1F20100", Slot = "31")]
	protected override bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x1F20108", Offset = "0x1F20108", VA = "0x1F20108", Slot = "22")]
	public override void OnImpactNeighbours(Cell cell)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x1F2010C", Offset = "0x1F2010C", VA = "0x1F2010C", Slot = "21")]
	public override bool OnExplode(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x1F207D4", Offset = "0x1F207D4", VA = "0x1F207D4")]
	public CellPluginChristmasTreeToy()
	{
	}
}
[Token(Token = "0x20001F9")]
public class CellPluginCloud : CellPlugin
{
	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x1F20890", Offset = "0x1F20890", VA = "0x1F20890", Slot = "17")]
	public override void OnInit(Cell cell)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x1F208D8", Offset = "0x1F208D8", VA = "0x1F208D8", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x1F208E0", Offset = "0x1F208E0", VA = "0x1F208E0", Slot = "36")]
	protected override bool TryGetNewSpawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x1F208E8", Offset = "0x1F208E8", VA = "0x1F208E8", Slot = "30")]
	protected override bool TryGetNewDespawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x1F208F0", Offset = "0x1F208F0", VA = "0x1F208F0", Slot = "21")]
	public override bool OnExplode(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x1F208F8", Offset = "0x1F208F8", VA = "0x1F208F8")]
	public CellPluginCloud()
	{
	}
}
[Token(Token = "0x20001FA")]
public class CellPluginCloudStorm : CellPluginCloud
{
	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x1F2095C", Offset = "0x1F2095C", VA = "0x1F2095C", Slot = "33")]
	protected override bool TryGetNewAdditionalEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x1F20964", Offset = "0x1F20964", VA = "0x1F20964", Slot = "23")]
	public override void OnImpact(Cell cell, Coordinates impactCellCoordinate)
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x1F20968", Offset = "0x1F20968", VA = "0x1F20968")]
	private void SummonLightning(Cell cell, Coordinates impactCellCoordinate)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x1F20A54", Offset = "0x1F20A54", VA = "0x1F20A54")]
	public CellPluginCloudStorm()
	{
	}
}
[Token(Token = "0x20001FB")]
public class CellPluginDarkEnergyElement : CellPlugin
{
	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x1F20A58", Offset = "0x1F20A58", VA = "0x1F20A58", Slot = "17")]
	public override void OnInit(Cell cell)
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x1F20AA8", Offset = "0x1F20AA8", VA = "0x1F20AA8", Slot = "36")]
	protected override bool TryGetNewSpawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x1F20AB0", Offset = "0x1F20AB0", VA = "0x1F20AB0", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x1F20AB8", Offset = "0x1F20AB8", VA = "0x1F20AB8", Slot = "31")]
	protected override bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x1F20AC0", Offset = "0x1F20AC0", VA = "0x1F20AC0", Slot = "23")]
	public override void OnImpact(Cell cell, Coordinates impactCellCoordinate)
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x1F20ADC", Offset = "0x1F20ADC", VA = "0x1F20ADC")]
	public CellPluginDarkEnergyElement()
	{
	}
}
[Token(Token = "0x20001FC")]
public class CellPluginDarkEnergyGenerator : CellPlugin
{
	[Token(Token = "0x4000A22")]
	private const int CACHE_LIST_CAPACITY = 8;

	[Token(Token = "0x4000A23")]
	private const int TICK_DAMAGE = -1;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xAFCA30", Offset = "0xAFCA30")]
	public int DefaultHealth;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCA44", Offset = "0xAFCA44")]
	public float ChanceToGenerateDarkness;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float ShakeDuration;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 ShakePower;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _directionEnumLength;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Cell> _cacheList;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coordinates _myCurrentCoordinates;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _currentHealth;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool _wasHit;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 _defaultScale;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Tween _currentTween;

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x1F20B40", Offset = "0x1F20B40", VA = "0x1F20B40", Slot = "17")]
	public override void OnInit(Cell cell)
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x1F20DB8", Offset = "0x1F20DB8", VA = "0x1F20DB8", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x1F20DC0", Offset = "0x1F20DC0", VA = "0x1F20DC0", Slot = "31")]
	protected override bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x1F20DC8", Offset = "0x1F20DC8", VA = "0x1F20DC8", Slot = "21")]
	public override bool OnExplode(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x1F20F8C", Offset = "0x1F20F8C", VA = "0x1F20F8C", Slot = "23")]
	public override void OnImpact(Cell cell, Coordinates impactCellCoordinate)
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x1F20FE0", Offset = "0x1F20FE0", VA = "0x1F20FE0")]
	public void SetDefaultHealth(int health)
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x1F20FEC", Offset = "0x1F20FEC", VA = "0x1F20FEC")]
	public int GetDefaultHealth()
	{
		return default(int);
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x1F20FF4", Offset = "0x1F20FF4", VA = "0x1F20FF4")]
	public int GetCurrentHealth()
	{
		return default(int);
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x1F20E10", Offset = "0x1F20E10", VA = "0x1F20E10")]
	private void ChangeHealth(int healthChangeValue, Cell cell)
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x1F21120", Offset = "0x1F21120", VA = "0x1F21120", Slot = "19")]
	public override void OnFinalize(Cell cell)
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x1F20FFC", Offset = "0x1F20FFC", VA = "0x1F20FFC")]
	private void PlayEffect(int healthChangeValue, Cell cell)
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x1F20F04", Offset = "0x1F20F04", VA = "0x1F20F04")]
	private bool CheckHealth()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x1F21158", Offset = "0x1F21158", VA = "0x1F21158")]
	private void DoGeneratorLogic(Field field)
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x1F21368", Offset = "0x1F21368", VA = "0x1F21368")]
	private void TryToRegenerate(Field field)
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x1F21194", Offset = "0x1F21194", VA = "0x1F21194")]
	private void TryGenerateDarkness(Field field)
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x1F20CB8", Offset = "0x1F20CB8", VA = "0x1F20CB8")]
	private void SetEffectIntensity(Cell cell)
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x1F20F14", Offset = "0x1F20F14", VA = "0x1F20F14")]
	private void UnsubscribeFromFieldEvent()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x1F214B4", Offset = "0x1F214B4", VA = "0x1F214B4")]
	public CellPluginDarkEnergyGenerator()
	{
	}
}
[Token(Token = "0x20001FD")]
public class CellPluginDestructibleStoneBlock : CellPlugin
{
	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x1F21618", Offset = "0x1F21618", VA = "0x1F21618", Slot = "17")]
	public override void OnInit(Cell cell)
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x1F21668", Offset = "0x1F21668", VA = "0x1F21668", Slot = "30")]
	protected override bool TryGetNewDespawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x1F21670", Offset = "0x1F21670", VA = "0x1F21670", Slot = "31")]
	protected override bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x1F21678", Offset = "0x1F21678", VA = "0x1F21678", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x1F21680", Offset = "0x1F21680", VA = "0x1F21680", Slot = "21")]
	public override bool OnExplode(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x1F2168C", Offset = "0x1F2168C", VA = "0x1F2168C", Slot = "23")]
	public override void OnImpact(Cell cell, Coordinates impactCellCoordinate)
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x1F216A8", Offset = "0x1F216A8", VA = "0x1F216A8", Slot = "22")]
	public override void OnImpactNeighbours(Cell cell)
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x1F21688", Offset = "0x1F21688", VA = "0x1F21688")]
	public void DoOnExplode(Cell cell)
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x1F216AC", Offset = "0x1F216AC", VA = "0x1F216AC")]
	public CellPluginDestructibleStoneBlock()
	{
	}
}
[Token(Token = "0x20001FE")]
public class CellPluginFirefly : CellPlugin
{
	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x1F222A0", Offset = "0x1F222A0", VA = "0x1F222A0", Slot = "17")]
	public override void OnInit(Cell cell)
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x1F222F0", Offset = "0x1F222F0", VA = "0x1F222F0", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x1F222F8", Offset = "0x1F222F8", VA = "0x1F222F8", Slot = "30")]
	protected override bool TryGetNewDespawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x1F22300", Offset = "0x1F22300", VA = "0x1F22300", Slot = "31")]
	protected override bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x1F22308", Offset = "0x1F22308", VA = "0x1F22308", Slot = "21")]
	public override bool OnExplode(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x1F223C4", Offset = "0x1F223C4", VA = "0x1F223C4", Slot = "23")]
	public override void OnImpact(Cell cell, Coordinates impactCellCoordinate)
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x1F223E0", Offset = "0x1F223E0", VA = "0x1F223E0", Slot = "22")]
	public override void OnImpactNeighbours(Cell cell)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x1F22320", Offset = "0x1F22320", VA = "0x1F22320")]
	public void DoOnExplode(Cell cell)
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x1F223E4", Offset = "0x1F223E4", VA = "0x1F223E4")]
	public CellPluginFirefly()
	{
	}
}
[Token(Token = "0x20001FF")]
public class CellPluginFireflyWithHealth : CellPlugin
{
	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAA58", Offset = "0xAFAA58")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Cell cell;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CellPluginFireflyWithHealth <>4__this;

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x1F22704", Offset = "0x1F22704", VA = "0x1F22704")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x1F22AD0", Offset = "0x1F22AD0", VA = "0x1F22AD0")]
		internal void <OnInit>b__0()
		{
		}
	}

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int Health;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float PunchDuration;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve PunchCurve;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float PunchPower;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 _defaultScale;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Tween _currentTween;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _currentHealth;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CellVisualizerFireflyWithHealth _visualizer;

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x1F22448", Offset = "0x1F22448", VA = "0x1F22448", Slot = "17")]
	public override void OnInit(Cell cell)
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x1F22804", Offset = "0x1F22804", VA = "0x1F22804", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x1F2280C", Offset = "0x1F2280C", VA = "0x1F2280C", Slot = "30")]
	protected override bool TryGetNewDespawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x1F22814", Offset = "0x1F22814", VA = "0x1F22814", Slot = "31")]
	protected override bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x1F2281C", Offset = "0x1F2281C", VA = "0x1F2281C", Slot = "21")]
	public override bool OnExplode(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x1F228D8", Offset = "0x1F228D8", VA = "0x1F228D8", Slot = "23")]
	public override void OnImpact(Cell cell, Coordinates impactCellCoordinate)
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x1F22A50", Offset = "0x1F22A50", VA = "0x1F22A50", Slot = "22")]
	public override void OnImpactNeighbours(Cell cell)
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x1F22834", Offset = "0x1F22834", VA = "0x1F22834")]
	public void DoOnExplode(Cell cell)
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x1F22A54", Offset = "0x1F22A54", VA = "0x1F22A54")]
	public CellPluginFireflyWithHealth()
	{
	}
}
[Token(Token = "0x2000200")]
public class CellPluginHeat : CellPlugin
{
	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _atTheEndOfField;

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x1F22B30", Offset = "0x1F22B30", VA = "0x1F22B30", Slot = "17")]
	public override void OnInit(Cell cell)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x1F22B80", Offset = "0x1F22B80", VA = "0x1F22B80", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x1F22B88", Offset = "0x1F22B88", VA = "0x1F22B88", Slot = "30")]
	protected override bool TryGetNewDespawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x1F22B90", Offset = "0x1F22B90", VA = "0x1F22B90", Slot = "31")]
	protected override bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x1F22B98", Offset = "0x1F22B98", VA = "0x1F22B98", Slot = "22")]
	public override void OnImpactNeighbours(Cell cell)
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x1F22B9C", Offset = "0x1F22B9C", VA = "0x1F22B9C", Slot = "21")]
	public override bool OnExplode(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x1F22BA4", Offset = "0x1F22BA4", VA = "0x1F22BA4", Slot = "26")]
	public override void OnMoveEnd(Cell cell, Field field)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x1F22D20", Offset = "0x1F22D20", VA = "0x1F22D20")]
	public Cell TakeCellFromTheBottom(Field field, int row, int col)
	{
		return null;
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x1F22D98", Offset = "0x1F22D98", VA = "0x1F22D98")]
	private void NotifiedTopCellsExplode(Field field, int row, int col, Cell cell)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x1F22EBC", Offset = "0x1F22EBC", VA = "0x1F22EBC", Slot = "11")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x1F22EE8", Offset = "0x1F22EE8", VA = "0x1F22EE8")]
	public CellPluginHeat()
	{
	}
}
[Token(Token = "0x2000201")]
public class CellPluginHiddenEvents : CellPlugin
{
	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x1F22F4C", Offset = "0x1F22F4C", VA = "0x1F22F4C", Slot = "17")]
	public override void OnInit(Cell cell)
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x1F22FAC", Offset = "0x1F22FAC", VA = "0x1F22FAC", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x1F22FB4", Offset = "0x1F22FB4", VA = "0x1F22FB4", Slot = "21")]
	public override bool OnExplode(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x1F22FD4", Offset = "0x1F22FD4", VA = "0x1F22FD4", Slot = "23")]
	public override void OnImpact(Cell cell, Coordinates impactCellCoordinate)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x1F22FE0", Offset = "0x1F22FE0", VA = "0x1F22FE0", Slot = "22")]
	public override void OnImpactNeighbours(Cell cell)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x1F22FE4", Offset = "0x1F22FE4", VA = "0x1F22FE4")]
	public CellPluginHiddenEvents()
	{
	}
}
[Token(Token = "0x2000202")]
public class CellPluginObjectBase : CellPlugin
{
	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x1F23048", Offset = "0x1F23048", VA = "0x1F23048", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x1F23050", Offset = "0x1F23050", VA = "0x1F23050", Slot = "30")]
	protected override bool TryGetNewDespawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x1F23058", Offset = "0x1F23058", VA = "0x1F23058", Slot = "31")]
	protected override bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x1F23060", Offset = "0x1F23060", VA = "0x1F23060", Slot = "32")]
	protected override bool TryGetNewHighlightEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x1F23068", Offset = "0x1F23068", VA = "0x1F23068", Slot = "36")]
	protected override bool TryGetNewSpawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x1F23070", Offset = "0x1F23070", VA = "0x1F23070", Slot = "21")]
	public override bool OnExplode(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x1F230B0", Offset = "0x1F230B0", VA = "0x1F230B0")]
	public CellPluginObjectBase()
	{
	}
}
[Token(Token = "0x2000203")]
public class CellPluginRainbow : CellPlugin
{
	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TimerEvent _timerCompleted;

	[Token(Token = "0x4000A39")]
	private const float TIME_BETWEEN_LOGIC_ON = 1f;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _isLogicLocked;

	[Token(Token = "0x4000A3B")]
	private const int NEIGHBOUR_COUNT = 8;

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x1F23114", Offset = "0x1F23114", VA = "0x1F23114", Slot = "12")]
	public override void OnCreate(Action turnBackEvent)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x1F231A0", Offset = "0x1F231A0", VA = "0x1F231A0", Slot = "21")]
	public override bool OnExplode(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x1F232F4", Offset = "0x1F232F4", VA = "0x1F232F4", Slot = "23")]
	public override void OnImpact(Cell cell, Coordinates impactCellCoordinate)
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x1F231B8", Offset = "0x1F231B8", VA = "0x1F231B8")]
	private void ChangedCellTypeForNeighbours(Cell cell)
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x1F232F8", Offset = "0x1F232F8", VA = "0x1F232F8")]
	private bool StartTimer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x1F233D4", Offset = "0x1F233D4", VA = "0x1F233D4")]
	private void TimerCompleted()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x1F233DC", Offset = "0x1F233DC", VA = "0x1F233DC", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x1F233E4", Offset = "0x1F233E4", VA = "0x1F233E4", Slot = "30")]
	protected override bool TryGetNewDespawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x1F233EC", Offset = "0x1F233EC", VA = "0x1F233EC", Slot = "36")]
	protected override bool TryGetNewSpawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x1F233F4", Offset = "0x1F233F4", VA = "0x1F233F4", Slot = "31")]
	protected override bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x1F23384", Offset = "0x1F23384", VA = "0x1F23384")]
	private CellType GetRandomCellType(CellType currenCellType)
	{
		return default(CellType);
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x1F233FC", Offset = "0x1F233FC", VA = "0x1F233FC")]
	public CellPluginRainbow()
	{
	}
}
[Token(Token = "0x2000204")]
public class CellPluginSnowflake : CellPlugin
{
	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x1F23460", Offset = "0x1F23460", VA = "0x1F23460", Slot = "17")]
	public override void OnInit(Cell cell)
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x1F234B0", Offset = "0x1F234B0", VA = "0x1F234B0", Slot = "26")]
	public override void OnMoveEnd(Cell cell, Field field)
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x1F2353C", Offset = "0x1F2353C", VA = "0x1F2353C", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x1F23544", Offset = "0x1F23544", VA = "0x1F23544", Slot = "30")]
	protected override bool TryGetNewDespawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x1F2354C", Offset = "0x1F2354C", VA = "0x1F2354C", Slot = "31")]
	protected override bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x1F23554", Offset = "0x1F23554", VA = "0x1F23554", Slot = "22")]
	public override void OnImpactNeighbours(Cell cell)
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x1F23558", Offset = "0x1F23558", VA = "0x1F23558")]
	public CellPluginSnowflake()
	{
	}
}
[Token(Token = "0x2000205")]
public class CellPluginStoneBlock : CellPlugin
{
	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x1F23B68", Offset = "0x1F23B68", VA = "0x1F23B68", Slot = "17")]
	public override void OnInit(Cell cell)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x1F23BB8", Offset = "0x1F23BB8", VA = "0x1F23BB8", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x1F23BC0", Offset = "0x1F23BC0", VA = "0x1F23BC0", Slot = "22")]
	public override void OnImpactNeighbours(Cell cell)
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x1F23BC4", Offset = "0x1F23BC4", VA = "0x1F23BC4", Slot = "21")]
	public override bool OnExplode(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x1F23BCC", Offset = "0x1F23BCC", VA = "0x1F23BCC")]
	public CellPluginStoneBlock()
	{
	}
}
[Token(Token = "0x2000206")]
public class CellPluginWater : CellPlugin
{
	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x1F23C30", Offset = "0x1F23C30", VA = "0x1F23C30", Slot = "17")]
	public override void OnInit(Cell cell)
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x1F23C40", Offset = "0x1F23C40", VA = "0x1F23C40", Slot = "21")]
	public override bool OnExplode(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x1F23CB0", Offset = "0x1F23CB0", VA = "0x1F23CB0", Slot = "23")]
	public override void OnImpact(Cell cell, Coordinates impactCellCoordinate)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x1F23CCC", Offset = "0x1F23CCC", VA = "0x1F23CCC", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x1F23CD4", Offset = "0x1F23CD4", VA = "0x1F23CD4", Slot = "30")]
	protected override bool TryGetNewDespawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x1F23CDC", Offset = "0x1F23CDC", VA = "0x1F23CDC", Slot = "31")]
	protected override bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x1F23CE4", Offset = "0x1F23CE4", VA = "0x1F23CE4")]
	public CellPluginWater()
	{
	}
}
[Token(Token = "0x2000207")]
public class CellPluginDust : CellPlugin
{
	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<Field, Cell> OnValidationStartEvent;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<Field, Cell> OnAllValidationCyclesCompleted;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected int _countValidations;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private BurnCell _burnCell;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CellType _previouseCellType;

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x1F21710", Offset = "0x1F21710", VA = "0x1F21710", Slot = "17")]
	public override void OnInit(Cell cell)
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x1F21790", Offset = "0x1F21790", VA = "0x1F21790", Slot = "19")]
	public override void OnFinalize(Cell cell)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x1F217F4", Offset = "0x1F217F4", VA = "0x1F217F4", Slot = "37")]
	protected override CellVisualizer GetCellVisualizer(Cell cell)
	{
		return null;
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x1F21A10", Offset = "0x1F21A10", VA = "0x1F21A10", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x1F21A18", Offset = "0x1F21A18", VA = "0x1F21A18", Slot = "30")]
	protected override bool TryGetNewDespawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x1F21A20", Offset = "0x1F21A20", VA = "0x1F21A20", Slot = "31")]
	protected override bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x1F21A28", Offset = "0x1F21A28", VA = "0x1F21A28", Slot = "36")]
	protected override bool TryGetNewSpawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x1F21A30", Offset = "0x1F21A30", VA = "0x1F21A30", Slot = "46")]
	protected virtual void SubsribeToEvents(Cell cell)
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x1F21B74", Offset = "0x1F21B74", VA = "0x1F21B74", Slot = "47")]
	protected virtual void UnsubcribeFromEvents(Cell cell)
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x1F21C9C", Offset = "0x1F21C9C", VA = "0x1F21C9C", Slot = "22")]
	public override void OnImpactNeighbours(Cell cell)
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x1F21CA0", Offset = "0x1F21CA0", VA = "0x1F21CA0")]
	private bool IsSparkWasGeneration(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x1F21D38", Offset = "0x1F21D38", VA = "0x1F21D38")]
	private void ValidationStart(Field field, Cell cell)
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x1F21DD8", Offset = "0x1F21DD8", VA = "0x1F21DD8")]
	private void AllValidationCyclesCompleted(Field field, Cell cell)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x1F21E3C", Offset = "0x1F21E3C", VA = "0x1F21E3C")]
	public CellPluginDust()
	{
	}
}
[Token(Token = "0x2000208")]
public class CellPluginFire : CellPlugin
{
	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<Field, Cell> OnValidationEndEvent;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected int _countValidations;

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x1F21EA0", Offset = "0x1F21EA0", VA = "0x1F21EA0", Slot = "17")]
	public override void OnInit(Cell cell)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x1F21FB4", Offset = "0x1F21FB4", VA = "0x1F21FB4", Slot = "19")]
	public override void OnFinalize(Cell cell)
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x1F22140", Offset = "0x1F22140", VA = "0x1F22140", Slot = "30")]
	protected override bool TryGetNewDespawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x1F22148", Offset = "0x1F22148", VA = "0x1F22148", Slot = "33")]
	protected override bool TryGetNewAdditionalEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x1F22150", Offset = "0x1F22150", VA = "0x1F22150", Slot = "31")]
	protected override bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x1F22158", Offset = "0x1F22158", VA = "0x1F22158", Slot = "41")]
	protected override AdditionalEffect GetAdditionalEffect(Cell cell)
	{
		return null;
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x1F2219C", Offset = "0x1F2219C", VA = "0x1F2219C")]
	private void AllValidationEnd(Field field, Cell cell)
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x1F21EDC", Offset = "0x1F21EDC", VA = "0x1F21EDC")]
	private void SubsribeToEvents(Cell cell)
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x1F22080", Offset = "0x1F22080", VA = "0x1F22080")]
	private void UnsubcribeFromEvents(Cell cell)
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x1F2223C", Offset = "0x1F2223C", VA = "0x1F2223C")]
	public CellPluginFire()
	{
	}
}
[Token(Token = "0x2000209")]
public class CellPluginSpark : CellPlugin
{
	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<Field, Cell> OnFirstValidationCycleComplete;

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x1F235BC", Offset = "0x1F235BC", VA = "0x1F235BC")]
	public static bool IsNeighbourValid(Cell neighbour)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x1F23674", Offset = "0x1F23674", VA = "0x1F23674", Slot = "17")]
	public override void OnInit(Cell cell)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x1F236D0", Offset = "0x1F236D0", VA = "0x1F236D0", Slot = "23")]
	public override void OnImpact(Cell cell, Coordinates impactCellCoordinate)
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x1F236EC", Offset = "0x1F236EC", VA = "0x1F236EC", Slot = "22")]
	public override void OnImpactNeighbours(Cell cell)
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x1F236F0", Offset = "0x1F236F0", VA = "0x1F236F0", Slot = "19")]
	public override void OnFinalize(Cell cell)
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x1F23734", Offset = "0x1F23734", VA = "0x1F23734", Slot = "46")]
	protected virtual void FirstValidationCycleCompleted(Field field, Cell cell)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x1F238C0", Offset = "0x1F238C0", VA = "0x1F238C0", Slot = "29")]
	protected override bool TryGetNewCellVisualizer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x1F238C8", Offset = "0x1F238C8", VA = "0x1F238C8", Slot = "30")]
	protected override bool TryGetNewDespawnEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x1F238D0", Offset = "0x1F238D0", VA = "0x1F238D0", Slot = "31")]
	protected override bool TryGetNewExplosionEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x1F238D8", Offset = "0x1F238D8", VA = "0x1F238D8", Slot = "47")]
	protected virtual void SubsribeToEvents(Cell cell)
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x1F239B0", Offset = "0x1F239B0", VA = "0x1F239B0", Slot = "48")]
	protected virtual void UnsubcribeFromEvents(Cell cell)
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x1F237E4", Offset = "0x1F237E4", VA = "0x1F237E4")]
	private void SetRemoveStatus(Cell cell)
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x1F23800", Offset = "0x1F23800", VA = "0x1F23800")]
	private void BurningNeighbourCell(Field field, Cell cell)
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x1F23A74", Offset = "0x1F23A74", VA = "0x1F23A74")]
	private bool CellCanBeSetOnFire(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x1F23B04", Offset = "0x1F23B04", VA = "0x1F23B04")]
	public CellPluginSpark()
	{
	}
}
[Token(Token = "0x200020A")]
public class SpawnDespawnSounds : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003BD")]
	public class SoundForPlugin
	{
		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PluginType PluginType;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip SpawnClip;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFD9A0", Offset = "0xAFD9A0")]
		public float SpawnVolume;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 PitchDiapasonSpawnAudio;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip DespawnClip;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFD9B8", Offset = "0xAFD9B8")]
		public float DespawnVolume;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector2 PitchDiapasonDespawnAudio;

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xDF860C", Offset = "0xDF860C", VA = "0xDF860C")]
		public SoundForPlugin()
		{
		}
	}

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SoundForPlugin> Types;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Playhead;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<PluginType> _reproduceTypes;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PluginType> _usingTypes;

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xDF7CB4", Offset = "0xDF7CB4", VA = "0xDF7CB4")]
	public void PluginCreating(Field field, Cell cell)
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xDF7E2C", Offset = "0xDF7E2C", VA = "0xDF7E2C")]
	public void ExplodeCell(Field field, List<Cell> cell)
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xDF7D70", Offset = "0xDF7D70", VA = "0xDF7D70")]
	private void AddedSoundToReproduceList(PluginType type)
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xDF81B0", Offset = "0xDF81B0", VA = "0xDF81B0")]
	private void ValidationCycleCompleted(Field field)
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xDF80C8", Offset = "0xDF80C8", VA = "0xDF80C8")]
	private void PlaySound(AudioClip clip, float volume, float pitch)
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xDF8394", Offset = "0xDF8394", VA = "0xDF8394")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xDF8484", Offset = "0xDF8484", VA = "0xDF8484")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xDF8574", Offset = "0xDF8574", VA = "0xDF8574")]
	public SpawnDespawnSounds()
	{
	}
}
[Token(Token = "0x200020B")]
public abstract class UnitySerializedDictionary<TKey, TValue> : Dictionary<TKey, TValue>, ISerializationCallbackReceiver
{
	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private List<TKey> keyData;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private List<TValue> valueData;

	[Token(Token = "0x6000B30")]
	private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000B31")]
	private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000B32")]
	protected UnitySerializedDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x200020C")]
public class CellTypeSpriteSerializedDictionary : UnitySerializedDictionary<CellType, RunesTextures>
{
	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x1F245C8", Offset = "0x1F245C8", VA = "0x1F245C8")]
	public CellTypeSpriteSerializedDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x200020D")]
public class RunePitchSound : UnitySerializedDictionary<CellType, float>
{
	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xD48D24", Offset = "0xD48D24", VA = "0xD48D24")]
	public RunePitchSound()
	{
	}
}
[Token(Token = "0x200020E")]
public class SimpleCacheList : List<Cell>
{
	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xD4EED4", Offset = "0xD4EED4", VA = "0xD4EED4")]
	public SimpleCacheList(int capacity)
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xD4EF54", Offset = "0xD4EF54", VA = "0xD4EF54")]
	public void CopyDataToList(HashSet<Cell> dataSet, bool clear = true)
	{
	}
}
[Token(Token = "0x200020F")]
public class ClassicFieldValidator : FieldValidator
{
	[Token(Token = "0x20003BE")]
	private enum CrossDirection
	{
		[Token(Token = "0x4001276")]
		Horizontal,
		[Token(Token = "0x4001277")]
		Vertical
	}

	[Token(Token = "0x20003BF")]
	public class AnalyzationPatternController
	{
		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<AnalyzationBasePatternStruct> _currentThreePattern;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<AnalyzationBasePatternStruct> _currentFourPattern;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<AnalyzationBasePatternStruct> _currentFivePattern;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<AnalyzationBasePatternStruct> _currentMegaPattern;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _bonusesCount;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private PatternsCount _patternsCount;

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x1F306A8", Offset = "0x1F306A8", VA = "0x1F306A8")]
		public int GetPatternCount(PatternFigureType patternCount)
		{
			return default(int);
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x1F30068", Offset = "0x1F30068", VA = "0x1F30068")]
		public PatternsCount GetAllPatternStruct()
		{
			return default(PatternsCount);
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x1F30258", Offset = "0x1F30258", VA = "0x1F30258")]
		public List<AnalyzationBasePatternStruct> GetPatternData(PatternFigureType patternCount)
		{
			return null;
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x1F2FC48", Offset = "0x1F2FC48", VA = "0x1F2FC48")]
		public void ClearData()
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x1F2FCE8", Offset = "0x1F2FCE8", VA = "0x1F2FCE8")]
		public void ClearFreezeCellData(Field field)
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x1F30780", Offset = "0x1F30780", VA = "0x1F30780")]
		private void ClearFreezePatternList(Field field, List<AnalyzationBasePatternStruct> analyzationBasePatternStructs)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x1F2F504", Offset = "0x1F2F504", VA = "0x1F2F504")]
		public void Add(CellType type, Coordinates swapCoords, Coordinates hintCoords, List<Coordinates> cords)
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x1F30040", Offset = "0x1F30040", VA = "0x1F30040")]
		public void AddBonuses()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x1F30038", Offset = "0x1F30038", VA = "0x1F30038")]
		public void ResestBonuses()
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x1F30AE8", Offset = "0x1F30AE8", VA = "0x1F30AE8")]
		private bool FindIfExists(List<AnalyzationBasePatternStruct> analyzationBasePatternStructs, List<Coordinates> coords)
		{
			return default(bool);
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x1F305D8", Offset = "0x1F305D8", VA = "0x1F305D8")]
		public AnalyzationPatternController()
		{
		}
	}

	[Token(Token = "0x4000A4A")]
	private const int INIT_LIST_CAPACITY = 128;

	[Token(Token = "0x4000A4B")]
	private const int MIN_MATCH_TARGET = 3;

	[Token(Token = "0x4000A4C")]
	private const int LINE_MIN_SEQUENCE = 2;

	[Token(Token = "0x4000A4D")]
	private const int FLAME_BONUS = 4;

	[Token(Token = "0x4000A4E")]
	private const int CROSS_BONUS = 3;

	[Token(Token = "0x4000A4F")]
	private const int HYPERCUBE_ANALOG_BONUS = 5;

	[Token(Token = "0x4000A50")]
	private const int CRUSH_ALL_FIELD_BONUS = 6;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly HashSet<Cell> _tmpCellSequenceChecked;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly HashSet<Cell> _tmpCellDeepChecked;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly HashSet<Cell> _tmpCellGroup;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Queue<Cell> _tmpCandidatesForCheck;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Cell> _tmpCellList;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly SimpleCacheList _matchEventCacheList;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _maxHorizontalLength;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _maxVerticalLength;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CellType _checkType;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _wasAnyDestroyed;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Field _field;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private FieldData<Cell> _fieldData;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Cell[][] _cellArray;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Cell> _swappedCells;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MatchEvent _matchEvent;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AnalyzationPatternController _analyzationPatternController;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PatternGroupsController _analyzationPatternGroupController;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private CellCheckFunc _isVallidCell;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PatternGroupIterator _iteratorGroup;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private PatternGroupIterator _iteratorNotTypical;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<Coordinates> _iteratorCoords;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coordinates _hintCoords;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Coordinates _swapCoords;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Coordinates _swapAndHintCoords;

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x1F2DDB4", Offset = "0x1F2DDB4", VA = "0x1F2DDB4", Slot = "4")]
	public override bool CheckGlobalMatches(Field field, FieldData<Cell> fieldData, MatchEvent onMatchEvent, List<Cell> swappedCells)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x1F2E31C", Offset = "0x1F2E31C", VA = "0x1F2E31C", Slot = "5")]
	public override bool CheckLocalMatch(Field field, Cell cell, FieldData<Cell> fieldData, MatchEvent onMatchEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x1F2DE14", Offset = "0x1F2DE14", VA = "0x1F2DE14")]
	private void CacheData(Field field, FieldData<Cell> fieldData, List<Cell> swappedCells, MatchEvent onMatchEvent)
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x1F2E308", Offset = "0x1F2E308", VA = "0x1F2E308")]
	private void ClearCacheData()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x1F2E494", Offset = "0x1F2E494", VA = "0x1F2E494")]
	private void GenerateMatchEvent(HashSet<Cell> cells, Cell bonus)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x1F2DE30", Offset = "0x1F2DE30", VA = "0x1F2DE30")]
	private void CheckSwappedCells(List<Cell> swappedCells)
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x1F2E378", Offset = "0x1F2E378", VA = "0x1F2E378")]
	private static bool CheckIsMatches(FieldData<Cell> fieldData, Cell cell, int targetMatchOffset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x1F2E550", Offset = "0x1F2E550", VA = "0x1F2E550")]
	private Cell CheckPlugin()
	{
		return null;
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x1F2DF60", Offset = "0x1F2DF60", VA = "0x1F2DF60")]
	private void DeepGroupCheck()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x1F2E7DC", Offset = "0x1F2E7DC", VA = "0x1F2E7DC")]
	private Cell TryCreateBonus()
	{
		return null;
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x1F2E71C", Offset = "0x1F2E71C", VA = "0x1F2E71C")]
	private void CheckCellGroup(Cell checkCell)
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x1F2EB88", Offset = "0x1F2EB88", VA = "0x1F2EB88")]
	private void CheckCellsByDir(Direction dir, int row, int col)
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x1F2ECD4", Offset = "0x1F2ECD4", VA = "0x1F2ECD4")]
	private int CheckCellsByDir(Direction dir, int row, int col, int limit)
	{
		return default(int);
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x1F2E930", Offset = "0x1F2E930", VA = "0x1F2E930")]
	private void CheckHorizontalDirection(int row, int col)
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x1F2EA5C", Offset = "0x1F2EA5C", VA = "0x1F2EA5C")]
	private void CheckVerticalDirection(int row, int col)
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x1F2EDB8", Offset = "0x1F2EDB8", VA = "0x1F2EDB8")]
	private void CrossCellCheck(CrossDirection dir, int row, int col)
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x1F2EE44", Offset = "0x1F2EE44", VA = "0x1F2EE44")]
	private void TryAddCellToCheckCandidates(CrossDirection dir, int row, int col)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x1F2EC88", Offset = "0x1F2EC88", VA = "0x1F2EC88")]
	private void CoordinatesMove(Direction checkDir, ref int row, ref int col)
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x1F2EF90", Offset = "0x1F2EF90", VA = "0x1F2EF90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x1F2EF94", Offset = "0x1F2EF94", VA = "0x1F2EF94")]
	public void OnAnalyzationInit()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x1F2F1F8", Offset = "0x1F2F1F8", VA = "0x1F2F1F8")]
	private bool IsVallidCell(Field.FieldModifiers modifiers, CellType type, PluginType bonustype)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x1F2F340", Offset = "0x1F2F340", VA = "0x1F2F340")]
	private void IteratorGroup(Coordinates startpoint, Field field, FieldData<CellType> data, FieldData<PluginType> pluginData, BasePattern pattern, CellType type)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x1F2F970", Offset = "0x1F2F970", VA = "0x1F2F970")]
	private void IteratorNotTypical(Coordinates startpoint, Field field, FieldData<CellType> data, FieldData<PluginType> pluginData, BasePattern pattern, CellType type)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x1F2FB40", Offset = "0x1F2FB40", VA = "0x1F2FB40", Slot = "10")]
	public override void UpdateAnalyzationData(Field field, FieldData<CellType> fieldData, FieldData<PluginType> pluginData)
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x1F2FCD0", Offset = "0x1F2FCD0", VA = "0x1F2FCD0", Slot = "11")]
	public override void ClearFreezeCellAnalyzationData(Field field, FieldData<CellType> fieldData, FieldData<PluginType> pluginData)
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x1F2FD30", Offset = "0x1F2FD30", VA = "0x1F2FD30", Slot = "13")]
	public override void LocalUpdateAnalyzationData(List<Coordinates> coords, Field field, FieldData<CellType> fieldData, FieldData<PluginType> pluginData)
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x1F2FE0C", Offset = "0x1F2FE0C", VA = "0x1F2FE0C", Slot = "14")]
	public override void LocalUpdateAnalyzationData(Coordinates coords, Field field, FieldData<CellType> fieldData, FieldData<PluginType> pluginData)
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x1F2FE44", Offset = "0x1F2FE44", VA = "0x1F2FE44", Slot = "12")]
	public override void FindHyperMegaBonuses(Field field, FieldData<PluginType> pluginData)
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x1F30050", Offset = "0x1F30050", VA = "0x1F30050", Slot = "8")]
	public override PatternsCount GetPossibleMovesStruct()
	{
		return default(PatternsCount);
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x1F3010C", Offset = "0x1F3010C", VA = "0x1F3010C", Slot = "9")]
	public override int GetPossibleMovesCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x1F3013C", Offset = "0x1F3013C", VA = "0x1F3013C", Slot = "6")]
	public override Cell GetPossibleMove(Field field, FieldData<Cell> fieldData)
	{
		return null;
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x1F3031C", Offset = "0x1F3031C", VA = "0x1F3031C", Slot = "7")]
	public override Cell GetPossibleMove(Field field, FieldData<Cell> fieldData, out Coordinates swapCords)
	{
		return null;
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x1F30444", Offset = "0x1F30444", VA = "0x1F30444", Slot = "15")]
	public override AnalyzationPatternController GetAnalyzationPatternController()
	{
		return null;
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x1F3044C", Offset = "0x1F3044C", VA = "0x1F3044C")]
	public ClassicFieldValidator()
	{
	}
}
[Token(Token = "0x2000210")]
public struct PatternsCount
{
	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int Three;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int Four;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int Five;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int Mega;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int Bonuses;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int AllPatternsCount;

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xD3D79C", Offset = "0xD3D79C", VA = "0xD3D79C")]
	public PatternsCount(int three, int four, int five, int mega, int bonuses)
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xD3D7BC", Offset = "0xD3D7BC", VA = "0xD3D7BC")]
	public void SetPatternsCount(int three, int four, int five, int mega, int bonuses)
	{
	}
}
[Serializable]
[Token(Token = "0x2000211")]
public class CellPositionData
{
	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 Position;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 Rotation;

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x1F23D48", Offset = "0x1F23D48", VA = "0x1F23D48")]
	public CellPositionData(Vector3 position, Vector3 rotation)
	{
	}
}
[Token(Token = "0x2000212")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAFA038", Offset = "0xAFA038")]
public class FieldCellPositions : SerializedScriptableObject
{
	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public FieldData<CellPositionData> Positions;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float CellOffset;

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x1F5AD70", Offset = "0x1F5AD70", VA = "0x1F5AD70")]
	public FieldCellPositions(int rows, int cols)
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x1F5AE04", Offset = "0x1F5AE04", VA = "0x1F5AE04")]
	public CellPositionData GetPositionData(int row, int col)
	{
		return null;
	}
}
[Token(Token = "0x2000213")]
public enum Direction
{
	[Token(Token = "0x4000A74")]
	None,
	[Token(Token = "0x4000A75")]
	Up,
	[Token(Token = "0x4000A76")]
	Down,
	[Token(Token = "0x4000A77")]
	Left,
	[Token(Token = "0x4000A78")]
	Right,
	[Token(Token = "0x4000A79")]
	UpLeft,
	[Token(Token = "0x4000A7A")]
	UpRight,
	[Token(Token = "0x4000A7B")]
	DownLeft,
	[Token(Token = "0x4000A7C")]
	DownRight
}
[Serializable]
[Token(Token = "0x2000214")]
public struct Coordinates
{
	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int Row;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int Col;

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x1F08CA8", Offset = "0x1F08CA8", VA = "0x1F08CA8")]
	public Coordinates(int row, int col)
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x1F08CB0", Offset = "0x1F08CB0", VA = "0x1F08CB0")]
	public static Coordinates operator +(Coordinates coords, Direction direction)
	{
		return default(Coordinates);
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x1F08D10", Offset = "0x1F08D10", VA = "0x1F08D10")]
	public static bool operator ==(Coordinates left, Coordinates right)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x1F08D30", Offset = "0x1F08D30", VA = "0x1F08D30")]
	public static bool operator !=(Coordinates left, Coordinates right)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x1F08D50", Offset = "0x1F08D50", VA = "0x1F08D50")]
	public void Set(int row, int col)
	{
	}
}
[Serializable]
[Token(Token = "0x2000215")]
public class FieldData<T>
{
	[Token(Token = "0x20003C0")]
	public delegate bool MovePredicate(T data);

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[][] Data;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int Height;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int Width;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected T _swapData;

	[Token(Token = "0x6000B63")]
	public FieldData(int height, int width)
	{
	}

	[Token(Token = "0x6000B64")]
	public virtual bool TryGet(int row, int col, out T data)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B65")]
	public bool TryGet(Coordinates coordinates, out T data)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B66")]
	public bool Set(Coordinates coordinates, T data)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B67")]
	public bool Set(int row, int col, T data)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B68")]
	public bool Swap(ref Coordinates coordinates1, ref Coordinates coordinates2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B69")]
	public bool Move(Coordinates coordinates, Direction direction)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B6A")]
	public bool Move(ref Coordinates coordinates, Direction direction)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B6B")]
	public bool Move(Coordinates coordinates, Direction direction, MovePredicate predicate)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B6C")]
	public bool IsInsideField(int row, int col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B6D")]
	public bool IsInsideField(Coordinates coordinates)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B6E")]
	public bool IsNeighbour(Cell cell1, Cell cell2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B6F")]
	public bool IsNeighbour(Coordinates cell1Coords, Coordinates cell2Coords)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B70")]
	public T GetNeighbour(Coordinates coordinates, Direction direction)
	{
		return (T)null;
	}

	[Token(Token = "0x6000B71")]
	public FieldData<T> Clone()
	{
		return null;
	}

	[Token(Token = "0x6000B72")]
	public T[][] CloneData()
	{
		return null;
	}

	[Token(Token = "0x6000B73")]
	protected void MoveForced(Coordinates coordinates, Direction direction)
	{
	}

	[Token(Token = "0x6000B74")]
	protected bool IsDirectionValid(Coordinates coordinates, Direction direction)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000216")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAFA084", Offset = "0xAFA084")]
public class FieldDebugger : SerializedScriptableObject
{
	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public FieldData<Cell> Cells;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public FieldData<Field.FieldModifiers> FieldModifiers;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public FieldData<CellType> CellTypes;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public FieldData<PluginType> BonusTypes;

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x1F5B240", Offset = "0x1F5B240", VA = "0x1F5B240")]
	public void DebugField(Field field)
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x1F5B274", Offset = "0x1F5B274", VA = "0x1F5B274")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x1F5B2E4", Offset = "0x1F5B2E4", VA = "0x1F5B2E4")]
	public FieldDebugger()
	{
	}
}
[Token(Token = "0x2000217")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAFA0D0", Offset = "0xAFA0D0")]
public class FieldMap : SerializedScriptableObject
{
	[Serializable]
	[Token(Token = "0x20003C1")]
	public class FieldDataNode
	{
		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Row;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Col;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CellType Cell;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PluginType Plugin;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Field.FieldModifiers Modifiers;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public CellModifiers CellMods;

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x1F3573C", Offset = "0x1F3573C", VA = "0x1F3573C")]
		public FieldDataNode(FieldMap map, int row, int col)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x1F351F0", Offset = "0x1F351F0", VA = "0x1F351F0")]
		public void ApplyData(FieldMap map)
		{
		}
	}

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int Rows;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int Cols;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float CellOffset;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public FieldData<CellType> CellTypes;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public FieldData<PluginType> PluginTypes;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public FieldData<Field.FieldModifiers> FieldModifiers;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public FieldData<CellModifiers> CellModifiers;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public FieldData<CellPositionData> CellPositions;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public FieldData<GameObject> BrushPrefabs;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private List<FieldDataNode> _changedNodes;

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x1F34D30", Offset = "0x1F34D30", VA = "0x1F34D30")]
	public void SetCell(Cell cell, bool saveChanges = true)
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x1F34E78", Offset = "0x1F34E78", VA = "0x1F34E78")]
	public void ClearCell(int row, int col, bool saveChanges = true)
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x1F34F30", Offset = "0x1F34F30", VA = "0x1F34F30")]
	public void SetCellData(int row, int col, CellType cellType, PluginType pluginType, Field.FieldModifiers modifiers, CellModifiers cellmods, bool saveChanges = true)
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x1F3506C", Offset = "0x1F3506C", VA = "0x1F3506C")]
	public void SetModifier(int row, int col, Field.FieldModifiers modifiers, bool saveChanges = true)
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x1F35104", Offset = "0x1F35104", VA = "0x1F35104")]
	public void BlockCell(int row, int col)
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x1F3515C", Offset = "0x1F3515C", VA = "0x1F3515C")]
	public void Undo()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x1F35304", Offset = "0x1F35304", VA = "0x1F35304")]
	public void Init(int rows, int cols, float cellOffset)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x1F354B0", Offset = "0x1F354B0", VA = "0x1F354B0")]
	public void UpdateMap()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x1F3565C", Offset = "0x1F3565C", VA = "0x1F3565C")]
	public void InitEmptySlots()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x1F34DDC", Offset = "0x1F34DDC", VA = "0x1F34DDC")]
	private void SaveCellBeforeChanging(int row, int col)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x1F35874", Offset = "0x1F35874", VA = "0x1F35874")]
	public void Save()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x1F35878", Offset = "0x1F35878", VA = "0x1F35878")]
	public FieldMap()
	{
	}
}
[Token(Token = "0x2000218")]
public class FieldReshuffleDisplay : FieldReshuffler
{
	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject DisplayFail;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAFCADC", Offset = "0xAFCADC")]
	public List<BaseGameAction> IntroAction;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BaseGameAction OutroAction;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> Limiters;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro DisplayFailText;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent Events;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dictionary<Language, string> LocalizationVariants;

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x1F359F0", Offset = "0x1F359F0", VA = "0x1F359F0")]
	public void DOFail([Optional] string levelFailText)
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x1F35C94", Offset = "0x1F35C94", VA = "0x1F35C94", Slot = "4")]
	public override void Reshuffle(Field field)
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x1F35D08", Offset = "0x1F35D08", VA = "0x1F35D08")]
	public void DisableDisplay()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x1F35DA4", Offset = "0x1F35DA4", VA = "0x1F35DA4")]
	private void DisplayDisable()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x1F35E1C", Offset = "0x1F35E1C", VA = "0x1F35E1C")]
	public FieldReshuffleDisplay()
	{
	}
}
[Token(Token = "0x2000219")]
public abstract class FieldReshuffler : MonoBehaviour
{
	[Token(Token = "0x6000B89")]
	public abstract void Reshuffle(Field field);

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x1F35EE4", Offset = "0x1F35EE4", VA = "0x1F35EE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x1F35EF0", Offset = "0x1F35EF0", VA = "0x1F35EF0", Slot = "5")]
	protected virtual void Disable()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x1F35EDC", Offset = "0x1F35EDC", VA = "0x1F35EDC")]
	protected FieldReshuffler()
	{
	}
}
[Token(Token = "0x200021A")]
public class FieldReshufflerIdle : FieldReshuffler
{
	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x1F35EF4", Offset = "0x1F35EF4", VA = "0x1F35EF4", Slot = "4")]
	public override void Reshuffle(Field field)
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x1F35F20", Offset = "0x1F35F20", VA = "0x1F35F20")]
	public FieldReshufflerIdle()
	{
	}
}
[Token(Token = "0x200021B")]
public class FieldReshufflerProgressChangedFirefly : FieldReshufflerShowingDisplay
{
	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LevelTargetCount Target;

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x1F35F28", Offset = "0x1F35F28", VA = "0x1F35F28", Slot = "6")]
	protected override void ReshufflerEvent()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x1F35F44", Offset = "0x1F35F44", VA = "0x1F35F44")]
	public FieldReshufflerProgressChangedFirefly()
	{
	}
}
[Token(Token = "0x200021C")]
public class FieldReshufflerShowingDisplay : FieldReshuffler
{
	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ReshufflerDisplay;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float DisplayTime;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Field _field;

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x1F35F64", Offset = "0x1F35F64", VA = "0x1F35F64", Slot = "4")]
	public override void Reshuffle(Field field)
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x1F36048", Offset = "0x1F36048", VA = "0x1F36048")]
	private void DisableDisplay()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x1F3609C", Offset = "0x1F3609C", VA = "0x1F3609C", Slot = "6")]
	protected virtual void ReshufflerEvent()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x1F360A0", Offset = "0x1F360A0", VA = "0x1F360A0", Slot = "5")]
	protected override void Disable()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x1F35F54", Offset = "0x1F35F54", VA = "0x1F35F54")]
	public FieldReshufflerShowingDisplay()
	{
	}
}
[Serializable]
[Token(Token = "0x200021D")]
public class ObjectFieldData<T> : FieldData<T> where T : UnityEngine.Object
{
	[Token(Token = "0x6000B96")]
	public ObjectFieldData(int height, int width)
	{
	}

	[Token(Token = "0x6000B97")]
	public override bool TryGet(int row, int col, out T data)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B98")]
	public void Clear()
	{
	}
}
[Serializable]
[Token(Token = "0x200021E")]
public class CellGroup : ILevelTargetVisualizerCurrentTotal
{
	[Serializable]
	[Token(Token = "0x20003C2")]
	public class CellGroupData
	{
		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Id;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int ActivationLevelCount;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Coordinates> Coords;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<CellData> TargetCellData;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool LockedOnComplete;

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xE9844C", Offset = "0xE9844C", VA = "0xE9844C")]
		public void SetId(int id)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xE98454", Offset = "0xE98454", VA = "0xE98454")]
		public void AddCoordRect(Coordinates topLeft, Coordinates bottomRight)
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xE9852C", Offset = "0xE9852C", VA = "0xE9852C")]
		public CellGroupData()
		{
		}
	}

	[Token(Token = "0x20003C3")]
	public delegate void GroupEvent(CellGroup group);

	[Token(Token = "0x20003C4")]
	public delegate void GroupMemberEvent(Cell cell);

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GroupEvent OnInit;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GroupEvent OnProgress;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GroupEvent OnProgressDown;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static GroupEvent OnFullActivate;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static GroupEvent OnReset;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected int Id;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected List<Coordinates> _memberCoords;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Field _field;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected int _currentActivationLevel;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected int _activationLevelCount;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool _resettable;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	protected bool _lockedOnComplete;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	protected bool _activated;

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xE97B88", Offset = "0xE97B88", VA = "0xE97B88")]
	public CellGroup(Field field, CellGroupData data, bool runOnInit = true)
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xE98068", Offset = "0xE98068", VA = "0xE98068")]
	public bool IsCellMember(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xE9815C", Offset = "0xE9815C", VA = "0xE9815C")]
	public int GetId()
	{
		return default(int);
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xE98164", Offset = "0xE98164", VA = "0xE98164", Slot = "5")]
	public virtual int GetActivationLevelCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xE9816C", Offset = "0xE9816C", VA = "0xE9816C")]
	public void DeactivateGroup()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xE9817C", Offset = "0xE9817C", VA = "0xE9817C", Slot = "6")]
	public virtual void GetCurrentAndTotalProgress(out int current, out int total)
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xE98190", Offset = "0xE98190", VA = "0xE98190")]
	protected bool IsFullyActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xE981B4", Offset = "0xE981B4", VA = "0xE981B4", Slot = "7")]
	public virtual float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xE981D8", Offset = "0xE981D8", VA = "0xE981D8", Slot = "8")]
	protected virtual void ListenActivationEvent()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xE981DC", Offset = "0xE981DC", VA = "0xE981DC", Slot = "9")]
	protected virtual void StopListenActivationEvent()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xE981E0", Offset = "0xE981E0", VA = "0xE981E0")]
	protected void ActivateGroup()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xE981F0", Offset = "0xE981F0", VA = "0xE981F0", Slot = "10")]
	protected virtual void OnActivate(Field field, List<Coordinates> memberCoords)
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xE982C8", Offset = "0xE982C8", VA = "0xE982C8", Slot = "11")]
	protected virtual void OnDeactivate(Field field, List<Coordinates> memberCoords)
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xE982D4", Offset = "0xE982D4", VA = "0xE982D4")]
	protected void InvokeForEachMember(GroupMemberEvent memberEvent)
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xE9843C", Offset = "0xE9843C", VA = "0xE9843C")]
	protected int GetCurrentProgress()
	{
		return default(int);
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xE98444", Offset = "0xE98444", VA = "0xE98444")]
	protected int GetTotalProgress()
	{
		return default(int);
	}
}
[Token(Token = "0x200021F")]
public class CellGroupLevelTargetVisualiser : LevelTargetVisualizer
{
	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x1F1D4A0", Offset = "0x1F1D4A0", VA = "0x1F1D4A0", Slot = "4")]
	protected override void OnTargetComplete(LevelTarget target)
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x1F1D4A8", Offset = "0x1F1D4A8", VA = "0x1F1D4A8")]
	public CellGroupLevelTargetVisualiser()
	{
	}
}
[Token(Token = "0x2000220")]
public class CellGroupVisualiser : MonoBehaviour
{
	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int CellGroupId;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image ProgressBar;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro ProgressValues;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer BackgroundRenderer;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer BorderRenderer;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAFCB14", Offset = "0xAFCB14")]
	public Color DefaultColor;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAFCB2C", Offset = "0xAFCB2C")]
	public Color FullyActiveColor;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAFCB44", Offset = "0xAFCB44")]
	protected Color _colorStep;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Tween _finalHighlighter;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Tween _highlighter;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Tween _unhighlighter;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private StringBuilder _progressValues;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string SLASH;

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x1F1D4C0", Offset = "0x1F1D4C0", VA = "0x1F1D4C0")]
	public void Init(CellGroup group)
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x1F1D96C", Offset = "0x1F1D96C", VA = "0x1F1D96C", Slot = "4")]
	protected virtual void ListenEvents()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x1F1DBA4", Offset = "0x1F1DBA4", VA = "0x1F1DBA4", Slot = "5")]
	protected virtual void StopListenEvents()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x1F1DDDC", Offset = "0x1F1DDDC", VA = "0x1F1DDDC", Slot = "6")]
	protected virtual void VisualiseProgressUp(CellGroup group)
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x1F1DE14", Offset = "0x1F1DE14", VA = "0x1F1DE14", Slot = "7")]
	protected virtual void VisualiseProgressDown(CellGroup group)
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x1F1DE4C", Offset = "0x1F1DE4C", VA = "0x1F1DE4C", Slot = "8")]
	protected virtual void VisualiseProgress(bool progressUp, CellGroup group)
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x1F1D658", Offset = "0x1F1D658", VA = "0x1F1D658")]
	private void InitTweens()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x1F1D7F8", Offset = "0x1F1D7F8", VA = "0x1F1D7F8")]
	private void UpdateProgressValues(CellGroup group)
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x1F1D538", Offset = "0x1F1D538", VA = "0x1F1D538")]
	private void PaintBackground(float modifier = 0f)
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x1F1DF7C", Offset = "0x1F1DF7C", VA = "0x1F1DF7C")]
	private void HighlightBorder(bool _final = false)
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x1F1E00C", Offset = "0x1F1E00C", VA = "0x1F1E00C")]
	private void UnhighlightBorder()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x1F1E020", Offset = "0x1F1E020", VA = "0x1F1E020")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x1F1E02C", Offset = "0x1F1E02C", VA = "0x1F1E02C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x1F1E038", Offset = "0x1F1E038", VA = "0x1F1E038")]
	private void ResetVisuals(CellGroup group)
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x1F1E064", Offset = "0x1F1E064", VA = "0x1F1E064")]
	private void Finalize(CellGroup group)
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x1F1E090", Offset = "0x1F1E090", VA = "0x1F1E090")]
	public CellGroupVisualiser()
	{
	}
}
[Token(Token = "0x2000221")]
public class CellRemoveCellGroup : CellGroup
{
	[Serializable]
	[Token(Token = "0x20003C5")]
	public class CellRemoveCellGroupData : CellGroupData
	{
		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int ExplosionsPerLevel;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int TurnsBeforeProgressDown;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool ReduceLevel;

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x1F24568", Offset = "0x1F24568", VA = "0x1F24568")]
		public CellRemoveCellGroupData()
		{
		}
	}

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _cellExplosionsPerLevel;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _currentExplosionCount;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _idleTurnsBeforeProgressDown;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _currentIdleTurns;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<CellData> _targetCellData;

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x1F23DB8", Offset = "0x1F23DB8", VA = "0x1F23DB8")]
	public CellRemoveCellGroup(Field field, CellRemoveCellGroupData data)
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x1F23EB4", Offset = "0x1F23EB4", VA = "0x1F23EB4", Slot = "7")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x1F23EF4", Offset = "0x1F23EF4", VA = "0x1F23EF4")]
	public float GetLevelProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x1F23F04", Offset = "0x1F23F04", VA = "0x1F23F04", Slot = "5")]
	public override int GetActivationLevelCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x1F23F0C", Offset = "0x1F23F0C", VA = "0x1F23F0C", Slot = "6")]
	public override void GetCurrentAndTotalProgress(out int current, out int total)
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x1F23F20", Offset = "0x1F23F20", VA = "0x1F23F20", Slot = "8")]
	protected override void ListenActivationEvent()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x1F23FA4", Offset = "0x1F23FA4", VA = "0x1F23FA4", Slot = "9")]
	protected override void StopListenActivationEvent()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x1F24028", Offset = "0x1F24028", VA = "0x1F24028", Slot = "10")]
	protected override void OnActivate(Field field, List<Coordinates> memberCoords)
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x1F240E4", Offset = "0x1F240E4", VA = "0x1F240E4", Slot = "11")]
	protected override void OnDeactivate(Field field, List<Coordinates> memberCoords)
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x1F241F4", Offset = "0x1F241F4", VA = "0x1F241F4")]
	private void CheckCellRemove(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x1F24470", Offset = "0x1F24470", VA = "0x1F24470")]
	private void CheckLevelDown(Field field)
	{
	}
}
[Token(Token = "0x2000222")]
public class CellgroupMaker : MonoBehaviour
{
	[Token(Token = "0x20003C6")]
	public enum CellGroupTypes
	{
		[Token(Token = "0x400128D")]
		Base = 0,
		[Token(Token = "0x400128E")]
		CellRemove = 1000,
		[Token(Token = "0x400128F")]
		MelodyNode = 2000
	}

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Field Field;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<CellGroup.CellGroupData> CellGroups;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<CellRemoveCellGroup.CellRemoveCellGroupData> CellRemoveGroups;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<MelodyNodeCellGroup.MelodyNodeCellGroupData> MelodyNoteGroups;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<CellGroup> _runtimeGroups;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _currentId;

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x1F26208", Offset = "0x1F26208", VA = "0x1F26208")]
	public void SetIds()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x1F26378", Offset = "0x1F26378", VA = "0x1F26378")]
	private void GenerateCellGroups()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x1F26570", Offset = "0x1F26570", VA = "0x1F26570")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x1F26574", Offset = "0x1F26574", VA = "0x1F26574")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x1F2661C", Offset = "0x1F2661C", VA = "0x1F2661C")]
	public CellgroupMaker()
	{
	}
}
[Serializable]
[Token(Token = "0x2000223")]
public struct CellData
{
	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public CellType Cell;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public PluginType Plugin;

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xE97A54", Offset = "0xE97A54", VA = "0xE97A54")]
	public CellData(CellType cell, PluginType plugin)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xE97A5C", Offset = "0xE97A5C", VA = "0xE97A5C")]
	public void ApplyData(Field field, int i, int j)
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xE97B08", Offset = "0xE97B08", VA = "0xE97B08")]
	public bool IsMatchingData(Cell cell)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000224")]
public class Field : MonoBehaviour
{
	[Token(Token = "0x20003C7")]
	public delegate void ComboEvent(Cell cell, int value);

	[Token(Token = "0x20003C8")]
	public delegate void FieldEvent(Field field);

	[Token(Token = "0x20003C9")]
	public delegate void CellEvent(Field field, Cell cell);

	[Token(Token = "0x20003CA")]
	public delegate void SwapCellEvent(Field field, Cell cell1, Cell cell2);

	[Token(Token = "0x20003CB")]
	public delegate void CellExplosionEvent(Field field, List<Cell> cells);

	[Token(Token = "0x20003CC")]
	public delegate bool MoveCallback(Cell cell1, Coordinates destination, bool forced);

	[Token(Token = "0x20003CD")]
	[Flags]
	public enum FieldModifiers : short
	{
		[Token(Token = "0x4001291")]
		None = 0,
		[Token(Token = "0x4001292")]
		Block = 1,
		[Token(Token = "0x4001293")]
		TransparentBlock = 2,
		[Token(Token = "0x4001294")]
		DestructibleLock = 4,
		[Token(Token = "0x4001295")]
		SideBorder = 8,
		[Token(Token = "0x4001296")]
		Lock = 0x10,
		[Token(Token = "0x4001297")]
		ConveyorLeft = 0x20,
		[Token(Token = "0x4001298")]
		ConveyorRight = 0x40,
		[Token(Token = "0x4001299")]
		ConveyorUp = 0x80,
		[Token(Token = "0x400129A")]
		ConveyorDown = 0x100,
		[Token(Token = "0x400129B")]
		Empty = 0x200,
		[Token(Token = "0x400129C")]
		Spawner = 0x400
	}

	[Token(Token = "0x20003CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAA78", Offset = "0xAFAA78")]
	private sealed class <GenerateField>d__94 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Field <>4__this;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool customSpawnPoints;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool useMapData;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool validateResult;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool waitExtra;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action changeFieldCallback;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action fieldFinalizedCallback;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__2;

		[Token(Token = "0x170000BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001571")]
			[Address(RVA = "0x1F52FD4", Offset = "0x1F52FD4", VA = "0x1F52FD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001573")]
			[Address(RVA = "0x1F5303C", Offset = "0x1F5303C", VA = "0x1F5303C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x1F50E5C", Offset = "0x1F50E5C", VA = "0x1F50E5C")]
		[DebuggerHidden]
		public <GenerateField>d__94(int <>1__state)
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x1F52990", Offset = "0x1F52990", VA = "0x1F52990", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x1F52994", Offset = "0x1F52994", VA = "0x1F52994", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x1F52FDC", Offset = "0x1F52FDC", VA = "0x1F52FDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CellEvent OnCellCreate;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CellEvent OnCellRemove;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CellEvent OnPluginCreate;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FieldEvent OnInitComplete;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FieldEvent OnValidateStart;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FieldEvent OnValidateProgress;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FieldEvent OnValidateEnd;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FieldEvent OnGenerationComplete;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public FieldEvent OnGenerationAnalysisComplete;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public FieldEvent OnGenerationFailed;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public FieldEvent OnValidationCycleComplete;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public FieldEvent OnAllValidationCyclesComplete;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public FieldEvent OnReshuffle;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SwapCellEvent OnCellSwap;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CellExplosionEvent OnCellsExplode;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CellExplosionEvent OnMatch;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ComboEvent OnCombo;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	public ObjectFieldData<Cell> Cells;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public FieldData<FieldModifiers> CellData;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public FieldData<CellPositionData> CellPositions;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public FieldGenerator Generator;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public FieldValidator Validator;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FieldLogic Logic;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public FieldReshuffler Reshuffler;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFCB6C", Offset = "0xAFCB6C")]
	private int <Rows>k__BackingField;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFCB7C", Offset = "0xAFCB7C")]
	private int <Cols>k__BackingField;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public FieldMap Map;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<Transform> CustomSpawnPoints;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool DropAnywhere;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private int Id;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private FieldData<CellType> _cellTypes;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private FieldData<PluginType> _plugins;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private FieldData<bool> _movedCells;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<Cell> _cellsToExplode;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<Cell> _cellsToRemove;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 _offset;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<CellData> _cachedBonuses;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<Coordinates> _spawnableCoords;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool _terminated;

	[Token(Token = "0x17000028")]
	public int Rows
	{
		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x1F4E42C", Offset = "0x1F4E42C", VA = "0x1F4E42C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEF88", Offset = "0xAFEF88")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x1F4E434", Offset = "0x1F4E434", VA = "0x1F4E434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEF98", Offset = "0xAFEF98")]
		private set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public int Cols
	{
		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x1F4E43C", Offset = "0x1F4E43C", VA = "0x1F4E43C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEFA8", Offset = "0xAFEFA8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x1F4E444", Offset = "0x1F4E444", VA = "0x1F4E444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEFB8", Offset = "0xAFEFB8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x1F4E44C", Offset = "0x1F4E44C", VA = "0x1F4E44C")]
	public void RemoveColumn(int index)
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x1F4E600", Offset = "0x1F4E600", VA = "0x1F4E600")]
	public static bool IsCellMovable(Field field, int row, int col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x1F4E7D4", Offset = "0x1F4E7D4", VA = "0x1F4E7D4")]
	public static bool IsCellDroppable(Field field, int row, int col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x1F4EA08", Offset = "0x1F4EA08", VA = "0x1F4EA08")]
	public void Launch()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x1F4EB70", Offset = "0x1F4EB70", VA = "0x1F4EB70")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x1F4ECA8", Offset = "0x1F4ECA8", VA = "0x1F4ECA8")]
	public bool TryMakeCell(Coordinates coords, CellType cellType, PluginType pluginType, bool forced = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x1F4ECC0", Offset = "0x1F4ECC0", VA = "0x1F4ECC0")]
	public bool TryMakeCell(int row, int col, CellType cellType, PluginType pluginType, bool forced = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x1F4EE00", Offset = "0x1F4EE00", VA = "0x1F4EE00")]
	public void UpdateCell(Cell cell)
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x1F4EEB4", Offset = "0x1F4EEB4", VA = "0x1F4EEB4")]
	public bool Move(Cell cell, Coordinates destination, bool forced = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x1F4EEF0", Offset = "0x1F4EEF0", VA = "0x1F4EEF0")]
	public bool IsLaunched()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x1F4EF24", Offset = "0x1F4EF24", VA = "0x1F4EF24")]
	public bool IsCellInsideField(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x1F4EF90", Offset = "0x1F4EF90", VA = "0x1F4EF90")]
	public bool IsCellInsideField(Coordinates coords)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x1F4EFF8", Offset = "0x1F4EFF8", VA = "0x1F4EFF8")]
	public bool Remove(Cell cell, bool forced = false, float releaseTime = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x1F4E560", Offset = "0x1F4E560", VA = "0x1F4E560")]
	public bool RemoveAt(int row, int col, bool forced = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x1F4F5A8", Offset = "0x1F4F5A8", VA = "0x1F4F5A8")]
	public bool RemoveAt(Coordinates coords, bool forced = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x1F4EB9C", Offset = "0x1F4EB9C", VA = "0x1F4EB9C")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x1F4F5B8", Offset = "0x1F4F5B8", VA = "0x1F4F5B8")]
	public void Terminate()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x1F4F5E0", Offset = "0x1F4F5E0", VA = "0x1F4F5E0")]
	public void Remake()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x1F4F8EC", Offset = "0x1F4F8EC", VA = "0x1F4F8EC")]
	public void Make(bool inPlace = false)
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x1F4F960", Offset = "0x1F4F960", VA = "0x1F4F960")]
	public void ModifyField(Action<Field> modifyAction)
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x1F4F9D0", Offset = "0x1F4F9D0", VA = "0x1F4F9D0")]
	public void ModifyField(Action<Cell> cellAction, bool runValidation = true)
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x1F4FAFC", Offset = "0x1F4FAFC", VA = "0x1F4FAFC")]
	private void SpawnSavedBonuses()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x1F4FC80", Offset = "0x1F4FC80", VA = "0x1F4FC80")]
	public bool IsTerminated()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x1F4FC88", Offset = "0x1F4FC88", VA = "0x1F4FC88")]
	public bool IsMoved(Coordinates coords)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x1F4FCEC", Offset = "0x1F4FCEC", VA = "0x1F4FCEC")]
	public bool IsMoved(int row, int col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x1F4FD48", Offset = "0x1F4FD48", VA = "0x1F4FD48")]
	public bool MarkMoved(Coordinates coords, bool moved)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x1F4FDB0", Offset = "0x1F4FDB0", VA = "0x1F4FDB0")]
	public bool MarkMoved(int row, int col, bool moved)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x1F4FE10", Offset = "0x1F4FE10", VA = "0x1F4FE10")]
	public int GetId()
	{
		return default(int);
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x1F4FE18", Offset = "0x1F4FE18", VA = "0x1F4FE18")]
	public void SetId(int id)
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x1F4FE20", Offset = "0x1F4FE20", VA = "0x1F4FE20")]
	public Cell GetCell(int row, int col)
	{
		return null;
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x1F4FE5C", Offset = "0x1F4FE5C", VA = "0x1F4FE5C")]
	public Cell GetCell(Coordinates destitantion)
	{
		return null;
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x1F4FE64", Offset = "0x1F4FE64", VA = "0x1F4FE64")]
	public bool SetCell(Cell cell, Coordinates destitantion)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x1F4FFC4", Offset = "0x1F4FFC4", VA = "0x1F4FFC4")]
	public Vector3 GetPosition(int row, int col)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x1F50058", Offset = "0x1F50058", VA = "0x1F50058")]
	public Vector3 GetPosition(Coordinates coords)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x1F50060", Offset = "0x1F50060", VA = "0x1F50060")]
	public Vector3 GetRotationEulers(int row, int col)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x1F500C8", Offset = "0x1F500C8", VA = "0x1F500C8")]
	public Cell GetNeighbour(Cell cell, Direction direction)
	{
		return null;
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x1F5013C", Offset = "0x1F5013C", VA = "0x1F5013C")]
	public Cell GetNeighbour(Coordinates coordinates, Direction direction)
	{
		return null;
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x1F4F610", Offset = "0x1F4F610", VA = "0x1F4F610")]
	public bool ClearCells(bool reshuffle = false, bool forced = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x1F50594", Offset = "0x1F50594", VA = "0x1F50594")]
	protected void Process()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x1F505BC", Offset = "0x1F505BC", VA = "0x1F505BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x1F50BE0", Offset = "0x1F50BE0", VA = "0x1F50BE0")]
	private void LoadMap()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x1F50DA0", Offset = "0x1F50DA0", VA = "0x1F50DA0")]
	private void SetUnspawnableAreas()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x1F4EAAC", Offset = "0x1F4EAAC", VA = "0x1F4EAAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFEFC8", Offset = "0xAFEFC8")]
	public IEnumerator GenerateField(bool avoidMatches = true, [Optional] Action changeFieldCallback, [Optional] Action fieldFinalizedCallback, bool customSpawnPoints = false, bool validateResult = true, bool useMapData = true, bool waitExtra = false)
	{
		return null;
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x1F4E5CC", Offset = "0x1F4E5CC", VA = "0x1F4E5CC")]
	public void RunValidation(bool waitExtra = false)
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x1F50E88", Offset = "0x1F50E88", VA = "0x1F50E88")]
	public bool IsConveyor(int row, int col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x1F50EEC", Offset = "0x1F50EEC", VA = "0x1F50EEC")]
	public Vector3 GetSpawnPosition(Cell cell, bool customSpawn = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x1F51114", Offset = "0x1F51114", VA = "0x1F51114")]
	private Vector3 GetWandEndPoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x1F51290", Offset = "0x1F51290", VA = "0x1F51290")]
	public FieldData<CellType> GetGeneratorData()
	{
		return null;
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x1F51298", Offset = "0x1F51298", VA = "0x1F51298")]
	public FieldData<PluginType> GetGeneratorPluginData()
	{
		return null;
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x1F512A0", Offset = "0x1F512A0", VA = "0x1F512A0")]
	public void ActivateGenerator(bool avoidMatches = true)
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x1F512C8", Offset = "0x1F512C8", VA = "0x1F512C8")]
	public void UpdateGenerationData()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x1F515F0", Offset = "0x1F515F0", VA = "0x1F515F0")]
	public void SwapCellData(Coordinates coords1, Coordinates coords2)
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x1F51600", Offset = "0x1F51600", VA = "0x1F51600")]
	public void SwapCellData(int row1, int col1, int row2, int col2)
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x1F51778", Offset = "0x1F51778", VA = "0x1F51778")]
	public void Reshuffle()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x1F51904", Offset = "0x1F51904", VA = "0x1F51904")]
	private bool IsSaveablePlugin(PluginType plugin)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x1F4E7C4", Offset = "0x1F4E7C4", VA = "0x1F4E7C4")]
	public static bool HasFieldModifier(FieldModifiers modifiers, FieldModifiers value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x1F51938", Offset = "0x1F51938", VA = "0x1F51938")]
	public void ValidateCellData()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x1F51BE4", Offset = "0x1F51BE4", VA = "0x1F51BE4")]
	public bool IsCellSpawnable(int row, int col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x1F51CC4", Offset = "0x1F51CC4", VA = "0x1F51CC4")]
	public bool IsSlotAvailable(int row, int col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x1F51DE8", Offset = "0x1F51DE8", VA = "0x1F51DE8")]
	public void ApplyToNeighbours(Cell cell, List<Cell> excludedCells, bool includeDiagonal = true, [Optional] Action<Field, Cell> actionToApply)
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x1F51F90", Offset = "0x1F51F90", VA = "0x1F51F90")]
	private void TryInvoke(Cell cell, Action<Field, Cell> actionToApply)
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x1F4EC70", Offset = "0x1F4EC70", VA = "0x1F4EC70")]
	private void Init()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x1F523D4", Offset = "0x1F523D4", VA = "0x1F523D4")]
	private void ClearField()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x1F524F4", Offset = "0x1F524F4", VA = "0x1F524F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x1F5267C", Offset = "0x1F5267C", VA = "0x1F5267C")]
	private void ReleaseCells(LevelLoader.LevelID level, LevelLoader.LevelRegion region, LevelLoader.LevelID previousLevel)
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x1F525D4", Offset = "0x1F525D4", VA = "0x1F525D4")]
	private void ReleaseCells()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x1F506B4", Offset = "0x1F506B4", VA = "0x1F506B4")]
	private void SubscribeToManager()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x1F526B0", Offset = "0x1F526B0", VA = "0x1F526B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x1F526EC", Offset = "0x1F526EC", VA = "0x1F526EC")]
	public Field()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x1F527DC", Offset = "0x1F527DC", VA = "0x1F527DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0002C", Offset = "0xB0002C")]
	private void <Launch>b__45_0()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x1F52968", Offset = "0x1F52968", VA = "0x1F52968")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0003C", Offset = "0xB0003C")]
	private void <Launch>b__45_1()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x1F5297C", Offset = "0x1F5297C", VA = "0x1F5297C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0004C", Offset = "0xB0004C")]
	private void <Launch>b__45_2()
	{
	}
}
[Token(Token = "0x2000225")]
public class ConveyorChain
{
	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Field Field;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Coordinates> ConveyorPositions;

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x1F089A8", Offset = "0x1F089A8", VA = "0x1F089A8")]
	public ConveyorChain(Field field, Coordinates startCoords)
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x1F08A38", Offset = "0x1F08A38", VA = "0x1F08A38")]
	private void Init(Coordinates startCoords)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x1F08B78", Offset = "0x1F08B78", VA = "0x1F08B78")]
	private bool GetNeighbourCoords(Coordinates coords, out int row, out int col)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000226")]
public class FieldCellDropper
{
	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<ConveyorChain> _conveyorChains;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Coordinates _cachedCoords;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coordinates _targetCoordinates;

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x1F59050", Offset = "0x1F59050", VA = "0x1F59050")]
	public bool DropField(Field field)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x1F590BC", Offset = "0x1F590BC", VA = "0x1F590BC")]
	private void ClearMoveMarks(Field field)
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x1F5913C", Offset = "0x1F5913C", VA = "0x1F5913C")]
	private int TryModifierMove(Field field)
	{
		return default(int);
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x1F592E0", Offset = "0x1F592E0", VA = "0x1F592E0")]
	private int TryDropCells(Field field, bool diagonal)
	{
		return default(int);
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x1F595C0", Offset = "0x1F595C0", VA = "0x1F595C0")]
	private bool TryFillSlot(Field field, int row, int col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x1F5961C", Offset = "0x1F5961C", VA = "0x1F5961C")]
	private bool TryMoveAdjacentConveyors(Field field, int row, int col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x1F59860", Offset = "0x1F59860", VA = "0x1F59860")]
	private bool TryDropAdjacentCells(Field field, int row, int col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x1F59B68", Offset = "0x1F59B68", VA = "0x1F59B68")]
	public bool Place(Field field, Cell cell, int row, int col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x1F59D6C", Offset = "0x1F59D6C", VA = "0x1F59D6C")]
	public bool Place(Field field, Cell cell, Coordinates coords)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x1F59D74", Offset = "0x1F59D74", VA = "0x1F59D74")]
	public void InitConveyorChains(Field field)
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x1F59520", Offset = "0x1F59520", VA = "0x1F59520")]
	private bool DropCell(Field field, Cell cell, bool diagonal = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x1F59F24", Offset = "0x1F59F24", VA = "0x1F59F24")]
	private bool GetChainNeighbourCoordinates(Field field, Coordinates currentCoords, out Coordinates newCoords)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x1F5A170", Offset = "0x1F5A170", VA = "0x1F5A170")]
	private bool TryDropDown(Field field, Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x1F59A7C", Offset = "0x1F59A7C", VA = "0x1F59A7C")]
	private bool TryDropCellDown(Field field, Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x1F5A088", Offset = "0x1F5A088", VA = "0x1F5A088")]
	private bool TryDropDiagonal(Field field, Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x1F5A208", Offset = "0x1F5A208", VA = "0x1F5A208")]
	private bool CanMoveOnConveyor(Field field, int row, int col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x1F5A4EC", Offset = "0x1F5A4EC", VA = "0x1F5A4EC")]
	private int CheckValidDiagonalDrop(Field field, Cell cell)
	{
		return default(int);
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x1F5A108", Offset = "0x1F5A108", VA = "0x1F5A108")]
	private void ApplyCellDataChange(Field field, Cell cell)
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x1F59414", Offset = "0x1F59414", VA = "0x1F59414")]
	private bool TryModifierMove(Field field, Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x1F59980", Offset = "0x1F59980", VA = "0x1F59980")]
	private bool MoveCellAlongConveyor(Field field, Cell cell, Field.FieldModifiers conveyor)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x1F5AAF0", Offset = "0x1F5AAF0", VA = "0x1F5AAF0")]
	private bool GetAdjacentCoordDeltas(Field.FieldModifiers conveyor, out int deltaRow, out int deltaCol, bool primary = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x1F5AB94", Offset = "0x1F5AB94", VA = "0x1F5AB94")]
	private bool GetCoordDelta(Field.FieldModifiers conveyor, out int deltaRow, out int deltaCol)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x1F5A820", Offset = "0x1F5A820", VA = "0x1F5A820")]
	private bool ApplyDiagonalDrop(Field field, Cell cell, Field.FieldModifiers conveyor)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x1F5A62C", Offset = "0x1F5A62C", VA = "0x1F5A62C")]
	private bool IsDiagonalDroppable(Field field, int row, int col, bool conveyorDrop = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x1F5A3D0", Offset = "0x1F5A3D0", VA = "0x1F5A3D0")]
	private bool ExecuteModifier(Field field, Cell cell, int row, int col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x1F5ACF4", Offset = "0x1F5ACF4", VA = "0x1F5ACF4")]
	private bool ExecuteModifier(Field field, Cell cell, Coordinates coordinates)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x1F5AC1C", Offset = "0x1F5AC1C", VA = "0x1F5AC1C")]
	private bool ExecuteTransparentBlock(Field field, Cell cell, int row, int col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x1F5ACFC", Offset = "0x1F5ACFC", VA = "0x1F5ACFC")]
	public FieldCellDropper()
	{
	}
}
[Token(Token = "0x2000227")]
public class FieldComboVisualiser : MonoBehaviour
{
	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ParticleSystem> Particles;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource SoundX2;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource SoundX3;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource SoundX4;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource SoundX5;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource SoundXMore;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<int, int> indexRanges;

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x1F5AED0", Offset = "0x1F5AED0", VA = "0x1F5AED0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x1F5AF88", Offset = "0x1F5AF88", VA = "0x1F5AF88")]
	private void PlayParticle(Cell cell, int combo)
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x1F5B154", Offset = "0x1F5B154", VA = "0x1F5B154")]
	public FieldComboVisualiser()
	{
	}
}
[Serializable]
[Token(Token = "0x2000228")]
public abstract class FieldLogic : MonoBehaviour
{
	[Token(Token = "0x6000C3D")]
	public abstract void Init(Field field, FieldData<CellPositionData> cellPositions);

	[Token(Token = "0x6000C3E")]
	public abstract bool Move(Field field, FieldData<Cell> cells, Cell cell, Coordinates destination, bool forced = false);

	[Token(Token = "0x6000C3F")]
	public abstract void PlaceCell(Cell cell, int row, int col, bool forced = false, bool dropFromTop = true, [Optional] Action callback);

	[Token(Token = "0x6000C40")]
	public abstract bool Remove(Field field, FieldData<Cell> cells, Coordinates destination);

	[Token(Token = "0x6000C41")]
	public abstract void Process(Field field, FieldData<Cell> cells);

	[Token(Token = "0x6000C42")]
	public abstract void RunValidation(Field field, Cell cell1, Cell cell2, bool waitExtra);

	[Token(Token = "0x6000C43")]
	public abstract void Remake(Field field);

	[Token(Token = "0x6000C44")]
	public abstract void InitCell(Field field, int row, int col, CellType cellType, PluginType pluginType, bool spawnInplace = false);

	[Token(Token = "0x6000C45")]
	public abstract void Stop();

	[Token(Token = "0x6000C46")]
	public abstract bool IsStopped();

	[Token(Token = "0x6000C47")]
	public abstract void Resume();

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x1F5DAC8", Offset = "0x1F5DAC8", VA = "0x1F5DAC8")]
	protected FieldLogic()
	{
	}
}
[Serializable]
[Token(Token = "0x2000229")]
public class FieldLogicClassic : FieldLogic
{
	[Token(Token = "0x20003CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAA88", Offset = "0xAFAA88")]
	private sealed class <ValidationCyclesRoutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FieldLogicClassic <>4__this;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Cell cell1;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Cell cell2;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Field field;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool waitExtra;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FieldData<CellType> <generatorData>5__2;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private FieldData<PluginType> <pluginData>5__3;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool <canDrop>5__4;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool <droppedOnce>5__5;

		[Token(Token = "0x170000C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001577")]
			[Address(RVA = "0x1F5FE84", Offset = "0x1F5FE84", VA = "0x1F5FE84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001579")]
			[Address(RVA = "0x1F5FEEC", Offset = "0x1F5FEEC", VA = "0x1F5FEEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x1F5E14C", Offset = "0x1F5E14C", VA = "0x1F5E14C")]
		[DebuggerHidden]
		public <ValidationCyclesRoutine>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x1F5F4EC", Offset = "0x1F5F4EC", VA = "0x1F5F4EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x1F5F4F0", Offset = "0x1F5F4F0", VA = "0x1F5F4F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x1F5FE8C", Offset = "0x1F5FE8C", VA = "0x1F5FE8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAA98", Offset = "0xAFAA98")]
	private sealed class <ValidationRoutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600157D")]
			[Address(RVA = "0x1F31CF8", Offset = "0x1F31CF8", VA = "0x1F31CF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600157F")]
			[Address(RVA = "0x1F31D60", Offset = "0x1F31D60", VA = "0x1F31D60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x1F31C94", Offset = "0x1F31C94", VA = "0x1F31C94")]
		[DebuggerHidden]
		public <ValidationRoutine>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x1F31CC0", Offset = "0x1F31CC0", VA = "0x1F31CC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x1F31CC4", Offset = "0x1F31CC4", VA = "0x1F31CC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x1F31D00", Offset = "0x1F31D00", VA = "0x1F31D00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Cell> _cellsToDestroy;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Cell> _swappedCells;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaitForSeconds _cellDelay;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WaitForSeconds _lerpDelay;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaitForSeconds _halfLerpDelay;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FieldData<CellPositionData> _cellPositions;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine _validationRoutine;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _stopped;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private FieldValidator.MatchEvent OnAddCellsEvent;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private FieldCellDropper _dropper;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _runCycle;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int _currentCombo;

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x1F5DAD0", Offset = "0x1F5DAD0", VA = "0x1F5DAD0", Slot = "4")]
	public override void Init(Field field, FieldData<CellPositionData> cellPositions)
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x1F5DBE4", Offset = "0x1F5DBE4", VA = "0x1F5DBE4", Slot = "5")]
	public override bool Move(Field field, FieldData<Cell> cells, Cell cell, Coordinates destination, bool forced = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x1F5DE24", Offset = "0x1F5DE24", VA = "0x1F5DE24", Slot = "9")]
	public override void RunValidation(Field field, Cell cell1, Cell cell2, bool waitExtra = false)
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x1F5DF80", Offset = "0x1F5DF80", VA = "0x1F5DF80", Slot = "7")]
	public override bool Remove(Field field, FieldData<Cell> cells, Coordinates coords)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x1F5DF88", Offset = "0x1F5DF88", VA = "0x1F5DF88", Slot = "10")]
	public override void Remake(Field field)
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x1F5DFD4", Offset = "0x1F5DFD4", VA = "0x1F5DFD4", Slot = "8")]
	public override void Process(Field field, FieldData<Cell> cells)
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x1F5DFD8", Offset = "0x1F5DFD8", VA = "0x1F5DFD8")]
	public bool Swap(FieldData<Cell> cells, Cell cell1, Cell cell2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x1F5E144", Offset = "0x1F5E144", VA = "0x1F5E144", Slot = "13")]
	public override bool IsStopped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x1F5DEE4", Offset = "0x1F5DEE4", VA = "0x1F5DEE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB0005C", Offset = "0xB0005C")]
	private IEnumerator ValidationCyclesRoutine(Field field, Cell cell1, Cell cell2, bool waitExtra)
	{
		return null;
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x1F5DED0", Offset = "0x1F5DED0", VA = "0x1F5DED0")]
	private void SilentSwapCells(Field field, Cell cell1, Cell cell2)
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x1F5DCE8", Offset = "0x1F5DCE8", VA = "0x1F5DCE8")]
	private bool Swap(Field field, Cell cell1, Cell cell2, bool forced = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x1F5E270", Offset = "0x1F5E270", VA = "0x1F5E270")]
	private bool IsMatchPossible(Field field, Cell cell1, Cell cell2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x1F5E3FC", Offset = "0x1F5E3FC", VA = "0x1F5E3FC")]
	private bool AreCellsMatchable(Cell cell1, Cell cell2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x1F5E31C", Offset = "0x1F5E31C", VA = "0x1F5E31C")]
	private void LerpCells(Field field, Cell cell, Cell cell2)
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x1F5E458", Offset = "0x1F5E458", VA = "0x1F5E458")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB000C0", Offset = "0xB000C0")]
	private IEnumerator ValidationRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x1F5E4B8", Offset = "0x1F5E4B8", VA = "0x1F5E4B8", Slot = "6")]
	public override void PlaceCell(Cell cell, int row, int col, bool forced = false, bool dropFromTop = true, [Optional] Action callback)
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x1F5E120", Offset = "0x1F5E120", VA = "0x1F5E120")]
	public void PlaceCell(Cell cell, Coordinates coords, bool forced = false, bool dropFromTop = true, [Optional] Action callback)
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x1F5E6AC", Offset = "0x1F5E6AC", VA = "0x1F5E6AC")]
	private bool IsFieldSpawnable(Field field)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x1F5E804", Offset = "0x1F5E804", VA = "0x1F5E804")]
	private void SetUnspawnableSlots(Field field)
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x1F5E854", Offset = "0x1F5E854", VA = "0x1F5E854")]
	private void SetUnspawnableColumn(Field field, int col)
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x1F5EB7C", Offset = "0x1F5EB7C", VA = "0x1F5EB7C")]
	public void InitCell(Field field, int row, int col, FieldData<CellType> generatorData, FieldData<PluginType> pluginData, bool spawnInplace = false)
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x1F5EC20", Offset = "0x1F5EC20", VA = "0x1F5EC20", Slot = "11")]
	public override void InitCell(Field field, int row, int col, CellType cellType, PluginType pluginType, bool spawnInplace = false)
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x1F5E178", Offset = "0x1F5E178", VA = "0x1F5E178")]
	private void UpdateSwappedCells(Cell cell1, Cell cell2)
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x1F5EEB0", Offset = "0x1F5EEB0", VA = "0x1F5EEB0")]
	private bool RunValidatorCycle(Field field)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x1F5EF88", Offset = "0x1F5EF88", VA = "0x1F5EF88")]
	private bool DestroyCells(Field field)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x1F5F0B4", Offset = "0x1F5F0B4", VA = "0x1F5F0B4")]
	private void AddCellsToDestroy(Field field, Cell plugin, List<Cell> cells)
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x1F5F228", Offset = "0x1F5F228", VA = "0x1F5F228")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x1F5F310", Offset = "0x1F5F310", VA = "0x1F5F310")]
	public void Stop(LevelLoader.LevelID level, LevelLoader.LevelRegion region, LevelLoader.LevelID previousLevel)
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x1F5F31C", Offset = "0x1F5F31C", VA = "0x1F5F31C", Slot = "12")]
	public override void Stop()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x1F5F354", Offset = "0x1F5F354", VA = "0x1F5F354", Slot = "14")]
	public override void Resume()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x1F5F35C", Offset = "0x1F5F35C", VA = "0x1F5F35C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x1F5F3CC", Offset = "0x1F5F3CC", VA = "0x1F5F3CC")]
	public FieldLogicClassic()
	{
	}
}
[Token(Token = "0x200022A")]
public class FieldManager
{
	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<int, Field> Fields;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Field.CellEvent OnCellCreate;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Field.CellEvent OnCellRemove;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Field.CellEvent OnPluginCreate;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Field.FieldEvent OnValidateStart;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Field.FieldEvent OnValidateProgress;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Field.FieldEvent OnValidationCycleComplete;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Field.FieldEvent OnValidateEnd;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Field.FieldEvent OnAllValidationCyclesComplete;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Field.FieldEvent OnInitComplete;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Field.FieldEvent OnGenerationComplete;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Field.FieldEvent OnGenerationAnalysisComplete;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Field.FieldEvent OnGenerationFailed;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Field.FieldEvent OnReshuffle;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Field.SwapCellEvent OnCellSwap;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Field.CellExplosionEvent OnCellsExplode;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Field.CellExplosionEvent OnMatch;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _index;

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x1F31D68", Offset = "0x1F31D68", VA = "0x1F31D68")]
	public Field GetField(int index)
	{
		return null;
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x1F31E04", Offset = "0x1F31E04", VA = "0x1F31E04")]
	public void AddField(Field field)
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x1F31EB4", Offset = "0x1F31EB4", VA = "0x1F31EB4")]
	public void RemoveField(Field field)
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x1F31F8C", Offset = "0x1F31F8C", VA = "0x1F31F8C")]
	public void ResetEvents()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x1F31FAC", Offset = "0x1F31FAC", VA = "0x1F31FAC")]
	public void ClearFields()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x1F32028", Offset = "0x1F32028", VA = "0x1F32028")]
	public FieldManager()
	{
	}
}
[Token(Token = "0x200022B")]
public class FieldManagerService : MonoBehaviour
{
	[Token(Token = "0x20003D1")]
	public enum EventScope
	{
		[Token(Token = "0x40012B5")]
		Local,
		[Token(Token = "0x40012B6")]
		Global,
		[Token(Token = "0x40012B7")]
		Both
	}

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Field.CellEvent OnCellCreate;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Field.CellEvent OnCellRemove;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Field.CellEvent OnPluginCreate;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Field.FieldEvent OnGenerationComplete;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Field.FieldEvent OnGenerationAnalysisComplete;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Field.FieldEvent OnGenerationFailed;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Field.FieldEvent OnValidateStart;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Field.FieldEvent OnValidateProgress;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Field.FieldEvent OnValidationCycleComplete;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Field.FieldEvent OnAllValidationCyclesComplete;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Field.FieldEvent OnValidateEnd;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Field.FieldEvent OnInitComplete;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Field.FieldEvent OnReshuffle;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Field.SwapCellEvent OnCellSwap;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Field.CellExplosionEvent OnCellsExplode;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Field.CellExplosionEvent OnMatch;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FieldManagerService _instance;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private FieldManager _managerInstance;

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x1F320A4", Offset = "0x1F320A4", VA = "0x1F320A4")]
	public static void OnCellCreateSubscribe(Field.CellEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x1F3219C", Offset = "0x1F3219C", VA = "0x1F3219C")]
	public static void OnCellCreateUnsubscribe(Field.CellEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x1F32294", Offset = "0x1F32294", VA = "0x1F32294")]
	public static void OnCellRemoveSubscribe(Field.CellEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x1F3238C", Offset = "0x1F3238C", VA = "0x1F3238C")]
	public static void OnCellRemoveUnsubscribe(Field.CellEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x1F32484", Offset = "0x1F32484", VA = "0x1F32484")]
	public static void OnPluginCreateSubscribe(Field.CellEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x1F3257C", Offset = "0x1F3257C", VA = "0x1F3257C")]
	public static void OnPluginCreateUnsubscribe(Field.CellEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x1F32674", Offset = "0x1F32674", VA = "0x1F32674")]
	public static void OnValidateStartSubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x1F3276C", Offset = "0x1F3276C", VA = "0x1F3276C")]
	public static void OnValidateStartUnsubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x1F32864", Offset = "0x1F32864", VA = "0x1F32864")]
	public static void OnValidateProgressSubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x1F3295C", Offset = "0x1F3295C", VA = "0x1F3295C")]
	public static void OnValidateProgressUnsSubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x1F32A54", Offset = "0x1F32A54", VA = "0x1F32A54")]
	public static void OnValidationCycleCompleteSubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x1F32B4C", Offset = "0x1F32B4C", VA = "0x1F32B4C")]
	public static void OnValidationCycleCompleteUnsubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x1F32C44", Offset = "0x1F32C44", VA = "0x1F32C44")]
	public static void OnValidateEndSubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x1F32D3C", Offset = "0x1F32D3C", VA = "0x1F32D3C")]
	public static void OnValidateEndUnsubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x1F32E34", Offset = "0x1F32E34", VA = "0x1F32E34")]
	public static void OnAllValidationCyclesCompleteSubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x1F32F2C", Offset = "0x1F32F2C", VA = "0x1F32F2C")]
	public static void OnAllValidationCyclesCompleteUnsubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x1F33024", Offset = "0x1F33024", VA = "0x1F33024")]
	public static void OnCellSwapSubscribe(Field.SwapCellEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x1F3311C", Offset = "0x1F3311C", VA = "0x1F3311C")]
	public static void OnCellSwapUnsubscribe(Field.SwapCellEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x1F33214", Offset = "0x1F33214", VA = "0x1F33214")]
	public static void OnCellsExplodeSubscribe(Field.CellExplosionEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x1F3330C", Offset = "0x1F3330C", VA = "0x1F3330C")]
	public static void OnCellsExplodeUnsubscribe(Field.CellExplosionEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x1F33404", Offset = "0x1F33404", VA = "0x1F33404")]
	public static void OnInitCompleteSubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x1F334FC", Offset = "0x1F334FC", VA = "0x1F334FC")]
	public static void OnInitCompleteUnsubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x1F335F4", Offset = "0x1F335F4", VA = "0x1F335F4")]
	public static void OnGenerationCompleteSubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x1F336EC", Offset = "0x1F336EC", VA = "0x1F336EC")]
	public static void OnGenerationCompleteUnsubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x1F337E4", Offset = "0x1F337E4", VA = "0x1F337E4")]
	public static void OnGenerationAnalysisCompleteSubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x1F338DC", Offset = "0x1F338DC", VA = "0x1F338DC")]
	public static void OnGenerationAnalysisCompleteUnsubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x1F339D4", Offset = "0x1F339D4", VA = "0x1F339D4")]
	public static void OnGenerationFailedSubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x1F33ACC", Offset = "0x1F33ACC", VA = "0x1F33ACC")]
	public static void OnGenerationFailedUnsubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x1F33BC4", Offset = "0x1F33BC4", VA = "0x1F33BC4")]
	public static void OnReshuffleSubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x1F33CBC", Offset = "0x1F33CBC", VA = "0x1F33CBC")]
	public static void OnReshuffleUnsubscribe(Field.FieldEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x1F33DB4", Offset = "0x1F33DB4", VA = "0x1F33DB4")]
	public static void OnMatchSubscribe(Field.CellExplosionEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x1F33EAC", Offset = "0x1F33EAC", VA = "0x1F33EAC")]
	public static void OnMatchUnsubscribe(Field.CellExplosionEvent callback, EventScope scope = EventScope.Local)
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x1F33FA4", Offset = "0x1F33FA4", VA = "0x1F33FA4")]
	public static void OnCellCreateInvoke(Field field, Cell cell)
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x1F34060", Offset = "0x1F34060", VA = "0x1F34060")]
	public static void OnCellRemoveInvoke(Field field, Cell cell)
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x1F3411C", Offset = "0x1F3411C", VA = "0x1F3411C")]
	public static void OnPluginCreateInvoke(Field field, Cell cell)
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x1F341D8", Offset = "0x1F341D8", VA = "0x1F341D8")]
	public static void OnValidateStartInvoke(Field field)
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x1F3427C", Offset = "0x1F3427C", VA = "0x1F3427C")]
	public static void OnValidateProgressInvoke(Field field)
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x1F34320", Offset = "0x1F34320", VA = "0x1F34320")]
	public static void OnValidationCycleCompleteInvoke(Field field)
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x1F343C4", Offset = "0x1F343C4", VA = "0x1F343C4")]
	public static void OnValidateEndInvoke(Field field)
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x1F34468", Offset = "0x1F34468", VA = "0x1F34468")]
	public static void OnAllValidationCyclesCompleteInvoke(Field field)
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x1F3450C", Offset = "0x1F3450C", VA = "0x1F3450C")]
	public static void OnCellSwapInvoke(Field field, Cell cell1, Cell cell2)
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x1F345D4", Offset = "0x1F345D4", VA = "0x1F345D4")]
	public static void OnCellsExplodeInvoke(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x1F34690", Offset = "0x1F34690", VA = "0x1F34690")]
	public static void OnInitCompleteInvoke(Field field)
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x1F34734", Offset = "0x1F34734", VA = "0x1F34734")]
	public static void OnGenerationCompleteInvoke(Field field)
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x1F347D8", Offset = "0x1F347D8", VA = "0x1F347D8")]
	public static void OnGenerationAnalysisCompleteInvoke(Field field)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x1F3487C", Offset = "0x1F3487C", VA = "0x1F3487C")]
	public static void OnOnGenerationFailedInvoke(Field field)
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x1F34920", Offset = "0x1F34920", VA = "0x1F34920")]
	public static void OnReshuffleInvoke(Field field)
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x1F349C4", Offset = "0x1F349C4", VA = "0x1F349C4")]
	public static void OnMatchInvoke(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x1F34A80", Offset = "0x1F34A80", VA = "0x1F34A80")]
	public static Field GetField(int id)
	{
		return null;
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x1F34AE8", Offset = "0x1F34AE8", VA = "0x1F34AE8")]
	public static void AddField(Field field)
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x1F34B50", Offset = "0x1F34B50", VA = "0x1F34B50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x1F34C88", Offset = "0x1F34C88", VA = "0x1F34C88")]
	private void InitLocalManager(LevelLoader.LevelID level, LevelLoader.LevelRegion region, LevelLoader.LevelID previousLevel)
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x1F34CC8", Offset = "0x1F34CC8", VA = "0x1F34CC8")]
	public FieldManagerService()
	{
	}
}
[Token(Token = "0x200022C")]
public interface IInstrumentLogic
{
	[Token(Token = "0x6000CA5")]
	void Subscribe(MelodyNodeCellGroup group);

	[Token(Token = "0x6000CA6")]
	void Unsubscribe(MelodyNodeCellGroup group);

	[Token(Token = "0x6000CA7")]
	bool ActivationCheck(MelodyNodeCellGroup group);
}
[Token(Token = "0x200022D")]
public class InstrumentPipes : IInstrumentLogic
{
	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Cell _cell;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MelodyNodeCellGroup _group;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _activated;

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x1EDF9EC", Offset = "0x1EDF9EC", VA = "0x1EDF9EC", Slot = "6")]
	public bool ActivationCheck(MelodyNodeCellGroup group)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x1EDFA38", Offset = "0x1EDFA38", VA = "0x1EDFA38", Slot = "4")]
	public void Subscribe(MelodyNodeCellGroup group)
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x1EDFAF8", Offset = "0x1EDFAF8", VA = "0x1EDFAF8", Slot = "5")]
	public void Unsubscribe(MelodyNodeCellGroup group)
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x1EDFBAC", Offset = "0x1EDFBAC", VA = "0x1EDFBAC")]
	private void CellImpactCheck(Cell cell)
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x1EDFBD0", Offset = "0x1EDFBD0", VA = "0x1EDFBD0")]
	private void ClearActivation(Field field)
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x1EDFBD8", Offset = "0x1EDFBD8", VA = "0x1EDFBD8")]
	public InstrumentPipes()
	{
	}
}
[Token(Token = "0x200022E")]
public class InstrumentBells : IInstrumentLogic
{
	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Cell _cell;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MelodyNodeCellGroup _group;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _activated;

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x1EDF50C", Offset = "0x1EDF50C", VA = "0x1EDF50C", Slot = "6")]
	public bool ActivationCheck(MelodyNodeCellGroup group)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x1EDF560", Offset = "0x1EDF560", VA = "0x1EDF560", Slot = "4")]
	public void Subscribe(MelodyNodeCellGroup group)
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x1EDF65C", Offset = "0x1EDF65C", VA = "0x1EDF65C", Slot = "5")]
	public void Unsubscribe(MelodyNodeCellGroup group)
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x1EDF784", Offset = "0x1EDF784", VA = "0x1EDF784")]
	private void CellImpactCheck(Cell cell)
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x1EDF7C4", Offset = "0x1EDF7C4", VA = "0x1EDF7C4")]
	private void BonusExplodeCheck(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x1EDF7A8", Offset = "0x1EDF7A8", VA = "0x1EDF7A8")]
	private void TryActivate(Cell cell)
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x1EDF890", Offset = "0x1EDF890", VA = "0x1EDF890")]
	private void ClearActivation(Field field)
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x1EDF898", Offset = "0x1EDF898", VA = "0x1EDF898")]
	public InstrumentBells()
	{
	}
}
[Token(Token = "0x200022F")]
public class InstrumentGong : IInstrumentLogic
{
	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Cell _cell;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MelodyNodeCellGroup _group;

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x1EDF8A0", Offset = "0x1EDF8A0", VA = "0x1EDF8A0", Slot = "6")]
	public bool ActivationCheck(MelodyNodeCellGroup group)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x1EDF8C4", Offset = "0x1EDF8C4", VA = "0x1EDF8C4", Slot = "4")]
	public void Subscribe(MelodyNodeCellGroup group)
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x1EDF948", Offset = "0x1EDF948", VA = "0x1EDF948", Slot = "5")]
	public void Unsubscribe(MelodyNodeCellGroup group)
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x1EDF9C0", Offset = "0x1EDF9C0", VA = "0x1EDF9C0")]
	private void TryActivate(Cell cell)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x1EDF9E4", Offset = "0x1EDF9E4", VA = "0x1EDF9E4")]
	public InstrumentGong()
	{
	}
}
[Token(Token = "0x2000230")]
public class MelodyNodeCellGroup : CellGroup
{
	[Token(Token = "0x20003D2")]
	public enum Instrument
	{
		[Token(Token = "0x40012B9")]
		Pipes,
		[Token(Token = "0x40012BA")]
		Bell,
		[Token(Token = "0x40012BB")]
		Gong
	}

	[Serializable]
	[Token(Token = "0x20003D3")]
	public class MelodyNodeCellGroupData : CellGroupData
	{
		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Instrument Instrument;

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xE0DDD8", Offset = "0xE0DDD8", VA = "0xE0DDD8")]
		public MelodyNodeCellGroupData()
		{
		}
	}

	[Token(Token = "0x20003D4")]
	public delegate void MelodyNodeEvent(int keycode);

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MelodyNodeEvent OnRing;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IInstrumentLogic _logic;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Instrument _instrument;

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xE0DA50", Offset = "0xE0DA50", VA = "0xE0DA50")]
	public MelodyNodeCellGroup(Field field, MelodyNodeCellGroupData data)
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xE0DBB0", Offset = "0xE0DBB0", VA = "0xE0DBB0", Slot = "10")]
	protected override void OnActivate(Field field, List<Coordinates> memberCoords)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xE0DC40", Offset = "0xE0DC40", VA = "0xE0DC40", Slot = "9")]
	protected override void StopListenActivationEvent()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xE0DD04", Offset = "0xE0DD04", VA = "0xE0DD04")]
	public void TryActivate()
	{
	}
}
[Token(Token = "0x2000231")]
public class RuneRemoveCellGroupVisualiser : CellGroupVisualiser
{
	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xD48D74", Offset = "0xD48D74", VA = "0xD48D74")]
	public RuneRemoveCellGroupVisualiser()
	{
	}
}
[Token(Token = "0x2000232")]
public class BrushPrefabs : SerializedMonoBehaviour
{
	[Token(Token = "0x20003D5")]
	public enum BrushType
	{
		[Token(Token = "0x40012BE")]
		Default = 0,
		[Token(Token = "0x40012BF")]
		Rune1Base = 1,
		[Token(Token = "0x40012C0")]
		Rune1Flame = 2,
		[Token(Token = "0x40012C1")]
		Rune1Cross = 3,
		[Token(Token = "0x40012C2")]
		Rune1Freeze = 4,
		[Token(Token = "0x40012C3")]
		Rune1Fire = 5,
		[Token(Token = "0x40012C4")]
		Rune1Dust = 6,
		[Token(Token = "0x40012C5")]
		Rune2Base = 11,
		[Token(Token = "0x40012C6")]
		Rune2Flame = 12,
		[Token(Token = "0x40012C7")]
		Rune2Cross = 13,
		[Token(Token = "0x40012C8")]
		Rune2Freeze = 14,
		[Token(Token = "0x40012C9")]
		Rune2Fire = 15,
		[Token(Token = "0x40012CA")]
		Rune2Dust = 16,
		[Token(Token = "0x40012CB")]
		Rune3Base = 21,
		[Token(Token = "0x40012CC")]
		Rune3Flame = 22,
		[Token(Token = "0x40012CD")]
		Rune3Cross = 23,
		[Token(Token = "0x40012CE")]
		Rune3Freeze = 24,
		[Token(Token = "0x40012CF")]
		Rune3Fire = 25,
		[Token(Token = "0x40012D0")]
		Rune3Dust = 26,
		[Token(Token = "0x40012D1")]
		Rune4Base = 31,
		[Token(Token = "0x40012D2")]
		Rune4Flame = 32,
		[Token(Token = "0x40012D3")]
		Rune4Cross = 33,
		[Token(Token = "0x40012D4")]
		Rune4Freeze = 34,
		[Token(Token = "0x40012D5")]
		Rune4Fire = 35,
		[Token(Token = "0x40012D6")]
		Rune4Dust = 36,
		[Token(Token = "0x40012D7")]
		Rune5Base = 41,
		[Token(Token = "0x40012D8")]
		Rune5Flame = 42,
		[Token(Token = "0x40012D9")]
		Rune5Cross = 43,
		[Token(Token = "0x40012DA")]
		Rune5Freeze = 44,
		[Token(Token = "0x40012DB")]
		Rune5Fire = 45,
		[Token(Token = "0x40012DC")]
		Rune5Dust = 46,
		[Token(Token = "0x40012DD")]
		Rune6Base = 51,
		[Token(Token = "0x40012DE")]
		Rune6Flame = 52,
		[Token(Token = "0x40012DF")]
		Rune6Cross = 53,
		[Token(Token = "0x40012E0")]
		Rune6Freeze = 54,
		[Token(Token = "0x40012E1")]
		Rune6Fire = 55,
		[Token(Token = "0x40012E2")]
		Rune6Dust = 56,
		[Token(Token = "0x40012E3")]
		Rune7Base = 61,
		[Token(Token = "0x40012E4")]
		Rune7Flame = 62,
		[Token(Token = "0x40012E5")]
		Rune7Cross = 63,
		[Token(Token = "0x40012E6")]
		Rune7Freeze = 64,
		[Token(Token = "0x40012E7")]
		Rune7Fire = 65,
		[Token(Token = "0x40012E8")]
		Rune7Dust = 66,
		[Token(Token = "0x40012E9")]
		Hyper = 71,
		[Token(Token = "0x40012EA")]
		Mega = 72,
		[Token(Token = "0x40012EB")]
		Firefly = 73,
		[Token(Token = "0x40012EC")]
		DarkEnergy = 74,
		[Token(Token = "0x40012ED")]
		StoneBlock = 75,
		[Token(Token = "0x40012EE")]
		DestructibleStoneBlock = 76,
		[Token(Token = "0x40012EF")]
		Empty = 78,
		[Token(Token = "0x40012F0")]
		Border = 79,
		[Token(Token = "0x40012F1")]
		Spawner = 80,
		[Token(Token = "0x40012F2")]
		Lock = 81,
		[Token(Token = "0x40012F3")]
		ConveyorUp = 82,
		[Token(Token = "0x40012F4")]
		ConveyorDown = 83,
		[Token(Token = "0x40012F5")]
		ConveyorLeft = 84,
		[Token(Token = "0x40012F6")]
		ConveyorRight = 85,
		[Token(Token = "0x40012F7")]
		Snowflake = 86,
		[Token(Token = "0x40012F8")]
		Heat = 87,
		[Token(Token = "0x40012F9")]
		HiddenEvents = 88,
		[Token(Token = "0x40012FA")]
		DarkEnergyGenerator = 89,
		[Token(Token = "0x40012FB")]
		FireFlyWithHealth = 90,
		[Token(Token = "0x40012FC")]
		Water = 91,
		[Token(Token = "0x40012FD")]
		Spark = 92,
		[Token(Token = "0x40012FE")]
		Cloud = 93,
		[Token(Token = "0x40012FF")]
		CloudThunder = 94
	}

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Dictionary<BrushType, GameObject> Brushes;

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xE92754", Offset = "0xE92754", VA = "0xE92754")]
	public GameObject GetBrush(BrushType type)
	{
		return null;
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xE92808", Offset = "0xE92808", VA = "0xE92808")]
	public void InitBrushes()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xE92CC8", Offset = "0xE92CC8", VA = "0xE92CC8")]
	public BrushPrefabs()
	{
	}
}
[Token(Token = "0x2000233")]
public class FieldBuilder : SerializedMonoBehaviour
{
	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float Rows;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float Cols;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float CellOffset;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float RaycastDistance;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LayerMask Mask;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 PalettePosition;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 PaletteRotation;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 FieldOffset;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ObjectFieldData<FieldBuilderNode> Nodes;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<FieldBuilderNode> ChangedNodes;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform MyTransform;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public FieldMap Map;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public FieldBuilderNode NodePrefab;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject PalettePrefab;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject SpawnerPrefab;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject DefaultSlotPrefab;

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x1F548B4", Offset = "0x1F548B4", VA = "0x1F548B4")]
	public void RaycastPlane(bool use2DRaycast = false, bool test = false)
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x1F54D1C", Offset = "0x1F54D1C", VA = "0x1F54D1C")]
	public void ClearField()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x1F55E9C", Offset = "0x1F55E9C", VA = "0x1F55E9C")]
	public void SaveMap()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x1F55D88", Offset = "0x1F55D88", VA = "0x1F55D88")]
	public void ClearNodes()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x1F55EB0", Offset = "0x1F55EB0", VA = "0x1F55EB0")]
	public void Undo()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x1F54D8C", Offset = "0x1F54D8C", VA = "0x1F54D8C")]
	private void InitNodes(bool useMapData = false)
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x1F56208", Offset = "0x1F56208", VA = "0x1F56208")]
	private void InitMapNodes()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x1F55478", Offset = "0x1F55478", VA = "0x1F55478")]
	private FieldBuilderNode SpawnRaycastHitObject2D(Vector3 position, Vector3 direction, int row, int col)
	{
		return null;
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x1F55980", Offset = "0x1F55980", VA = "0x1F55980")]
	private FieldBuilderNode SpawnRaycastHitObject3D(Vector3 position, Vector3 direction, int row, int col)
	{
		return null;
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x1F551E4", Offset = "0x1F551E4", VA = "0x1F551E4")]
	private FieldBuilderNode SpawnTestObject(Vector3 position, int row, int col)
	{
		return null;
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x1F56390", Offset = "0x1F56390", VA = "0x1F56390")]
	private void TrySpawnSpawner(FieldBuilderNode item, int row, int col)
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x1F56218", Offset = "0x1F56218", VA = "0x1F56218")]
	private void SaveItemTransform(int row, int col, FieldBuilderNode item)
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x1F56588", Offset = "0x1F56588", VA = "0x1F56588")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x1F568CC", Offset = "0x1F568CC", VA = "0x1F568CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x1F566BC", Offset = "0x1F566BC", VA = "0x1F566BC")]
	public void InstantiateMapPrefabs()
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x1F568E8", Offset = "0x1F568E8", VA = "0x1F568E8")]
	public FieldBuilder()
	{
	}
}
[Token(Token = "0x2000234")]
public class FieldBuilderBrush : Raycastable
{
	[Token(Token = "0x20003D6")]
	public delegate void FieldBuilderBrushEvent(FieldBuilderBrush brush);

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FieldBuilderBrush SelectedBrush;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static FieldBuilderBrushEvent OnHighlight;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static FieldBuilderBrushEvent OnUnhighlight;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static FieldBuilderBrushEvent OnActivate;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static FieldBuilderBrushEvent OnDeactivate;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FieldBuilderMenu ParentMenu;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CellType Cell;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public PluginType Bonus;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Field.FieldModifiers Modifiers;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public CellModifiers CellMods;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Visuals;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BrushPrefabs.BrushType MyType;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BrushPrefabs Prefabs;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MeshRenderer BackgroundMesh;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material LitMaterial;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material UnlitMaterial;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool Additive;

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x1F568FC", Offset = "0x1F568FC", VA = "0x1F568FC")]
	public void InitType()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x1F56C3C", Offset = "0x1F56C3C", VA = "0x1F56C3C", Slot = "10")]
	public override void OnFocusStart(Wand wand)
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x1F56CC8", Offset = "0x1F56CC8", VA = "0x1F56CC8", Slot = "13")]
	public override void OnInteractionStart(Wand wand)
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x1F572F8", Offset = "0x1F572F8", VA = "0x1F572F8", Slot = "12")]
	public override void OnFocusEnd(Wand wand)
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x1F57300", Offset = "0x1F57300", VA = "0x1F57300")]
	public GameObject GetBrushPrefab()
	{
		return null;
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x1F56C44", Offset = "0x1F56C44", VA = "0x1F56C44")]
	public void ToggleHint(bool enabled)
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x1F56E90", Offset = "0x1F56E90", VA = "0x1F56E90")]
	public void Highlight()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x1F56DBC", Offset = "0x1F56DBC", VA = "0x1F56DBC")]
	public void Unhighlight()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x1F57324", Offset = "0x1F57324", VA = "0x1F57324", Slot = "16")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x1F573D8", Offset = "0x1F573D8", VA = "0x1F573D8")]
	public FieldBuilderBrush()
	{
	}
}
[Token(Token = "0x2000235")]
public class FieldBuilderInfoScreen : MonoBehaviour
{
	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro Text;

	[Token(Token = "0x4000B54")]
	private const string CELL_TYPE = "<color=#00FFAA>CellType:\n</color>";

	[Token(Token = "0x4000B55")]
	private const string BONUS_TYPE = "<color=#00FFAA>BonusType:\n</color>";

	[Token(Token = "0x4000B56")]
	private const string FIELD_MODIFIERS = "<color=#00FFAA>FieldModifiers:\n</color>";

	[Token(Token = "0x4000B57")]
	private const string CELL_MODIFIERS = "<color=#00FFAA>CellModifiers:\n</color>";

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x1F57420", Offset = "0x1F57420", VA = "0x1F57420")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x1F57530", Offset = "0x1F57530", VA = "0x1F57530")]
	private void DisplayBrushInfo(FieldBuilderBrush brush)
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x1F57898", Offset = "0x1F57898", VA = "0x1F57898")]
	private void DisplaySelectedBrushInfo(FieldBuilderBrush brush)
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x1F57C5C", Offset = "0x1F57C5C", VA = "0x1F57C5C")]
	public FieldBuilderInfoScreen()
	{
	}
}
[Token(Token = "0x2000236")]
public class FieldBuilderMenu : Raycastable
{
	[Token(Token = "0x20003D7")]
	public delegate void FieldBuilderMenuEvent(FieldBuilderMenu menu);

	[Token(Token = "0x20003D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAAA8", Offset = "0xAFAAA8")]
	private sealed class <ToggleMenu>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FieldBuilderMenu <>4__this;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LerpSpeed;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <startscale>5__2;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <targetScale>5__3;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <lerpPercentage>5__4;

		[Token(Token = "0x170000C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001590")]
			[Address(RVA = "0x1F589E4", Offset = "0x1F589E4", VA = "0x1F589E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001592")]
			[Address(RVA = "0x1F58A4C", Offset = "0x1F58A4C", VA = "0x1F58A4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x1F57F28", Offset = "0x1F57F28", VA = "0x1F57F28")]
		[DebuggerHidden]
		public <ToggleMenu>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x1F58430", Offset = "0x1F58430", VA = "0x1F58430", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x1F58434", Offset = "0x1F58434", VA = "0x1F58434", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x1F589EC", Offset = "0x1F589EC", VA = "0x1F589EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FieldBuilderMenuEvent OnActivate;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static FieldBuilderMenu ActivatedMenu;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Background;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject MenuItems;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 BackgroundScale;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public BrushPrefabs.BrushType MyType;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Visuals;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BrushPrefabs Prefabs;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine _meduDisplayRoutine;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _enabled;

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x1F57C64", Offset = "0x1F57C64", VA = "0x1F57C64")]
	public void ToggleMenu()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x1F57D38", Offset = "0x1F57D38", VA = "0x1F57D38", Slot = "13")]
	public override void OnInteractionStart(Wand wand)
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x1F57D60", Offset = "0x1F57D60", VA = "0x1F57D60")]
	private void EnableMenu()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x1F57E48", Offset = "0x1F57E48", VA = "0x1F57E48")]
	private void DisableMenu()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x1F57E98", Offset = "0x1F57E98", VA = "0x1F57E98")]
	private void DisableCoroutine(Coroutine coroutine)
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x1F57EA8", Offset = "0x1F57EA8", VA = "0x1F57EA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB00124", Offset = "0xB00124")]
	private IEnumerator ToggleMenu(float LerpSpeed)
	{
		return null;
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x1F57F54", Offset = "0x1F57F54", VA = "0x1F57F54", Slot = "16")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x1F58188", Offset = "0x1F58188", VA = "0x1F58188")]
	private void SetItemsParentMenu()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x1F5822C", Offset = "0x1F5822C", VA = "0x1F5822C")]
	private void CheckBrushForMenuDisable(FieldBuilderBrush brush)
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x1F58330", Offset = "0x1F58330", VA = "0x1F58330")]
	private void CheckBrushForMenuDisable(FieldBuilderMenu menu)
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x1F583CC", Offset = "0x1F583CC", VA = "0x1F583CC")]
	public FieldBuilderMenu()
	{
	}
}
[Token(Token = "0x2000237")]
public class FieldBuilderNode : Raycastable
{
	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FieldMap Map;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FieldMap.FieldDataNode Data;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Visuals;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Spawner;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<FieldBuilderNode> ChangedNodes;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static List<GameObject> ChangedVisuals;

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x1F5617C", Offset = "0x1F5617C", VA = "0x1F5617C")]
	public void Init(FieldMap map, int row, int col)
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x1F58A84", Offset = "0x1F58A84", VA = "0x1F58A84", Slot = "10")]
	public override void OnFocusStart(Wand wand)
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x1F58A8C", Offset = "0x1F58A8C", VA = "0x1F58A8C", Slot = "13")]
	public override void OnInteractionStart(Wand wand)
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x1F58E44", Offset = "0x1F58E44", VA = "0x1F58E44")]
	public void ApplyData()
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x1F58EFC", Offset = "0x1F58EFC", VA = "0x1F58EFC")]
	public void ClearData()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x1F55F0C", Offset = "0x1F55F0C", VA = "0x1F55F0C")]
	public static void Undo()
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x1F58F90", Offset = "0x1F58F90", VA = "0x1F58F90")]
	public FieldBuilderNode()
	{
	}
}
[Token(Token = "0x2000238")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAFA11C", Offset = "0xAFA11C")]
public class FieldBuilderParams : ScriptableObject
{
	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float CellOffset;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RaycastDistance;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FieldBuilderNode NodePrefab;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ObjectFieldData<FieldBuilderNode> Nodes;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform MyTransform;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FieldMap Map;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<FieldBuilderNode> ChangedNodes;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject PalettePrefab;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 PalettePosition;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 PaletteRotation;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 FieldOffset;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject SpawnerPrefab;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject DefaultSlotPrefab;

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x1F5903C", Offset = "0x1F5903C", VA = "0x1F5903C")]
	public FieldBuilderParams()
	{
	}
}
[Token(Token = "0x2000239")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAFA168", Offset = "0xAFA168")]
public class FieldFireMechanics : MonoBehaviour
{
	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<Cell> OnWaterCellExplode;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<Cell> OnSparkWasDestroy;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action<int> OnFieldFireCellCount;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action<int> OnDousedFire;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static FieldFireMechanics _instance;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Field ControlledField;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource ExtinguishSound;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Action<Field, Cell>> _validationStartEvent;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Cell> _cellsForValidationStartEvent;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Action<Field, Cell>> _validationFirstCycleEvent;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Cell> _cellsForValidationFirstCycleEvent;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Action<Field, Cell>> _validationCycleEvent;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Cell> _cellsForValidationCycleEvent;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Action<Field, Cell>> _validationAllCyclesEvent;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Cell> _cellsForValidationAllCyclesEvent;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Action<Field>> _onValidationStart;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Cell> _fireCell;

	[Token(Token = "0x4000B86")]
	private const int _countLoop = 4;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _fireCellsCount;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int _addFire;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _firstCycle;

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x1F5B2EC", Offset = "0x1F5B2EC", VA = "0x1F5B2EC")]
	public static void SubsribePluginToValidationStart(Field field, Action<Field, Cell> validationStart, Cell cell)
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x1F5B3D8", Offset = "0x1F5B3D8", VA = "0x1F5B3D8")]
	public static void UnsubscribePluginFromValidationStartEvent(Action<Field, Cell> validationStart, Cell cell)
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x1F5B4E4", Offset = "0x1F5B4E4", VA = "0x1F5B4E4")]
	public static void SubscribePluginToFirstValidationCycleComplete(Field field, Action<Field, Cell> action, Cell cell)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x1F5B5D0", Offset = "0x1F5B5D0", VA = "0x1F5B5D0")]
	public static void UnsubscribePluginFromFirstValidationCycleComplete(Action<Field, Cell> action, Cell cell)
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x1F5B6DC", Offset = "0x1F5B6DC", VA = "0x1F5B6DC")]
	public static void SubscribePluginToAllValidationCyclesComplete(Field field, Action<Field, Cell> action, Cell cell)
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x1F5B7C8", Offset = "0x1F5B7C8", VA = "0x1F5B7C8")]
	public static void UnsubscribePluginFromAllValidationCyclesComplete(Action<Field, Cell> validationStart, Cell cell)
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x1F5B8D4", Offset = "0x1F5B8D4", VA = "0x1F5B8D4")]
	public static void SubscribeToValidationStart(Action<Field> action)
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x1F5B984", Offset = "0x1F5B984", VA = "0x1F5B984")]
	public static void UnsubscribeFromValidationStart(Action<Field> action)
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x1F5BA34", Offset = "0x1F5BA34", VA = "0x1F5BA34")]
	public static bool IsCellCanBeFireCell(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x1F5BACC", Offset = "0x1F5BACC", VA = "0x1F5BACC")]
	public static void ExtinguishTheField()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x1F5BD6C", Offset = "0x1F5BD6C", VA = "0x1F5BD6C")]
	private void FieldAnalysis(Field field)
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x1F5C390", Offset = "0x1F5C390", VA = "0x1F5C390")]
	private void SetFireEffect(Cell cell)
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x1F5C444", Offset = "0x1F5C444", VA = "0x1F5C444")]
	private void WaterCellExplode(Cell cell)
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x1F5BB24", Offset = "0x1F5BB24", VA = "0x1F5BB24")]
	private void ExtinguishThisField()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x1F5C06C", Offset = "0x1F5C06C", VA = "0x1F5C06C")]
	private int HowManyFireCellsAdd()
	{
		return default(int);
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x1F5C0F4", Offset = "0x1F5C0F4", VA = "0x1F5C0F4")]
	private void CreateNewFire(Cell[][] cellsArray)
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x1F5C56C", Offset = "0x1F5C56C", VA = "0x1F5C56C")]
	private Cell SearchCellForBurn(Cell[][] cellArray, int startHeight, int startWidth)
	{
		return null;
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x1F5BEE4", Offset = "0x1F5BEE4", VA = "0x1F5BEE4")]
	private void GetAllFireCell(Cell[][] cellsArray)
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x1F5C1FC", Offset = "0x1F5C1FC", VA = "0x1F5C1FC")]
	private bool CreateAdjacentFireCell(Cell[][] cellsArray)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x1F5C860", Offset = "0x1F5C860", VA = "0x1F5C860")]
	private bool CanCellChangeItsStatus(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x1F5C698", Offset = "0x1F5C698", VA = "0x1F5C698")]
	private Cell Analyzed(int i, int cellRow, int cellCol, Cell[][] cellsArray)
	{
		return null;
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x1F5C8F8", Offset = "0x1F5C8F8", VA = "0x1F5C8F8")]
	private void LoadNextLevelStart(LevelLoader.LevelID level, LevelLoader.LevelRegion region, LevelLoader.LevelID previousLevel)
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x1F5CA04", Offset = "0x1F5CA04", VA = "0x1F5CA04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x1F5CCB4", Offset = "0x1F5CCB4", VA = "0x1F5CCB4")]
	private void ValidationCycleStart(Field field)
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x1F5CE24", Offset = "0x1F5CE24", VA = "0x1F5CE24")]
	private void FirstValidationCycleComplete(Field field)
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x1F5CF30", Offset = "0x1F5CF30", VA = "0x1F5CF30")]
	private void AllValidationCyclesComplete(Field field)
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x1F5D088", Offset = "0x1F5D088", VA = "0x1F5D088")]
	public FieldFireMechanics()
	{
	}
}
[Token(Token = "0x200023A")]
public class FieldFireMechanicsValues : MonoBehaviour
{
	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int PassagesFromFireToDust;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int PassagesFromDustToDestoyed;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int LimitedFireToField;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2Int GenerateFire;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCB8C", Offset = "0xAFCB8C")]
	public float ProbabilityAddingFire;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool GeneratedOnlyInNeighboringCells;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCBA4", Offset = "0xAFCBA4")]
	public float SparkGenerarionFromDust;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCBBC", Offset = "0xAFCBBC")]
	public float SparkGenerateFire;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool IsWaterDropsExtinguishField;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FieldFireMechanicsValues Instance;

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x1F5D214", Offset = "0x1F5D214", VA = "0x1F5D214")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x1F5D268", Offset = "0x1F5D268", VA = "0x1F5D268")]
	public static bool CanSparkWillGeneration()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x1F5D2D4", Offset = "0x1F5D2D4", VA = "0x1F5D2D4")]
	public static bool IsSparkMakeFire()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x1F5C4B8", Offset = "0x1F5C4B8", VA = "0x1F5C4B8")]
	public static int HowManyFireGeneratingOnField()
	{
		return default(int);
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x1F5D340", Offset = "0x1F5D340", VA = "0x1F5D340")]
	public FieldFireMechanicsValues()
	{
	}
}
[Token(Token = "0x200023B")]
public abstract class FieldGenerator : MonoBehaviour
{
	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected List<Coordinates> _emptyCells;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected List<Coordinates> _patternCoords;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected List<CellType> _typesLeft;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected List<CellType> _avoidType;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool EnableDebug;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<BaseGeneratorPlugin> Plugins;

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x1F5D3E0", Offset = "0x1F5D3E0", VA = "0x1F5D3E0")]
	protected void ReFillEmptyCellsList(Field field, FieldData<CellType> data, FieldData<PluginType> bonusData)
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x1F5D6B4", Offset = "0x1F5D6B4", VA = "0x1F5D6B4")]
	public List<Coordinates> GetEmptyCells(Field field, FieldData<CellType> data, FieldData<PluginType> bonusData)
	{
		return null;
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x1F5D5D0", Offset = "0x1F5D5D0", VA = "0x1F5D5D0")]
	public static bool CellIsReadyToPlaceForSpawn(Field.FieldModifiers modifiers, CellType type, PluginType bonusType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x1F5D6D8", Offset = "0x1F5D6D8", VA = "0x1F5D6D8")]
	public static bool CellIsReadyToPlace(Field.FieldModifiers modifiers, CellType type, PluginType bonusType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x1F5D7BC", Offset = "0x1F5D7BC", VA = "0x1F5D7BC")]
	public static bool CellIsInsideField(Field.FieldModifiers modifiers)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x1F5D7EC", Offset = "0x1F5D7EC", VA = "0x1F5D7EC")]
	public static bool ClassicIsValidCell(Field.FieldModifiers modifiers, CellType type, PluginType bonusType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x1F5D910", Offset = "0x1F5D910", VA = "0x1F5D910")]
	public static bool ClassicIsValidCellTypeAndModifiers(Field.FieldModifiers modifiers, CellType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D1C")]
	public abstract void Generate(Field field, FieldData<CellType> data, FieldData<PluginType> bonusData);

	[Token(Token = "0x6000D1D")]
	public abstract void StartGenerate(Field field, FieldData<CellType> data, FieldData<PluginType> bonusData);

	[Token(Token = "0x6000D1E")]
	public abstract void UpdateAnalyzationData(Field field, FieldData<CellType> data, FieldData<PluginType> pluginData, bool withFullAnalyzation);

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x1F5D9D8", Offset = "0x1F5D9D8", VA = "0x1F5D9D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x1F5D9E4", Offset = "0x1F5D9E4", VA = "0x1F5D9E4", Slot = "7")]
	protected virtual void OnAwake()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x1F5D9E8", Offset = "0x1F5D9E8", VA = "0x1F5D9E8")]
	protected FieldGenerator()
	{
	}
}
[Token(Token = "0x200023C")]
public class BurningLimiter : LimiterForLavaLevels
{
	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action OnPutOutTheLimiter;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Coordinates> CoordinatesForGeneratedSparks;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Coordinates> CoordinatesHiddenCells;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCBD4", Offset = "0xAFCBD4")]
	public float ProbabilityAddingFire;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector2Int AddFireItem;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int StepsToFire;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Action<Field> _onTryingToIgniteCells;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Cell> _cellsForSetFire;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _currentStepsToFire;

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xE931A4", Offset = "0xE931A4", VA = "0xE931A4")]
	private void WaterExploded(Cell cell)
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xE931D4", Offset = "0xE931D4", VA = "0xE931D4")]
	private void SubscribeToEvents()
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xE93330", Offset = "0xE93330", VA = "0xE93330")]
	private void UnsubscribeFromEvents()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xE9348C", Offset = "0xE9348C", VA = "0xE9348C")]
	private void CellImpactOrExplode(Cell cell)
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xE9359C", Offset = "0xE9359C", VA = "0xE9359C")]
	private void TryingToIgniteCells(Field field)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xE93750", Offset = "0xE93750", VA = "0xE93750")]
	private void SetFireToCells()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xE9385C", Offset = "0xE9385C", VA = "0xE9385C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xE9391C", Offset = "0xE9391C", VA = "0xE9391C")]
	public BurningLimiter()
	{
	}
}
[Token(Token = "0x200023D")]
public class LimiterForLavaLevels : MonoBehaviour
{
	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<float> OnDamageChanged;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<LimiterForLavaLevels> OnLimiterDestroyed;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int HP;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected int _damage;

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x1EEA800", Offset = "0x1EEA800", VA = "0x1EEA800", Slot = "4")]
	public virtual float GetHP()
	{
		return default(float);
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x1EEA828", Offset = "0x1EEA828", VA = "0x1EEA828")]
	public LimiterForLavaLevels()
	{
	}
}
[Token(Token = "0x200023E")]
public class SparksGenerator : LimiterForLavaLevels
{
	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Field Field;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCBEC", Offset = "0xAFCBEC")]
	public float SparkGenerationProbability;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector2Int NewSpark;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Coordinates> CoordinatesForGeneratedSparks;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Coordinates> CoordinatesHiddenCells;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource ImpactSound;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource DestroySound;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Cell> _cell;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _hpPercentage;

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xDF4C2C", Offset = "0xDF4C2C", VA = "0xDF4C2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xDF4DCC", Offset = "0xDF4DCC", VA = "0xDF4DCC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xDF4EF4", Offset = "0xDF4EF4", VA = "0xDF4EF4")]
	private void TryingToGenerateSparks(Field filed)
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xDF5020", Offset = "0xDF5020", VA = "0xDF5020")]
	private void SearchAllValideCell()
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xDF51B8", Offset = "0xDF51B8", VA = "0xDF51B8")]
	private void CellReceivedDamage(Cell cell)
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xDF532C", Offset = "0xDF532C", VA = "0xDF532C")]
	private void RemoveAllHiddenCells()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xDF4CB4", Offset = "0xDF4CB4", VA = "0xDF4CB4")]
	private void SubscribeToEvents()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xDF4DD0", Offset = "0xDF4DD0", VA = "0xDF4DD0")]
	private void UnSubscribeFromEvents()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xDF548C", Offset = "0xDF548C", VA = "0xDF548C")]
	public SparksGenerator()
	{
	}
}
[Token(Token = "0x200023F")]
public class SparksGeneratorVisualizer : MonoBehaviour
{
	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SparksGenerator SparksGenerator;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer GeneratorRenderer;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image Scale;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ScaleUpdatingTime;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody Rigidbody;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LimitersScaling LimitersScaling;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource Audio;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float MIN_EMMISION_COLOR;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float EMMISION_INTERVAL;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _currentProgressPercent;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _newProgress;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _progressUpdating;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _previousProgress;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TimerUpdateEvent _timerEvent;

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xDF550C", Offset = "0xDF550C", VA = "0xDF550C")]
	private void LimiterDamageWasChange(float livePercent)
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xDF565C", Offset = "0xDF565C", VA = "0xDF565C")]
	private void LimiterDestroy(LimiterForLavaLevels limiter)
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xDF55E4", Offset = "0xDF55E4", VA = "0xDF55E4")]
	private float GetUpdatingTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xDF57C8", Offset = "0xDF57C8", VA = "0xDF57C8")]
	private void TimerUpdateEvent(float percent, float targetTime)
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xDF586C", Offset = "0xDF586C", VA = "0xDF586C")]
	private void SetProgress(float newProgress)
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xDF5998", Offset = "0xDF5998", VA = "0xDF5998")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xDF5B08", Offset = "0xDF5B08", VA = "0xDF5B08")]
	public SparksGeneratorVisualizer()
	{
	}
}
[Token(Token = "0x2000240")]
public class WaterLimiter : MonoBehaviour
{
	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Coordinates> CellCoordinates;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int StepsPerStage;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action OnResetToBaseState;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<float> OnChangedLevelActivation;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<WaterLimiter> WaterLimiters;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float _countValidations;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ACTIVATION_CYCLE;

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x1CB5A70", Offset = "0x1CB5A70", VA = "0x1CB5A70")]
	public void ValidationCycleComplete(Field field)
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x1CB5B84", Offset = "0x1CB5B84", VA = "0x1CB5B84", Slot = "4")]
	protected virtual void Subscribe()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x1CB5C64", Offset = "0x1CB5C64", VA = "0x1CB5C64", Slot = "5")]
	protected virtual void Unsubscribe()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x1CB5D44", Offset = "0x1CB5D44", VA = "0x1CB5D44")]
	private void CellImpactOrExplode(Cell cell)
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x1CB5E58", Offset = "0x1CB5E58", VA = "0x1CB5E58")]
	private bool IsControlledCoordinate(Coordinates coordinates)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x1CB5AEC", Offset = "0x1CB5AEC", VA = "0x1CB5AEC")]
	private float GetActivationLevel()
	{
		return default(float);
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x1CB5F08", Offset = "0x1CB5F08", VA = "0x1CB5F08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x1CB5F14", Offset = "0x1CB5F14", VA = "0x1CB5F14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x1CB5F20", Offset = "0x1CB5F20", VA = "0x1CB5F20")]
	public WaterLimiter()
	{
	}
}
[Token(Token = "0x2000241")]
public class WaterLimiterVisualizer : MonoBehaviour
{
	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaterLimiter Limiter;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject OneQuarterWater;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject HalfWater;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ThreeQuaterWater;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject FullWater;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem ExplosionEffect;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject _onGameObject;

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x1CB5F84", Offset = "0x1CB5F84", VA = "0x1CB5F84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x1CB6044", Offset = "0x1CB6044", VA = "0x1CB6044")]
	private void LevelActivationWasChanged(float newLevel)
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x1CB62E4", Offset = "0x1CB62E4", VA = "0x1CB62E4")]
	private void OnOtherVisualizer(GameObject newVisualizer)
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x1CB63C4", Offset = "0x1CB63C4", VA = "0x1CB63C4")]
	public WaterLimiterVisualizer()
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x1CB63CC", Offset = "0x1CB63CC", VA = "0x1CB63CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00188", Offset = "0xB00188")]
	private void <LevelActivationWasChanged>b__8_0()
	{
	}
}
[Token(Token = "0x2000242")]
public abstract class FieldValidator : MonoBehaviour
{
	[Token(Token = "0x20003D9")]
	public delegate void MatchEvent(Field field, Cell bonus, List<Cell> cells);

	[Token(Token = "0x6000D4C")]
	public abstract bool CheckGlobalMatches(Field field, FieldData<Cell> fieldData, MatchEvent onMatchEvent, List<Cell> swappedCells);

	[Token(Token = "0x6000D4D")]
	public abstract bool CheckLocalMatch(Field field, Cell cell, FieldData<Cell> fieldData, MatchEvent onMatchEvent);

	[Token(Token = "0x6000D4E")]
	public abstract Cell GetPossibleMove(Field field, FieldData<Cell> fieldData);

	[Token(Token = "0x6000D4F")]
	public abstract Cell GetPossibleMove(Field field, FieldData<Cell> fieldData, out Coordinates swapCords);

	[Token(Token = "0x6000D50")]
	public abstract PatternsCount GetPossibleMovesStruct();

	[Token(Token = "0x6000D51")]
	public abstract int GetPossibleMovesCount();

	[Token(Token = "0x6000D52")]
	public abstract void UpdateAnalyzationData(Field field, FieldData<CellType> fieldData, FieldData<PluginType> pluginData);

	[Token(Token = "0x6000D53")]
	public abstract void ClearFreezeCellAnalyzationData(Field field, FieldData<CellType> fieldData, FieldData<PluginType> pluginData);

	[Token(Token = "0x6000D54")]
	public abstract void FindHyperMegaBonuses(Field field, FieldData<PluginType> pluginData);

	[Token(Token = "0x6000D55")]
	public abstract void LocalUpdateAnalyzationData(List<Coordinates> coords, Field field, FieldData<CellType> fieldData, FieldData<PluginType> pluginData);

	[Token(Token = "0x6000D56")]
	public abstract void LocalUpdateAnalyzationData(Coordinates coords, Field field, FieldData<CellType> fieldData, FieldData<PluginType> pluginData);

	[Token(Token = "0x6000D57")]
	public abstract ClassicFieldValidator.AnalyzationPatternController GetAnalyzationPatternController();

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x1F360A8", Offset = "0x1F360A8", VA = "0x1F360A8")]
	protected FieldValidator()
	{
	}
}
[Token(Token = "0x2000243")]
public class FreezingFields : MonoBehaviour
{
	[Token(Token = "0x20003DA")]
	public delegate void FrozenFieldInform(Field field, int frozenCellCount, int snowflakeCount, int heatCount);

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FrozenFieldInform OnFieldHaveNotFrozenCells;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static FrozenFieldInform OnFieldContainsObjects;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action<Cell> OnCellFrezon;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action<Cell> OnCellThawed;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Action<Cell> OnMoveEndIceCell;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Action<Cell, bool> OnGenerationSnowflake;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Action OnFreezeFromDefaultCard;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static bool StopGeneration;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Field Field;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool WarmZone;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Coordinates> WarmCoordinates;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FreezeEffectSounds FreezeSounds;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2Int FreezingCells;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int WarmLayers;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool FrozenAllField;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool FrozenRowCol;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<int> RowLauchFreez;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<int> ColLauchFreez;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Cell> _freezedCell;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int[] _direction;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FieldData<bool> _heatZoneMap;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _frozenCellsCount;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int _currentFreezingCellCount;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _wasThereDefrostInThisIteration;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Cell> _heatCells;

	[Token(Token = "0x4000BE5")]
	private const int _countLoop = 4;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _wasFreezing;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool _wasUnfreezing;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static List<Cell> _snowflake;

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x1F3B86C", Offset = "0x1F3B86C", VA = "0x1F3B86C")]
	public static int HowManySnowflakesOnField()
	{
		return default(int);
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x1F3B8E0", Offset = "0x1F3B8E0", VA = "0x1F3B8E0")]
	private void ClearHeatMap(Cell[][] cellsArray)
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x1F3BA10", Offset = "0x1F3BA10", VA = "0x1F3BA10")]
	private void RegenerateHeatMap(Cell[][] cellsArray)
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x1F3BD0C", Offset = "0x1F3BD0C", VA = "0x1F3BD0C")]
	private void CheckAllWarmZonesInField(Cell[][] cellsArray)
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x1F3BEE4", Offset = "0x1F3BEE4", VA = "0x1F3BEE4")]
	private void CreateCell(Field field, Cell cell)
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x1F3BF6C", Offset = "0x1F3BF6C", VA = "0x1F3BF6C")]
	private void RemoveCell(Field field, Cell cell)
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x1F3BFF4", Offset = "0x1F3BFF4", VA = "0x1F3BFF4")]
	private void ExplodeCells(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x1F3BB2C", Offset = "0x1F3BB2C", VA = "0x1F3BB2C")]
	private void SetHeatStatusForNeighboursAndCurrentCell(Cell cell, bool newStatus)
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x1F3C0DC", Offset = "0x1F3C0DC", VA = "0x1F3C0DC")]
	private void SetCellZoneStatus(Cell cell, Direction direction, bool newStatus, bool doubleWarm = false)
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x1F3C154", Offset = "0x1F3C154", VA = "0x1F3C154")]
	private Cell SetToCellNewStatus(Cell cell, Direction direction, bool newStatus)
	{
		return null;
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x1F3C260", Offset = "0x1F3C260", VA = "0x1F3C260")]
	private bool CreateAdjacentFreezedCell(Cell[][] cellsArray)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x1F3C3FC", Offset = "0x1F3C3FC", VA = "0x1F3C3FC")]
	private Cell Analyzed(int i, int cellRow, int cellCol, Cell[][] cellsArray)
	{
		return null;
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x1F3C698", Offset = "0x1F3C698", VA = "0x1F3C698")]
	private bool CanCellChangeItsStatus(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x1F3C7D4", Offset = "0x1F3C7D4", VA = "0x1F3C7D4")]
	private void GetFreezedCell(Cell[][] cells)
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x1F3CE54", Offset = "0x1F3CE54", VA = "0x1F3CE54")]
	private void CreateNewFreezeCellOnField(Cell[][] cellsArray)
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x1F3CF68", Offset = "0x1F3CF68", VA = "0x1F3CF68")]
	private Cell SearchCellForFreez(Cell[][] cellArray, int startHeight, int startWidth)
	{
		return null;
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x1F3C5CC", Offset = "0x1F3C5CC", VA = "0x1F3C5CC")]
	private bool SetFreezeEffect(Cell newCell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x1F3D11C", Offset = "0x1F3D11C", VA = "0x1F3D11C")]
	private void UnfreezeAdjacentCells(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x1F3D410", Offset = "0x1F3D410", VA = "0x1F3D410")]
	private bool IsCellSnowflake(Field field, int row, int col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x1F3D500", Offset = "0x1F3D500", VA = "0x1F3D500")]
	private void PlayUnfreezeSound()
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x1F3BE08", Offset = "0x1F3BE08", VA = "0x1F3BE08")]
	private void SetCellUnfreezed(Cell cell)
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x1F3D0E0", Offset = "0x1F3D0E0", VA = "0x1F3D0E0")]
	private void PlayFreezingSound()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x1F3D53C", Offset = "0x1F3D53C", VA = "0x1F3D53C")]
	private void FreezingFromDefaultMap()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x1F3D620", Offset = "0x1F3D620", VA = "0x1F3D620")]
	private void RegeneratedAddFreezEffect()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x1F3D7F4", Offset = "0x1F3D7F4", VA = "0x1F3D7F4")]
	private void FieldLaunched(Field field)
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x1F3D858", Offset = "0x1F3D858", VA = "0x1F3D858")]
	private void OnLaunchFrozenAllCells(Cell[][] cellsArray)
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x1F3D9F0", Offset = "0x1F3D9F0", VA = "0x1F3D9F0")]
	private bool IsCanDefaultFreezing(Coordinates coordinates)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x1F3DA48", Offset = "0x1F3DA48", VA = "0x1F3DA48")]
	private bool IsRowInFreezingList(int row)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x1F3DAEC", Offset = "0x1F3DAEC", VA = "0x1F3DAEC")]
	private bool IsColInFreezingList(int col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x1F3DB90", Offset = "0x1F3DB90", VA = "0x1F3DB90")]
	private void GenerationSnowflake(Cell cell, bool isSpawn)
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x1F3DDC0", Offset = "0x1F3DDC0", VA = "0x1F3DDC0")]
	private void ClearMechanicEvents(LevelLoader.LevelID level, LevelLoader.LevelRegion region, LevelLoader.LevelID previousLevel)
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x1F3DED8", Offset = "0x1F3DED8", VA = "0x1F3DED8")]
	private void MoveEndIceCell(Cell cell)
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x1F3DF64", Offset = "0x1F3DF64", VA = "0x1F3DF64")]
	private void CellThawed(Cell cell)
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x1F3C728", Offset = "0x1F3C728", VA = "0x1F3C728")]
	private bool IsCellCanBeFreezing(Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x1F3DF70", Offset = "0x1F3DF70", VA = "0x1F3DF70")]
	private void AddFrozenCells(Field field)
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x1F3E11C", Offset = "0x1F3E11C", VA = "0x1F3E11C")]
	private int HowManyCellCanFreezing()
	{
		return default(int);
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x1F3E160", Offset = "0x1F3E160", VA = "0x1F3E160")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x1F3E168", Offset = "0x1F3E168", VA = "0x1F3E168")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x1F3E674", Offset = "0x1F3E674", VA = "0x1F3E674")]
	public FreezingFields()
	{
	}
}
[Token(Token = "0x2000244")]
public abstract class BaseGeneratorPlugin : MonoBehaviour
{
	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PluginType Type;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCC04", Offset = "0xAFCC04")]
	public float ChanceToGenerate;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int StartTargetBonusCount;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int InGameTargetBonusCount;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int InGameSpawnMinCount;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int InGameSpawnMaxCount;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected int _currentBonusCount;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected bool _firstGenerate;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Coordinates _currentCoords;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static List<Coordinates> _emptyCells;

	[Token(Token = "0x1700002A")]
	public bool HideMinMax
	{
		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xE87930", Offset = "0xE87930", VA = "0xE87930")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D82")]
	public abstract void StartGenerate(Field field, FieldData<CellType> data, FieldData<PluginType> bonusData);

	[Token(Token = "0x6000D83")]
	public abstract void Generate(Field field, FieldData<CellType> data, FieldData<PluginType> bonusData);

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xE8793C", Offset = "0xE8793C", VA = "0xE8793C")]
	public void AddToCurrentBonusCount()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xE8794C", Offset = "0xE8794C", VA = "0xE8794C", Slot = "6")]
	protected virtual int GetCurrentInGameSpawnMinCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xE87954", Offset = "0xE87954", VA = "0xE87954", Slot = "7")]
	protected virtual int GetCurrentInGameSpawnMaxCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xE8795C", Offset = "0xE8795C", VA = "0xE8795C", Slot = "8")]
	protected virtual bool HideMinMaxField()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xE87964", Offset = "0xE87964", VA = "0xE87964")]
	protected BaseGeneratorPlugin()
	{
	}
}
[Token(Token = "0x2000245")]
public class ClassicPluginGenerator : BaseGeneratorPlugin
{
	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x1F07988", Offset = "0x1F07988", VA = "0x1F07988")]
	private void OnCellsExplode(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x1F07A38", Offset = "0x1F07A38", VA = "0x1F07A38", Slot = "4")]
	public override void StartGenerate(Field field, FieldData<CellType> data, FieldData<PluginType> pluginData)
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x1F07D84", Offset = "0x1F07D84", VA = "0x1F07D84")]
	private void OnCellRemove(Field field, Cell cell)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x1F07DB4", Offset = "0x1F07DB4", VA = "0x1F07DB4", Slot = "5")]
	public override void Generate(Field field, FieldData<CellType> data, FieldData<PluginType> pluginData)
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x1F07EE0", Offset = "0x1F07EE0", VA = "0x1F07EE0")]
	private void TryToSpawn(Field field, FieldData<CellType> data, FieldData<PluginType> pluginData)
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x1F07C38", Offset = "0x1F07C38", VA = "0x1F07C38")]
	private void SetBonus(FieldData<CellType> data, FieldData<PluginType> pluginData)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x1F07FC8", Offset = "0x1F07FC8", VA = "0x1F07FC8")]
	public ClassicPluginGenerator()
	{
	}
}
[Token(Token = "0x2000246")]
public class ClassicPluginGeneratorWithCurve : ClassicPluginGenerator
{
	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve InGameSpawnMinCurve;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve InGameSpawnMaxCurve;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float CurveSeconds;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _startTime;

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x1F08030", Offset = "0x1F08030", VA = "0x1F08030", Slot = "6")]
	protected override int GetCurrentInGameSpawnMinCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x1F080D8", Offset = "0x1F080D8", VA = "0x1F080D8", Slot = "7")]
	protected override int GetCurrentInGameSpawnMaxCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x1F08180", Offset = "0x1F08180", VA = "0x1F08180", Slot = "4")]
	public override void StartGenerate(Field field, FieldData<CellType> data, FieldData<PluginType> pluginData)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x1F081AC", Offset = "0x1F081AC", VA = "0x1F081AC", Slot = "8")]
	protected override bool HideMinMaxField()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x1F081B4", Offset = "0x1F081B4", VA = "0x1F081B4")]
	public ClassicPluginGeneratorWithCurve()
	{
	}
}
[Token(Token = "0x2000247")]
public class PluginControlOfCellsInTheField : ClassicPluginGenerator
{
	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int CurrentFieldCount;

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xD3FD04", Offset = "0xD3FD04", VA = "0xD3FD04", Slot = "5")]
	public override void Generate(Field field, FieldData<CellType> data, FieldData<PluginType> pluginData)
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xD3FD20", Offset = "0xD3FD20", VA = "0xD3FD20")]
	public PluginControlOfCellsInTheField()
	{
	}
}
[Token(Token = "0x2000248")]
public class InGameMenu : MonoBehaviour
{
	[Token(Token = "0x20003DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAAB8", Offset = "0xAFAAB8")]
	private sealed class <EnableDelayRoutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InGameMenu <>4__this;

		[Token(Token = "0x170000C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600159E")]
			[Address(RVA = "0x1EDED7C", Offset = "0x1EDED7C", VA = "0x1EDED7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015A0")]
			[Address(RVA = "0x1EDEDE4", Offset = "0x1EDEDE4", VA = "0x1EDEDE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x1EDEB7C", Offset = "0x1EDEB7C", VA = "0x1EDEB7C")]
		[DebuggerHidden]
		public <EnableDelayRoutine>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x1EDECBC", Offset = "0x1EDECBC", VA = "0x1EDECBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x1EDECC0", Offset = "0x1EDECC0", VA = "0x1EDECC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x1EDED84", Offset = "0x1EDED84", VA = "0x1EDED84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform PlayerCamera;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float PositionOffset;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Visuals;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Colliders;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameMenuButton RestartButton;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameMenuButton ReturnButton;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameMenuButton QuitButton;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameMenuButton CloseButton;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SpriteRenderer BackgroundSprite;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpriteRenderer ForegroundSprite;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public WorldPalettes Palettes;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TMP_Text Title;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TMP_Text Caption;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LobbyLevelData LevelDataEn;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public LobbyLevelData LevelDataRu;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioSource HoverSound;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSource PressSound;

	[Token(Token = "0x4000C09")]
	public const float PAUSED_TIMESCALE = float.Epsilon;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool _menuActive;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform _transform;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 _projectedForward;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private MenuPainter _painter;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float _showTime;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool _disabled;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Coroutine _enableRoutine;

	[Token(Token = "0x4000C11")]
	private const float NO_HIDE_DELAY = 0.25f;

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x1EDD8C4", Offset = "0x1EDD8C4", VA = "0x1EDD8C4")]
	private void SubscribeToButtons()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x1EDDBCC", Offset = "0x1EDDBCC", VA = "0x1EDDBCC")]
	private void UnsubscribeFromButtons()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x1EDDD8C", Offset = "0x1EDDD8C", VA = "0x1EDDD8C")]
	private void ToggleMenu(InputReader.HandEnum hand)
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x1EDDE78", Offset = "0x1EDDE78", VA = "0x1EDDE78")]
	private bool IsMenuAvailableInScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x1EDE180", Offset = "0x1EDE180", VA = "0x1EDE180")]
	private void RestartLevel()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x1EDE288", Offset = "0x1EDE288", VA = "0x1EDE288")]
	private void ReturnToLobby()
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x1EDE4C0", Offset = "0x1EDE4C0", VA = "0x1EDE4C0")]
	private void Quit()
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x1EDE4E4", Offset = "0x1EDE4E4", VA = "0x1EDE4E4")]
	private void Close()
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x1EDE518", Offset = "0x1EDE518", VA = "0x1EDE518")]
	private void PlayHover()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x1EDDEE0", Offset = "0x1EDDEE0", VA = "0x1EDDEE0")]
	private void Show(bool getCamera = true)
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x1EDDDE8", Offset = "0x1EDDDE8", VA = "0x1EDDDE8")]
	private void Hide(bool forced = false)
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x1EDE5D0", Offset = "0x1EDE5D0", VA = "0x1EDE5D0")]
	public void Disable(LevelLoader.LevelID level = LevelLoader.LevelID.None, LevelLoader.LevelRegion region = LevelLoader.LevelRegion.Lobby, LevelLoader.LevelID previousLevel = LevelLoader.LevelID.None)
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x1EDE27C", Offset = "0x1EDE27C", VA = "0x1EDE27C")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x1EDE5DC", Offset = "0x1EDE5DC", VA = "0x1EDE5DC")]
	private void Enable()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x1EDE6F0", Offset = "0x1EDE6F0", VA = "0x1EDE6F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x1EDE9F4", Offset = "0x1EDE9F4", VA = "0x1EDE9F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x1EDEB40", Offset = "0x1EDEB40", VA = "0x1EDEB40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x1EDE670", Offset = "0x1EDE670", VA = "0x1EDE670")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB00198", Offset = "0xB00198")]
	private IEnumerator EnableDelayRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x1EDEBA8", Offset = "0x1EDEBA8", VA = "0x1EDEBA8")]
	private void Repaint()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x1EDE52C", Offset = "0x1EDE52C", VA = "0x1EDE52C")]
	private Transform FindPlayerCamera()
	{
		return null;
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x1EDECAC", Offset = "0x1EDECAC", VA = "0x1EDECAC")]
	public InGameMenu()
	{
	}
}
[Token(Token = "0x2000249")]
public class LevelServices : MonoBehaviour
{
	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelsTargetCoordinates LevelTargetCoordinates;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LevelServices _instance;

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x1EE2F6C", Offset = "0x1EE2F6C", VA = "0x1EE2F6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x1EE2FC0", Offset = "0x1EE2FC0", VA = "0x1EE2FC0")]
	public static List<Coordinates> GetLevelsTargetCoordinations(LevelLoader.LevelID levelID)
	{
		return null;
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x1EE30F0", Offset = "0x1EE30F0", VA = "0x1EE30F0")]
	public LevelServices()
	{
	}
}
[Token(Token = "0x200024A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAFA1CC", Offset = "0xAFA1CC")]
public class LevelsTargetCoordinates : SerializedScriptableObject
{
	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Dictionary<LevelLoader.LevelID, List<Coordinates>> Coordinations;

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x1EE3028", Offset = "0x1EE3028", VA = "0x1EE3028")]
	public List<Coordinates> GetCoordinates(LevelLoader.LevelID levelID)
	{
		return null;
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x1EEA784", Offset = "0x1EEA784", VA = "0x1EEA784")]
	public LevelsTargetCoordinates()
	{
	}
}
[Token(Token = "0x200024B")]
public class MenuPainter
{
	[Token(Token = "0x20003DC")]
	public delegate void MenuPainterEvent();

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MenuPainterEvent OnPaletteUpdate;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WorldPalettes _palettes;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WorldPalettePreset _currentPreset;

	[Token(Token = "0x4000C18")]
	private const string TitleEn = "Lobby";

	[Token(Token = "0x4000C19")]
	private const string TitleRu = "Лобби";

	[Token(Token = "0x4000C1A")]
	private const string CaptionEn = "Select a level to play";

	[Token(Token = "0x4000C1B")]
	private const string CaptionRu = "Выберите уровень для игры";

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xE0E644", Offset = "0xE0E644", VA = "0xE0E644")]
	public MenuPainter(WorldPalettes palettes)
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xE0E734", Offset = "0xE0E734", VA = "0xE0E734")]
	public void PaintMenu(InGameMenu menu, LobbyLevelData levelData)
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xE0EB2C", Offset = "0xE0EB2C", VA = "0xE0EB2C")]
	private void SetPalette(LevelLoader.LevelID level, LevelLoader.LevelRegion region, LevelLoader.LevelID previousLevel)
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xE0EA28", Offset = "0xE0EA28", VA = "0xE0EA28")]
	private void ApplyPalette(InGameMenu menu)
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xE0E908", Offset = "0xE0E908", VA = "0xE0E908")]
	private void InitLevelMenu(InGameMenu menu, LobbyLevelData levelData)
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xE0E7D0", Offset = "0xE0E7D0", VA = "0xE0E7D0")]
	private void InitLobbyMenu(InGameMenu menu, LobbyLevelData levelData)
	{
	}
}
[Token(Token = "0x200024C")]
public struct AnalyzationBasePatternStruct
{
	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private byte _size;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private CellType _type;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private Coordinates _firstCoords;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Coordinates _secondCoords;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Coordinates _thirdCoords;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coordinates _fourCoords;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coordinates _fiveCoords;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coordinates _sixCoords;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coordinates _hintCoords;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coordinates _swapCoords;

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xE83588", Offset = "0xE83588", VA = "0xE83588")]
	public AnalyzationBasePatternStruct(CellType type, Coordinates swapCoords, Coordinates hintCoords, Coordinates first, Coordinates second, Coordinates third)
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xE835B8", Offset = "0xE835B8", VA = "0xE835B8")]
	public AnalyzationBasePatternStruct(CellType type, Coordinates swapCoords, Coordinates hintCoords, Coordinates first, Coordinates second, Coordinates third, Coordinates four)
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xE835E8", Offset = "0xE835E8", VA = "0xE835E8")]
	public AnalyzationBasePatternStruct(CellType type, Coordinates swapCoords, Coordinates hintCoords, Coordinates first, Coordinates second, Coordinates third, Coordinates four, Coordinates five)
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xE8361C", Offset = "0xE8361C", VA = "0xE8361C")]
	public AnalyzationBasePatternStruct(CellType type, Coordinates swapCoords, Coordinates hintCoords, Coordinates first, Coordinates second, Coordinates third, Coordinates four, Coordinates five, Coordinates six)
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xE83648", Offset = "0xE83648", VA = "0xE83648")]
	public int GetSize()
	{
		return default(int);
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xE83650", Offset = "0xE83650", VA = "0xE83650")]
	public CellType GetCellType()
	{
		return default(CellType);
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xE83658", Offset = "0xE83658", VA = "0xE83658")]
	public Coordinates GetHintCoords()
	{
		return default(Coordinates);
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xE83660", Offset = "0xE83660", VA = "0xE83660")]
	public Coordinates GetSwapCoords()
	{
		return default(Coordinates);
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xE83668", Offset = "0xE83668", VA = "0xE83668")]
	public bool TryGetCoords(int index, ref Coordinates coordinates)
	{
		return default(bool);
	}
}
[Token(Token = "0x200024D")]
public class BasePattern
{
	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected List<Coordinates> _offsets;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected List<Coordinates> _translatedOffsets;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Coordinates _swapPoint;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Coordinates _hintPoint;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static Coordinates _currentCords;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool VerticalMirroringOnly;

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xE886A4", Offset = "0xE886A4", VA = "0xE886A4")]
	public BasePattern(int offsetsLength)
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xE8874C", Offset = "0xE8874C", VA = "0xE8874C")]
	public BasePattern(Coordinates hintPoint, Coordinates swapPoint, bool verticalMirroringOnly = false, params Coordinates[] offsets)
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xE888DC", Offset = "0xE888DC", VA = "0xE888DC")]
	public BasePattern(Coordinates hintPoint, Coordinates swapPoint, List<Coordinates> offsets, bool verticalMirroringOnly = false)
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xE88A94", Offset = "0xE88A94", VA = "0xE88A94")]
	public void Copy(BasePattern newPattern)
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xE88AE0", Offset = "0xE88AE0", VA = "0xE88AE0")]
	public int GetOffsetLength()
	{
		return default(int);
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xE88B30", Offset = "0xE88B30", VA = "0xE88B30")]
	public List<Coordinates> GetOffsets()
	{
		return null;
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xE88B38", Offset = "0xE88B38", VA = "0xE88B38")]
	public Coordinates GetSwapPoint()
	{
		return default(Coordinates);
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xE88B40", Offset = "0xE88B40", VA = "0xE88B40")]
	public Coordinates GetHintPoint()
	{
		return default(Coordinates);
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xE88828", Offset = "0xE88828", VA = "0xE88828")]
	public void SetOffsets(params Coordinates[] offsets)
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xE889C8", Offset = "0xE889C8", VA = "0xE889C8")]
	public void SetOffsets(List<Coordinates> offsets)
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xE88B48", Offset = "0xE88B48", VA = "0xE88B48")]
	public void HorizontalMirroring(BasePattern newPattern)
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xE88CB8", Offset = "0xE88CB8", VA = "0xE88CB8")]
	public void VerticalMirroring(BasePattern newPattern)
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xE88E2C", Offset = "0xE88E2C", VA = "0xE88E2C")]
	public void Rotating(BasePattern newPattern)
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xE88F9C", Offset = "0xE88F9C", VA = "0xE88F9C")]
	public void Shifting(Coordinates shiftOffset, BasePattern newPattern)
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xE89128", Offset = "0xE89128", VA = "0xE89128")]
	public static bool operator ==(BasePattern left, BasePattern right)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xE89298", Offset = "0xE89298", VA = "0xE89298")]
	public static bool operator !=(BasePattern left, BasePattern right)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xE89318", Offset = "0xE89318", VA = "0xE89318")]
	public List<Coordinates> GetTranslatedOffset(Coordinates startPoint)
	{
		return null;
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xE89450", Offset = "0xE89450", VA = "0xE89450")]
	public bool PatternIsMatch(Coordinates startPoint, Field field, FieldData<CellType> data, FieldData<PluginType> bonusData, CellCheckFunc isValidCell, out CellType patternType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xE89A60", Offset = "0xE89A60", VA = "0xE89A60")]
	public bool StartPatternIsMatch(Coordinates startPoint, Field field, FieldData<CellType> data, FieldData<PluginType> bonusData, CellCheckFunc isValidCell, out CellType patternType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xE89D8C", Offset = "0xE89D8C", VA = "0xE89D8C")]
	public bool PatternIsСoincidedGroup(Coordinates startPoint, Field field, FieldData<CellType> data, FieldData<PluginType> bonusData, CellCheckFunc isValidCell, CellType patternType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xE8A070", Offset = "0xE8A070", VA = "0xE8A070")]
	public bool PatternIsСoincidedNotTypical(Coordinates startPoint, Field field, FieldData<CellType> data, FieldData<PluginType> bonusData, CellCheckFunc isValidCell, out CellType patternType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xE89438", Offset = "0xE89438", VA = "0xE89438")]
	public static void TranslateCoords(Coordinates startPoint, Coordinates offset, ref Coordinates result)
	{
	}
}
[Token(Token = "0x200024E")]
public delegate bool CellCheckFunc(Field.FieldModifiers modifiers, CellType type, PluginType bonusType);
[Token(Token = "0x200024F")]
public delegate bool CheckFigureTypeProbability(PatternFigureType figureType);
[Serializable]
[Token(Token = "0x2000250")]
public struct RuntimePatternWrapper
{
	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCC1C", Offset = "0xAFCC1C")]
	public float Percent;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCC34", Offset = "0xAFCC34")]
	public float Probability;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int CurrentPatternCount;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int StartPatternCount;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PatternFigureType Type;

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xD48DDC", Offset = "0xD48DDC", VA = "0xD48DDC")]
	public bool IsPredictPattern()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000251")]
public class ClassicFieldGeneratorRemake : FieldGenerator
{
	[Serializable]
	[Token(Token = "0x20003DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAAC8", Offset = "0xAFAAC8")]
	private sealed class <>c
	{
		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RuntimePatternWrapper> <>9__20_0;

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x1F2DD9C", Offset = "0x1F2DD9C", VA = "0x1F2DD9C")]
		public <>c()
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x1F2DDA4", Offset = "0x1F2DDA4", VA = "0x1F2DDA4")]
		internal int <PatternSelector>b__20_0(RuntimePatternWrapper x, RuntimePatternWrapper y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RuntimePatternWrapper ThreePattern;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public RuntimePatternWrapper FourPattern;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RuntimePatternWrapper FivePattern;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public RuntimePatternWrapper MegaPattern;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public RuntimePatternWrapper PredictPattern;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int Bonuses;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private System.Random _random;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PatternsCount _patternsCount;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<RuntimePatternWrapper> _sortedSelector;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Coordinates _tmpCoords;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CellCheckFunc _cellIsReadyToPlace;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CheckFigureTypeProbability _startCheckFigureTypeProbability;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static CheckFigureTypeProbability _runtimeCheckFigureTypeProbability;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Coordinates _checkCoords;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<Coordinates> _lastCoords;

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x1F2B4A4", Offset = "0x1F2B4A4", VA = "0x1F2B4A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x1F2B53C", Offset = "0x1F2B53C", VA = "0x1F2B53C")]
	public static void LogDataByCellType(Field field, FieldData<CellType> data)
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x1F2B704", Offset = "0x1F2B704", VA = "0x1F2B704")]
	public static void LogOnlyData(FieldData<CellType> data)
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x1F2BB48", Offset = "0x1F2BB48", VA = "0x1F2BB48")]
	private void LogData(Field field, FieldData<CellType> data, FieldData<PluginType> pluginData)
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x1F2BB4C", Offset = "0x1F2BB4C", VA = "0x1F2BB4C")]
	private void GeneratePatterns()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x1F2BDBC", Offset = "0x1F2BDBC", VA = "0x1F2BDBC", Slot = "5")]
	public override void StartGenerate(Field field, FieldData<CellType> data, FieldData<PluginType> pluginData)
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x1F2C750", Offset = "0x1F2C750", VA = "0x1F2C750", Slot = "4")]
	public override void Generate(Field field, FieldData<CellType> data, FieldData<PluginType> pluginData)
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x1F2C214", Offset = "0x1F2C214", VA = "0x1F2C214")]
	protected void PatternSelector(List<RuntimePatternWrapper> resulsts)
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x1F2CD70", Offset = "0x1F2CD70", VA = "0x1F2CD70")]
	private void SetPatternCurrentPercent()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x1F2CF40", Offset = "0x1F2CF40", VA = "0x1F2CF40", Slot = "6")]
	public override void UpdateAnalyzationData(Field field, FieldData<CellType> data, FieldData<PluginType> pluginData, bool withFullAnalyzation)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x1F2D064", Offset = "0x1F2D064", VA = "0x1F2D064")]
	private void UpdateAnalyzation(Field field)
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x1F2D088", Offset = "0x1F2D088", VA = "0x1F2D088")]
	private void LocalUpdateAnalyzation(Coordinates coords, Field field)
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x1F2C3DC", Offset = "0x1F2C3DC", VA = "0x1F2C3DC")]
	private bool GeneratePattern(Coordinates emptyCells, Field field, FieldData<CellType> data, FieldData<PluginType> pluginData, PatternFigureType patternFigureType, CheckFigureTypeProbability checkProbability, bool startGenerate)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x1F2D39C", Offset = "0x1F2D39C", VA = "0x1F2D39C")]
	private static bool StartCheckProbability(PatternFigureType figureType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x1F2D3A4", Offset = "0x1F2D3A4", VA = "0x1F2D3A4")]
	private bool RuntimeCheckProbability(PatternFigureType figureType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x1F2D290", Offset = "0x1F2D290", VA = "0x1F2D290")]
	private void AddToCountOnSetPattern(PatternFigureType patternFigureFigureType)
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x1F2D03C", Offset = "0x1F2D03C", VA = "0x1F2D03C")]
	private void SetPatternCount()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x1F2D2E4", Offset = "0x1F2D2E4", VA = "0x1F2D2E4")]
	private void SetPattern(FieldData<CellType> data, List<Coordinates> patternCoords, CellType patternType)
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x1F2C5A0", Offset = "0x1F2C5A0", VA = "0x1F2C5A0")]
	private void StartFillEmptyCells(Field field, FieldData<CellType> data, FieldData<PluginType> pluginData)
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x1F2CBC4", Offset = "0x1F2CBC4", VA = "0x1F2CBC4")]
	private void SimpeFillEmptyCells(Field field, FieldData<CellType> data, FieldData<PluginType> pluginData)
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x1F2D430", Offset = "0x1F2D430", VA = "0x1F2D430")]
	private CellType StartPickType(Field field, FieldData<CellType> data, FieldData<PluginType> pluginData, int row, int col)
	{
		return default(CellType);
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x1F2D180", Offset = "0x1F2D180", VA = "0x1F2D180")]
	private CellType PickWithAvoidMechainc(FieldData<CellType> data)
	{
		return default(CellType);
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x1F2D59C", Offset = "0x1F2D59C", VA = "0x1F2D59C")]
	private CellType PickTypeMechanic(FieldData<CellType> data, List<CellType> typesToPick)
	{
		return default(CellType);
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x1F2D08C", Offset = "0x1F2D08C", VA = "0x1F2D08C")]
	private void GetAvoidCombinationTypes(Coordinates startPoint, Field field, FieldData<CellType> data, FieldData<PluginType> pluginData, List<Coordinates> patternCoords, int offset, List<CellType> types)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x1F2D6EC", Offset = "0x1F2D6EC", VA = "0x1F2D6EC")]
	private void GetAvoidCombinationTypeWithPatternOffset(Coordinates startPoint, Field field, FieldData<CellType> data, FieldData<PluginType> pluginData, int offset, List<Coordinates> patternOffsets, List<CellType> types)
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x1F2D618", Offset = "0x1F2D618", VA = "0x1F2D618")]
	private void GetAvoidCombinationTypeSimple(Coordinates startPoint, Field field, FieldData<CellType> data, FieldData<PluginType> pluginData, int offset, List<CellType> types)
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x1F2D7DC", Offset = "0x1F2D7DC", VA = "0x1F2D7DC")]
	private void GetAvoidCombinationTypeOneDirection(Coordinates startPoint, Field field, FieldData<CellType> data, FieldData<PluginType> pluginData, int rowOffset, int colOffset, List<Coordinates> patternOffsets, List<CellType> types)
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x1F2DA40", Offset = "0x1F2DA40", VA = "0x1F2DA40")]
	private void GetAvoidCombinationTypeOneDirectionSimple(Coordinates startPoint, Field field, FieldData<CellType> data, FieldData<PluginType> pluginData, int rowOffset, int colOffse, List<CellType> types)
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x1F2DBC8", Offset = "0x1F2DBC8", VA = "0x1F2DBC8")]
	public ClassicFieldGeneratorRemake()
	{
	}
}
[Token(Token = "0x2000252")]
public class LevelTypes : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAAD8", Offset = "0xAFAAD8")]
	private sealed class <>c
	{
		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<CellType> <>9__12_0;

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x1EEA6B4", Offset = "0x1EEA6B4", VA = "0x1EEA6B4")]
		public <>c()
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x1EEA6BC", Offset = "0x1EEA6BC", VA = "0x1EEA6BC")]
		internal int <GetValidCellTypeByWeight>b__12_0(CellType x, CellType y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LevelTypes _instance;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Field.FieldModifiers NotValidFieldModifiers;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public Field.FieldModifiers NotValidFieldModifiersForSpawn;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<CellType> ValidCellType;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAFCC4C", Offset = "0xAFCC4C")]
	public List<PluginType> ValidPluginType;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CellTypeCount CellTypeCount;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int MinTypesToFirstGenerate;

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x1EEA104", Offset = "0x1EEA104", VA = "0x1EEA104")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x1EEA158", Offset = "0x1EEA158", VA = "0x1EEA158")]
	public static Field.FieldModifiers GetNotValidFieldModifiers()
	{
		return default(Field.FieldModifiers);
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x1EEA1B4", Offset = "0x1EEA1B4", VA = "0x1EEA1B4")]
	public static Field.FieldModifiers GetNotValidFieldModifiersForSpawn()
	{
		return default(Field.FieldModifiers);
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x1EEA210", Offset = "0x1EEA210", VA = "0x1EEA210")]
	public static List<CellType> GetValidCellType()
	{
		return null;
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x1EEA26C", Offset = "0x1EEA26C", VA = "0x1EEA26C")]
	public static List<PluginType> GetValidPluginType()
	{
		return null;
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x1EEA2C8", Offset = "0x1EEA2C8", VA = "0x1EEA2C8")]
	public static CellType GetValidCellTypeByWeight(FieldData<CellType> data, List<CellType> types)
	{
		return default(CellType);
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x1EEA5E0", Offset = "0x1EEA5E0", VA = "0x1EEA5E0")]
	public LevelTypes()
	{
	}
}
[Serializable]
[Token(Token = "0x2000253")]
public class CellTypeCount : UnitySerializedDictionary<CellType, int>
{
	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x1F24578", Offset = "0x1F24578", VA = "0x1F24578")]
	public CellTypeCount()
	{
	}
}
[Token(Token = "0x2000254")]
public delegate void PatternGroupIterator(Coordinates startPoint, Field field, FieldData<CellType> data, FieldData<PluginType> bonusData, BasePattern pattern, CellType type);
[Token(Token = "0x2000255")]
public class PatternGroupsController
{
	[Token(Token = "0x4000C47")]
	private const int PATTERNS_GROUP_COUNT = 9;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<PatternsGroup> _groups;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<BasePattern> _notTypicalGroup;

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x11D0DE8", Offset = "0x11D0DE8", VA = "0x11D0DE8")]
	public PatternGroupsController()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x11D0E8C", Offset = "0x11D0E8C", VA = "0x11D0E8C")]
	private void InitPatternsGroups()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x11D1138", Offset = "0x11D1138", VA = "0x11D1138")]
	public void Add(List<BasePattern> patterns)
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x11D11D0", Offset = "0x11D11D0", VA = "0x11D11D0")]
	public void Add(BasePattern pattern)
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x11D12A0", Offset = "0x11D12A0", VA = "0x11D12A0")]
	public void Iterate(Coordinates startPoint, Field field, FieldData<CellType> data, FieldData<PluginType> bonusData, CellCheckFunc checkFunc, PatternGroupIterator iteratorGroup, PatternGroupIterator iteratorNotTypical)
	{
	}
}
[Token(Token = "0x2000256")]
public class PatternsGroup
{
	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<BasePattern> _patterns;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Coordinates _offset;

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xD3D7DC", Offset = "0xD3D7DC", VA = "0xD3D7DC")]
	public PatternsGroup(Coordinates offset)
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xD3D864", Offset = "0xD3D864", VA = "0xD3D864")]
	public Coordinates GetOffset()
	{
		return default(Coordinates);
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xD3D86C", Offset = "0xD3D86C", VA = "0xD3D86C")]
	public void Add(BasePattern pattern)
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xD3D964", Offset = "0xD3D964", VA = "0xD3D964")]
	public bool TryToAdd(BasePattern pattern)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0xD3D9F0", Offset = "0xD3D9F0", VA = "0xD3D9F0")]
	public void Iterate(Coordinates startPoint, Field field, FieldData<CellType> data, FieldData<PluginType> bonusData, PatternGroupIterator iterator, CellType type)
	{
	}
}
[Token(Token = "0x2000257")]
public enum PatternFigureType
{
	[Token(Token = "0x4000C4D")]
	Three,
	[Token(Token = "0x4000C4E")]
	Four,
	[Token(Token = "0x4000C4F")]
	Five,
	[Token(Token = "0x4000C50")]
	Mega,
	[Token(Token = "0x4000C51")]
	Predict,
	[Token(Token = "0x4000C52")]
	Total
}
[Token(Token = "0x2000258")]
public static class PatternsController
{
	[Serializable]
	[Token(Token = "0x20003DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAAE8", Offset = "0xAFAAE8")]
	private sealed class <>c
	{
		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<Coordinates> <>9__47_0;

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xD3D76C", Offset = "0xD3D76C", VA = "0xD3D76C")]
		public <>c()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xD3D774", Offset = "0xD3D774", VA = "0xD3D774")]
		internal int <DownSideCoordsShuffle>b__47_0(Coordinates x, Coordinates y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<BasePattern> _threeTemplatePatternOffsets;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<BasePattern> _threePatternGeneratedOffsets;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<int> _threePatternOffsetsRandom;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<BasePattern> _fourTemplatePatternOffsets;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<BasePattern> _fourPatternGeneratedOffsets;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static List<int> _fourPatternOffsetsRandom;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static List<BasePattern> _fiveTemplatePatternOffsets;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static List<BasePattern> _fivePatternGeneratedOffsets;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static List<int> _fivePatternOffsetsRandom;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static List<BasePattern> _megaTemplatePatternOffsets;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static List<BasePattern> _megaPatternGeneratedOffsets;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static List<int> _megaPatternOffsetsRandom;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static List<BasePattern> _predictTemplatePatternOffsets;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static List<BasePattern> _predictPatternGeneratedOffsets;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static List<int> _predictPatternOffsetsRandom;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static List<BasePattern> _threeAnalizationPatternGeneratedOffsets;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static List<BasePattern> _fourAnalizationPatternGeneratedOffsets;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static List<BasePattern> _fiveAnalizationPatternGeneratedOffsets;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static List<BasePattern> _megaAnalizationPatternGeneratedOffsets;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static BasePattern _horizontalMirrorPattern;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static BasePattern _verticalMirrorPattern;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static BasePattern _shiftingPattern;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static BasePattern _rotatingPattern;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static BasePattern _currentPattern;

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x11D1604", Offset = "0x11D1604", VA = "0x11D1604")]
	static PatternsController()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x11D2FB8", Offset = "0x11D2FB8", VA = "0x11D2FB8")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x11D33A4", Offset = "0x11D33A4", VA = "0x11D33A4")]
	public static List<BasePattern> GetThreeMatchPatterns()
	{
		return null;
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x11D340C", Offset = "0x11D340C", VA = "0x11D340C")]
	public static List<BasePattern> GetThreeAnalizationMatchPatterns()
	{
		return null;
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x11D3474", Offset = "0x11D3474", VA = "0x11D3474")]
	public static List<BasePattern> GetFourMatchPatterns()
	{
		return null;
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x11D34DC", Offset = "0x11D34DC", VA = "0x11D34DC")]
	public static List<BasePattern> GetFourAnalizationMatchPatterns()
	{
		return null;
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x11D3544", Offset = "0x11D3544", VA = "0x11D3544")]
	public static List<BasePattern> GetFiveMatchPatterns()
	{
		return null;
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x11D35AC", Offset = "0x11D35AC", VA = "0x11D35AC")]
	public static List<BasePattern> GetFiveAnalizationMatchPatterns()
	{
		return null;
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x11D3614", Offset = "0x11D3614", VA = "0x11D3614")]
	public static List<BasePattern> GetMegaMatchPatterns()
	{
		return null;
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x11D367C", Offset = "0x11D367C", VA = "0x11D367C")]
	public static List<BasePattern> GetMegaAnalizationMatchPatterns()
	{
		return null;
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x11D36E4", Offset = "0x11D36E4", VA = "0x11D36E4")]
	public static List<BasePattern> GetPredictMatchPatterns()
	{
		return null;
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x11D3024", Offset = "0x11D3024", VA = "0x11D3024")]
	public static void CreateThreeMatchPatternOffset()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x11D30D8", Offset = "0x11D30D8", VA = "0x11D30D8")]
	public static void CreateFourMatchPatternOffset()
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x11D318C", Offset = "0x11D318C", VA = "0x11D318C")]
	public static void CreateFiveMatchPatternOffset()
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x11D3240", Offset = "0x11D3240", VA = "0x11D3240")]
	public static void CreateMegaMatchPatternOffset()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x11D32F4", Offset = "0x11D32F4", VA = "0x11D32F4")]
	public static void CreatePredictMatchPatternOffset()
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x11D37E0", Offset = "0x11D37E0", VA = "0x11D37E0")]
	private static void StartGeneratePatterns(List<BasePattern> templates, List<BasePattern> generatedPatterns, List<int> shufflePatterns)
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x11D374C", Offset = "0x11D374C", VA = "0x11D374C")]
	private static void StartGeneratePatternsWithAnalyzation(List<BasePattern> templates, List<BasePattern> generatedPatterns, List<int> shufflePatterns, List<BasePattern> analizationGeneratedPatterns)
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x11D38A0", Offset = "0x11D38A0", VA = "0x11D38A0")]
	private static void CreatePatternCycle(List<BasePattern> templates, List<BasePattern> generatedPatterns)
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x11D3A7C", Offset = "0x11D3A7C", VA = "0x11D3A7C")]
	private static void CreateAnalizationPatternCycle(List<BasePattern> templates, List<BasePattern> generatedPatterns)
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x11D3B40", Offset = "0x11D3B40", VA = "0x11D3B40")]
	private static void RotateCycle(BasePattern currentPattern, List<BasePattern> generatedPatterns)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x11D3C18", Offset = "0x11D3C18", VA = "0x11D3C18")]
	private static void OnLifeCycle(BasePattern currentPattern, List<BasePattern> patterns)
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x11D3D84", Offset = "0x11D3D84", VA = "0x11D3D84")]
	private static void TryToSetNewPatternInList(BasePattern pattern, List<BasePattern> patterns)
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x11D3EB4", Offset = "0x11D3EB4", VA = "0x11D3EB4")]
	public static void DownSideCoordsShuffle(List<Coordinates> list)
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x11D3FA8", Offset = "0x11D3FA8", VA = "0x11D3FA8")]
	public static bool IsPosibleToGeneratePatternHere(PatternFigureType patternFigureType, Coordinates startPoint, Field field, FieldData<CellType> data, FieldData<PluginType> pluginData, CellCheckFunc isValidCell, ref List<Coordinates> patternCoords, out CellType cellType, bool startGenerate)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x11D4174", Offset = "0x11D4174", VA = "0x11D4174")]
	private static bool TryToFindPatternHere(List<BasePattern> patterns, List<int> randomPatterns, Coordinates startPoint, Field field, FieldData<CellType> data, FieldData<PluginType> pluginData, CellCheckFunc isValidCell, ref List<Coordinates> patternCoords, out CellType patternType, bool startGenerate)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000259")]
public class PoolableAudioSource : PoolableBehaviour
{
	[Token(Token = "0x4000C6B")]
	public const int POOL_SIZE = 2;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PrefabPool<PoolableAudioSource> _pool;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource Source;

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xD42FC8", Offset = "0xD42FC8", VA = "0xD42FC8")]
	public static void InitPool(PrefabPool<PoolableAudioSource> pool)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xD4301C", Offset = "0xD4301C", VA = "0xD4301C")]
	public static PoolableAudioSource Get()
	{
		return null;
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xD4307C", Offset = "0xD4307C", VA = "0xD4307C", Slot = "11")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xD43100", Offset = "0xD43100", VA = "0xD43100")]
	public PoolableAudioSource()
	{
	}
}
[Token(Token = "0x200025A")]
public class WaterCannonChargeMechanic : MonoBehaviour
{
	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform WaterDestination;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform SuckDestination;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WaterCannon Cannon;

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x1CB58F4", Offset = "0x1CB58F4", VA = "0x1CB58F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x1CB596C", Offset = "0x1CB596C", VA = "0x1CB596C")]
	private void ModifyWaterCell(Field field, Cell cell)
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x1CB5A68", Offset = "0x1CB5A68", VA = "0x1CB5A68")]
	public WaterCannonChargeMechanic()
	{
	}
}
[Token(Token = "0x200025B")]
public class PlayerStartRotator : MonoBehaviour
{
	[Token(Token = "0x20003E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAAF8", Offset = "0xAFAAF8")]
	private sealed class <WaitCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerStartRotator <>4__this;

		[Token(Token = "0x170000C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015B1")]
			[Address(RVA = "0xD3FC94", Offset = "0xD3FC94", VA = "0xD3FC94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0xD3FCFC", Offset = "0xD3FCFC", VA = "0xD3FCFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xD3FA8C", Offset = "0xD3FA8C", VA = "0xD3FA8C")]
		[DebuggerHidden]
		public <WaitCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xD3FACC", Offset = "0xD3FACC", VA = "0xD3FACC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xD3FAD0", Offset = "0xD3FAD0", VA = "0xD3FAD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xD3FC9C", Offset = "0xD3FC9C", VA = "0xD3FC9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Cam;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float WaitTime;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float BlackScreenDuration;

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xD3F9F0", Offset = "0xD3F9F0", VA = "0xD3F9F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xD3FA1C", Offset = "0xD3FA1C", VA = "0xD3FA1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB001FC", Offset = "0xB001FC")]
	private IEnumerator WaitCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xD3FAB8", Offset = "0xD3FAB8", VA = "0xD3FAB8")]
	public PlayerStartRotator()
	{
	}
}
[Token(Token = "0x200025C")]
public interface IPoolable
{
	[Token(Token = "0x6000E39")]
	void OnRelease();

	[Token(Token = "0x6000E3A")]
	void OnCreate(Action turnBack);

	[Token(Token = "0x6000E3B")]
	void OnPull();

	[Token(Token = "0x6000E3C")]
	void OnReset();
}
[Token(Token = "0x200025D")]
public interface IPrefabPoolable : IPoolable
{
	[Token(Token = "0x6000E3D")]
	Transform GetTransform();
}
[Token(Token = "0x200025E")]
public class MultiObjectPool<S, T> where S : struct where T : IPoolable
{
	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<S, ObjectPool<T>> _pools;

	[Token(Token = "0x6000E3E")]
	public T GetOrCreate(S type)
	{
		return (T)null;
	}

	[Token(Token = "0x6000E3F")]
	public void Register(S type, ObjectPool<T>.ItemConstructor constructor, int defaultSize)
	{
	}

	[Token(Token = "0x6000E40")]
	public MultiObjectPool()
	{
	}
}
[Token(Token = "0x200025F")]
public class MultiPrefabPool<S, T> where S : struct where T : IPrefabPoolable
{
	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<S, PrefabPool<T>> _pools;

	[Token(Token = "0x6000E41")]
	public T GetOrCreate(S type)
	{
		return (T)null;
	}

	[Token(Token = "0x6000E42")]
	public void Register(S type, GameObject prefab, Transform poolRoot, int defaultSize)
	{
	}

	[Token(Token = "0x6000E43")]
	public MultiPrefabPool()
	{
	}
}
[Token(Token = "0x2000260")]
public class ObjectPool<T> : Pool<T> where T : IPoolable
{
	[Token(Token = "0x20003E1")]
	public delegate T ItemConstructor();

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ItemConstructor _constructor;

	[Token(Token = "0x6000E44")]
	public ObjectPool(ItemConstructor constructor, int defaultSize)
	{
	}

	[Token(Token = "0x6000E45")]
	protected override T CreatePoolItem()
	{
		return (T)null;
	}

	[Token(Token = "0x6000E46")]
	protected override void PushToList(T newObject)
	{
	}
}
[Token(Token = "0x2000261")]
public abstract class Pool<T> where T : IPoolable
{
	[Token(Token = "0x20003E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAB08", Offset = "0xAFAB08")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Pool<T> <>4__this;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T localPoolItem;

		[Token(Token = "0x60015B8")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x60015B9")]
		internal void <InitPoolItem>b__0()
		{
		}
	}

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected List<T> _objects;

	[Token(Token = "0x6000E47")]
	public int GetSize()
	{
		return default(int);
	}

	[Token(Token = "0x6000E48")]
	public void SetSize(int size)
	{
	}

	[Token(Token = "0x6000E49")]
	public virtual T GetOrCreate()
	{
		return (T)null;
	}

	[Token(Token = "0x6000E4A")]
	public virtual void Push(T newObject)
	{
	}

	[Token(Token = "0x6000E4B")]
	protected abstract T CreatePoolItem();

	[Token(Token = "0x6000E4C")]
	protected virtual T PullFromList()
	{
		return (T)null;
	}

	[Token(Token = "0x6000E4D")]
	protected virtual void PushToList(T newObject)
	{
	}

	[Token(Token = "0x6000E4E")]
	private T InitPoolItem(T poolItem)
	{
		return (T)null;
	}

	[Token(Token = "0x6000E4F")]
	protected Pool()
	{
	}
}
[Token(Token = "0x2000262")]
public class PoolManager : MonoBehaviour
{
	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PoolPrefabs Prefabs;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PoolManager _instance;

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xD3FD28", Offset = "0xD3FD28", VA = "0xD3FD28")]
	public static PoolPrefabs GetPrefabs()
	{
		return null;
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xD3FD84", Offset = "0xD3FD84", VA = "0xD3FD84")]
	public static Transform GetTransform()
	{
		return null;
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xD3FDE0", Offset = "0xD3FDE0", VA = "0xD3FDE0")]
	protected Transform CreatePoolRoot(string name)
	{
		return null;
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xD3FE8C", Offset = "0xD3FE8C", VA = "0xD3FE8C")]
	protected void RegisterAll()
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xD42C58", Offset = "0xD42C58", VA = "0xD42C58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xD42CB0", Offset = "0xD42CB0", VA = "0xD42CB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xD42D8C", Offset = "0xD42D8C", VA = "0xD42D8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xD42E68", Offset = "0xD42E68", VA = "0xD42E68")]
	private void LoadStart(LevelLoader.LevelID level, LevelLoader.LevelRegion region, LevelLoader.LevelID previousLevel)
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xD42FB8", Offset = "0xD42FB8", VA = "0xD42FB8")]
	public PoolManager()
	{
	}
}
[Token(Token = "0x2000263")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAFA220", Offset = "0xAFA220")]
public class PoolPrefabs : SerializedScriptableObject
{
	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject Cell;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject AudioSource;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject Firefly;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject CharacterNavMeshWandEffect;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject DragonEffect;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject ExplosionSounds;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject ScatteringEffectCustomImplulse;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject EvilEyeDespawnEffectPullBonus;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject BossProjectile;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject DespawnEffectWaterDropCustom;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Dictionary<PluginType, GameObject> CellPlugins;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Dictionary<CellType, GameObject> CellVisualizerBaseRune;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Dictionary<CellType, GameObject> CellVisualizerChristmasTreeToyBaseRune;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Dictionary<PluginType, GameObject> PluginTypeCellVisualizer;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Dictionary<CellType, GameObject> BurnCellVisualizer;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Dictionary<CellType, GameObject> ExplosionEffects;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Dictionary<PluginType, GameObject> PluginExplosionEffects;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Dictionary<PluginType, GameObject> AdditionalEffect;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Dictionary<PluginType, GameObject> HighlightEffect;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Dictionary<PluginType, GameObject> DespawnEffect;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Dictionary<PluginType, GameObject> ScatteringEffect;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Dictionary<PluginType, GameObject> FreezeEffect;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Dictionary<PluginType, GameObject> NotInteractiveEffect;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Dictionary<PluginType, GameObject> SpawnEffect;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Dictionary<HitEffectType, GameObject> HitEffects;

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xD42FC0", Offset = "0xD42FC0", VA = "0xD42FC0")]
	public PoolPrefabs()
	{
	}
}
[Token(Token = "0x2000264")]
public class PoolableBehaviour : MonoBehaviour, IPrefabPoolable, IPoolable
{
	[Token(Token = "0x20003E3")]
	public enum PoolableState
	{
		[Token(Token = "0x4001317")]
		InPool,
		[Token(Token = "0x4001318")]
		Active,
		[Token(Token = "0x4001319")]
		Releasing,
		[Token(Token = "0x400131A")]
		ForceReleasing
	}

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PoolableState _state;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected TimerEvent _timeOutEvent;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Action _turnBackToPoolEvent;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Transform _objectTransform;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<Action> _poolableBehaviourRelease;

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xD42EC4", Offset = "0xD42EC4", VA = "0xD42EC4")]
	public static void ForceReleaseAll()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xD43170", Offset = "0xD43170", VA = "0xD43170")]
	public PoolableState GetState()
	{
		return default(PoolableState);
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xD43178", Offset = "0xD43178", VA = "0xD43178", Slot = "9")]
	public virtual Transform GetTransform()
	{
		return null;
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xD43180", Offset = "0xD43180", VA = "0xD43180", Slot = "10")]
	public virtual void OnPull()
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xD430C4", Offset = "0xD430C4", VA = "0xD430C4", Slot = "11")]
	public virtual void OnRelease()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xD431B0", Offset = "0xD431B0", VA = "0xD431B0", Slot = "12")]
	public virtual void OnCreate(Action turnBackEvent)
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xD432B4", Offset = "0xD432B4", VA = "0xD432B4", Slot = "13")]
	public virtual void Release()
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xD43300", Offset = "0xD43300", VA = "0xD43300", Slot = "14")]
	public virtual void Release(float timeOut)
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xD433C0", Offset = "0xD433C0", VA = "0xD433C0", Slot = "15")]
	public virtual void OnReset()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xD433C8", Offset = "0xD433C8", VA = "0xD433C8", Slot = "16")]
	protected virtual void OnStart()
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xD433CC", Offset = "0xD433CC", VA = "0xD433CC")]
	private void ForceRelease()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xD432EC", Offset = "0xD432EC", VA = "0xD432EC")]
	private void PoolableBehavioursRelease()
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xD43574", Offset = "0xD43574", VA = "0xD43574")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xD43584", Offset = "0xD43584", VA = "0xD43584")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xD43168", Offset = "0xD43168", VA = "0xD43168")]
	public PoolableBehaviour()
	{
	}
}
[Token(Token = "0x2000265")]
public class PrefabPool<T> : Pool<T> where T : IPrefabPoolable
{
	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject _prefab;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform _poolRoot;

	[Token(Token = "0x6000E6A")]
	public PrefabPool(GameObject prefab, [Optional] Transform poolRoot, int defaultSize = 0)
	{
	}

	[Token(Token = "0x6000E6B")]
	protected override T CreatePoolItem()
	{
		return (T)null;
	}

	[Token(Token = "0x6000E6C")]
	protected override void PushToList(T newObject)
	{
	}
}
[Token(Token = "0x2000266")]
public class ScoreController : MonoBehaviour
{
	[Token(Token = "0x20003E4")]
	public delegate void ScoreEvent(int value);

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ScoreEvent ProgressEvent;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static ScoreEvent SpeedComboEvent;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static ScoreEvent TraceComboEvent;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static ScoreEvent ScoreLevelEvent;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _scoreLevel;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _speedCombo;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _traceCombo;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _liveProgress;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _cellMultiplier;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _checkTime;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _currentTimePoint;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ScoreController _ScoreController;

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xD4C48C", Offset = "0xD4C48C", VA = "0xD4C48C")]
	public int GetScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xD4C494", Offset = "0xD4C494", VA = "0xD4C494")]
	public int GetSpeedCombo()
	{
		return default(int);
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xD4C49C", Offset = "0xD4C49C", VA = "0xD4C49C")]
	public int GetTraceCombo()
	{
		return default(int);
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xD4C4A4", Offset = "0xD4C4A4", VA = "0xD4C4A4")]
	public int GetLiveProgress()
	{
		return default(int);
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xD4C4AC", Offset = "0xD4C4AC", VA = "0xD4C4AC")]
	public ScoreController GetScoreController()
	{
		return null;
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xD4C4B4", Offset = "0xD4C4B4", VA = "0xD4C4B4")]
	public void AddScore(int score)
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xD4C79C", Offset = "0xD4C79C", VA = "0xD4C79C")]
	private void CheckSpeedCombo()
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xD4C830", Offset = "0xD4C830", VA = "0xD4C830")]
	private void OnTraceCombo(Field field)
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xD4C8A0", Offset = "0xD4C8A0", VA = "0xD4C8A0")]
	private void OnSpeedCombo(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xD4C92C", Offset = "0xD4C92C", VA = "0xD4C92C")]
	private void OnValidateStart(Field field)
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xD4C930", Offset = "0xD4C930", VA = "0xD4C930")]
	private void OnValidateEnd(Field field)
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xD4C9A0", Offset = "0xD4C9A0", VA = "0xD4C9A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xD4CB38", Offset = "0xD4CB38", VA = "0xD4CB38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xD4CB3C", Offset = "0xD4CB3C", VA = "0xD4CB3C")]
	public ScoreController()
	{
	}
}
[Token(Token = "0x2000267")]
public class ScoreDisplayController : MonoBehaviour
{
	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Score;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Speed;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Trace;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ScoreDisplayRenderer ScoreDisplay;

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xD4CC00", Offset = "0xD4CC00", VA = "0xD4CC00")]
	public void IncScore()
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xD4CCC4", Offset = "0xD4CCC4", VA = "0xD4CCC4")]
	public void IncSpeedCombo()
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xD4CD80", Offset = "0xD4CD80", VA = "0xD4CD80")]
	public void IncDestructionCombo()
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xD4CE3C", Offset = "0xD4CE3C", VA = "0xD4CE3C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xD4CEF4", Offset = "0xD4CEF4", VA = "0xD4CEF4")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xD4CC20", Offset = "0xD4CC20", VA = "0xD4CC20")]
	public void UpdateLevelScore(int score)
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xD4CCDC", Offset = "0xD4CCDC", VA = "0xD4CCDC")]
	public void UpdateSpeedCombo(int speed)
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xD4CD98", Offset = "0xD4CD98", VA = "0xD4CD98")]
	public void UpdateTraceCombo(int trace)
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xD4D200", Offset = "0xD4D200", VA = "0xD4D200")]
	public void UpdateLiveProgress(int progress)
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xD4D204", Offset = "0xD4D204", VA = "0xD4D204")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xD4D3C8", Offset = "0xD4D3C8", VA = "0xD4D3C8")]
	public ScoreDisplayController()
	{
	}
}
[Token(Token = "0x2000268")]
public class ScoreDisplayRenderer : MonoBehaviour
{
	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI LevelScore;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI SpeedCombo;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI TraceCombo;

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xD4CECC", Offset = "0xD4CECC", VA = "0xD4CECC")]
	public void Show()
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xD4CF84", Offset = "0xD4CF84", VA = "0xD4CF84")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xD4CFAC", Offset = "0xD4CFAC", VA = "0xD4CFAC")]
	public void UpdateLevelScore(int score)
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xD4D060", Offset = "0xD4D060", VA = "0xD4D060")]
	public void UpdateSpeedCombo(int speed)
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xD4D130", Offset = "0xD4D130", VA = "0xD4D130")]
	public void UpdateTraceCombo(int trace)
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xD4D3D0", Offset = "0xD4D3D0", VA = "0xD4D3D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xD4D3D4", Offset = "0xD4D3D4", VA = "0xD4D3D4")]
	public ScoreDisplayRenderer()
	{
	}
}
[Token(Token = "0x2000269")]
public class BatsSoundGenerator : MonoBehaviour
{
	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BatsSoundGenerator _instance;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource Sound;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MaxBatsCount;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _currentBatCount;

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xE8B228", Offset = "0xE8B228", VA = "0xE8B228")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xE8B27C", Offset = "0xE8B27C", VA = "0xE8B27C")]
	public static void PlusBat()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xE8B3C8", Offset = "0xE8B3C8", VA = "0xE8B3C8")]
	public static void PlusBat(int count)
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xE8B48C", Offset = "0xE8B48C", VA = "0xE8B48C")]
	public static void MinusBat()
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xE8B53C", Offset = "0xE8B53C", VA = "0xE8B53C")]
	public static void MinusBat(int count)
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xE8B318", Offset = "0xE8B318", VA = "0xE8B318")]
	private static void ChangeSoundVolume()
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xE8B5EC", Offset = "0xE8B5EC", VA = "0xE8B5EC")]
	public BatsSoundGenerator()
	{
	}
}
[Token(Token = "0x200026A")]
public class ButterfliesMaterials : MonoBehaviour
{
	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ButterfliesMaterials _instance;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Material> Materials;

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xE93930", Offset = "0xE93930", VA = "0xE93930")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xE93A00", Offset = "0xE93A00", VA = "0xE93A00")]
	public static Material GetMaterial(CellType type)
	{
		return null;
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xE93A84", Offset = "0xE93A84", VA = "0xE93A84")]
	public ButterfliesMaterials()
	{
	}
}
[Token(Token = "0x200026B")]
public class ButterfliesSitPoint : MonoBehaviour
{
	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<ButterfliesSitPoint> Points;

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xE93A8C", Offset = "0xE93A8C", VA = "0xE93A8C")]
	public static ButterfliesSitPoint GetEmptyPoint()
	{
		return null;
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xE93B50", Offset = "0xE93B50", VA = "0xE93B50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xE93BD4", Offset = "0xE93BD4", VA = "0xE93BD4")]
	public ButterfliesSitPoint()
	{
	}
}
[Token(Token = "0x200026C")]
public class CamRigShakeService : MonoBehaviour
{
	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform CameraRig;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource Sound;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FadeTime;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float FadeShakeTime;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float RandomShakePosition;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Duration;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 RandomTimeBetweenShake;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EventTimer _shakeTimer;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _defaultSoundVolume;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _defaultPosition;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TimerUpdateEvent _schedulerUpdateEvent;

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xE94168", Offset = "0xE94168", VA = "0xE94168")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xE94228", Offset = "0xE94228", VA = "0xE94228")]
	private void OnShakeUpdate()
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xE94370", Offset = "0xE94370", VA = "0xE94370")]
	private void ShakeEnd()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xE944C8", Offset = "0xE944C8", VA = "0xE944C8")]
	private void SchedulerUpdateEvent(float percent, float targetTimer)
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xE94514", Offset = "0xE94514", VA = "0xE94514")]
	public void Shake()
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xE9462C", Offset = "0xE9462C", VA = "0xE9462C")]
	public CamRigShakeService()
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xE946A4", Offset = "0xE946A4", VA = "0xE946A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00260", Offset = "0xB00260")]
	private void <ShakeEnd>b__13_0()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xE946E4", Offset = "0xE946E4", VA = "0xE946E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00270", Offset = "0xB00270")]
	private void <ShakeEnd>b__13_1(float percent, float time)
	{
	}
}
[Token(Token = "0x200026D")]
public static class FieldAnalyzer
{
	[Token(Token = "0x20003E5")]
	public enum Direction
	{
		[Token(Token = "0x400131C")]
		Top,
		[Token(Token = "0x400131D")]
		Bottom,
		[Token(Token = "0x400131E")]
		Left,
		[Token(Token = "0x400131F")]
		Right
	}

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<Cell> _posibleMove;

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x1F53F2C", Offset = "0x1F53F2C", VA = "0x1F53F2C")]
	public static bool CheckPosibleMove(Field field, FieldData<CellType> data)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x1F52E90", Offset = "0x1F52E90", VA = "0x1F52E90")]
	public static int GetPosibleMoveCount(Field field, FieldData<CellType> data)
	{
		return default(int);
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x1F545E8", Offset = "0x1F545E8", VA = "0x1F545E8")]
	public static List<Cell> GetPosibleMove(Field field, FieldData<CellType> data)
	{
		return null;
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x1F54068", Offset = "0x1F54068", VA = "0x1F54068")]
	private static bool CheckType(Field field, FieldData<CellType> data, int row, int col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x1F54690", Offset = "0x1F54690", VA = "0x1F54690")]
	private static bool CheckTypeSimple(Field field, FieldData<CellType> data, int row, int col, Direction blockDir, CellType myType)
	{
		return default(bool);
	}
}
[Token(Token = "0x200026E")]
public class FieldPointRegistrator : MonoBehaviour
{
	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x1F358E8", Offset = "0x1F358E8", VA = "0x1F358E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x1F35944", Offset = "0x1F35944", VA = "0x1F35944")]
	public FieldPointRegistrator()
	{
	}
}
[Token(Token = "0x200026F")]
public static class FieldPointService
{
	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Transform _fieldPoint;

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x1F3594C", Offset = "0x1F3594C", VA = "0x1F3594C")]
	public static void Register(Transform fieldPoint)
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x1F359A0", Offset = "0x1F359A0", VA = "0x1F359A0")]
	public static Transform GetFieldPoint()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000270")]
public class Colors
{
	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAFCC84", Offset = "0xAFCC84")]
	public Color BrightRed;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAFCC9C", Offset = "0xAFCC9C")]
	public Color BrightWhite;

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x1F08378", Offset = "0x1F08378", VA = "0x1F08378")]
	public Colors()
	{
	}
}
[Serializable]
[Token(Token = "0x2000271")]
public class IntRendererDictionary : UnitySerializedDictionary<int, Renderer>
{
	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x1EDFBE0", Offset = "0x1EDFBE0", VA = "0x1EDFBE0")]
	public IntRendererDictionary()
	{
	}
}
[Token(Token = "0x2000272")]
public class Globals : MonoBehaviour
{
	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> CellTypes;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Material> CellMats;

	[Token(Token = "0x4000CC5")]
	public const float CELL_LERP_TIME = 0.25f;

	[Token(Token = "0x4000CC6")]
	public const float CELL_SPAWN_DELAY = 0.01f;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Colors LocalColors;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Globals _instance;

	[Token(Token = "0x1700002B")]
	public static Colors Colors
	{
		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x1F40CA0", Offset = "0x1F40CA0", VA = "0x1F40CA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x1F40C04", Offset = "0x1F40C04", VA = "0x1F40C04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x1F40CFC", Offset = "0x1F40CFC", VA = "0x1F40CFC")]
	public static List<GameObject> GetCellTypes()
	{
		return null;
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x1F40D58", Offset = "0x1F40D58", VA = "0x1F40D58")]
	public static List<Material> GetCellMats()
	{
		return null;
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x1F40DB4", Offset = "0x1F40DB4", VA = "0x1F40DB4")]
	public Globals()
	{
	}
}
[Token(Token = "0x2000273")]
public class HintServices : MonoBehaviour
{
	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeToHint;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Field CurrentField;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource Sound;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ShakeTime;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float ShakeStrength;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int ShakeVibratio;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve Curve;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EventTimer _timer;

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x1F48B40", Offset = "0x1F48B40", VA = "0x1F48B40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x1F48BF8", Offset = "0x1F48BF8", VA = "0x1F48BF8")]
	private void OnLaunch(Field field)
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x1F48BFC", Offset = "0x1F48BFC", VA = "0x1F48BFC")]
	public void StartServices()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x1F48CE0", Offset = "0x1F48CE0", VA = "0x1F48CE0")]
	private void OnValidateEnd(Field field)
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x1F48CE4", Offset = "0x1F48CE4", VA = "0x1F48CE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x1F48D30", Offset = "0x1F48D30", VA = "0x1F48D30")]
	private void ShowHint()
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x1F48CBC", Offset = "0x1F48CBC", VA = "0x1F48CBC")]
	private void RefreshTimer()
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x1F48E4C", Offset = "0x1F48E4C", VA = "0x1F48E4C")]
	public HintServices()
	{
	}
}
[Token(Token = "0x2000274")]
public static class LevelRatingService
{
	[Token(Token = "0x20003E6")]
	public enum LevelRating
	{
		[Token(Token = "0x4001321")]
		None,
		[Token(Token = "0x4001322")]
		Low,
		[Token(Token = "0x4001323")]
		Average,
		[Token(Token = "0x4001324")]
		Max
	}

	[Serializable]
	[Token(Token = "0x20003E7")]
	private class LevelRatingData
	{
		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LevelLoader.LevelID Level;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public LevelRating Rating;

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x1EE2B74", Offset = "0x1EE2B74", VA = "0x1EE2B74")]
		public LevelRatingData(LevelLoader.LevelID level, LevelRating rating)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003E8")]
	private class LevelRatingList
	{
		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<LevelRatingData> LevelRatingData;

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x1EE2BAC", Offset = "0x1EE2BAC", VA = "0x1EE2BAC")]
		public LevelRatingList()
		{
		}
	}

	[Token(Token = "0x4000CD1")]
	private const string RATINGS_DATA = "LevelRatings.dat";

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LevelRatingList _levelRatings;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool _isAllUnlocked;

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x1EE25A0", Offset = "0x1EE25A0", VA = "0x1EE25A0")]
	static LevelRatingService()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x1EE26D4", Offset = "0x1EE26D4", VA = "0x1EE26D4")]
	public static LevelRating GetLevelRating(LevelLoader.LevelID level)
	{
		return default(LevelRating);
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x1EE292C", Offset = "0x1EE292C", VA = "0x1EE292C")]
	public static void SetLevelRating(LevelLoader.LevelID level, LevelRating rating)
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x1EE2A9C", Offset = "0x1EE2A9C", VA = "0x1EE2A9C")]
	public static void SetUState(bool state)
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x1EE2B0C", Offset = "0x1EE2B0C", VA = "0x1EE2B0C")]
	public static bool GetUState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x1EE286C", Offset = "0x1EE286C", VA = "0x1EE286C")]
	private static LevelRatingData CreateNewLevelData(LevelLoader.LevelID level, LevelRating rating)
	{
		return null;
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x1EE29F4", Offset = "0x1EE29F4", VA = "0x1EE29F4")]
	private static void SaveRatings()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x1EE2614", Offset = "0x1EE2614", VA = "0x1EE2614")]
	private static void LoadRatings()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x1EE2770", Offset = "0x1EE2770", VA = "0x1EE2770")]
	private static LevelRatingData GetLevelRatingData(LevelLoader.LevelID findLevelData)
	{
		return null;
	}
}
[Token(Token = "0x2000275")]
public class ObjectOnLevelChangeActiveState : MonoBehaviour
{
	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ObjectOnLevelChangeActiveState _instance;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> ChangeActiveStateObjects;

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xE1B420", Offset = "0xE1B420", VA = "0xE1B420")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xE1B474", Offset = "0xE1B474", VA = "0xE1B474")]
	public static void SetActiveObjects(bool state)
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xE1B570", Offset = "0xE1B570", VA = "0xE1B570")]
	public ObjectOnLevelChangeActiveState()
	{
	}
}
[Token(Token = "0x2000276")]
public class RegionRatingUnlockControl : MonoBehaviour
{
	[Token(Token = "0x20003E9")]
	public struct RegionLockData
	{
		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LevelLoader.LevelID LastUnlockedLevel;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool RegionUnlocked;
	}

	[Token(Token = "0x4000CD6")]
	private const int OPENED_LEVEL_COUNT_LIMIT = 3;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<LevelLoader.LevelRegion, RegionLockData> _regionData;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool _isInitialized;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelLoader.LevelID LastRegionLevel;

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xD45600", Offset = "0xD45600", VA = "0xD45600")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xD45668", Offset = "0xD45668", VA = "0xD45668")]
	private void Init()
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xD45B2C", Offset = "0xD45B2C", VA = "0xD45B2C")]
	public bool IsPreviousRegionUnlocked(LevelLoader.LevelRegion checkRegion)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xD45BE4", Offset = "0xD45BE4", VA = "0xD45BE4")]
	public bool IsLevelUnlocked(LevelLoader.LevelID level)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xD45D38", Offset = "0xD45D38", VA = "0xD45D38")]
	public RegionRatingUnlockControl()
	{
	}
}
[Token(Token = "0x2000277")]
public delegate void TimerUpdateEvent(float percent, float targetTime);
[Token(Token = "0x2000278")]
public delegate void TimerEvent();
[Token(Token = "0x2000279")]
public class SchedulerService : MonoBehaviour
{
	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SchedulerService _instance;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<TimerEventWrapper<TimerEvent>> _localEvents;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<TimerEventWrapper<TimerUpdateEvent>> _localPercentEvents;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<IUpdatable> _localUpdatables;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<TimerEventWrapper<TimerEvent>> _localCachedEvents;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<TimerEventWrapper<TimerUpdateEvent>> _localCachedPercentEvents;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<IUpdatable> _localCachedUpdatables;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<TimerEventWrapper<TimerEvent>> _globalEvents;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static List<TimerEventWrapper<TimerUpdateEvent>> _globalPercentEvents;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static List<IUpdatable> _globalUpdatables;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<TimerEventWrapper<TimerEvent>> _cachedForUpdateEvents;

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xD4AAA4", Offset = "0xD4AAA4", VA = "0xD4AAA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xD4AE6C", Offset = "0xD4AE6C", VA = "0xD4AE6C")]
	private void SceneManagerOnsceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xD4AB74", Offset = "0xD4AB74", VA = "0xD4AB74")]
	private void GetCachedEvents()
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xD3E208", Offset = "0xD3E208", VA = "0xD3E208")]
	public static void LocalRegisterEvent(TimerEvent action, float seconds)
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xD4AF98", Offset = "0xD4AF98", VA = "0xD4AF98")]
	public static void LocalRegisterEvent(TimerUpdateEvent action, float seconds)
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xD4B118", Offset = "0xD4B118", VA = "0xD4B118")]
	public static void LocalRegisterEvent(IUpdatable updateEntity)
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xD4346C", Offset = "0xD4346C", VA = "0xD4346C")]
	public static void LocalUnRegisterEvent(TimerEvent action)
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xD4B22C", Offset = "0xD4B22C", VA = "0xD4B22C")]
	private static void UnregisterEvents(List<TimerEventWrapper<TimerEvent>> list, TimerEvent action)
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xD4B2F4", Offset = "0xD4B2F4", VA = "0xD4B2F4")]
	public static void LocalUnRegisterEvent(TimerUpdateEvent action)
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xD4B3FC", Offset = "0xD4B3FC", VA = "0xD4B3FC")]
	private static void UnregisterEvents(List<TimerEventWrapper<TimerUpdateEvent>> list, TimerUpdateEvent action)
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xD4B4C4", Offset = "0xD4B4C4", VA = "0xD4B4C4")]
	public static void LocalUnRegisterEvent(IUpdatable updateEntity)
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xD4B5CC", Offset = "0xD4B5CC", VA = "0xD4B5CC")]
	private static void UnregisterEvents(List<IUpdatable> list, IUpdatable updateEntity)
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xD4B634", Offset = "0xD4B634", VA = "0xD4B634")]
	public static void GlobalRegisterEvent(TimerEvent action, float seconds)
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xD4B730", Offset = "0xD4B730", VA = "0xD4B730")]
	public static void GlobalRegisterEvent(TimerUpdateEvent action, float seconds)
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xD4B844", Offset = "0xD4B844", VA = "0xD4B844")]
	public static void GlobalRegisterEvent(IUpdatable updateEntity)
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xD4B8C8", Offset = "0xD4B8C8", VA = "0xD4B8C8")]
	public static void GlobalUnRegisterEvent(TimerEvent action)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xD4BA08", Offset = "0xD4BA08", VA = "0xD4BA08")]
	public static void GlobalUnRegisterEvent(TimerUpdateEvent action)
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xD4BB48", Offset = "0xD4BB48", VA = "0xD4BB48")]
	public static void GlobalUnRegisterEvent(IUpdatable updateEntity)
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xD4BBCC", Offset = "0xD4BBCC", VA = "0xD4BBCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xD4BCC0", Offset = "0xD4BCC0", VA = "0xD4BCC0")]
	private void UpdateEvents(float currentTime, List<TimerEventWrapper<TimerEvent>> events)
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xD4BF64", Offset = "0xD4BF64", VA = "0xD4BF64")]
	private void UpdatePercentEvents(float currentTime, List<TimerEventWrapper<TimerUpdateEvent>> events)
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xD4C140", Offset = "0xD4C140", VA = "0xD4C140")]
	private void UpdateUpdatables(List<IUpdatable> updatables)
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xD4C238", Offset = "0xD4C238", VA = "0xD4C238")]
	public SchedulerService()
	{
	}
}
[Token(Token = "0x200027A")]
internal struct TimerEventWrapper<T>
{
	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T Action;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float Seconds;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float SecondsLength;

	[Token(Token = "0x6000EEE")]
	public TimerEventWrapper(T action, float seconds)
	{
	}
}
[Token(Token = "0x200027B")]
public class ServiceUnlockAllLevels : MonoBehaviour
{
	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool UnlockAllLevels;

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0xD4E6C8", Offset = "0xD4E6C8", VA = "0xD4E6C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xD4E77C", Offset = "0xD4E77C", VA = "0xD4E77C")]
	public ServiceUnlockAllLevels()
	{
	}
}
[Token(Token = "0x200027C")]
public delegate void OnFadeCompleteHandller();
[Token(Token = "0x200027D")]
public class URP_PP_Fader : MonoBehaviour
{
	[Token(Token = "0x20003EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAB18", Offset = "0xAFAB18")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action onComplete;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float currentVolume;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public URP_PP_Fader <>4__this;

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xE03ABC", Offset = "0xE03ABC", VA = "0xE03ABC")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xE04698", Offset = "0xE04698", VA = "0xE04698")]
		internal void <FadeIn>b__2()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xE04710", Offset = "0xE04710", VA = "0xE04710")]
		internal float <FadeIn>b__3()
		{
			return default(float);
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xE04718", Offset = "0xE04718", VA = "0xE04718")]
		internal void <FadeIn>b__4(float value)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAB28", Offset = "0xAFAB28")]
	private sealed class <>c
	{
		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static DOGetter<Color> <>9__19_0;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static DOSetter<Color> <>9__19_1;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static DOGetter<Color> <>9__20_0;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static DOSetter<Color> <>9__20_1;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static DOGetter<float> <>9__22_0;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static DOSetter<float> <>9__22_1;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static DOGetter<float> <>9__23_0;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static DOSetter<float> <>9__23_1;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static DOGetter<Color> <>9__24_0;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static DOSetter<Color> <>9__24_1;

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xE041D0", Offset = "0xE041D0", VA = "0xE041D0")]
		public <>c()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xE041D8", Offset = "0xE041D8", VA = "0xE041D8")]
		internal Color <FadeIn>b__19_0()
		{
			return default(Color);
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xE04240", Offset = "0xE04240", VA = "0xE04240")]
		internal void <FadeIn>b__19_1(Color value)
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xE042DC", Offset = "0xE042DC", VA = "0xE042DC")]
		internal Color <FadeOut>b__20_0()
		{
			return default(Color);
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xE04344", Offset = "0xE04344", VA = "0xE04344")]
		internal void <FadeOut>b__20_1(Color value)
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xE043E0", Offset = "0xE043E0", VA = "0xE043E0")]
		internal float <SaturationDown>b__22_0()
		{
			return default(float);
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xE04448", Offset = "0xE04448", VA = "0xE04448")]
		internal void <SaturationDown>b__22_1(float value)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xE044C4", Offset = "0xE044C4", VA = "0xE044C4")]
		internal float <DeffaultSaturation>b__23_0()
		{
			return default(float);
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xE0452C", Offset = "0xE0452C", VA = "0xE0452C")]
		internal void <DeffaultSaturation>b__23_1(float value)
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xE045A8", Offset = "0xE045A8", VA = "0xE045A8")]
		internal Color <LightingOn>b__24_0()
		{
			return default(Color);
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xE045FC", Offset = "0xE045FC", VA = "0xE045FC")]
		internal void <LightingOn>b__24_1(Color value)
		{
		}
	}

	[Token(Token = "0x20003EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAB38", Offset = "0xAFAB38")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action onComplete;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float currentVolume;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public URP_PP_Fader <>4__this;

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xE03AC4", Offset = "0xE03AC4", VA = "0xE03AC4")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xE0478C", Offset = "0xE0478C", VA = "0xE0478C")]
		internal void <FadeOut>b__2()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xE04804", Offset = "0xE04804", VA = "0xE04804")]
		internal float <FadeOut>b__3()
		{
			return default(float);
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xE0480C", Offset = "0xE0480C", VA = "0xE0480C")]
		internal void <FadeOut>b__4(float value)
		{
		}
	}

	[Token(Token = "0x20003ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAB48", Offset = "0xAFAB48")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action onComplete;

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xE03CF4", Offset = "0xE03CF4", VA = "0xE03CF4")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xE04880", Offset = "0xE04880", VA = "0xE04880")]
		internal void <SaturationDown>b__2()
		{
		}
	}

	[Token(Token = "0x20003EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAB58", Offset = "0xAFAB58")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action onComplete;

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xE03F2C", Offset = "0xE03F2C", VA = "0xE03F2C")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xE04894", Offset = "0xE04894", VA = "0xE04894")]
		internal void <DeffaultSaturation>b__2()
		{
		}
	}

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static URP_PP_Fader Instance;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static OnFadeCompleteHandller OnFadeOutCompleteEvent;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OnFadeCompleteHandller OnFadeInCompleteEvent;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool FadeOnAwake;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixer Audio;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Volume PP_Volume;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TweenTime;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color OFF_Color;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAFCCB4", Offset = "0xAFCCB4")]
	public Color BlinkColor;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float LightingTime;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<AnimationCurve> LightingCurves;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve LightingCurve;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float TargetLevelVolume;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static ColorAdjustments colorAdjust;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Color _defaultColorFilter;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static float _defaultSaturation;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _defaultExpsoure;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static Tween _currentTween;

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xE032E0", Offset = "0xE032E0", VA = "0xE032E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xE03794", Offset = "0xE03794", VA = "0xE03794")]
	public void FadeIn(Action onComplete)
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xE0345C", Offset = "0xE0345C", VA = "0xE0345C")]
	public void FadeOut(Action onComplete)
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xE03ACC", Offset = "0xE03ACC", VA = "0xE03ACC")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xE03AD4", Offset = "0xE03AD4", VA = "0xE03AD4")]
	public void SaturationDown(Action onComplete)
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xE03CFC", Offset = "0xE03CFC", VA = "0xE03CFC")]
	public void DeffaultSaturation(Action onComplete)
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xE03F34", Offset = "0xE03F34", VA = "0xE03F34")]
	public void LightingOn()
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xE04154", Offset = "0xE04154", VA = "0xE04154")]
	public URP_PP_Fader()
	{
	}
}
[Token(Token = "0x200027E")]
public class SimpleAI : MonoBehaviour
{
	[Token(Token = "0x20003EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAB68", Offset = "0xAFAB68")]
	private sealed class <StartLogic>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleAI <>4__this;

		[Token(Token = "0x170000CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015DB")]
			[Address(RVA = "0xD4EE64", Offset = "0xD4EE64", VA = "0xD4EE64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015DD")]
			[Address(RVA = "0xD4EECC", Offset = "0xD4EECC", VA = "0xD4EECC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xD4EC90", Offset = "0xD4EC90", VA = "0xD4EC90")]
		[DebuggerHidden]
		public <StartLogic>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xD4EDB8", Offset = "0xD4EDB8", VA = "0xD4EDB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xD4EDBC", Offset = "0xD4EDBC", VA = "0xD4EDBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xD4EE6C", Offset = "0xD4EE6C", VA = "0xD4EE6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Field Field;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FieldManager Manager;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TimeToMove;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float OneCellWaitTime;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int MoveCount;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float SecCount;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine _waitCoroutine;

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xD4EBDC", Offset = "0xD4EBDC", VA = "0xD4EBDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xD4EBE0", Offset = "0xD4EBE0", VA = "0xD4EBE0")]
	private void OnValidateEnd()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xD4EBE4", Offset = "0xD4EBE4", VA = "0xD4EBE4")]
	private void StartAI()
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xD4EC80", Offset = "0xD4EC80", VA = "0xD4EC80")]
	private void OnExplodeEvent(int cellCount)
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xD4EC10", Offset = "0xD4EC10", VA = "0xD4EC10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB00280", Offset = "0xB00280")]
	private IEnumerator StartLogic()
	{
		return null;
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xD4ECBC", Offset = "0xD4ECBC", VA = "0xD4ECBC")]
	private void MakeMove()
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xD4EDA4", Offset = "0xD4EDA4", VA = "0xD4EDA4")]
	public SimpleAI()
	{
	}
}
[Token(Token = "0x200027F")]
public class SimpleRotator : MonoBehaviour, IUpdatable
{
	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotationSpeed;

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xD5045C", Offset = "0xD5045C", VA = "0xD5045C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xD504C0", Offset = "0xD504C0", VA = "0xD504C0", Slot = "4")]
	public void OnUpdate()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xD5054C", Offset = "0xD5054C", VA = "0xD5054C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xD505B0", Offset = "0xD505B0", VA = "0xD505B0")]
	public SimpleRotator()
	{
	}
}
[Token(Token = "0x2000280")]
public class ExplosionSound : PoolableBehaviour
{
	[Token(Token = "0x4000D03")]
	public const int POOL_SIZE = 8;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PrefabPool<ExplosionSound> _pool;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource AudioSource;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _explosionSoundTransform;

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x1F4B0D8", Offset = "0x1F4B0D8", VA = "0x1F4B0D8")]
	public static void InitPool(PrefabPool<ExplosionSound> pool)
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x1F4B12C", Offset = "0x1F4B12C", VA = "0x1F4B12C")]
	public static ExplosionSound Get()
	{
		return null;
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x1F4B18C", Offset = "0x1F4B18C", VA = "0x1F4B18C")]
	public void Play(AudioClip audioClip, Vector3 position)
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x1F4B284", Offset = "0x1F4B284", VA = "0x1F4B284")]
	public ExplosionSound()
	{
	}
}
[Token(Token = "0x2000281")]
public class ExplosionSoundGenerator : MonoBehaviour
{
	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AudioClip> ExplosionClip;

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x1F4B2EC", Offset = "0x1F4B2EC", VA = "0x1F4B2EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x1F4B36C", Offset = "0x1F4B36C", VA = "0x1F4B36C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x1F4B370", Offset = "0x1F4B370", VA = "0x1F4B370")]
	private void CellExplosionEvent(Field field, List<Cell> cells)
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x1F4B478", Offset = "0x1F4B478", VA = "0x1F4B478")]
	private Vector3 GetMiddleCellPosition(Field field, List<Cell> cells)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x1F4B820", Offset = "0x1F4B820", VA = "0x1F4B820")]
	public ExplosionSoundGenerator()
	{
	}
}
[Token(Token = "0x2000282")]
public class StickController : MonoBehaviour
{
	[Token(Token = "0x20003F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAB78", Offset = "0xAFAB78")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color startColor;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StickController <>4__this;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DOGetter<Color> <>9__3;

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xDFA258", Offset = "0xDFA258", VA = "0xDFA258")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xDFA6F4", Offset = "0xDFA6F4", VA = "0xDFA6F4")]
		internal Color <OnButtonPressEvent>b__0()
		{
			return default(Color);
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xDFA700", Offset = "0xDFA700", VA = "0xDFA700")]
		internal void <OnButtonPressEvent>b__2()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xDFA8C0", Offset = "0xDFA8C0", VA = "0xDFA8C0")]
		internal Color <OnButtonPressEvent>b__3()
		{
			return default(Color);
		}
	}

	[Token(Token = "0x20003F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAB88", Offset = "0xAFAB88")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color startColor;

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xDFA4DC", Offset = "0xDFA4DC", VA = "0xDFA4DC")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xDFA8CC", Offset = "0xDFA8CC", VA = "0xDFA8CC")]
		internal Color <OnButtonReleaseEvent>b__1()
		{
			return default(Color);
		}
	}

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputReader.HandEnum Hand;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource Sound;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TweenTime;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve Curve;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem StickPressEffect;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer StickRenderer;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystemForceField ForceField;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float EmissionTweenTime;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float LoopEmissionTweenTime;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve EmmisionCurve;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve LoopEmmisionCurve;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float EmissionPower;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Tween _currentStartEndTween;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Tween _loopTween;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _defaultVolume;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Color _defaultColor;

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xDF9DC0", Offset = "0xDF9DC0", VA = "0xDF9DC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xDF9FC0", Offset = "0xDF9FC0", VA = "0xDF9FC0")]
	private void OnButtonPressEvent(InputReader.HandEnum hand)
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xDFA260", Offset = "0xDFA260", VA = "0xDFA260")]
	private void OnButtonReleaseEvent(InputReader.HandEnum hand)
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xDFA4E4", Offset = "0xDFA4E4", VA = "0xDFA4E4")]
	public StickController()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0xDFA504", Offset = "0xDFA504", VA = "0xDFA504")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB002E4", Offset = "0xB002E4")]
	private void <OnButtonPressEvent>b__17_1(Color value)
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0xDFA5A0", Offset = "0xDFA5A0", VA = "0xDFA5A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB002F4", Offset = "0xB002F4")]
	private void <OnButtonPressEvent>b__17_4(Color value)
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0xDFA63C", Offset = "0xDFA63C", VA = "0xDFA63C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00304", Offset = "0xB00304")]
	private void <OnButtonReleaseEvent>b__18_0()
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0xDFA658", Offset = "0xDFA658", VA = "0xDFA658")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00314", Offset = "0xB00314")]
	private void <OnButtonReleaseEvent>b__18_2(Color value)
	{
	}
}
[Token(Token = "0x2000283")]
public class StartUpScript : MonoBehaviour
{
	[Token(Token = "0x6000F19")]
	[Address(RVA = "0xDF9DA4", Offset = "0xDF9DA4", VA = "0xDF9DA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xDF9DB0", Offset = "0xDF9DB0", VA = "0xDF9DB0")]
	public StartUpScript()
	{
	}
}
[Token(Token = "0x2000284")]
public static class OculusStoreIntegration
{
	[Token(Token = "0x4000D18")]
	public const string OCULUS_APP_ID = "7217242644952578";

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xDECCC0", Offset = "0xDECCC0", VA = "0xDECCC0")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xDECF38", Offset = "0xDECF38", VA = "0xDECF38")]
	private static void EntitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xDECEB0", Offset = "0xDECEB0", VA = "0xDECEB0")]
	private static void HandleEntitlementCheckResult(bool result)
	{
	}
}
[Token(Token = "0x2000285")]
public class OculusStoreStartup : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAB98", Offset = "0xAFAB98")]
	private sealed class <>c
	{
		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static TweenCallback <>9__12_1;

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xDED404", Offset = "0xDED404", VA = "0xDED404")]
		public <>c()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xDED40C", Offset = "0xDED40C", VA = "0xDED40C")]
		internal void <ChangeGameState>b__12_1()
		{
		}
	}

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material ClearImageMaterial;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Volume PP_Volume;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float DelayedFadeTime;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ColorAdjustments colorAdjust;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Color _defaultColorFilter;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _isEnabled;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _defaultVolume;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _defaultrenderViewportScale;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Tween _currentTween;

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xDECF60", Offset = "0xDECF60", VA = "0xDECF60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xDED068", Offset = "0xDED068", VA = "0xDED068")]
	private void OVRManagerOnAcquired()
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xDED208", Offset = "0xDED208", VA = "0xDED208")]
	private void OVRManagerOnLost()
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xDED07C", Offset = "0xDED07C", VA = "0xDED07C")]
	private void ChangeGameState(bool value)
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xDED21C", Offset = "0xDED21C", VA = "0xDED21C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xDED330", Offset = "0xDED330", VA = "0xDED330")]
	public OculusStoreStartup()
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xDED34C", Offset = "0xDED34C", VA = "0xDED34C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00324", Offset = "0xB00324")]
	private void <ChangeGameState>b__12_0()
	{
	}
}
[Token(Token = "0x2000286")]
public class TestSphere : MonoBehaviour
{
	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TestSphere _instance;

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xE01564", Offset = "0xE01564", VA = "0xE01564")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xE015B8", Offset = "0xE015B8", VA = "0xE015B8")]
	public static void SetPostion(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xE01648", Offset = "0xE01648", VA = "0xE01648")]
	public TestSphere()
	{
	}
}
[Token(Token = "0x2000287")]
public enum Language
{
	[Token(Token = "0x4000D24")]
	EN,
	[Token(Token = "0x4000D25")]
	RU,
	[Token(Token = "0x4000D26")]
	DE
}
[Token(Token = "0x2000288")]
public delegate void TextChange(TextMeshPro textMeshPro);
[Token(Token = "0x2000289")]
public class Localization : MonoBehaviour
{
	[Token(Token = "0x4000D27")]
	public const string INSIDE_TEXT_KEY = "$key";

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Localization _instance;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Language LocalizationLnaguage;

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x1EECD1C", Offset = "0x1EECD1C", VA = "0x1EECD1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x1EDEC08", Offset = "0x1EDEC08", VA = "0x1EDEC08")]
	public static Language GetCurrentLanguage()
	{
		return default(Language);
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x1EECD70", Offset = "0x1EECD70", VA = "0x1EECD70")]
	public Localization()
	{
	}
}
[Token(Token = "0x200028A")]
public class TextMeshProLocalization : MonoBehaviour
{
	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextChange OnTextChangeEvent;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro TextMesh;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LanguageListDictionary LocalizationVariants;

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xE01A24", Offset = "0xE01A24", VA = "0xE01A24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xE01A7C", Offset = "0xE01A7C", VA = "0xE01A7C")]
	private void SwitchText(Language lang)
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xE01A50", Offset = "0xE01A50", VA = "0xE01A50")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xE01B6C", Offset = "0xE01B6C", VA = "0xE01B6C")]
	public TextMeshProLocalization()
	{
	}
}
[Serializable]
[Token(Token = "0x200028B")]
public class LanguageListDictionary : UnitySerializedDictionary<Language, LocalizationWrapper>
{
	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x1EE0ECC", Offset = "0x1EE0ECC", VA = "0x1EE0ECC")]
	public LanguageListDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x200028C")]
public class LocalizationWrapper
{
	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Multiline]
	public string Text;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float FontSize;

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x1EECD78", Offset = "0x1EECD78", VA = "0x1EECD78")]
	public LocalizationWrapper()
	{
	}
}
[Token(Token = "0x200028D")]
public class TextMeshProWorldPalette : MonoBehaviour
{
	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro LinkedTextMeshPro;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelLoader.LevelRegion WorldPreset;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WorldPalettes Palettes;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool AutoApplyInAwake;

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xE01B74", Offset = "0xE01B74", VA = "0xE01B74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xE01B84", Offset = "0xE01B84", VA = "0xE01B84")]
	private void ApplyPalette()
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xE01BAC", Offset = "0xE01BAC", VA = "0xE01BAC")]
	public TextMeshProWorldPalette()
	{
	}
}
[Token(Token = "0x200028E")]
public static class AssetFinder
{
	[Token(Token = "0x6000F38")]
	public static T[] GetAssetsByType<T>() where T : UnityEngine.Object
	{
		return null;
	}

	[Token(Token = "0x6000F39")]
	public static T GetAssetByName<T>(string name) where T : UnityEngine.Object
	{
		return null;
	}
}
[Token(Token = "0x200028F")]
public class BaseSpace : MonoBehaviour
{
	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public SectorParameters[] SectorParameters;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask Mask;

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xE8A380", Offset = "0xE8A380", VA = "0xE8A380", Slot = "4")]
	public virtual void GetAllGameObjectOnScene()
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xE8A4FC", Offset = "0xE8A4FC", VA = "0xE8A4FC", Slot = "5")]
	public virtual void SplitObjectsBySectors(List<MeshRenderer> allObjects)
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xE8A500", Offset = "0xE8A500", VA = "0xE8A500")]
	public void Bake()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xE8A55C", Offset = "0xE8A55C", VA = "0xE8A55C")]
	public void BakeGroup(int sectorNumber)
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xE8A7D4", Offset = "0xE8A7D4", VA = "0xE8A7D4")]
	private GameObject[] ConversionListToArray(List<GameObject> gameObjectsList)
	{
		return null;
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xE8A8CC", Offset = "0xE8A8CC", VA = "0xE8A8CC")]
	public void RevertToOriginalMesh()
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xE8A91C", Offset = "0xE8A91C", VA = "0xE8A91C")]
	public void RevertToOriginalMesh(int group)
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xE8AC40", Offset = "0xE8AC40", VA = "0xE8AC40")]
	public void RevertToOriginalMesh(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xE8AFF4", Offset = "0xE8AFF4", VA = "0xE8AFF4")]
	public BaseSpace()
	{
	}
}
[Serializable]
[Token(Token = "0x2000290")]
public class SectorParameters
{
	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<MeshRenderer> _sectorsMeshes;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MaterialBlock> _materials;

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xD4DC4C", Offset = "0xD4DC4C", VA = "0xD4DC4C")]
	public SectorParameters(List<MeshRenderer> meshes)
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xD4DCF8", Offset = "0xD4DCF8", VA = "0xD4DCF8")]
	public SectorParameters()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xD4DD90", Offset = "0xD4DD90", VA = "0xD4DD90")]
	public void AddMesh(MeshRenderer mesh)
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xD4DDF8", Offset = "0xD4DDF8", VA = "0xD4DDF8")]
	public void SplitMeshesByMaterials()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xD4DF2C", Offset = "0xD4DF2C", VA = "0xD4DF2C")]
	private MaterialBlock GetMaterialBlock(Material material)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000291")]
public class MaterialBlock
{
	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<MeshRenderer> _meshes;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Mesh> _meshFilter;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material MaterialForBlock;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<MaterialSubsector> _subsectors;

	[Token(Token = "0x4000D3B")]
	private const int MAX_TRIANGLE = 60000;

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x1EF0510", Offset = "0x1EF0510", VA = "0x1EF0510")]
	public MaterialBlock(Material material)
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x1EF05E4", Offset = "0x1EF05E4", VA = "0x1EF05E4")]
	public void AddedMesh(MeshRenderer mesh)
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x1EF067C", Offset = "0x1EF067C", VA = "0x1EF067C")]
	public void HowManyTriangle()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x1EF0B4C", Offset = "0x1EF0B4C", VA = "0x1EF0B4C")]
	private void CreatedBakeGroups()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x1EF0EEC", Offset = "0x1EF0EEC", VA = "0x1EF0EEC")]
	private void RemoveIndex(int index)
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x1EF1018", Offset = "0x1EF1018", VA = "0x1EF1018")]
	private MeshRenderer NearestWithLimitTriangles(List<MeshRenderer> meshes, List<Mesh> meshFilter, int limitsTriangle, Vector3 positionBaseObject)
	{
		return null;
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x1EF1220", Offset = "0x1EF1220", VA = "0x1EF1220")]
	private List<MeshRenderer> TakeMeshesWithLimitedNumberOfTriangles(int triangleLimit, List<MeshRenderer> meshes, List<Mesh> meshFilter)
	{
		return null;
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x1EF0DB8", Offset = "0x1EF0DB8", VA = "0x1EF0DB8")]
	private int GetMeshIndexWithTheMaximumNumberOfTriangles(List<Mesh> meshes)
	{
		return default(int);
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x1EF0A68", Offset = "0x1EF0A68", VA = "0x1EF0A68")]
	private List<GameObject> GetGameObjects()
	{
		return null;
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x1EF08D4", Offset = "0x1EF08D4", VA = "0x1EF08D4")]
	private void GetMeshFilter()
	{
	}
}
[Serializable]
[Token(Token = "0x2000292")]
public class MaterialSubsector
{
	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Mesh> OriginalMeshes;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> OriginalGameObject;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh NewBakedMesh;

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xE0B2A4", Offset = "0xE0B2A4", VA = "0xE0B2A4")]
	public MaterialSubsector(List<Mesh> meshes, List<GameObject> gameObjects)
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xE0B2DC", Offset = "0xE0B2DC", VA = "0xE0B2DC")]
	public MaterialSubsector()
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xE0B378", Offset = "0xE0B378", VA = "0xE0B378")]
	public void AddedMeshAndGameObject(Mesh mesh, GameObject gameObject)
	{
	}
}
[Token(Token = "0x2000293")]
public class SpaceOfCube : BaseSpace
{
	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public float OffsetForward;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float OffsetUp;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float OffsetDown;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float OffsetRight;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float OffsetLeft;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float OffsetBack;

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xDF42F0", Offset = "0xDF42F0", VA = "0xDF42F0", Slot = "5")]
	public override void SplitObjectsBySectors(List<MeshRenderer> allObjects)
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xDF449C", Offset = "0xDF449C", VA = "0xDF449C")]
	private bool IsObjectInCube(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xDF4650", Offset = "0xDF4650", VA = "0xDF4650")]
	public SpaceOfCube()
	{
	}
}
[Token(Token = "0x2000294")]
public class SpaceOfCylinder : BaseSpace
{
	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Radius;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int SectorsValue;

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xDF4668", Offset = "0xDF4668", VA = "0xDF4668")]
	private SectorParameters[] CreacteSectors()
	{
		return null;
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xDF4758", Offset = "0xDF4758", VA = "0xDF4758", Slot = "5")]
	public override void SplitObjectsBySectors(List<MeshRenderer> allObjects)
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xDF4B8C", Offset = "0xDF4B8C", VA = "0xDF4B8C")]
	private void AddedSectorsInformation(SectorParameters[] sectors)
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xDF4888", Offset = "0xDF4888", VA = "0xDF4888")]
	private bool IsObjectInCone(MeshRenderer mesh)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xDF4988", Offset = "0xDF4988", VA = "0xDF4988")]
	private int GetObjectSector(MeshRenderer mesh)
	{
		return default(int);
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xDF4BF8", Offset = "0xDF4BF8", VA = "0xDF4BF8")]
	private int WhichSectorIsIt(int angle)
	{
		return default(int);
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xDF4C24", Offset = "0xDF4C24", VA = "0xDF4C24")]
	public SpaceOfCylinder()
	{
	}
}
[Token(Token = "0x2000295")]
public enum StoreType
{
	[Token(Token = "0x4000D48")]
	OculusStore,
	[Token(Token = "0x4000D49")]
	QuestStore
}
[Token(Token = "0x2000296")]
public class BuildSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StoreType Store;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StoreType STORE;

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xE92CD0", Offset = "0xE92CD0", VA = "0xE92CD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xE92E1C", Offset = "0xE92E1C", VA = "0xE92E1C")]
	public static StoreType GetCurrentStoreType()
	{
		return default(StoreType);
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xE92E84", Offset = "0xE92E84", VA = "0xE92E84")]
	public BuildSwitcher()
	{
	}
}
[Token(Token = "0x2000297")]
public abstract class BuildSwitcherHandler : MonoBehaviour
{
	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xE92E90", Offset = "0xE92E90", VA = "0xE92E90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F64")]
	protected abstract void OnStoreChange(StoreType storeType);

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xE92F4C", Offset = "0xE92F4C", VA = "0xE92F4C")]
	protected BuildSwitcherHandler()
	{
	}
}
[Token(Token = "0x2000298")]
public class BuildSwitcherHandlerDisableObject : BuildSwitcherHandler
{
	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StoreType ActiveWithStore;

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xE92F54", Offset = "0xE92F54", VA = "0xE92F54", Slot = "4")]
	protected override void OnStoreChange(StoreType storeType)
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xE92F90", Offset = "0xE92F90", VA = "0xE92F90")]
	public BuildSwitcherHandlerDisableObject()
	{
	}
}
[Token(Token = "0x2000299")]
public class CamEnabler : MonoBehaviour
{
	[Token(Token = "0x20003F3")]
	public enum CamMode
	{
		[Token(Token = "0x4001347")]
		VR,
		[Token(Token = "0x4001348")]
		Screen
	}

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CamMode CurrentCamMode;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool StartUp;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CamMode CurrentMode;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool ShowObjects;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject VR;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ScreenCam;

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xE93F70", Offset = "0xE93F70", VA = "0xE93F70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xE9410C", Offset = "0xE9410C", VA = "0xE9410C")]
	public CamEnabler()
	{
	}
}
[Token(Token = "0x200029A")]
public class HeightAdjuster : InteractiveObject
{
	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Target;

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x1F47B3C", Offset = "0x1F47B3C", VA = "0x1F47B3C", Slot = "7")]
	public override void OnHold(HandInteraction handTransform, InputReader.HandEnum hand)
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x1F47C5C", Offset = "0x1F47C5C", VA = "0x1F47C5C")]
	public HeightAdjuster()
	{
	}
}
[Token(Token = "0x200029B")]
public class HeightEqualizer : MonoBehaviour
{
	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float VerticalOffset;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DeltaHeight;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float RepositionDelay;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _repositioning;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _timer;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _lerpValue;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _targetPosition;

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x1F47C64", Offset = "0x1F47C64", VA = "0x1F47C64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x1F47CB8", Offset = "0x1F47CB8", VA = "0x1F47CB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x1F47DF8", Offset = "0x1F47DF8", VA = "0x1F47DF8")]
	private void Reposition()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x1F47F30", Offset = "0x1F47F30", VA = "0x1F47F30")]
	private void StartRepositioningCountdown()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x1F47F80", Offset = "0x1F47F80", VA = "0x1F47F80")]
	public HeightEqualizer()
	{
	}
}
[Token(Token = "0x200029C")]
public class InteractionButtonEvent : RaycastableHighlighter
{
	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent Events;

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x1EDFC30", Offset = "0x1EDFC30", VA = "0x1EDFC30", Slot = "15")]
	public override void OnInteractionEnd(Wand wand)
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x1EDFC6C", Offset = "0x1EDFC6C", VA = "0x1EDFC6C")]
	public InteractionButtonEvent()
	{
	}
}
[Token(Token = "0x200029D")]
public class ObjectToggler : InteractiveObject
{
	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Target;

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xE1B578", Offset = "0xE1B578", VA = "0xE1B578", Slot = "6")]
	public override void OnPress(HandInteraction handTransform, InputReader.HandEnum hand)
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xE1B64C", Offset = "0xE1B64C", VA = "0xE1B64C")]
	public ObjectToggler()
	{
	}
}
[Token(Token = "0x200029E")]
public class PlaySoundWithDelay : MonoBehaviour
{
	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource Sound;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float DelayTime;

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xD3E168", Offset = "0xD3E168", VA = "0xD3E168")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xD3E378", Offset = "0xD3E378", VA = "0xD3E378")]
	public PlaySoundWithDelay()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xD3E380", Offset = "0xD3E380", VA = "0xD3E380")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00334", Offset = "0xB00334")]
	private void <Start>b__2_0()
	{
	}
}
[Token(Token = "0x200029F")]
public class RaycastableHighlighter : Raycastable
{
	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer Renderer;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color HightlightColor;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Time;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve Curve;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color _defaultColor;

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xD45338", Offset = "0xD45338", VA = "0xD45338", Slot = "16")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xD45370", Offset = "0xD45370", VA = "0xD45370", Slot = "10")]
	public override void OnFocusStart(Wand wand)
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xD453D8", Offset = "0xD453D8", VA = "0xD453D8", Slot = "12")]
	public override void OnFocusEnd(Wand wand)
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xD45440", Offset = "0xD45440", VA = "0xD45440")]
	public RaycastableHighlighter()
	{
	}
}
[Token(Token = "0x20002A0")]
public class DynamicBatcher : MonoBehaviour
{
	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x1EFF1A4", Offset = "0x1EFF1A4", VA = "0x1EFF1A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x1EFF2D4", Offset = "0x1EFF2D4", VA = "0x1EFF2D4")]
	public DynamicBatcher()
	{
	}
}
[Token(Token = "0x20002A1")]
public class TimeChecker : BaseGameAction
{
	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro Text;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image Stars;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 TimeTwoStar;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 TimeThreeStar;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _timeTwoStar;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _timeThreeStar;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _firstCall;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _startTime;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private StringBuilder _stringTime;

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xE02214", Offset = "0xE02214", VA = "0xE02214")]
	private void SetDeffaultTime(LevelLoader.LevelRegion currentRegion)
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xE023BC", Offset = "0xE023BC", VA = "0xE023BC", Slot = "4")]
	public override void Execute(CompleteGameAction onComplete)
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xE02624", Offset = "0xE02624", VA = "0xE02624")]
	public TimeChecker()
	{
	}
}
[Token(Token = "0x20002A2")]
public class ButtonTest : MonoBehaviour
{
	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xE93DB4", Offset = "0xE93DB4", VA = "0xE93DB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xE93DB8", Offset = "0xE93DB8", VA = "0xE93DB8")]
	public void TriggerLeft()
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xE93E24", Offset = "0xE93E24", VA = "0xE93E24")]
	public void TriggerRight()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xE93E90", Offset = "0xE93E90", VA = "0xE93E90")]
	public void GripLeft()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xE93EFC", Offset = "0xE93EFC", VA = "0xE93EFC")]
	public void GripRight()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xE93F68", Offset = "0xE93F68", VA = "0xE93F68")]
	public ButtonTest()
	{
	}
}
[Token(Token = "0x20002A3")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAFA274", Offset = "0xAFA274")]
public class CellVisualizerData : SerializedScriptableObject
{
	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Dictionary<CellType, CellVisualizer> VisualizerByCellType;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Dictionary<PluginType, CellVisualizer> VisualizerByPluginType;

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x1F25174", Offset = "0x1F25174", VA = "0x1F25174")]
	public CellVisualizerData GetInstance(Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x1F255C4", Offset = "0x1F255C4", VA = "0x1F255C4")]
	public CellVisualizer GetVisualizer(CellType cellType)
	{
		return null;
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x1F2563C", Offset = "0x1F2563C", VA = "0x1F2563C")]
	public CellVisualizer GetVisualizer(PluginType pluginType)
	{
		return null;
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x1F256B4", Offset = "0x1F256B4", VA = "0x1F256B4")]
	public CellVisualizerData()
	{
	}
}
[Token(Token = "0x20002A4")]
public static class DevelopTestHelper
{
	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x1EFCA24", Offset = "0x1EFCA24", VA = "0x1EFCA24")]
	public static void PrintCurrentThread([Optional] string devMsg)
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x1EFCB6C", Offset = "0x1EFCB6C", VA = "0x1EFCB6C")]
	public static void PrintErrorMessage(object classInstance, string errorMsg, [Optional] GameObject erroredGameObject)
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x1EFCDE8", Offset = "0x1EFCDE8", VA = "0x1EFCDE8")]
	public static void PrintErrorMessage(string errorMsg, [Optional] GameObject erroredGameObject)
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x1EFCF04", Offset = "0x1EFCF04", VA = "0x1EFCF04")]
	public static void PrintWarningMessage(Type classType, string warningMsg, [Optional] GameObject erroredGameObject)
	{
	}

	[MethodImpl(8)]
	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x1EFD174", Offset = "0x1EFD174", VA = "0x1EFD174")]
	public static string GetCurrentMethodName()
	{
		return null;
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x1EFD204", Offset = "0x1EFD204", VA = "0x1EFD204")]
	public static void DrawTmpLineRenderer(Vector3 start, Vector3 end, Color color, float duration, float width = 0.1f)
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x1EFD208", Offset = "0x1EFD208", VA = "0x1EFD208")]
	public static LineRenderer GetDrawLineRenderer(Vector3 start, Vector3 end, Color color, float width = 0.1f)
	{
		return null;
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x1EFD210", Offset = "0x1EFD210", VA = "0x1EFD210")]
	public static void DrawTmpPrimitiveSphere(Vector3 pos, float radius, float duration, Color color, bool useColor = true, bool isColliderActive = false)
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x1EFD214", Offset = "0x1EFD214", VA = "0x1EFD214")]
	public static GameObject GetDrawPrimitiveSphere(Vector3 pos, float radius, Color color, bool useColor = true, bool isColliderActive = false)
	{
		return null;
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x1EFD21C", Offset = "0x1EFD21C", VA = "0x1EFD21C")]
	public static void DrawTmpPrimitiveCube(Vector3 pos, Vector3 size, float duration, Color color, bool useColor = true, bool isColliderActive = false)
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x1EFD220", Offset = "0x1EFD220", VA = "0x1EFD220")]
	public static GameObject GetDrawPrimitiveCube(Vector3 pos, Vector3 size, Color color, bool useColor = true, bool isColliderActive = false)
	{
		return null;
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x1EFD228", Offset = "0x1EFD228", VA = "0x1EFD228")]
	public static void DrawTmpPrimitiveCapsule(Vector3 pos, float height, float radius, float duration, Color color, bool useColor = true, bool isColliderActive = false)
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x1EFD22C", Offset = "0x1EFD22C", VA = "0x1EFD22C")]
	public static void VisualizeColliderBounds(Collider collided, float duration, Color color)
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x1EFCAFC", Offset = "0x1EFCAFC", VA = "0x1EFCAFC")]
	private static string CheckEntry(string checkString)
	{
		return null;
	}
}
[Token(Token = "0x20002A5")]
public static class ListExtension
{
	[Token(Token = "0x6000F9A")]
	public static void Shuffle<T>(this IList<T> ts)
	{
	}
}
[Token(Token = "0x20002A6")]
public class PrefabDocumentation : MonoBehaviour
{
	[Token(Token = "0x4000D70")]
	private const string WARNING_TEXT = "Hello! Add link from TimeText(TimeChecker) on Intro and Outro Level action. Add link from EndPortalAction(PortalEffectEndLevelGameAction) on Outro Level action. Calibrate level complete text, time text and stars for the current level and save this Prefab like variant of base class.";

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Warning;

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0xD44240", Offset = "0xD44240", VA = "0xD44240")]
	public PrefabDocumentation()
	{
	}
}
[Token(Token = "0x20002A7")]
public class SimpleFloating : MonoBehaviour
{
	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCD4C", Offset = "0xAFCD4C")]
	public float FloatingOffset;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCD68", Offset = "0xAFCD68")]
	public float FloatingCycle;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float FloatingRandomStartDelay;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool AutoStart;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Tween _floatingTween;

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0xD50274", Offset = "0xD50274", VA = "0xD50274")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xD502AC", Offset = "0xD502AC", VA = "0xD502AC")]
	private void CreateFloatingTween()
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xD503EC", Offset = "0xD503EC", VA = "0xD503EC")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xD5039C", Offset = "0xD5039C", VA = "0xD5039C")]
	public void Play()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xD5043C", Offset = "0xD5043C", VA = "0xD5043C")]
	public SimpleFloating()
	{
	}
}
[Token(Token = "0x20002A8")]
public class TestGetChildCount : MonoBehaviour
{
	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> TestChildCount;

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xE008FC", Offset = "0xE008FC", VA = "0xE008FC")]
	private void PrintChildCount()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xE00B48", Offset = "0xE00B48", VA = "0xE00B48")]
	public TestGetChildCount()
	{
	}
}
[Token(Token = "0x20002A9")]
public class TestGetShadersInScene : SerializedMonoBehaviour
{
	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xE00B50", Offset = "0xE00B50", VA = "0xE00B50")]
	public TestGetShadersInScene()
	{
	}
}
[Token(Token = "0x20002AA")]
[ExecuteInEditMode]
[ImageEffectAllowedInSceneView]
public class TestRenderImage : MonoBehaviour
{
	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly int BLOOM_SOURCE_TEX_PROP_ID;

	[Token(Token = "0x4000D79")]
	private const int MAX_ITER = 16;

	[Token(Token = "0x4000D7A")]
	private const int BoxDownPrefilterPass = 0;

	[Token(Token = "0x4000D7B")]
	private const int BoxDownPass = 1;

	[Token(Token = "0x4000D7C")]
	private const int BoxUpPass = 2;

	[Token(Token = "0x4000D7D")]
	private const int ApplyBloomPass = 3;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool UseBloom;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCD88", Offset = "0xAFCD88")]
	public int DownSampleFactor;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCDA4", Offset = "0xAFCDA4")]
	public int DownSampleIterations;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderTexture[] Textures;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material BloomMat;

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xE00FF0", Offset = "0xE00FF0", VA = "0xE00FF0")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xE01090", Offset = "0xE01090", VA = "0xE01090")]
	private void ApplyBloomEffect(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xE01154", Offset = "0xE01154", VA = "0xE01154")]
	private RenderTexture DoBloom(RenderTexture source)
	{
		return null;
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xE01430", Offset = "0xE01430", VA = "0xE01430")]
	public static RenderTexture GetTemporaryTexture(int width, int height, int depthBuffer, RenderTextureFormat format)
	{
		return null;
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xE014E0", Offset = "0xE014E0", VA = "0xE014E0")]
	public TestRenderImage()
	{
	}
}
[Token(Token = "0x20002AB")]
public class DarkEnergyEffectController : MonoBehaviour
{
	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Gradient RegularEffectGradient;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem RegularEffect;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float DefaultCorePulseTime;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer CoreEffectSimplified;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float CoreEmissionIntensity;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _currentIntensity;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Gradient _regularEffectGradient;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _regularEffectStartSize;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _regularEffectStartLifetime;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _regularEffectStartEmissionRateOverTime;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Tween _coreEffectTween;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color _baseCoreColor;

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x1EF6108", Offset = "0x1EF6108", VA = "0x1EF6108")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x1EF6238", Offset = "0x1EF6238", VA = "0x1EF6238")]
	private void RegularEffectIntensity()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x1EF63BC", Offset = "0x1EF63BC", VA = "0x1EF63BC")]
	private void CreateCorePulseTween()
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x1EF6504", Offset = "0x1EF6504", VA = "0x1EF6504")]
	public void SetIntensity(float intensity)
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0x1EF658C", Offset = "0x1EF658C", VA = "0x1EF658C")]
	public DarkEnergyEffectController()
	{
	}
}
[Token(Token = "0x20002AC")]
public class EventableRaycastable : Raycastable
{
	[Token(Token = "0x20003F4")]
	public delegate void RaycastableEvent();

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RaycastableEvent OnInteractionStarted;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RaycastableEvent OnInteractionEnded;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RaycastableEvent OnHover;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RaycastableEvent OnUnhover;

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0x1F01294", Offset = "0x1F01294", VA = "0x1F01294", Slot = "13")]
	public override void OnInteractionStart(Wand wand)
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x1F014B0", Offset = "0x1F014B0", VA = "0x1F014B0", Slot = "15")]
	public override void OnInteractionEnd(Wand wand)
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x1F014C0", Offset = "0x1F014C0", VA = "0x1F014C0", Slot = "10")]
	public override void OnFocusStart(Wand wand)
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0x1F014D0", Offset = "0x1F014D0", VA = "0x1F014D0", Slot = "12")]
	public override void OnFocusEnd(Wand wand)
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0x1F014E0", Offset = "0x1F014E0", VA = "0x1F014E0")]
	public EventableRaycastable()
	{
	}
}
[Token(Token = "0x20002AD")]
public interface IRaycastable
{
	[Token(Token = "0x6000FB3")]
	void OnFocusStart(Wand wand);

	[Token(Token = "0x6000FB4")]
	void OnFocusStay(Wand wand);

	[Token(Token = "0x6000FB5")]
	void OnFocusEnd(Wand wand);

	[Token(Token = "0x6000FB6")]
	void OnInteractionStart(Wand wand);

	[Token(Token = "0x6000FB7")]
	void OnInteractionStay(Wand wand);

	[Token(Token = "0x6000FB8")]
	void OnInteractionEnd(Wand wand);
}
[Token(Token = "0x20002AE")]
public class MelodyBell : Raycastable
{
	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int KeyCode;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer Renderer;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource BellSound;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _defaultLocalPosition;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _defaultScale;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color _defaultColor;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _emissionId;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _isActivated;

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xE0C960", Offset = "0xE0C960", VA = "0xE0C960", Slot = "16")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xE0C9F0", Offset = "0xE0C9F0", VA = "0xE0C9F0", Slot = "10")]
	public override void OnFocusStart(Wand wand)
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xE0CA24", Offset = "0xE0CA24", VA = "0xE0CA24")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xE0CAAC", Offset = "0xE0CAAC", VA = "0xE0CAAC")]
	public void Show(float time)
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xE0CB20", Offset = "0xE0CB20", VA = "0xE0CB20")]
	public void Hide(float time, float delay, float flyDistance)
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xE0CCDC", Offset = "0xE0CCDC", VA = "0xE0CCDC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xE0CD28", Offset = "0xE0CD28", VA = "0xE0CD28")]
	public MelodyBell()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xE0CD88", Offset = "0xE0CD88", VA = "0xE0CD88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00354", Offset = "0xB00354")]
	private void <Hide>b__12_0()
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xE0CDC0", Offset = "0xE0CDC0", VA = "0xE0CDC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00364", Offset = "0xB00364")]
	private void <Hide>b__12_1()
	{
	}
}
[Token(Token = "0x20002AF")]
public class MouseWand : Wand
{
	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Camera _camera;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool TouchEnabled;

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xE0F408", Offset = "0xE0F408", VA = "0xE0F408")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xE0F4FC", Offset = "0xE0F4FC", VA = "0xE0F4FC", Slot = "4")]
	protected override bool PhysicRaycast(LayerMask layer, out RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xE0F67C", Offset = "0xE0F67C", VA = "0xE0F67C", Slot = "5")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xE0F6F0", Offset = "0xE0F6F0", VA = "0xE0F6F0")]
	public MouseWand()
	{
	}
}
[Token(Token = "0x20002B0")]
public class Raycastable : MonoBehaviour, IRaycastable
{
	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider RaycastableCollider;

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xD44FC8", Offset = "0xD44FC8", VA = "0xD44FC8", Slot = "10")]
	public virtual void OnFocusStart(Wand wand)
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xD44FCC", Offset = "0xD44FCC", VA = "0xD44FCC", Slot = "11")]
	public virtual void OnFocusStay(Wand wand)
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xD44FD0", Offset = "0xD44FD0", VA = "0xD44FD0", Slot = "12")]
	public virtual void OnFocusEnd(Wand wand)
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xD44FD4", Offset = "0xD44FD4", VA = "0xD44FD4", Slot = "13")]
	public virtual void OnInteractionStart(Wand wand)
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xD44FD8", Offset = "0xD44FD8", VA = "0xD44FD8", Slot = "14")]
	public virtual void OnInteractionStay(Wand wand)
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xD44FDC", Offset = "0xD44FDC", VA = "0xD44FDC", Slot = "15")]
	public virtual void OnInteractionEnd(Wand wand)
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xD44FE0", Offset = "0xD44FE0", VA = "0xD44FE0", Slot = "16")]
	protected virtual void OnAwake()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xD44FE4", Offset = "0xD44FE4", VA = "0xD44FE4", Slot = "17")]
	protected virtual void DoOnDisable()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xD44FE8", Offset = "0xD44FE8", VA = "0xD44FE8", Slot = "18")]
	protected virtual void DoOnEnable()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xD44FEC", Offset = "0xD44FEC", VA = "0xD44FEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xD45168", Offset = "0xD45168", VA = "0xD45168")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xD45320", Offset = "0xD45320", VA = "0xD45320")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xD45330", Offset = "0xD45330", VA = "0xD45330")]
	public Raycastable()
	{
	}
}
[Token(Token = "0x20002B1")]
public static class RaycastableRegister
{
	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<int, IRaycastable> _IRaycastableColliders;

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xD451E8", Offset = "0xD451E8", VA = "0xD451E8")]
	public static void RegisterCollider(Collider collider, IRaycastable raycastable)
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xD45454", Offset = "0xD45454", VA = "0xD45454")]
	public static IRaycastable GetRaycastableByCollider(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xD45068", Offset = "0xD45068", VA = "0xD45068")]
	public static void UnRegisterCollider(Collider collider, IRaycastable raycastable)
	{
	}
}
[Token(Token = "0x20002B2")]
public class Wand : MonoBehaviour
{
	[Token(Token = "0x20003F5")]
	public delegate void WandReleaseCallback(Cell cell);

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask CellLayer;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask FieldLayer;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask RaycastableLayer;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WandEffect Effect;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform TargetTransform;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InputReader.HandEnum Hand;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WandMechanic Mechanic;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float RaycastMaxDistance;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Vector3 _hitGlobalPosition;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _field;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool _raycastable;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Cell _activeCell;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _cellTaken;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private IRaycastable _activeRaycastable;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _raycastableTaken;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform Start;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform End;

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xE07588", Offset = "0xE07588", VA = "0xE07588")]
	public void ReleaseCell(Cell cell)
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xE075D0", Offset = "0xE075D0", VA = "0xE075D0", Slot = "4")]
	protected virtual bool PhysicRaycast(LayerMask layer, out RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xE0769C", Offset = "0xE0769C", VA = "0xE0769C")]
	protected Cell CellRaycast(RaycastHit hit)
	{
		return null;
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xE077EC", Offset = "0xE077EC", VA = "0xE077EC")]
	protected bool RayCastField(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xE07988", Offset = "0xE07988", VA = "0xE07988")]
	private bool CellSearch(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xE07B54", Offset = "0xE07B54", VA = "0xE07B54")]
	private void FocusOnCell(Cell cell)
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xE07B14", Offset = "0xE07B14", VA = "0xE07B14")]
	private void UnFocusCell()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xE07C08", Offset = "0xE07C08", VA = "0xE07C08")]
	private void RaycastableSearch(RaycastHit hit)
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xE07D80", Offset = "0xE07D80", VA = "0xE07D80")]
	private void SetRaycastable(IRaycastable raycastable)
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xE07C50", Offset = "0xE07C50", VA = "0xE07C50")]
	private IRaycastable RaycastableRaycast(RaycastHit hit)
	{
		return null;
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xE08030", Offset = "0xE08030", VA = "0xE08030")]
	private bool Raycast(LayerMask layerMask, out RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xE08150", Offset = "0xE08150", VA = "0xE08150")]
	protected void OnButtonPressEvent(InputReader.HandEnum hand)
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xE08444", Offset = "0xE08444", VA = "0xE08444")]
	protected void OnButtonReleaseEvent(InputReader.HandEnum hand)
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xE086EC", Offset = "0xE086EC", VA = "0xE086EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xE08810", Offset = "0xE08810", VA = "0xE08810")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xE08934", Offset = "0xE08934", VA = "0xE08934")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xE08940", Offset = "0xE08940", VA = "0xE08940", Slot = "5")]
	protected virtual void OnUpdate()
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xE08BBC", Offset = "0xE08BBC", VA = "0xE08BBC")]
	private void Unfocus()
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xE08C5C", Offset = "0xE08C5C", VA = "0xE08C5C")]
	public Wand()
	{
	}
}
[Token(Token = "0x20002B3")]
public class WandEffect : MonoBehaviour
{
	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer Line;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform StartPoint;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform EndPoint;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem Effect;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem SecondEffect;

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xE09040", Offset = "0xE09040", VA = "0xE09040")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xE080B4", Offset = "0xE080B4", VA = "0xE080B4")]
	public void SetTargetPoint(Vector3 point)
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xE0907C", Offset = "0xE0907C", VA = "0xE0907C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xE090E8", Offset = "0xE090E8", VA = "0xE090E8")]
	public WandEffect()
	{
	}
}
[Token(Token = "0x20002B4")]
public class WandMechanic : MonoBehaviour
{
	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Cell _activeCell;

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xE090F0", Offset = "0xE090F0", VA = "0xE090F0", Slot = "4")]
	public virtual bool OnStartFocus(Wand wand, Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xE09118", Offset = "0xE09118", VA = "0xE09118", Slot = "5")]
	public virtual void OnEndFocus(Wand wand, Cell cell)
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0xE09134", Offset = "0xE09134", VA = "0xE09134", Slot = "6")]
	public virtual bool OnStartInteraction(Wand wand, Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xE091D0", Offset = "0xE091D0", VA = "0xE091D0", Slot = "7")]
	public virtual void OnEndInteraction(Wand wand, Cell cell)
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0xE091EC", Offset = "0xE091EC", VA = "0xE091EC", Slot = "8")]
	public virtual void OnFinalize(Wand wand)
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0xE091F0", Offset = "0xE091F0", VA = "0xE091F0", Slot = "9")]
	public virtual void OnInit(Wand wand)
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0xE091F4", Offset = "0xE091F4", VA = "0xE091F4", Slot = "10")]
	public virtual void OnUpdate(Wand wand)
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0xE091F8", Offset = "0xE091F8", VA = "0xE091F8")]
	public WandMechanic()
	{
	}
}
[Token(Token = "0x20002B5")]
public class WandRemoveMechanic : WandMechanic
{
	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0xE09200", Offset = "0xE09200", VA = "0xE09200", Slot = "5")]
	public override void OnEndFocus(Wand wand, Cell cell)
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0xE0921C", Offset = "0xE0921C", VA = "0xE0921C", Slot = "7")]
	public override void OnEndInteraction(Wand wand, Cell cell)
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0xE09238", Offset = "0xE09238", VA = "0xE09238", Slot = "8")]
	public override void OnFinalize(Wand wand)
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xE0923C", Offset = "0xE0923C", VA = "0xE0923C", Slot = "9")]
	public override void OnInit(Wand wand)
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xE09240", Offset = "0xE09240", VA = "0xE09240", Slot = "4")]
	public override bool OnStartFocus(Wand wand, Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xE09268", Offset = "0xE09268", VA = "0xE09268", Slot = "6")]
	public override bool OnStartInteraction(Wand wand, Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xE09280", Offset = "0xE09280", VA = "0xE09280")]
	public WandRemoveMechanic()
	{
	}
}
[Token(Token = "0x20002B6")]
public class WandSwapMechanic : WandMechanic
{
	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xE09288", Offset = "0xE09288", VA = "0xE09288", Slot = "5")]
	public override void OnEndFocus(Wand wand, Cell cell)
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xE092A4", Offset = "0xE092A4", VA = "0xE092A4", Slot = "7")]
	public override void OnEndInteraction(Wand wand, Cell cell)
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xE092DC", Offset = "0xE092DC", VA = "0xE092DC", Slot = "8")]
	public override void OnFinalize(Wand wand)
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xE092E0", Offset = "0xE092E0", VA = "0xE092E0", Slot = "9")]
	public override void OnInit(Wand wand)
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xE092E4", Offset = "0xE092E4", VA = "0xE092E4", Slot = "4")]
	public override bool OnStartFocus(Wand wand, Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xE0930C", Offset = "0xE0930C", VA = "0xE0930C", Slot = "6")]
	public override bool OnStartInteraction(Wand wand, Cell cell)
	{
		return default(bool);
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xE09324", Offset = "0xE09324", VA = "0xE09324")]
	public WandSwapMechanic()
	{
	}
}
namespace CustomUtilities
{
	[Token(Token = "0x20002B7")]
	public static class CustomUtilityFuntions
	{
		[Token(Token = "0x6001004")]
		[Address(RVA = "0x1F0984C", Offset = "0x1F0984C", VA = "0x1F0984C")]
		public static float RemapFloat(float value, float fromMin, float fromMax, float toMin, float toMax)
		{
			return default(float);
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x1F09868", Offset = "0x1F09868", VA = "0x1F09868")]
		public static float RescaleFloat(float value, float fromMin, float fromMax)
		{
			return default(float);
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x1F098FC", Offset = "0x1F098FC", VA = "0x1F098FC")]
		public static float RescaleFloat01(float value, float maxLimit)
		{
			return default(float);
		}
	}
}
namespace Utility
{
	[Token(Token = "0x20002B8")]
	public class EventTimer
	{
		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float FixedTimePoint;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool _scaled;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float EventTime;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool Started;

		[Token(Token = "0x6001007")]
		[Address(RVA = "0xDFBA98", Offset = "0xDFBA98", VA = "0xDFBA98")]
		public EventTimer(bool scaled = true)
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0xE06638", Offset = "0xE06638", VA = "0xE06638")]
		public EventTimer(float eventTime, bool scaled = true)
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0xDFB8D4", Offset = "0xDFB8D4", VA = "0xDFB8D4")]
		public void Start()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0xDFACD0", Offset = "0xDFACD0", VA = "0xDFACD0")]
		public void Start(float newEventTime)
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0xE06678", Offset = "0xE06678", VA = "0xE06678")]
		public void Disable()
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xE06680", Offset = "0xE06680", VA = "0xE06680")]
		public float GetDeltaTimeFromStart(float timePoint)
		{
			return default(float);
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xE0668C", Offset = "0xE0668C", VA = "0xE0668C")]
		public float GetDeltaTimeFromStart()
		{
			return default(float);
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xE066B8", Offset = "0xE066B8", VA = "0xE066B8")]
		public bool IsTimeElapsed(float timePeriod)
		{
			return default(bool);
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xE066F8", Offset = "0xE066F8", VA = "0xE066F8")]
		public float GetDeltaToPoint(float prevTime, float checkPoint)
		{
			return default(float);
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xE06718", Offset = "0xE06718", VA = "0xE06718")]
		public float GetDeltaPercentageToPoint(float prevTime, float checkPoint)
		{
			return default(float);
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xE0673C", Offset = "0xE0673C", VA = "0xE0673C")]
		public float GetTimeLeft()
		{
			return default(float);
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xE067F4", Offset = "0xE067F4", VA = "0xE067F4")]
		public float GetTimePercentElapsed()
		{
			return default(float);
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xDFAC70", Offset = "0xDFAC70", VA = "0xDFAC70")]
		public bool IsComplete()
		{
			return default(bool);
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xE067A4", Offset = "0xE067A4", VA = "0xE067A4")]
		private float ElapsedPercentage()
		{
			return default(float);
		}
	}
	[Token(Token = "0x20002B9")]
	public static class Geometry
	{
		[Token(Token = "0x6001015")]
		[Address(RVA = "0xE068A0", Offset = "0xE068A0", VA = "0xE068A0")]
		public static float PointOnLineParameter(Vector3 point, Vector3 linePoint, Vector3 lineDirection)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20002BA")]
	public static class SettingsFileUtility
	{
		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string SettingsDirectory;

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xE069F0", Offset = "0xE069F0", VA = "0xE069F0")]
		static SettingsFileUtility()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xE06A5C", Offset = "0xE06A5C", VA = "0xE06A5C")]
		public static bool ConfigExists(string fileName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xE06AF0", Offset = "0xE06AF0", VA = "0xE06AF0")]
		public static string LoadFromFile(string fileName)
		{
			return null;
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xE06BD8", Offset = "0xE06BD8", VA = "0xE06BD8")]
		public static void SaveToFile(string fileName, string text)
		{
		}

		[Token(Token = "0x600101A")]
		public static T LoadFromFile<T>(string fileName)
		{
			return (T)null;
		}

		[Token(Token = "0x600101B")]
		public static void SaveToFile<T>(string fileName, T data)
		{
		}
	}
}
namespace UnityEngine.Experimental.Rendering
{
	[Token(Token = "0x20002BB")]
	public class SRPBatcherProfiler : MonoBehaviour
	{
		[Token(Token = "0x20003F6")]
		internal class RecorderEntry
		{
			[Token(Token = "0x4001349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x400134A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string oldName;

			[Token(Token = "0x400134B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int callCount;

			[Token(Token = "0x400134C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float accTime;

			[Token(Token = "0x400134D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Recorder recorder;

			[Token(Token = "0x60015EF")]
			[Address(RVA = "0xE05BA8", Offset = "0xE05BA8", VA = "0xE05BA8")]
			public RecorderEntry()
			{
			}
		}

		[Token(Token = "0x20003F7")]
		private enum SRPBMarkers
		{
			[Token(Token = "0x400134F")]
			kStdRenderDraw,
			[Token(Token = "0x4001350")]
			kStdShadowDraw,
			[Token(Token = "0x4001351")]
			kSRPBRenderDraw,
			[Token(Token = "0x4001352")]
			kSRPBShadowDraw,
			[Token(Token = "0x4001353")]
			kRenderThreadIdle,
			[Token(Token = "0x4001354")]
			kStdRenderApplyShader,
			[Token(Token = "0x4001355")]
			kStdShadowApplyShader,
			[Token(Token = "0x4001356")]
			kSRPBRenderApplyShader,
			[Token(Token = "0x4001357")]
			kSRPBShadowApplyShader,
			[Token(Token = "0x4001358")]
			kPrepareBatchRendererGroupNodes
		}

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_Enable;

		[Token(Token = "0x4000DBC")]
		private const float kAverageStatDuration = 1f;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_frameCount;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_AccDeltaTime;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_statsLabel;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GUIStyle m_style;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_oldBatcherEnable;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RecorderEntry[] recordersList;

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xE04C30", Offset = "0xE04C30", VA = "0xE04C30")]
		private void Awake()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xE04E70", Offset = "0xE04E70", VA = "0xE04E70")]
		private void RazCounters()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xE04E1C", Offset = "0xE04E1C", VA = "0xE04E1C")]
		private void ResetStats()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xE04EF0", Offset = "0xE04EF0", VA = "0xE04EF0")]
		private void ToggleStats()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xE04F00", Offset = "0xE04F00", VA = "0xE04F00")]
		private void Update()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xE055A0", Offset = "0xE055A0", VA = "0xE055A0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xE057F4", Offset = "0xE057F4", VA = "0xE057F4")]
		public SRPBatcherProfiler()
		{
		}
	}
}
namespace FAE
{
	[Token(Token = "0x20002BC")]
	[ExecuteInEditMode]
	public class CliffAppearance : MonoBehaviour
	{
		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader cliffShader;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader cliffCoverageShader;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material[] targetMaterials;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color objectColor;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCDBC", Offset = "0xAFCDBC")]
		public float roughness;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture detailNormalMap;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCDD4", Offset = "0xAFCDD4")]
		public float detailNormalStrength;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Texture globalColorMap;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Color globalColor;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCDEC", Offset = "0xAFCDEC")]
		public float globalTiling;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool useCoverageShader;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Texture coverageColorMap;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Texture coverageNormalMap;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCE04", Offset = "0xAFCE04")]
		public float coverageAmount;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCE1C", Offset = "0xAFCE1C")]
		public float coverageTiling;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Texture coverageMap;

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x1F4B828", Offset = "0x1F4B828", VA = "0x1F4B828")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x1F4BB84", Offset = "0x1F4BB84", VA = "0x1F4BB84")]
		private void GetSettings()
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x1F4B91C", Offset = "0x1F4B91C", VA = "0x1F4B91C")]
		public void Apply()
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x1F4BDE4", Offset = "0x1F4BDE4", VA = "0x1F4BDE4")]
		public CliffAppearance()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class FoliageBender : MonoBehaviour
	{
		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCE34", Offset = "0xAFCE34")]
		public float strength;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCE50", Offset = "0xAFCE50")]
		public float radius;

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x1F4C3B4", Offset = "0x1F4C3B4", VA = "0x1F4C3B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x1F4C4A0", Offset = "0x1F4C4A0", VA = "0x1F4C4A0")]
		public FoliageBender()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class PigmentMapGenerator : MonoBehaviour
	{
		[Token(Token = "0x20003F8")]
		public enum TextureRotation
		{
			[Token(Token = "0x400135A")]
			None,
			[Token(Token = "0x400135B")]
			Quarter,
			[Token(Token = "0x400135C")]
			Half,
			[Token(Token = "0x400135D")]
			ThreeQuarters
		}

		[Token(Token = "0x20003F9")]
		public enum HeightmapChannel
		{
			[Token(Token = "0x400135F")]
			None,
			[Token(Token = "0x4001360")]
			Texture1,
			[Token(Token = "0x4001361")]
			Texture2,
			[Token(Token = "0x4001362")]
			Texture3,
			[Token(Token = "0x4001363")]
			Texture4,
			[Token(Token = "0x4001364")]
			Texture5,
			[Token(Token = "0x4001365")]
			Texture6,
			[Token(Token = "0x4001366")]
			Texture7,
			[Token(Token = "0x4001367")]
			Texture8
		}

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool debug;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool performCleanup;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool manualInput;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] terrainObjects;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TerrainUVUtil util;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TerrainUVUtil.Workflow workflow;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int resIdx;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int resolution;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 targetSize;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 targetOriginPosition;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 targetCenterPosition;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public Vector4 terrainScaleOffset;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Terrain[] terrains;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MeshRenderer[] meshes;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material material;

		[Token(Token = "0x4000DE4")]
		private const int HEIGHTOFFSET = 1000;

		[Token(Token = "0x4000DE5")]
		private const int CLIP_PADDING = 100;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public LayerMask layerMask;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float renderLightBrightness;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool useAlternativeRenderer;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Camera renderCam;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Light renderLight;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Light[] lights;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Texture2D inputHeightmap;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Texture2D customPigmentMap;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool useCustomPigmentMap;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool flipVertically;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		public bool flipHortizontally;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public TextureRotation textureRotation;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Texture2D pigmentMap;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool isMultiTerrain;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string savePath;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float originalTargetYPos;

		[NonSerialized]
		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public bool showArea;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		public bool hasTerrainData;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
		public bool isMegaSplat;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private AmbientMode ambientMode;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Color ambientColor;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private bool enableFog;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Material skyboxMat;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public HeightmapChannel heightmapChannel;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public string HeightmapChannelName;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public string[] terrainTextureNames;

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x1F4C4B4", Offset = "0x1F4C4B4", VA = "0x1F4C4B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x1F4C4BC", Offset = "0x1F4C4BC", VA = "0x1F4C4BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x1F4C50C", Offset = "0x1F4C50C", VA = "0x1F4C50C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x1F4C4B8", Offset = "0x1F4C4B8", VA = "0x1F4C4B8")]
		public void Init()
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x1F4C720", Offset = "0x1F4C720", VA = "0x1F4C720")]
		private void CheckMegaSplat()
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x1F4C728", Offset = "0x1F4C728", VA = "0x1F4C728")]
		public void GetChildTerrainObjects(Transform parent)
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x1F4C94C", Offset = "0x1F4C94C", VA = "0x1F4C94C")]
		public void GetTargetInfo()
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x1F4C608", Offset = "0x1F4C608", VA = "0x1F4C608")]
		public void SetPigmentMap()
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x1F4CC88", Offset = "0x1F4CC88", VA = "0x1F4CC88")]
		public static int IndexToResolution(int i)
		{
			return default(int);
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x1F4CCA8", Offset = "0x1F4CCA8", VA = "0x1F4CCA8")]
		public PigmentMapGenerator()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class TerrainUVUtil : ScriptableObject
	{
		[Token(Token = "0x20003FA")]
		public enum Workflow
		{
			[Token(Token = "0x4001369")]
			None,
			[Token(Token = "0x400136A")]
			Terrain,
			[Token(Token = "0x400136B")]
			Mesh
		}

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly bool debug;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Workflow workflow;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Bounds meshBounds;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 pivotPos;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float height;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float bottom;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 size;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 centerPostion;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 originPosition;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Terrain[] terrains;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public MeshRenderer[] meshes;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector4 terrainScaleOffset;

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x1F4CADC", Offset = "0x1F4CADC", VA = "0x1F4CADC")]
		public void GetObjectPlanarUV(GameObject[] gameObjects)
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x1F4D21C", Offset = "0x1F4D21C", VA = "0x1F4D21C")]
		private void GetMeshInfo(GameObject[] meshObjects)
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x1F4CCF8", Offset = "0x1F4CCF8", VA = "0x1F4CCF8")]
		private void GetTerrainInfo(GameObject[] terrainObjects)
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x1F4D6E8", Offset = "0x1F4D6E8", VA = "0x1F4D6E8")]
		private bool IsApproximatelyEqual(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x1F4D768", Offset = "0x1F4D768", VA = "0x1F4D768")]
		public TerrainUVUtil()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class WindController : MonoBehaviour
	{
		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D windVectors;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool visualizeVectors;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool _visualizeVectors;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool listenToWindZone;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WindZone windZone;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCE78", Offset = "0xAFCE78")]
		public float windSpeed;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCE90", Offset = "0xAFCE90")]
		public float windStrength;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCEA8", Offset = "0xAFCEA8")]
		public float windAmplitude;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCEC0", Offset = "0xAFCEC0")]
		public float trunkWindSpeed;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCEDC", Offset = "0xAFCEDC")]
		public float trunkWindWeight;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFCEF4", Offset = "0xAFCEF4")]
		public float trunkWindSwinging;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float _windStrength;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float _windAmplitude;

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x1F4D774", Offset = "0x1F4D774", VA = "0x1F4D774")]
		public void SetStrength(float value)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x1F4D7D0", Offset = "0x1F4D7D0", VA = "0x1F4D7D0")]
		public void SetTrunkWeight(float value)
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x1F4D82C", Offset = "0x1F4D82C", VA = "0x1F4D82C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x1F4DAC4", Offset = "0x1F4DAC4", VA = "0x1F4DAC4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x1F4DBC8", Offset = "0x1F4DBC8", VA = "0x1F4DBC8")]
		private void Update()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x1F4DD90", Offset = "0x1F4DD90", VA = "0x1F4DD90")]
		public void Apply()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x1F4D89C", Offset = "0x1F4D89C", VA = "0x1F4D89C")]
		private void SetShaderParameters()
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x1F4DD94", Offset = "0x1F4DD94", VA = "0x1F4DD94")]
		public static void VisualizeVectors(bool state)
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x1F4DE0C", Offset = "0x1F4DE0C", VA = "0x1F4DE0C")]
		public WindController()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class FAE_DemoOrbitCamera : MonoBehaviour
	{
		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform cam;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 offset;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rotationSpeed;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float cameraRotSide;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float cameraRotUp;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float cameraRotSideCur;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float cameraRotUpCur;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float distance;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float horizontalAxis;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float verticalAxis;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool m_inputCaptured;

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x1F4BE90", Offset = "0x1F4BE90", VA = "0x1F4BE90")]
		private void Start()
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x1F4BF34", Offset = "0x1F4BF34", VA = "0x1F4BF34")]
		private void CaptureInput()
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x1F4BF70", Offset = "0x1F4BF70", VA = "0x1F4BF70")]
		private void ReleaseInput()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x1F4BFA8", Offset = "0x1F4BFA8", VA = "0x1F4BFA8")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x1F4BFEC", Offset = "0x1F4BFEC", VA = "0x1F4BFEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x1F4C334", Offset = "0x1F4C334", VA = "0x1F4C334")]
		public FAE_DemoOrbitCamera()
		{
		}
	}
}
namespace commanastationwww.eternaltemple
{
	[Token(Token = "0x20002C2")]
	public class DisableMeshAtRuntime : MonoBehaviour
	{
		[Token(Token = "0x6001048")]
		[Address(RVA = "0x1CB7534", Offset = "0x1CB7534", VA = "0x1CB7534")]
		private void Start()
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x1CB75E4", Offset = "0x1CB75E4", VA = "0x1CB75E4")]
		public DisableMeshAtRuntime()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class Door_Controller : MonoBehaviour
	{
		[Token(Token = "0x20003FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFABA8", Offset = "0xAFABA8")]
		private sealed class <openInterpolation>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400136C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400136D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400136E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Door_Controller <>4__this;

			[Token(Token = "0x400136F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform[] <>7__wrap1;

			[Token(Token = "0x4001370")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x170000CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015F3")]
				[Address(RVA = "0x1CB7C94", Offset = "0x1CB7C94", VA = "0x1CB7C94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015F5")]
				[Address(RVA = "0x1CB7CFC", Offset = "0x1CB7CFC", VA = "0x1CB7CFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015F0")]
			[Address(RVA = "0x1CB7800", Offset = "0x1CB7800", VA = "0x1CB7800")]
			[DebuggerHidden]
			public <openInterpolation>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60015F1")]
			[Address(RVA = "0x1CB7AF0", Offset = "0x1CB7AF0", VA = "0x1CB7AF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015F2")]
			[Address(RVA = "0x1CB7AF4", Offset = "0x1CB7AF4", VA = "0x1CB7AF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015F4")]
			[Address(RVA = "0x1CB7C9C", Offset = "0x1CB7C9C", VA = "0x1CB7C9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFABB8", Offset = "0xAFABB8")]
		private sealed class <closeInterpolation>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Door_Controller <>4__this;

			[Token(Token = "0x4001374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform[] <>7__wrap1;

			[Token(Token = "0x4001375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x170000CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015F9")]
				[Address(RVA = "0x1CB7A80", Offset = "0x1CB7A80", VA = "0x1CB7A80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015FB")]
				[Address(RVA = "0x1CB7AE8", Offset = "0x1CB7AE8", VA = "0x1CB7AE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015F6")]
			[Address(RVA = "0x1CB789C", Offset = "0x1CB789C", VA = "0x1CB789C")]
			[DebuggerHidden]
			public <closeInterpolation>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60015F7")]
			[Address(RVA = "0x1CB78E4", Offset = "0x1CB78E4", VA = "0x1CB78E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015F8")]
			[Address(RVA = "0x1CB78E8", Offset = "0x1CB78E8", VA = "0x1CB78E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015FA")]
			[Address(RVA = "0x1CB7A88", Offset = "0x1CB7A88", VA = "0x1CB7A88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool stayOpen;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool locked;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float openingSpeed;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform[] allTransform;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform[] childrenTransform;

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x1CB75EC", Offset = "0x1CB75EC", VA = "0x1CB75EC")]
		private void Start()
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x1CB7700", Offset = "0x1CB7700", VA = "0x1CB7700")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x1CB7748", Offset = "0x1CB7748", VA = "0x1CB7748")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x1CB7790", Offset = "0x1CB7790", VA = "0x1CB7790")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB00374", Offset = "0xB00374")]
		private IEnumerator openInterpolation()
		{
			return null;
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x1CB782C", Offset = "0x1CB782C", VA = "0x1CB782C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB003D8", Offset = "0xB003D8")]
		private IEnumerator closeInterpolation()
		{
			return null;
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x1CB7704", Offset = "0x1CB7704", VA = "0x1CB7704")]
		public void Open()
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x1CB7758", Offset = "0x1CB7758", VA = "0x1CB7758")]
		public void Close()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x1CB78C8", Offset = "0x1CB78C8", VA = "0x1CB78C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x1CB78CC", Offset = "0x1CB78CC", VA = "0x1CB78CC")]
		public Door_Controller()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class FPScounter : MonoBehaviour
	{
		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float updateInterval;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float accum;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int frames;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float timeleft;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text textFpsCounter;

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x1CB7D04", Offset = "0x1CB7D04", VA = "0x1CB7D04")]
		private void Start()
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x1CB7D5C", Offset = "0x1CB7D5C", VA = "0x1CB7D5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x1CB7E68", Offset = "0x1CB7E68", VA = "0x1CB7E68")]
		public FPScounter()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class FallowPlayerCamera : MonoBehaviour
	{
		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject player;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 offset;

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x1CB7E78", Offset = "0x1CB7E78", VA = "0x1CB7E78")]
		private void Start()
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x1CB7F68", Offset = "0x1CB7F68", VA = "0x1CB7F68")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x1CB8054", Offset = "0x1CB8054", VA = "0x1CB8054")]
		public FallowPlayerCamera()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class HidablePart : MonoBehaviour
	{
		[Token(Token = "0x20003FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFABC8", Offset = "0xAFABC8")]
		private sealed class <unhideInterpolation>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HidablePart <>4__this;

			[Token(Token = "0x170000D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015FF")]
				[Address(RVA = "0x1CB84A0", Offset = "0x1CB84A0", VA = "0x1CB84A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001601")]
				[Address(RVA = "0x1CB8508", Offset = "0x1CB8508", VA = "0x1CB8508", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015FC")]
			[Address(RVA = "0x1CB8230", Offset = "0x1CB8230", VA = "0x1CB8230")]
			[DebuggerHidden]
			public <unhideInterpolation>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60015FD")]
			[Address(RVA = "0x1CB83DC", Offset = "0x1CB83DC", VA = "0x1CB83DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015FE")]
			[Address(RVA = "0x1CB83E0", Offset = "0x1CB83E0", VA = "0x1CB83E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001600")]
			[Address(RVA = "0x1CB84A8", Offset = "0x1CB84A8", VA = "0x1CB84A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFABD8", Offset = "0xAFABD8")]
		private sealed class <hideInterpolation>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400137A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400137B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HidablePart <>4__this;

			[Token(Token = "0x170000D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001605")]
				[Address(RVA = "0x1CB836C", Offset = "0x1CB836C", VA = "0x1CB836C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001607")]
				[Address(RVA = "0x1CB83D4", Offset = "0x1CB83D4", VA = "0x1CB83D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001602")]
			[Address(RVA = "0x1CB825C", Offset = "0x1CB825C", VA = "0x1CB825C")]
			[DebuggerHidden]
			public <hideInterpolation>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001603")]
			[Address(RVA = "0x1CB82A8", Offset = "0x1CB82A8", VA = "0x1CB82A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001604")]
			[Address(RVA = "0x1CB82AC", Offset = "0x1CB82AC", VA = "0x1CB82AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001606")]
			[Address(RVA = "0x1CB8374", Offset = "0x1CB8374", VA = "0x1CB8374", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material mat;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float currentAlpha;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float fadeOutSpeed;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float minAlpha;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float maxAlpha;

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x1CB805C", Offset = "0x1CB805C", VA = "0x1CB805C")]
		private void Start()
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x1CB80E0", Offset = "0x1CB80E0", VA = "0x1CB80E0")]
		public void hide()
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x1CB8188", Offset = "0x1CB8188", VA = "0x1CB8188")]
		public void unhide()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x1CB81C0", Offset = "0x1CB81C0", VA = "0x1CB81C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB0043C", Offset = "0xB0043C")]
		private IEnumerator unhideInterpolation()
		{
			return null;
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x1CB8118", Offset = "0x1CB8118", VA = "0x1CB8118")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB004A0", Offset = "0xB004A0")]
		private IEnumerator hideInterpolation()
		{
			return null;
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x1CB8288", Offset = "0x1CB8288", VA = "0x1CB8288")]
		private void Update()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x1CB828C", Offset = "0x1CB828C", VA = "0x1CB828C")]
		public HidablePart()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class HideGroup : MonoBehaviour
	{
		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool hidable;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool disableParentGeo;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int collisionEntriesCounter;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HidablePart[] hidableGroup;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem[] particlesGroup;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer rendererComponent;

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x1CB8510", Offset = "0x1CB8510", VA = "0x1CB8510")]
		private void Start()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x1CB8608", Offset = "0x1CB8608", VA = "0x1CB8608")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x1CB8730", Offset = "0x1CB8730", VA = "0x1CB8730")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x1CB8864", Offset = "0x1CB8864", VA = "0x1CB8864")]
		private void Update()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x1CB8868", Offset = "0x1CB8868", VA = "0x1CB8868")]
		public HideGroup()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class HideSelf : MonoBehaviour
	{
		[Token(Token = "0x20003FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFABE8", Offset = "0xAFABE8")]
		private sealed class <unideInterpolation>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400137C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400137D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400137E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HideSelf <>4__this;

			[Token(Token = "0x170000D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600160B")]
				[Address(RVA = "0x1CB8DE4", Offset = "0x1CB8DE4", VA = "0x1CB8DE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600160D")]
				[Address(RVA = "0x1CB8E4C", Offset = "0x1CB8E4C", VA = "0x1CB8E4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001608")]
			[Address(RVA = "0x1CB896C", Offset = "0x1CB896C", VA = "0x1CB896C")]
			[DebuggerHidden]
			public <unideInterpolation>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001609")]
			[Address(RVA = "0x1CB8D20", Offset = "0x1CB8D20", VA = "0x1CB8D20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600160A")]
			[Address(RVA = "0x1CB8D24", Offset = "0x1CB8D24", VA = "0x1CB8D24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600160C")]
			[Address(RVA = "0x1CB8DEC", Offset = "0x1CB8DEC", VA = "0x1CB8DEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFABF8", Offset = "0xAFABF8")]
		private sealed class <hideInterpolation>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400137F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HideSelf <>4__this;

			[Token(Token = "0x170000D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001611")]
				[Address(RVA = "0x1CB8CB0", Offset = "0x1CB8CB0", VA = "0x1CB8CB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001613")]
				[Address(RVA = "0x1CB8D18", Offset = "0x1CB8D18", VA = "0x1CB8D18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600160E")]
			[Address(RVA = "0x1CB8A08", Offset = "0x1CB8A08", VA = "0x1CB8A08")]
			[DebuggerHidden]
			public <hideInterpolation>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600160F")]
			[Address(RVA = "0x1CB8BEC", Offset = "0x1CB8BEC", VA = "0x1CB8BEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001610")]
			[Address(RVA = "0x1CB8BF0", Offset = "0x1CB8BF0", VA = "0x1CB8BF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001612")]
			[Address(RVA = "0x1CB8CB8", Offset = "0x1CB8CB8", VA = "0x1CB8CB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int collisionEntriesCounter;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material mat;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentAlpha;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool hidable;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float hidingSpeed;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float minAlpha;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float maxAlpha;

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x1CB8878", Offset = "0x1CB8878", VA = "0x1CB8878")]
		private void Start()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x1CB88FC", Offset = "0x1CB88FC", VA = "0x1CB88FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB00504", Offset = "0xB00504")]
		private IEnumerator unideInterpolation()
		{
			return null;
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x1CB8998", Offset = "0x1CB8998", VA = "0x1CB8998")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB00568", Offset = "0xB00568")]
		private IEnumerator hideInterpolation()
		{
			return null;
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x1CB8A34", Offset = "0x1CB8A34", VA = "0x1CB8A34")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x1CB8AFC", Offset = "0x1CB8AFC", VA = "0x1CB8AFC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x1CB8BC4", Offset = "0x1CB8BC4", VA = "0x1CB8BC4")]
		private void Update()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x1CB8BC8", Offset = "0x1CB8BC8", VA = "0x1CB8BC8")]
		public HideSelf()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class Move : MonoBehaviour
	{
		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float speed;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float gravity;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float horizontalMovement;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float verticalMovement;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CharacterController character;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 destination;

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x1CB8E54", Offset = "0x1CB8E54", VA = "0x1CB8E54")]
		private void Start()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x1CB8EAC", Offset = "0x1CB8EAC", VA = "0x1CB8EAC")]
		private void Update()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x1CB9014", Offset = "0x1CB9014", VA = "0x1CB9014")]
		public Move()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20002CA")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700002C")]
		public bool Highlight
		{
			[Token(Token = "0x600106F")]
			[Address(RVA = "0xDDC938", Offset = "0xDDC938", VA = "0xDDC938")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001070")]
			[Address(RVA = "0xDDC940", Offset = "0xDDC940", VA = "0xDDC940")]
			set
			{
			}
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xDDC94C", Offset = "0xDDC94C", VA = "0xDDC94C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xDDCB18", Offset = "0xDDCB18", VA = "0xDDCB18", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xDDCB40", Offset = "0xDDCB40", VA = "0xDDCB40", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xDDCB68", Offset = "0xDDCB68", VA = "0xDDCB68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xDDCA18", Offset = "0xDDCA18", VA = "0xDDCA18")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xDDCDBC", Offset = "0xDDCDBC", VA = "0xDDCDBC")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700002D")]
		public bool InRange
		{
			[Token(Token = "0x6001078")]
			[Address(RVA = "0xDDD524", Offset = "0xDDD524", VA = "0xDDD524")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001079")]
			[Address(RVA = "0xDDD52C", Offset = "0xDDD52C", VA = "0xDDD52C")]
			set
			{
			}
		}

		[Token(Token = "0x1700002E")]
		public bool Targeted
		{
			[Token(Token = "0x600107A")]
			[Address(RVA = "0xDDD6A8", Offset = "0xDDD6A8", VA = "0xDDD6A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600107B")]
			[Address(RVA = "0xDDD6B0", Offset = "0xDDD6B0", VA = "0xDDD6B0")]
			set
			{
			}
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xDDD6BC", Offset = "0xDDD6BC", VA = "0xDDD6BC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xDDD538", Offset = "0xDDD538", VA = "0xDDD538")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xDDD85C", Offset = "0xDDD85C", VA = "0xDDD85C")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAFA318", Offset = "0xAFA318")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700002F")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600107F")]
			[Address(RVA = "0xDDD864", Offset = "0xDDD864", VA = "0xDDD864")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001080")]
			[Address(RVA = "0xDDD86C", Offset = "0xDDD86C", VA = "0xDDD86C")]
			set
			{
			}
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xDDD888", Offset = "0xDDD888", VA = "0xDDD888", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xDDDA90", Offset = "0xDDDA90", VA = "0xDDDA90", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xDDE3AC", Offset = "0xDDE3AC", VA = "0xDDE3AC", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xDDE968", Offset = "0xDDE968", VA = "0xDDE968", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xDDED48", Offset = "0xDDED48", VA = "0xDDED48")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xDDDCDC", Offset = "0xDDDCDC", VA = "0xDDDCDC")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xDDEE24", Offset = "0xDDEE24", VA = "0xDDEE24")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xDDF260", Offset = "0xDDF260", VA = "0xDDF260", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xDDF278", Offset = "0xDDF278", VA = "0xDDF278", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xDDF280", Offset = "0xDDF280", VA = "0xDDF280")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xDE0DD0", Offset = "0xDE0DD0", VA = "0xDE0DD0")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xDE0E80", Offset = "0xDE0E80", VA = "0xDE0E80")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xDE0F2C", Offset = "0xDE0F2C", VA = "0xDE0F2C")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000401")]
		public enum CrosshairState
		{
			[Token(Token = "0x4001383")]
			Disabled,
			[Token(Token = "0x4001384")]
			Enabled,
			[Token(Token = "0x4001385")]
			Targeted
		}

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xDE0F34", Offset = "0xDE0F34", VA = "0xDE0F34")]
		private void Start()
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xDDD7C0", Offset = "0xDDD7C0", VA = "0xDDD7C0")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xDE0F9C", Offset = "0xDE0F9C", VA = "0xDE0F9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xDE0FE4", Offset = "0xDE0FE4", VA = "0xDE0FE4")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6001092")]
		[Address(RVA = "0xDE5DD0", Offset = "0xDE5DD0", VA = "0xDE5DD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xDE5E9C", Offset = "0xDE5E9C", VA = "0xDE5E9C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xDE5EA8", Offset = "0xDE5EA8", VA = "0xDE5EA8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xDE5EB4", Offset = "0xDE5EB4", VA = "0xDE5EB4")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xDDB4B0", Offset = "0xDDB4B0", VA = "0xDDB4B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xDDB508", Offset = "0xDDB508", VA = "0xDDB508")]
		private void Update()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xDDB7AC", Offset = "0xDDB7AC", VA = "0xDDB7AC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xDDB89C", Offset = "0xDDB89C", VA = "0xDDB89C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xDDB50C", Offset = "0xDDB50C", VA = "0xDDB50C")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xDDB98C", Offset = "0xDDB98C", VA = "0xDDB98C")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000402")]
		public enum ContactTest
		{
			[Token(Token = "0x4001387")]
			PerpenTest,
			[Token(Token = "0x4001388")]
			BackwardsPress
		}

		[Token(Token = "0x4000E6D")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000E6E")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFD040", Offset = "0xAFD040")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000030")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x600109C")]
			[Address(RVA = "0xDDBA24", Offset = "0xDDBA24", VA = "0xDDBA24", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000031")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x600109D")]
			[Address(RVA = "0xDDBA2C", Offset = "0xDDBA2C", VA = "0xDDBA2C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000032")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x600109E")]
			[Address(RVA = "0xDDBA38", Offset = "0xDDBA38", VA = "0xDDBA38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB005CC", Offset = "0xB005CC")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x600109F")]
			[Address(RVA = "0xDDBA40", Offset = "0xDDBA40", VA = "0xDDBA40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB005DC", Offset = "0xB005DC")]
			private set
			{
			}
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xDDBA48", Offset = "0xDDBA48", VA = "0xDDBA48", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xDDBB98", Offset = "0xDDBB98", VA = "0xDDBB98")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xDDBDA0", Offset = "0xDDBDA0", VA = "0xDDBDA0", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xDDC2F8", Offset = "0xDDC2F8", VA = "0xDDC2F8")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xDDC448", Offset = "0xDDC448", VA = "0xDDC448")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xDDC210", Offset = "0xDDC210", VA = "0xDDC210")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xDDC538", Offset = "0xDDC538", VA = "0xDDC538")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xDDC62C", Offset = "0xDDC62C", VA = "0xDDC62C")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xDDC758", Offset = "0xDDC758", VA = "0xDDC758")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFD060", Offset = "0xAFD060")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFD070", Offset = "0xAFD070")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000033")]
		public Collider Collider
		{
			[Token(Token = "0x60010A9")]
			[Address(RVA = "0xDDC844", Offset = "0xDDC844", VA = "0xDDC844", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB005EC", Offset = "0xB005EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010AA")]
			[Address(RVA = "0xDDC84C", Offset = "0xDDC84C", VA = "0xDDC84C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB005FC", Offset = "0xB005FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000034")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60010AB")]
			[Address(RVA = "0xDDC854", Offset = "0xDDC854", VA = "0xDDC854", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0060C", Offset = "0xB0060C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010AC")]
			[Address(RVA = "0xDDC85C", Offset = "0xDDC85C", VA = "0xDDC85C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0061C", Offset = "0xB0061C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000035")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60010AD")]
			[Address(RVA = "0xDDC864", Offset = "0xDDC864", VA = "0xDDC864", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xDDC8B4", Offset = "0xDDC8B4", VA = "0xDDC8B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xDDC930", Offset = "0xDDC930", VA = "0xDDC930")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000036")]
		Collider Collider
		{
			[Token(Token = "0x60010B0")]
			get;
		}

		[Token(Token = "0x17000037")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60010B1")]
			get;
		}

		[Token(Token = "0x17000038")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60010B2")]
			get;
		}
	}
	[Token(Token = "0x20002D4")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xDDBCFC", Offset = "0xDDBCFC", VA = "0xDDBCFC")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public enum InteractionType
	{
		[Token(Token = "0x4000E83")]
		Enter,
		[Token(Token = "0x4000E84")]
		Stay,
		[Token(Token = "0x4000E85")]
		Exit
	}
	[Token(Token = "0x20002D6")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000403")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x400138A")]
			Mesh,
			[Token(Token = "0x400138B")]
			Skeleton,
			[Token(Token = "0x400138C")]
			Both
		}

		[Token(Token = "0x2000404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAC08", Offset = "0xAFAC08")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400138D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400138E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400138F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170000D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001617")]
				[Address(RVA = "0xDE1ED8", Offset = "0xDE1ED8", VA = "0xDE1ED8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001619")]
				[Address(RVA = "0xDE1F40", Offset = "0xDE1F40", VA = "0xDE1F40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001614")]
			[Address(RVA = "0xDE19CC", Offset = "0xDE19CC", VA = "0xDE19CC")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001615")]
			[Address(RVA = "0xDE1CB8", Offset = "0xDE1CB8", VA = "0xDE1CB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001616")]
			[Address(RVA = "0xDE1CBC", Offset = "0xDE1CBC", VA = "0xDE1CBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001618")]
			[Address(RVA = "0xDE1EE0", Offset = "0xDE1EE0", VA = "0xDE1EE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E86")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFD0A0", Offset = "0xAFD0A0")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000039")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0xDDFED4", Offset = "0xDDFED4", VA = "0xDDFED4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0xDE0FEC", Offset = "0xDE0FEC", VA = "0xDE0FEC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003A")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0xDE0A54", Offset = "0xDE0A54", VA = "0xDE0A54")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0xDE1054", Offset = "0xDE1054", VA = "0xDE1054")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003B")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0xDE10BC", Offset = "0xDE10BC", VA = "0xDE10BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B9")]
			[Address(RVA = "0xDE10F4", Offset = "0xDE10F4", VA = "0xDE10F4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60010BA")]
			[Address(RVA = "0xDE115C", Offset = "0xDE115C", VA = "0xDE115C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010BB")]
			[Address(RVA = "0xDE1194", Offset = "0xDE1194", VA = "0xDE1194")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003D")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0xDE11FC", Offset = "0xDE11FC", VA = "0xDE11FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010BD")]
			[Address(RVA = "0xDE1234", Offset = "0xDE1234", VA = "0xDE1234")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003E")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0xDDFEA0", Offset = "0xDDFEA0", VA = "0xDDFEA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0xDE129C", Offset = "0xDE129C", VA = "0xDE129C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003F")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0xDE0A20", Offset = "0xDE0A20", VA = "0xDE0A20")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0xDE1300", Offset = "0xDE1300", VA = "0xDE1300")]
			private set
			{
			}
		}

		[Token(Token = "0x17000040")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0xDE1364", Offset = "0xDE1364", VA = "0xDE1364")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0xDE1398", Offset = "0xDE1398", VA = "0xDE1398")]
			private set
			{
			}
		}

		[Token(Token = "0x17000041")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0xDE13FC", Offset = "0xDE13FC", VA = "0xDE13FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0xDE1430", Offset = "0xDE1430", VA = "0xDE1430")]
			private set
			{
			}
		}

		[Token(Token = "0x17000042")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60010C6")]
			[Address(RVA = "0xDE1494", Offset = "0xDE1494", VA = "0xDE1494")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0xDE14C8", Offset = "0xDE14C8", VA = "0xDE14C8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000043")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60010C8")]
			[Address(RVA = "0xDE152C", Offset = "0xDE152C", VA = "0xDE152C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0062C", Offset = "0xB0062C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0xDE157C", Offset = "0xDE157C", VA = "0xDE157C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0063C", Offset = "0xB0063C")]
			private set
			{
			}
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xDE15D0", Offset = "0xDE15D0", VA = "0xDE15D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xDE1944", Offset = "0xDE1944", VA = "0xDE1944")]
		private void Update()
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xDE18D4", Offset = "0xDE18D4", VA = "0xDE18D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB0064C", Offset = "0xB0064C")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xDDD378", Offset = "0xDDD378", VA = "0xDDD378")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xDE19F8", Offset = "0xDE19F8", VA = "0xDE19F8")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xDE0A8C", Offset = "0xDE0A8C", VA = "0xDE0A8C")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xDDFD10", Offset = "0xDDFD10", VA = "0xDDFD10")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xDE1BD8", Offset = "0xDE1BD8", VA = "0xDE1BD8")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000405")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x600161A")]
			[Address(RVA = "0xDE2690", Offset = "0xDE2690", VA = "0xDE2690")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000044")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0xDE1F48", Offset = "0xDE1F48", VA = "0xDE1F48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000045")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60010D3")]
			[Address(RVA = "0xDE1F50", Offset = "0xDE1F50", VA = "0xDE1F50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60010D4")]
			[Address(RVA = "0xDE1F58", Offset = "0xDE1F58", VA = "0xDE1F58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000047")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60010D5")]
			[Address(RVA = "0xDE1F60", Offset = "0xDE1F60", VA = "0xDE1F60", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60010D6")]
			[Address(RVA = "0xDE1F68", Offset = "0xDE1F68", VA = "0xDE1F68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB006B0", Offset = "0xB006B0")]
			add
			{
			}
			[Token(Token = "0x60010D7")]
			[Address(RVA = "0xDE200C", Offset = "0xDE200C", VA = "0xDE200C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB006C0", Offset = "0xB006C0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60010D9")]
			[Address(RVA = "0xDE2124", Offset = "0xDE2124", VA = "0xDE2124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB006D0", Offset = "0xB006D0")]
			add
			{
			}
			[Token(Token = "0x60010DA")]
			[Address(RVA = "0xDE21C8", Offset = "0xDE21C8", VA = "0xDE21C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB006E0", Offset = "0xB006E0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60010DC")]
			[Address(RVA = "0xDE22E0", Offset = "0xDE22E0", VA = "0xDE22E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB006F0", Offset = "0xB006F0")]
			add
			{
			}
			[Token(Token = "0x60010DD")]
			[Address(RVA = "0xDE2384", Offset = "0xDE2384", VA = "0xDE2384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00700", Offset = "0xB00700")]
			remove
			{
			}
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xDE20B0", Offset = "0xDE20B0", VA = "0xDE20B0", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xDE226C", Offset = "0xDE226C", VA = "0xDE226C", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xDE2428", Offset = "0xDE2428", VA = "0xDE2428", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60010DF")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xDDBB34", Offset = "0xDDBB34", VA = "0xDDBB34", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xDE2564", Offset = "0xDE2564", VA = "0xDE2564", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xDDC83C", Offset = "0xDDC83C", VA = "0xDDC83C")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000E9E")]
		None,
		[Token(Token = "0x4000E9F")]
		Proximity,
		[Token(Token = "0x4000EA0")]
		Contact,
		[Token(Token = "0x4000EA1")]
		Action
	}
	[Token(Token = "0x20002D9")]
	public enum InteractableState
	{
		[Token(Token = "0x4000EA3")]
		Default,
		[Token(Token = "0x4000EA4")]
		ProximityState,
		[Token(Token = "0x4000EA5")]
		ContactState,
		[Token(Token = "0x4000EA6")]
		ActionState
	}
	[Token(Token = "0x20002DA")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xDDC3A4", Offset = "0xDDC3A4", VA = "0xDDC3A4")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000048")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60010E4")]
			[Address(RVA = "0xDE26E0", Offset = "0xDE26E0", VA = "0xDE26E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xDE249C", Offset = "0xDE249C", VA = "0xDE249C")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xDE25C8", Offset = "0xDE25C8", VA = "0xDE25C8")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xDE2748", Offset = "0xDE2748", VA = "0xDE2748")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000406")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAC18", Offset = "0xAFAC18")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4001393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4001394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4001395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4001396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4001398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170000DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600161F")]
				[Address(RVA = "0xDE3788", Offset = "0xDE3788", VA = "0xDE3788", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001621")]
				[Address(RVA = "0xDE37F0", Offset = "0xDE37F0", VA = "0xDE37F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600161B")]
			[Address(RVA = "0xDE324C", Offset = "0xDE324C", VA = "0xDE324C")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600161C")]
			[Address(RVA = "0xDE3378", Offset = "0xDE3378", VA = "0xDE3378", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600161D")]
			[Address(RVA = "0xDE33EC", Offset = "0xDE33EC", VA = "0xDE33EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600161E")]
			[Address(RVA = "0xDE3394", Offset = "0xDE3394", VA = "0xDE3394")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001620")]
			[Address(RVA = "0xDE3790", Offset = "0xDE3790", VA = "0xDE3790", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xDE3144", Offset = "0xDE3144", VA = "0xDE3144")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xDE31C0", Offset = "0xDE31C0", VA = "0xDE31C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB00710", Offset = "0xB00710")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xDE3278", Offset = "0xDE3278", VA = "0xDE3278")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xDE3370", Offset = "0xDE3370", VA = "0xDE3370")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000049")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60010ED")]
			[Address(RVA = "0xDDF74C", Offset = "0xDDF74C", VA = "0xDDF74C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xDDF8B4", Offset = "0xDDF8B4", VA = "0xDDF8B4")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xDE37F8", Offset = "0xDE37F8", VA = "0xDE37F8")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xDE38A4", Offset = "0xDE38A4", VA = "0xDE38A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xDE3B6C", Offset = "0xDE3B6C", VA = "0xDE3B6C")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xDE3BB4", Offset = "0xDE3BB4", VA = "0xDE3BB4")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xDE3E04", Offset = "0xDE3E04", VA = "0xDE3E04")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xDE3F30", Offset = "0xDE3F30", VA = "0xDE3F30")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000407")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAC28", Offset = "0xAFAC28")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400139A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400139B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170000DC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001625")]
				[Address(RVA = "0xDE0C9C", Offset = "0xDE0C9C", VA = "0xDE0C9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001627")]
				[Address(RVA = "0xDE0D04", Offset = "0xDE0D04", VA = "0xDE0D04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001622")]
			[Address(RVA = "0xDDF9D0", Offset = "0xDDF9D0", VA = "0xDDF9D0")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001623")]
			[Address(RVA = "0xDE06B8", Offset = "0xDE06B8", VA = "0xDE06B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001624")]
			[Address(RVA = "0xDE06BC", Offset = "0xDE06BC", VA = "0xDE06BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001626")]
			[Address(RVA = "0xDE0CA4", Offset = "0xDE0CA4", VA = "0xDE0CA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EB6")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x1700004A")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60010F5")]
			[Address(RVA = "0xDDF630", Offset = "0xDDF630", VA = "0xDDF630", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700004B")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60010F6")]
			[Address(RVA = "0xDDF638", Offset = "0xDDF638", VA = "0xDDF638", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700004C")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0xDDF640", Offset = "0xDDF640", VA = "0xDDF640", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700004D")]
		public override bool EnableState
		{
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0xDDF648", Offset = "0xDDF648", VA = "0xDDF648", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0xDDF674", Offset = "0xDDF674", VA = "0xDDF674", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xDDF6B0", Offset = "0xDDF6B0", VA = "0xDDF6B0", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xDDF960", Offset = "0xDDF960", VA = "0xDDF960")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB00774", Offset = "0xB00774")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xDDF9FC", Offset = "0xDDF9FC", VA = "0xDDF9FC")]
		private void Update()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xDDFF0C", Offset = "0xDDFF0C", VA = "0xDDFF0C")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xDE0184", Offset = "0xDE0184", VA = "0xDE0184")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xDE02C4", Offset = "0xDE02C4", VA = "0xDE02C4", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xDE058C", Offset = "0xDE058C", VA = "0xDE058C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xDE0590", Offset = "0xDE0590", VA = "0xDE0590", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xDE0594", Offset = "0xDE0594", VA = "0xDE0594")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFD130", Offset = "0xAFD130")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFD140", Offset = "0xAFD140")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFD150", Offset = "0xAFD150")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700004E")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001103")]
			[Address(RVA = "0xDE0D0C", Offset = "0xDE0D0C", VA = "0xDE0D0C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB007D8", Offset = "0xB007D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001104")]
			[Address(RVA = "0xDE0D14", Offset = "0xDE0D14", VA = "0xDE0D14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB007E8", Offset = "0xB007E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700004F")]
		public bool EnableState
		{
			[Token(Token = "0x6001105")]
			[Address(RVA = "0xDE0D1C", Offset = "0xDE0D1C", VA = "0xDE0D1C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001106")]
			[Address(RVA = "0xDE0D38", Offset = "0xDE0D38", VA = "0xDE0D38", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000050")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001107")]
			[Address(RVA = "0xDE0D58", Offset = "0xDE0D58", VA = "0xDE0D58", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB007F8", Offset = "0xB007F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001108")]
			[Address(RVA = "0xDE0D60", Offset = "0xDE0D60", VA = "0xDE0D60", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00808", Offset = "0xB00808")]
			set
			{
			}
		}

		[Token(Token = "0x17000051")]
		public float SphereRadius
		{
			[Token(Token = "0x6001109")]
			[Address(RVA = "0xDE0D6C", Offset = "0xDE0D6C", VA = "0xDE0D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00818", Offset = "0xB00818")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600110A")]
			[Address(RVA = "0xDE0D74", Offset = "0xDE0D74", VA = "0xDE0D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00828", Offset = "0xB00828")]
			private set
			{
			}
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xDE0D7C", Offset = "0xDE0D7C", VA = "0xDE0D7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xDE0DC4", Offset = "0xDE0DC4", VA = "0xDE0DC4", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xDE0DC8", Offset = "0xDE0DC8", VA = "0xDE0DC8")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000EC6")]
		None = 0,
		[Token(Token = "0x4000EC7")]
		Ray = 1,
		[Token(Token = "0x4000EC8")]
		Poke = 4,
		[Token(Token = "0x4000EC9")]
		All = -1
	}
	[Token(Token = "0x20002E1")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000ECB")]
		Inactive,
		[Token(Token = "0x4000ECC")]
		PrimaryInputDown,
		[Token(Token = "0x4000ECD")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000ECE")]
		PrimaryInputUp
	}
	[Token(Token = "0x20002E2")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xDE0548", Offset = "0xDE0548", VA = "0xDE0548")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFD160", Offset = "0xAFD160")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFD170", Offset = "0xAFD170")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFD180", Offset = "0xAFD180")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000052")]
		public Transform ToolTransform
		{
			[Token(Token = "0x600110F")]
			[Address(RVA = "0xDDC750", Offset = "0xDDC750", VA = "0xDDC750")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001110")]
			[Address(RVA = "0xDE27C4", Offset = "0xDE27C4", VA = "0xDE27C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00838", Offset = "0xB00838")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001111")]
			[Address(RVA = "0xDE27CC", Offset = "0xDE27CC", VA = "0xDE27CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00848", Offset = "0xB00848")]
			set
			{
			}
		}

		[Token(Token = "0x17000054")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001112")]
			get;
		}

		[Token(Token = "0x17000055")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001113")]
			get;
		}

		[Token(Token = "0x17000056")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001114")]
			get;
		}

		[Token(Token = "0x17000057")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001115")]
			[Address(RVA = "0xDE27D8", Offset = "0xDE27D8", VA = "0xDE27D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00858", Offset = "0xB00858")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001116")]
			[Address(RVA = "0xDE27E4", Offset = "0xDE27E4", VA = "0xDE27E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00868", Offset = "0xB00868")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000058")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6001117")]
			[Address(RVA = "0xDE27F0", Offset = "0xDE27F0", VA = "0xDE27F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00878", Offset = "0xB00878")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001118")]
			[Address(RVA = "0xDE27FC", Offset = "0xDE27FC", VA = "0xDE27FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00888", Offset = "0xB00888")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000059")]
		public abstract bool EnableState
		{
			[Token(Token = "0x600111D")]
			get;
			[Token(Token = "0x600111E")]
			set;
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xDE2808", Offset = "0xDE2808", VA = "0xDE2808")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600111A")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x600111B")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x600111C")]
		public abstract void DeFocus();

		[Token(Token = "0x600111F")]
		public abstract void Initialize();

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xDE2810", Offset = "0xDE2810", VA = "0xDE2810")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xDE2860", Offset = "0xDE2860", VA = "0xDE2860")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xDE28B8", Offset = "0xDE28B8", VA = "0xDE28B8", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xDE2AFC", Offset = "0xDE2AFC", VA = "0xDE2AFC", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xDE05A8", Offset = "0xDE05A8", VA = "0xDE05A8")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700005A")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001125")]
			get;
		}

		[Token(Token = "0x1700005B")]
		bool EnableState
		{
			[Token(Token = "0x6001127")]
			get;
			[Token(Token = "0x6001128")]
			set;
		}

		[Token(Token = "0x1700005C")]
		bool ToolActivateState
		{
			[Token(Token = "0x6001129")]
			get;
			[Token(Token = "0x600112A")]
			set;
		}

		[Token(Token = "0x6001126")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20002E5")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000408")]
		private enum PinchState
		{
			[Token(Token = "0x400139D")]
			None,
			[Token(Token = "0x400139E")]
			PinchDown,
			[Token(Token = "0x400139F")]
			PinchStay,
			[Token(Token = "0x40013A0")]
			PinchUp
		}

		[Token(Token = "0x4000EDB")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700005D")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x600112B")]
			[Address(RVA = "0xDE5EBC", Offset = "0xDE5EBC", VA = "0xDE5EBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005E")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x600112C")]
			[Address(RVA = "0xDE5F48", Offset = "0xDE5F48", VA = "0xDE5F48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005F")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x600112D")]
			[Address(RVA = "0xDE5FD4", Offset = "0xDE5FD4", VA = "0xDE5FD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xDE6060", Offset = "0xDE6060", VA = "0xDE6060")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xDE608C", Offset = "0xDE608C", VA = "0xDE608C")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000EDE")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000EDF")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000EE0")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000EE1")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000EE2")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFD1A0", Offset = "0xAFD1A0")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000060")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001130")]
			[Address(RVA = "0xDE632C", Offset = "0xDE632C", VA = "0xDE632C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000061")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001131")]
			[Address(RVA = "0xDE6334", Offset = "0xDE6334", VA = "0xDE6334", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000062")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001132")]
			[Address(RVA = "0xDE639C", Offset = "0xDE639C", VA = "0xDE639C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000063")]
		public override bool EnableState
		{
			[Token(Token = "0x6001133")]
			[Address(RVA = "0xDE63A4", Offset = "0xDE63A4", VA = "0xDE63A4", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001134")]
			[Address(RVA = "0xDE63E8", Offset = "0xDE63E8", VA = "0xDE63E8", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xDE645C", Offset = "0xDE645C", VA = "0xDE645C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xDE64B4", Offset = "0xDE64B4", VA = "0xDE64B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xDE6550", Offset = "0xDE6550", VA = "0xDE6550")]
		private void Update()
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xDE6850", Offset = "0xDE6850", VA = "0xDE6850")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xDE694C", Offset = "0xDE694C", VA = "0xDE694C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xDE6CB0", Offset = "0xDE6CB0", VA = "0xDE6CB0")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xDE6E54", Offset = "0xDE6E54", VA = "0xDE6E54")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xDE6F7C", Offset = "0xDE6F7C", VA = "0xDE6F7C")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xDE72B4", Offset = "0xDE72B4", VA = "0xDE72B4")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xDE76C4", Offset = "0xDE76C4", VA = "0xDE76C4", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xDE7798", Offset = "0xDE7798", VA = "0xDE7798", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xDE77CC", Offset = "0xDE77CC", VA = "0xDE77CC")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000EEE")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000EEF")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFD214", Offset = "0xAFD214")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000064")]
		public bool EnableState
		{
			[Token(Token = "0x6001141")]
			[Address(RVA = "0xDE63CC", Offset = "0xDE63CC", VA = "0xDE63CC", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001142")]
			[Address(RVA = "0xDE6404", Offset = "0xDE6404", VA = "0xDE6404", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000065")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001143")]
			[Address(RVA = "0xDE7884", Offset = "0xDE7884", VA = "0xDE7884", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001144")]
			[Address(RVA = "0xDE6814", Offset = "0xDE6814", VA = "0xDE6814", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000066")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001146")]
			[Address(RVA = "0xDE7AB4", Offset = "0xDE7AB4", VA = "0xDE7AB4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00898", Offset = "0xB00898")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001147")]
			[Address(RVA = "0xDE7ABC", Offset = "0xDE7ABC", VA = "0xDE7ABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB008A8", Offset = "0xB008A8")]
			set
			{
			}
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xDE788C", Offset = "0xDE788C", VA = "0xDE788C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xDE76F8", Offset = "0xDE76F8", VA = "0xDE76F8", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xDE7AC4", Offset = "0xDE7AC4", VA = "0xDE7AC4")]
		private void Update()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xDE7DF0", Offset = "0xDE7DF0", VA = "0xDE7DF0")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xDE7FE0", Offset = "0xDE7FE0", VA = "0xDE7FE0")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000067")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600114C")]
			[Address(RVA = "0xDDF2A0", Offset = "0xDDF2A0", VA = "0xDDF2A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600114D")]
			[Address(RVA = "0xDDF2A8", Offset = "0xDDF2A8", VA = "0xDDF2A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000068")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x600114E")]
			[Address(RVA = "0xDDF330", Offset = "0xDDF330", VA = "0xDDF330")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600114F")]
			[Address(RVA = "0xDDF338", Offset = "0xDDF338", VA = "0xDDF338")]
			set
			{
			}
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xDDF3A4", Offset = "0xDDF3A4", VA = "0xDDF3A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xDDF608", Offset = "0xDDF608", VA = "0xDDF608")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xDDF618", Offset = "0xDDF618", VA = "0xDDF618")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xDDF628", Offset = "0xDDF628", VA = "0xDDF628")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xDDCEA8", Offset = "0xDDCEA8", VA = "0xDDCEA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xDDCEAC", Offset = "0xDDCEAC", VA = "0xDDCEAC")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xDDCF2C", Offset = "0xDDCF2C", VA = "0xDDCF2C")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xDDD01C", Offset = "0xDDD01C", VA = "0xDDD01C")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xDDD10C", Offset = "0xDDD10C", VA = "0xDDD10C")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xDDD1CC", Offset = "0xDDD1CC", VA = "0xDDD1CC")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xDDD2BC", Offset = "0xDDD2BC", VA = "0xDDD2BC")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xDDD304", Offset = "0xDDD304", VA = "0xDDD304")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xDDD460", Offset = "0xDDD460", VA = "0xDDD460")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xDDD4D0", Offset = "0xDDD4D0", VA = "0xDDD4D0")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xDDD4D8", Offset = "0xDDD4D8", VA = "0xDDD4D8")]
		private void Start()
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xDDD4DC", Offset = "0xDDD4DC", VA = "0xDDD4DC")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xDDD494", Offset = "0xDDD494", VA = "0xDDD494")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xDDD51C", Offset = "0xDDD51C", VA = "0xDDD51C")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000409")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAC38", Offset = "0xAFAC38")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x40013A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x40013A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x40013A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170000DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600162B")]
				[Address(RVA = "0xDE5D60", Offset = "0xDE5D60", VA = "0xDE5D60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600162D")]
				[Address(RVA = "0xDE5DC8", Offset = "0xDE5DC8", VA = "0xDE5DC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001628")]
			[Address(RVA = "0xDE5A94", Offset = "0xDE5A94", VA = "0xDE5A94")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001629")]
			[Address(RVA = "0xDE5B70", Offset = "0xDE5B70", VA = "0xDE5B70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600162A")]
			[Address(RVA = "0xDE5B74", Offset = "0xDE5B74", VA = "0xDE5B74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600162C")]
			[Address(RVA = "0xDE5D68", Offset = "0xDE5D68", VA = "0xDE5D68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EFF")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000F00")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xDE56AC", Offset = "0xDE56AC", VA = "0xDE56AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xDE5744", Offset = "0xDE5744", VA = "0xDE5744")]
		private void Update()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xDE59D0", Offset = "0xDE59D0", VA = "0xDE59D0")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xDE5960", Offset = "0xDE5960", VA = "0xDE5960")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB008B8", Offset = "0xB008B8")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xDE5AC0", Offset = "0xDE5AC0", VA = "0xDE5AC0")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200040A")]
		public enum SelectionState
		{
			[Token(Token = "0x40013A8")]
			Off,
			[Token(Token = "0x40013A9")]
			Selected,
			[Token(Token = "0x40013AA")]
			Highlighted
		}

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000069")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6001167")]
			[Address(RVA = "0xDE8040", Offset = "0xDE8040", VA = "0xDE8040")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6001168")]
			[Address(RVA = "0xDE8048", Offset = "0xDE8048", VA = "0xDE8048")]
			set
			{
			}
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xDE81D0", Offset = "0xDE81D0", VA = "0xDE81D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xDE8390", Offset = "0xDE8390", VA = "0xDE8390")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xDE80D0", Offset = "0xDE80D0", VA = "0xDE80D0")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xDE8480", Offset = "0xDE8480", VA = "0xDE8480")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200040B")]
		public enum SegmentType
		{
			[Token(Token = "0x40013AC")]
			Straight,
			[Token(Token = "0x40013AD")]
			LeftTurn,
			[Token(Token = "0x40013AE")]
			RightTurn,
			[Token(Token = "0x40013AF")]
			Switch
		}

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000F15")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000F16")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFD2F4", Offset = "0xAFD2F4")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x1700006A")]
		public float StartDistance
		{
			[Token(Token = "0x600116E")]
			[Address(RVA = "0xDE84EC", Offset = "0xDE84EC", VA = "0xDE84EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0091C", Offset = "0xB0091C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600116F")]
			[Address(RVA = "0xDE84F4", Offset = "0xDE84F4", VA = "0xDE84F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0092C", Offset = "0xB0092C")]
			set
			{
			}
		}

		[Token(Token = "0x1700006B")]
		public float GridSize
		{
			[Token(Token = "0x6001170")]
			[Address(RVA = "0xDE84FC", Offset = "0xDE84FC", VA = "0xDE84FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001171")]
			[Address(RVA = "0xDE8504", Offset = "0xDE8504", VA = "0xDE8504")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006C")]
		public int SubDivCount
		{
			[Token(Token = "0x6001172")]
			[Address(RVA = "0xDE850C", Offset = "0xDE850C", VA = "0xDE850C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001173")]
			[Address(RVA = "0xDE8514", Offset = "0xDE8514", VA = "0xDE8514")]
			set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public SegmentType Type
		{
			[Token(Token = "0x6001174")]
			[Address(RVA = "0xDE851C", Offset = "0xDE851C", VA = "0xDE851C")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x1700006E")]
		public Pose EndPose
		{
			[Token(Token = "0x6001175")]
			[Address(RVA = "0xDE8524", Offset = "0xDE8524", VA = "0xDE8524")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		public float Radius
		{
			[Token(Token = "0x6001176")]
			[Address(RVA = "0xDE89B8", Offset = "0xDE89B8", VA = "0xDE89B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000070")]
		public float SegmentLength
		{
			[Token(Token = "0x6001178")]
			[Address(RVA = "0xDE858C", Offset = "0xDE858C", VA = "0xDE858C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xDE89C8", Offset = "0xDE89C8", VA = "0xDE89C8")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xDE89E0", Offset = "0xDE89E0", VA = "0xDE89E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xDE85CC", Offset = "0xDE85CC", VA = "0xDE85CC")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xDE89E4", Offset = "0xDE89E4", VA = "0xDE89E4")]
		private void Update()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xDE89E8", Offset = "0xDE89E8", VA = "0xDE89E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xDE8A54", Offset = "0xDE8A54", VA = "0xDE8A54")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xDE95DC", Offset = "0xDE95DC", VA = "0xDE95DC")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xDE98E8", Offset = "0xDE98E8", VA = "0xDE98E8")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x200040C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAC48", Offset = "0xAFAC48")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x40013B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40013B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170000E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001631")]
				[Address(RVA = "0xDEA4F0", Offset = "0xDEA4F0", VA = "0xDEA4F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001633")]
				[Address(RVA = "0xDEA558", Offset = "0xDEA558", VA = "0xDEA558", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600162E")]
			[Address(RVA = "0xDEA268", Offset = "0xDEA268", VA = "0xDEA268")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600162F")]
			[Address(RVA = "0xDEA344", Offset = "0xDEA344", VA = "0xDEA344", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001630")]
			[Address(RVA = "0xDEA348", Offset = "0xDEA348", VA = "0xDEA348", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001632")]
			[Address(RVA = "0xDEA4F8", Offset = "0xDEA4F8", VA = "0xDEA4F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F1C")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000F1D")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xDE998C", Offset = "0xDE998C", VA = "0xDE998C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xDE9A38", Offset = "0xDE9A38", VA = "0xDE9A38")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xDE9AEC", Offset = "0xDE9AEC", VA = "0xDE9AEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xDE9C18", Offset = "0xDE9C18", VA = "0xDE9C18")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xDE9D88", Offset = "0xDE9D88", VA = "0xDE9D88")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xDE9F24", Offset = "0xDE9F24", VA = "0xDE9F24")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xDEA1A0", Offset = "0xDEA1A0", VA = "0xDEA1A0")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xDEA038", Offset = "0xDEA038", VA = "0xDEA038")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xDEA04C", Offset = "0xDEA04C", VA = "0xDEA04C")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xDEA1F8", Offset = "0xDEA1F8", VA = "0xDEA1F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB0093C", Offset = "0xB0093C")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xDEA294", Offset = "0xDEA294", VA = "0xDEA294")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000071")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x600118B")]
			[Address(RVA = "0xDEA560", Offset = "0xDEA560", VA = "0xDEA560")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xDEA570", Offset = "0xDEA570", VA = "0xDEA570", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xDEA578", Offset = "0xDEA578", VA = "0xDEA578", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xDEA9E4", Offset = "0xDEA9E4", VA = "0xDEA9E4")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000F30")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000F31")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFD3F4", Offset = "0xAFD3F4")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000072")]
		public float Distance
		{
			[Token(Token = "0x600118F")]
			[Address(RVA = "0xDEAADC", Offset = "0xDEAADC", VA = "0xDEAADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB009A0", Offset = "0xB009A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001190")]
			[Address(RVA = "0xDEAAE4", Offset = "0xDEAAE4", VA = "0xDEAAE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB009B0", Offset = "0xB009B0")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public float Scale
		{
			[Token(Token = "0x6001191")]
			[Address(RVA = "0xDEAAEC", Offset = "0xDEAAEC", VA = "0xDEAAEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001192")]
			[Address(RVA = "0xDEAAF4", Offset = "0xDEAAF4", VA = "0xDEAAF4")]
			set
			{
			}
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xDEA574", Offset = "0xDEA574", VA = "0xDEA574", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xDEAAFC", Offset = "0xDEAAFC", VA = "0xDEAAFC")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xDEA5C0", Offset = "0xDEA5C0", VA = "0xDEA5C0")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xDEA898", Offset = "0xDEA898", VA = "0xDEA898")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6001197")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xDEAA54", Offset = "0xDEAA54", VA = "0xDEAA54")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x200040D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAC58", Offset = "0xAFAC58")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x40013B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40013B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40013BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40013BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x40013BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40013BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x40013BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x40013BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x40013C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170000E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001637")]
				[Address(RVA = "0xDEB484", Offset = "0xDEB484", VA = "0xDEB484", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001639")]
				[Address(RVA = "0xDEB4EC", Offset = "0xDEB4EC", VA = "0xDEB4EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001634")]
			[Address(RVA = "0xDEB0C8", Offset = "0xDEB0C8", VA = "0xDEB0C8")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001635")]
			[Address(RVA = "0xDEB260", Offset = "0xDEB260", VA = "0xDEB260", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001636")]
			[Address(RVA = "0xDEB264", Offset = "0xDEB264", VA = "0xDEB264", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001638")]
			[Address(RVA = "0xDEB48C", Offset = "0xDEB48C", VA = "0xDEB48C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xDEACCC", Offset = "0xDEACCC", VA = "0xDEACCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xDEAD18", Offset = "0xDEAD18", VA = "0xDEAD18")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xDEAE24", Offset = "0xDEAE24", VA = "0xDEAE24")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xDEAF6C", Offset = "0xDEAF6C", VA = "0xDEAF6C")]
		private void Update()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xDEAE80", Offset = "0xDEAE80", VA = "0xDEAE80")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xDEB048", Offset = "0xDEB048", VA = "0xDEB048")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB009C0", Offset = "0xB009C0")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xDEB0F4", Offset = "0xDEB0F4", VA = "0xDEB0F4")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xDEB1A0", Offset = "0xDEB1A0", VA = "0xDEB1A0")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xDEB200", Offset = "0xDEB200", VA = "0xDEB200")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x200040E")]
		private enum EngineSoundState
		{
			[Token(Token = "0x40013C2")]
			Start,
			[Token(Token = "0x40013C3")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x40013C4")]
			Stop
		}

		[Token(Token = "0x200040F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAC68", Offset = "0xAFAC68")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x40013C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x40013C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x40013CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x40013CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40013CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x40013CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170000E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600163D")]
				[Address(RVA = "0xDEBE10", Offset = "0xDEBE10", VA = "0xDEBE10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600163F")]
				[Address(RVA = "0xDEBE78", Offset = "0xDEBE78", VA = "0xDEBE78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600163A")]
			[Address(RVA = "0xDEB7AC", Offset = "0xDEB7AC", VA = "0xDEB7AC")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x600163B")]
			[Address(RVA = "0xDEBBF0", Offset = "0xDEBBF0", VA = "0xDEBBF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600163C")]
			[Address(RVA = "0xDEBBF4", Offset = "0xDEBBF4", VA = "0xDEBBF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600163E")]
			[Address(RVA = "0xDEBE18", Offset = "0xDEBE18", VA = "0xDEBE18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F44")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000F45")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000F46")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000F47")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAFD454", Offset = "0xAFD454")]
		protected float _initialSpeed;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xDEB4F4", Offset = "0xDEB4F4", VA = "0xDEB4F4")]
		private void Start()
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xDEB64C", Offset = "0xDEB64C", VA = "0xDEB64C")]
		private void Update()
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xDEB658", Offset = "0xDEB658", VA = "0xDEB658", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xDDCEE0", Offset = "0xDDCEE0", VA = "0xDDCEE0")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xDEB5C8", Offset = "0xDEB5C8", VA = "0xDEB5C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB00A24", Offset = "0xB00A24")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xDEB7D8", Offset = "0xDEB7D8", VA = "0xDEB7D8")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xDEB748", Offset = "0xDEB748", VA = "0xDEB748")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xDDCF60", Offset = "0xDDCF60", VA = "0xDDCF60")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xDDD050", Offset = "0xDDD050", VA = "0xDDD050")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xDEBA0C", Offset = "0xDEBA0C", VA = "0xDEBA0C")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xDEBAFC", Offset = "0xDEBAFC", VA = "0xDEBAFC")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xDDD140", Offset = "0xDDD140", VA = "0xDDD140")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xDDD200", Offset = "0xDDD200", VA = "0xDDD200")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xDDD2F4", Offset = "0xDDD2F4", VA = "0xDDD2F4")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xDEBB84", Offset = "0xDEBB84", VA = "0xDEBB84")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000074")]
		public float TrackLength
		{
			[Token(Token = "0x60011B2")]
			[Address(RVA = "0xDEBE80", Offset = "0xDEBE80", VA = "0xDEBE80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011B3")]
			[Address(RVA = "0xDEBE88", Offset = "0xDEBE88", VA = "0xDEBE88")]
			private set
			{
			}
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xDEBE90", Offset = "0xDEBE90", VA = "0xDEBE90")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xDEAB7C", Offset = "0xDEAB7C", VA = "0xDEAB7C")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xDEBE94", Offset = "0xDEBE94", VA = "0xDEBE94")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xDEC08C", Offset = "0xDEC08C", VA = "0xDEC08C")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xDEC1A8", Offset = "0xDEC1A8", VA = "0xDEC1A8")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class Pose
	{
		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xDE6210", Offset = "0xDE6210", VA = "0xDE6210")]
		public Pose()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xDE62BC", Offset = "0xDE62BC", VA = "0xDE62BC")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAC78", Offset = "0xAFAC78")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40013D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x40013D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x40013D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170000E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001643")]
				[Address(RVA = "0xDEC78C", Offset = "0xDEC78C", VA = "0xDEC78C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001645")]
				[Address(RVA = "0xDEC7F4", Offset = "0xDEC7F4", VA = "0xDEC7F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001640")]
			[Address(RVA = "0xDEC450", Offset = "0xDEC450", VA = "0xDEC450")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001641")]
			[Address(RVA = "0xDEC5B0", Offset = "0xDEC5B0", VA = "0xDEC5B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001642")]
			[Address(RVA = "0xDEC5B4", Offset = "0xDEC5B4", VA = "0xDEC5B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001644")]
			[Address(RVA = "0xDEC794", Offset = "0xDEC794", VA = "0xDEC794", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000411")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAC88", Offset = "0xAFAC88")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40013D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40013D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x40013D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170000E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001649")]
				[Address(RVA = "0xDEC8C8", Offset = "0xDEC8C8", VA = "0xDEC8C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600164B")]
				[Address(RVA = "0xDEC930", Offset = "0xDEC930", VA = "0xDEC930", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001646")]
			[Address(RVA = "0xDEC510", Offset = "0xDEC510", VA = "0xDEC510")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001647")]
			[Address(RVA = "0xDEC7FC", Offset = "0xDEC7FC", VA = "0xDEC7FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001648")]
			[Address(RVA = "0xDEC800", Offset = "0xDEC800", VA = "0xDEC800", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600164A")]
			[Address(RVA = "0xDEC8D0", Offset = "0xDEC8D0", VA = "0xDEC8D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F6A")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFD63C", Offset = "0xAFD63C")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000075")]
		public bool IsMoving
		{
			[Token(Token = "0x60011BB")]
			[Address(RVA = "0xDEC1C4", Offset = "0xDEC1C4", VA = "0xDEC1C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00A88", Offset = "0xB00A88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011BC")]
			[Address(RVA = "0xDEC1CC", Offset = "0xDEC1CC", VA = "0xDEC1CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00A98", Offset = "0xB00A98")]
			private set
			{
			}
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xDEC1D8", Offset = "0xDEC1D8", VA = "0xDEC1D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xDEC214", Offset = "0xDEC214", VA = "0xDEC214")]
		private void Update()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xDEC368", Offset = "0xDEC368", VA = "0xDEC368")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xDEC3D0", Offset = "0xDEC3D0", VA = "0xDEC3D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB00AA8", Offset = "0xB00AA8")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xDEC47C", Offset = "0xDEC47C", VA = "0xDEC47C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB00B0C", Offset = "0xB00B0C")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xDEC53C", Offset = "0xDEC53C", VA = "0xDEC53C")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xDEC5A8", Offset = "0xDEC5A8", VA = "0xDEC5A8")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xDEC938", Offset = "0xDEC938", VA = "0xDEC938")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xDEC9A0", Offset = "0xDEC9A0", VA = "0xDEC9A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xDECA58", Offset = "0xDECA58", VA = "0xDECA58")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xDECB58", Offset = "0xDECB58", VA = "0xDECB58")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xDECBD4", Offset = "0xDECBD4", VA = "0xDECBD4")]
		private void Update()
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xDECCB0", Offset = "0xDECCB0", VA = "0xDECCB0")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000F7B")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000F7C")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000F7D")]
		EUDT_None,
		[Token(Token = "0x4000F7E")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20002F8")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000412")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAC98", Offset = "0xAFAC98")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170000EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600164F")]
				[Address(RVA = "0xDE563C", Offset = "0xDE563C", VA = "0xDE563C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001651")]
				[Address(RVA = "0xDE56A4", Offset = "0xDE56A4", VA = "0xDE56A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600164C")]
			[Address(RVA = "0xDE4CB8", Offset = "0xDE4CB8", VA = "0xDE4CB8")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x600164D")]
			[Address(RVA = "0xDE53F0", Offset = "0xDE53F0", VA = "0xDE53F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600164E")]
			[Address(RVA = "0xDE53F4", Offset = "0xDE53F4", VA = "0xDE53F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001650")]
			[Address(RVA = "0xDE5644", Offset = "0xDE5644", VA = "0xDE5644", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000F80")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000F81")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000F82")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAFD67C", Offset = "0xAFD67C")]
		public GameObject mainCamera;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAFD6B4", Offset = "0xAFD6B4")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xDE3FF0", Offset = "0xDE3FF0", VA = "0xDE3FF0")]
		private void Start()
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xDE47E0", Offset = "0xDE47E0", VA = "0xDE47E0")]
		private void Update()
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xDE4920", Offset = "0xDE4920", VA = "0xDE4920")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xDE4A48", Offset = "0xDE4A48", VA = "0xDE4A48")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xDE4B70", Offset = "0xDE4B70", VA = "0xDE4B70")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xDE48F4", Offset = "0xDE48F4", VA = "0xDE48F4")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xDE4C48", Offset = "0xDE4C48", VA = "0xDE4C48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB00B70", Offset = "0xB00B70")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xDE4CE4", Offset = "0xDE4CE4", VA = "0xDE4CE4")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xDE436C", Offset = "0xDE436C", VA = "0xDE436C")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xDE4E0C", Offset = "0xDE4E0C", VA = "0xDE4E0C")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xDE4D18", Offset = "0xDE4D18", VA = "0xDE4D18")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xDE51A8", Offset = "0xDE51A8", VA = "0xDE51A8")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xDE5284", Offset = "0xDE5284", VA = "0xDE5284")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xDE5300", Offset = "0xDE5300", VA = "0xDE5300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00BD4", Offset = "0xB00BD4")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xDE5350", Offset = "0xDE5350", VA = "0xDE5350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00BE4", Offset = "0xB00BE4")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xDE53A0", Offset = "0xDE53A0", VA = "0xDE53A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00BF4", Offset = "0xB00BF4")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAFA38C", Offset = "0xAFA38C")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFACA8", Offset = "0xAFACA8")]
		private sealed class <>c
		{
			[Token(Token = "0x40013DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40013DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001653")]
			[Address(RVA = "0xE17FEC", Offset = "0xE17FEC", VA = "0xE17FEC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001654")]
			[Address(RVA = "0xE17FF4", Offset = "0xE17FF4", VA = "0xE17FF4")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F97")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000F98")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000F99")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000F9A")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000F9B")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000F9C")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000F9D")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000F9E")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000F9F")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000FA0")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000FA1")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xE17230", Offset = "0xE17230", VA = "0xE17230")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xE17288", Offset = "0xE17288", VA = "0xE17288")]
		private void Start()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xE17690", Offset = "0xE17690", VA = "0xE17690")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xE1775C", Offset = "0xE1775C", VA = "0xE1775C")]
		private void Update()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xE17868", Offset = "0xE17868", VA = "0xE17868")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xE17BA0", Offset = "0xE17BA0", VA = "0xE17BA0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xE17D08", Offset = "0xE17D08", VA = "0xE17D08")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xE17E54", Offset = "0xE17E54", VA = "0xE17E54")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xE17904", Offset = "0xE17904", VA = "0xE17904")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xE179A4", Offset = "0xE179A4", VA = "0xE179A4")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xE174E4", Offset = "0xE174E4", VA = "0xE174E4")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xE17F70", Offset = "0xE17F70", VA = "0xE17F70")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000FB4")]
		Default,
		[Token(Token = "0x4000FB5")]
		Generic,
		[Token(Token = "0x4000FB6")]
		PingPongBall,
		[Token(Token = "0x4000FB7")]
		Controller
	}
	[Token(Token = "0x20002FB")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000076")]
		public bool AllowPointing
		{
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0xE18020", Offset = "0xE18020", VA = "0xE18020")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000077")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60011E7")]
			[Address(RVA = "0xE18028", Offset = "0xE18028", VA = "0xE18028")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000078")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60011E8")]
			[Address(RVA = "0xE18030", Offset = "0xE18030", VA = "0xE18030")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xE18038", Offset = "0xE18038", VA = "0xE18038")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xE18040", Offset = "0xE18040", VA = "0xE18040")]
		private void Update()
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xE182B4", Offset = "0xE182B4", VA = "0xE182B4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xE18310", Offset = "0xE18310", VA = "0xE18310")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xE18354", Offset = "0xE18354", VA = "0xE18354")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Voice.Demo.UIShapesDemo
{
	[Token(Token = "0x20002FD")]
	public class InteractionHandler : MonoBehaviour
	{
		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAFD76C", Offset = "0xAFD76C")]
		[Multiline]
		[SerializeField]
		private string freshStateText;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAFD7C8", Offset = "0xAFD7C8")]
		[SerializeField]
		private Text textArea;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool showJson;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAFD824", Offset = "0xAFD824")]
		[SerializeField]
		private AppVoiceExperience appVoiceExperience;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string pendingText;

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xDDAF38", Offset = "0xDDAF38", VA = "0xDDAF38")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xDDAFE4", Offset = "0xDDAFE4", VA = "0xDDAFE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xDDB090", Offset = "0xDDB090", VA = "0xDDB090")]
		private void OnRequestStarted(WitRequest r)
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xDDB124", Offset = "0xDDB124", VA = "0xDDB124")]
		private void Update()
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xDDB168", Offset = "0xDDB168", VA = "0xDDB168")]
		public void OnResponse(WitResponseNode response)
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xDDB250", Offset = "0xDDB250", VA = "0xDDB250")]
		public void OnError(string error, string message)
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xDDB3F0", Offset = "0xDDB3F0", VA = "0xDDB3F0")]
		public void ToggleActivation()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xDDB450", Offset = "0xDDB450", VA = "0xDDB450")]
		public InteractionHandler()
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xDDB4A8", Offset = "0xDDB4A8", VA = "0xDDB4A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00C04", Offset = "0xB00C04")]
		private void <OnRequestStarted>b__7_0(string response)
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public class ColorChanger : MonoBehaviour
	{
		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xDDA984", Offset = "0xDDA984", VA = "0xDDA984")]
		private void SetColor(Transform trans, Color color)
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xDDAA24", Offset = "0xDDAA24", VA = "0xDDAA24")]
		public void UpdateColor(WitResponseNode commandResult)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xDDAC44", Offset = "0xDDAC44", VA = "0xDDAC44")]
		public void UpdateColor(string[] results)
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xDDAAB0", Offset = "0xDDAAB0", VA = "0xDDAAB0")]
		public void UpdateColor(string colorName, string shape)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xDDAC80", Offset = "0xDDAC80", VA = "0xDDAC80")]
		public ColorChanger()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	[ExecuteAlways]
	public class Instructions : MonoBehaviour
	{
		[Token(Token = "0x2000414")]
		internal enum Step
		{
			[Token(Token = "0x40013E0")]
			SetupWit,
			[Token(Token = "0x40013E1")]
			MissingServerToken,
			[Token(Token = "0x40013E2")]
			MissingClientToken,
			[Token(Token = "0x40013E3")]
			AddConfig,
			[Token(Token = "0x40013E4")]
			AddVoiceExperiences,
			[Token(Token = "0x40013E5")]
			SetConfig,
			[Token(Token = "0x40013E6")]
			Ready
		}

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] steps;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text instructionText;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Step currentStep;

		[Token(Token = "0x17000079")]
		internal Step CurrentStep
		{
			[Token(Token = "0x60011FC")]
			[Address(RVA = "0xDDAC88", Offset = "0xDDAC88", VA = "0xDDAC88")]
			get
			{
				return default(Step);
			}
		}

		[Token(Token = "0x1700007A")]
		internal string CurrentStepText
		{
			[Token(Token = "0x60011FD")]
			[Address(RVA = "0xDDAC90", Offset = "0xDDAC90", VA = "0xDDAC90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xDDAD28", Offset = "0xDDAD28", VA = "0xDDAD28")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xDDAD30", Offset = "0xDDAD30", VA = "0xDDAD30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xDDAD34", Offset = "0xDDAD34", VA = "0xDDAD34")]
		private void Update()
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xDDAD2C", Offset = "0xDDAD2C", VA = "0xDDAD2C")]
		private void UpdateStep()
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xDDAD38", Offset = "0xDDAD38", VA = "0xDDAD38")]
		public Instructions()
		{
		}
	}
}
namespace Oculus.Voice.Demo.BuiltInDemo
{
	[Token(Token = "0x2000300")]
	public class TimerController : MonoBehaviour
	{
		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _time;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _timerExist;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool _timerRunning;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFD880", Offset = "0xAFD880")]
		public Text logText;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAFD8B8", Offset = "0xAFD8B8")]
		public AudioClip buzzSound;

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xDD9EC0", Offset = "0xDD9EC0", VA = "0xDD9EC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xDD9FB4", Offset = "0xDD9FB4", VA = "0xDD9FB4")]
		private void Log(string msg)
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xDD9F24", Offset = "0xDD9F24", VA = "0xDD9F24")]
		private void OnElapsedTime()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xDDA048", Offset = "0xDDA048", VA = "0xDDA048")]
		public void DeleteTimer()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xDDA0B4", Offset = "0xDDA0B4", VA = "0xDDA0B4")]
		public void CreateTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xDDA3F0", Offset = "0xDDA3F0", VA = "0xDDA3F0")]
		public void GetTimerIntent()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xDDA4A4", Offset = "0xDDA4A4", VA = "0xDDA4A4")]
		public void PauseTimer()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xDDA4F8", Offset = "0xDDA4F8", VA = "0xDDA4F8")]
		public void ResumeTimer()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xDDA550", Offset = "0xDDA550", VA = "0xDDA550")]
		public void SubtractTimeTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xDDA648", Offset = "0xDDA648", VA = "0xDDA648")]
		public void AddTimeToTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xDDA734", Offset = "0xDDA734", VA = "0xDDA734")]
		public float GetRemainingTime()
		{
			return default(float);
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xDDA418", Offset = "0xDDA418", VA = "0xDDA418")]
		public string GetFormattedTimeFromSeconds()
		{
			return null;
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xDDA294", Offset = "0xDDA294", VA = "0xDDA294")]
		private bool ParseTime(string[] entityValues, out float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xDDA73C", Offset = "0xDDA73C", VA = "0xDDA73C")]
		public TimerController()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class TimerDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimerController timer;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _uiText;

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xDDA744", Offset = "0xDDA744", VA = "0xDDA744")]
		private void Start()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xDDA79C", Offset = "0xDDA79C", VA = "0xDDA79C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xDDA7E4", Offset = "0xDDA7E4", VA = "0xDDA7E4")]
		public TimerDisplay()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class WitActivation : MonoBehaviour
	{
		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppVoiceExperience voiceExperience;

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xDDA7EC", Offset = "0xDDA7EC", VA = "0xDDA7EC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xDDA878", Offset = "0xDDA878", VA = "0xDDA878")]
		private void Start()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xDDA8D0", Offset = "0xDDA8D0", VA = "0xDDA8D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xDDA958", Offset = "0xDDA958", VA = "0xDDA958")]
		public void ActivateWit()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xDDA97C", Offset = "0xDDA97C", VA = "0xDDA97C")]
		public WitActivation()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000303")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4000FCE")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000FCF")]
		public const string Tab = "    ";

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xE1B654", Offset = "0xE1B654", VA = "0xE1B654")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB00C14", Offset = "0xB00C14")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB00C14", Offset = "0xB00C14")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xE1B6DC", Offset = "0xE1B6DC", VA = "0xE1B6DC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB00C74", Offset = "0xB00C74")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB00C74", Offset = "0xB00C74")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xE1B774", Offset = "0xE1B774", VA = "0xE1B774")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB00CD4", Offset = "0xB00CD4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB00CD4", Offset = "0xB00CD4")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xE1B7FC", Offset = "0xE1B7FC", VA = "0xE1B7FC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB00D34", Offset = "0xB00D34")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB00D34", Offset = "0xB00D34")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xE1B884", Offset = "0xE1B884", VA = "0xE1B884")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB00D94", Offset = "0xB00D94")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB00D94", Offset = "0xB00D94")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class CAPI
	{
		[Token(Token = "0x2000415")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000416")]
		public enum Result
		{
			[Token(Token = "0x40013E8")]
			Success = 0,
			[Token(Token = "0x40013E9")]
			Failure = -1000,
			[Token(Token = "0x40013EA")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x40013EB")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x40013EC")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x40013ED")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x40013EE")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x40013EF")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x40013F0")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000417")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x40013F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6001659")]
			[Address(RVA = "0xDD9D6C", Offset = "0xDD9D6C", VA = "0xDD9D6C")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000FD0")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000FD8")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x600121F")]
		[Address(RVA = "0xE1B984", Offset = "0xE1B984", VA = "0xE1B984")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xE1BA14", Offset = "0xE1BA14", VA = "0xE1BA14")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xE1BBD0", Offset = "0xE1BBD0", VA = "0xE1BBD0")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001222")]
		[Address(RVA = "0xE1BCB0", Offset = "0xE1BCB0", VA = "0xE1BCB0")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001223")]
		[Address(RVA = "0xE1BD20", Offset = "0xE1BD20", VA = "0xE1BD20")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001224")]
		[Address(RVA = "0xE1BD94", Offset = "0xE1BD94", VA = "0xE1BD94")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xE1BE14", Offset = "0xE1BE14", VA = "0xE1BE14")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001226")]
		[Address(RVA = "0xE1BF2C", Offset = "0xE1BF2C", VA = "0xE1BF2C")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xE1BFAC", Offset = "0xE1BFAC", VA = "0xE1BFAC")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001228")]
		[Address(RVA = "0xE1C0C4", Offset = "0xE1C0C4", VA = "0xE1C0C4")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001229")]
		[Address(RVA = "0xE1C144", Offset = "0xE1C144", VA = "0xE1C144")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x600122A")]
		[Address(RVA = "0xE1C1C4", Offset = "0xE1C1C4", VA = "0xE1C1C4")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600122B")]
		[Address(RVA = "0xE1C244", Offset = "0xE1C244", VA = "0xE1C244")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x600122C")]
		[Address(RVA = "0xE1C2C4", Offset = "0xE1C2C4", VA = "0xE1C2C4")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x600122D")]
		[Address(RVA = "0xE1C354", Offset = "0xE1C354", VA = "0xE1C354")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600122E")]
		[Address(RVA = "0xE1C3E4", Offset = "0xE1C3E4", VA = "0xE1C3E4")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600122F")]
		[Address(RVA = "0xE1C474", Offset = "0xE1C474", VA = "0xE1C474")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001230")]
		[Address(RVA = "0xE1C4F4", Offset = "0xE1C4F4", VA = "0xE1C4F4")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001231")]
		[Address(RVA = "0xE1C574", Offset = "0xE1C574", VA = "0xE1C574")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001232")]
		[Address(RVA = "0xE1C604", Offset = "0xE1C604", VA = "0xE1C604")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001233")]
		[Address(RVA = "0xE1C694", Offset = "0xE1C694", VA = "0xE1C694")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001234")]
		[Address(RVA = "0xE1C724", Offset = "0xE1C724", VA = "0xE1C724")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001235")]
		[Address(RVA = "0xE1C7A4", Offset = "0xE1C7A4", VA = "0xE1C7A4")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xE1C844", Offset = "0xE1C844", VA = "0xE1C844")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001237")]
		[Address(RVA = "0xE1C8C4", Offset = "0xE1C8C4", VA = "0xE1C8C4")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001238")]
		[Address(RVA = "0xE1C964", Offset = "0xE1C964", VA = "0xE1C964")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001239")]
		[Address(RVA = "0xE1CA24", Offset = "0xE1CA24", VA = "0xE1CA24")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x600123A")]
		[Address(RVA = "0xE1CAF4", Offset = "0xE1CAF4", VA = "0xE1CAF4")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x600123B")]
		[Address(RVA = "0xE1CB84", Offset = "0xE1CB84", VA = "0xE1CB84")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600123C")]
		[Address(RVA = "0xE1CC14", Offset = "0xE1CC14", VA = "0xE1CC14")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600123D")]
		[Address(RVA = "0xE1CCA4", Offset = "0xE1CCA4", VA = "0xE1CCA4")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600123E")]
		[Address(RVA = "0xE1CD34", Offset = "0xE1CD34", VA = "0xE1CD34")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600123F")]
		[Address(RVA = "0xE1CDC4", Offset = "0xE1CDC4", VA = "0xE1CDC4")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xE1CE44", Offset = "0xE1CE44", VA = "0xE1CE44")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xE1CF64", Offset = "0xE1CF64", VA = "0xE1CF64")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001242")]
		[Address(RVA = "0xE1CED4", Offset = "0xE1CED4", VA = "0xE1CED4")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xE1D158", Offset = "0xE1D158", VA = "0xE1D158")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001244")]
		[Address(RVA = "0xE1D290", Offset = "0xE1D290", VA = "0xE1D290")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001245")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xE1D310", Offset = "0xE1D310", VA = "0xE1D310")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001247")]
		[Address(RVA = "0xE1D580", Offset = "0xE1D580", VA = "0xE1D580")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xE1D600", Offset = "0xE1D600", VA = "0xE1D600")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001249")]
		[Address(RVA = "0xE1D738", Offset = "0xE1D738", VA = "0xE1D738")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xE1D7B8", Offset = "0xE1D7B8", VA = "0xE1D7B8")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600124B")]
		[Address(RVA = "0xE1D8F0", Offset = "0xE1D8F0", VA = "0xE1D8F0")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xE1D970", Offset = "0xE1D970", VA = "0xE1D970")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600124D")]
		[Address(RVA = "0xE1DAA8", Offset = "0xE1DAA8", VA = "0xE1DAA8")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xE1DB28", Offset = "0xE1DB28", VA = "0xE1DB28")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600124F")]
		[Address(RVA = "0xE1DC60", Offset = "0xE1DC60", VA = "0xE1DC60")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001250")]
		[Address(RVA = "0xE1DCE0", Offset = "0xE1DCE0", VA = "0xE1DCE0")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001251")]
		[Address(RVA = "0xE1DD60", Offset = "0xE1DD60", VA = "0xE1DD60")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001252")]
		[Address(RVA = "0xE1DDF8", Offset = "0xE1DDF8", VA = "0xE1DDF8")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xE1DE78", Offset = "0xE1DE78", VA = "0xE1DE78")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xE1E024", Offset = "0xE1E024", VA = "0xE1E024")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6001255")]
		[Address(RVA = "0xE1E150", Offset = "0xE1E150", VA = "0xE1E150")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001256")]
		[Address(RVA = "0xE1DFA4", Offset = "0xE1DFA4", VA = "0xE1DFA4")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001257")]
		[Address(RVA = "0xE1E1D0", Offset = "0xE1E1D0", VA = "0xE1E1D0")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001258")]
		[Address(RVA = "0xE1E250", Offset = "0xE1E250", VA = "0xE1E250")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001259")]
		[Address(RVA = "0xE1E2E0", Offset = "0xE1E2E0", VA = "0xE1E2E0")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600125A")]
		[Address(RVA = "0xE1E360", Offset = "0xE1E360", VA = "0xE1E360")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x600125B")]
		[Address(RVA = "0xE1E3F0", Offset = "0xE1E3F0", VA = "0xE1E3F0")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600125C")]
		[Address(RVA = "0xE1E470", Offset = "0xE1E470", VA = "0xE1E470")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xE1E4F0", Offset = "0xE1E4F0", VA = "0xE1E4F0")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600125E")]
		[Address(RVA = "0xE1E72C", Offset = "0xE1E72C", VA = "0xE1E72C")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xE1E7BC", Offset = "0xE1E7BC", VA = "0xE1E7BC")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001260")]
		[Address(RVA = "0xE1E9A8", Offset = "0xE1E9A8", VA = "0xE1E9A8")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xE1EA40", Offset = "0xE1EA40", VA = "0xE1EA40")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6001262")]
		[Address(RVA = "0xE1EB64", Offset = "0xE1EB64", VA = "0xE1EB64")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001263")]
		[Address(RVA = "0xE1EBE4", Offset = "0xE1EBE4", VA = "0xE1EBE4")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xE1EC64", Offset = "0xE1EC64", VA = "0xE1EC64")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6001265")]
		[Address(RVA = "0xE1ED8C", Offset = "0xE1ED8C", VA = "0xE1ED8C")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xE1EE0C", Offset = "0xE1EE0C", VA = "0xE1EE0C")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001267")]
		[Address(RVA = "0xE1EF34", Offset = "0xE1EF34", VA = "0xE1EF34")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001268")]
		[Address(RVA = "0xE1EFB4", Offset = "0xE1EFB4", VA = "0xE1EFB4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001269")]
		[Address(RVA = "0xE1F044", Offset = "0xE1F044", VA = "0xE1F044")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600126A")]
		[Address(RVA = "0xE1F0D4", Offset = "0xE1F0D4", VA = "0xE1F0D4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600126B")]
		[Address(RVA = "0xE1F164", Offset = "0xE1F164", VA = "0xE1F164")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600126C")]
		[Address(RVA = "0xE1F1E4", Offset = "0xE1F1E4", VA = "0xE1F1E4")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600126D")]
		[Address(RVA = "0xE1F26C", Offset = "0xE1F26C", VA = "0xE1F26C")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600126E")]
		[Address(RVA = "0xE1F2F4", Offset = "0xE1F2F4", VA = "0xE1F2F4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600126F")]
		[Address(RVA = "0xE1F374", Offset = "0xE1F374", VA = "0xE1F374")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001270")]
		[Address(RVA = "0xE1F3F4", Offset = "0xE1F3F4", VA = "0xE1F3F4")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001271")]
		[Address(RVA = "0xE1F4A8", Offset = "0xE1F4A8", VA = "0xE1F4A8")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001272")]
		[Address(RVA = "0xE1F538", Offset = "0xE1F538", VA = "0xE1F538")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001273")]
		[Address(RVA = "0xE1F5C8", Offset = "0xE1F5C8", VA = "0xE1F5C8")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001274")]
		[Address(RVA = "0xE1F648", Offset = "0xE1F648", VA = "0xE1F648")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001275")]
		[Address(RVA = "0xE1F6C8", Offset = "0xE1F6C8", VA = "0xE1F6C8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001276")]
		[Address(RVA = "0xE1F748", Offset = "0xE1F748", VA = "0xE1F748")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001277")]
		[Address(RVA = "0xE1F7E0", Offset = "0xE1F7E0", VA = "0xE1F7E0")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6001278")]
		[Address(RVA = "0xE1F870", Offset = "0xE1F870", VA = "0xE1F870")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001279")]
		[Address(RVA = "0xE1F900", Offset = "0xE1F900", VA = "0xE1F900")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x600127A")]
		[Address(RVA = "0xE1F990", Offset = "0xE1F990", VA = "0xE1F990")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600127B")]
		[Address(RVA = "0xE1FA28", Offset = "0xE1FA28", VA = "0xE1FA28")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600127C")]
		[Address(RVA = "0xE1FAC0", Offset = "0xE1FAC0", VA = "0xE1FAC0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600127D")]
		[Address(RVA = "0xE1FB40", Offset = "0xE1FB40", VA = "0xE1FB40")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xE1FBC0", Offset = "0xE1FBC0", VA = "0xE1FBC0")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x600127F")]
		[Address(RVA = "0xE1FCE8", Offset = "0xE1FCE8", VA = "0xE1FCE8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xE1FD68", Offset = "0xE1FD68", VA = "0xE1FD68")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6001281")]
		[Address(RVA = "0xE1FE90", Offset = "0xE1FE90", VA = "0xE1FE90")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xE1FF10", Offset = "0xE1FF10", VA = "0xE1FF10")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001283")]
		[Address(RVA = "0xE20038", Offset = "0xE20038", VA = "0xE20038")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xE200B8", Offset = "0xE200B8", VA = "0xE200B8")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xE20260", Offset = "0xE20260", VA = "0xE20260")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001286")]
		[Address(RVA = "0xE204FC", Offset = "0xE204FC", VA = "0xE204FC")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001287")]
		[Address(RVA = "0xE201E0", Offset = "0xE201E0", VA = "0xE201E0")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001288")]
		[Address(RVA = "0xE2058C", Offset = "0xE2058C", VA = "0xE2058C")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001289")]
		[Address(RVA = "0xE2060C", Offset = "0xE2060C", VA = "0xE2060C")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x600128A")]
		[Address(RVA = "0xE2069C", Offset = "0xE2069C", VA = "0xE2069C")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x600128B")]
		[Address(RVA = "0xE2072C", Offset = "0xE2072C", VA = "0xE2072C")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x600128C")]
		[Address(RVA = "0xE207BC", Offset = "0xE207BC", VA = "0xE207BC")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x600128D")]
		[Address(RVA = "0xE2085C", Offset = "0xE2085C", VA = "0xE2085C")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x600128E")]
		[Address(RVA = "0xE208FC", Offset = "0xE208FC", VA = "0xE208FC")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x600128F")]
		[Address(RVA = "0xE2099C", Offset = "0xE2099C", VA = "0xE2099C")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001290")]
		[Address(RVA = "0xE20A1C", Offset = "0xE20A1C", VA = "0xE20A1C")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001291")]
		[Address(RVA = "0xE20A9C", Offset = "0xE20A9C", VA = "0xE20A9C")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001292")]
		[Address(RVA = "0xE20B1C", Offset = "0xE20B1C", VA = "0xE20B1C")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001293")]
		[Address(RVA = "0xE20B9C", Offset = "0xE20B9C", VA = "0xE20B9C")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001294")]
		[Address(RVA = "0xE20C1C", Offset = "0xE20C1C", VA = "0xE20C1C")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001295")]
		[Address(RVA = "0xE20D44", Offset = "0xE20D44", VA = "0xE20D44")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001296")]
		[Address(RVA = "0xE20DDC", Offset = "0xE20DDC", VA = "0xE20DDC")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xE20E5C", Offset = "0xE20E5C", VA = "0xE20E5C")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xE20EC0", Offset = "0xE20EC0", VA = "0xE20EC0")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001299")]
		[Address(RVA = "0xE20FDC", Offset = "0xE20FDC", VA = "0xE20FDC")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xE2106C", Offset = "0xE2106C", VA = "0xE2106C")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600129B")]
		[Address(RVA = "0xE211B0", Offset = "0xE211B0", VA = "0xE211B0")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x600129C")]
		[Address(RVA = "0xE21240", Offset = "0xE21240", VA = "0xE21240")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xE212E0", Offset = "0xE212E0", VA = "0xE212E0")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600129E")]
		[Address(RVA = "0xE21678", Offset = "0xE21678", VA = "0xE21678")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x600129F")]
		[Address(RVA = "0xE216F8", Offset = "0xE216F8", VA = "0xE216F8")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xE21790", Offset = "0xE21790", VA = "0xE21790")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xE21F58", Offset = "0xE21F58", VA = "0xE21F58")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xE21FD8", Offset = "0xE21FD8", VA = "0xE21FD8")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xE1B91C", Offset = "0xE1B91C", VA = "0xE1B91C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB00DF4", Offset = "0xB00DF4")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xE22070", Offset = "0xE22070", VA = "0xE22070")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xE220F4", Offset = "0xE220F4", VA = "0xE220F4")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xE22174", Offset = "0xE22174", VA = "0xE22174")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xE221F4", Offset = "0xE221F4", VA = "0xE221F4")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xE22274", Offset = "0xE22274", VA = "0xE22274")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xE22C54", Offset = "0xE22C54", VA = "0xE22C54")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xE22CD4", Offset = "0xE22CD4", VA = "0xE22CD4")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xE230C0", Offset = "0xE230C0", VA = "0xE230C0")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xE23030", Offset = "0xE23030", VA = "0xE23030")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xE23134", Offset = "0xE23134", VA = "0xE23134")]
		public CAPI()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x2000305")]
	public static class DOTweenModuleAudio
	{
		[Token(Token = "0x2000418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFACB8", Offset = "0xAFACB8")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40013F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource target;

			[Token(Token = "0x600165B")]
			[Address(RVA = "0x1F0E2FC", Offset = "0x1F0E2FC", VA = "0x1F0E2FC")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600165C")]
			[Address(RVA = "0x1F0EABC", Offset = "0x1F0EABC", VA = "0x1F0EABC")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600165D")]
			[Address(RVA = "0x1F0EAD8", Offset = "0x1F0EAD8", VA = "0x1F0EAD8")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000419")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFACC8", Offset = "0xAFACC8")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40013F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource target;

			[Token(Token = "0x600165E")]
			[Address(RVA = "0x1F0E440", Offset = "0x1F0E440", VA = "0x1F0E440")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600165F")]
			[Address(RVA = "0x1F0EAF4", Offset = "0x1F0EAF4", VA = "0x1F0EAF4")]
			internal float <DOPitch>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001660")]
			[Address(RVA = "0x1F0EB10", Offset = "0x1F0EB10", VA = "0x1F0EB10")]
			internal void <DOPitch>b__1(float x)
			{
			}
		}

		[Token(Token = "0x200041A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFACD8", Offset = "0xAFACD8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40013F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioMixer target;

			[Token(Token = "0x40013F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string floatName;

			[Token(Token = "0x6001661")]
			[Address(RVA = "0x1F0E588", Offset = "0x1F0E588", VA = "0x1F0E588")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001662")]
			[Address(RVA = "0x1F0EB2C", Offset = "0x1F0EB2C", VA = "0x1F0EB2C")]
			internal float <DOSetFloat>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001663")]
			[Address(RVA = "0x1F0EB6C", Offset = "0x1F0EB6C", VA = "0x1F0EB6C")]
			internal void <DOSetFloat>b__1(float x)
			{
			}
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x1F0E198", Offset = "0x1F0E198", VA = "0x1F0E198")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x1F0E304", Offset = "0x1F0E304", VA = "0x1F0E304")]
		public static TweenerCore<float, float, FloatOptions> DOPitch(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x1F0E448", Offset = "0x1F0E448", VA = "0x1F0E448")]
		public static TweenerCore<float, float, FloatOptions> DOSetFloat(this AudioMixer target, string floatName, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x1F0E590", Offset = "0x1F0E590", VA = "0x1F0E590")]
		public static int DOComplete(this AudioMixer target, bool withCallbacks = false)
		{
			return default(int);
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x1F0E608", Offset = "0x1F0E608", VA = "0x1F0E608")]
		public static int DOKill(this AudioMixer target, bool complete = false)
		{
			return default(int);
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x1F0E680", Offset = "0x1F0E680", VA = "0x1F0E680")]
		public static int DOFlip(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x1F0E6E8", Offset = "0x1F0E6E8", VA = "0x1F0E6E8")]
		public static int DOGoto(this AudioMixer target, float to, bool andPlay = false)
		{
			return default(int);
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x1F0E770", Offset = "0x1F0E770", VA = "0x1F0E770")]
		public static int DOPause(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x1F0E7D8", Offset = "0x1F0E7D8", VA = "0x1F0E7D8")]
		public static int DOPlay(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x1F0E840", Offset = "0x1F0E840", VA = "0x1F0E840")]
		public static int DOPlayBackwards(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x1F0E8A8", Offset = "0x1F0E8A8", VA = "0x1F0E8A8")]
		public static int DOPlayForward(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x1F0E910", Offset = "0x1F0E910", VA = "0x1F0E910")]
		public static int DORestart(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x1F0E980", Offset = "0x1F0E980", VA = "0x1F0E980")]
		public static int DORewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x1F0E9EC", Offset = "0x1F0E9EC", VA = "0x1F0E9EC")]
		public static int DOSmoothRewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x1F0EA54", Offset = "0x1F0EA54", VA = "0x1F0EA54")]
		public static int DOTogglePause(this AudioMixer target)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000306")]
	public static class DOTweenModulePhysics
	{
		[Token(Token = "0x200041B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFACE8", Offset = "0xAFACE8")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40013F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6001664")]
			[Address(RVA = "0x1F0EB90", Offset = "0x1F0EB90", VA = "0x1F0EB90")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001665")]
			[Address(RVA = "0x1F0FDC0", Offset = "0x1F0FDC0", VA = "0x1F0FDC0")]
			internal Vector3 <DOMove>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200041C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFACF8", Offset = "0xAFACF8")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40013F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6001666")]
			[Address(RVA = "0x1F0ED20", Offset = "0x1F0ED20", VA = "0x1F0ED20")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001667")]
			[Address(RVA = "0x1F0FEFC", Offset = "0x1F0FEFC", VA = "0x1F0FEFC")]
			internal Vector3 <DOMoveX>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200041D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAD08", Offset = "0xAFAD08")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40013F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6001668")]
			[Address(RVA = "0x1F0EEB0", Offset = "0x1F0EEB0", VA = "0x1F0EEB0")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001669")]
			[Address(RVA = "0x1F0FF18", Offset = "0x1F0FF18", VA = "0x1F0FF18")]
			internal Vector3 <DOMoveY>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200041E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAD18", Offset = "0xAFAD18")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40013F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x600166A")]
			[Address(RVA = "0x1F0F040", Offset = "0x1F0F040", VA = "0x1F0F040")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600166B")]
			[Address(RVA = "0x1F0FF34", Offset = "0x1F0FF34", VA = "0x1F0FF34")]
			internal Vector3 <DOMoveZ>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200041F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAD28", Offset = "0xAFAD28")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40013FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x600166C")]
			[Address(RVA = "0x1F0F048", Offset = "0x1F0F048", VA = "0x1F0F048")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600166D")]
			[Address(RVA = "0x1F0FF50", Offset = "0x1F0FF50", VA = "0x1F0FF50")]
			internal Quaternion <DORotate>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x2000420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAD38", Offset = "0xAFAD38")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40013FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x600166E")]
			[Address(RVA = "0x1F0F234", Offset = "0x1F0F234", VA = "0x1F0F234")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600166F")]
			[Address(RVA = "0x1F0FF6C", Offset = "0x1F0FF6C", VA = "0x1F0FF6C")]
			internal Quaternion <DOLookAt>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x2000421")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAD48", Offset = "0xAFAD48")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40013FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x40013FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x40013FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x40013FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x4001400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x4001401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 endValue;

			[Token(Token = "0x4001402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Tween yTween;

			[Token(Token = "0x6001670")]
			[Address(RVA = "0x1F0F6B0", Offset = "0x1F0F6B0", VA = "0x1F0F6B0")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001671")]
			[Address(RVA = "0x1F0FF88", Offset = "0x1F0FF88", VA = "0x1F0FF88")]
			internal Vector3 <DOJump>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001672")]
			[Address(RVA = "0x1F0FFA4", Offset = "0x1F0FFA4", VA = "0x1F0FFA4")]
			internal void <DOJump>b__1()
			{
			}

			[Token(Token = "0x6001673")]
			[Address(RVA = "0x1F0FFD8", Offset = "0x1F0FFD8", VA = "0x1F0FFD8")]
			internal Vector3 <DOJump>b__2()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001674")]
			[Address(RVA = "0x1F0FFF4", Offset = "0x1F0FFF4", VA = "0x1F0FFF4")]
			internal Vector3 <DOJump>b__3()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001675")]
			[Address(RVA = "0x1F10010", Offset = "0x1F10010", VA = "0x1F10010")]
			internal void <DOJump>b__4()
			{
			}
		}

		[Token(Token = "0x2000422")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAD58", Offset = "0xAFAD58")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6001676")]
			[Address(RVA = "0x1F0F8A4", Offset = "0x1F0F8A4", VA = "0x1F0F8A4")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001677")]
			[Address(RVA = "0x1F100D0", Offset = "0x1F100D0", VA = "0x1F100D0")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000423")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAD68", Offset = "0xAFAD68")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x4001405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x6001678")]
			[Address(RVA = "0x1F0FAAC", Offset = "0x1F0FAAC", VA = "0x1F0FAAC")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001679")]
			[Address(RVA = "0x1F100EC", Offset = "0x1F100EC", VA = "0x1F100EC")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600167A")]
			[Address(RVA = "0x1F10108", Offset = "0x1F10108", VA = "0x1F10108")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAD78", Offset = "0xAFAD78")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x600167B")]
			[Address(RVA = "0x1F0FC2C", Offset = "0x1F0FC2C", VA = "0x1F0FC2C")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x600167C")]
			[Address(RVA = "0x1F1020C", Offset = "0x1F1020C", VA = "0x1F1020C")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000425")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAD88", Offset = "0xAFAD88")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x4001408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x600167D")]
			[Address(RVA = "0x1F0FDB8", Offset = "0x1F0FDB8", VA = "0x1F0FDB8")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x600167E")]
			[Address(RVA = "0x1F0FDDC", Offset = "0x1F0FDDC", VA = "0x1F0FDDC")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600167F")]
			[Address(RVA = "0x1F0FDF8", Offset = "0x1F0FDF8", VA = "0x1F0FDF8")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x1F0B7A4", Offset = "0x1F0B7A4", VA = "0x1F0B7A4")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMove(this Rigidbody target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x1F0EB98", Offset = "0x1F0EB98", VA = "0x1F0EB98")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveX(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x1F0ED28", Offset = "0x1F0ED28", VA = "0x1F0ED28")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveY(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x1F0EEB8", Offset = "0x1F0EEB8", VA = "0x1F0EEB8")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveZ(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x1F0BA7C", Offset = "0x1F0BA7C", VA = "0x1F0BA7C")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DORotate(this Rigidbody target, Vector3 endValue, float duration, RotateMode mode = RotateMode.Fast)
		{
			return null;
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x1F0F050", Offset = "0x1F0F050", VA = "0x1F0F050")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DOLookAt(this Rigidbody target, Vector3 towards, float duration, AxisConstraint axisConstraint = AxisConstraint.None, [Optional] Vector3? up)
		{
			return null;
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x1F0F23C", Offset = "0x1F0F23C", VA = "0x1F0F23C")]
		public static Sequence DOJump(this Rigidbody target, Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x1F0F6B8", Offset = "0x1F0F6B8", VA = "0x1F0F6B8")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x1F0F8AC", Offset = "0x1F0F8AC", VA = "0x1F0F8AC")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x1F0FAB4", Offset = "0x1F0FAB4", VA = "0x1F0FAB4")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x1F0FC34", Offset = "0x1F0FC34", VA = "0x1F0FC34")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}
	}
	[Token(Token = "0x2000307")]
	public static class DOTweenModulePhysics2D
	{
		[Token(Token = "0x2000426")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAD98", Offset = "0xAFAD98")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x6001680")]
			[Address(RVA = "0x1F10228", Offset = "0x1F10228", VA = "0x1F10228")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001681")]
			[Address(RVA = "0x1F10E28", Offset = "0x1F10E28", VA = "0x1F10E28")]
			internal Vector2 <DOMove>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x2000427")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFADA8", Offset = "0xAFADA8")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400140A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x6001682")]
			[Address(RVA = "0x1F103A4", Offset = "0x1F103A4", VA = "0x1F103A4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001683")]
			[Address(RVA = "0x1F10E44", Offset = "0x1F10E44", VA = "0x1F10E44")]
			internal Vector2 <DOMoveX>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x2000428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFADB8", Offset = "0xAFADB8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400140B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x6001684")]
			[Address(RVA = "0x1F10520", Offset = "0x1F10520", VA = "0x1F10520")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001685")]
			[Address(RVA = "0x1F10E60", Offset = "0x1F10E60", VA = "0x1F10E60")]
			internal Vector2 <DOMoveY>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x2000429")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFADC8", Offset = "0xAFADC8")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x400140C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x6001686")]
			[Address(RVA = "0x1F10528", Offset = "0x1F10528", VA = "0x1F10528")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001687")]
			[Address(RVA = "0x1F10E7C", Offset = "0x1F10E7C", VA = "0x1F10E7C")]
			internal float <DORotate>b__0()
			{
				return default(float);
			}
		}

		[Token(Token = "0x200042A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFADD8", Offset = "0xAFADD8")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x400140D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x400140E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x400140F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x4001410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x4001411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x4001412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 endValue;

			[Token(Token = "0x4001413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Tween yTween;

			[Token(Token = "0x6001688")]
			[Address(RVA = "0x1F108A8", Offset = "0x1F108A8", VA = "0x1F108A8")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001689")]
			[Address(RVA = "0x1F10E98", Offset = "0x1F10E98", VA = "0x1F10E98")]
			internal Vector2 <DOJump>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600168A")]
			[Address(RVA = "0x1F10EB4", Offset = "0x1F10EB4", VA = "0x1F10EB4")]
			internal void <DOJump>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x600168B")]
			[Address(RVA = "0x1F10ED0", Offset = "0x1F10ED0", VA = "0x1F10ED0")]
			internal void <DOJump>b__2()
			{
			}

			[Token(Token = "0x600168C")]
			[Address(RVA = "0x1F10F04", Offset = "0x1F10F04", VA = "0x1F10F04")]
			internal Vector2 <DOJump>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600168D")]
			[Address(RVA = "0x1F10F20", Offset = "0x1F10F20", VA = "0x1F10F20")]
			internal void <DOJump>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x600168E")]
			[Address(RVA = "0x1F10F3C", Offset = "0x1F10F3C", VA = "0x1F10F3C")]
			internal void <DOJump>b__5()
			{
			}
		}

		[Token(Token = "0x200042B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFADE8", Offset = "0xAFADE8")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x600168F")]
			[Address(RVA = "0x1F10B5C", Offset = "0x1F10B5C", VA = "0x1F10B5C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001690")]
			[Address(RVA = "0x1F11064", Offset = "0x1F11064", VA = "0x1F11064")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001691")]
			[Address(RVA = "0x1F110F4", Offset = "0x1F110F4", VA = "0x1F110F4")]
			internal void <DOPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200042C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFADF8", Offset = "0xAFADF8")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x4001416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody2D target;

			[Token(Token = "0x6001692")]
			[Address(RVA = "0x1F10E20", Offset = "0x1F10E20", VA = "0x1F10E20")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001693")]
			[Address(RVA = "0x1F11198", Offset = "0x1F11198", VA = "0x1F11198")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001694")]
			[Address(RVA = "0x1F111B4", Offset = "0x1F111B4", VA = "0x1F111B4")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x1F0B914", Offset = "0x1F0B914", VA = "0x1F0B914")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMove(this Rigidbody2D target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x1F10230", Offset = "0x1F10230", VA = "0x1F10230")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveX(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x1F103AC", Offset = "0x1F103AC", VA = "0x1F103AC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveY(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x1F0BBE8", Offset = "0x1F0BBE8", VA = "0x1F0BBE8")]
		public static TweenerCore<float, float, FloatOptions> DORotate(this Rigidbody2D target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x1F10530", Offset = "0x1F10530", VA = "0x1F10530")]
		public static Sequence DOJump(this Rigidbody2D target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x1F108B0", Offset = "0x1F108B0", VA = "0x1F108B0")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody2D target, Vector2[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x1F10B64", Offset = "0x1F10B64", VA = "0x1F10B64")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody2D target, Vector2[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}
	}
	[Token(Token = "0x2000308")]
	public static class DOTweenModuleSprite
	{
		[Token(Token = "0x200042D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAE08", Offset = "0xAFAE08")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x6001695")]
			[Address(RVA = "0x1F112E0", Offset = "0x1F112E0", VA = "0x1F112E0")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001696")]
			[Address(RVA = "0x1F116B4", Offset = "0x1F116B4", VA = "0x1F116B4")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001697")]
			[Address(RVA = "0x1F116D0", Offset = "0x1F116D0", VA = "0x1F116D0")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200042E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAE18", Offset = "0xAFAE18")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x6001698")]
			[Address(RVA = "0x1F112E8", Offset = "0x1F112E8", VA = "0x1F112E8")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001699")]
			[Address(RVA = "0x1F116EC", Offset = "0x1F116EC", VA = "0x1F116EC")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600169A")]
			[Address(RVA = "0x1F11708", Offset = "0x1F11708", VA = "0x1F11708")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200042F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAE28", Offset = "0xAFAE28")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x400141A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpriteRenderer target;

			[Token(Token = "0x600169B")]
			[Address(RVA = "0x1F116AC", Offset = "0x1F116AC", VA = "0x1F116AC")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600169C")]
			[Address(RVA = "0x1F11724", Offset = "0x1F11724", VA = "0x1F11724")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600169D")]
			[Address(RVA = "0x1F11730", Offset = "0x1F11730", VA = "0x1F11730")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x1F0BE84", Offset = "0x1F0BE84", VA = "0x1F0BE84")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x1F0C2B0", Offset = "0x1F0C2B0", VA = "0x1F0C2B0")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this SpriteRenderer target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x1F112F0", Offset = "0x1F112F0", VA = "0x1F112F0")]
		public static Sequence DOGradientColor(this SpriteRenderer target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x1F114C8", Offset = "0x1F114C8", VA = "0x1F114C8")]
		public static Tweener DOBlendableColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000309")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x2000430")]
		public static class Utils
		{
			[Token(Token = "0x600169E")]
			[Address(RVA = "0x1F0B394", Offset = "0x1F0B394", VA = "0x1F0B394")]
			public static Vector2 SwitchToRectTransform(RectTransform from, RectTransform to)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x2000431")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAE38", Offset = "0xAFAE38")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400141B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CanvasGroup target;

			[Token(Token = "0x600169F")]
			[Address(RVA = "0x1F117DC", Offset = "0x1F117DC", VA = "0x1F117DC")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60016A0")]
			[Address(RVA = "0x1F147F0", Offset = "0x1F147F0", VA = "0x1F147F0")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60016A1")]
			[Address(RVA = "0x1F1480C", Offset = "0x1F1480C", VA = "0x1F1480C")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000432")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAE48", Offset = "0xAFAE48")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400141C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x60016A2")]
			[Address(RVA = "0x1F117E4", Offset = "0x1F117E4", VA = "0x1F117E4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60016A3")]
			[Address(RVA = "0x1F14A60", Offset = "0x1F14A60", VA = "0x1F14A60")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60016A4")]
			[Address(RVA = "0x1F14A84", Offset = "0x1F14A84", VA = "0x1F14A84")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000433")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAE58", Offset = "0xAFAE58")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400141D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x60016A5")]
			[Address(RVA = "0x1F117EC", Offset = "0x1F117EC", VA = "0x1F117EC")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60016A6")]
			[Address(RVA = "0x1F150EC", Offset = "0x1F150EC", VA = "0x1F150EC")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60016A7")]
			[Address(RVA = "0x1F15110", Offset = "0x1F15110", VA = "0x1F15110")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAE68", Offset = "0xAFAE68")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x400141E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x60016A8")]
			[Address(RVA = "0x1F11958", Offset = "0x1F11958", VA = "0x1F11958")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60016A9")]
			[Address(RVA = "0x1F155B8", Offset = "0x1F155B8", VA = "0x1F155B8")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60016AA")]
			[Address(RVA = "0x1F155DC", Offset = "0x1F155DC", VA = "0x1F155DC")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000435")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAE78", Offset = "0xAFAE78")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x400141F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x60016AB")]
			[Address(RVA = "0x1F11A9C", Offset = "0x1F11A9C", VA = "0x1F11A9C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60016AC")]
			[Address(RVA = "0x1F156C8", Offset = "0x1F156C8", VA = "0x1F156C8")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60016AD")]
			[Address(RVA = "0x1F156EC", Offset = "0x1F156EC", VA = "0x1F156EC")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000436")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAE88", Offset = "0xAFAE88")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x60016AE")]
			[Address(RVA = "0x1F11C04", Offset = "0x1F11C04", VA = "0x1F11C04")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60016AF")]
			[Address(RVA = "0x1F15710", Offset = "0x1F15710", VA = "0x1F15710")]
			internal float <DOFillAmount>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60016B0")]
			[Address(RVA = "0x1F1572C", Offset = "0x1F1572C", VA = "0x1F1572C")]
			internal void <DOFillAmount>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000437")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAE98", Offset = "0xAFAE98")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x60016B1")]
			[Address(RVA = "0x1F11F48", Offset = "0x1F11F48", VA = "0x1F11F48")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60016B2")]
			[Address(RVA = "0x1F15748", Offset = "0x1F15748", VA = "0x1F15748")]
			internal Vector2 <DOFlexibleSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60016B3")]
			[Address(RVA = "0x1F157C8", Offset = "0x1F157C8", VA = "0x1F157C8")]
			internal void <DOFlexibleSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAEA8", Offset = "0xAFAEA8")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x60016B4")]
			[Address(RVA = "0x1F120AC", Offset = "0x1F120AC", VA = "0x1F120AC")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60016B5")]
			[Address(RVA = "0x1F15824", Offset = "0x1F15824", VA = "0x1F15824")]
			internal Vector2 <DOMinSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60016B6")]
			[Address(RVA = "0x1F158A4", Offset = "0x1F158A4", VA = "0x1F158A4")]
			internal void <DOMinSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000439")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAEB8", Offset = "0xAFAEB8")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x60016B7")]
			[Address(RVA = "0x1F12210", Offset = "0x1F12210", VA = "0x1F12210")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60016B8")]
			[Address(RVA = "0x1F15900", Offset = "0x1F15900", VA = "0x1F15900")]
			internal Vector2 <DOPreferredSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60016B9")]
			[Address(RVA = "0x1F15980", Offset = "0x1F15980", VA = "0x1F15980")]
			internal void <DOPreferredSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200043A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAEC8", Offset = "0xAFAEC8")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x60016BA")]
			[Address(RVA = "0x1F1237C", Offset = "0x1F1237C", VA = "0x1F1237C")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60016BB")]
			[Address(RVA = "0x1F14828", Offset = "0x1F14828", VA = "0x1F14828")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60016BC")]
			[Address(RVA = "0x1F14848", Offset = "0x1F14848", VA = "0x1F14848")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200043B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAED8", Offset = "0xAFAED8")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x60016BD")]
			[Address(RVA = "0x1F124C0", Offset = "0x1F124C0", VA = "0x1F124C0")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x60016BE")]
			[Address(RVA = "0x1F14864", Offset = "0x1F14864", VA = "0x1F14864")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60016BF")]
			[Address(RVA = "0x1F14884", Offset = "0x1F14884", VA = "0x1F14884")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200043C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAEE8", Offset = "0xAFAEE8")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4001426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x60016C0")]
			[Address(RVA = "0x1F12614", Offset = "0x1F12614", VA = "0x1F12614")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x60016C1")]
			[Address(RVA = "0x1F148A0", Offset = "0x1F148A0", VA = "0x1F148A0")]
			internal Vector2 <DOScale>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60016C2")]
			[Address(RVA = "0x1F148BC", Offset = "0x1F148BC", VA = "0x1F148BC")]
			internal void <DOScale>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200043D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAEF8", Offset = "0xAFAEF8")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60016C3")]
			[Address(RVA = "0x1F12778", Offset = "0x1F12778", VA = "0x1F12778")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x60016C4")]
			[Address(RVA = "0x1F148D8", Offset = "0x1F148D8", VA = "0x1F148D8")]
			internal Vector2 <DOAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60016C5")]
			[Address(RVA = "0x1F148F4", Offset = "0x1F148F4", VA = "0x1F148F4")]
			internal void <DOAnchorPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200043E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAF08", Offset = "0xAFAF08")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4001428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60016C6")]
			[Address(RVA = "0x1F128F0", Offset = "0x1F128F0", VA = "0x1F128F0")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x60016C7")]
			[Address(RVA = "0x1F14910", Offset = "0x1F14910", VA = "0x1F14910")]
			internal Vector2 <DOAnchorPosX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60016C8")]
			[Address(RVA = "0x1F1492C", Offset = "0x1F1492C", VA = "0x1F1492C")]
			internal void <DOAnchorPosX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200043F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAF18", Offset = "0xAFAF18")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4001429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60016C9")]
			[Address(RVA = "0x1F12A68", Offset = "0x1F12A68", VA = "0x1F12A68")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x60016CA")]
			[Address(RVA = "0x1F14948", Offset = "0x1F14948", VA = "0x1F14948")]
			internal Vector2 <DOAnchorPosY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60016CB")]
			[Address(RVA = "0x1F14964", Offset = "0x1F14964", VA = "0x1F14964")]
			internal void <DOAnchorPosY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAF28", Offset = "0xAFAF28")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x400142A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60016CC")]
			[Address(RVA = "0x1F12A70", Offset = "0x1F12A70", VA = "0x1F12A70")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x60016CD")]
			[Address(RVA = "0x1F14980", Offset = "0x1F14980", VA = "0x1F14980")]
			internal Vector3 <DOAnchorPos3D>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60016CE")]
			[Address(RVA = "0x1F1499C", Offset = "0x1F1499C", VA = "0x1F1499C")]
			internal void <DOAnchorPos3D>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000441")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAF38", Offset = "0xAFAF38")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x400142B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60016CF")]
			[Address(RVA = "0x1F12BF4", Offset = "0x1F12BF4", VA = "0x1F12BF4")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x60016D0")]
			[Address(RVA = "0x1F149B8", Offset = "0x1F149B8", VA = "0x1F149B8")]
			internal Vector3 <DOAnchorPos3DX>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x1F149D4", Offset = "0x1F149D4", VA = "0x1F149D4")]
			internal void <DOAnchorPos3DX>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000442")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAF48", Offset = "0xAFAF48")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x400142C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60016D2")]
			[Address(RVA = "0x1F12D78", Offset = "0x1F12D78", VA = "0x1F12D78")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x60016D3")]
			[Address(RVA = "0x1F149F0", Offset = "0x1F149F0", VA = "0x1F149F0")]
			internal Vector3 <DOAnchorPos3DY>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60016D4")]
			[Address(RVA = "0x1F14A0C", Offset = "0x1F14A0C", VA = "0x1F14A0C")]
			internal void <DOAnchorPos3DY>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000443")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAF58", Offset = "0xAFAF58")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x400142D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60016D5")]
			[Address(RVA = "0x1F12EFC", Offset = "0x1F12EFC", VA = "0x1F12EFC")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x60016D6")]
			[Address(RVA = "0x1F14A28", Offset = "0x1F14A28", VA = "0x1F14A28")]
			internal Vector3 <DOAnchorPos3DZ>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60016D7")]
			[Address(RVA = "0x1F14A44", Offset = "0x1F14A44", VA = "0x1F14A44")]
			internal void <DOAnchorPos3DZ>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAF68", Offset = "0xAFAF68")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x400142E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60016D8")]
			[Address(RVA = "0x1F13060", Offset = "0x1F13060", VA = "0x1F13060")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x60016D9")]
			[Address(RVA = "0x1F14AA8", Offset = "0x1F14AA8", VA = "0x1F14AA8")]
			internal Vector2 <DOAnchorMax>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60016DA")]
			[Address(RVA = "0x1F14AC4", Offset = "0x1F14AC4", VA = "0x1F14AC4")]
			internal void <DOAnchorMax>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000445")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAF78", Offset = "0xAFAF78")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x400142F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60016DB")]
			[Address(RVA = "0x1F131C4", Offset = "0x1F131C4", VA = "0x1F131C4")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60016DC")]
			[Address(RVA = "0x1F14AE0", Offset = "0x1F14AE0", VA = "0x1F14AE0")]
			internal Vector2 <DOAnchorMin>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x1F14AFC", Offset = "0x1F14AFC", VA = "0x1F14AFC")]
			internal void <DOAnchorMin>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000446")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAF88", Offset = "0xAFAF88")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60016DE")]
			[Address(RVA = "0x1F13318", Offset = "0x1F13318", VA = "0x1F13318")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x60016DF")]
			[Address(RVA = "0x1F14B18", Offset = "0x1F14B18", VA = "0x1F14B18")]
			internal Vector2 <DOPivot>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60016E0")]
			[Address(RVA = "0x1F14B34", Offset = "0x1F14B34", VA = "0x1F14B34")]
			internal void <DOPivot>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000447")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAF98", Offset = "0xAFAF98")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4001431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60016E1")]
			[Address(RVA = "0x1F13484", Offset = "0x1F13484", VA = "0x1F13484")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x60016E2")]
			[Address(RVA = "0x1F14B50", Offset = "0x1F14B50", VA = "0x1F14B50")]
			internal Vector2 <DOPivotX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60016E3")]
			[Address(RVA = "0x1F14B6C", Offset = "0x1F14B6C", VA = "0x1F14B6C")]
			internal void <DOPivotX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAFA8", Offset = "0xAFAFA8")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4001432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60016E4")]
			[Address(RVA = "0x1F135F0", Offset = "0x1F135F0", VA = "0x1F135F0")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x1F14B88", Offset = "0x1F14B88", VA = "0x1F14B88")]
			internal Vector2 <DOPivotY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60016E6")]
			[Address(RVA = "0x1F14BA4", Offset = "0x1F14BA4", VA = "0x1F14BA4")]
			internal void <DOPivotY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000449")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAFB8", Offset = "0xAFAFB8")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4001433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60016E7")]
			[Address(RVA = "0x1F135F8", Offset = "0x1F135F8", VA = "0x1F135F8")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x60016E8")]
			[Address(RVA = "0x1F14BC0", Offset = "0x1F14BC0", VA = "0x1F14BC0")]
			internal Vector2 <DOSizeDelta>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x1F14BDC", Offset = "0x1F14BDC", VA = "0x1F14BDC")]
			internal void <DOSizeDelta>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200044A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAFC8", Offset = "0xAFAFC8")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4001434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60016EA")]
			[Address(RVA = "0x1F13600", Offset = "0x1F13600", VA = "0x1F13600")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x1F14BF8", Offset = "0x1F14BF8", VA = "0x1F14BF8")]
			internal Vector3 <DOPunchAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60016EC")]
			[Address(RVA = "0x1F14C88", Offset = "0x1F14C88", VA = "0x1F14C88")]
			internal void <DOPunchAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200044B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAFD8", Offset = "0xAFAFD8")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4001435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60016ED")]
			[Address(RVA = "0x1F13788", Offset = "0x1F13788", VA = "0x1F13788")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x60016EE")]
			[Address(RVA = "0x1F14D2C", Offset = "0x1F14D2C", VA = "0x1F14D2C")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60016EF")]
			[Address(RVA = "0x1F14DBC", Offset = "0x1F14DBC", VA = "0x1F14DBC")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200044C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAFE8", Offset = "0xAFAFE8")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60016F0")]
			[Address(RVA = "0x1F13790", Offset = "0x1F13790", VA = "0x1F13790")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x60016F1")]
			[Address(RVA = "0x1F14E60", Offset = "0x1F14E60", VA = "0x1F14E60")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60016F2")]
			[Address(RVA = "0x1F14EF0", Offset = "0x1F14EF0", VA = "0x1F14EF0")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200044D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFAFF8", Offset = "0xAFAFF8")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4001437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x4001438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x4001439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x400143A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x400143B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x400143C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 endValue;

			[Token(Token = "0x60016F3")]
			[Address(RVA = "0x1F13B14", Offset = "0x1F13B14", VA = "0x1F13B14")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x60016F4")]
			[Address(RVA = "0x1F14F94", Offset = "0x1F14F94", VA = "0x1F14F94")]
			internal Vector2 <DOJumpAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60016F5")]
			[Address(RVA = "0x1F14FB0", Offset = "0x1F14FB0", VA = "0x1F14FB0")]
			internal void <DOJumpAnchorPos>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x60016F6")]
			[Address(RVA = "0x1F14FCC", Offset = "0x1F14FCC", VA = "0x1F14FCC")]
			internal void <DOJumpAnchorPos>b__2()
			{
			}

			[Token(Token = "0x60016F7")]
			[Address(RVA = "0x1F15000", Offset = "0x1F15000", VA = "0x1F15000")]
			internal Vector2 <DOJumpAnchorPos>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60016F8")]
			[Address(RVA = "0x1F1501C", Offset = "0x1F1501C", VA = "0x1F1501C")]
			internal void <DOJumpAnchorPos>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x60016F9")]
			[Address(RVA = "0x1F15038", Offset = "0x1F15038", VA = "0x1F15038")]
			internal void <DOJumpAnchorPos>b__5()
			{
			}
		}

		[Token(Token = "0x200044E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB008", Offset = "0xAFB008")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x400143D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x60016FA")]
			[Address(RVA = "0x1F13C6C", Offset = "0x1F13C6C", VA = "0x1F13C6C")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x60016FB")]
			[Address(RVA = "0x1F15134", Offset = "0x1F15134", VA = "0x1F15134")]
			internal Vector2 <DONormalizedPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60016FC")]
			[Address(RVA = "0x1F151A4", Offset = "0x1F151A4", VA = "0x1F151A4")]
			internal void <DONormalizedPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200044F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB018", Offset = "0xAFB018")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x400143E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x60016FD")]
			[Address(RVA = "0x1F13DB4", Offset = "0x1F13DB4", VA = "0x1F13DB4")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x60016FE")]
			[Address(RVA = "0x1F151F0", Offset = "0x1F151F0", VA = "0x1F151F0")]
			internal float <DOHorizontalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60016FF")]
			[Address(RVA = "0x1F1520C", Offset = "0x1F1520C", VA = "0x1F1520C")]
			internal void <DOHorizontalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB028", Offset = "0xAFB028")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x400143F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x6001700")]
			[Address(RVA = "0x1F13EFC", Offset = "0x1F13EFC", VA = "0x1F13EFC")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6001701")]
			[Address(RVA = "0x1F15228", Offset = "0x1F15228", VA = "0x1F15228")]
			internal float <DOVerticalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001702")]
			[Address(RVA = "0x1F15244", Offset = "0x1F15244", VA = "0x1F15244")]
			internal void <DOVerticalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000451")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB038", Offset = "0xAFB038")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4001440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Slider target;

			[Token(Token = "0x6001703")]
			[Address(RVA = "0x1F14050", Offset = "0x1F14050", VA = "0x1F14050")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6001704")]
			[Address(RVA = "0x1F15260", Offset = "0x1F15260", VA = "0x1F15260")]
			internal float <DOValue>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001705")]
			[Address(RVA = "0x1F15284", Offset = "0x1F15284", VA = "0x1F15284")]
			internal void <DOValue>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000452")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB048", Offset = "0xAFB048")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4001441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x6001706")]
			[Address(RVA = "0x1F14058", Offset = "0x1F14058", VA = "0x1F14058")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6001707")]
			[Address(RVA = "0x1F152A8", Offset = "0x1F152A8", VA = "0x1F152A8")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001708")]
			[Address(RVA = "0x1F152CC", Offset = "0x1F152CC", VA = "0x1F152CC")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000453")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB058", Offset = "0xAFB058")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4001442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int v;

			[Token(Token = "0x4001443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Text target;

			[Token(Token = "0x4001444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool addThousandsSeparator;

			[Token(Token = "0x4001445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CultureInfo cInfo;

			[Token(Token = "0x6001709")]
			[Address(RVA = "0x1F141FC", Offset = "0x1F141FC", VA = "0x1F141FC")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x600170A")]
			[Address(RVA = "0x1F152F0", Offset = "0x1F152F0", VA = "0x1F152F0")]
			internal int <DOCounter>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x600170B")]
			[Address(RVA = "0x1F152F8", Offset = "0x1F152F8", VA = "0x1F152F8")]
			internal void <DOCounter>b__1(int x)
			{
			}
		}

		[Token(Token = "0x2000454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB068", Offset = "0xAFB068")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x600170C")]
			[Address(RVA = "0x1F14204", Offset = "0x1F14204", VA = "0x1F14204")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x600170D")]
			[Address(RVA = "0x1F15398", Offset = "0x1F15398", VA = "0x1F15398")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600170E")]
			[Address(RVA = "0x1F153BC", Offset = "0x1F153BC", VA = "0x1F153BC")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000455")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB078", Offset = "0xAFB078")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4001447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x600170F")]
			[Address(RVA = "0x1F1420C", Offset = "0x1F1420C", VA = "0x1F1420C")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6001710")]
			[Address(RVA = "0x1F153E0", Offset = "0x1F153E0", VA = "0x1F153E0")]
			internal string <DOText>b__0()
			{
				return null;
			}

			[Token(Token = "0x6001711")]
			[Address(RVA = "0x1F15404", Offset = "0x1F15404", VA = "0x1F15404")]
			internal void <DOText>b__1(string x)
			{
			}
		}

		[Token(Token = "0x2000456")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB088", Offset = "0xAFB088")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4001448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4001449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Graphic target;

			[Token(Token = "0x6001712")]
			[Address(RVA = "0x1F14400", Offset = "0x1F14400", VA = "0x1F14400")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6001713")]
			[Address(RVA = "0x1F15428", Offset = "0x1F15428", VA = "0x1F15428")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001714")]
			[Address(RVA = "0x1F15434", Offset = "0x1F15434", VA = "0x1F15434")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000457")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB098", Offset = "0xAFB098")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x400144A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x400144B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Image target;

			[Token(Token = "0x6001715")]
			[Address(RVA = "0x1F145F4", Offset = "0x1F145F4", VA = "0x1F145F4")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6001716")]
			[Address(RVA = "0x1F154F0", Offset = "0x1F154F0", VA = "0x1F154F0")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001717")]
			[Address(RVA = "0x1F154FC", Offset = "0x1F154FC", VA = "0x1F154FC")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB0A8", Offset = "0xAFB0A8")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x400144C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x400144D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Text target;

			[Token(Token = "0x6001718")]
			[Address(RVA = "0x1F147E8", Offset = "0x1F147E8", VA = "0x1F147E8")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x6001719")]
			[Address(RVA = "0x1F15600", Offset = "0x1F15600", VA = "0x1F15600")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600171A")]
			[Address(RVA = "0x1F1560C", Offset = "0x1F1560C", VA = "0x1F1560C")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x1F0C664", Offset = "0x1F0C664", VA = "0x1F0C664")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this CanvasGroup target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x1F0BFE8", Offset = "0x1F0BFE8", VA = "0x1F0BFE8")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x1F0C3EC", Offset = "0x1F0C3EC", VA = "0x1F0C3EC")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x1F117F4", Offset = "0x1F117F4", VA = "0x1F117F4")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x1F11960", Offset = "0x1F11960", VA = "0x1F11960")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x1F11AA4", Offset = "0x1F11AA4", VA = "0x1F11AA4")]
		public static TweenerCore<float, float, FloatOptions> DOFillAmount(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x1F11C0C", Offset = "0x1F11C0C", VA = "0x1F11C0C")]
		public static Sequence DOGradientColor(this Image target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x1F11DEC", Offset = "0x1F11DEC", VA = "0x1F11DEC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOFlexibleSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x1F11F50", Offset = "0x1F11F50", VA = "0x1F11F50")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMinSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x1F120B4", Offset = "0x1F120B4", VA = "0x1F120B4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPreferredSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x1F12218", Offset = "0x1F12218", VA = "0x1F12218")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Outline target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x1F12384", Offset = "0x1F12384", VA = "0x1F12384")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Outline target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x1F124C8", Offset = "0x1F124C8", VA = "0x1F124C8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOScale(this Outline target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x1F1261C", Offset = "0x1F1261C", VA = "0x1F1261C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPos(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x1F12780", Offset = "0x1F12780", VA = "0x1F12780")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x1F128F8", Offset = "0x1F128F8", VA = "0x1F128F8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x1F0B640", Offset = "0x1F0B640", VA = "0x1F0B640")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3D(this RectTransform target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x1F12A78", Offset = "0x1F12A78", VA = "0x1F12A78")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x1F12BFC", Offset = "0x1F12BFC", VA = "0x1F12BFC")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x1F12D80", Offset = "0x1F12D80", VA = "0x1F12D80")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DZ(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x1F12F04", Offset = "0x1F12F04", VA = "0x1F12F04")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMax(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x1F13068", Offset = "0x1F13068", VA = "0x1F13068")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMin(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x1F131CC", Offset = "0x1F131CC", VA = "0x1F131CC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivot(this RectTransform target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x1F13320", Offset = "0x1F13320", VA = "0x1F13320")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotX(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x1F1348C", Offset = "0x1F1348C", VA = "0x1F1348C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotY(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x1F0BD28", Offset = "0x1F0BD28", VA = "0x1F0BD28")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOSizeDelta(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x1F0C974", Offset = "0x1F0C974", VA = "0x1F0C974")]
		public static Tweener DOPunchAnchorPos(this RectTransform target, Vector2 punch, float duration, int vibrato = 10, float elasticity = 1f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x1F13608", Offset = "0x1F13608", VA = "0x1F13608")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, float strength = 100f, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x1F0CB24", Offset = "0x1F0CB24", VA = "0x1F0CB24")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, Vector2 strength, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x1F13798", Offset = "0x1F13798", VA = "0x1F13798")]
		public static Sequence DOJumpAnchorPos(this RectTransform target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x1F13B1C", Offset = "0x1F13B1C", VA = "0x1F13B1C")]
		public static Tweener DONormalizedPos(this ScrollRect target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x1F13C74", Offset = "0x1F13C74", VA = "0x1F13C74")]
		public static Tweener DOHorizontalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x1F13DBC", Offset = "0x1F13DBC", VA = "0x1F13DBC")]
		public static Tweener DOVerticalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x1F13F04", Offset = "0x1F13F04", VA = "0x1F13F04")]
		public static TweenerCore<float, float, FloatOptions> DOValue(this Slider target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x1F0C14C", Offset = "0x1F0C14C", VA = "0x1F0C14C")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x1F14060", Offset = "0x1F14060", VA = "0x1F14060")]
		public static TweenerCore<int, int, NoOptions> DOCounter(this Text target, int fromValue, int endValue, float duration, bool addThousandsSeparator = true, [Optional] CultureInfo culture)
		{
			return null;
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x1F0C528", Offset = "0x1F0C528", VA = "0x1F0C528")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x1F0C7A0", Offset = "0x1F0C7A0", VA = "0x1F0C7A0")]
		public static TweenerCore<string, string, StringOptions> DOText(this Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x1F14214", Offset = "0x1F14214", VA = "0x1F14214")]
		public static Tweener DOBlendableColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x1F14408", Offset = "0x1F14408", VA = "0x1F14408")]
		public static Tweener DOBlendableColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x1F145FC", Offset = "0x1F145FC", VA = "0x1F145FC")]
		public static Tweener DOBlendableColor(this Text target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x200030A")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x2000459")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB0B8", Offset = "0xAFB0B8")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x400144E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x400144F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x600171B")]
			[Address(RVA = "0x1F16438", Offset = "0x1F16438", VA = "0x1F16438")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x600171C")]
			[Address(RVA = "0x1F16BC8", Offset = "0x1F16BC8", VA = "0x1F16BC8")]
			internal Vector2 <DOOffset>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600171D")]
			[Address(RVA = "0x1F16BEC", Offset = "0x1F16BEC", VA = "0x1F16BEC")]
			internal void <DOOffset>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200045A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB0C8", Offset = "0xAFB0C8")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x4001451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x600171E")]
			[Address(RVA = "0x1F16600", Offset = "0x1F16600", VA = "0x1F16600")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x600171F")]
			[Address(RVA = "0x1F16C10", Offset = "0x1F16C10", VA = "0x1F16C10")]
			internal Vector2 <DOTiling>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001720")]
			[Address(RVA = "0x1F16C34", Offset = "0x1F16C34", VA = "0x1F16C34")]
			internal void <DOTiling>b__1(Vector2 x)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200045B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB0D8", Offset = "0xAFB0D8")]
		private struct <AsyncWaitForCompletion>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4001452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tween t;

			[Token(Token = "0x4001455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6001721")]
			[Address(RVA = "0x1F16C58", Offset = "0x1F16C58", VA = "0x1F16C58", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001722")]
			[Address(RVA = "0x1F16E9C", Offset = "0x1F16E9C", VA = "0x1F16E9C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200045C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB0E8", Offset = "0xAFB0E8")]
		private struct <AsyncWaitForRewind>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4001456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tween t;

			[Token(Token = "0x4001459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6001723")]
			[Address(RVA = "0x1F175AC", Offset = "0x1F175AC", VA = "0x1F175AC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001724")]
			[Address(RVA = "0x1F17814", Offset = "0x1F17814", VA = "0x1F17814", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200045D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB0F8", Offset = "0xAFB0F8")]
		private struct <AsyncWaitForKill>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x400145A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400145B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400145C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tween t;

			[Token(Token = "0x400145D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6001725")]
			[Address(RVA = "0x1F17100", Offset = "0x1F17100", VA = "0x1F17100", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001726")]
			[Address(RVA = "0x1F17330", Offset = "0x1F17330", VA = "0x1F17330", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200045E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB108", Offset = "0xAFB108")]
		private struct <AsyncWaitForElapsedLoops>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x400145E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400145F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tween t;

			[Token(Token = "0x4001461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int elapsedLoops;

			[Token(Token = "0x4001462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6001727")]
			[Address(RVA = "0x1F16EA8", Offset = "0x1F16EA8", VA = "0x1F16EA8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001728")]
			[Address(RVA = "0x1F170F4", Offset = "0x1F170F4", VA = "0x1F170F4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200045F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB118", Offset = "0xAFB118")]
		private struct <AsyncWaitForPosition>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4001463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tween t;

			[Token(Token = "0x4001466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float position;

			[Token(Token = "0x4001467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6001729")]
			[Address(RVA = "0x1F1733C", Offset = "0x1F1733C", VA = "0x1F1733C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600172A")]
			[Address(RVA = "0x1F175A0", Offset = "0x1F175A0", VA = "0x1F175A0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB128", Offset = "0xAFB128")]
		private struct <AsyncWaitForStart>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x4001468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400146A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tween t;

			[Token(Token = "0x400146B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x600172B")]
			[Address(RVA = "0x1F17820", Offset = "0x1F17820", VA = "0x1F17820", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600172C")]
			[Address(RVA = "0x1F17A58", Offset = "0x1F17A58", VA = "0x1F17A58", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x1F159DC", Offset = "0x1F159DC", VA = "0x1F159DC")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x1F15BB8", Offset = "0x1F15BB8", VA = "0x1F15BB8")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x1F15DA8", Offset = "0x1F15DA8", VA = "0x1F15DA8")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x1F15E70", Offset = "0x1F15E70", VA = "0x1F15E70")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x1F15F38", Offset = "0x1F15F38", VA = "0x1F15F38")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x1F16000", Offset = "0x1F16000", VA = "0x1F16000")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x1F160D8", Offset = "0x1F160D8", VA = "0x1F160D8")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x1F161B0", Offset = "0x1F161B0", VA = "0x1F161B0")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x1F16278", Offset = "0x1F16278", VA = "0x1F16278")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOOffset(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x1F16440", Offset = "0x1F16440", VA = "0x1F16440")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOTiling(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x1F16608", Offset = "0x1F16608", VA = "0x1F16608")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB013D8", Offset = "0xB013D8")]
		public static Task AsyncWaitForCompletion(this Tween t)
		{
			return null;
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x1F166F8", Offset = "0x1F166F8", VA = "0x1F166F8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB0144C", Offset = "0xB0144C")]
		public static Task AsyncWaitForRewind(this Tween t)
		{
			return null;
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x1F167E8", Offset = "0x1F167E8", VA = "0x1F167E8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB014C0", Offset = "0xB014C0")]
		public static Task AsyncWaitForKill(this Tween t)
		{
			return null;
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x1F168D8", Offset = "0x1F168D8", VA = "0x1F168D8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB01534", Offset = "0xB01534")]
		public static Task AsyncWaitForElapsedLoops(this Tween t, int elapsedLoops)
		{
			return null;
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x1F169D8", Offset = "0x1F169D8", VA = "0x1F169D8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB015A8", Offset = "0xB015A8")]
		public static Task AsyncWaitForPosition(this Tween t, float position)
		{
			return null;
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x1F16AD8", Offset = "0x1F16AD8", VA = "0x1F16AD8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB0161C", Offset = "0xB0161C")]
		public static Task AsyncWaitForStart(this Tween t)
		{
			return null;
		}
	}
	[Token(Token = "0x200030B")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x2000461")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x400146C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170000EC")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600172D")]
				[Address(RVA = "0x1F0DED8", Offset = "0x1F0DED8", VA = "0x1F0DED8", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600172E")]
			[Address(RVA = "0x1F0DF0C", Offset = "0x1F0DF0C", VA = "0x1F0DF0C")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000462")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x400146D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170000ED")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600172F")]
				[Address(RVA = "0x1F0E0A8", Offset = "0x1F0E0A8", VA = "0x1F0E0A8", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001730")]
			[Address(RVA = "0x1F0E10C", Offset = "0x1F0E10C", VA = "0x1F0E10C")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000463")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x400146E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170000EE")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001731")]
				[Address(RVA = "0x1F0DFC0", Offset = "0x1F0DFC0", VA = "0x1F0DFC0", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001732")]
			[Address(RVA = "0x1F0DFDC", Offset = "0x1F0DFDC", VA = "0x1F0DFDC")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000464")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x400146F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4001470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly int elapsedLoops;

			[Token(Token = "0x170000EF")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001733")]
				[Address(RVA = "0x1F0DF38", Offset = "0x1F0DF38", VA = "0x1F0DF38", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001734")]
			[Address(RVA = "0x1F0DF84", Offset = "0x1F0DF84", VA = "0x1F0DF84")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x2000465")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x4001471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4001472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly float position;

			[Token(Token = "0x170000F0")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001735")]
				[Address(RVA = "0x1F0E008", Offset = "0x1F0E008", VA = "0x1F0E008", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001736")]
			[Address(RVA = "0x1F0E06C", Offset = "0x1F0E06C", VA = "0x1F0E06C")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x2000466")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x4001473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170000F1")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001737")]
				[Address(RVA = "0x1F0E138", Offset = "0x1F0E138", VA = "0x1F0E138", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001738")]
			[Address(RVA = "0x1F0E16C", Offset = "0x1F0E16C", VA = "0x1F0E16C")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x200030C")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x2000467")]
		public static class Physics
		{
			[Token(Token = "0x6001739")]
			[Address(RVA = "0x1F17BA8", Offset = "0x1F17BA8", VA = "0x1F17BA8")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x600173A")]
			[Address(RVA = "0x1F17CB0", Offset = "0x1F17CB0", VA = "0x1F17CB0")]
			public static bool HasRigidbody2D(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x600173B")]
			[Address(RVA = "0x1F17D40", Offset = "0x1F17D40", VA = "0x1F17D40")]
			[Preserve]
			public static bool HasRigidbody(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x600173C")]
			[Address(RVA = "0x1F17DD0", Offset = "0x1F17DD0", VA = "0x1F17DD0")]
			[Preserve]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x1F17A64", Offset = "0x1F17A64", VA = "0x1F17A64")]
		[Preserve]
		public static void Init()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x1F17B08", Offset = "0x1F17B08", VA = "0x1F17B08")]
		[Preserve]
		private static void Preserver()
		{
		}
	}
	[Token(Token = "0x200030D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAFA460", Offset = "0xAFA460")]
	public class DOTweenAnimation : ABSAnimationComponent
	{
		[Token(Token = "0x2000468")]
		public enum AnimationType
		{
			[Token(Token = "0x4001475")]
			None,
			[Token(Token = "0x4001476")]
			Move,
			[Token(Token = "0x4001477")]
			LocalMove,
			[Token(Token = "0x4001478")]
			Rotate,
			[Token(Token = "0x4001479")]
			LocalRotate,
			[Token(Token = "0x400147A")]
			Scale,
			[Token(Token = "0x400147B")]
			Color,
			[Token(Token = "0x400147C")]
			Fade,
			[Token(Token = "0x400147D")]
			Text,
			[Token(Token = "0x400147E")]
			PunchPosition,
			[Token(Token = "0x400147F")]
			PunchRotation,
			[Token(Token = "0x4001480")]
			PunchScale,
			[Token(Token = "0x4001481")]
			ShakePosition,
			[Token(Token = "0x4001482")]
			ShakeRotation,
			[Token(Token = "0x4001483")]
			ShakeScale,
			[Token(Token = "0x4001484")]
			CameraAspect,
			[Token(Token = "0x4001485")]
			CameraBackgroundColor,
			[Token(Token = "0x4001486")]
			CameraFieldOfView,
			[Token(Token = "0x4001487")]
			CameraOrthoSize,
			[Token(Token = "0x4001488")]
			CameraPixelRect,
			[Token(Token = "0x4001489")]
			CameraRect,
			[Token(Token = "0x400148A")]
			UIWidthHeight
		}

		[Token(Token = "0x2000469")]
		public enum TargetType
		{
			[Token(Token = "0x400148C")]
			Unset,
			[Token(Token = "0x400148D")]
			Camera,
			[Token(Token = "0x400148E")]
			CanvasGroup,
			[Token(Token = "0x400148F")]
			Image,
			[Token(Token = "0x4001490")]
			Light,
			[Token(Token = "0x4001491")]
			RectTransform,
			[Token(Token = "0x4001492")]
			Renderer,
			[Token(Token = "0x4001493")]
			SpriteRenderer,
			[Token(Token = "0x4001494")]
			Rigidbody,
			[Token(Token = "0x4001495")]
			Rigidbody2D,
			[Token(Token = "0x4001496")]
			Text,
			[Token(Token = "0x4001497")]
			Transform,
			[Token(Token = "0x4001498")]
			tk2dBaseSprite,
			[Token(Token = "0x4001499")]
			tk2dTextMesh,
			[Token(Token = "0x400149A")]
			TextMeshPro,
			[Token(Token = "0x400149B")]
			TextMeshProUGUI
		}

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool targetIsSelf;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject targetGO;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool tweenTargetIsTargetGO;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float delay;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float duration;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Ease easeType;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AnimationCurve easeCurve;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public LoopType loopType;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int loops;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string id;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool isRelative;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool isFrom;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		public bool isIndependentUpdate;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		public bool autoKill;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool isActive;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		public bool isValid;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Component target;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AnimationType animationType;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public TargetType targetType;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public TargetType forcedTargetType;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool autoPlay;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		public bool useTargetAsV3;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float endValueFloat;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector3 endValueV3;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Vector2 endValueV2;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Color endValueColor;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string endValueString;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Rect endValueRect;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Transform endValueTransform;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool optionalBool0;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float optionalFloat0;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public int optionalInt0;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public RotateMode optionalRotationMode;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public ScrambleMode optionalScrambleMode;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public string optionalString;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool _tweenCreated;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int _playCount;

		[Token(Token = "0x14000013")]
		public static event Action<DOTweenAnimation> OnReset
		{
			[Token(Token = "0x600130F")]
			[Address(RVA = "0x1F09904", Offset = "0x1F09904", VA = "0x1F09904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB016B0", Offset = "0xB016B0")]
			add
			{
			}
			[Token(Token = "0x6001310")]
			[Address(RVA = "0x1F099B8", Offset = "0x1F099B8", VA = "0x1F099B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB016C0", Offset = "0xB016C0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x1F09A6C", Offset = "0x1F09A6C", VA = "0x1F09A6C")]
		private static void Dispatch_OnReset(DOTweenAnimation anim)
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x1F09AE0", Offset = "0x1F09AE0", VA = "0x1F09AE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x1F0B134", Offset = "0x1F0B134", VA = "0x1F0B134")]
		private void Start()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x1F0B178", Offset = "0x1F0B178", VA = "0x1F0B178")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x1F0B17C", Offset = "0x1F0B17C", VA = "0x1F0B17C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x1F09B30", Offset = "0x1F09B30", VA = "0x1F09B30")]
		public void CreateTween()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x1F0CCF0", Offset = "0x1F0CCF0", VA = "0x1F0CCF0", Slot = "4")]
		public override void DOPlay()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x1F0CD6C", Offset = "0x1F0CD6C", VA = "0x1F0CD6C", Slot = "5")]
		public override void DOPlayBackwards()
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x1F0CDE8", Offset = "0x1F0CDE8", VA = "0x1F0CDE8", Slot = "6")]
		public override void DOPlayForward()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x1F0CE64", Offset = "0x1F0CE64", VA = "0x1F0CE64", Slot = "7")]
		public override void DOPause()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x1F0CEE0", Offset = "0x1F0CEE0", VA = "0x1F0CEE0", Slot = "8")]
		public override void DOTogglePause()
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x1F0CF5C", Offset = "0x1F0CF5C", VA = "0x1F0CF5C", Slot = "9")]
		public override void DORewind()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x1F0D058", Offset = "0x1F0D058", VA = "0x1F0D058", Slot = "10")]
		public override void DORestart()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x1F0D068", Offset = "0x1F0D068", VA = "0x1F0D068", Slot = "11")]
		public override void DORestart(bool fromHere)
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x1F0D41C", Offset = "0x1F0D41C", VA = "0x1F0D41C", Slot = "12")]
		public override void DOComplete()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x1F0D49C", Offset = "0x1F0D49C", VA = "0x1F0D49C", Slot = "13")]
		public override void DOKill()
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x1F0D524", Offset = "0x1F0D524", VA = "0x1F0D524")]
		public void DOPlayById(string id)
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x1F0D5B0", Offset = "0x1F0D5B0", VA = "0x1F0D5B0")]
		public void DOPlayAllById(string id)
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x1F0D618", Offset = "0x1F0D618", VA = "0x1F0D618")]
		public void DOPauseAllById(string id)
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x1F0D680", Offset = "0x1F0D680", VA = "0x1F0D680")]
		public void DOPlayBackwardsById(string id)
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x1F0D70C", Offset = "0x1F0D70C", VA = "0x1F0D70C")]
		public void DOPlayBackwardsAllById(string id)
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x1F0D774", Offset = "0x1F0D774", VA = "0x1F0D774")]
		public void DOPlayForwardById(string id)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x1F0D800", Offset = "0x1F0D800", VA = "0x1F0D800")]
		public void DOPlayForwardAllById(string id)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x1F0D868", Offset = "0x1F0D868", VA = "0x1F0D868")]
		public void DOPlayNext()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x1F0D99C", Offset = "0x1F0D99C", VA = "0x1F0D99C")]
		public void DORewindAndPlayNext()
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x1F0DA2C", Offset = "0x1F0DA2C", VA = "0x1F0DA2C")]
		public void DORewindAllById(string id)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x1F0DAAC", Offset = "0x1F0DAAC", VA = "0x1F0DAAC")]
		public void DORestartById(string id)
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x1F0DB48", Offset = "0x1F0DB48", VA = "0x1F0DB48")]
		public void DORestartAllById(string id)
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x1F0DBCC", Offset = "0x1F0DBCC", VA = "0x1F0DBCC")]
		public List<Tween> GetTweens()
		{
			return null;
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x1F0B1D8", Offset = "0x1F0B1D8", VA = "0x1F0B1D8")]
		public static TargetType TypeToDOTargetType(Type t)
		{
			return default(TargetType);
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x1F0DCB8", Offset = "0x1F0DCB8", VA = "0x1F0DCB8")]
		public Tween CreateEditorPreview()
		{
			return null;
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x1F0B1C0", Offset = "0x1F0B1C0", VA = "0x1F0B1C0")]
		private GameObject GetTweenGO()
		{
			return null;
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x1F0D184", Offset = "0x1F0D184", VA = "0x1F0D184")]
		private void ReEvaluateRelativeTween()
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x1F0DCF4", Offset = "0x1F0DCF4", VA = "0x1F0DCF4")]
		public DOTweenAnimation()
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x1F0DED0", Offset = "0x1F0DED0", VA = "0x1F0DED0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB016D0", Offset = "0xB016D0")]
		private void <CreateTween>b__47_0()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public static class DOTweenAnimationExtensions
	{
		[Token(Token = "0x6001334")]
		public static bool IsSameOrSubclassOf<T>(this Component t)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200030F")]
	public static class DOTweenProShortcuts
	{
		[Token(Token = "0x200046A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB138", Offset = "0xAFB138")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400149C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform target;

			[Token(Token = "0x600173D")]
			[Address(RVA = "0x1F18278", Offset = "0x1F18278", VA = "0x1F18278")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600173E")]
			[Address(RVA = "0x1F185A4", Offset = "0x1F185A4", VA = "0x1F185A4")]
			internal Vector3 <DOSpiral>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600173F")]
			[Address(RVA = "0x1F185C0", Offset = "0x1F185C0", VA = "0x1F185C0")]
			internal void <DOSpiral>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200046B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB148", Offset = "0xAFB148")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400149D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6001740")]
			[Address(RVA = "0x1F1859C", Offset = "0x1F1859C", VA = "0x1F1859C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001741")]
			[Address(RVA = "0x1F185DC", Offset = "0x1F185DC", VA = "0x1F185DC")]
			internal Vector3 <DOSpiral>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x1F17F18", Offset = "0x1F17F18", VA = "0x1F17F18")]
		static DOTweenProShortcuts()
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x1F17F68", Offset = "0x1F17F68", VA = "0x1F17F68")]
		public static Tweener DOSpiral(this Transform target, float duration, [Optional] Vector3? axis, SpiralMode mode = SpiralMode.Expand, float speed = 1f, float frequency = 10f, float depth = 0f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x1F18280", Offset = "0x1F18280", VA = "0x1F18280")]
		public static Tweener DOSpiral(this Rigidbody target, float duration, [Optional] Vector3? axis, SpiralMode mode = SpiralMode.Expand, float speed = 1f, float frequency = 10f, float depth = 0f, bool snapping = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000310")]
	public enum TMPSkewSpanMode
	{
		[Token(Token = "0x4001002")]
		Default,
		[Token(Token = "0x4001003")]
		AsMaxSkewFactor
	}
	[Token(Token = "0x2000311")]
	public static class ShortcutExtensionsTMPText
	{
		[Token(Token = "0x200046C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB158", Offset = "0xAFB158")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400149E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text target;

			[Token(Token = "0x6001742")]
			[Address(RVA = "0x1EF500C", Offset = "0x1EF500C", VA = "0x1EF500C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001743")]
			[Address(RVA = "0x1EF5DB4", Offset = "0x1EF5DB4", VA = "0x1EF5DB4")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001744")]
			[Address(RVA = "0x1EF5DD8", Offset = "0x1EF5DD8", VA = "0x1EF5DD8")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200046D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB168", Offset = "0xAFB168")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400149F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text target;

			[Token(Token = "0x6001745")]
			[Address(RVA = "0x1EF5188", Offset = "0x1EF5188", VA = "0x1EF5188")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001746")]
			[Address(RVA = "0x1EF5E44", Offset = "0x1EF5E44", VA = "0x1EF5E44")]
			internal Color <DOFaceColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001747")]
			[Address(RVA = "0x1EF5E70", Offset = "0x1EF5E70", VA = "0x1EF5E70")]
			internal void <DOFaceColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200046E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB178", Offset = "0xAFB178")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40014A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text target;

			[Token(Token = "0x6001748")]
			[Address(RVA = "0x1EF5304", Offset = "0x1EF5304", VA = "0x1EF5304")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001749")]
			[Address(RVA = "0x1EF5EA8", Offset = "0x1EF5EA8", VA = "0x1EF5EA8")]
			internal Color <DOOutlineColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600174A")]
			[Address(RVA = "0x1EF5ED4", Offset = "0x1EF5ED4", VA = "0x1EF5ED4")]
			internal void <DOOutlineColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200046F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB188", Offset = "0xAFB188")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40014A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text target;

			[Token(Token = "0x600174B")]
			[Address(RVA = "0x1EF5534", Offset = "0x1EF5534", VA = "0x1EF5534")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600174C")]
			[Address(RVA = "0x1EF5F0C", Offset = "0x1EF5F0C", VA = "0x1EF5F0C")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600174D")]
			[Address(RVA = "0x1EF5F30", Offset = "0x1EF5F30", VA = "0x1EF5F30")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB198", Offset = "0xAFB198")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40014A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text target;

			[Token(Token = "0x600174E")]
			[Address(RVA = "0x1EF5678", Offset = "0x1EF5678", VA = "0x1EF5678")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600174F")]
			[Address(RVA = "0x1EF5F54", Offset = "0x1EF5F54", VA = "0x1EF5F54")]
			internal Color <DOFaceFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001750")]
			[Address(RVA = "0x1EF5F80", Offset = "0x1EF5F80", VA = "0x1EF5F80")]
			internal void <DOFaceFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000471")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB1A8", Offset = "0xAFB1A8")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40014A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x6001751")]
			[Address(RVA = "0x1EF580C", Offset = "0x1EF580C", VA = "0x1EF580C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001752")]
			[Address(RVA = "0x1EF5FB8", Offset = "0x1EF5FB8", VA = "0x1EF5FB8")]
			internal Vector3 <DOScale>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001753")]
			[Address(RVA = "0x1EF5FD4", Offset = "0x1EF5FD4", VA = "0x1EF5FD4")]
			internal void <DOScale>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000472")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB1B8", Offset = "0xAFB1B8")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40014A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int v;

			[Token(Token = "0x40014A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TMP_Text target;

			[Token(Token = "0x40014A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool addThousandsSeparator;

			[Token(Token = "0x40014A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CultureInfo cInfo;

			[Token(Token = "0x6001754")]
			[Address(RVA = "0x1EF59B0", Offset = "0x1EF59B0", VA = "0x1EF59B0")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001755")]
			[Address(RVA = "0x1EF5FF0", Offset = "0x1EF5FF0", VA = "0x1EF5FF0")]
			internal int <DOCounter>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x6001756")]
			[Address(RVA = "0x1EF5FF8", Offset = "0x1EF5FF8", VA = "0x1EF5FF8")]
			internal void <DOCounter>b__1(int x)
			{
			}
		}

		[Token(Token = "0x2000473")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB1C8", Offset = "0xAFB1C8")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40014A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text target;

			[Token(Token = "0x6001757")]
			[Address(RVA = "0x1EF5AF4", Offset = "0x1EF5AF4", VA = "0x1EF5AF4")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001758")]
			[Address(RVA = "0x1EF6098", Offset = "0x1EF6098", VA = "0x1EF6098")]
			internal float <DOFontSize>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001759")]
			[Address(RVA = "0x1EF60B4", Offset = "0x1EF60B4", VA = "0x1EF60B4")]
			internal void <DOFontSize>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB1D8", Offset = "0xAFB1D8")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x40014A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text target;

			[Token(Token = "0x600175A")]
			[Address(RVA = "0x1EF5C38", Offset = "0x1EF5C38", VA = "0x1EF5C38")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x600175B")]
			[Address(RVA = "0x1EF60D0", Offset = "0x1EF60D0", VA = "0x1EF60D0")]
			internal int <DOMaxVisibleCharacters>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x600175C")]
			[Address(RVA = "0x1EF60EC", Offset = "0x1EF60EC", VA = "0x1EF60EC")]
			internal void <DOMaxVisibleCharacters>b__1(int x)
			{
			}
		}

		[Token(Token = "0x2000475")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB1E8", Offset = "0xAFB1E8")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40014AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text target;

			[Token(Token = "0x600175D")]
			[Address(RVA = "0x1EF5DAC", Offset = "0x1EF5DAC", VA = "0x1EF5DAC")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x600175E")]
			[Address(RVA = "0x1EF5DFC", Offset = "0x1EF5DFC", VA = "0x1EF5DFC")]
			internal string <DOText>b__0()
			{
				return null;
			}

			[Token(Token = "0x600175F")]
			[Address(RVA = "0x1EF5E20", Offset = "0x1EF5E20", VA = "0x1EF5E20")]
			internal void <DOText>b__1(string x)
			{
			}
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x1EF4EA8", Offset = "0x1EF4EA8", VA = "0x1EF4EA8")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this TMP_Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x1EF5014", Offset = "0x1EF5014", VA = "0x1EF5014")]
		public static TweenerCore<Color, Color, ColorOptions> DOFaceColor(this TMP_Text target, Color32 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x1EF5190", Offset = "0x1EF5190", VA = "0x1EF5190")]
		public static TweenerCore<Color, Color, ColorOptions> DOOutlineColor(this TMP_Text target, Color32 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x1EF530C", Offset = "0x1EF530C", VA = "0x1EF530C")]
		public static TweenerCore<Color, Color, ColorOptions> DOGlowColor(this TMP_Text target, Color endValue, float duration, bool useSharedMaterial = false)
		{
			return null;
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x1EF53F8", Offset = "0x1EF53F8", VA = "0x1EF53F8")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this TMP_Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x1EF553C", Offset = "0x1EF553C", VA = "0x1EF553C")]
		public static TweenerCore<Color, Color, ColorOptions> DOFaceFade(this TMP_Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x1EF5680", Offset = "0x1EF5680", VA = "0x1EF5680")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOScale(this TMP_Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x1EF5814", Offset = "0x1EF5814", VA = "0x1EF5814")]
		public static TweenerCore<int, int, NoOptions> DOCounter(this TMP_Text target, int fromValue, int endValue, float duration, bool addThousandsSeparator = true, [Optional] CultureInfo culture)
		{
			return null;
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x1EF59B8", Offset = "0x1EF59B8", VA = "0x1EF59B8")]
		public static TweenerCore<float, float, FloatOptions> DOFontSize(this TMP_Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x1EF5AFC", Offset = "0x1EF5AFC", VA = "0x1EF5AFC")]
		public static TweenerCore<int, int, NoOptions> DOMaxVisibleCharacters(this TMP_Text target, int endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x1EF5C40", Offset = "0x1EF5C40", VA = "0x1EF5C40")]
		public static TweenerCore<string, string, StringOptions> DOText(this TMP_Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}
	}
	[Token(Token = "0x2000312")]
	public class DOTweenTMPAnimator : IDisposable
	{
		[Token(Token = "0x2000476")]
		private struct CharVertices
		{
			[Token(Token = "0x40014AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 bottomLeft;

			[Token(Token = "0x40014AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 topLeft;

			[Token(Token = "0x40014AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 topRight;

			[Token(Token = "0x40014AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 bottomRight;

			[Token(Token = "0x6001760")]
			[Address(RVA = "0x1EF48A4", Offset = "0x1EF48A4", VA = "0x1EF48A4")]
			public CharVertices(Vector3 bottomLeft, Vector3 topLeft, Vector3 topRight, Vector3 bottomRight)
			{
			}
		}

		[Token(Token = "0x2000477")]
		private struct CharTransform
		{
			[Token(Token = "0x40014AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int charIndex;

			[Token(Token = "0x40014B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFD9D0", Offset = "0xAFD9D0")]
			private bool <isVisible>k__BackingField;

			[Token(Token = "0x40014B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 offset;

			[Token(Token = "0x40014B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Quaternion rotation;

			[Token(Token = "0x40014B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 scale;

			[Token(Token = "0x40014B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 _topLeftShift;

			[Token(Token = "0x40014B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 _topRightShift;

			[Token(Token = "0x40014B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 _bottomLeftShift;

			[Token(Token = "0x40014B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 _bottomRightShift;

			[Token(Token = "0x40014B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector3 _charMidBaselineOffset;

			[Token(Token = "0x40014B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private int _matIndex;

			[Token(Token = "0x40014BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int _firstVertexIndex;

			[Token(Token = "0x40014BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private TMP_MeshInfo _meshInfo;

			[Token(Token = "0x170000F2")]
			public bool isVisible
			{
				[Token(Token = "0x6001761")]
				[Address(RVA = "0x1EF40E8", Offset = "0x1EF40E8", VA = "0x1EF40E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB029D0", Offset = "0xB029D0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001762")]
				[Address(RVA = "0x1EF40F0", Offset = "0x1EF40F0", VA = "0x1EF40F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB029E0", Offset = "0xB029E0")]
				private set
				{
				}
			}

			[Token(Token = "0x6001763")]
			[Address(RVA = "0x1EF40FC", Offset = "0x1EF40FC", VA = "0x1EF40FC")]
			public CharTransform(int charIndex, TMP_TextInfo textInfo, TMP_MeshInfo[] cachedMeshInfos)
			{
			}

			[Token(Token = "0x6001764")]
			[Address(RVA = "0x1EF41E8", Offset = "0x1EF41E8", VA = "0x1EF41E8")]
			public void Refresh(TMP_TextInfo textInfo, TMP_MeshInfo[] cachedMeshInfos)
			{
			}

			[Token(Token = "0x6001765")]
			[Address(RVA = "0x1EF43CC", Offset = "0x1EF43CC", VA = "0x1EF43CC")]
			public void ResetAll(TMP_Text target, TMP_MeshInfo[] meshInfos, TMP_MeshInfo[] cachedMeshInfos)
			{
			}

			[Token(Token = "0x6001766")]
			[Address(RVA = "0x1EF470C", Offset = "0x1EF470C", VA = "0x1EF470C")]
			public void ResetTransformationData()
			{
			}

			[Token(Token = "0x6001767")]
			[Address(RVA = "0x1EF440C", Offset = "0x1EF440C", VA = "0x1EF440C")]
			public void ResetGeometry(TMP_Text target, TMP_MeshInfo[] cachedMeshInfos)
			{
			}

			[Token(Token = "0x6001768")]
			[Address(RVA = "0x1EF45A4", Offset = "0x1EF45A4", VA = "0x1EF45A4")]
			public void ResetColors(TMP_Text target, TMP_MeshInfo[] meshInfos)
			{
			}

			[Token(Token = "0x6001769")]
			[Address(RVA = "0x1EF2444", Offset = "0x1EF2444", VA = "0x1EF2444")]
			public Color32 GetColor(TMP_MeshInfo[] meshInfos)
			{
				return default(Color32);
			}

			[Token(Token = "0x600176A")]
			[Address(RVA = "0x1EF47DC", Offset = "0x1EF47DC", VA = "0x1EF47DC")]
			public CharVertices GetVertices()
			{
				return default(CharVertices);
			}

			[Token(Token = "0x600176B")]
			[Address(RVA = "0x1EF25A4", Offset = "0x1EF25A4", VA = "0x1EF25A4")]
			public void UpdateAlpha(TMP_Text target, Color alphaColor, TMP_MeshInfo[] meshInfos, bool apply = true)
			{
			}

			[Token(Token = "0x600176C")]
			[Address(RVA = "0x1EF2890", Offset = "0x1EF2890", VA = "0x1EF2890")]
			public void UpdateColor(TMP_Text target, Color32 color, TMP_MeshInfo[] meshInfos, bool apply = true)
			{
			}

			[Token(Token = "0x600176D")]
			[Address(RVA = "0x1EF2B58", Offset = "0x1EF2B58", VA = "0x1EF2B58")]
			public void UpdateGeometry(TMP_Text target, Vector3 offset, Quaternion rotation, Vector3 scale, TMP_MeshInfo[] cachedMeshInfos, bool apply = true)
			{
			}

			[Token(Token = "0x600176E")]
			[Address(RVA = "0x1EF48D4", Offset = "0x1EF48D4", VA = "0x1EF48D4")]
			public void ShiftVertices(TMP_Text target, Vector3 topLeftShift, Vector3 topRightShift, Vector3 bottomLeftShift, Vector3 bottomRightShift)
			{
			}

			[Token(Token = "0x600176F")]
			[Address(RVA = "0x1EF4C28", Offset = "0x1EF4C28", VA = "0x1EF4C28")]
			public void ResetVerticesShift(TMP_Text target)
			{
			}
		}

		[Token(Token = "0x2000478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB1F8", Offset = "0xAFB1F8")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x40014BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x40014BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x6001770")]
			[Address(RVA = "0x1EF2364", Offset = "0x1EF2364", VA = "0x1EF2364")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6001771")]
			[Address(RVA = "0x1EF236C", Offset = "0x1EF236C", VA = "0x1EF236C")]
			internal Color <DOFadeChar>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001772")]
			[Address(RVA = "0x1EF24A0", Offset = "0x1EF24A0", VA = "0x1EF24A0")]
			internal void <DOFadeChar>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000479")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB208", Offset = "0xAFB208")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x40014BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x40014BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x6001773")]
			[Address(RVA = "0x1EF2694", Offset = "0x1EF2694", VA = "0x1EF2694")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6001774")]
			[Address(RVA = "0x1EF269C", Offset = "0x1EF269C", VA = "0x1EF269C")]
			internal Color <DOColorChar>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001775")]
			[Address(RVA = "0x1EF2774", Offset = "0x1EF2774", VA = "0x1EF2774")]
			internal void <DOColorChar>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200047A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB218", Offset = "0xAFB218")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x40014C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x40014C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x6001776")]
			[Address(RVA = "0x1EF2968", Offset = "0x1EF2968", VA = "0x1EF2968")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6001777")]
			[Address(RVA = "0x1EF2970", Offset = "0x1EF2970", VA = "0x1EF2970")]
			internal Vector3 <DOOffsetChar>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001778")]
			[Address(RVA = "0x1EF29F4", Offset = "0x1EF29F4", VA = "0x1EF29F4")]
			internal void <DOOffsetChar>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200047B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB228", Offset = "0xAFB228")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x40014C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x40014C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x6001779")]
			[Address(RVA = "0x1EF3068", Offset = "0x1EF3068", VA = "0x1EF3068")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x600177A")]
			[Address(RVA = "0x1EF3070", Offset = "0x1EF3070", VA = "0x1EF3070")]
			internal Quaternion <DORotateChar>b__0()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x600177B")]
			[Address(RVA = "0x1EF30F4", Offset = "0x1EF30F4", VA = "0x1EF30F4")]
			internal void <DORotateChar>b__1(Quaternion x)
			{
			}
		}

		[Token(Token = "0x200047C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB238", Offset = "0xAFB238")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x40014C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x40014C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x600177C")]
			[Address(RVA = "0x1EF3260", Offset = "0x1EF3260", VA = "0x1EF3260")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x600177D")]
			[Address(RVA = "0x1EF3268", Offset = "0x1EF3268", VA = "0x1EF3268")]
			internal Vector3 <DOScaleChar>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600177E")]
			[Address(RVA = "0x1EF32EC", Offset = "0x1EF32EC", VA = "0x1EF32EC")]
			internal void <DOScaleChar>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200047D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB248", Offset = "0xAFB248")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x40014C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x40014C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x600177F")]
			[Address(RVA = "0x1EF3440", Offset = "0x1EF3440", VA = "0x1EF3440")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6001780")]
			[Address(RVA = "0x1EF3448", Offset = "0x1EF3448", VA = "0x1EF3448")]
			internal Vector3 <DOPunchCharOffset>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001781")]
			[Address(RVA = "0x1EF34CC", Offset = "0x1EF34CC", VA = "0x1EF34CC")]
			internal void <DOPunchCharOffset>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200047E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB258", Offset = "0xAFB258")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x40014C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x40014C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x6001782")]
			[Address(RVA = "0x1EF3630", Offset = "0x1EF3630", VA = "0x1EF3630")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6001783")]
			[Address(RVA = "0x1EF3638", Offset = "0x1EF3638", VA = "0x1EF3638")]
			internal Vector3 <DOPunchCharRotation>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001784")]
			[Address(RVA = "0x1EF36E8", Offset = "0x1EF36E8", VA = "0x1EF36E8")]
			internal void <DOPunchCharRotation>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200047F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB268", Offset = "0xAFB268")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x40014CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x40014CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x6001785")]
			[Address(RVA = "0x1EF38B4", Offset = "0x1EF38B4", VA = "0x1EF38B4")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x6001786")]
			[Address(RVA = "0x1EF38BC", Offset = "0x1EF38BC", VA = "0x1EF38BC")]
			internal Vector3 <DOPunchCharScale>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001787")]
			[Address(RVA = "0x1EF3940", Offset = "0x1EF3940", VA = "0x1EF3940")]
			internal void <DOPunchCharScale>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB278", Offset = "0xAFB278")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x40014CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x40014CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x6001788")]
			[Address(RVA = "0x1EF3A94", Offset = "0x1EF3A94", VA = "0x1EF3A94")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x6001789")]
			[Address(RVA = "0x1EF3A9C", Offset = "0x1EF3A9C", VA = "0x1EF3A9C")]
			internal Vector3 <DOShakeCharOffset>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600178A")]
			[Address(RVA = "0x1EF3B20", Offset = "0x1EF3B20", VA = "0x1EF3B20")]
			internal void <DOShakeCharOffset>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000481")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB288", Offset = "0xAFB288")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x40014CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x40014CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x600178B")]
			[Address(RVA = "0x1EF3C84", Offset = "0x1EF3C84", VA = "0x1EF3C84")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x600178C")]
			[Address(RVA = "0x1EF3C8C", Offset = "0x1EF3C8C", VA = "0x1EF3C8C")]
			internal Vector3 <DOShakeCharRotation>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600178D")]
			[Address(RVA = "0x1EF3D3C", Offset = "0x1EF3D3C", VA = "0x1EF3D3C")]
			internal void <DOShakeCharRotation>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000482")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB298", Offset = "0xAFB298")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x40014D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x40014D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x600178E")]
			[Address(RVA = "0x1EF3F08", Offset = "0x1EF3F08", VA = "0x1EF3F08")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x600178F")]
			[Address(RVA = "0x1EF3F10", Offset = "0x1EF3F10", VA = "0x1EF3F10")]
			internal Vector3 <DOShakeCharScale>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001790")]
			[Address(RVA = "0x1EF3F94", Offset = "0x1EF3F94", VA = "0x1EF3F94")]
			internal void <DOShakeCharScale>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFD910", Offset = "0xAFD910")]
		private TMP_Text <target>k__BackingField;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFD920", Offset = "0xAFD920")]
		private TMP_TextInfo <textInfo>k__BackingField;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<CharTransform> _charTransforms;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_MeshInfo[] _cachedMeshInfos;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _ignoreTextChangedEvent;

		[Token(Token = "0x1700007B")]
		public TMP_Text target
		{
			[Token(Token = "0x6001343")]
			[Address(RVA = "0x1F185F8", Offset = "0x1F185F8", VA = "0x1F185F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB017C0", Offset = "0xB017C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001344")]
			[Address(RVA = "0x1F18600", Offset = "0x1F18600", VA = "0x1F18600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB017D0", Offset = "0xB017D0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public TMP_TextInfo textInfo
		{
			[Token(Token = "0x6001345")]
			[Address(RVA = "0x1F18608", Offset = "0x1F18608", VA = "0x1F18608")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB017E0", Offset = "0xB017E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001346")]
			[Address(RVA = "0x1F18610", Offset = "0x1F18610", VA = "0x1F18610")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB017F0", Offset = "0xB017F0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x1F18618", Offset = "0x1F18618", VA = "0x1F18618")]
		public DOTweenTMPAnimator(TMP_Text target)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x1F18990", Offset = "0x1F18990", VA = "0x1F18990", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x1F18760", Offset = "0x1F18760", VA = "0x1F18760")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x1F18A78", Offset = "0x1F18A78", VA = "0x1F18A78")]
		public void Reset()
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x1F18B60", Offset = "0x1F18B60", VA = "0x1F18B60")]
		private void OnTextChanged(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x1F18C30", Offset = "0x1F18C30", VA = "0x1F18C30")]
		private bool ValidateChar(int charIndex, bool isTween = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x1F18DB8", Offset = "0x1F18DB8", VA = "0x1F18DB8")]
		private bool ValidateSpan(int fromCharIndex, int toCharIndex, out int firstVisibleCharIndex, out int lastVisibleCharIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x1F18F24", Offset = "0x1F18F24", VA = "0x1F18F24")]
		public void SkewSpanX(int fromCharIndex, int toCharIndex, float skewFactor, bool skewTop = true)
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x1F192E4", Offset = "0x1F192E4", VA = "0x1F192E4")]
		public void SkewSpanY(int fromCharIndex, int toCharIndex, float skewFactor, TMPSkewSpanMode mode = TMPSkewSpanMode.Default, bool skewRight = true)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x1F19BD0", Offset = "0x1F19BD0", VA = "0x1F19BD0")]
		public Color GetCharColor(int charIndex)
		{
			return default(Color);
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x1F19CB4", Offset = "0x1F19CB4", VA = "0x1F19CB4")]
		public Vector3 GetCharOffset(int charIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x1F19D74", Offset = "0x1F19D74", VA = "0x1F19D74")]
		public Vector3 GetCharRotation(int charIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x1F19E64", Offset = "0x1F19E64", VA = "0x1F19E64")]
		public Vector3 GetCharScale(int charIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x1F19F24", Offset = "0x1F19F24", VA = "0x1F19F24")]
		public void SetCharColor(int charIndex, Color32 color)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x1F19A78", Offset = "0x1F19A78", VA = "0x1F19A78")]
		public void SetCharOffset(int charIndex, Vector3 offset)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x1F1A050", Offset = "0x1F1A050", VA = "0x1F1A050")]
		public void SetCharRotation(int charIndex, Vector3 rotation)
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x1F1A208", Offset = "0x1F1A208", VA = "0x1F1A208")]
		public void SetCharScale(int charIndex, Vector3 scale)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x1F1A350", Offset = "0x1F1A350", VA = "0x1F1A350")]
		public void ShiftCharVertices(int charIndex, Vector3 topLeftShift, Vector3 topRightShift, Vector3 bottomLeftShift, Vector3 bottomRightShift)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x1F19094", Offset = "0x1F19094", VA = "0x1F19094")]
		public float SkewCharX(int charIndex, float skewFactor, bool skewTop = true)
		{
			return default(float);
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x1F197D0", Offset = "0x1F197D0", VA = "0x1F197D0")]
		public float SkewCharY(int charIndex, float skewFactor, bool skewRight = true, bool fixedSkew = false)
		{
			return default(float);
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x1F1A4CC", Offset = "0x1F1A4CC", VA = "0x1F1A4CC")]
		public void ResetVerticesShift(int charIndex)
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x1F1A5D8", Offset = "0x1F1A5D8", VA = "0x1F1A5D8")]
		public TweenerCore<Color, Color, ColorOptions> DOFadeChar(int charIndex, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x1F1A728", Offset = "0x1F1A728", VA = "0x1F1A728")]
		public TweenerCore<Color, Color, ColorOptions> DOColorChar(int charIndex, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x1F1A8A8", Offset = "0x1F1A8A8", VA = "0x1F1A8A8")]
		public TweenerCore<Vector3, Vector3, VectorOptions> DOOffsetChar(int charIndex, Vector3 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x1F1AA14", Offset = "0x1F1AA14", VA = "0x1F1AA14")]
		public TweenerCore<Quaternion, Vector3, QuaternionOptions> DORotateChar(int charIndex, Vector3 endValue, float duration, RotateMode mode = RotateMode.Fast)
		{
			return null;
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x1F1AB7C", Offset = "0x1F1AB7C", VA = "0x1F1AB7C")]
		public TweenerCore<Vector3, Vector3, VectorOptions> DOScaleChar(int charIndex, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x1F1ABE4", Offset = "0x1F1ABE4", VA = "0x1F1ABE4")]
		public TweenerCore<Vector3, Vector3, VectorOptions> DOScaleChar(int charIndex, Vector3 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x1F1AD50", Offset = "0x1F1AD50", VA = "0x1F1AD50")]
		public Tweener DOPunchCharOffset(int charIndex, Vector3 punch, float duration, int vibrato = 10, float elasticity = 1f)
		{
			return null;
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x1F1AF40", Offset = "0x1F1AF40", VA = "0x1F1AF40")]
		public Tweener DOPunchCharRotation(int charIndex, Vector3 punch, float duration, int vibrato = 10, float elasticity = 1f)
		{
			return null;
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x1F1B130", Offset = "0x1F1B130", VA = "0x1F1B130")]
		public Tweener DOPunchCharScale(int charIndex, float punch, float duration, int vibrato = 10, float elasticity = 1f)
		{
			return null;
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x1F1B1B0", Offset = "0x1F1B1B0", VA = "0x1F1B1B0")]
		public Tweener DOPunchCharScale(int charIndex, Vector3 punch, float duration, int vibrato = 10, float elasticity = 1f)
		{
			return null;
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x1F1B3A0", Offset = "0x1F1B3A0", VA = "0x1F1B3A0")]
		public Tweener DOShakeCharOffset(int charIndex, float duration, float strength, int vibrato = 10, float randomness = 90f, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x1F1B428", Offset = "0x1F1B428", VA = "0x1F1B428")]
		public Tweener DOShakeCharOffset(int charIndex, float duration, Vector3 strength, int vibrato = 10, float randomness = 90f, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x1F1B628", Offset = "0x1F1B628", VA = "0x1F1B628")]
		public Tweener DOShakeCharRotation(int charIndex, float duration, Vector3 strength, int vibrato = 10, float randomness = 90f, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x1F1B828", Offset = "0x1F1B828", VA = "0x1F1B828")]
		public Tweener DOShakeCharScale(int charIndex, float duration, float strength, int vibrato = 10, float randomness = 90f, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x1F1B8B0", Offset = "0x1F1B8B0", VA = "0x1F1B8B0")]
		public Tweener DOShakeCharScale(int charIndex, float duration, Vector3 strength, int vibrato = 10, float randomness = 90f, bool fadeOut = true)
		{
			return null;
		}
	}
}
