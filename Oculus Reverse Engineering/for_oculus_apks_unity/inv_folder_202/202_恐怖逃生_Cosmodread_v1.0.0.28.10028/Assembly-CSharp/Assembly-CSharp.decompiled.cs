using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using AITasks;
using AmplifyColor;
using Bhaptics.Tact;
using Bhaptics.Tact.Unity;
using Forge3D;
using Il2CppDummyDll;
using NaughtyAttributes;
using Oculus.Platform;
using Oculus.Platform.Models;
using RootMotion.FinalIK;
using SimpleIK;
using TMPro;
using Triangulator.Geometry;
using TypeSafe;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.PostProcessing;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnitySA.Utility;
using VLB;
using VRInteraction;
using VRInteraction.UI;
using Valve.VR.InteractionSystem;
using WDG;
using WDG.Occlusion;
using ch.sycoforge.Decal;
using ch.sycoforge.Decal.Projectors.Geometry;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public class BakeryDirectLight : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color color;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float intensity;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float shadowSpread;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int samples;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int bitmask;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool bakeToIndirect;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool shadowmask;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool shadowmaskDenoise;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float indirectIntensity;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int UID;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xAC8EC0", Offset = "0xAC8EC0", VA = "0xAC8EC0")]
	public BakeryDirectLight()
	{
	}
}
[Token(Token = "0x2000003")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public class BakeryLightMesh : MonoBehaviour
{
	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int UID;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<MeshFilter> All;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color color;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float intensity;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D texture;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float cutoff;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int samples;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int samples2;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int bitmask;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool selfShadow;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool bakeToIndirect;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float indirectIntensity;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int lmid;

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xAC8F10", Offset = "0xAC8F10", VA = "0xAC8F10")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xAC900C", Offset = "0xAC900C", VA = "0xAC900C")]
	public BakeryLightMesh()
	{
	}
}
[Token(Token = "0x2000004")]
public struct BakeryLightmapGroupPlain
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string name;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int resolution;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int id;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int renderMode;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int renderDirMode;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool vertexBake;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isImplicit;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool computeSSS;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int sssSamples;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sssDensity;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float sssR;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float sssG;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float sssB;
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x75761C", Offset = "0x75761C")]
public class BakeryLightmapGroup : ScriptableObject
{
	[Token(Token = "0x2000302")]
	public enum ftLMGroupMode
	{
		[Token(Token = "0x40017C7")]
		OriginalUV,
		[Token(Token = "0x40017C8")]
		PackAtlas,
		[Token(Token = "0x40017C9")]
		Vertex
	}

	[Token(Token = "0x2000303")]
	public enum RenderMode
	{
		[Token(Token = "0x40017CB")]
		FullLighting = 0,
		[Token(Token = "0x40017CC")]
		Indirect = 1,
		[Token(Token = "0x40017CD")]
		Shadowmask = 2,
		[Token(Token = "0x40017CE")]
		Auto = 1000
	}

	[Token(Token = "0x2000304")]
	public enum RenderDirMode
	{
		[Token(Token = "0x40017D0")]
		None = 0,
		[Token(Token = "0x40017D1")]
		BakedNormalMaps = 1,
		[Token(Token = "0x40017D2")]
		DominantDirection = 2,
		[Token(Token = "0x40017D3")]
		RNM = 3,
		[Token(Token = "0x40017D4")]
		SH = 4,
		[Token(Token = "0x40017D5")]
		Auto = 1000
	}

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75BDF8", Offset = "0x75BDF8")]
	public int resolution;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	public int bitmask;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public int id;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public bool isImplicit;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public float area;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	public int totalVertexCount;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public int vertexCounter;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	public int sceneLodLevel;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public string sceneName;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public ftLMGroupMode mode;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	public RenderMode renderMode;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public RenderDirMode renderDirMode;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	public bool computeSSS;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public int sssSamples;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	public float sssDensity;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public Color sssColor;

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xAC90F0", Offset = "0xAC90F0", VA = "0xAC90F0")]
	public BakeryLightmapGroupPlain GetPlainStruct()
	{
		return default(BakeryLightmapGroupPlain);
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xAC9198", Offset = "0xAC9198", VA = "0xAC9198")]
	public BakeryLightmapGroup()
	{
	}
}
[Token(Token = "0x2000006")]
public class BakeryLightmapGroupSelector : MonoBehaviour
{
	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Object lmgroupAsset;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool instanceResolutionOverride;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int instanceResolution;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xAC9204", Offset = "0xAC9204", VA = "0xAC9204")]
	public BakeryLightmapGroupSelector()
	{
	}
}
[Token(Token = "0x2000007")]
[DisallowMultipleComponent]
public class BakeryLightmappedPrefab : MonoBehaviour
{
	[Token(Token = "0x6000008")]
	[Address(RVA = "0xAC9214", Offset = "0xAC9214", VA = "0xAC9214")]
	public BakeryLightmappedPrefab()
	{
	}
}
[Token(Token = "0x2000008")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public class BakeryPointLight : MonoBehaviour
{
	[Token(Token = "0x2000305")]
	public enum ftLightProjectionMode
	{
		[Token(Token = "0x40017D7")]
		Omni,
		[Token(Token = "0x40017D8")]
		Cookie,
		[Token(Token = "0x40017D9")]
		Cubemap,
		[Token(Token = "0x40017DA")]
		IES
	}

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int UID;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color color;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float intensity;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float shadowSpread;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float cutoff;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool realisticFalloff;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int samples;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ftLightProjectionMode projMode;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D cookie;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float angle;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Cubemap cubemap;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEngine.Object iesFile;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int bitmask;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool bakeToIndirect;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool shadowmask;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float indirectIntensity;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xAC921C", Offset = "0xAC921C", VA = "0xAC921C")]
	public BakeryPointLight()
	{
	}
}
[Token(Token = "0x2000009")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public class BakerySkyLight : MonoBehaviour
{
	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string texName;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color color;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float intensity;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int samples;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool hemispherical;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int bitmask;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool bakeToIndirect;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float indirectIntensity;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool tangentSH;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Cubemap cubemap;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int UID;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xAC9284", Offset = "0xAC9284", VA = "0xAC9284")]
	public BakerySkyLight()
	{
	}
}
[Token(Token = "0x200000A")]
public class ftGlobalStorage : ScriptableObject
{
	[Token(Token = "0x600000B")]
	[Address(RVA = "0x168318C", Offset = "0x168318C", VA = "0x168318C")]
	public ftGlobalStorage()
	{
	}
}
[Token(Token = "0x200000B")]
public class ftLightmaps
{
	[Token(Token = "0x2000306")]
	private struct LightmapAdditionalData
	{
		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D rnm0;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D rnm1;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D rnm2;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int mode;
	}

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<int> lightmapRefCount;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<LightmapAdditionalData> globalMapsAdditional;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x1683194", Offset = "0x1683194", VA = "0x1683194")]
	static ftLightmaps()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x1683198", Offset = "0x1683198", VA = "0x1683198")]
	public static void RefreshFull()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x1684D28", Offset = "0x1684D28", VA = "0x1684D28")]
	public static GameObject FindInScene(string nm, UnityEngine.SceneManagement.Scene scn)
	{
		return null;
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x1684E70", Offset = "0x1684E70", VA = "0x1684E70")]
	private static Texture2D GetEmptyDirectionTex(ftLightmapsStorage storage)
	{
		return null;
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x1683374", Offset = "0x1683374", VA = "0x1683374")]
	public static void RefreshScene(UnityEngine.SceneManagement.Scene scene, [Optional] ftLightmapsStorage storage, bool updateNonBaked = false)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x1684E88", Offset = "0x1684E88", VA = "0x1684E88")]
	public static void UnloadScene(ftLightmapsStorage storage)
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x1685128", Offset = "0x1685128", VA = "0x1685128")]
	public static void RefreshScene2(UnityEngine.SceneManagement.Scene scene, ftLightmapsStorage storage)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1685338", Offset = "0x1685338", VA = "0x1685338")]
	public ftLightmaps()
	{
	}
}
[Token(Token = "0x200000C")]
[ExecuteInEditMode]
public class ftLightmapsStorage : MonoBehaviour
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Texture2D> maps;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture2D> masks;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Texture2D> dirMaps;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Texture2D> rnmMaps0;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Texture2D> rnmMaps1;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Texture2D> rnmMaps2;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<int> mapsMode;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<MeshRenderer> bakedRenderers;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<int> bakedIDs;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<Vector4> bakedScaleOffset;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<Mesh> bakedVertexColorMesh;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<MeshRenderer> nonBakedRenderers;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<Light> bakedLights;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<int> bakedLightChannels;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Terrain> bakedRenderersTerrain;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<int> bakedIDsTerrain;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<Vector4> bakedScaleOffsetTerrain;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<string> assetList;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<int> uvOverlapAssetList;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int[] idremap;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool usesRealtimeGI;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Texture2D emptyDirectionTex;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x1685340", Offset = "0x1685340", VA = "0x1685340")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x16853D0", Offset = "0x16853D0", VA = "0x16853D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x1685450", Offset = "0x1685450", VA = "0x1685450")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x16854B4", Offset = "0x16854B4", VA = "0x16854B4")]
	public ftLightmapsStorage()
	{
	}
}
[Token(Token = "0x200000D")]
public class ftLocalStorage : ScriptableObject
{
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<string> modifiedAssetPathList;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public List<int> modifiedAssetPaddingHash;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x1685840", Offset = "0x1685840", VA = "0x1685840")]
	public ftLocalStorage()
	{
	}
}
[Token(Token = "0x200000E")]
public static class ftUniqueIDRegistry
{
	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<int, int> Mapping;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<int, int> MappingInv;

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x16858F0", Offset = "0x16858F0", VA = "0x16858F0")]
	public static void Deregister(int id)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x1685A74", Offset = "0x1685A74", VA = "0x1685A74")]
	public static void Register(int id, int value)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x16859D0", Offset = "0x16859D0", VA = "0x16859D0")]
	public static int GetInstanceId(int id)
	{
		return default(int);
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x1685B78", Offset = "0x1685B78", VA = "0x1685B78")]
	public static int GetUID(int instanceId)
	{
		return default(int);
	}
}
[Token(Token = "0x200000F")]
public class BhapticsAndroidBasicExample : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000307")]
	public struct BhapticsAndroidExampleButtons
	{
		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Button ping;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Button toggle;
	}

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BhapticsAndroidExampleButtons talButtons;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BhapticsAndroidExampleButtons suitButtons;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BhapticsAndroidExampleButtons armsLeftButtons;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BhapticsAndroidExampleButtons armsRightButtons;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text pairedDevicesCount;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xADCAFC", Offset = "0xADCAFC", VA = "0xADCAFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xADCB8C", Offset = "0xADCB8C", VA = "0xADCB8C")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xADCDB0", Offset = "0xADCDB0", VA = "0xADCDB0")]
	public void PingTactal()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xADCE74", Offset = "0xADCE74", VA = "0xADCE74")]
	public void PingTactSuit()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xADCED4", Offset = "0xADCED4", VA = "0xADCED4")]
	public void PingTactosyArms(bool isLeft)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xADCF40", Offset = "0xADCF40", VA = "0xADCF40")]
	public void ToggleTactosyArms(bool isLeft)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xADCE10", Offset = "0xADCE10", VA = "0xADCE10")]
	private void PingPairedDevice(PositionType deviceType)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xADD04C", Offset = "0xADD04C", VA = "0xADD04C")]
	public BhapticsAndroidBasicExample()
	{
	}
}
[Token(Token = "0x2000010")]
public class BhapticsAndroidScanExample : MonoBehaviour
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AndroidWidget_ControlButton[] controlButtons;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool open;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button activeButton;

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xADD054", Offset = "0xADD054", VA = "0xADD054")]
	private void Start()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xADD240", Offset = "0xADD240", VA = "0xADD240")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xADD3FC", Offset = "0xADD3FC", VA = "0xADD3FC")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xADD414", Offset = "0xADD414", VA = "0xADD414")]
	private void Open()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xADD144", Offset = "0xADD144", VA = "0xADD144")]
	private void Close()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xADD510", Offset = "0xADD510", VA = "0xADD510")]
	public BhapticsAndroidScanExample()
	{
	}
}
[Token(Token = "0x2000011")]
public class BhapticsCharacterController : MonoBehaviour
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float jumpSpeed;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gravity;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float rotationSpeedH;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationSpeedV;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isEnableControl;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 moveDirection;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HapticSender tactSender;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75BF6C", Offset = "0x75BF6C")]
	public bool IsRaycastingShooting;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform shootingPoint;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75BFB4", Offset = "0x75BFB4")]
	[SerializeField]
	private GameObject bulletPrefab;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CharacterController characterController;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xADD518", Offset = "0xADD518", VA = "0xADD518")]
	private void Start()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xADD670", Offset = "0xADD670", VA = "0xADD670")]
	private void Update()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xADD69C", Offset = "0xADD69C", VA = "0xADD69C")]
	private void ShootPlayer()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xADDE50", Offset = "0xADDE50", VA = "0xADDE50")]
	private void RotatePlayer()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xADDC68", Offset = "0xADDC68", VA = "0xADDC68")]
	private void MovePlayer()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xADDFA8", Offset = "0xADDFA8", VA = "0xADDFA8")]
	public BhapticsCharacterController()
	{
	}
}
[Token(Token = "0x2000012")]
public class BhapticsCustomHapticReceiver : MonoBehaviour
{
	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsActive;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PositionTag PositionTag;

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x91FE94", Offset = "0x91FE94", VA = "0x91FE94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x9200C8", Offset = "0x9200C8", VA = "0x9200C8")]
	private void OnTriggerEnter(Collider bullet)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x920284", Offset = "0x920284", VA = "0x920284")]
	private void OnCollisionEnter(Collision bullet)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x920198", Offset = "0x920198", VA = "0x920198")]
	private void Handle(Vector3 contactPoint, HapticSender tactSender)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x920378", Offset = "0x920378", VA = "0x920378")]
	public void ReflectHandle(Vector3 contactPoint, HapticSender tactSender)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x9204C8", Offset = "0x9204C8", VA = "0x9204C8")]
	public BhapticsCustomHapticReceiver()
	{
	}
}
[Token(Token = "0x2000013")]
public class BhapticsDotPointControllerExample : MonoBehaviour
{
	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClipPositionType clipPositionType;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<DotPoint> dotPointList;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string key;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int duration;

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x9204D8", Offset = "0x9204D8", VA = "0x9204D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x920548", Offset = "0x920548", VA = "0x920548")]
	private void Update()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x92054C", Offset = "0x92054C", VA = "0x92054C")]
	public void Toggle(DotPoint dot)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x920674", Offset = "0x920674", VA = "0x920674")]
	private bool AddToList(DotPoint dot)
	{
		return default(bool);
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x9205DC", Offset = "0x9205DC", VA = "0x9205DC")]
	private bool RemoveAtList(DotPoint dot)
	{
		return default(bool);
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x92070C", Offset = "0x92070C", VA = "0x92070C")]
	public BhapticsDotPointControllerExample()
	{
	}
}
[Token(Token = "0x2000014")]
public class BhapticsDotPointExample : MonoBehaviour
{
	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int motorIndex;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int motorIntensity;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BhapticsDotPointControllerExample controller;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DotPoint dotPoint;

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x9207B4", Offset = "0x9207B4", VA = "0x9207B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x920854", Offset = "0x920854", VA = "0x920854")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x9208E8", Offset = "0x9208E8", VA = "0x9208E8")]
	public BhapticsDotPointExample()
	{
	}
}
[Token(Token = "0x2000015")]
public class BhapticsFpsView : MonoBehaviour
{
	[Token(Token = "0x2000308")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B818", Offset = "0x75B818")]
	private sealed class <FPS>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsFpsView <>4__this;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] <buffer>5__2;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <index>5__3;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <frequency>5__4;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <initial>5__5;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <lastFrameCount>5__6;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <lastTime>5__7;

		[Token(Token = "0x17000170")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0x921088", Offset = "0x921088", VA = "0x921088", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017F4")]
			[Address(RVA = "0x9210F0", Offset = "0x9210F0", VA = "0x9210F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x920A00", Offset = "0x920A00", VA = "0x920A00")]
		[DebuggerHidden]
		public <FPS>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x920C04", Offset = "0x920C04", VA = "0x920C04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x920C08", Offset = "0x920C08", VA = "0x920C08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x921090", Offset = "0x921090", VA = "0x921090", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text fpsText;

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x9208F8", Offset = "0x9208F8", VA = "0x9208F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x920958", Offset = "0x920958", VA = "0x920958")]
	private void Start()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x920984", Offset = "0x920984", VA = "0x920984")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7641AC", Offset = "0x7641AC")]
	private IEnumerator FPS()
	{
		return null;
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x920A2C", Offset = "0x920A2C", VA = "0x920A2C")]
	private float Average(float[] floats)
	{
		return default(float);
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x920AA0", Offset = "0x920AA0", VA = "0x920AA0")]
	public float Percentile(float[] sequence, float excelPercentile)
	{
		return default(float);
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x920BFC", Offset = "0x920BFC", VA = "0x920BFC")]
	public BhapticsFpsView()
	{
	}
}
[Token(Token = "0x2000016")]
public class BhapticsHapticBullet : MonoBehaviour
{
	[Token(Token = "0x6000047")]
	[Address(RVA = "0x9210F8", Offset = "0x9210F8", VA = "0x9210F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x921178", Offset = "0x921178", VA = "0x921178")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x9211F4", Offset = "0x9211F4", VA = "0x9211F4")]
	public BhapticsHapticBullet()
	{
	}
}
[Token(Token = "0x2000017")]
public class BhapticsHapticClipExample : MonoBehaviour
{
	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClip hapticClip;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x9211FC", Offset = "0x9211FC", VA = "0x9211FC")]
	public void Play()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x921294", Offset = "0x921294", VA = "0x921294")]
	public void Stop()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x921330", Offset = "0x921330", VA = "0x921330")]
	public BhapticsHapticClipExample()
	{
	}
}
[Token(Token = "0x2000018")]
public class BhapticsIdentifierPlayExample : MonoBehaviour
{
	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B828", Offset = "0x75B828")]
	private sealed class <PlayCor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsIdentifierPlayExample <>4__this;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <bufferSize>5__2;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <index>5__3;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <identifier>5__4;

		[Token(Token = "0x17000172")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017F8")]
			[Address(RVA = "0x9217EC", Offset = "0x9217EC", VA = "0x9217EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017FA")]
			[Address(RVA = "0x921854", Offset = "0x921854", VA = "0x921854", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x921554", Offset = "0x921554", VA = "0x921554")]
		[DebuggerHidden]
		public <PlayCor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x921588", Offset = "0x921588", VA = "0x921588", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x92158C", Offset = "0x92158C", VA = "0x92158C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x9217F4", Offset = "0x9217F4", VA = "0x9217F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FileHapticClip clip;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text identifierText;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine currentCoroutine;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool applyIdentifier;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x921338", Offset = "0x921338", VA = "0x921338")]
	private void Start()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x9213B0", Offset = "0x9213B0", VA = "0x9213B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x9213F8", Offset = "0x9213F8", VA = "0x9213F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x92133C", Offset = "0x92133C", VA = "0x92133C")]
	private void Play()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x9214D8", Offset = "0x9214D8", VA = "0x9214D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x764210", Offset = "0x764210")]
	private IEnumerator PlayCor()
	{
		return null;
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x921580", Offset = "0x921580", VA = "0x921580")]
	public BhapticsIdentifierPlayExample()
	{
	}
}
[Token(Token = "0x2000019")]
public class BhapticsIsConnectIsPlayingExample : MonoBehaviour
{
	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FileHapticClip[] clips;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text isConnectText;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text clipText;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text isPlayingText;

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x92185C", Offset = "0x92185C", VA = "0x92185C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x921A28", Offset = "0x921A28", VA = "0x921A28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x922794", Offset = "0x922794", VA = "0x922794")]
	private void PlayClips()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x922804", Offset = "0x922804", VA = "0x922804")]
	public BhapticsIsConnectIsPlayingExample()
	{
	}
}
[Token(Token = "0x200001A")]
public class BhapticsLongTest : MonoBehaviour
{
	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HapticClip[] tactClips;

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x9229D8", Offset = "0x9229D8", VA = "0x9229D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x922A50", Offset = "0x922A50", VA = "0x922A50")]
	private void TriggerPlay()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x922AC0", Offset = "0x922AC0", VA = "0x922AC0")]
	private void ReloadScene()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x922C18", Offset = "0x922C18", VA = "0x922C18")]
	public BhapticsLongTest()
	{
	}
}
[Token(Token = "0x200001B")]
public class BhapticsPathPointControllerExample : MonoBehaviour
{
	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClipPositionType clipPositionType;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int motorIntensity;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<PathPoint> pathPointList;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BoxCollider targetCollider;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string key;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int duration;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isClickedArea;

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x922EF0", Offset = "0x922EF0", VA = "0x922EF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x922FE0", Offset = "0x922FE0", VA = "0x922FE0")]
	private void Update()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x923208", Offset = "0x923208", VA = "0x923208")]
	private Vector2? GetPathPointOffset()
	{
		return null;
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x92336C", Offset = "0x92336C", VA = "0x92336C")]
	private Vector2 ConvertPositionToPathOffset(Vector3 currentPos, BoxCollider currentHitCollider)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x9234D4", Offset = "0x9234D4", VA = "0x9234D4")]
	public BhapticsPathPointControllerExample()
	{
	}
}
[Token(Token = "0x200001C")]
public class BhapticsProfiler : MonoBehaviour
{
	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int numOfTactClips;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HapticClip[] tactClips;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hapticEnable;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int targetFrameRate;

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x923580", Offset = "0x923580", VA = "0x923580")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x9235E8", Offset = "0x9235E8", VA = "0x9235E8")]
	private void TriggerPlay()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x923804", Offset = "0x923804", VA = "0x923804")]
	public BhapticsProfiler()
	{
	}
}
[Token(Token = "0x200001D")]
public class BhapticsReflectExample : MonoBehaviour
{
	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArmsHapticClip armsHapticClip;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isReflect;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x92381C", Offset = "0x92381C", VA = "0x92381C")]
	public void Play()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x9238B4", Offset = "0x9238B4", VA = "0x9238B4")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x923950", Offset = "0x923950", VA = "0x923950")]
	public void OnClickToggle(Toggle toggle)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x923A20", Offset = "0x923A20", VA = "0x923A20")]
	public BhapticsReflectExample()
	{
	}
}
[Token(Token = "0x200001E")]
public class BhapticsRotate : MonoBehaviour
{
	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isRandom;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 axis;

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x923A28", Offset = "0x923A28", VA = "0x923A28")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x923A84", Offset = "0x923A84", VA = "0x923A84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x923AD8", Offset = "0x923AD8", VA = "0x923AD8")]
	private void Update()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x923B10", Offset = "0x923B10", VA = "0x923B10")]
	private void RandomAxis()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x923BAC", Offset = "0x923BAC", VA = "0x923BAC")]
	public BhapticsRotate()
	{
	}
}
[Token(Token = "0x200001F")]
public class BhapticsRotateExample : MonoBehaviour
{
	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VestHapticClip vestHapticClip;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x75C060", Offset = "0x75C060")]
	public Text angleXText;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text offsetYText;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float angleX;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float offsetY;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x923C0C", Offset = "0x923C0C", VA = "0x923C0C")]
	public void PlayWithRotate()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x923CB8", Offset = "0x923CB8", VA = "0x923CB8")]
	public void Stop()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x923D54", Offset = "0x923D54", VA = "0x923D54")]
	public void OnAngleXChanged(Slider slider)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x923E70", Offset = "0x923E70", VA = "0x923E70")]
	public void OnOffsetYChanged(Slider slider)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x923F90", Offset = "0x923F90", VA = "0x923F90")]
	public BhapticsRotateExample()
	{
	}
}
[Token(Token = "0x2000020")]
public class BhapticsShootingCharacter : MonoBehaviour
{
	[Token(Token = "0x200030A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B838", Offset = "0x75B838")]
	private sealed class <RepeatShoot>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsShootingCharacter <>4__this;

		[Token(Token = "0x17000174")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017FE")]
			[Address(RVA = "0x9246C4", Offset = "0x9246C4", VA = "0x9246C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001800")]
			[Address(RVA = "0x92472C", Offset = "0x92472C", VA = "0x92472C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x924270", Offset = "0x924270", VA = "0x924270")]
		[DebuggerHidden]
		public <RepeatShoot>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x9245D0", Offset = "0x9245D0", VA = "0x9245D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x9245D4", Offset = "0x9245D4", VA = "0x9245D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x9246CC", Offset = "0x9246CC", VA = "0x9246CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform shootPointLeft;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform shootPointRight;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject bulletPrefab;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x75C0B0", Offset = "0x75C0B0")]
	[SerializeField]
	private Transform[] lookingTransforms;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int shootCount;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float shootDelay;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float bulletSpeed;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x923F98", Offset = "0x923F98", VA = "0x923F98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x923FF8", Offset = "0x923FF8", VA = "0x923FF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x9241C0", Offset = "0x9241C0", VA = "0x9241C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x924268", Offset = "0x924268", VA = "0x924268")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x9241EC", Offset = "0x9241EC", VA = "0x9241EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x764274", Offset = "0x764274")]
	private IEnumerator RepeatShoot()
	{
		return null;
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x92429C", Offset = "0x92429C", VA = "0x92429C")]
	private void ShootTarget(int hand)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x923FFC", Offset = "0x923FFC", VA = "0x923FFC")]
	private void Looking()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x9245B4", Offset = "0x9245B4", VA = "0x9245B4")]
	public BhapticsShootingCharacter()
	{
	}
}
[Token(Token = "0x2000021")]
public class BhapticsStreamingTest : MonoBehaviour
{
	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button button;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text text;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HapticClip clip;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x924734", Offset = "0x924734", VA = "0x924734")]
	private void Start()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x924790", Offset = "0x924790", VA = "0x924790")]
	private void Update()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x924794", Offset = "0x924794", VA = "0x924794")]
	private void Check()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x924CDC", Offset = "0x924CDC", VA = "0x924CDC")]
	public void Toggle()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x924D3C", Offset = "0x924D3C", VA = "0x924D3C")]
	public BhapticsStreamingTest()
	{
	}
}
[Token(Token = "0x2000022")]
public class BhapticsTeleportPoint : MonoBehaviour
{
	[Token(Token = "0x600007E")]
	[Address(RVA = "0x924D44", Offset = "0x924D44", VA = "0x924D44")]
	public BhapticsTeleportPoint()
	{
	}
}
[Token(Token = "0x2000023")]
public class BhapticsTestScript : MonoBehaviour
{
	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HapticClip[] tactClips;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider intensitySlider;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider durationSlider;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider offsetXSlider;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider offsetYSlider;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle reflectToggle;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Button openBluetoothSettingButton;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Button playButton;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Button toggleEnableAllButton;

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x924D4C", Offset = "0x924D4C", VA = "0x924D4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x924F20", Offset = "0x924F20", VA = "0x924F20")]
	private void ToggleEnable()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x925050", Offset = "0x925050", VA = "0x925050")]
	private void Open()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x9250B0", Offset = "0x9250B0", VA = "0x9250B0")]
	private void Play()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x925284", Offset = "0x925284", VA = "0x925284")]
	public BhapticsTestScript()
	{
	}
}
[Token(Token = "0x2000024")]
public class BhapticsVRBody : MonoBehaviour
{
	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform camera;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float distance;

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x92528C", Offset = "0x92528C", VA = "0x92528C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x925290", Offset = "0x925290", VA = "0x925290")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x925418", Offset = "0x925418", VA = "0x925418")]
	public BhapticsVRBody()
	{
	}
}
[Token(Token = "0x2000025")]
public class BhapticsVisualFeedbackOnMotors : MonoBehaviour
{
	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public PositionType tactPositionType;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject visualMotorsObject;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Gradient hapticColor;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] visualMotors;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x925420", Offset = "0x925420", VA = "0x925420")]
	private void Start()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x925684", Offset = "0x925684", VA = "0x925684")]
	private void Update()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x925784", Offset = "0x925784", VA = "0x925784")]
	private void ShowFeedbackEffect(int[] feedback)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x9258DC", Offset = "0x9258DC", VA = "0x9258DC")]
	public BhapticsVisualFeedbackOnMotors()
	{
	}
}
[Token(Token = "0x2000026")]
public class BhapticsWidgetInstiate : MonoBehaviour
{
	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AndroidWidget_UI widgetPrefab;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x925AD0", Offset = "0x925AD0", VA = "0x925AD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x925B28", Offset = "0x925B28", VA = "0x925B28")]
	private void CreateWidget()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x925B9C", Offset = "0x925B9C", VA = "0x925B9C")]
	public BhapticsWidgetInstiate()
	{
	}
}
[Token(Token = "0x2000027")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7576F0", Offset = "0x7576F0")]
public class BhapticsConfig : ScriptableObject
{
	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75C1A8", Offset = "0x75C1A8")]
	public bool launchPlayerIfNotRunning;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75C1E0", Offset = "0x75C1E0")]
	public BhapticsAndroidManager AndroidManagerPrefab;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75C218", Offset = "0x75C218")]
	public bool UseOnlyBackgroundMode;

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x91FE84", Offset = "0x91FE84", VA = "0x91FE84")]
	public BhapticsConfig()
	{
	}
}
[Token(Token = "0x2000028")]
public class BhapticsLogger
{
	[Token(Token = "0x200030B")]
	public enum LogLevel
	{
		[Token(Token = "0x40017F4")]
		Debug,
		[Token(Token = "0x40017F5")]
		Info,
		[Token(Token = "0x40017F6")]
		Error
	}

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LogLevel level;

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x92280C", Offset = "0x92280C", VA = "0x92280C")]
	public static void LogDebug(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x91FFEC", Offset = "0x91FFEC", VA = "0x91FFEC")]
	public static void LogInfo(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x9228E4", Offset = "0x9228E4", VA = "0x9228E4")]
	public static void LogError(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x92297C", Offset = "0x92297C", VA = "0x92297C")]
	public BhapticsLogger()
	{
	}
}
[Token(Token = "0x2000029")]
public class BhapticsManager
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IHaptic Haptic;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool Init;

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x922430", Offset = "0x922430", VA = "0x922430")]
	public static IHaptic GetHaptic()
	{
		return null;
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x922C20", Offset = "0x922C20", VA = "0x922C20")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x922C7C", Offset = "0x922C7C", VA = "0x922C7C")]
	public static void Dispose()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x922EE4", Offset = "0x922EE4", VA = "0x922EE4")]
	public BhapticsManager()
	{
	}
}
[Token(Token = "0x200002A")]
public class BhapticsVisualizer : MonoBehaviour
{
	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VisualFeedback[] visualFeedback;

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x9258E4", Offset = "0x9258E4", VA = "0x9258E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x925944", Offset = "0x925944", VA = "0x925944")]
	private void Update()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x925AC8", Offset = "0x925AC8", VA = "0x925AC8")]
	public BhapticsVisualizer()
	{
	}
}
[Token(Token = "0x200002B")]
public class Bhaptics_Setup : MonoBehaviour
{
	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Bhaptics_Setup instance;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BhapticsConfig Config;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75C250", Offset = "0x75C250")]
	public HapticClip[] hapticClipsOnAwake;

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x925BA4", Offset = "0x925BA4", VA = "0x925BA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x9260C4", Offset = "0x9260C4", VA = "0x9260C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x9261B4", Offset = "0x9261B4", VA = "0x9261B4")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x925CB4", Offset = "0x925CB4", VA = "0x925CB4")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x926210", Offset = "0x926210", VA = "0x926210")]
	public Bhaptics_Setup()
	{
	}
}
[Token(Token = "0x200002C")]
public class SDP01_ClusterRandomizer : MonoBehaviour
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform[] childTransforms;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] originalLocalPositions;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] originalLocalRotationEulers;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool ClusterFloats;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool clusterFloatSetup;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float DriftSpeedMIN;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float DriftSpeedMAX;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float DriftRotateSpeedMIN;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float DriftRotateSpeedMAX;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<SDP01_DriftObject> objectsToDrift;

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xA56338", Offset = "0xA56338", VA = "0xA56338")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xA56528", Offset = "0xA56528", VA = "0xA56528")]
	public void RandomizePositionAndRotation(float scatterDistanceMIN, float scatterDistanceMAX)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xA5697C", Offset = "0xA5697C", VA = "0xA5697C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xA56CD8", Offset = "0xA56CD8", VA = "0xA56CD8")]
	public SDP01_ClusterRandomizer()
	{
	}
}
[Token(Token = "0x200002D")]
public class SDP01_DebrisCameraController : MonoBehaviour
{
	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 currentRotationEulers;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float currentYRotation;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform CameraHeightTransform;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 heightEulers;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform CameraTransform;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cameraLocalPosition;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Camera MainCamera;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float ZoomMIN;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float ZoomMAX;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float currentZoomLevel;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float UpDownMIN;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float UpDownMAX;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float currentUpDownLevel;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float LerpSpeed;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public KeyCode ZoomOutKey;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public KeyCode ZoomInKey;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public KeyCode RotateLeftKey;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public KeyCode RotateRightKey;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public KeyCode RotateUpKey;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public KeyCode RotateDownKey;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float ZoomInOutSpeed;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float RotateUpDownSpeed;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float RotateLeftRightSpeed;

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xA56CE0", Offset = "0xA56CE0", VA = "0xA56CE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xA56E30", Offset = "0xA56E30", VA = "0xA56E30")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xA57208", Offset = "0xA57208", VA = "0xA57208")]
	public SDP01_DebrisCameraController()
	{
	}
}
[Token(Token = "0x200002E")]
public class SDP01_DebrisQuad : MonoBehaviour
{
	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Quad2Transform;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xA57258", Offset = "0xA57258", VA = "0xA57258")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xA574E4", Offset = "0xA574E4", VA = "0xA574E4")]
	public SDP01_DebrisQuad()
	{
	}
}
[Token(Token = "0x200002F")]
public class SDP01_DerelictStarship : MonoBehaviour
{
	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer[] myRenderers;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int RandomMatChangePer;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] OriginalMaterials;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material[] AltMaterials;

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xA574EC", Offset = "0xA574EC", VA = "0xA574EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xA57564", Offset = "0xA57564", VA = "0xA57564")]
	private void RandomizeMaterials()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xA5773C", Offset = "0xA5773C", VA = "0xA5773C")]
	public SDP01_DerelictStarship()
	{
	}
}
[Token(Token = "0x2000030")]
public class SDP01_DriftObject : MonoBehaviour
{
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Setup;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DriftSpeedX;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float DriftSpeedY;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float DriftSpeedZ;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float DriftRotateSpeedX;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float DriftRotateSpeedY;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float DriftRotateSpeedZ;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 currentLocalPosition;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 currentLocalRotationEulers;

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xA5774C", Offset = "0xA5774C", VA = "0xA5774C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xA577E4", Offset = "0xA577E4", VA = "0xA577E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xA57960", Offset = "0xA57960", VA = "0xA57960")]
	public SDP01_DriftObject()
	{
	}
}
[Token(Token = "0x2000031")]
public class SDP01_LookAtObject : MonoBehaviour
{
	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform TargetToLookAt;

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xA57968", Offset = "0xA57968", VA = "0xA57968")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xA579A8", Offset = "0xA579A8", VA = "0xA579A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xA57A50", Offset = "0xA57A50", VA = "0xA57A50")]
	public SDP01_LookAtObject()
	{
	}
}
[Token(Token = "0x2000032")]
public class SDP01_StarshipGraveyard : MonoBehaviour
{
	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject DebrisFieldPrefab;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scatterAmount;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int NumberOfDebrisFieldsX;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int NumberOfDebrisFieldsZ;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int totalDebrisFieldCount;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float OffsetMIN;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float OffsetMAX;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Vector3> possiblePositions;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xA57A58", Offset = "0xA57A58", VA = "0xA57A58")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xA57C14", Offset = "0xA57C14", VA = "0xA57C14")]
	private void GenerateDebrisField(Vector3 fieldPosition, int debrisIndex)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xA57DCC", Offset = "0xA57DCC", VA = "0xA57DCC")]
	public SDP01_StarshipGraveyard()
	{
	}
}
[Token(Token = "0x2000033")]
public class SDP01_WreckageController : MonoBehaviour
{
	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool RandomizeDebris;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool DebrisFloats;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DriftSpeedMIN;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float DriftSpeedMAX;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float DriftRotateSpeedMIN;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float DriftRotateSpeedMAX;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] DebrisClusterPrefabs;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ClusterScatterDistanceMIN;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float ClusterScatterDistanceMAX;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool GenerateDebrisClouds;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int NumberOfCloudsMIN;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int NumberOfCloudsMAX;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] DebrisCloudPrefabs;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<GameObject> debrisCloudGOs;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int NumberOfClusters;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SDP01_ClusterRandomizer[] clusterScripts;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool SpawnDebrisPieces;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int NumberDebrisPiecesMIN;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int NumberDebrisPiecesMAX;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float PieceDistanceMIN;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float PieceDistanceMAX;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float PieceScaleMIN;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float PieceScaleMAX;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject[] DebrisPiecePrefabs;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform PiecePlacementTransform;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int DebrisPieceCount;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<GameObject> debrisPiecesGOList;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool SpawnDebrisQuadPieces;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public int NumberDebrisQuadPiecesMIN;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int NumberDebrisQuadPiecesMAX;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float QuadPieceDistanceMIN;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float QuadPieceDistanceMAX;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float QuadPieceScaleMIN;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float QuadPieceScaleMAX;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject[] DebrisQuadPiecePrefabs;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int DebrisQuadPieceCount;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<GameObject> debrisQuadPiecesGOList;

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xA57DF0", Offset = "0xA57DF0", VA = "0xA57DF0")]
	private void DoSpawnDebrisPieces()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xA58104", Offset = "0xA58104", VA = "0xA58104")]
	private void SpawnDebrisPiece(Vector3 piecePosition, Vector3 pieceRotationEulers, int pieceNumber, float pieceScale)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xA58330", Offset = "0xA58330", VA = "0xA58330")]
	private void DoSpawnDebrisQuadPieces()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xA58644", Offset = "0xA58644", VA = "0xA58644")]
	private void SpawnDebrisQuadPiece(Vector3 piecePosition, Vector3 pieceRotationEulers, int pieceNumber, float pieceScale)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xA58870", Offset = "0xA58870", VA = "0xA58870")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xA592A4", Offset = "0xA592A4", VA = "0xA592A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xA58DF0", Offset = "0xA58DF0", VA = "0xA58DF0")]
	private void GenerateDebrisCluster(int debrisIndex, Vector3 debrisLocalPosition, Vector3 clusterLocalRotationEulers)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xA59030", Offset = "0xA59030", VA = "0xA59030")]
	private void GenerateDebrisCloud(int cloudIndex, Vector3 cloudLocalPosition, Vector3 cloudLocalRotationEulers)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xA5980C", Offset = "0xA5980C", VA = "0xA5980C")]
	public SDP01_WreckageController()
	{
	}
}
[Token(Token = "0x2000034")]
public class SimpleTextureDrawing : MonoBehaviour
{
	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material aMaterial;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTexture[] aTextures;

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x916C64", Offset = "0x916C64", VA = "0x916C64")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x916DAC", Offset = "0x916DAC", VA = "0x916DAC")]
	public SimpleTextureDrawing()
	{
	}
}
[Token(Token = "0x2000035")]
public class INF_AnimSpeedRandomizer : MonoBehaviour
{
	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed_rnd;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator myAnimator;

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x9DE324", Offset = "0x9DE324", VA = "0x9DE324")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x9DE3BC", Offset = "0x9DE3BC", VA = "0x9DE3BC")]
	public INF_AnimSpeedRandomizer()
	{
	}
}
[Token(Token = "0x2000036")]
public class INF_ContinuousRotation : MonoBehaviour
{
	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float X;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Y;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Z;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool local;

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x9DE3CC", Offset = "0x9DE3CC", VA = "0x9DE3CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x9DE48C", Offset = "0x9DE48C", VA = "0x9DE48C")]
	public INF_ContinuousRotation()
	{
	}
}
[Token(Token = "0x2000037")]
public class INF_InitialPrefabGenerator : MonoBehaviour
{
	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] createThese;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject justCreated;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int createThisMany;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool parentUnderCreator;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float x_rnd;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float y_rnd;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float z_rnd;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float x_rot_rnd;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float y_rot_rnd;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float z_rot_rnd;

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x9DE494", Offset = "0x9DE494", VA = "0x9DE494")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x9DE75C", Offset = "0x9DE75C", VA = "0x9DE75C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x9DE900", Offset = "0x9DE900", VA = "0x9DE900")]
	public INF_InitialPrefabGenerator()
	{
	}
}
[Token(Token = "0x2000038")]
public class INF_InitialRotation : MonoBehaviour
{
	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float X;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Xrnd;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Y;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Yrnd;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Z;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Zrnd;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool local;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float X_Actual;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float Y_Actual;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float Z_Actual;

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x9DE908", Offset = "0x9DE908", VA = "0x9DE908")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x9DE9A8", Offset = "0x9DE9A8", VA = "0x9DE9A8")]
	public INF_InitialRotation()
	{
	}
}
[Token(Token = "0x2000039")]
[ExecuteInEditMode]
public class NM_Wind : MonoBehaviour
{
	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75C288", Offset = "0x75C288")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75C288", Offset = "0x75C288")]
	public float WindSpeed;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75C2E8", Offset = "0x75C2E8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75C2E8", Offset = "0x75C2E8")]
	public float Turbulence;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75C33C", Offset = "0x75C33C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75C33C", Offset = "0x75C33C")]
	public Texture2D NoiseTexture;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75C39C", Offset = "0x75C39C")]
	public float FlexNoiseWorldSize;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75C3D4", Offset = "0x75C3D4")]
	public float ShiverNoiseWorldSize;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75C40C", Offset = "0x75C40C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75C40C", Offset = "0x75C40C")]
	public Texture2D GustMaskTexture;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75C46C", Offset = "0x75C46C")]
	public float GustWorldSize;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75C4A4", Offset = "0x75C4A4")]
	public float GustSpeed;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75C4DC", Offset = "0x75C4DC")]
	public float GustScale;

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xB97B30", Offset = "0xB97B30", VA = "0xB97B30")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xB97CB8", Offset = "0xB97CB8", VA = "0xB97CB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xB97CBC", Offset = "0xB97CBC", VA = "0xB97CBC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xB97B34", Offset = "0xB97B34", VA = "0xB97B34")]
	private void ApplySettings()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xB97CC0", Offset = "0xB97CC0", VA = "0xB97CC0")]
	private Vector4 GetDirectionAndSpeed()
	{
		return default(Vector4);
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xB97D40", Offset = "0xB97D40", VA = "0xB97D40")]
	public NM_Wind()
	{
	}
}
[Token(Token = "0x200003A")]
public class GUIView : MonoBehaviour
{
	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float progress;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool muted;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int score;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string playername;

	[Token(Token = "0x4000161")]
	private const string PROGRESS_KEY = "Progress";

	[Token(Token = "0x4000162")]
	private const string MUTED_KEY = "IsSoundMuted";

	[Token(Token = "0x4000163")]
	private const string SCORE_KEY = "Highscore";

	[Token(Token = "0x4000164")]
	private const string PLAYERNAME_KEY = "PlayerName";

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x9A61C4", Offset = "0x9A61C4", VA = "0x9A61C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x9A63BC", Offset = "0x9A63BC", VA = "0x9A63BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x9A63F4", Offset = "0x9A63F4", VA = "0x9A63F4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x9A62E0", Offset = "0x9A62E0", VA = "0x9A62E0")]
	public void RefreshData()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x9A6228", Offset = "0x9A6228", VA = "0x9A6228")]
	public void SaveData()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x9A6B54", Offset = "0x9A6B54", VA = "0x9A6B54")]
	public GUIView()
	{
	}
}
[Token(Token = "0x200003B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x75776C", Offset = "0x75776C")]
public class AmplifyColorBase : MonoBehaviour
{
	[Token(Token = "0x4000165")]
	public const int LutSize = 32;

	[Token(Token = "0x4000166")]
	public const int LutWidth = 1024;

	[Token(Token = "0x4000167")]
	public const int LutHeight = 32;

	[Token(Token = "0x4000168")]
	private const int DepthCurveLutRange = 1024;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tonemapping Tonemapper;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Exposure;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LinearWhitePoint;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x75C514", Offset = "0x75C514")]
	public bool ApplyDithering;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Quality QualityLevel;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float BlendAmount;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture LutTexture;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture LutBlendTexture;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture MaskTexture;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool UseDepthMask;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve DepthMaskCurve;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool UseVolumes;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float ExitVolumeBlendTime;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform TriggerVolumeProxy;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LayerMask VolumeCollisionMask;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Camera ownerCamera;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Shader shaderBase;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Shader shaderBlend;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Shader shaderBlendCache;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Shader shaderMask;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Shader shaderMaskBlend;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Shader shaderDepthMask;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Shader shaderDepthMaskBlend;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Shader shaderProcessOnly;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private RenderTexture blendCacheLut;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Texture2D defaultLut;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Texture2D depthCurveLut;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Color32[] depthCurveColors;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private ColorSpace colorSpace;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Quality qualityLevel;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Material materialBase;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Material materialBlend;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Material materialBlendCache;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Material materialMask;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Material materialMaskBlend;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Material materialDepthMask;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Material materialDepthMaskBlend;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Material materialProcessOnly;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool blending;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float blendingTime;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float blendingTimeCountdown;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Action onFinishBlend;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private AnimationCurve prevDepthMaskCurve;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool volumesBlending;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float volumesBlendingTime;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float volumesBlendingTimeCountdown;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Texture volumesLutBlendTexture;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float volumesBlendAmount;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Texture worldLUT;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private AmplifyColorVolumeBase currentVolumeLut;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private RenderTexture midBlendLUT;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool blendingFromMidBlend;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private VolumeEffect worldVolumeEffects;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private VolumeEffect currentVolumeEffects;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private VolumeEffect blendVolumeEffects;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float worldExposure;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float currentExposure;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float blendExposure;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float effectVolumesBlendAdjust;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private List<AmplifyColorVolumeBase> enteredVolumes;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private AmplifyColorTriggerProxyBase actualTriggerProxy;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[HideInInspector]
	public VolumeEffectFlags EffectFlags;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	[HideInInspector]
	private string sharedInstanceID;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool silentError;

	[Token(Token = "0x17000001")]
	public Texture2D DefaultLut
	{
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xB65B28", Offset = "0xB65B28", VA = "0xB65B28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000002")]
	public bool IsBlending
	{
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xB65E08", Offset = "0xB65E08", VA = "0xB65E08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000003")]
	private float effectVolumesBlendAdjusted
	{
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xB65E10", Offset = "0xB65E10", VA = "0xB65E10")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000004")]
	public string SharedInstanceID
	{
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0xB65EB0", Offset = "0xB65EB0", VA = "0xB65EB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000005")]
	public bool WillItBlend
	{
		[Token(Token = "0x60000DA")]
		[Address(RVA = "0xB65EB8", Offset = "0xB65EB8", VA = "0xB65EB8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xB65F7C", Offset = "0xB65F7C", VA = "0xB65F7C")]
	public void NewSharedInstanceID()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xB66010", Offset = "0xB66010", VA = "0xB66010")]
	private void ReportMissingShaders()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xB66090", Offset = "0xB66090", VA = "0xB66090")]
	private void ReportNotSupported()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xB66110", Offset = "0xB66110", VA = "0xB66110")]
	private bool CheckShader(Shader s)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xB661C8", Offset = "0xB661C8", VA = "0xB661C8")]
	private bool CheckShaders()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xB66248", Offset = "0xB66248", VA = "0xB66248")]
	private bool CheckSupport()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xB66290", Offset = "0xB66290", VA = "0xB66290")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xB66728", Offset = "0xB66728", VA = "0xB66728")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xB66964", Offset = "0xB66964", VA = "0xB66964")]
	private void VolumesBlendTo(Texture blendTargetLUT, float blendTimeInSec)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xB669AC", Offset = "0xB669AC", VA = "0xB669AC")]
	public void BlendTo(Texture blendTargetLUT, float blendTimeInSec, Action onFinishBlend)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xB66A04", Offset = "0xB66A04", VA = "0xB66A04")]
	private void CheckCamera()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xB66AFC", Offset = "0xB66AFC", VA = "0xB66AFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xB66B8C", Offset = "0xB66B8C", VA = "0xB66B8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xB676B4", Offset = "0xB676B4", VA = "0xB676B4")]
	public void EnterVolume(AmplifyColorVolumeBase volume)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xB67750", Offset = "0xB67750", VA = "0xB67750")]
	public void ExitVolume(AmplifyColorVolumeBase volume)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xB66FBC", Offset = "0xB66FBC", VA = "0xB66FBC")]
	private void UpdateVolumes()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xB677E8", Offset = "0xB677E8", VA = "0xB677E8")]
	private void SetupShader()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xB66808", Offset = "0xB66808", VA = "0xB66808")]
	private void ReleaseMaterials()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xB65BB4", Offset = "0xB65BB4", VA = "0xB65BB4")]
	private Texture2D CreateDefaultLut()
	{
		return null;
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xB67954", Offset = "0xB67954", VA = "0xB67954")]
	private Texture2D CreateDepthCurveLut()
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xB67AA4", Offset = "0xB67AA4", VA = "0xB67AA4")]
	private void UpdateDepthCurveLut()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xB67C10", Offset = "0xB67C10", VA = "0xB67C10")]
	private void CheckUpdateDepthCurveLut()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xB67DFC", Offset = "0xB67DFC", VA = "0xB67DFC")]
	private void CreateHelperTextures()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xB67FFC", Offset = "0xB67FFC", VA = "0xB67FFC")]
	private bool CheckMaterialAndShader(Material material, string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xB66468", Offset = "0xB66468", VA = "0xB66468")]
	private bool CreateMaterials()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xB6817C", Offset = "0xB6817C", VA = "0xB6817C")]
	private void SetMaterialKeyword(string keyword, bool state)
	{
	}

	[Token(Token = "0x60000F5")]
	private void SafeRelease<T>(ref T obj) where T : UnityEngine.Object
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xB668CC", Offset = "0xB668CC", VA = "0xB668CC")]
	private void ReleaseTextures()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xB68190", Offset = "0xB68190", VA = "0xB68190")]
	public static bool ValidateLutDimensions(Texture lut)
	{
		return default(bool);
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xB682EC", Offset = "0xB682EC", VA = "0xB682EC")]
	private void UpdatePostEffectParams()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xB6837C", Offset = "0xB6837C", VA = "0xB6837C")]
	private int ComputeShaderPass()
	{
		return default(int);
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xB68404", Offset = "0xB68404", VA = "0xB68404")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xB68D04", Offset = "0xB68D04", VA = "0xB68D04")]
	public AmplifyColorBase()
	{
	}
}
[Token(Token = "0x200003C")]
[ImageEffectTransformsToLDR]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7577A4", Offset = "0x7577A4")]
public sealed class AmplifyColorEffect : AmplifyColorBase
{
	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xB68F2C", Offset = "0xB68F2C", VA = "0xB68F2C")]
	public AmplifyColorEffect()
	{
	}
}
[Token(Token = "0x200003D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757800", Offset = "0x757800")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757800", Offset = "0x757800")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x757800", Offset = "0x757800")]
public class AmplifyColorTriggerProxy : AmplifyColorTriggerProxyBase
{
	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SphereCollider sphereCollider;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rigidBody;

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xB68F30", Offset = "0xB68F30", VA = "0xB68F30")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xB69014", Offset = "0xB69014", VA = "0xB69014")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xB69094", Offset = "0xB69094", VA = "0xB69094")]
	public AmplifyColorTriggerProxy()
	{
	}
}
[Token(Token = "0x200003E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7578B0", Offset = "0x7578B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7578B0", Offset = "0x7578B0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7578B0", Offset = "0x7578B0")]
public class AmplifyColorTriggerProxy2D : AmplifyColorTriggerProxyBase
{
	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CircleCollider2D circleCollider;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody2D rigidBody;

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xB690A4", Offset = "0xB690A4", VA = "0xB690A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xB69188", Offset = "0xB69188", VA = "0xB69188")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xB69208", Offset = "0xB69208", VA = "0xB69208")]
	public AmplifyColorTriggerProxy2D()
	{
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x757960", Offset = "0x757960")]
public class AmplifyColorTriggerProxyBase : MonoBehaviour
{
	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Reference;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AmplifyColorBase OwnerEffect;

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xB6909C", Offset = "0xB6909C", VA = "0xB6909C")]
	public AmplifyColorTriggerProxyBase()
	{
	}
}
[Token(Token = "0x2000040")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757998", Offset = "0x757998")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x757998", Offset = "0x757998")]
public class AmplifyColorVolume : AmplifyColorVolumeBase
{
	[Token(Token = "0x6000104")]
	[Address(RVA = "0xB69210", Offset = "0xB69210", VA = "0xB69210")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xB6931C", Offset = "0xB6931C", VA = "0xB6931C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xB69428", Offset = "0xB69428", VA = "0xB69428")]
	public AmplifyColorVolume()
	{
	}
}
[Token(Token = "0x2000041")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757A20", Offset = "0x757A20")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x757A20", Offset = "0x757A20")]
public class AmplifyColorVolume2D : AmplifyColorVolumeBase
{
	[Token(Token = "0x6000107")]
	[Address(RVA = "0xB694AC", Offset = "0xB694AC", VA = "0xB694AC")]
	private void OnTriggerEnter2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xB695B8", Offset = "0xB695B8", VA = "0xB695B8")]
	private void OnTriggerExit2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xB696C4", Offset = "0xB696C4", VA = "0xB696C4")]
	public AmplifyColorVolume2D()
	{
	}
}
[Token(Token = "0x2000042")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x757AA8", Offset = "0x757AA8")]
public class AmplifyColorVolumeBase : MonoBehaviour
{
	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D LutTexture;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Exposure;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float EnterBlendTime;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Priority;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool ShowInSceneView;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public VolumeEffectContainer EffectContainer;

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xB696C8", Offset = "0xB696C8", VA = "0xB696C8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xB69904", Offset = "0xB69904", VA = "0xB69904")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xB6942C", Offset = "0xB6942C", VA = "0xB6942C")]
	public AmplifyColorVolumeBase()
	{
	}
}
[Token(Token = "0x2000043")]
public class APIExamples : MonoBehaviour
{
	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B848", Offset = "0x75B848")]
	private sealed class <Start>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public APIExamples <>4__this;

		[Token(Token = "0x17000176")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001804")]
			[Address(RVA = "0xB5A870", Offset = "0xB5A870", VA = "0xB5A870", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001806")]
			[Address(RVA = "0xB5A8D8", Offset = "0xB5A8D8", VA = "0xB5A8D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xB5A0D8", Offset = "0xB5A0D8", VA = "0xB5A0D8")]
		[DebuggerHidden]
		public <Start>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xB5A2C0", Offset = "0xB5A2C0", VA = "0xB5A2C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xB5A2C4", Offset = "0xB5A2C4", VA = "0xB5A2C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xB5A878", Offset = "0xB5A878", VA = "0xB5A878", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int randomColorCount;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color[] RandomBrightColors;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color[] RandomPastelColors;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color[] RandomDarkColors;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color[] LerpOverTimeTargets;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color lerpTarget;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color lerpTargetMethod;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BlendStyle BlendStyle;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color BlendA;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Color BlendB;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Color BlendResult;

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xB5A05C", Offset = "0xB5A05C", VA = "0xB5A05C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7642D8", Offset = "0x7642D8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xB5A104", Offset = "0xB5A104", VA = "0xB5A104")]
	private void UpdateLerpTerget(Color c)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xB5A110", Offset = "0xB5A110", VA = "0xB5A110")]
	private void DemoRandomColors()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xB5A2A4", Offset = "0xB5A2A4", VA = "0xB5A2A4")]
	public APIExamples()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xB5A2B4", Offset = "0xB5A2B4", VA = "0xB5A2B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76433C", Offset = "0x76433C")]
	private void <Start>b__11_0(Color c)
	{
	}
}
[Token(Token = "0x2000044")]
public class CubeColorRotator : MonoBehaviour
{
	[Token(Token = "0x200030D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B858", Offset = "0x75B858")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CubeColorRotator <>4__this;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <target>5__2;

		[Token(Token = "0x17000178")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600180A")]
			[Address(RVA = "0x968564", Offset = "0x968564", VA = "0x968564", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600180C")]
			[Address(RVA = "0x9685CC", Offset = "0x9685CC", VA = "0x9685CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x968244", Offset = "0x968244", VA = "0x968244")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x968298", Offset = "0x968298", VA = "0x968298", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x96829C", Offset = "0x96829C", VA = "0x96829C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x96856C", Offset = "0x96856C", VA = "0x96856C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x9681C8", Offset = "0x9681C8", VA = "0x9681C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76434C", Offset = "0x76434C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x968270", Offset = "0x968270", VA = "0x968270")]
	private void Update()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x968274", Offset = "0x968274", VA = "0x968274")]
	public CubeColorRotator()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x96827C", Offset = "0x96827C", VA = "0x96827C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7643B0", Offset = "0x7643B0")]
	private void <Start>b__1_0(Color c)
	{
	}
}
[Token(Token = "0x2000045")]
public class DemoGui : MonoBehaviour
{
	[Token(Token = "0x200030E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B868", Offset = "0x75B868")]
	private sealed class <AnimateWindow>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DemoGui <>4__this;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <time>5__3;

		[Token(Token = "0x1700017A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001810")]
			[Address(RVA = "0x972880", Offset = "0x972880", VA = "0x972880", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001812")]
			[Address(RVA = "0x9728E8", Offset = "0x9728E8", VA = "0x9728E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x9717F4", Offset = "0x9717F4", VA = "0x9717F4")]
		[DebuggerHidden]
		public <AnimateWindow>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x972714", Offset = "0x972714", VA = "0x972714", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x972718", Offset = "0x972718", VA = "0x972718", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x972888", Offset = "0x972888", VA = "0x972888", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColorHSL color;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Texture2D previewTexture;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GUIStyle previewStyle;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float yPos;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int width;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int height;

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x971668", Offset = "0x971668", VA = "0x971668")]
	private void Start()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x971778", Offset = "0x971778", VA = "0x971778")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7643C0", Offset = "0x7643C0")]
	public IEnumerator AnimateWindow()
	{
		return null;
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x971820", Offset = "0x971820", VA = "0x971820")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x971914", Offset = "0x971914", VA = "0x971914")]
	private void DrawWindow(int windowID)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x9724DC", Offset = "0x9724DC", VA = "0x9724DC")]
	private void DrawColorPreview(Color color)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x972700", Offset = "0x972700", VA = "0x972700")]
	public DemoGui()
	{
	}
}
[Token(Token = "0x2000046")]
public static class ColorExtentions
{
	[Token(Token = "0x600011C")]
	[Address(RVA = "0x92E3BC", Offset = "0x92E3BC", VA = "0x92E3BC")]
	public static Color Lighten(this Color c, float difference)
	{
		return default(Color);
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x92E408", Offset = "0x92E408", VA = "0x92E408")]
	public static Color Darken(this Color c, float difference)
	{
		return default(Color);
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x92E44C", Offset = "0x92E44C", VA = "0x92E44C")]
	public static Color LightenRelative(this Color c, float percent)
	{
		return default(Color);
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x92E498", Offset = "0x92E498", VA = "0x92E498")]
	public static Color DarkenRelative(this Color c, float percent)
	{
		return default(Color);
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x92E4E0", Offset = "0x92E4E0", VA = "0x92E4E0")]
	public static Color Desaturate(this Color c, float difference)
	{
		return default(Color);
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x92E524", Offset = "0x92E524", VA = "0x92E524")]
	public static Color Saturate(this Color c, float difference)
	{
		return default(Color);
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x92E568", Offset = "0x92E568", VA = "0x92E568")]
	public static Color DesaturateRelative(this Color c, float percent)
	{
		return default(Color);
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x92E5B0", Offset = "0x92E5B0", VA = "0x92E5B0")]
	public static Color SaturateRelative(this Color c, float percent)
	{
		return default(Color);
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x92E5F8", Offset = "0x92E5F8", VA = "0x92E5F8")]
	public static Color Grayscale(this Color c)
	{
		return default(Color);
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x92E610", Offset = "0x92E610", VA = "0x92E610")]
	public static float Luminosity(this Color c)
	{
		return default(float);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x92E628", Offset = "0x92E628", VA = "0x92E628")]
	public static Color SelectContrasting(this Color c, Color a, Color b)
	{
		return default(Color);
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x92E738", Offset = "0x92E738", VA = "0x92E738")]
	public static bool IsSimilar(this Color c, Color other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x92E854", Offset = "0x92E854", VA = "0x92E854")]
	public static float HowSimilar(this Color c, Color other)
	{
		return default(float);
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x92E964", Offset = "0x92E964", VA = "0x92E964")]
	public static Color InvertHue(this Color c)
	{
		return default(Color);
	}
}
[Serializable]
[Token(Token = "0x2000047")]
public struct ColorHSL
{
	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float h;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float s;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float l;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float a;

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x92ED10", Offset = "0x92ED10", VA = "0x92ED10")]
	public ColorHSL(float h, float s, float l, float a = 1f)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x92ED1C", Offset = "0x92ED1C", VA = "0x92ED1C")]
	public ColorHSL(Color c)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x92ED44", Offset = "0x92ED44", VA = "0x92ED44")]
	public static ColorHSL FromColor(Color color)
	{
		return default(ColorHSL);
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x92EEB0", Offset = "0x92EEB0", VA = "0x92EEB0")]
	public static Color ToColor(ColorHSL color)
	{
		return default(Color);
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x92EFC4", Offset = "0x92EFC4", VA = "0x92EFC4")]
	private static float ExtractRGB(float m1, float m2, float hue)
	{
		return default(float);
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x92E400", Offset = "0x92E400", VA = "0x92E400")]
	public static implicit operator ColorHSL(Color src)
	{
		return default(ColorHSL);
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x92E404", Offset = "0x92E404", VA = "0x92E404")]
	public static implicit operator Color(ColorHSL src)
	{
		return default(Color);
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x92F048", Offset = "0x92F048", VA = "0x92F048", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x92F21C", Offset = "0x92F21C", VA = "0x92F21C")]
	public void Invert()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x92E9A8", Offset = "0x92E9A8", VA = "0x92E9A8")]
	public void InvertHue()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x92F254", Offset = "0x92F254", VA = "0x92F254")]
	public void InvertLightness()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x92F268", Offset = "0x92F268", VA = "0x92F268")]
	public void InvertSaturation()
	{
	}
}
[Token(Token = "0x2000048")]
public static class ColorHelper
{
	[Token(Token = "0x200030F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B878", Offset = "0x75B878")]
	private sealed class <DoLerp>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<Color> set;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color from;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color to;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float time;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <timer>5__2;

		[Token(Token = "0x1700017C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001816")]
			[Address(RVA = "0x9304A8", Offset = "0x9304A8", VA = "0x9304A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001818")]
			[Address(RVA = "0x930510", Offset = "0x930510", VA = "0x930510", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x930218", Offset = "0x930218", VA = "0x930218")]
		[DebuggerHidden]
		public <DoLerp>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x930380", Offset = "0x930380", VA = "0x930380", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x930384", Offset = "0x930384", VA = "0x930384", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x9304B0", Offset = "0x9304B0", VA = "0x9304B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000310")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B888", Offset = "0x75B888")]
	private sealed class <DoLerp>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Color> target;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Color> from;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Color> to;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x1700017E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600181C")]
			[Address(RVA = "0x930740", Offset = "0x930740", VA = "0x930740", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600181E")]
			[Address(RVA = "0x9307A8", Offset = "0x9307A8", VA = "0x9307A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x930244", Offset = "0x930244", VA = "0x930244")]
		[DebuggerHidden]
		public <DoLerp>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x930518", Offset = "0x930518", VA = "0x930518", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x93051C", Offset = "0x93051C", VA = "0x93051C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x930748", Offset = "0x930748", VA = "0x930748", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000311")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B898", Offset = "0x75B898")]
	private sealed class <DoLerp>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color[] target;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color[] from;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color[] to;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x17000180")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001822")]
			[Address(RVA = "0x930954", Offset = "0x930954", VA = "0x930954", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001824")]
			[Address(RVA = "0x9309BC", Offset = "0x9309BC", VA = "0x9309BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x930270", Offset = "0x930270", VA = "0x930270")]
		[DebuggerHidden]
		public <DoLerp>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x9307B0", Offset = "0x9307B0", VA = "0x9307B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x9307B4", Offset = "0x9307B4", VA = "0x9307B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x93095C", Offset = "0x93095C", VA = "0x93095C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static System.Random Random;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CoroutineRunner coroutineManager;

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x92F27C", Offset = "0x92F27C", VA = "0x92F27C")]
	public static Color RandomBrightColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x92F448", Offset = "0x92F448", VA = "0x92F448")]
	public static Color RandomPastelColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x92F4F0", Offset = "0x92F4F0", VA = "0x92F4F0")]
	public static Color RandomDarkColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x92F564", Offset = "0x92F564", VA = "0x92F564")]
	public static Color RandomColor(float saturation, float lightness)
	{
		return default(Color);
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x92F5E0", Offset = "0x92F5E0", VA = "0x92F5E0")]
	public static Color Blend(Color a, Color b, BlendStyle style)
	{
		return default(Color);
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x92F86C", Offset = "0x92F86C", VA = "0x92F86C")]
	public static Color Multiply(Color a, Color b)
	{
		return default(Color);
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x92F874", Offset = "0x92F874", VA = "0x92F874")]
	public static Color Screen(Color a, Color b)
	{
		return default(Color);
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x92F920", Offset = "0x92F920", VA = "0x92F920")]
	public static Color Overlay(Color a, Color b)
	{
		return default(Color);
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x92F9B4", Offset = "0x92F9B4", VA = "0x92F9B4")]
	public static Color Difference(Color a, Color b)
	{
		return default(Color);
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x92FA5C", Offset = "0x92FA5C", VA = "0x92FA5C")]
	public static Color Average(Color a, Color b)
	{
		return default(Color);
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x92FA7C", Offset = "0x92FA7C", VA = "0x92FA7C")]
	public static Color Negation(Color a, Color b)
	{
		return default(Color);
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x92FB50", Offset = "0x92FB50", VA = "0x92FB50")]
	public static Color Mix(Color a, Color b)
	{
		return default(Color);
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x92FB78", Offset = "0x92FB78", VA = "0x92FB78")]
	public static IEnumerator LerpOverTime(Action<Color> set, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x92FE98", Offset = "0x92FE98", VA = "0x92FE98")]
	public static IEnumerator LerpOverTime(List<Color> target, List<Color> from, List<Color> to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x930058", Offset = "0x930058", VA = "0x930058")]
	public static IEnumerator LerpOverTime(Color[] target, Color[] from, Color[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x92FC78", Offset = "0x92FC78", VA = "0x92FC78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x764504", Offset = "0x764504")]
	public static IEnumerator DoLerp(Action<Color> set, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x92FF9C", Offset = "0x92FF9C", VA = "0x92FF9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x764568", Offset = "0x764568")]
	public static IEnumerator DoLerp(List<Color> target, List<Color> from, List<Color> to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x93015C", Offset = "0x93015C", VA = "0x93015C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7645CC", Offset = "0x7645CC")]
	public static IEnumerator DoLerp(Color[] target, Color[] from, Color[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x93029C", Offset = "0x93029C", VA = "0x93029C")]
	public static void CancelLerpOverTime(IEnumerator handle)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x92FD58", Offset = "0x92FD58", VA = "0x92FD58")]
	private static CoroutineRunner GetCoroutineManager()
	{
		return null;
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x92F32C", Offset = "0x92F32C", VA = "0x92F32C")]
	private static float RandomValue()
	{
		return default(float);
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x92F3AC", Offset = "0x92F3AC", VA = "0x92F3AC")]
	private static float RandomRange(float min, float max)
	{
		return default(float);
	}
}
[Token(Token = "0x2000049")]
public enum BlendStyle
{
	[Token(Token = "0x40001CE")]
	Multiply,
	[Token(Token = "0x40001CF")]
	Screen,
	[Token(Token = "0x40001D0")]
	Overlay,
	[Token(Token = "0x40001D1")]
	Difference,
	[Token(Token = "0x40001D2")]
	Average,
	[Token(Token = "0x40001D3")]
	Negation
}
[Token(Token = "0x200004A")]
public class Colors
{
	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Color AliceBlue;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly Color AntiqueWhite;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly Color Aqua;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly Color Aquamarine;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly Color Azure;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Color Beige;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static readonly Color Bisque;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static readonly Color Black;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static readonly Color BlanchedAlmond;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static readonly Color Blue;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static readonly Color BlueViolet;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static readonly Color Brown;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static readonly Color Burlywood;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static readonly Color CadetBlue;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static readonly Color Chartreuse;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static readonly Color Chocolate;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public static readonly Color Coral;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public static readonly Color CornflowerBlue;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public static readonly Color Cornsilk;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public static readonly Color Crimson;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public static readonly Color Cyan;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public static readonly Color DarkBlue;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public static readonly Color DarkCyan;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public static readonly Color DarkGoldenrod;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public static readonly Color DarkGray;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public static readonly Color DarkGreen;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public static readonly Color DarkKhaki;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public static readonly Color DarkMagenta;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public static readonly Color DarkOliveGreen;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public static readonly Color DarkOrange;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public static readonly Color DarkOrchid;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public static readonly Color DarkRed;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public static readonly Color DarkSalmon;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public static readonly Color DarkSeaGreen;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public static readonly Color DarkSlateBlue;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public static readonly Color DarkSlateGray;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public static readonly Color DarkTurquoise;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public static readonly Color DarkViolet;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public static readonly Color DeepPink;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public static readonly Color DeepSkyBlue;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public static readonly Color DimGray;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public static readonly Color DodgerBlue;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public static readonly Color FireBrick;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public static readonly Color FloralWhite;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public static readonly Color ForestGreen;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public static readonly Color Fuchsia;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public static readonly Color Gainsboro;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public static readonly Color GhostWhite;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public static readonly Color Gold;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public static readonly Color Goldenrod;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public static readonly Color Gray;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public static readonly Color Green;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public static readonly Color GreenYellow;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public static readonly Color Honeydew;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public static readonly Color HotPink;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public static readonly Color IndianRed;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public static readonly Color Indigo;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public static readonly Color Ivory;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public static readonly Color Khaki;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public static readonly Color Lavender;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public static readonly Color Lavenderblush;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public static readonly Color LawnGreen;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public static readonly Color LemonChiffon;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public static readonly Color LightBlue;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public static readonly Color LightCoral;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public static readonly Color LightCyan;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public static readonly Color LightGoldenodYellow;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	public static readonly Color LightGray;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	public static readonly Color LightGreen;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	public static readonly Color LightPink;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	public static readonly Color LightSalmon;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	public static readonly Color LightSeaGreen;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	public static readonly Color LightSkyBlue;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	public static readonly Color LightSlateGray;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	public static readonly Color LightSteelBlue;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	public static readonly Color LightYellow;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	public static readonly Color Lime;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	public static readonly Color LimeGreen;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	public static readonly Color Linen;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	public static readonly Color Magenta;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	public static readonly Color Maroon;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
	public static readonly Color MediumAquamarine;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
	public static readonly Color MediumBlue;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
	public static readonly Color MediumOrchid;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
	public static readonly Color MediumPurple;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
	public static readonly Color MediumSeaGreen;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
	public static readonly Color MediumSlateBlue;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
	public static readonly Color MediumSpringGreen;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
	public static readonly Color MediumTurquoise;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
	public static readonly Color MediumVioletRed;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
	public static readonly Color MidnightBlue;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
	public static readonly Color Mintcream;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
	public static readonly Color MistyRose;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D0")]
	public static readonly Color Moccasin;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
	public static readonly Color NavajoWhite;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
	public static readonly Color Navy;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
	public static readonly Color OldLace;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x610")]
	public static readonly Color Olive;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x620")]
	public static readonly Color Olivedrab;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x630")]
	public static readonly Color Orange;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x640")]
	public static readonly Color Orangered;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x650")]
	public static readonly Color Orchid;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x660")]
	public static readonly Color PaleGoldenrod;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x670")]
	public static readonly Color PaleGreen;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x680")]
	public static readonly Color PaleTurquoise;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x690")]
	public static readonly Color PaleVioletred;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A0")]
	public static readonly Color PapayaWhip;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B0")]
	public static readonly Color PeachPuff;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C0")]
	public static readonly Color Peru;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D0")]
	public static readonly Color Pink;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E0")]
	public static readonly Color Plum;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F0")]
	public static readonly Color PowderBlue;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x700")]
	public static readonly Color Purple;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x710")]
	public static readonly Color Red;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x720")]
	public static readonly Color RosyBrown;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x730")]
	public static readonly Color RoyalBlue;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x740")]
	public static readonly Color SaddleBrown;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x750")]
	public static readonly Color Salmon;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x760")]
	public static readonly Color SandyBrown;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x770")]
	public static readonly Color SeaGreen;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x780")]
	public static readonly Color Seashell;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x790")]
	public static readonly Color Sienna;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A0")]
	public static readonly Color Silver;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B0")]
	public static readonly Color SkyBlue;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C0")]
	public static readonly Color SlateBlue;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D0")]
	public static readonly Color SlateGray;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E0")]
	public static readonly Color Snow;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F0")]
	public static readonly Color SpringGreen;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x800")]
	public static readonly Color SteelBlue;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x810")]
	public static readonly Color Tan;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x820")]
	public static readonly Color Teal;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x830")]
	public static readonly Color Thistle;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x840")]
	public static readonly Color Tomato;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x850")]
	public static readonly Color Turquoise;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x860")]
	public static readonly Color Violet;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x870")]
	public static readonly Color Wheat;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x880")]
	public static readonly Color White;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x890")]
	public static readonly Color WhiteSmoke;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A0")]
	public static readonly Color Yellow;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B0")]
	public static readonly Color YellowGreen;

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x9309C4", Offset = "0x9309C4", VA = "0x9309C4")]
	public Colors()
	{
	}
}
[Token(Token = "0x200004B")]
public class CoroutineRunner : MonoBehaviour
{
	[Token(Token = "0x600014F")]
	[Address(RVA = "0x938770", Offset = "0x938770", VA = "0x938770")]
	public CoroutineRunner()
	{
	}
}
[Token(Token = "0x200004C")]
[ExecuteInEditMode]
public class SceneColorControl_Anim : MonoBehaviour
{
	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material skyMaterial;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color skyColor;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color horizonColor;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color groundColor;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float skyIntensity;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float skyFocus;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float horizonColorBanding;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool customFogColor;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color fogColor;

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x9093E0", Offset = "0x9093E0", VA = "0x9093E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x909410", Offset = "0x909410", VA = "0x909410")]
	private void Update()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x909890", Offset = "0x909890", VA = "0x909890")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x909414", Offset = "0x909414", VA = "0x909414")]
	private void UpdateColors()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x909894", Offset = "0x909894", VA = "0x909894")]
	public SceneColorControl_Anim()
	{
	}
}
[Token(Token = "0x200004D")]
public class effectPlayVolume : MonoBehaviour
{
	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem[] effectsToPlay;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool armed;

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x1682E78", Offset = "0x1682E78", VA = "0x1682E78")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1682E84", Offset = "0x1682E84", VA = "0x1682E84")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1682E8C", Offset = "0x1682E8C", VA = "0x1682E8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x1682F3C", Offset = "0x1682F3C", VA = "0x1682F3C")]
	public effectPlayVolume()
	{
	}
}
[Token(Token = "0x200004E")]
public class effectSpawnVolume : MonoBehaviour
{
	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform effectToSpawn;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 spawnPosition;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 spawnRotation;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool armed;

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1682F44", Offset = "0x1682F44", VA = "0x1682F44")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1682F50", Offset = "0x1682F50", VA = "0x1682F50")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x1682F58", Offset = "0x1682F58", VA = "0x1682F58")]
	private void Update()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x1683104", Offset = "0x1683104", VA = "0x1683104")]
	public effectSpawnVolume()
	{
	}
}
[Token(Token = "0x200004F")]
public class simpleFPSCamera : MonoBehaviour
{
	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 sensitivity;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 speed;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minimumY;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maximumY;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotationY;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationX;

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x1685CA4", Offset = "0x1685CA4", VA = "0x1685CA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x1686004", Offset = "0x1686004", VA = "0x1686004")]
	public simpleFPSCamera()
	{
	}
}
[Token(Token = "0x2000050")]
public class startPlaying_stopPlaying : MonoBehaviour
{
	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool armed;

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x168608C", Offset = "0x168608C", VA = "0x168608C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x1686098", Offset = "0x1686098", VA = "0x1686098")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x16860A0", Offset = "0x16860A0", VA = "0x16860A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x16860E4", Offset = "0x16860E4", VA = "0x16860E4")]
	private void StartPlaying()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x1686104", Offset = "0x1686104", VA = "0x1686104")]
	private void StopPlaying()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1686124", Offset = "0x1686124", VA = "0x1686124")]
	public startPlaying_stopPlaying()
	{
	}
}
[Token(Token = "0x2000051")]
public class toggleLight : MonoBehaviour
{
	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject playerLight;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool lightOn;

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x1686134", Offset = "0x1686134", VA = "0x1686134")]
	private void Start()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1686138", Offset = "0x1686138", VA = "0x1686138")]
	private void Update()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x16861BC", Offset = "0x16861BC", VA = "0x16861BC")]
	public toggleLight()
	{
	}
}
[Token(Token = "0x2000052")]
public class ME_AnimatorEvents : MonoBehaviour
{
	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject EffectPrefab;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SwordPrefab;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform SwordPosition;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform StartSwordPosition;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject EffectInstance;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject SwordInstance;

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xA3B104", Offset = "0xA3B104", VA = "0xA3B104")]
	private void Start()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xA3B2A4", Offset = "0xA3B2A4", VA = "0xA3B2A4")]
	public void ActivateEffect()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xA3B4E0", Offset = "0xA3B4E0", VA = "0xA3B4E0")]
	public void ActivateSword()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xA3B5A8", Offset = "0xA3B5A8", VA = "0xA3B5A8")]
	public void UpdateColor(float HUE)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xA3BB60", Offset = "0xA3BB60", VA = "0xA3BB60")]
	public ME_AnimatorEvents()
	{
	}
}
[Token(Token = "0x2000053")]
public static class ME_ColorHelper
{
	[Token(Token = "0x2000312")]
	public struct HSBColor
	{
		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float H;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float S;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float B;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float A;

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xA3BB68", Offset = "0xA3BB68", VA = "0xA3BB68")]
		public HSBColor(float h, float s, float b, float a)
		{
		}
	}

	[Token(Token = "0x400027F")]
	private const float TOLERANCE = 0.0001f;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] colorProperties;

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xA3B700", Offset = "0xA3B700", VA = "0xA3B700")]
	public static HSBColor ColorToHSV(Color color)
	{
		return default(HSBColor);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xA3B8EC", Offset = "0xA3B8EC", VA = "0xA3B8EC")]
	public static Color HSVToColor(HSBColor hsbColor)
	{
		return default(Color);
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xA3BB74", Offset = "0xA3BB74", VA = "0xA3BB74")]
	public static Color ConvertRGBColorByHUE(Color rgbColor, float hue)
	{
		return default(Color);
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xA3BC94", Offset = "0xA3BC94", VA = "0xA3BC94")]
	public static void ChangeObjectColorByHUE(GameObject go, float hue)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xA3C8E0", Offset = "0xA3C8E0", VA = "0xA3C8E0")]
	private static Material setMatHUEColor(Material mat, string name, float hueColor)
	{
		return null;
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xA3C9BC", Offset = "0xA3C9BC", VA = "0xA3C9BC")]
	private static Material setMatAlphaColor(Material mat, string name, float alpha)
	{
		return null;
	}
}
[Token(Token = "0x2000054")]
public class ME_EffectSettingColor : MonoBehaviour
{
	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color Color;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color previousColor;

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xA3E4A8", Offset = "0xA3E4A8", VA = "0xA3E4A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xA3E4AC", Offset = "0xA3E4AC", VA = "0xA3E4AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xA3E4F4", Offset = "0xA3E4F4", VA = "0xA3E4F4")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xA3E5A0", Offset = "0xA3E5A0", VA = "0xA3E5A0")]
	public ME_EffectSettingColor()
	{
	}
}
[Token(Token = "0x2000055")]
[ExecuteInEditMode]
public class ME_CustomLight : MonoBehaviour
{
	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int MaxLightsCount;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D PointLightAttenuation;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Light> sceneLights;

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xA3CD40", Offset = "0xA3CD40", VA = "0xA3CD40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xA3D10C", Offset = "0xA3D10C", VA = "0xA3D10C")]
	private void Update()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xA3E31C", Offset = "0xA3E31C", VA = "0xA3E31C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xA3D2A4", Offset = "0xA3D2A4", VA = "0xA3D2A4")]
	private List<Light> GetAllLights()
	{
		return null;
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xA3D440", Offset = "0xA3D440", VA = "0xA3D440")]
	private int FillDirectionalLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xA3D970", Offset = "0xA3D970", VA = "0xA3D970")]
	private int FillPointLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xA3CE94", Offset = "0xA3CE94", VA = "0xA3CE94")]
	private Vector4[] ListToArrayWithMaxCount(List<Vector4> list, int count)
	{
		return null;
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xA3D6B4", Offset = "0xA3D6B4", VA = "0xA3D6B4")]
	private List<Light> SortPointLightsByDistance(List<Light> lights)
	{
		return null;
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xA3DBF4", Offset = "0xA3DBF4", VA = "0xA3DBF4")]
	public Color SampleLightProbesUp(Vector3 pos, float grayScaleFactor)
	{
		return default(Color);
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xA3CFC0", Offset = "0xA3CFC0", VA = "0xA3CFC0")]
	private Texture2D GeneratePointAttenuationTexture()
	{
		return null;
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xA3E44C", Offset = "0xA3E44C", VA = "0xA3E44C")]
	public ME_CustomLight()
	{
	}
}
[Token(Token = "0x2000056")]
public class ME_FixParticlesAligment : MonoBehaviour
{
	[Token(Token = "0x6000184")]
	[Address(RVA = "0xA3E5D4", Offset = "0xA3E5D4", VA = "0xA3E5D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xA3E64C", Offset = "0xA3E64C", VA = "0xA3E64C")]
	public ME_FixParticlesAligment()
	{
	}
}
[Token(Token = "0x2000057")]
public class ME_LightCurves : MonoBehaviour
{
	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xA3E654", Offset = "0xA3E654", VA = "0xA3E654")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xA3E6E0", Offset = "0xA3E6E0", VA = "0xA3E6E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xA3E710", Offset = "0xA3E710", VA = "0xA3E710")]
	private void Update()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xA3E7B4", Offset = "0xA3E7B4", VA = "0xA3E7B4")]
	public ME_LightCurves()
	{
	}
}
[Token(Token = "0x2000058")]
public class ME_MeshMaterialEffect : MonoBehaviour
{
	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material Material;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsFirstMaterial;

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xA3E808", Offset = "0xA3E808", VA = "0xA3E808")]
	public ME_MeshMaterialEffect()
	{
	}
}
[Token(Token = "0x2000059")]
[ExecuteInEditMode]
public class ME_ParticleCollisionDecal : MonoBehaviour
{
	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem DecalParticles;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsBilboard;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool InstantiateWhenZeroSpeed;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MaxGroundAngleDeviation;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MinDistanceBetweenDecals;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MinDistanceBetweenSurface;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem initiatorPS;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> collidedGameObjects;

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xA3E810", Offset = "0xA3E810", VA = "0xA3E810")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xA3E92C", Offset = "0xA3E92C", VA = "0xA3E92C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xA3E994", Offset = "0xA3E994", VA = "0xA3E994")]
	private void CollisionDetect()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xA3EAB4", Offset = "0xA3EAB4", VA = "0xA3EAB4")]
	private void OnParticleCollisionManual(GameObject other, int aliveParticles = -1)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xA3EFEC", Offset = "0xA3EFEC", VA = "0xA3EFEC")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xA3F0A8", Offset = "0xA3F0A8", VA = "0xA3F0A8")]
	public ME_ParticleCollisionDecal()
	{
	}
}
[Token(Token = "0x200005A")]
[ExecuteInEditMode]
public class ME_ParticleGravityPoint : MonoBehaviour
{
	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Force;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool DistanceRelative;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.MainModule mainModule;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 prevPos;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xA3F170", Offset = "0xA3F170", VA = "0xA3F170")]
	private void Start()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xA3F1F4", Offset = "0xA3F1F4", VA = "0xA3F1F4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xA3F5CC", Offset = "0xA3F5CC", VA = "0xA3F5CC")]
	public ME_ParticleGravityPoint()
	{
	}
}
[Token(Token = "0x200005B")]
public class ME_ParticleTrails : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000313")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B8A8", Offset = "0x75B8A8")]
	private sealed class <>c
	{
		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<KeyValuePair<uint, GameObject>, bool> <>9__13_0;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<uint, GameObject>, uint> <>9__13_1;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<KeyValuePair<uint, GameObject>, GameObject> <>9__13_2;

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xA402F8", Offset = "0xA402F8", VA = "0xA402F8")]
		public <>c()
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xA40300", Offset = "0xA40300", VA = "0xA40300")]
		internal bool <ClearEmptyHashes>b__13_0(KeyValuePair<uint, GameObject> h)
		{
			return default(bool);
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xA4036C", Offset = "0xA4036C", VA = "0xA4036C")]
		internal uint <ClearEmptyHashes>b__13_1(KeyValuePair<uint, GameObject> h)
		{
			return default(uint);
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xA403B0", Offset = "0xA403B0", VA = "0xA403B0")]
		internal GameObject <ClearEmptyHashes>b__13_2(KeyValuePair<uint, GameObject> h)
		{
			return null;
		}
	}

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TrailPrefab;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem ps;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<uint, GameObject> hashTrails;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<uint, GameObject> newHashTrails;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> currentGO;

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xA3F5DC", Offset = "0xA3F5DC", VA = "0xA3F5DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xA3F698", Offset = "0xA3F698", VA = "0xA3F698")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xA3F6F4", Offset = "0xA3F6F4", VA = "0xA3F6F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xA3F750", Offset = "0xA3F750", VA = "0xA3F750")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xA3F880", Offset = "0xA3F880", VA = "0xA3F880")]
	private void Update()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xA3F884", Offset = "0xA3F884", VA = "0xA3F884")]
	private void UpdateTrail()
	{
	}

	[Token(Token = "0x600019A")]
	public void AddRange<T, S>(Dictionary<T, S> source, Dictionary<T, S> collection)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xA3FF54", Offset = "0xA3FF54", VA = "0xA3FF54")]
	private void ClearEmptyHashes()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xA401B4", Offset = "0xA401B4", VA = "0xA401B4")]
	public ME_ParticleTrails()
	{
	}
}
[Token(Token = "0x200005C")]
public class ME_Reflection : MonoBehaviour
{
	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture tex;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ReflectionProbe reflectionProbe;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Light> dirLight;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<float> lightIntencity;

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xA408A0", Offset = "0xA408A0", VA = "0xA408A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xA40B2C", Offset = "0xA40B2C", VA = "0xA40B2C")]
	private void Update()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xA40CCC", Offset = "0xA40CCC", VA = "0xA40CCC")]
	public ME_Reflection()
	{
	}
}
[Token(Token = "0x200005D")]
public class ME_TrailRendererNoise : MonoBehaviour
{
	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75C5A4", Offset = "0x75C5A4")]
	public float MinVertexDistance;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float VertexTime;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TotalLifeTime;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool SmoothCurves;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool IsRibbon;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool IsActive;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75C5C0", Offset = "0x75C5C0")]
	public float Frequency;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75C5DC", Offset = "0x75C5DC")]
	public float TimeScale;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75C5F8", Offset = "0x75C5F8")]
	public float Amplitude;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Gravity;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float TurbulenceStrength;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool AutodestructWhenNotActive;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform t;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 prevPos;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector3> points;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<float> lifeTimes;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Vector3> velocities;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float randomOffset;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Vector3> controlPoints;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int curveCount;

	[Token(Token = "0x40002BF")]
	private const float MinimumSqrDistance = 0.01f;

	[Token(Token = "0x40002C0")]
	private const float DivisionThreshold = -0.99f;

	[Token(Token = "0x40002C1")]
	private const float SmoothCurvesScale = 0.5f;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xA40CD4", Offset = "0xA40CD4", VA = "0xA40CD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xA40E44", Offset = "0xA40E44", VA = "0xA40E44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xA40EC4", Offset = "0xA40EC4", VA = "0xA40EC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xA40FD0", Offset = "0xA40FD0", VA = "0xA40FD0")]
	private void AddNewPoints()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xA41224", Offset = "0xA41224", VA = "0xA41224")]
	private void UpdatetPoints()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xA413D8", Offset = "0xA413D8", VA = "0xA413D8")]
	private void UpdateLineRendererBezier()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xA414A0", Offset = "0xA414A0", VA = "0xA414A0")]
	private void UpdateLineRenderer()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xA41570", Offset = "0xA41570", VA = "0xA41570")]
	private void CalculateTurbuelence(Vector3 position, float speed, float scale, float height, float gravity, int index)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xA417B0", Offset = "0xA417B0", VA = "0xA417B0")]
	public void InterpolateBezier(List<Vector3> segmentPoints, float scale)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xA41CF4", Offset = "0xA41CF4", VA = "0xA41CF4")]
	public List<Vector3> GetDrawingPoints()
	{
		return null;
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xA41DDC", Offset = "0xA41DDC", VA = "0xA41DDC")]
	private List<Vector3> FindDrawingPoints(int curveIndex)
	{
		return null;
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xA42090", Offset = "0xA42090", VA = "0xA42090")]
	private int FindDrawingPoints(int curveIndex, float t0, float t1, List<Vector3> pointList, int insertionIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xA41EFC", Offset = "0xA41EFC", VA = "0xA41EFC")]
	public Vector3 CalculateBezierPoint(int curveIndex, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xA42364", Offset = "0xA42364", VA = "0xA42364")]
	private Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xA4252C", Offset = "0xA4252C", VA = "0xA4252C")]
	public ME_TrailRendererNoise()
	{
	}
}
[Token(Token = "0x200005E")]
[ExecuteInEditMode]
public class PSMeshRendererUpdater : MonoBehaviour
{
	[Token(Token = "0x2000314")]
	private class ParticleStartInfo
	{
		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem.MinMaxCurve StartSize;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem.MinMaxCurve StartSpeed;

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x9E3E4C", Offset = "0x9E3E4C", VA = "0x9E3E4C")]
		public ParticleStartInfo()
		{
		}
	}

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MeshObject;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float StartScaleMultiplier;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color Color;

	[Token(Token = "0x40002C5")]
	private const string materialName = "MeshEffect";

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Material[]> rendererMaterials;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Material[]> skinnedMaterials;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool IsActive;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float FadeTime;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool currentActiveStatus;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool needUpdateAlpha;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color oldColor;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentAlphaTime;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string[] colorProperties;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float alpha;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float prevAlpha;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<string, float> startAlphaColors;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool previousActiveStatus;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool needUpdate;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool needLastUpdate;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<ParticleSystem, ParticleStartInfo> startParticleParameters;

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xB995F0", Offset = "0xB995F0", VA = "0xB995F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xB99600", Offset = "0xB99600", VA = "0xB99600")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xB997B8", Offset = "0xB997B8", VA = "0xB997B8")]
	private void InitStartAlphaColors()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xB9A798", Offset = "0xB9A798", VA = "0xB9A798")]
	private void InitStartParticleParameters()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xB99DDC", Offset = "0xB99DDC", VA = "0xB99DDC")]
	private void UpdateVisibleStatus()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xB9A94C", Offset = "0xB9A94C", VA = "0xB9A94C")]
	private void UpdateAlphaByProperties(string rendName, int materialNumber, Material mat, float alpha)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xB9A5D8", Offset = "0xB9A5D8", VA = "0xB9A5D8")]
	private void GetStartAlphaByProperties(string rendName, int materialNumber, Material mat)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xB9A4EC", Offset = "0xB9A4EC", VA = "0xB9A4EC")]
	public void UpdateColor(Color color)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xB9AABC", Offset = "0xB9AABC", VA = "0xB9AABC")]
	public void UpdateColor(float HUE)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xB9AB80", Offset = "0xB9AB80", VA = "0xB9AB80")]
	public void UpdateMeshEffect()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xB9B4A4", Offset = "0xB9B4A4", VA = "0xB9B4A4")]
	private void CheckScaleIncludedParticles()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xB9B4A8", Offset = "0xB9B4A8", VA = "0xB9B4A8")]
	public void UpdateMeshEffect(GameObject go)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xB9ACB8", Offset = "0xB9ACB8", VA = "0xB9ACB8")]
	private void UpdatePSMesh(GameObject go)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xB9B5BC", Offset = "0xB9B5BC", VA = "0xB9B5BC")]
	private ParticleSystem.MinMaxCurve UpdateParticleParam(ParticleSystem.MinMaxCurve startParam, ParticleSystem.MinMaxCurve currentParam, float scale)
	{
		return default(ParticleSystem.MinMaxCurve);
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xB9B2AC", Offset = "0xB9B2AC", VA = "0xB9B2AC")]
	private void AddMaterialToMesh(GameObject go)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xB9B678", Offset = "0xB9B678", VA = "0xB9B678")]
	private Material[] AddToSharedMaterial(Material[] sharedMaterials, ME_MeshMaterialEffect meshMatEffect)
	{
		return null;
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xB9B814", Offset = "0xB9B814", VA = "0xB9B814")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xB9BBD8", Offset = "0xB9BBD8", VA = "0xB9BBD8")]
	public PSMeshRendererUpdater()
	{
	}
}
[Token(Token = "0x200005F")]
public class ME_PerPlatformSettings : MonoBehaviour
{
	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool DisableOnMobiles;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool RenderMobileDistortion;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75C614", Offset = "0x75C614")]
	public float ParticleBudgetForMobiles;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isMobile;

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xA403F4", Offset = "0xA403F4", VA = "0xA403F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xA40478", Offset = "0xA40478", VA = "0xA40478")]
	private bool IsMobilePlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xA40480", Offset = "0xA40480", VA = "0xA40480")]
	private void ChangeParticlesBudget(float particlesMul)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xA40890", Offset = "0xA40890", VA = "0xA40890")]
	public ME_PerPlatformSettings()
	{
	}
}
[Token(Token = "0x2000060")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757B40", Offset = "0x757B40")]
public class AutoUpdate : MonoBehaviour
{
	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ImplicitSurfaceMeshCreaterBase _surface;

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xAC7B90", Offset = "0xAC7B90", VA = "0xAC7B90")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xAC7BF0", Offset = "0xAC7BF0", VA = "0xAC7BF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xAC7C10", Offset = "0xAC7C10", VA = "0xAC7C10")]
	public AutoUpdate()
	{
	}
}
[Token(Token = "0x2000061")]
public class ImplicitSurface : ImplicitSurfaceMeshCreaterBase
{
	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MeshFilter meshFilter;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MeshCollider meshCollider;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Vector3[] _positionMap;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected float[] _powerMap;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected float[] _powerMapMask;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected int _countX;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected int _countY;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected int _countZ;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _bMapsDirty;

	[Token(Token = "0x17000006")]
	public MeshFilter MeshFilter
	{
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x9DE9B0", Offset = "0x9DE9B0", VA = "0x9DE9B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000007")]
	public override Mesh Mesh
	{
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x9DEA5C", Offset = "0x9DEA5C", VA = "0x9DEA5C", Slot = "5")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x9DEA78", Offset = "0x9DEA78", VA = "0x9DEA78", Slot = "6")]
		set
		{
		}
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x9DEA94", Offset = "0x9DEA94", VA = "0x9DEA94")]
	protected void ResetMaps()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x9DEFAC", Offset = "0x9DEFAC", VA = "0x9DEFAC", Slot = "8")]
	protected virtual void InitializePowerMap()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x9DF014", Offset = "0x9DF014", VA = "0x9DF014", Slot = "4")]
	public override void CreateMesh()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x9DF3A0", Offset = "0x9DF3A0", VA = "0x9DF3A0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x9DF4C0", Offset = "0x9DF4C0", VA = "0x9DF4C0")]
	public ImplicitSurface()
	{
	}
}
[Token(Token = "0x2000062")]
public abstract class ImplicitSurfaceMeshCreaterBase : MonoBehaviour
{
	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float gridSize;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75C630", Offset = "0x75C630")]
	public bool bAutoGridSize;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75C668", Offset = "0x75C668")]
	public float autoGridQuarity;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MetaballUVGuide uvProjectNode;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float powerThreshold;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool bReverse;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Bounds fixedBounds;

	[Token(Token = "0x17000008")]
	public float GridSize
	{
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x9DF5D0", Offset = "0x9DF5D0", VA = "0x9DF5D0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000009")]
	public abstract Mesh Mesh
	{
		[Token(Token = "0x60001D2")]
		get;
		[Token(Token = "0x60001D3")]
		set;
	}

	[Token(Token = "0x60001D1")]
	public abstract void CreateMesh();

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x9DF64C", Offset = "0x9DF64C", VA = "0x9DF64C", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x9DF17C", Offset = "0x9DF17C", VA = "0x9DF17C")]
	protected void GetUVBaseVector(out Vector3 uDir, out Vector3 vDir, out Vector3 offset)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x9DF4CC", Offset = "0x9DF4CC", VA = "0x9DF4CC")]
	protected ImplicitSurfaceMeshCreaterBase()
	{
	}
}
[Token(Token = "0x2000063")]
public abstract class IMBrush : MonoBehaviour
{
	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IncrementalModeling im;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeRadius;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool bSubtract;

	[Token(Token = "0x1700000A")]
	public float PowerScale
	{
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x9DD8F0", Offset = "0x9DD8F0", VA = "0x9DD8F0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x9DD908", Offset = "0x9DD908", VA = "0x9DD908")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x764630", Offset = "0x764630")]
	public void Draw()
	{
	}

	[Token(Token = "0x60001D9")]
	protected abstract void DoDraw();

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x9DDA34", Offset = "0x9DDA34", VA = "0x9DDA34")]
	protected IMBrush()
	{
	}
}
[Token(Token = "0x2000064")]
public class IMBrushBox : IMBrush
{
	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 extents;

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x9DDA48", Offset = "0x9DDA48", VA = "0x9DDA48", Slot = "4")]
	protected override void DoDraw()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x9DDC34", Offset = "0x9DDC34", VA = "0x9DDC34")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x9DDEAC", Offset = "0x9DDEAC", VA = "0x9DDEAC")]
	public IMBrushBox()
	{
	}
}
[Token(Token = "0x2000065")]
public class IMBrushSphere : IMBrush
{
	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float radius;

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x9DDF30", Offset = "0x9DDF30", VA = "0x9DDF30", Slot = "4")]
	protected override void DoDraw()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x9DE154", Offset = "0x9DE154", VA = "0x9DE154")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x9DE308", Offset = "0x9DE308", VA = "0x9DE308")]
	public IMBrushSphere()
	{
	}
}
[Token(Token = "0x2000066")]
public class IncrementalModeling : ImplicitSurface
{
	[Serializable]
	[Token(Token = "0x2000315")]
	public class Brush
	{
		[Token(Token = "0x2000481")]
		public enum Shape
		{
			[Token(Token = "0x4001E5E")]
			sphere,
			[Token(Token = "0x4001E5F")]
			box
		}

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fadeRadius;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float powerScale;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4 invTransform;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float sphereRadius;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 boxExtents;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shape shape;

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x9DFA5C", Offset = "0x9DFA5C", VA = "0x9DFA5C")]
		public Brush()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x9DF8CC", Offset = "0x9DF8CC", VA = "0x9DF8CC")]
		public Brush(Shape shape_, Matrix4x4 invTransformMtx_, float fadeRadius_, float powerScale_, float sphereRadius_, Vector3 boxExtents_)
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x9DF748", Offset = "0x9DF748", VA = "0x9DF748")]
		public void Draw(IncrementalModeling model)
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x9DFAF4", Offset = "0x9DFAF4", VA = "0x9DFAF4")]
		private void DrawSphere(IncrementalModeling model)
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x9DFCF8", Offset = "0x9DFCF8", VA = "0x9DFCF8")]
		private void DrawBox(IncrementalModeling model)
		{
		}
	}

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	public bool bSaveBrushHistory;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private List<Brush> _brushHistory;

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x9DF650", Offset = "0x9DF650", VA = "0x9DF650", Slot = "8")]
	protected override void InitializePowerMap()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x9DF764", Offset = "0x9DF764", VA = "0x9DF764")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x764668", Offset = "0x764668")]
	public void Rebuild()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x9DF874", Offset = "0x9DF874", VA = "0x9DF874")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x7646A0", Offset = "0x7646A0")]
	public void ClearHistory()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x9DDF84", Offset = "0x9DDF84", VA = "0x9DDF84")]
	public void AddSphere(Transform brushTransform, float radius, float powerScale, float fadeRadius)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x9DDAA0", Offset = "0x9DDAA0", VA = "0x9DDAA0")]
	public void AddBox(Transform brushTransform, Vector3 extents, float powerScale, float fadeRadius)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x9DF9D0", Offset = "0x9DF9D0", VA = "0x9DF9D0")]
	public IncrementalModeling()
	{
	}
}
[Token(Token = "0x2000067")]
public class MetaballNode : MonoBehaviour
{
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float baseRadius;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool bSubtract;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MetaballSeedBase _seed;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh _boneMesh;

	[Token(Token = "0x1700000B")]
	public virtual float Density
	{
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xB8C1F0", Offset = "0xB8C1F0", VA = "0xB8C1F0", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000C")]
	public float Radius
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xB8C208", Offset = "0xB8C208", VA = "0xB8C208")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xB8C210", Offset = "0xB8C210", VA = "0xB8C210")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xB8CCE4", Offset = "0xB8CCE4", VA = "0xB8CCE4")]
	public MetaballNode()
	{
	}
}
[Token(Token = "0x2000068")]
public class MetaballRootNode : MetaballNode
{
	[Token(Token = "0x1700000D")]
	public override float Density
	{
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xB8CCF4", Offset = "0xB8CCF4", VA = "0xB8CCF4", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xB8CCFC", Offset = "0xB8CCFC", VA = "0xB8CCFC")]
	public MetaballRootNode()
	{
	}
}
[Token(Token = "0x2000069")]
public abstract class MetaballSeedBase : ImplicitSurfaceMeshCreaterBase
{
	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform boneRoot;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MetaballNode sourceRoot;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MetaballCellObject cellObjPrefab;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float baseRadius;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool bUseFixedBounds;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected string _errorMsg;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject[] _boneNodes;

	[Token(Token = "0x1700000E")]
	public abstract bool IsTreeShape
	{
		[Token(Token = "0x60001ED")]
		get;
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xB8CD0C", Offset = "0xB8CD0C", VA = "0xB8CD0C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xB8CE4C", Offset = "0xB8CE4C", VA = "0xB8CE4C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xB8CF64", Offset = "0xB8CF64", VA = "0xB8CF64")]
	protected void EnumBoneNodes()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xB8D010", Offset = "0xB8D010", VA = "0xB8D010")]
	private void EnumerateGameObjects(GameObject parent, List<GameObject> list)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xB8D100", Offset = "0xB8D100", VA = "0xB8D100")]
	protected void CleanupBoneRoot()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xB8D278", Offset = "0xB8D278", VA = "0xB8D278")]
	protected MetaballSeedBase()
	{
	}
}
[Token(Token = "0x200006A")]
public class MetaballUVGuide : MonoBehaviour
{
	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float uScale;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float vScale;

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xB8D2EC", Offset = "0xB8D2EC", VA = "0xB8D2EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xB8D2F0", Offset = "0xB8D2F0", VA = "0xB8D2F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xB8D2F4", Offset = "0xB8D2F4", VA = "0xB8D2F4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xB8D3E8", Offset = "0xB8D3E8", VA = "0xB8D3E8")]
	public MetaballUVGuide()
	{
	}
}
[Token(Token = "0x200006B")]
public class SkinnedMetaballSeed : MetaballSeedBase
{
	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SkinnedMeshRenderer skinnedMesh;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SkinnedMetaballCell _rootCell;

	[Token(Token = "0x1700000F")]
	public override Mesh Mesh
	{
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x918B24", Offset = "0x918B24", VA = "0x918B24", Slot = "5")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x918B40", Offset = "0x918B40", VA = "0x918B40", Slot = "6")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public override bool IsTreeShape
	{
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x918B5C", Offset = "0x918B5C", VA = "0x918B5C", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x9182E0", Offset = "0x9182E0", VA = "0x9182E0", Slot = "4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x7646D8", Offset = "0x7646D8")]
	public override void CreateMesh()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x918840", Offset = "0x918840", VA = "0x918840")]
	private void ConstructTree(Transform node, SkinnedMetaballCell cell, Matrix4x4 toLocalMtx)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x918B64", Offset = "0x918B64", VA = "0x918B64")]
	public SkinnedMetaballSeed()
	{
	}
}
[Token(Token = "0x200006C")]
public class StaticMetaballSeed : MetaballSeedBase
{
	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MeshFilter meshFilter;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MetaballCellCluster _cellCluster;

	[Token(Token = "0x17000011")]
	public override Mesh Mesh
	{
		[Token(Token = "0x6000200")]
		[Address(RVA = "0x9B4148", Offset = "0x9B4148", VA = "0x9B4148", Slot = "5")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000201")]
		[Address(RVA = "0x9B4164", Offset = "0x9B4164", VA = "0x9B4164", Slot = "6")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public override bool IsTreeShape
	{
		[Token(Token = "0x6000202")]
		[Address(RVA = "0x9B4180", Offset = "0x9B4180", VA = "0x9B4180", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x9B3B30", Offset = "0x9B3B30", VA = "0x9B3B30")]
	private void ConstructCellCluster(MetaballCellCluster cluster, Transform parentNode, Matrix4x4 toLocalMtx)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x9B3E38", Offset = "0x9B3E38", VA = "0x9B3E38", Slot = "4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x764710", Offset = "0x764710")]
	public override void CreateMesh()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x9B4188", Offset = "0x9B4188", VA = "0x9B4188")]
	public StaticMetaballSeed()
	{
	}
}
[Token(Token = "0x200006D")]
public class MetaballBuilder
{
	[Token(Token = "0x2000316")]
	private class MB3DCubeVector
	{
		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public sbyte[] e;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public sbyte axisIdx;

		[Token(Token = "0x17000182")]
		public sbyte x
		{
			[Token(Token = "0x6001831")]
			[Address(RVA = "0xB8A848", Offset = "0xB8A848", VA = "0xB8A848")]
			get
			{
				return default(sbyte);
			}
			[Token(Token = "0x6001832")]
			[Address(RVA = "0xB8B0BC", Offset = "0xB8B0BC", VA = "0xB8B0BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public sbyte y
		{
			[Token(Token = "0x6001833")]
			[Address(RVA = "0xB8A810", Offset = "0xB8A810", VA = "0xB8A810")]
			get
			{
				return default(sbyte);
			}
			[Token(Token = "0x6001834")]
			[Address(RVA = "0xB8B0F0", Offset = "0xB8B0F0", VA = "0xB8B0F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public sbyte z
		{
			[Token(Token = "0x6001835")]
			[Address(RVA = "0xB8A7D8", Offset = "0xB8A7D8", VA = "0xB8A7D8")]
			get
			{
				return default(sbyte);
			}
			[Token(Token = "0x6001836")]
			[Address(RVA = "0xB8B128", Offset = "0xB8B128", VA = "0xB8B128")]
			set
			{
			}
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xB8B160", Offset = "0xB8B160", VA = "0xB8B160")]
		public MB3DCubeVector()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xB8B1D4", Offset = "0xB8B1D4", VA = "0xB8B1D4")]
		public MB3DCubeVector(sbyte x_, sbyte y_, sbyte z_)
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xB8B300", Offset = "0xB8B300", VA = "0xB8B300")]
		public static MB3DCubeVector operator +(MB3DCubeVector lh, MB3DCubeVector rh)
		{
			return null;
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xB8B294", Offset = "0xB8B294", VA = "0xB8B294")]
		private void CalcAxis()
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xB8B3DC", Offset = "0xB8B3DC", VA = "0xB8B3DC")]
		public void SetAxisVector(sbyte axisIdx_, sbyte value)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xB8B470", Offset = "0xB8B470", VA = "0xB8B470")]
		public static MB3DCubeVector operator *(MB3DCubeVector lh, sbyte rh)
		{
			return null;
		}
	}

	[Token(Token = "0x2000317")]
	private class MB3DCubeInOut
	{
		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public sbyte[,,] bFill;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int inCount;

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xB8A360", Offset = "0xB8A360", VA = "0xB8A360")]
		public MB3DCubeInOut()
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xB8A3F0", Offset = "0xB8A3F0", VA = "0xB8A3F0")]
		public MB3DCubeInOut(sbyte patternIdx)
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xB85650", Offset = "0xB85650", VA = "0xB85650")]
		public MB3DCubeInOut(sbyte a0, sbyte a1, sbyte a2, sbyte a3, sbyte a4, sbyte a5, sbyte a6, sbyte a7)
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xB8A550", Offset = "0xB8A550", VA = "0xB8A550")]
		private void Init(sbyte a0, sbyte a1, sbyte a2, sbyte a3, sbyte a4, sbyte a5, sbyte a6, sbyte a7)
		{
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xB8A728", Offset = "0xB8A728", VA = "0xB8A728")]
		public sbyte At(MB3DCubeVector point)
		{
			return default(sbyte);
		}
	}

	[Token(Token = "0x2000318")]
	private struct MB3DCubePrimitivePattern
	{
		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MB3DCubeInOut InOut;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int[] IndexBuf;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] IndexBufAlter;

		[Token(Token = "0x17000185")]
		public int IndexCount
		{
			[Token(Token = "0x6001842")]
			[Address(RVA = "0xB89944", Offset = "0xB89944", VA = "0xB89944")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000186")]
		public int IndexCountAlter
		{
			[Token(Token = "0x6001843")]
			[Address(RVA = "0xB8B0A4", Offset = "0xB8B0A4", VA = "0xB8B0A4")]
			get
			{
				return default(int);
			}
		}
	}

	[Token(Token = "0x2000319")]
	private class MB3DPatternMatchingInfo
	{
		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PrimaryPatternIndex;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool bFlipInOut;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MB3DCubeVector Origin;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB3DCubeVector[] Axis;

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xB8A87C", Offset = "0xB8A87C", VA = "0xB8A87C")]
		public void Match(MB3DCubeInOut src)
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xB89804", Offset = "0xB89804", VA = "0xB89804")]
		public int[] GetTargetPrimitiveIndexBuffer()
		{
			return null;
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xB8B51C", Offset = "0xB8B51C", VA = "0xB8B51C")]
		public MB3DCubeVector SampleVertex(MB3DCubeVector primaryPos)
		{
			return null;
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xB8AE30", Offset = "0xB8AE30", VA = "0xB8AE30")]
		public void SampleSegment(sbyte primarySegmentID, out sbyte out_axis, out sbyte out_a_1, out sbyte out_a_2)
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xB8B010", Offset = "0xB8B010", VA = "0xB8B010")]
		public MB3DPatternMatchingInfo()
		{
		}
	}

	[Token(Token = "0x200031A")]
	private class MB3DCubePattern
	{
		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PatternIdx;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MB3DPatternMatchingInfo MatchingInfo;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] IndexBuf;

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xB848E4", Offset = "0xB848E4", VA = "0xB848E4")]
		public void Init(int patternIdx)
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xB84850", Offset = "0xB84850", VA = "0xB84850")]
		public MB3DCubePattern()
		{
		}
	}

	[Token(Token = "0x200031B")]
	public class MetaballPointInfo
	{
		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 center;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float radius;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float density;

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xB89D58", Offset = "0xB89D58", VA = "0xB89D58")]
		public MetaballPointInfo()
		{
		}
	}

	[Token(Token = "0x200031C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B8B8", Offset = "0x75B8B8")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Bounds tmpBounds;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MetaballCellObject cellObjPrefab;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform root;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MetaballPointInfo[] tmpBallPoints;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int cellIdx;

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xB8897C", Offset = "0xB8897C", VA = "0xB8897C")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xB8995C", Offset = "0xB8995C", VA = "0xB8995C")]
		internal void <AnalyzeCellCluster>b__0(MetaballCell c)
		{
		}
	}

	[Token(Token = "0x200031D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B8C8", Offset = "0x75B8C8")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Bounds tmpBounds;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MetaballCellObject cellObjPrefab;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform root;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform[] tmpBones;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dictionary<SkinnedMetaballCell, int> boneDictionary;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int cellIdx;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Matrix4x4[] tmpBindPoses;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MetaballPointInfo[] tmpBallPoints;

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xB88984", Offset = "0xB88984", VA = "0xB88984")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xB89D60", Offset = "0xB89D60", VA = "0xB89D60")]
		internal void <AnalyzeCellClusterWithSkeleton>b__0(SkinnedMetaballCell c)
		{
		}
	}

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool __bCubePatternsInitialized;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static MB3DCubePattern[] __cubePatterns;

	[Token(Token = "0x4000305")]
	private const int MB3D_PATTERN_COUNT = 15;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static MB3DCubePrimitivePattern[] __primitivePatterns;

	[Token(Token = "0x4000307")]
	private const int _maxGridCellCount = 1000000;

	[Token(Token = "0x4000308")]
	private const int _maxVertexCount = 300000;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static MetaballBuilder _instance;

	[Token(Token = "0x17000013")]
	public static int MaxGridCellCount
	{
		[Token(Token = "0x6000207")]
		[Address(RVA = "0xB85804", Offset = "0xB85804", VA = "0xB85804")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000014")]
	public static int MaxVertexCount
	{
		[Token(Token = "0x6000208")]
		[Address(RVA = "0xB85810", Offset = "0xB85810", VA = "0xB85810")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000015")]
	public static MetaballBuilder Instance
	{
		[Token(Token = "0x6000209")]
		[Address(RVA = "0xB8581C", Offset = "0xB8581C", VA = "0xB8581C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xB846D8", Offset = "0xB846D8", VA = "0xB846D8")]
	private static void __InitCubePatterns()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xB84A38", Offset = "0xB84A38", VA = "0xB84A38")]
	static MetaballBuilder()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xB85748", Offset = "0xB85748", VA = "0xB85748")]
	private static float CalcPower(Vector3 relativePos, float radius, float density)
	{
		return default(float);
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xB858F0", Offset = "0xB858F0", VA = "0xB858F0")]
	public string CreateMesh(MetaballCellClusterInterface rootCell, Transform root, float powerThreshold, float gridCellSize, Vector3 uDir, Vector3 vDir, Vector3 uvOffset, out Mesh out_mesh, [Optional] MetaballCellObject cellObjPrefab, bool bReverse = false, [Optional] Bounds? fixedBounds, bool bAutoGridSize = false, float autoGridQuarity = 0.2f)
	{
		return null;
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xB8815C", Offset = "0xB8815C", VA = "0xB8815C")]
	public string CreateMeshWithSkeleton(SkinnedMetaballCell rootCell, Transform root, float powerThreshold, float gridCellSize, Vector3 uDir, Vector3 vDir, Vector3 uvOffset, out Mesh out_mesh, out Transform[] out_bones, [Optional] MetaballCellObject cellObjPrefab, bool bReverse = false, [Optional] Bounds? fixedBounds, bool bAutoGridSize = false, float autoGridQuarity = 0.2f)
	{
		return null;
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xB85E50", Offset = "0xB85E50", VA = "0xB85E50")]
	private void AnalyzeCellCluster(MetaballCellClusterInterface cellCluster, Transform root, out Bounds bounds, out MetaballPointInfo[] ballPoints, [Optional] MetaballCellObject cellObjPrefab)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xB886FC", Offset = "0xB886FC", VA = "0xB886FC")]
	private void AnalyzeCellClusterWithSkeleton(SkinnedMetaballCell rootCell, Transform root, out Bounds bounds, out Transform[] bones, out Matrix4x4[] bindPoses, out MetaballPointInfo[] ballPoints, [Optional] MetaballCellObject cellObjPrefab)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xB8898C", Offset = "0xB8898C", VA = "0xB8898C")]
	public Mesh CreateImplicitSurfaceMesh(int countX, int countY, int countZ, Vector3[] positionMap, float[] powerMap, bool bReverse, float threshold, Vector3 uDir, Vector3 vDir, Vector3 uvOffset)
	{
		return null;
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xB860E8", Offset = "0xB860E8", VA = "0xB860E8")]
	private void BuildMetaballMesh(Mesh mesh, Vector3 center, Vector3 extent, float cellSize, MetaballPointInfo[] points, float powerThreshold, bool bReverse, Vector3 uDir, Vector3 vDir, Vector3 uvOffset)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xB858E8", Offset = "0xB858E8", VA = "0xB858E8")]
	public MetaballBuilder()
	{
	}
}
[Token(Token = "0x200006E")]
public class MetaballCell
{
	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 baseColor;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string tag;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float radius;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float density;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 modelPosition;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Quaternion modelRotation;

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xB8B604", Offset = "0xB8B604", VA = "0xB8B604")]
	public MetaballCell()
	{
	}
}
[Token(Token = "0x200006F")]
public class MetaballCellCluster : MetaballCellClusterInterface
{
	[Token(Token = "0x200031E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B8D8", Offset = "0x75B8D8")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MetaballCell cell;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minDistanceCoef;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool bFail;

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xB8BAF4", Offset = "0xB8BAF4", VA = "0xB8BAF4")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xB8C0C4", Offset = "0xB8C0C4", VA = "0xB8C0C4")]
		internal void <AddCell>b__0(MetaballCell c)
		{
		}
	}

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<MetaballCell> _cells;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _baseRadius;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _baseColor;

	[Token(Token = "0x17000016")]
	public float BaseRadius
	{
		[Token(Token = "0x6000212")]
		[Address(RVA = "0xB8B6B4", Offset = "0xB8B6B4", VA = "0xB8B6B4", Slot = "4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000213")]
		[Address(RVA = "0xB8B6BC", Offset = "0xB8B6BC", VA = "0xB8B6BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public int CellCount
	{
		[Token(Token = "0x6000217")]
		[Address(RVA = "0xB8B8E4", Offset = "0xB8B8E4", VA = "0xB8B8E4", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xB8B6C4", Offset = "0xB8B6C4", VA = "0xB8B6C4", Slot = "5")]
	public void DoForeachCell(ForeachCellDeleg deleg)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xB8B7CC", Offset = "0xB8B7CC", VA = "0xB8B7CC")]
	public MetaballCell GetCell(int index)
	{
		return null;
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xB8B844", Offset = "0xB8B844", VA = "0xB8B844")]
	public int FindCell(MetaballCell cell)
	{
		return default(int);
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xB8B934", Offset = "0xB8B934", VA = "0xB8B934")]
	public MetaballCell AddCell(Vector3 position, float minDistanceCoef = 1f, [Optional] float? radius, [Optional] string tag)
	{
		return null;
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xB8BAFC", Offset = "0xB8BAFC", VA = "0xB8BAFC")]
	public void RemoveCell(MetaballCell cell)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xB8BB64", Offset = "0xB8BB64", VA = "0xB8BB64")]
	public void ClearCells()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xB8BBBC", Offset = "0xB8BBBC", VA = "0xB8BBBC")]
	public string GetPositionsString()
	{
		return null;
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xB8BD5C", Offset = "0xB8BD5C", VA = "0xB8BD5C")]
	public void ReadPositionsString(string positions)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xB8BEA4", Offset = "0xB8BEA4", VA = "0xB8BEA4")]
	private static Vector3 ParseVector3(string data)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xB8C018", Offset = "0xB8C018", VA = "0xB8C018")]
	public MetaballCellCluster()
	{
	}
}
[Token(Token = "0x2000070")]
public delegate void ForeachCellDeleg(MetaballCell c);
[Token(Token = "0x2000071")]
public interface MetaballCellClusterInterface
{
	[Token(Token = "0x17000018")]
	float BaseRadius
	{
		[Token(Token = "0x6000223")]
		get;
	}

	[Token(Token = "0x17000019")]
	int CellCount
	{
		[Token(Token = "0x6000225")]
		get;
	}

	[Token(Token = "0x6000224")]
	void DoForeachCell(ForeachCellDeleg deleg);
}
[Token(Token = "0x2000072")]
public class MetaballCellObject : MonoBehaviour
{
	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected MetaballCell _cell;

	[Token(Token = "0x1700001A")]
	public MetaballCell Cell
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0xB8C1D8", Offset = "0xB8C1D8", VA = "0xB8C1D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xB8C1E0", Offset = "0xB8C1E0", VA = "0xB8C1E0", Slot = "4")]
	public virtual void Setup(MetaballCell cell)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xB8C1E8", Offset = "0xB8C1E8", VA = "0xB8C1E8")]
	public MetaballCellObject()
	{
	}
}
[Token(Token = "0x2000073")]
public class SkinnedMetaballCell : MetaballCell, MetaballCellClusterInterface
{
	[Token(Token = "0x200031F")]
	public delegate void ForeachSkinnedCellDeleg(SkinnedMetaballCell c);

	[Token(Token = "0x2000320")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B8E8", Offset = "0x75B8E8")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SkinnedMetaballCell child;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minDistanceCoef;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool bFail;

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x9179E0", Offset = "0x9179E0", VA = "0x9179E0")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x918194", Offset = "0x918194", VA = "0x918194")]
		internal void <AddChild>b__0(SkinnedMetaballCell c)
		{
		}
	}

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SkinnedMetaballCell parent;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<SkinnedMetaballCell> children;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<SkinnedMetaballCell> links;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int distanceFromRoot;

	[Token(Token = "0x1700001B")]
	public float BaseRadius
	{
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x916DB4", Offset = "0x916DB4", VA = "0x916DB4", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700001C")]
	public bool IsRoot
	{
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x916DBC", Offset = "0x916DBC", VA = "0x916DBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001D")]
	public bool IsTerminal
	{
		[Token(Token = "0x600022B")]
		[Address(RVA = "0x916DCC", Offset = "0x916DCC", VA = "0x916DCC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001E")]
	public bool IsBranch
	{
		[Token(Token = "0x600022C")]
		[Address(RVA = "0x916E24", Offset = "0x916E24", VA = "0x916E24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001F")]
	public SkinnedMetaballCell Root
	{
		[Token(Token = "0x600022D")]
		[Address(RVA = "0x916E8C", Offset = "0x916E8C", VA = "0x916E8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000020")]
	public int CellCount
	{
		[Token(Token = "0x600022E")]
		[Address(RVA = "0x916EA0", Offset = "0x916EA0", VA = "0x916EA0", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000021")]
	public int DistanceFromBranch
	{
		[Token(Token = "0x6000231")]
		[Address(RVA = "0x917560", Offset = "0x917560", VA = "0x917560")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000022")]
	public int DistanceFromLastLink
	{
		[Token(Token = "0x6000232")]
		[Address(RVA = "0x917764", Offset = "0x917764", VA = "0x917764")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000023")]
	private int DistanceFromLastBranch
	{
		[Token(Token = "0x6000233")]
		[Address(RVA = "0x917604", Offset = "0x917604", VA = "0x917604")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000024")]
	private int DistanceToNextBranch
	{
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x91764C", Offset = "0x91764C", VA = "0x91764C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x916FA0", Offset = "0x916FA0", VA = "0x916FA0")]
	public void DoForeachSkinnedCell(ForeachSkinnedCellDeleg deleg)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x917448", Offset = "0x917448", VA = "0x917448", Slot = "5")]
	public void DoForeachCell(ForeachCellDeleg deleg)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x917804", Offset = "0x917804", VA = "0x917804")]
	public SkinnedMetaballCell AddChild(Vector3 position, float in_radius, float minDistanceCoef = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x917AA4", Offset = "0x917AA4", VA = "0x917AA4")]
	public void CalcRotation()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x917C88", Offset = "0x917C88", VA = "0x917C88")]
	public string GetStringExpression()
	{
		return null;
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x917E4C", Offset = "0x917E4C", VA = "0x917E4C")]
	public static SkinnedMetaballCell ConstructFromString(string data, float radius)
	{
		return null;
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x918020", Offset = "0x918020", VA = "0x918020")]
	private static Vector3 ParseVector3(string data)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x9179E8", Offset = "0x9179E8", VA = "0x9179E8")]
	public SkinnedMetaballCell()
	{
	}
}
[Token(Token = "0x2000074")]
public class TentacleControl : MonoBehaviour
{
	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMetaballSeed seed;

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x9BEB4C", Offset = "0x9BEB4C", VA = "0x9BEB4C")]
	private void Start()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x9BEC08", Offset = "0x9BEC08", VA = "0x9BEC08")]
	private void Update()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x9BEB50", Offset = "0x9BEB50", VA = "0x9BEB50")]
	private void SetupPhysicsBones()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x9BEC0C", Offset = "0x9BEC0C", VA = "0x9BEC0C")]
	private void SetupPhysicsBonesRecursive(MetaballCellObject obj, bool bRoot = false)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x9BEF4C", Offset = "0x9BEF4C", VA = "0x9BEF4C")]
	public TentacleControl()
	{
	}
}
[Token(Token = "0x2000075")]
public class DungeonControl : MonoBehaviour
{
	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera myCamera;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StaticMetaballSeed metaball;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem hitPS;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource audioSource;

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xA18E8C", Offset = "0xA18E8C", VA = "0xA18E8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xA18F54", Offset = "0xA18F54", VA = "0xA18F54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xA18F58", Offset = "0xA18F58", VA = "0xA18F58")]
	public void AddCell(Vector3 position, float size)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xA19240", Offset = "0xA19240", VA = "0xA19240")]
	public DungeonControl()
	{
	}
}
[Token(Token = "0x2000076")]
public class FPControl : MonoBehaviour
{
	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera myCamera;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterController cc;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float walkSpeed;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _theta;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _phi;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotSpeed;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _mx;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _my;

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xA1D444", Offset = "0xA1D444", VA = "0xA1D444")]
	private void Start()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xA1D514", Offset = "0xA1D514", VA = "0xA1D514")]
	private void Update()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xA1D95C", Offset = "0xA1D95C", VA = "0xA1D95C")]
	public void Shoot()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xA1DACC", Offset = "0xA1DACC", VA = "0xA1DACC")]
	public FPControl()
	{
	}
}
[Token(Token = "0x2000077")]
public class HitPSControl : MonoBehaviour
{
	[Token(Token = "0x6000248")]
	[Address(RVA = "0x9D7F88", Offset = "0x9D7F88", VA = "0x9D7F88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x9D803C", Offset = "0x9D803C", VA = "0x9D803C")]
	private void Update()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x9D8040", Offset = "0x9D8040", VA = "0x9D8040")]
	public HitPSControl()
	{
	}
}
[Token(Token = "0x2000078")]
public class DungeonControl2 : MonoBehaviour
{
	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera myCamera;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IncrementalModeling metaball;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xA19248", Offset = "0xA19248", VA = "0xA19248")]
	private void Start()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xA19310", Offset = "0xA19310", VA = "0xA19310")]
	private void Update()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xA19314", Offset = "0xA19314", VA = "0xA19314")]
	public void Attack(IMBrush brush)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xA1940C", Offset = "0xA1940C", VA = "0xA1940C")]
	public DungeonControl2()
	{
	}
}
[Token(Token = "0x2000079")]
public class FPControl2 : MonoBehaviour
{
	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera myCamera;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterController cc;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float walkSpeed;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _theta;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _phi;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotSpeed;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _mx;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _my;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _currentWeaponIdx;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Weapon _currentWeapon;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Weapon[] weapons;

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xA1DAE4", Offset = "0xA1DAE4", VA = "0xA1DAE4")]
	private void ChangeWeapon()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xA1DBD4", Offset = "0xA1DBD4", VA = "0xA1DBD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xA1DCA8", Offset = "0xA1DCA8", VA = "0xA1DCA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xA1E118", Offset = "0xA1E118", VA = "0xA1E118")]
	public void Shoot()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xA1E2E8", Offset = "0xA1E2E8", VA = "0xA1E2E8")]
	public FPControl2()
	{
	}
}
[Token(Token = "0x200007A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757BA4", Offset = "0x757BA4")]
public class FarCamera : MonoBehaviour
{
	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _relativePosition;

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xA26270", Offset = "0xA26270", VA = "0xA26270")]
	private void Start()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xA26360", Offset = "0xA26360", VA = "0xA26360")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xA2644C", Offset = "0xA2644C", VA = "0xA2644C")]
	public FarCamera()
	{
	}
}
[Token(Token = "0x200007B")]
public class SphereGun : Weapon
{
	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem hitPS;

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x9B2680", Offset = "0x9B2680", VA = "0x9B2680", Slot = "4")]
	protected override void DoShoot(DungeonControl2 dungeon, Vector3 from, Vector3 to)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x9B27D4", Offset = "0x9B27D4", VA = "0x9B27D4")]
	public SphereGun()
	{
	}
}
[Token(Token = "0x200007C")]
public class TunnelGun : Weapon
{
	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem hitPS;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem shootPS;

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xA00B30", Offset = "0xA00B30", VA = "0xA00B30", Slot = "4")]
	protected override void DoShoot(DungeonControl2 dungeon, Vector3 from, Vector3 to)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xA00D8C", Offset = "0xA00D8C", VA = "0xA00D8C")]
	public TunnelGun()
	{
	}
}
[Token(Token = "0x200007D")]
public abstract class Weapon : MonoBehaviour
{
	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject weaponBody;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IMBrush brush;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource audioSource;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip equipAudio;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip shotAudio;

	[Token(Token = "0x600025B")]
	protected abstract void DoShoot(DungeonControl2 dungeon, Vector3 from, Vector3 to);

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xAC2158", Offset = "0xAC2158", VA = "0xAC2158")]
	public void Shoot(DungeonControl2 dungeon, Vector3 from, Vector3 to)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xAC227C", Offset = "0xAC227C", VA = "0xAC227C")]
	public void OnEquip()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xAC2370", Offset = "0xAC2370", VA = "0xAC2370")]
	public void OnRemove()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xAC23D0", Offset = "0xAC23D0", VA = "0xAC23D0")]
	protected Weapon()
	{
	}
}
[Token(Token = "0x200007E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x757C08", Offset = "0x757C08")]
public class CombineChildren : MonoBehaviour
{
	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool generateTriangleStrips;

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x932EC8", Offset = "0x932EC8", VA = "0x932EC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x933BDC", Offset = "0x933BDC", VA = "0x933BDC")]
	public CombineChildren()
	{
	}
}
[Token(Token = "0x200007F")]
public class MeshCombineUtility
{
	[Token(Token = "0x2000321")]
	public struct MeshInstance
	{
		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Mesh mesh;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int subMeshIndex;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Matrix4x4 transform;
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xB837C0", Offset = "0xB837C0", VA = "0xB837C0")]
	public static Mesh Combine(MeshInstance[] combines, bool generateStrips)
	{
		return null;
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xB842B0", Offset = "0xB842B0", VA = "0xB842B0")]
	private static void Copy(int vertexcount, Vector3[] src, Vector3[] dst, ref int offset, Matrix4x4 transform)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xB84390", Offset = "0xB84390", VA = "0xB84390")]
	private static void CopyNormal(int vertexcount, Vector3[] src, Vector3[] dst, ref int offset, Matrix4x4 transform)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xB845C8", Offset = "0xB845C8", VA = "0xB845C8")]
	private static void Copy(int vertexcount, Vector2[] src, Vector2[] dst, ref int offset)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xB8464C", Offset = "0xB8464C", VA = "0xB8464C")]
	private static void CopyColors(int vertexcount, Color[] src, Color[] dst, ref int offset)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xB84494", Offset = "0xB84494", VA = "0xB84494")]
	private static void CopyTangents(int vertexcount, Vector4[] src, Vector4[] dst, ref int offset, Matrix4x4 transform)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xB846D0", Offset = "0xB846D0", VA = "0xB846D0")]
	public MeshCombineUtility()
	{
	}
}
[Token(Token = "0x2000080")]
public sealed class SRAnimators
{
	[Token(Token = "0x400033F")]
	private const string _tsInternal = "1.3.2-Unity5";

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xA59880", Offset = "0xA59880", VA = "0xA59880")]
	private SRAnimators()
	{
	}
}
[Token(Token = "0x2000081")]
public sealed class SRAudioMixers
{
	[Token(Token = "0x2000322")]
	public sealed class Mixer
	{
		[Token(Token = "0x2000482")]
		public sealed class Parameters
		{
			[Token(Token = "0x4001E60")]
			public const string MusicVolume = "MusicVolume";

			[Token(Token = "0x4001E61")]
			public const string MasterVolume = "MasterVolume";

			[Token(Token = "0x6001BBC")]
			[Address(RVA = "0xA59898", Offset = "0xA59898", VA = "0xA59898")]
			private Parameters()
			{
			}
		}

		[Token(Token = "0x2000483")]
		public sealed class Snapshots
		{
			[Token(Token = "0x4001E62")]
			public const string Snapshot = "Snapshot";

			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0xA598A0", Offset = "0xA598A0", VA = "0xA598A0")]
			private Snapshots()
			{
			}
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xA59890", Offset = "0xA59890", VA = "0xA59890")]
		private Mixer()
		{
		}
	}

	[Token(Token = "0x4000340")]
	private const string _tsInternal = "1.3.2-Unity5";

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xA59888", Offset = "0xA59888", VA = "0xA59888")]
	private SRAudioMixers()
	{
	}
}
[Token(Token = "0x2000082")]
public sealed class SRInput
{
	[Token(Token = "0x4000341")]
	private const string _tsInternal = "1.3.2-Unity5";

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly InputAxis Horizontal;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly InputAxis Vertical;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly InputAxis Fire1;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly InputAxis Fire2;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly InputAxis Fire3;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly InputAxis Jump;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly InputAxis Mouse_X;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly InputAxis Mouse_Y;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly InputAxis Mouse_ScrollWheel;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static readonly InputAxis Submit;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly InputAxis Cancel;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static readonly InputAxis Oculus_GearVR_LThumbstickX;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static readonly InputAxis Oculus_GearVR_LThumbstickY;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static readonly InputAxis Oculus_GearVR_RThumbstickX;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static readonly InputAxis Oculus_GearVR_RThumbstickY;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static readonly InputAxis Oculus_GearVR_DpadX;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static readonly InputAxis Oculus_GearVR_DpadY;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static readonly InputAxis Oculus_GearVR_LIndexTrigger;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static readonly InputAxis Oculus_GearVR_RIndexTrigger;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static readonly InputAxis Oculus_CrossPlatform_Button2;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static readonly InputAxis Oculus_CrossPlatform_Button4;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static readonly InputAxis Oculus_CrossPlatform_PrimaryThumbstick;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static readonly InputAxis Oculus_CrossPlatform_SecondaryThumbstick;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly InputAxis Oculus_CrossPlatform_PrimaryIndexTrigger;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static readonly InputAxis Oculus_CrossPlatform_SecondaryIndexTrigger;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static readonly InputAxis Oculus_CrossPlatform_PrimaryHandTrigger;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static readonly InputAxis Oculus_CrossPlatform_SecondaryHandTrigger;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static readonly InputAxis Oculus_CrossPlatform_PrimaryThumbstickHorizontal;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static readonly InputAxis Oculus_CrossPlatform_PrimaryThumbstickVertical;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static readonly InputAxis Oculus_CrossPlatform_SecondaryThumbstickHorizontal;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static readonly InputAxis Oculus_CrossPlatform_SecondaryThumbstickVertical;

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xA598A8", Offset = "0xA598A8", VA = "0xA598A8")]
	private SRInput()
	{
	}
}
[Token(Token = "0x2000083")]
public sealed class SRLayerMask
{
	[Token(Token = "0x4000361")]
	private const string _tsInternal = "1.3.2-Unity5";

	[Token(Token = "0x4000362")]
	public const int All = int.MaxValue;

	[Token(Token = "0x4000363")]
	public const int None = 0;

	[Token(Token = "0x4000364")]
	public const int Default = 1;

	[Token(Token = "0x4000365")]
	public const int TransparentFX = 2;

	[Token(Token = "0x4000366")]
	public const int Ignore_Raycast = 4;

	[Token(Token = "0x4000367")]
	public const int Water = 16;

	[Token(Token = "0x4000368")]
	public const int UI = 32;

	[Token(Token = "0x4000369")]
	public const int Character = 256;

	[Token(Token = "0x400036A")]
	public const int Floor = 512;

	[Token(Token = "0x400036B")]
	public const int StaticGeometry = 1024;

	[Token(Token = "0x400036C")]
	public const int HandCollider = 2048;

	[Token(Token = "0x400036D")]
	public const int Item = 4096;

	[Token(Token = "0x400036E")]
	public const int Player = 8192;

	[Token(Token = "0x400036F")]
	public const int CustomPostEffectIgnore = 16384;

	[Token(Token = "0x4000370")]
	public const int InventoryItem = 32768;

	[Token(Token = "0x4000371")]
	public const int DecalProxyGeometry = 65536;

	[Token(Token = "0x4000372")]
	public const int Celestial = 131072;

	[Token(Token = "0x4000373")]
	public const int PlayerCollider = 262144;

	[Token(Token = "0x4000374")]
	public const int OcclusionCollider = 524288;

	[Token(Token = "0x4000375")]
	public const int UnlitFX = 1048576;

	[Token(Token = "0x4000376")]
	public const int ScreenUI = 2097152;

	[Token(Token = "0x4000377")]
	public const int Character_Dead = 4194304;

	[Token(Token = "0x4000378")]
	public const int PlayerColliderTP = 8388608;

	[Token(Token = "0x4000379")]
	public const int DefaultNonBlock = 16777216;

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xA59F4C", Offset = "0xA59F4C", VA = "0xA59F4C")]
	private SRLayerMask()
	{
	}
}
[Token(Token = "0x2000084")]
public sealed class SRLayers
{
	[Token(Token = "0x400037A")]
	private const string _tsInternal = "1.3.2-Unity5";

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IList<Layer> __all;

	[Token(Token = "0x17000025")]
	public static Layer Default
	{
		[Token(Token = "0x600026F")]
		[Address(RVA = "0xA59F5C", Offset = "0xA59F5C", VA = "0xA59F5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000026")]
	public static Layer TransparentFX
	{
		[Token(Token = "0x6000270")]
		[Address(RVA = "0xA5A034", Offset = "0xA5A034", VA = "0xA5A034")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000027")]
	public static Layer Ignore_Raycast
	{
		[Token(Token = "0x6000271")]
		[Address(RVA = "0xA4F070", Offset = "0xA4F070", VA = "0xA4F070")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000028")]
	public static Layer Water
	{
		[Token(Token = "0x6000272")]
		[Address(RVA = "0xA5A10C", Offset = "0xA5A10C", VA = "0xA5A10C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000029")]
	public static Layer UI
	{
		[Token(Token = "0x6000273")]
		[Address(RVA = "0xA5A1E4", Offset = "0xA5A1E4", VA = "0xA5A1E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002A")]
	public static Layer Character
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0xA4B884", Offset = "0xA4B884", VA = "0xA4B884")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002B")]
	public static Layer Floor
	{
		[Token(Token = "0x6000275")]
		[Address(RVA = "0xA5A2BC", Offset = "0xA5A2BC", VA = "0xA5A2BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002C")]
	public static Layer StaticGeometry
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0xA526E8", Offset = "0xA526E8", VA = "0xA526E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002D")]
	public static Layer HandCollider
	{
		[Token(Token = "0x6000277")]
		[Address(RVA = "0xA5A394", Offset = "0xA5A394", VA = "0xA5A394")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002E")]
	public static Layer Item
	{
		[Token(Token = "0x6000278")]
		[Address(RVA = "0xA5A46C", Offset = "0xA5A46C", VA = "0xA5A46C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002F")]
	public static Layer Player
	{
		[Token(Token = "0x6000279")]
		[Address(RVA = "0xA5A544", Offset = "0xA5A544", VA = "0xA5A544")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000030")]
	public static Layer CustomPostEffectIgnore
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xA5A61C", Offset = "0xA5A61C", VA = "0xA5A61C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000031")]
	public static Layer InventoryItem
	{
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xA5A6F4", Offset = "0xA5A6F4", VA = "0xA5A6F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000032")]
	public static Layer DecalProxyGeometry
	{
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xA5A7CC", Offset = "0xA5A7CC", VA = "0xA5A7CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000033")]
	public static Layer Celestial
	{
		[Token(Token = "0x600027D")]
		[Address(RVA = "0xA5A8A4", Offset = "0xA5A8A4", VA = "0xA5A8A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000034")]
	public static Layer PlayerCollider
	{
		[Token(Token = "0x600027E")]
		[Address(RVA = "0xA4BA34", Offset = "0xA4BA34", VA = "0xA4BA34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000035")]
	public static Layer OcclusionCollider
	{
		[Token(Token = "0x600027F")]
		[Address(RVA = "0xA5A97C", Offset = "0xA5A97C", VA = "0xA5A97C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000036")]
	public static Layer UnlitFX
	{
		[Token(Token = "0x6000280")]
		[Address(RVA = "0xA5AA54", Offset = "0xA5AA54", VA = "0xA5AA54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000037")]
	public static Layer ScreenUI
	{
		[Token(Token = "0x6000281")]
		[Address(RVA = "0xA5AB2C", Offset = "0xA5AB2C", VA = "0xA5AB2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000038")]
	public static Layer Character_Dead
	{
		[Token(Token = "0x6000282")]
		[Address(RVA = "0xA4B95C", Offset = "0xA4B95C", VA = "0xA4B95C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000039")]
	public static Layer PlayerColliderTP
	{
		[Token(Token = "0x6000283")]
		[Address(RVA = "0xA4BB0C", Offset = "0xA4BB0C", VA = "0xA4BB0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003A")]
	public static Layer DefaultNonBlock
	{
		[Token(Token = "0x6000284")]
		[Address(RVA = "0xA5AC04", Offset = "0xA5AC04", VA = "0xA5AC04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003B")]
	public static IList<Layer> All
	{
		[Token(Token = "0x6000285")]
		[Address(RVA = "0xA5ACDC", Offset = "0xA5ACDC", VA = "0xA5ACDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xA59F54", Offset = "0xA59F54", VA = "0xA59F54")]
	private SRLayers()
	{
	}
}
[Token(Token = "0x2000085")]
public sealed class SRResources
{
	[Token(Token = "0x2000323")]
	public sealed class Materials
	{
		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IList<IResource> __ts_internal_resources;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IList<IResource> __ts_internal_recursiveLookupCache;

		[Token(Token = "0x17000187")]
		public static Resource<Material> FacePicker
		{
			[Token(Token = "0x600185A")]
			[Address(RVA = "0xA6060C", Offset = "0xA6060C", VA = "0xA6060C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		public static Resource<Material> StandardVertexColorHDRP
		{
			[Token(Token = "0x600185B")]
			[Address(RVA = "0xA60724", Offset = "0xA60724", VA = "0xA60724")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		public static Resource<Material> highlight_valid
		{
			[Token(Token = "0x600185C")]
			[Address(RVA = "0xA6083C", Offset = "0xA6083C", VA = "0xA6083C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		public static Resource<Material> highlight_bubble
		{
			[Token(Token = "0x600185D")]
			[Address(RVA = "0xA60954", Offset = "0xA60954", VA = "0xA60954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		public static Resource<Material> EdgePicker
		{
			[Token(Token = "0x600185E")]
			[Address(RVA = "0xA60A6C", Offset = "0xA60A6C", VA = "0xA60A6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		public static Resource<Material> highlight
		{
			[Token(Token = "0x600185F")]
			[Address(RVA = "0xA60B84", Offset = "0xA60B84", VA = "0xA60B84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		public static Resource<Material> InvisibleFace
		{
			[Token(Token = "0x6001860")]
			[Address(RVA = "0xA60C9C", Offset = "0xA60C9C", VA = "0xA60C9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		public static Resource<Material> ProBuilderDefault
		{
			[Token(Token = "0x6001861")]
			[Address(RVA = "0xA60DB4", Offset = "0xA60DB4", VA = "0xA60DB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		public static Resource<Material> highlight_invalid
		{
			[Token(Token = "0x6001862")]
			[Address(RVA = "0xA60ECC", Offset = "0xA60ECC", VA = "0xA60ECC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		public static Resource<Material> StandardVertexColorLWRP
		{
			[Token(Token = "0x6001863")]
			[Address(RVA = "0xA60FE4", Offset = "0xA60FE4", VA = "0xA60FE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		public static Resource<Material> UnlitVertexColor
		{
			[Token(Token = "0x6001864")]
			[Address(RVA = "0xA610FC", Offset = "0xA610FC", VA = "0xA610FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		public static Resource<Material> lambert1
		{
			[Token(Token = "0x6001865")]
			[Address(RVA = "0xA61214", Offset = "0xA61214", VA = "0xA61214")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		public static Resource<Material> VertexPicker
		{
			[Token(Token = "0x6001866")]
			[Address(RVA = "0xA6132C", Offset = "0xA6132C", VA = "0xA6132C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		public static Resource<Material> NoDraw
		{
			[Token(Token = "0x6001867")]
			[Address(RVA = "0xA61444", Offset = "0xA61444", VA = "0xA61444")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		public static Resource<Material> Trigger
		{
			[Token(Token = "0x6001868")]
			[Address(RVA = "0xA6155C", Offset = "0xA6155C", VA = "0xA6155C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		public static Resource<Material> Collider
		{
			[Token(Token = "0x6001869")]
			[Address(RVA = "0xA61674", Offset = "0xA61674", VA = "0xA61674")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xA60604", Offset = "0xA60604", VA = "0xA60604")]
		private Materials()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xA6178C", Offset = "0xA6178C", VA = "0xA6178C")]
		public static IList<IResource> GetContents()
		{
			return null;
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xA5E264", Offset = "0xA5E264", VA = "0xA5E264")]
		public static IList<IResource> GetContentsRecursive()
		{
			return null;
		}

		[Token(Token = "0x600186C")]
		public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600186D")]
		public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xA617F4", Offset = "0xA617F4", VA = "0xA617F4")]
		public static void UnloadAll()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xA6189C", Offset = "0xA6189C", VA = "0xA6189C")]
		private void UnloadAllRecursive()
		{
		}
	}

	[Token(Token = "0x2000324")]
	public sealed class Text
	{
		[Token(Token = "0x2000484")]
		public sealed class spanish
		{
			[Token(Token = "0x4001E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IList<IResource> __ts_internal_resources;

			[Token(Token = "0x4001E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static IList<IResource> __ts_internal_recursiveLookupCache;

			[Token(Token = "0x1700024B")]
			public static Resource<TextAsset> main
			{
				[Token(Token = "0x6001BBF")]
				[Address(RVA = "0x905C50", Offset = "0x905C50", VA = "0x905C50")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024C")]
			public static Resource<TextAsset> textlogs
			{
				[Token(Token = "0x6001BC0")]
				[Address(RVA = "0x905D68", Offset = "0x905D68", VA = "0x905D68")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024D")]
			public static Resource<TextAsset> items
			{
				[Token(Token = "0x6001BC1")]
				[Address(RVA = "0x905E80", Offset = "0x905E80", VA = "0x905E80")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BBE")]
			[Address(RVA = "0x905C48", Offset = "0x905C48", VA = "0x905C48")]
			private spanish()
			{
			}

			[Token(Token = "0x6001BC2")]
			[Address(RVA = "0x905F98", Offset = "0x905F98", VA = "0x905F98")]
			public static IList<IResource> GetContents()
			{
				return null;
			}

			[Token(Token = "0x6001BC3")]
			[Address(RVA = "0x904164", Offset = "0x904164", VA = "0x904164")]
			public static IList<IResource> GetContentsRecursive()
			{
				return null;
			}

			[Token(Token = "0x6001BC4")]
			public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001BC5")]
			public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001BC6")]
			[Address(RVA = "0x906000", Offset = "0x906000", VA = "0x906000")]
			public static void UnloadAll()
			{
			}

			[Token(Token = "0x6001BC7")]
			[Address(RVA = "0x9060A8", Offset = "0x9060A8", VA = "0x9060A8")]
			private void UnloadAllRecursive()
			{
			}
		}

		[Token(Token = "0x2000485")]
		public sealed class german
		{
			[Token(Token = "0x4001E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IList<IResource> __ts_internal_resources;

			[Token(Token = "0x4001E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static IList<IResource> __ts_internal_recursiveLookupCache;

			[Token(Token = "0x1700024E")]
			public static Resource<TextAsset> main
			{
				[Token(Token = "0x6001BCA")]
				[Address(RVA = "0x9055A0", Offset = "0x9055A0", VA = "0x9055A0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024F")]
			public static Resource<TextAsset> items
			{
				[Token(Token = "0x6001BCB")]
				[Address(RVA = "0x9056B8", Offset = "0x9056B8", VA = "0x9056B8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000250")]
			public static Resource<TextAsset> textlogs
			{
				[Token(Token = "0x6001BCC")]
				[Address(RVA = "0x9057D0", Offset = "0x9057D0", VA = "0x9057D0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BC9")]
			[Address(RVA = "0x905598", Offset = "0x905598", VA = "0x905598")]
			private german()
			{
			}

			[Token(Token = "0x6001BCD")]
			[Address(RVA = "0x9058E8", Offset = "0x9058E8", VA = "0x9058E8")]
			public static IList<IResource> GetContents()
			{
				return null;
			}

			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0x9042B0", Offset = "0x9042B0", VA = "0x9042B0")]
			public static IList<IResource> GetContentsRecursive()
			{
				return null;
			}

			[Token(Token = "0x6001BCF")]
			public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001BD0")]
			public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001BD1")]
			[Address(RVA = "0x905950", Offset = "0x905950", VA = "0x905950")]
			public static void UnloadAll()
			{
			}

			[Token(Token = "0x6001BD2")]
			[Address(RVA = "0x9059F8", Offset = "0x9059F8", VA = "0x9059F8")]
			private void UnloadAllRecursive()
			{
			}
		}

		[Token(Token = "0x2000486")]
		public sealed class french
		{
			[Token(Token = "0x4001E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IList<IResource> __ts_internal_resources;

			[Token(Token = "0x4001E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static IList<IResource> __ts_internal_recursiveLookupCache;

			[Token(Token = "0x17000251")]
			public static Resource<TextAsset> textlogs
			{
				[Token(Token = "0x6001BD5")]
				[Address(RVA = "0x904EF0", Offset = "0x904EF0", VA = "0x904EF0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000252")]
			public static Resource<TextAsset> main
			{
				[Token(Token = "0x6001BD6")]
				[Address(RVA = "0x905008", Offset = "0x905008", VA = "0x905008")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000253")]
			public static Resource<TextAsset> items
			{
				[Token(Token = "0x6001BD7")]
				[Address(RVA = "0x905120", Offset = "0x905120", VA = "0x905120")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BD4")]
			[Address(RVA = "0x904EE8", Offset = "0x904EE8", VA = "0x904EE8")]
			private french()
			{
			}

			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0x905238", Offset = "0x905238", VA = "0x905238")]
			public static IList<IResource> GetContents()
			{
				return null;
			}

			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0x9043FC", Offset = "0x9043FC", VA = "0x9043FC")]
			public static IList<IResource> GetContentsRecursive()
			{
				return null;
			}

			[Token(Token = "0x6001BDA")]
			public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001BDB")]
			public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001BDC")]
			[Address(RVA = "0x9052A0", Offset = "0x9052A0", VA = "0x9052A0")]
			public static void UnloadAll()
			{
			}

			[Token(Token = "0x6001BDD")]
			[Address(RVA = "0x905348", Offset = "0x905348", VA = "0x905348")]
			private void UnloadAllRecursive()
			{
			}
		}

		[Token(Token = "0x2000487")]
		public sealed class english
		{
			[Token(Token = "0x4001E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IList<IResource> __ts_internal_resources;

			[Token(Token = "0x4001E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static IList<IResource> __ts_internal_recursiveLookupCache;

			[Token(Token = "0x17000254")]
			public static Resource<TextAsset> textlogs
			{
				[Token(Token = "0x6001BE0")]
				[Address(RVA = "0x904840", Offset = "0x904840", VA = "0x904840")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000255")]
			public static Resource<TextAsset> items
			{
				[Token(Token = "0x6001BE1")]
				[Address(RVA = "0x904958", Offset = "0x904958", VA = "0x904958")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000256")]
			public static Resource<TextAsset> main
			{
				[Token(Token = "0x6001BE2")]
				[Address(RVA = "0x904A70", Offset = "0x904A70", VA = "0x904A70")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0x904838", Offset = "0x904838", VA = "0x904838")]
			private english()
			{
			}

			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0x904B88", Offset = "0x904B88", VA = "0x904B88")]
			public static IList<IResource> GetContents()
			{
				return null;
			}

			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0x904548", Offset = "0x904548", VA = "0x904548")]
			public static IList<IResource> GetContentsRecursive()
			{
				return null;
			}

			[Token(Token = "0x6001BE5")]
			public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001BE6")]
			public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001BE7")]
			[Address(RVA = "0x904BF0", Offset = "0x904BF0", VA = "0x904BF0")]
			public static void UnloadAll()
			{
			}

			[Token(Token = "0x6001BE8")]
			[Address(RVA = "0x904C98", Offset = "0x904C98", VA = "0x904C98")]
			private void UnloadAllRecursive()
			{
			}
		}

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IList<IResource> __ts_internal_resources;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IList<IResource> __ts_internal_recursiveLookupCache;

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x903ED8", Offset = "0x903ED8", VA = "0x903ED8")]
		private Text()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x903EE0", Offset = "0x903EE0", VA = "0x903EE0")]
		public static IList<IResource> GetContents()
		{
			return null;
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x903F48", Offset = "0x903F48", VA = "0x903F48")]
		public static IList<IResource> GetContentsRecursive()
		{
			return null;
		}

		[Token(Token = "0x6001874")]
		public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001875")]
		public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x904694", Offset = "0x904694", VA = "0x904694")]
		public static void UnloadAll()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x90473C", Offset = "0x90473C", VA = "0x90473C")]
		private void UnloadAllRecursive()
		{
		}
	}

	[Token(Token = "0x2000325")]
	public sealed class Shaders
	{
		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IList<IResource> __ts_internal_resources;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IList<IResource> __ts_internal_recursiveLookupCache;

		[Token(Token = "0x17000197")]
		public static Resource<Shader> TMP_SDFSurfaceMobile
		{
			[Token(Token = "0x600187A")]
			[Address(RVA = "0x9026A4", Offset = "0x9026A4", VA = "0x9026A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		public static Resource<TextAsset> TMPro_Properties
		{
			[Token(Token = "0x600187B")]
			[Address(RVA = "0x9027BC", Offset = "0x9027BC", VA = "0x9027BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		public static Resource<Shader> TMP_BitmapCustomAtlas
		{
			[Token(Token = "0x600187C")]
			[Address(RVA = "0x9028D4", Offset = "0x9028D4", VA = "0x9028D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019A")]
		public static Resource<Shader> TMP_SDFMobile_Masking
		{
			[Token(Token = "0x600187D")]
			[Address(RVA = "0x9029EC", Offset = "0x9029EC", VA = "0x9029EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		public static Resource<Shader> TMP_BitmapMobile
		{
			[Token(Token = "0x600187E")]
			[Address(RVA = "0x902B04", Offset = "0x902B04", VA = "0x902B04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019C")]
		public static Resource<Shader> TMP_SDF_Overlay
		{
			[Token(Token = "0x600187F")]
			[Address(RVA = "0x902C1C", Offset = "0x902C1C", VA = "0x902C1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		public static Resource<TextAsset> TMPro_Surface
		{
			[Token(Token = "0x6001880")]
			[Address(RVA = "0x902D34", Offset = "0x902D34", VA = "0x902D34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		public static Resource<Shader> TMP_SDFMobile_Overlay
		{
			[Token(Token = "0x6001881")]
			[Address(RVA = "0x902E4C", Offset = "0x902E4C", VA = "0x902E4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		public static Resource<Shader> TMP_Bitmap
		{
			[Token(Token = "0x6001882")]
			[Address(RVA = "0x902F64", Offset = "0x902F64", VA = "0x902F64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A0")]
		public static Resource<TextAsset> TMPro
		{
			[Token(Token = "0x6001883")]
			[Address(RVA = "0x90307C", Offset = "0x90307C", VA = "0x90307C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		public static Resource<Shader> TMP_SDF
		{
			[Token(Token = "0x6001884")]
			[Address(RVA = "0x903194", Offset = "0x903194", VA = "0x903194")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		public static Resource<Shader> TMP_SDFMobile
		{
			[Token(Token = "0x6001885")]
			[Address(RVA = "0x9032AC", Offset = "0x9032AC", VA = "0x9032AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		public static Resource<Shader> TMP_Sprite
		{
			[Token(Token = "0x6001886")]
			[Address(RVA = "0x9033C4", Offset = "0x9033C4", VA = "0x9033C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		public static Resource<Shader> TMP_SDFSurface
		{
			[Token(Token = "0x6001887")]
			[Address(RVA = "0x9034DC", Offset = "0x9034DC", VA = "0x9034DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x90269C", Offset = "0x90269C", VA = "0x90269C")]
		private Shaders()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x9035F4", Offset = "0x9035F4", VA = "0x9035F4")]
		public static IList<IResource> GetContents()
		{
			return null;
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x90365C", Offset = "0x90365C", VA = "0x90365C")]
		public static IList<IResource> GetContentsRecursive()
		{
			return null;
		}

		[Token(Token = "0x600188A")]
		public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600188B")]
		public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x9037A8", Offset = "0x9037A8", VA = "0x9037A8")]
		public static void UnloadAll()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x903850", Offset = "0x903850", VA = "0x903850")]
		private void UnloadAllRecursive()
		{
		}
	}

	[Token(Token = "0x2000326")]
	public sealed class F3DPoolManagerCache
	{
		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IList<IResource> __ts_internal_resources;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IList<IResource> __ts_internal_recursiveLookupCache;

		[Token(Token = "0x170001A5")]
		public static Resource<F3DPoolManagerDB> WeaponRange
		{
			[Token(Token = "0x6001890")]
			[Address(RVA = "0xA5F5AC", Offset = "0xA5F5AC", VA = "0xA5F5AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		public static Resource<F3DPoolManagerDB> MissleDatabase
		{
			[Token(Token = "0x6001891")]
			[Address(RVA = "0xA5F6C4", Offset = "0xA5F6C4", VA = "0xA5F6C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xA5F5A4", Offset = "0xA5F5A4", VA = "0xA5F5A4")]
		private F3DPoolManagerCache()
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xA5F7DC", Offset = "0xA5F7DC", VA = "0xA5F7DC")]
		public static IList<IResource> GetContents()
		{
			return null;
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xA5E3B0", Offset = "0xA5E3B0", VA = "0xA5E3B0")]
		public static IList<IResource> GetContentsRecursive()
		{
			return null;
		}

		[Token(Token = "0x6001894")]
		public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001895")]
		public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xA5F844", Offset = "0xA5F844", VA = "0xA5F844")]
		public static void UnloadAll()
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xA5F8EC", Offset = "0xA5F8EC", VA = "0xA5F8EC")]
		private void UnloadAllRecursive()
		{
		}
	}

	[Token(Token = "0x2000327")]
	public sealed class Fonts_Materials
	{
		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IList<IResource> __ts_internal_resources;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IList<IResource> __ts_internal_recursiveLookupCache;

		[Token(Token = "0x170001A7")]
		public static Resource<Material> HalisGRCredits
		{
			[Token(Token = "0x600189A")]
			[Address(RVA = "0xA5FAE4", Offset = "0xA5FAE4", VA = "0xA5FAE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A8")]
		public static Resource<Material> LiberationSans_SDF_Drop_Shadow
		{
			[Token(Token = "0x600189B")]
			[Address(RVA = "0xA5FBFC", Offset = "0xA5FBFC", VA = "0xA5FBFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		public static Resource<Material> HullSign
		{
			[Token(Token = "0x600189C")]
			[Address(RVA = "0xA5FD14", Offset = "0xA5FD14", VA = "0xA5FD14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AA")]
		public static Resource<Material> LiberationSans_SDF_Outline
		{
			[Token(Token = "0x600189D")]
			[Address(RVA = "0xA5FE2C", Offset = "0xA5FE2C", VA = "0xA5FE2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		public static Resource<Material> HullSignHalis
		{
			[Token(Token = "0x600189E")]
			[Address(RVA = "0xA5FF44", Offset = "0xA5FF44", VA = "0xA5FF44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AC")]
		public static Resource<Font> HalisGRMedium
		{
			[Token(Token = "0x600189F")]
			[Address(RVA = "0xA6005C", Offset = "0xA6005C", VA = "0xA6005C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xA5FADC", Offset = "0xA5FADC", VA = "0xA5FADC")]
		private Fonts_Materials()
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xA60174", Offset = "0xA60174", VA = "0xA60174")]
		public static IList<IResource> GetContents()
		{
			return null;
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xA5E4FC", Offset = "0xA5E4FC", VA = "0xA5E4FC")]
		public static IList<IResource> GetContentsRecursive()
		{
			return null;
		}

		[Token(Token = "0x60018A2")]
		public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60018A3")]
		public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xA601DC", Offset = "0xA601DC", VA = "0xA601DC")]
		public static void UnloadAll()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xA60284", Offset = "0xA60284", VA = "0xA60284")]
		private void UnloadAllRecursive()
		{
		}
	}

	[Token(Token = "0x2000328")]
	public sealed class Textures
	{
		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IList<IResource> __ts_internal_resources;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IList<IResource> __ts_internal_recursiveLookupCache;

		[Token(Token = "0x170001AD")]
		public static Resource<Texture2D> GridBox_Default
		{
			[Token(Token = "0x60018A8")]
			[Address(RVA = "0x906300", Offset = "0x906300", VA = "0x906300")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x9062F8", Offset = "0x9062F8", VA = "0x9062F8")]
		private Textures()
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x906418", Offset = "0x906418", VA = "0x906418")]
		public static IList<IResource> GetContents()
		{
			return null;
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x906480", Offset = "0x906480", VA = "0x906480")]
		public static IList<IResource> GetContentsRecursive()
		{
			return null;
		}

		[Token(Token = "0x60018AB")]
		public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60018AC")]
		public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x9065CC", Offset = "0x9065CC", VA = "0x9065CC")]
		public static void UnloadAll()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x906674", Offset = "0x906674", VA = "0x906674")]
		private void UnloadAllRecursive()
		{
		}
	}

	[Token(Token = "0x2000329")]
	public sealed class Prefabs
	{
		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IList<IResource> __ts_internal_resources;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IList<IResource> __ts_internal_recursiveLookupCache;

		[Token(Token = "0x170001AE")]
		public static PrefabResource BlobShadow
		{
			[Token(Token = "0x60018B1")]
			[Address(RVA = "0x9021A8", Offset = "0x9021A8", VA = "0x9021A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x9021A0", Offset = "0x9021A0", VA = "0x9021A0")]
		private Prefabs()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x9022C0", Offset = "0x9022C0", VA = "0x9022C0")]
		public static IList<IResource> GetContents()
		{
			return null;
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x902328", Offset = "0x902328", VA = "0x902328")]
		public static IList<IResource> GetContentsRecursive()
		{
			return null;
		}

		[Token(Token = "0x60018B4")]
		public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60018B5")]
		public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x902474", Offset = "0x902474", VA = "0x902474")]
		public static void UnloadAll()
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x90251C", Offset = "0x90251C", VA = "0x90251C")]
		private void UnloadAllRecursive()
		{
		}
	}

	[Token(Token = "0x400037C")]
	private const string _tsInternal = "1.3.2-Unity5";

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IList<IResource> __ts_internal_resources;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IList<IResource> __ts_internal_recursiveLookupCache;

	[Token(Token = "0x1700003C")]
	public static Resource<Texture2D> iconcylinder
	{
		[Token(Token = "0x6000288")]
		[Address(RVA = "0xA5B5A4", Offset = "0xA5B5A4", VA = "0xA5B5A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003D")]
	public static Resource<Shader> TexturePacker
	{
		[Token(Token = "0x6000289")]
		[Address(RVA = "0xA5B6BC", Offset = "0xA5B6BC", VA = "0xA5B6BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003E")]
	public static Resource<Texture2D> iconslope
	{
		[Token(Token = "0x600028A")]
		[Address(RVA = "0xA5B7D4", Offset = "0xA5B7D4", VA = "0xA5B7D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003F")]
	public static Resource<TextAsset> LineBreaking_Leading_Characters
	{
		[Token(Token = "0x600028B")]
		[Address(RVA = "0xA5B8EC", Offset = "0xA5B8EC", VA = "0xA5B8EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000040")]
	public static Resource<Mesh> bone
	{
		[Token(Token = "0x600028C")]
		[Address(RVA = "0xA5BA04", Offset = "0xA5BA04", VA = "0xA5BA04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000041")]
	public static Resource<Shader> OVRMRUnlitTransparent
	{
		[Token(Token = "0x600028D")]
		[Address(RVA = "0xA5BB1C", Offset = "0xA5BB1C", VA = "0xA5BB1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000042")]
	public static Resource<TextAsset> OVRMRChromaKey
	{
		[Token(Token = "0x600028E")]
		[Address(RVA = "0xA5BC34", Offset = "0xA5BC34", VA = "0xA5BC34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000043")]
	public static Resource<Shader> MaskBlend
	{
		[Token(Token = "0x600028F")]
		[Address(RVA = "0xA5BD4C", Offset = "0xA5BD4C", VA = "0xA5BD4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000044")]
	public static Resource<ONSPSettings> ONSPSettings
	{
		[Token(Token = "0x6000290")]
		[Address(RVA = "0xA5BE64", Offset = "0xA5BE64", VA = "0xA5BE64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000045")]
	public static Resource<Texture2D> iconpyramid
	{
		[Token(Token = "0x6000291")]
		[Address(RVA = "0xA5BF7C", Offset = "0xA5BF7C", VA = "0xA5BF7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000046")]
	public static Resource<Texture2D> iconsphere
	{
		[Token(Token = "0x6000292")]
		[Address(RVA = "0xA5C094", Offset = "0xA5C094", VA = "0xA5C094")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000047")]
	public static Resource<Texture2D> icondisk
	{
		[Token(Token = "0x6000293")]
		[Address(RVA = "0xA5C1AC", Offset = "0xA5C1AC", VA = "0xA5C1AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000048")]
	public static Resource<Shader> Blend
	{
		[Token(Token = "0x6000294")]
		[Address(RVA = "0xA5C2C4", Offset = "0xA5C2C4", VA = "0xA5C2C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000049")]
	public static Resource<Shader> BlendCache
	{
		[Token(Token = "0x6000295")]
		[Address(RVA = "0xA5C3DC", Offset = "0xA5C3DC", VA = "0xA5C3DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004A")]
	public static Resource<Shader> Mask
	{
		[Token(Token = "0x6000296")]
		[Address(RVA = "0xA5C4F4", Offset = "0xA5C4F4", VA = "0xA5C4F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004B")]
	public static Resource<Shader> Cubemap_Blit
	{
		[Token(Token = "0x6000297")]
		[Address(RVA = "0xA5C60C", Offset = "0xA5C60C", VA = "0xA5C60C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004C")]
	public static Resource<Mesh> globalControl
	{
		[Token(Token = "0x6000298")]
		[Address(RVA = "0xA5C724", Offset = "0xA5C724", VA = "0xA5C724")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004D")]
	public static Resource<Shader> OVRMRUnlit
	{
		[Token(Token = "0x6000299")]
		[Address(RVA = "0xA5C83C", Offset = "0xA5C83C", VA = "0xA5C83C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004E")]
	public static Resource<Texture2D> iconplane
	{
		[Token(Token = "0x600029A")]
		[Address(RVA = "0xA5C954", Offset = "0xA5C954", VA = "0xA5C954")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004F")]
	public static Resource<Shader> Unlit_Transparent_Color
	{
		[Token(Token = "0x600029B")]
		[Address(RVA = "0xA5CA6C", Offset = "0xA5CA6C", VA = "0xA5CA6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000050")]
	public static Resource<Texture2D> icontorus
	{
		[Token(Token = "0x600029C")]
		[Address(RVA = "0xA5CB84", Offset = "0xA5CB84", VA = "0xA5CB84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000051")]
	public static Resource<Mesh> arrowControl
	{
		[Token(Token = "0x600029D")]
		[Address(RVA = "0xA5CC9C", Offset = "0xA5CC9C", VA = "0xA5CC9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000052")]
	public static Resource<Shader> OVRMRCameraFrameLit
	{
		[Token(Token = "0x600029E")]
		[Address(RVA = "0xA5CDB4", Offset = "0xA5CDB4", VA = "0xA5CDB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000053")]
	public static Resource<TextAsset> LineBreaking_Following_Characters
	{
		[Token(Token = "0x600029F")]
		[Address(RVA = "0xA5CECC", Offset = "0xA5CECC", VA = "0xA5CECC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000054")]
	public static Resource<Shader> Underlay_Transparent_Occluder
	{
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xA5CFE4", Offset = "0xA5CFE4", VA = "0xA5CFE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000055")]
	public static Resource<Shader> ProcessOnly
	{
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xA5D0FC", Offset = "0xA5D0FC", VA = "0xA5D0FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000056")]
	public static Resource<Shader> Texture2D_Blit
	{
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xA5D214", Offset = "0xA5D214", VA = "0xA5D214")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000057")]
	public static Resource<Shader> Transparent
	{
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xA5D32C", Offset = "0xA5D32C", VA = "0xA5D32C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000058")]
	public static Resource<Shader> DepthMask
	{
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xA5D444", Offset = "0xA5D444", VA = "0xA5D444")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000059")]
	public static Resource<TextAsset> Common
	{
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0xA5D55C", Offset = "0xA5D55C", VA = "0xA5D55C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005A")]
	public static Resource<Shader> DepthMaskBlend
	{
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xA5D674", Offset = "0xA5D674", VA = "0xA5D674")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005B")]
	public static Resource<Shader> OVRMRCameraFrame
	{
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0xA5D78C", Offset = "0xA5D78C", VA = "0xA5D78C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005C")]
	public static Resource<Shader> Base
	{
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xA5D8A4", Offset = "0xA5D8A4", VA = "0xA5D8A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005D")]
	public static Resource<Texture2D> iconcube
	{
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xA5D9BC", Offset = "0xA5D9BC", VA = "0xA5D9BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005E")]
	public static Resource<Shader> Diffuse
	{
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xA5DAD4", Offset = "0xA5DAD4", VA = "0xA5DAD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005F")]
	public static Resource<Texture2D> iconcapsule
	{
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0xA5DBEC", Offset = "0xA5DBEC", VA = "0xA5DBEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000060")]
	public static Resource<Shader> Underlay_Impostor
	{
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xA5DD04", Offset = "0xA5DD04", VA = "0xA5DD04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000061")]
	public static Resource<Shader> Cutout
	{
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0xA5DE1C", Offset = "0xA5DE1C", VA = "0xA5DE1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xA5B59C", Offset = "0xA5B59C", VA = "0xA5B59C")]
	private SRResources()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xA5DF34", Offset = "0xA5DF34", VA = "0xA5DF34")]
	public static IList<IResource> GetContents()
	{
		return null;
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xA5DF9C", Offset = "0xA5DF9C", VA = "0xA5DF9C")]
	public static IList<IResource> GetContentsRecursive()
	{
		return null;
	}

	[Token(Token = "0x60002B0")]
	public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
	{
		return null;
	}

	[Token(Token = "0x60002B1")]
	public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
	{
		return null;
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xA5E648", Offset = "0xA5E648", VA = "0xA5E648")]
	public static void UnloadAll()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xA5E6F0", Offset = "0xA5E6F0", VA = "0xA5E6F0")]
	private void UnloadAllRecursive()
	{
	}
}
[Token(Token = "0x2000086")]
public sealed class SRScenes
{
	[Token(Token = "0x400037F")]
	private const string _tsInternal = "1.3.2-Unity5";

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IList<TypeSafe.Scene> __all;

	[Token(Token = "0x17000062")]
	public static TypeSafe.Scene init
	{
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x906804", Offset = "0x906804", VA = "0x906804")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000063")]
	public static TypeSafe.Scene disclaimer
	{
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x9068DC", Offset = "0x9068DC", VA = "0x9068DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000064")]
	public static TypeSafe.Scene intro
	{
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x9069B4", Offset = "0x9069B4", VA = "0x9069B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000065")]
	public static TypeSafe.Scene main
	{
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x906A8C", Offset = "0x906A8C", VA = "0x906A8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000066")]
	public static TypeSafe.Scene loading
	{
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x906B64", Offset = "0x906B64", VA = "0x906B64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000067")]
	public static TypeSafe.Scene ending
	{
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x906C3C", Offset = "0x906C3C", VA = "0x906C3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000068")]
	public static TypeSafe.Scene errorMessage
	{
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x906D14", Offset = "0x906D14", VA = "0x906D14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000069")]
	public static IList<TypeSafe.Scene> All
	{
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x906DEC", Offset = "0x906DEC", VA = "0x906DEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x9067FC", Offset = "0x9067FC", VA = "0x9067FC")]
	private SRScenes()
	{
	}
}
[Token(Token = "0x2000087")]
public sealed class SRSortingLayers
{
	[Token(Token = "0x4000381")]
	private const string _tsInternal = "1.3.2-Unity5";

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IList<TypeSafe.SortingLayer> __all;

	[Token(Token = "0x1700006A")]
	public static TypeSafe.SortingLayer Default
	{
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x907188", Offset = "0x907188", VA = "0x907188")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006B")]
	public static TypeSafe.SortingLayer Crosshair
	{
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x907260", Offset = "0x907260", VA = "0x907260")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006C")]
	public static IList<TypeSafe.SortingLayer> All
	{
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x907338", Offset = "0x907338", VA = "0x907338")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x907180", Offset = "0x907180", VA = "0x907180")]
	private SRSortingLayers()
	{
	}
}
[Token(Token = "0x2000088")]
public sealed class SRTags
{
	[Token(Token = "0x4000383")]
	private const string _tsInternal = "1.3.2-Unity5";

	[Token(Token = "0x4000384")]
	public const string Untagged = "Untagged";

	[Token(Token = "0x4000385")]
	public const string Respawn = "Respawn";

	[Token(Token = "0x4000386")]
	public const string Finish = "Finish";

	[Token(Token = "0x4000387")]
	public const string EditorOnly = "EditorOnly";

	[Token(Token = "0x4000388")]
	public const string MainCamera = "MainCamera";

	[Token(Token = "0x4000389")]
	public const string Player = "Player";

	[Token(Token = "0x400038A")]
	public const string GameController = "GameController";

	[Token(Token = "0x400038B")]
	public const string Floor = "Floor";

	[Token(Token = "0x400038C")]
	public const string Ceiling = "Ceiling";

	[Token(Token = "0x400038D")]
	public const string Wall = "Wall";

	[Token(Token = "0x400038E")]
	public const string NoBake = "NoBake";

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IList<string> __all;

	[Token(Token = "0x1700006D")]
	public static IList<string> All
	{
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x907520", Offset = "0x907520", VA = "0x907520")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x907518", Offset = "0x907518", VA = "0x907518")]
	private SRTags()
	{
	}
}
[Token(Token = "0x2000089")]
public class InfoBubble : MonoBehaviour
{
	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 WobbleAxis;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float WobbleFrequency;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float WobbleAmplitude;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform TrackTarget;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 startOffsetTarget;

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x9DFF4C", Offset = "0x9DFF4C", VA = "0x9DFF4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x9E0030", Offset = "0x9E0030", VA = "0x9E0030")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x9E017C", Offset = "0x9E017C", VA = "0x9E017C")]
	public InfoBubble()
	{
	}
}
[Token(Token = "0x200008A")]
public class RuntimeDecalCombiner
{
	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xA53224", Offset = "0xA53224", VA = "0xA53224")]
	public static List<GameObject> Combine(IList<EasyDecal> decals)
	{
		return null;
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xA55C90", Offset = "0xA55C90", VA = "0xA55C90")]
	private static List<GameObject> Combine(Dictionary<DecalTextureAtlas, List<EasyDecal>> mappings)
	{
		return null;
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xA55E70", Offset = "0xA55E70", VA = "0xA55E70")]
	private static GameObject Combine(IList<EasyDecal> decals, DecalTextureAtlas atlas)
	{
		return null;
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xA56330", Offset = "0xA56330", VA = "0xA56330")]
	public RuntimeDecalCombiner()
	{
	}
}
[Token(Token = "0x200008B")]
public class SparksExecutioner : MonoBehaviour
{
	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Lifetime;

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x919290", Offset = "0x919290", VA = "0x919290")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x9192E8", Offset = "0x9192E8", VA = "0x9192E8")]
	private void Kill()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x919364", Offset = "0x919364", VA = "0x919364")]
	public SparksExecutioner()
	{
	}
}
[Token(Token = "0x200008C")]
[ExecuteInEditMode]
public class Planet : MonoBehaviour
{
	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool mobileShader;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool atmosphere;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool updateChangeInRealTime;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material PlanetMaterial;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material ringMaterial;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float hdrExposure;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color atmoColor;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float atmoStrength;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float kr;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float km;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float outerScaleFactor;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float innerRadius;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float outerRadius;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float scaleDepth;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float scale;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float gamma;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform[] shadow;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int shadowNumber;

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x9E64A0", Offset = "0x9E64A0", VA = "0x9E64A0")]
	public void setShadowNumber(int n)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x9E6524", Offset = "0x9E6524", VA = "0x9E6524")]
	public void setShadow(Transform p, int n)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x9E6F58", Offset = "0x9E6F58", VA = "0x9E6F58")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x9E70A0", Offset = "0x9E70A0", VA = "0x9E70A0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x9E6C1C", Offset = "0x9E6C1C", VA = "0x9E6C1C")]
	private void InitRingMaterial(Material mat)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x9E6658", Offset = "0x9E6658", VA = "0x9E6658")]
	private void InitMaterial(Material mat)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x9E7174", Offset = "0x9E7174", VA = "0x9E7174")]
	public Planet()
	{
	}
}
[Token(Token = "0x200008D")]
public class ShadowManager : MonoBehaviour
{
	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] planet;

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x910EF8", Offset = "0x910EF8", VA = "0x910EF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x9110DC", Offset = "0x9110DC", VA = "0x9110DC")]
	public ShadowManager()
	{
	}
}
[Token(Token = "0x200008E")]
public class FpsDisplay : MonoBehaviour
{
	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float deltaTime;

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x9A5494", Offset = "0x9A5494", VA = "0x9A5494")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x9A54E0", Offset = "0x9A54E0", VA = "0x9A54E0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x9A56C0", Offset = "0x9A56C0", VA = "0x9A56C0")]
	public FpsDisplay()
	{
	}
}
[Token(Token = "0x200008F")]
public class FreeCamera : MonoBehaviour
{
	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float flySpeed;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 flySpeedLimit;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotationSpeed;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 sensitivity;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 smoothing;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 mouseDelta;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 mouseAbsolute;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 smoothMouse;

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x9A56C8", Offset = "0x9A56C8", VA = "0x9A56C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x9A5C24", Offset = "0x9A5C24", VA = "0x9A5C24")]
	public FreeCamera()
	{
	}
}
[Token(Token = "0x2000090")]
public class RotatingCamera : MonoBehaviour
{
	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xA55B8C", Offset = "0xA55B8C", VA = "0xA55B8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xA55C80", Offset = "0xA55C80", VA = "0xA55C80")]
	public RotatingCamera()
	{
	}
}
[Token(Token = "0x2000091")]
public class ShowOffSceneManager : MonoBehaviour
{
	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float planetRotSpeed;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sunRotSpeed;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform sun;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] planets;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int index;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject planet;

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x913350", Offset = "0x913350", VA = "0x913350")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x9134A0", Offset = "0x9134A0", VA = "0x9134A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x913570", Offset = "0x913570", VA = "0x913570")]
	public void NextButton()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x913760", Offset = "0x913760", VA = "0x913760")]
	public void PreviousButton()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x913950", Offset = "0x913950", VA = "0x913950")]
	public ShowOffSceneManager()
	{
	}
}
[Token(Token = "0x2000092")]
public class ExampleWheelController : MonoBehaviour
{
	[Token(Token = "0x200032A")]
	private static class Uniforms
	{
		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int _MotionAmount;
	}

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer motionVectorRenderer;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xA1CA48", Offset = "0xA1CA48", VA = "0xA1CA48")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xA1CAC4", Offset = "0xA1CAC4", VA = "0xA1CAC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xA1CC80", Offset = "0xA1CC80", VA = "0xA1CC80")]
	public ExampleWheelController()
	{
	}
}
[Token(Token = "0x2000093")]
public class FABRIK_IK : MonoBehaviour
{
	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Handle;

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xA1D434", Offset = "0xA1D434", VA = "0xA1D434")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xA1D438", Offset = "0xA1D438", VA = "0xA1D438")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xA1D43C", Offset = "0xA1D43C", VA = "0xA1D43C")]
	public FABRIK_IK()
	{
	}
}
[Token(Token = "0x2000094")]
public class THC1_ctrl : MonoBehaviour
{
	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CharacterController controller;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int battle_state;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float runSpeed;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float turnSpeed;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float gravity;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 moveDirection;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float w_sp;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float r_sp;

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x9B6324", Offset = "0x9B6324", VA = "0x9B6324")]
	private void Start()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x9B63B4", Offset = "0x9B63B4", VA = "0x9B63B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x9B6A68", Offset = "0x9B6A68", VA = "0x9B6A68")]
	public THC1_ctrl()
	{
	}
}
[Token(Token = "0x2000095")]
public class AgentAwareness : MonoBehaviour
{
	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ProgressBarAttribute", RVA = "0x75C6A4", Offset = "0x75C6A4")]
	[SerializeField]
	private float _awarenessLevel;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float gainRate;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float decayRate;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float latchedDecayFactor;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float visionFactor;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float lightSenseFactor;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float playerDistanceFactor;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float playerDistanceRangeMin;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float playerDistanceRangeMax;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action onAware;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AgentVision agentVision;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AgentLightSense agentLightSense;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float aggroTimer;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool justForcedAware;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool awarenessLatch;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool isAwarenessLatched;

	[Token(Token = "0x1700006E")]
	public float AwarenessLevel
	{
		[Token(Token = "0x60002EF")]
		[Address(RVA = "0xB5B300", Offset = "0xB5B300", VA = "0xB5B300")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700006F")]
	public bool IsAware
	{
		[Token(Token = "0x60002F0")]
		[Address(RVA = "0xB5828C", Offset = "0xB5828C", VA = "0xB5828C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xB5B308", Offset = "0xB5B308", VA = "0xB5B308")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xB5B394", Offset = "0xB5B394", VA = "0xB5B394")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xB5B6D4", Offset = "0xB5B6D4", VA = "0xB5B6D4")]
	public void ResetAwareness()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xB5B6E0", Offset = "0xB5B6E0", VA = "0xB5B6E0")]
	public void Delatch()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xB5B6E8", Offset = "0xB5B6E8", VA = "0xB5B6E8")]
	public void MakeAware(float delta = 1f)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xB5B7A4", Offset = "0xB5B7A4", VA = "0xB5B7A4")]
	public void SetAggroTimer(float timer)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xB5B7AC", Offset = "0xB5B7AC", VA = "0xB5B7AC")]
	public AgentAwareness()
	{
	}
}
[Token(Token = "0x2000096")]
public class AgentHearing : MonoBehaviour
{
	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float perceptiveness;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<HearingSystem.Soundwave> onHeardSoundwave;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int listenerId;

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xB5B7C8", Offset = "0xB5B7C8", VA = "0xB5B7C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xB5B834", Offset = "0xB5B834", VA = "0xB5B834")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xB5B8E8", Offset = "0xB5B8E8", VA = "0xB5B8E8")]
	public void OnSoundwave(HearingSystem.Soundwave soundwave)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xB5B968", Offset = "0xB5B968", VA = "0xB5B968")]
	public AgentHearing()
	{
	}
}
[Token(Token = "0x2000097")]
public class AgentLightSense : MonoBehaviour
{
	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer bodyRenderer;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _inLitRoom;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _inFlashlight;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _flashlightFactor;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _flashLightPos;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int updateFreq;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float updateTimer;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform bodyCenterReference;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<PlayerFlashlight> flashlightCache;

	[Token(Token = "0x17000070")]
	public bool InLitRoom
	{
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0xB5B980", Offset = "0xB5B980", VA = "0xB5B980")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000071")]
	public bool InFlashlight
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0xB5B988", Offset = "0xB5B988", VA = "0xB5B988")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000072")]
	public float FlashlightFactor
	{
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xB5B990", Offset = "0xB5B990", VA = "0xB5B990")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000073")]
	public Vector3 FlashLightPosition
	{
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0xB5B998", Offset = "0xB5B998", VA = "0xB5B998")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xB5B9A4", Offset = "0xB5B9A4", VA = "0xB5B9A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xB5BA58", Offset = "0xB5BA58", VA = "0xB5BA58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xB5BA64", Offset = "0xB5BA64", VA = "0xB5BA64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xB5BCF8", Offset = "0xB5BCF8", VA = "0xB5BCF8")]
	public AgentLightSense()
	{
	}
}
[Token(Token = "0x2000098")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757C50", Offset = "0x757C50")]
public class AgentLookAt : MonoBehaviour
{
	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxWeight;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smoothSpeed;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _target;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LookAtIK ikController;

	[Token(Token = "0x17000074")]
	public Transform Target
	{
		[Token(Token = "0x6000304")]
		[Address(RVA = "0xB5BD7C", Offset = "0xB5BD7C", VA = "0xB5BD7C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000305")]
		[Address(RVA = "0xB5BD84", Offset = "0xB5BD84", VA = "0xB5BD84")]
		set
		{
		}
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xB5BE88", Offset = "0xB5BE88", VA = "0xB5BE88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xB5BEE8", Offset = "0xB5BEE8", VA = "0xB5BEE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xB5BF90", Offset = "0xB5BF90", VA = "0xB5BF90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xB5BD88", Offset = "0xB5BD88", VA = "0xB5BD88")]
	public void SetTarget(Transform newTarget)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xB5C0DC", Offset = "0xB5C0DC", VA = "0xB5C0DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xB5C104", Offset = "0xB5C104", VA = "0xB5C104")]
	public AgentLookAt()
	{
	}
}
[Token(Token = "0x2000099")]
public class AgentUtils
{
	[Token(Token = "0x200032B")]
	public struct LODState
	{
		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool visibility;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool potentialVisibility;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool ragdollActive;

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xB5D890", Offset = "0xB5D890", VA = "0xB5D890")]
		public LODState(bool visibility = false, bool potentialVisibility = false, bool ragdollActive = false)
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xB5D8AC", Offset = "0xB5D8AC", VA = "0xB5D8AC")]
		public void Set(bool visibility = false, bool potentialVisibility = false)
		{
		}
	}

	[Token(Token = "0x200032C")]
	public class SerializedData
	{
		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int health;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ragdollData;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string navData;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string extra;

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xB5D398", Offset = "0xB5D398", VA = "0xB5D398")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int animAngry;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int animReact;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly int animAttack;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly int animHit;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly int animDeathEnter;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static readonly int animDeathExit;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly int animJump;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static readonly int animLand;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly int animSpeed;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static readonly int animSpeedLateral;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly int animHidden;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static readonly int animEventReactExit;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly int onAppear;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static readonly int onDie;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly int onDisappearStart;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static readonly int onDisappearEnd;

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xB5C114", Offset = "0xB5C114", VA = "0xB5C114")]
	public static void RepositionOnNavMesh(Transform agentTransform, float maxDistance = 0.3f)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xB59E50", Offset = "0xB59E50", VA = "0xB59E50")]
	public static Vector3 MapToNavMesh(Vector3 point, float maxHeight = 3f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xB56E2C", Offset = "0xB56E2C", VA = "0xB56E2C")]
	public static bool MapToNavMesh(Vector3 point, out Vector3 result, float maxHeight = 3f)
	{
		return default(bool);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xB57B8C", Offset = "0xB57B8C", VA = "0xB57B8C")]
	public static Vector3 RaycastDownToNavMesh(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xB5C35C", Offset = "0xB5C35C", VA = "0xB5C35C")]
	public static bool Wander(Transform transform, AgentWalk agentWalk)
	{
		return default(bool);
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xB5C758", Offset = "0xB5C758", VA = "0xB5C758")]
	public static void ActivateInRoom(Transform transform)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xB5CBB4", Offset = "0xB5CBB4", VA = "0xB5CBB4")]
	public static List<Collider> GetBodyColliders(GameObject obj, Collider moveCollider, Collider tpCollider, bool includeInactive = false)
	{
		return null;
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xB5CD14", Offset = "0xB5CD14", VA = "0xB5CD14")]
	public static bool SetLOD(LODState lodState, [Optional] GameObject lodCollider, [Optional] GameObject rootBone, [Optional] Animator animator, [Optional] NavMeshAgent navAgent, [Optional] AgentLightSense lightSense, [Optional] VisionTarget visionTarget)
	{
		return default(bool);
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xB59800", Offset = "0xB59800", VA = "0xB59800")]
	public static void RotateTowards(Transform transform, Vector3 target, float rotRate, [Optional] Vector3? upDir)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xB574C4", Offset = "0xB574C4", VA = "0xB574C4")]
	public static void RotateTowardsImmediate(Transform transform, Vector3 target, [Optional] Vector3? upDir)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xB5D014", Offset = "0xB5D014", VA = "0xB5D014")]
	private static Quaternion GetRotationToTarget(Transform transform, Vector3 target, [Optional] Vector3? upDir)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xB5D210", Offset = "0xB5D210", VA = "0xB5D210")]
	public static SerializedData Serialize(IAgent agent, Health health, AgentWalk agentWalk, RagdollController ragdoll)
	{
		return null;
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xB5D42C", Offset = "0xB5D42C", VA = "0xB5D42C")]
	public static void Deserialize(SerializedData data, Health health, AgentWalk agentWalk, RagdollController ragdoll, Action onDeathDelegate)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xB5D644", Offset = "0xB5D644", VA = "0xB5D644")]
	public AgentUtils()
	{
	}
}
[Token(Token = "0x200009A")]
public class AgentVision : MonoBehaviour
{
	[Token(Token = "0x200032D")]
	public enum TargetPrioritization
	{
		[Token(Token = "0x4001866")]
		None,
		[Token(Token = "0x4001867")]
		Closest,
		[Token(Token = "0x4001868")]
		Furthest,
		[Token(Token = "0x4001869")]
		Security
	}

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float outerViewAngle;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float outerViewLength;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float outerDarkVision;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool useInnerCone;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float innerViewAngle;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float innerViewLength;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float innerDarkVision;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _innerViewLengthScale;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "BitMaskAttribute", RVA = "0x75C6F8", Offset = "0x75C6F8")]
	public VisionSystem.TargetType targetMask;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LayerMask occludersMask;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform eyeTransform;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float viewYDelta;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int outerConeIdx;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int innerConeIdx;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _playerVisible;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 playerLastSeen;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public TargetPrioritization targetPrioritization;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private VisionTarget _priorityTarget;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 priorityTargetLastSeen;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public VisionSystem.TargetType priorityTargetLastType;

	[Token(Token = "0x17000075")]
	public float InnerViewLengthScale
	{
		[Token(Token = "0x600031B")]
		[Address(RVA = "0xB5D8C0", Offset = "0xB5D8C0", VA = "0xB5D8C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600031C")]
		[Address(RVA = "0xB57E64", Offset = "0xB57E64", VA = "0xB57E64")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public bool PlayerVisible
	{
		[Token(Token = "0x600031D")]
		[Address(RVA = "0xB5D9E4", Offset = "0xB5D9E4", VA = "0xB5D9E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000077")]
	public bool TargetVisible
	{
		[Token(Token = "0x600031E")]
		[Address(RVA = "0xB5821C", Offset = "0xB5821C", VA = "0xB5821C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000078")]
	public VisionTarget PriorityTarget
	{
		[Token(Token = "0x600031F")]
		[Address(RVA = "0xB5D9EC", Offset = "0xB5D9EC", VA = "0xB5D9EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xB5D9F4", Offset = "0xB5D9F4", VA = "0xB5D9F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xB5D8C8", Offset = "0xB5D8C8", VA = "0xB5D8C8")]
	private void ResetInnerViewCone()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xB5DB4C", Offset = "0xB5DB4C", VA = "0xB5DB4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xB5DC44", Offset = "0xB5DC44", VA = "0xB5DC44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xB57B18", Offset = "0xB57B18", VA = "0xB57B18")]
	public void ForceUpdatePlayerLastSeen()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xB5E208", Offset = "0xB5E208", VA = "0xB5E208")]
	public AgentVision()
	{
	}
}
[Token(Token = "0x200009B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757CB4", Offset = "0x757CB4")]
public class AgentWalk : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x200032E")]
	private class SerializedData
	{
		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool inOffMeshLink;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 offMeshPos;

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xB60610", Offset = "0xB60610", VA = "0xB60610")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NavMeshAgent navAgent;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ILocomotion locomotion;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AgentLightSense lightSense;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool inDestination;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[HideInInspector]
	public bool destinationUnreachable;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform target;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 destination;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 lastPos;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lastSpeed;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastRemainingDistance;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float stuckness;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float baseSpeed;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float baseAngularSpeed;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float baseAcceleration;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _speedFactor;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool rotate;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float turnSmoothing;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool setLateralSpeed;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75C77C", Offset = "0x75C77C")]
	public float litSpeedFactor;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75C7B4", Offset = "0x75C7B4")]
	public bool useRootMotion;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool ignoreAnimatorMotion;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	private bool inOffMeshLink;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 offMeshLinkStartPos;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 offMeshLinkEndPos;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Door offMeshLinkDoor;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool needsUpdateOffMeshLink;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool resetPathAfterOffMeshLink;

	[Token(Token = "0x17000079")]
	public Vector3 Destination
	{
		[Token(Token = "0x6000326")]
		[Address(RVA = "0xB597E4", Offset = "0xB597E4", VA = "0xB597E4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700007A")]
	public float SpeedFactor
	{
		[Token(Token = "0x6000327")]
		[Address(RVA = "0xB5E240", Offset = "0xB5E240", VA = "0xB5E240")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000328")]
		[Address(RVA = "0xB57AAC", Offset = "0xB57AAC", VA = "0xB57AAC")]
		set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<Door> onApproachDoor
	{
		[Token(Token = "0x6000329")]
		[Address(RVA = "0xB5E248", Offset = "0xB5E248", VA = "0xB5E248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764748", Offset = "0x764748")]
		add
		{
		}
		[Token(Token = "0x600032A")]
		[Address(RVA = "0xB5E2EC", Offset = "0xB5E2EC", VA = "0xB5E2EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764758", Offset = "0x764758")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<Door> onDepartDoor
	{
		[Token(Token = "0x600032B")]
		[Address(RVA = "0xB5E390", Offset = "0xB5E390", VA = "0xB5E390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764768", Offset = "0x764768")]
		add
		{
		}
		[Token(Token = "0x600032C")]
		[Address(RVA = "0xB5E434", Offset = "0xB5E434", VA = "0xB5E434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764778", Offset = "0x764778")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action<Door> onCrossingDoor
	{
		[Token(Token = "0x600032D")]
		[Address(RVA = "0xB5E4D8", Offset = "0xB5E4D8", VA = "0xB5E4D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764788", Offset = "0x764788")]
		add
		{
		}
		[Token(Token = "0x600032E")]
		[Address(RVA = "0xB5E57C", Offset = "0xB5E57C", VA = "0xB5E57C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764798", Offset = "0x764798")]
		remove
		{
		}
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xB5E620", Offset = "0xB5E620", VA = "0xB5E620")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xB5E7D4", Offset = "0xB5E7D4", VA = "0xB5E7D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xB5E888", Offset = "0xB5E888", VA = "0xB5E888")]
	public void Update()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xB5FFEC", Offset = "0xB5FFEC", VA = "0xB5FFEC")]
	private void OnAnimatorMove()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xB60274", Offset = "0xB60274", VA = "0xB60274")]
	private void OnLocomotionMove()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xB57D34", Offset = "0xB57D34", VA = "0xB57D34")]
	public bool GoTo(Vector3 dest, float stoppingDistance = 0.5f, float navMeshSampleRadius = 1f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xB56F80", Offset = "0xB56F80", VA = "0xB56F80")]
	public void Chase(Transform target, float stoppingDistance = 0.5f)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xB57460", Offset = "0xB57460", VA = "0xB57460")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xB582C4", Offset = "0xB582C4", VA = "0xB582C4")]
	public bool IsStopped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xB589BC", Offset = "0xB589BC", VA = "0xB589BC")]
	public void SetMovementEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xB60578", Offset = "0xB60578", VA = "0xB60578")]
	public void Reposition(Vector3 newPos)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xB5D3A0", Offset = "0xB5D3A0", VA = "0xB5D3A0", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xB5D5B8", Offset = "0xB5D5B8", VA = "0xB5D5B8", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xB60618", Offset = "0xB60618", VA = "0xB60618", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xB6061C", Offset = "0xB6061C", VA = "0xB6061C")]
	public AgentWalk()
	{
	}
}
[Token(Token = "0x200009C")]
public class AnimSpasm : MonoBehaviour
{
	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer renderer;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75C81C", Offset = "0x75C81C")]
	public float effectFactor;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] validParents;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Transform> bones;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion[] boneAngles;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion[] boneAnglesTarget;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float angleRange;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float animSpeed;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minTimer;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxTimer;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _creepyMode;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float creepyModeAngleRange;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float creepyModeAnimSpeed;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource creepyAudio;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float creepyFactor;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float timer;

	[Token(Token = "0x1700007B")]
	public bool CreepyMode
	{
		[Token(Token = "0x600033E")]
		[Address(RVA = "0xB69B34", Offset = "0xB69B34", VA = "0xB69B34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600033F")]
		[Address(RVA = "0xB69B3C", Offset = "0xB69B3C", VA = "0xB69B3C")]
		set
		{
		}
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xB69C6C", Offset = "0xB69C6C", VA = "0xB69C6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xB69F04", Offset = "0xB69F04", VA = "0xB69F04")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xB6A264", Offset = "0xB6A264", VA = "0xB6A264")]
	private void SetAngles(float curAngle)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xB6A434", Offset = "0xB6A434", VA = "0xB6A434")]
	public AnimSpasm()
	{
	}
}
[Token(Token = "0x200009D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757D18", Offset = "0x757D18")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757D18", Offset = "0x757D18")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757D18", Offset = "0x757D18")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757D18", Offset = "0x757D18")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757D18", Offset = "0x757D18")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757D18", Offset = "0x757D18")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757D18", Offset = "0x757D18")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757D18", Offset = "0x757D18")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757D18", Offset = "0x757D18")]
[SelectionBase]
public class Blob : FSMComponent, IAgent, IGameSerializable
{
	[Token(Token = "0x200032F")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State MeltUp;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Idle;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Wander;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Investigate;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Chase;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Attack;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Reposition;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public FSM.State Hurt;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FSM.State DeathFall;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public FSM.State Death;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public FSM.State Disappear;

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x92A490", Offset = "0x92A490", VA = "0x92A490")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x2000330")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B8F8", Offset = "0x75B8F8")]
	private sealed class <DeserializeAfterStart_co>d__93 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Blob <>4__this;

		[Token(Token = "0x170001AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018C2")]
			[Address(RVA = "0x92A5E0", Offset = "0x92A5E0", VA = "0x92A5E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018C4")]
			[Address(RVA = "0x92A648", Offset = "0x92A648", VA = "0x92A648", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x92A264", Offset = "0x92A264", VA = "0x92A264")]
		[DebuggerHidden]
		public <DeserializeAfterStart_co>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x92A4A0", Offset = "0x92A4A0", VA = "0x92A4A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x92A4A4", Offset = "0x92A4A4", VA = "0x92A4A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x92A5E8", Offset = "0x92A5E8", VA = "0x92A5E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventHub evHub;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AgentWalk agentWalk;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TendrilLocomotion tendrilLocomotion;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private BlobBodyAnim blobBodyAnim;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AgentVision agentVision;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AgentHearing agentHearing;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AgentAwareness agentAwareness;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Health health;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RandomSounds randomSounds;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private JukeboxSetter jukeboxSetter;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MeltFX meltFX;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private VisionTarget visionTarget;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RagdollController ragdoll;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dissolve dissolve;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private EyeController[] eyeControllers;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<Collider> bodyColliders;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Collider moveCollider;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Collider tpCollider;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Renderer[] bodyRenderers;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioCue deathSound;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioCue painSound;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float chaseDistance;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float chaseSpeedFactor;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float chaseHurtCooldownMin;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float chaseHurtCooldownMax;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float attackCooldown;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool aggressive;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public InvestigateTask investigateTask;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ChaseTask chaseTask;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool hurtInterruptCooldown;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private int hurtFXTaskId;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float fallSpeed;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float fallDistance;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public DeathTask deathTask;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float deathFloatHeight;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private AgentUtils.LODState lodState;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private AgentUtils.SerializedData serializedData;

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x926218", Offset = "0x926218", VA = "0x926218")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x92632C", Offset = "0x92632C", VA = "0x92632C", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x926480", Offset = "0x926480", VA = "0x926480", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x9265A8", Offset = "0x9265A8", VA = "0x9265A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x926C24", Offset = "0x926C24", VA = "0x926C24")]
	private void MeltUp_Enter()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x926CCC", Offset = "0x926CCC", VA = "0x926CCC")]
	private void MeltUp_Exit()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x926D0C", Offset = "0x926D0C", VA = "0x926D0C")]
	private void OnMeltFXUp()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x926E14", Offset = "0x926E14", VA = "0x926E14")]
	private void Idle_Enter()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x926F04", Offset = "0x926F04", VA = "0x926F04")]
	private void Idle_OnTimer()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x926FE4", Offset = "0x926FE4", VA = "0x926FE4")]
	private void Idle_Update()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x9270D4", Offset = "0x9270D4", VA = "0x9270D4")]
	private void Wander_Enter()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x9271C4", Offset = "0x9271C4", VA = "0x9271C4")]
	private void Wander_Update()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x927314", Offset = "0x927314", VA = "0x927314")]
	private void Investigate_Enter()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x927334", Offset = "0x927334", VA = "0x927334")]
	private void Investigate_Update()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x927438", Offset = "0x927438", VA = "0x927438")]
	private void Investigate_OnTimer()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x9274EC", Offset = "0x9274EC", VA = "0x9274EC")]
	private void Chase_Enter()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x927560", Offset = "0x927560", VA = "0x927560")]
	private void Chase_Update()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x927680", Offset = "0x927680", VA = "0x927680")]
	private void Chase_Exit()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x9276C0", Offset = "0x9276C0", VA = "0x9276C0")]
	private void Attack_Enter()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x92782C", Offset = "0x92782C", VA = "0x92782C")]
	private void Attack_Update()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x927848", Offset = "0x927848", VA = "0x927848")]
	private void Attack_Exit()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x927864", Offset = "0x927864", VA = "0x927864")]
	private void Attack_OnTimer()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x92799C", Offset = "0x92799C", VA = "0x92799C")]
	private void Reposition_Enter()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x927F48", Offset = "0x927F48", VA = "0x927F48")]
	private void Reposition_Update()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x928060", Offset = "0x928060", VA = "0x928060")]
	private void Reposition_Exit()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x9280A0", Offset = "0x9280A0", VA = "0x9280A0")]
	private void Hurt_Enter()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x928234", Offset = "0x928234", VA = "0x928234")]
	private void Hurt_Exit()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x928274", Offset = "0x928274", VA = "0x928274")]
	private void Hurt_OnTimer()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x928318", Offset = "0x928318", VA = "0x928318")]
	private void OnHurtInterruptCooldown()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x928320", Offset = "0x928320", VA = "0x928320")]
	private void PlayHurtFX()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x928554", Offset = "0x928554", VA = "0x928554")]
	private void PlayHurtFX_End()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x928560", Offset = "0x928560", VA = "0x928560")]
	private void DeathFall_Enter()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x9286A8", Offset = "0x9286A8", VA = "0x9286A8")]
	private void DeathFall_Update()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x928860", Offset = "0x928860", VA = "0x928860")]
	private void Death_Enter()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x928B94", Offset = "0x928B94", VA = "0x928B94")]
	private void Death_Update()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x928E20", Offset = "0x928E20", VA = "0x928E20")]
	private void Death_Exit()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x929184", Offset = "0x929184", VA = "0x929184")]
	private void Death_OnTimer()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x9291A4", Offset = "0x9291A4", VA = "0x9291A4")]
	private void Disappear_Enter()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x929288", Offset = "0x929288", VA = "0x929288")]
	private void OnMeltFXDisappear()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x929300", Offset = "0x929300", VA = "0x929300")]
	private void OnFinishDisappear(GameObject go)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x9293C0", Offset = "0x9293C0", VA = "0x9293C0")]
	private void OnCrossingDoor(Door door)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x929450", Offset = "0x929450", VA = "0x929450")]
	private void OnHeardSound(HearingSystem.Soundwave sound)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x9297D4", Offset = "0x9297D4", VA = "0x9297D4")]
	private void OnReceiveDamage(int damagePoints, Health.DamageType damageType, Health.Faction faction, Vector3 originPoint)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x929ABC", Offset = "0x929ABC", VA = "0x929ABC")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x929B58", Offset = "0x929B58", VA = "0x929B58")]
	private void OnOcclusionChange(bool visibility, bool potentialVisibility)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x929C64", Offset = "0x929C64", VA = "0x929C64")]
	private void OnRagdollChange(bool active)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x929D60", Offset = "0x929D60", VA = "0x929D60", Slot = "12")]
	public void Teleport(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x92A010", Offset = "0x92A010", VA = "0x92A010", Slot = "13")]
	public void EMPulse(Room room)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x92A014", Offset = "0x92A014", VA = "0x92A014", Slot = "14")]
	public Renderer[] GetBodyRenderers()
	{
		return null;
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x926EA4", Offset = "0x926EA4", VA = "0x926EA4")]
	private void SetEyesMode(EyeController.Modes mode)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x92A01C", Offset = "0x92A01C", VA = "0x92A01C", Slot = "15")]
	public string GetAgentName()
	{
		return null;
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x92A064", Offset = "0x92A064", VA = "0x92A064", Slot = "16")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x92A11C", Offset = "0x92A11C", VA = "0x92A11C", Slot = "17")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x926BF8", Offset = "0x926BF8", VA = "0x926BF8")]
	private void DeserializeAfterStart()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x92A1E8", Offset = "0x92A1E8", VA = "0x92A1E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7647A8", Offset = "0x7647A8")]
	private IEnumerator DeserializeAfterStart_co()
	{
		return null;
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x92A290", Offset = "0x92A290", VA = "0x92A290")]
	private void OnSerializedDeath()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x92A384", Offset = "0x92A384", VA = "0x92A384", Slot = "18")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x92A3FC", Offset = "0x92A3FC", VA = "0x92A3FC")]
	public Blob()
	{
	}

	[SpecialName]
	[Token(Token = "0x600037F")]
	[Address(RVA = "0x92A498", Offset = "0x92A498", VA = "0x92A498", Slot = "11")]
	private GameObject IAgent.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x200009E")]
public class BlobBodyAnim : MonoBehaviour
{
	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve hitReactCurve;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hitReactSpeed;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 hitReactDir;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float hitReactProgress;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve angryCurveForward;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve angryCurveHeight;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float angrySpeed;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 angryLookDir;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float angryProgress;

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x92A650", Offset = "0x92A650", VA = "0x92A650")]
	private void Update()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x9284E0", Offset = "0x9284E0", VA = "0x9284E0")]
	public void PlayReactToHit(Vector3 hitDir)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x92A980", Offset = "0x92A980", VA = "0x92A980")]
	public void PlayAngry(Vector3 lookDir)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x92AA5C", Offset = "0x92AA5C", VA = "0x92AA5C")]
	public BlobBodyAnim()
	{
	}
}
[Token(Token = "0x200009F")]
public class BlobShadow : MonoBehaviour
{
	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask surfacesMask;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float checkDistance;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hoverDelta;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer quad;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 scale;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OcclusionTracker occlusionTracker;

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x92AA78", Offset = "0x92AA78", VA = "0x92AA78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x92AB0C", Offset = "0x92AB0C", VA = "0x92AB0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x92AF08", Offset = "0x92AF08", VA = "0x92AF08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x92ACB4", Offset = "0x92ACB4", VA = "0x92ACB4")]
	private void SetPosition()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x92AF0C", Offset = "0x92AF0C", VA = "0x92AF0C")]
	public BlobShadow()
	{
	}
}
[Token(Token = "0x20000A0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757ECC", Offset = "0x757ECC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757ECC", Offset = "0x757ECC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757ECC", Offset = "0x757ECC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757ECC", Offset = "0x757ECC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757ECC", Offset = "0x757ECC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757ECC", Offset = "0x757ECC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757ECC", Offset = "0x757ECC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757ECC", Offset = "0x757ECC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757ECC", Offset = "0x757ECC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x757ECC", Offset = "0x757ECC")]
[SelectionBase]
public class Cosmonaut : FSMComponent, IAgent, IGameSerializable
{
	[Token(Token = "0x2000331")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Idle;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Wander;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Hunt;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State React;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Chase;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Attack;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Investigate;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public FSM.State Hurt;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FSM.State Recovery;

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x95D4C4", Offset = "0x95D4C4", VA = "0x95D4C4")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B908", Offset = "0x75B908")]
	private sealed class <DeserializeAfterStart_co>d__109 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Cosmonaut <>4__this;

		[Token(Token = "0x170001B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018C9")]
			[Address(RVA = "0x95D454", Offset = "0x95D454", VA = "0x95D454", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018CB")]
			[Address(RVA = "0x95D4BC", Offset = "0x95D4BC", VA = "0x95D4BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x95D300", Offset = "0x95D300", VA = "0x95D300")]
		[DebuggerHidden]
		public <DeserializeAfterStart_co>d__109(int <>1__state)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x95D32C", Offset = "0x95D32C", VA = "0x95D32C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x95D330", Offset = "0x95D330", VA = "0x95D330", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x95D45C", Offset = "0x95D45C", VA = "0x95D45C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int attackDamage;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float attackRange;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EventHub evHub;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AgentWalk agentWalk;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AgentVision agentVision;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AgentLightSense agentLightSense;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AgentHearing agentHearing;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AgentAwareness agentAwareness;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animator animator;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Health health;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Footsteps footSteps;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RandomSounds randomSounds;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private JukeboxSetter jukeboxSetter;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private AgentLookAt lookAt;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private VisionTarget visionTarget;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<Collider> bodyColliders;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Collider lodCollider;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Collider moveCollider;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Collider tpCollider;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Renderer[] bodyRenderers;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioCue spawnSound;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioCue recoverySound;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AudioSource recoverySoundInstance;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioCue reactSound;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioCue painSound;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioCue attackSounds;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float audioYDelta;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float chaseSpeedFactor;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float chaseHurtCooldownMin;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float chaseHurtCooldownMax;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float attackCooldown;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float hurtInterruptCooldownLength;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float recoveryCooldownMin;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float recoveryCooldownMax;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float huntCooldownVisitPlayer;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float huntCooldownVisitPlayerMin;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float huntCooldownVisitPlayerMax;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float huntCooldownActive;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float huntCooldownActiveMin;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float huntCooldownActiveMax;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool huntCanActiveHunt;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	private bool huntCanEnterPlayerRoom;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Room lastPlayerRoom;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Room lastRoom;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public ChaseTask chaseTask;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public InvestigateTask investigateTask;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool wasChasing;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	private bool hurtInterruptCooldown;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private int hurtFXTaskId;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float recoveryCooldownWanted;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float recoveryTimer;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Door openDoor;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private AgentUtils.LODState lodState;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private AgentUtils.SerializedData serializedData;

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x938778", Offset = "0x938778", VA = "0x938778")]
	private void Awake()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x938868", Offset = "0x938868", VA = "0x938868", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x9388C0", Offset = "0x9388C0", VA = "0x9388C0", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x9388EC", Offset = "0x9388EC", VA = "0x9388EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x938FEC", Offset = "0x938FEC", VA = "0x938FEC")]
	private void Idle_Enter()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x939208", Offset = "0x939208", VA = "0x939208")]
	private void Idle_OnTimer()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x9392E4", Offset = "0x9392E4", VA = "0x9392E4")]
	private void Idle_Update()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x939394", Offset = "0x939394", VA = "0x939394")]
	private void Wander_Enter()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x939484", Offset = "0x939484", VA = "0x939484")]
	private void Wander_Update()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x939594", Offset = "0x939594", VA = "0x939594")]
	private void Hunt_Enter()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x93A0BC", Offset = "0x93A0BC", VA = "0x93A0BC")]
	private void Hunt_Update()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x93A1CC", Offset = "0x93A1CC", VA = "0x93A1CC")]
	private void Hunt_OnTimer()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x93966C", Offset = "0x93966C", VA = "0x93966C")]
	private void RefreshHuntRestrictions()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x939864", Offset = "0x939864", VA = "0x939864")]
	private bool GoToHuntTarget(bool canEnterPlayerRoom, bool canActiveHunt)
	{
		return default(bool);
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x93A4F0", Offset = "0x93A4F0", VA = "0x93A4F0")]
	private void React_Enter()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x93A65C", Offset = "0x93A65C", VA = "0x93A65C")]
	private void React_Update()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x93A828", Offset = "0x93A828", VA = "0x93A828")]
	private void React_Exit()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x93A8D4", Offset = "0x93A8D4", VA = "0x93A8D4")]
	private void React_OnTimer()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x93A970", Offset = "0x93A970", VA = "0x93A970")]
	private void Chase_Enter()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x93A9DC", Offset = "0x93A9DC", VA = "0x93A9DC")]
	private void Chase_Update()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x93AB98", Offset = "0x93AB98", VA = "0x93AB98")]
	private void Chase_Exit()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x93AC50", Offset = "0x93AC50", VA = "0x93AC50")]
	private void Attack_Enter()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x93ADA4", Offset = "0x93ADA4", VA = "0x93ADA4")]
	private void Attack_Update()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x93AF40", Offset = "0x93AF40", VA = "0x93AF40")]
	private void Attack_Exit()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x93AFE8", Offset = "0x93AFE8", VA = "0x93AFE8")]
	private void Attack_OnTimer()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x93B084", Offset = "0x93B084", VA = "0x93B084")]
	private void Investigate_Enter()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x93B0A4", Offset = "0x93B0A4", VA = "0x93B0A4")]
	private void Investigate_Update()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x93B168", Offset = "0x93B168", VA = "0x93B168")]
	private void Investigate_OnTimer()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x93B21C", Offset = "0x93B21C", VA = "0x93B21C")]
	private void Hurt_Enter()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x93B424", Offset = "0x93B424", VA = "0x93B424")]
	private void Hurt_Exit()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x93B464", Offset = "0x93B464", VA = "0x93B464")]
	private void Hurt_OnTimer()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x93B5D0", Offset = "0x93B5D0", VA = "0x93B5D0")]
	private void OnHurtInterruptCooldown()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x93B5D8", Offset = "0x93B5D8", VA = "0x93B5D8")]
	private void PlayHurtFX()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x93B774", Offset = "0x93B774", VA = "0x93B774")]
	private void PlayHurtFX_End()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x93B780", Offset = "0x93B780", VA = "0x93B780")]
	private void Recovery_Enter()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x93B988", Offset = "0x93B988", VA = "0x93B988")]
	private void Recovery_Update()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x93BAEC", Offset = "0x93BAEC", VA = "0x93BAEC")]
	private void Recovery_Exit()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x93BD00", Offset = "0x93BD00", VA = "0x93BD00")]
	private void OnHeardSound(HearingSystem.Soundwave sound)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x93C0F0", Offset = "0x93C0F0", VA = "0x93C0F0")]
	private void OnReceiveDamage(int damagePoints, Health.DamageType damageType, Health.Faction faction, Vector3 originPoint)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x93C264", Offset = "0x93C264", VA = "0x93C264")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x93C300", Offset = "0x93C300", VA = "0x93C300")]
	private void OnApproachDoor(Door door)
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x93C3C4", Offset = "0x93C3C4", VA = "0x93C3C4")]
	private void OnDepartDoor(Door door)
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x93C4C4", Offset = "0x93C4C4", VA = "0x93C4C4")]
	private void OnCrossingDoor(Door door)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x93C554", Offset = "0x93C554", VA = "0x93C554")]
	private void EventAttack()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x93C6A8", Offset = "0x93C6A8", VA = "0x93C6A8")]
	private void OnOcclusionChange(bool visibility, bool potentialVisibility)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x93C824", Offset = "0x93C824", VA = "0x93C824", Slot = "12")]
	public void Teleport(Vector3 newPosition)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x93C974", Offset = "0x93C974", VA = "0x93C974", Slot = "13")]
	public void EMPulse(Room room)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x93C978", Offset = "0x93C978", VA = "0x93C978", Slot = "14")]
	public Renderer[] GetBodyRenderers()
	{
		return null;
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x93C980", Offset = "0x93C980", VA = "0x93C980", Slot = "15")]
	public string GetAgentName()
	{
		return null;
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x93C9C8", Offset = "0x93C9C8", VA = "0x93C9C8", Slot = "16")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x93CA7C", Offset = "0x93CA7C", VA = "0x93CA7C", Slot = "17")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x938FC0", Offset = "0x938FC0", VA = "0x938FC0")]
	private void DeserializeAfterStart()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x93CB48", Offset = "0x93CB48", VA = "0x93CB48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76480C", Offset = "0x76480C")]
	private IEnumerator DeserializeAfterStart_co()
	{
		return null;
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x93CBC4", Offset = "0x93CBC4", VA = "0x93CBC4", Slot = "18")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x93CC3C", Offset = "0x93CC3C", VA = "0x93CC3C")]
	public Cosmonaut()
	{
	}

	[SpecialName]
	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x93CCF8", Offset = "0x93CCF8", VA = "0x93CCF8", Slot = "11")]
	private GameObject IAgent.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x20000A1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7580A8", Offset = "0x7580A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7580A8", Offset = "0x7580A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7580A8", Offset = "0x7580A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7580A8", Offset = "0x7580A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7580A8", Offset = "0x7580A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7580A8", Offset = "0x7580A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7580A8", Offset = "0x7580A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7580A8", Offset = "0x7580A8")]
[SelectionBase]
public class Crawler : FSMComponent, IAgent, IGameSerializable
{
	[Token(Token = "0x2000333")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State MeltUp;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State IdleGround;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State IdleWall;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Wander;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State JumpingCharge;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Jumping;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State React;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public FSM.State AggroGround;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FSM.State AggroWall;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public FSM.State Chase;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public FSM.State Investigate;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public FSM.State DeathExplode;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public FSM.State Death;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public FSM.State Disappear;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public FSM.State Hidden;

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x965428", Offset = "0x965428", VA = "0x965428")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x2000334")]
	private struct JumpData
	{
		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 start;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 startSpeed;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startNormal;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 target;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 targetNormal;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float distance;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool isFloor;
	}

	[Token(Token = "0x2000335")]
	private class ExtraSerializedData
	{
		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool crawling;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool jumping;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 jumpTarget;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 jumpNormal;

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x9650A8", Offset = "0x9650A8", VA = "0x9650A8")]
		public ExtraSerializedData()
		{
		}
	}

	[Token(Token = "0x2000336")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B918", Offset = "0x75B918")]
	private sealed class <DeserializeAfterStart_co>d__124 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Crawler <>4__this;

		[Token(Token = "0x170001B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018D1")]
			[Address(RVA = "0x965798", Offset = "0x965798", VA = "0x965798", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018D3")]
			[Address(RVA = "0x965800", Offset = "0x965800", VA = "0x965800", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x9651F8", Offset = "0x9651F8", VA = "0x9651F8")]
		[DebuggerHidden]
		public <DeserializeAfterStart_co>d__124(int <>1__state)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x965438", Offset = "0x965438", VA = "0x965438", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x96543C", Offset = "0x96543C", VA = "0x96543C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x9657A0", Offset = "0x9657A0", VA = "0x9657A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventHub evHub;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AgentWalk agentWalk;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshAgent navMeshAgent;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AgentLightSense agentLightSense;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AgentHearing agentHearing;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AgentAwareness agentAwareness;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Animator animator;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Health health;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RandomSounds randomSounds;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MeltFX meltFX;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private VisionTarget visionTarget;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private RagdollController ragdoll;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dissolve dissolve;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private VelocityEstimator velEstimator;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OcclusionTracker occlusionTracker;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ParticleSystem deathFX;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SphereCollider mainBodyCollider;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<Collider> bodyColliders;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Collider lodCollider;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Renderer[] bodyRenderers;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioCue reactSound;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioCue deathSound;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioCue painSound;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioCue attackSounds;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioCue jumpStartSound;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioCue jumpLandSound;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int animParamJumpChargeExit;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private int animParamReactExit;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool isAggro;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool investigatePosition;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public int attackDamage;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Scheduler.Cooldown attackCooldown;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float attackCooldownTimeMin;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float attackCooldownTimeMax;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool hasDamagedPlayer;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Scheduler.Cooldown aggroEndCooldown;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float aggroEndCooldownTime;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float chaseDistance;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float chaseSpeedFactor;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public bool startHidden;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public DraggableRotation hiddenDoor;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private JumpData jumpData;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private List<JumpData> jumpCacheTargets;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private RaycastHit[] jumpRaycasts;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Collider[] cacheColliders;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Vector3 jumpSpeed;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private Vector3 jumpLastPos;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float jumpDistance;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private Quaternion jumpStartRot;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private Quaternion jumpTargetRot;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public InvestigateTask investigateTask;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public DeathTask deathTask;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private int lastDamageAmount;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private AgentUtils.LODState lodState;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private AgentUtils.SerializedData serializedData;

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x95E410", Offset = "0x95E410", VA = "0x95E410")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x95E500", Offset = "0x95E500", VA = "0x95E500", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x95E6F0", Offset = "0x95E6F0", VA = "0x95E6F0", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x95E87C", Offset = "0x95E87C", VA = "0x95E87C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x95EF64", Offset = "0x95EF64", VA = "0x95EF64")]
	private void MeltUp_Enter()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x95EFA4", Offset = "0x95EFA4", VA = "0x95EFA4")]
	private void MeltUp_Exit()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x95EFA8", Offset = "0x95EFA8", VA = "0x95EFA8")]
	private void OnMeltFXUp()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x95F0B0", Offset = "0x95F0B0", VA = "0x95F0B0")]
	private void IdleGround_Enter()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x95F158", Offset = "0x95F158", VA = "0x95F158")]
	private void IdleGround_OnTimer()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x960300", Offset = "0x960300", VA = "0x960300")]
	private void IdleGround_Update()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x9605A0", Offset = "0x9605A0", VA = "0x9605A0")]
	private void IdleWall_Enter()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x960628", Offset = "0x960628", VA = "0x960628")]
	private void IdleWall_OnTimer()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x960740", Offset = "0x960740", VA = "0x960740")]
	private void IdleWall_Update()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x960794", Offset = "0x960794", VA = "0x960794")]
	private void Wander_Enter()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x9608D8", Offset = "0x9608D8", VA = "0x9608D8")]
	private void Wander_Update()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x960A6C", Offset = "0x960A6C", VA = "0x960A6C")]
	private void Wander_Exit()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x95F298", Offset = "0x95F298", VA = "0x95F298")]
	private bool CalculateJump([Optional] Transform jumpObjective, int requiredInCache = 4, bool toGround = false, bool canEnterLitRooms = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x960AB8", Offset = "0x960AB8", VA = "0x960AB8")]
	private void JumpingCharge_Enter()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x960CD0", Offset = "0x960CD0", VA = "0x960CD0")]
	private void JumpingCharge_Update()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x960DF0", Offset = "0x960DF0", VA = "0x960DF0")]
	private void OnJumpChargeExit()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x960EF8", Offset = "0x960EF8", VA = "0x960EF8")]
	private void Jumping_Enter()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x9611C8", Offset = "0x9611C8", VA = "0x9611C8")]
	private void Jumping_Update()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x9619A8", Offset = "0x9619A8", VA = "0x9619A8")]
	private void Jumping_Exit()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x9603DC", Offset = "0x9603DC", VA = "0x9603DC")]
	private void SetAggro(bool inWall, bool forceReact = false, bool isHurt = false, bool canAttack = false)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x9619C8", Offset = "0x9619C8", VA = "0x9619C8")]
	private void React_Enter()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x961A8C", Offset = "0x961A8C", VA = "0x961A8C")]
	private void React_Update()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x961B88", Offset = "0x961B88", VA = "0x961B88")]
	private void OnReactExit()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x961C90", Offset = "0x961C90", VA = "0x961C90")]
	private void AggroGround_Enter()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x961D08", Offset = "0x961D08", VA = "0x961D08")]
	private void AggroGround_OnTimer()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x962004", Offset = "0x962004", VA = "0x962004")]
	private void AggroGround_Update()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x9620E4", Offset = "0x9620E4", VA = "0x9620E4")]
	private void AggroWall_Enter()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x96215C", Offset = "0x96215C", VA = "0x96215C")]
	private void AggroWall_OnTimer()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x962300", Offset = "0x962300", VA = "0x962300")]
	private void AggroWall_Update()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x9623E0", Offset = "0x9623E0", VA = "0x9623E0")]
	private void Chase_Enter()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x962498", Offset = "0x962498", VA = "0x962498")]
	private void Chase_Update()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x9626EC", Offset = "0x9626EC", VA = "0x9626EC")]
	private void Chase_Exit()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x962744", Offset = "0x962744", VA = "0x962744")]
	private void Chase_OnTimer()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x9628FC", Offset = "0x9628FC", VA = "0x9628FC")]
	private void Investigate_Enter()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x96299C", Offset = "0x96299C", VA = "0x96299C")]
	private void Investigate_Update()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x962A04", Offset = "0x962A04", VA = "0x962A04")]
	private void Investigate_OnTimer()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x962AB8", Offset = "0x962AB8", VA = "0x962AB8")]
	private void Investigate_Exit()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x962AFC", Offset = "0x962AFC", VA = "0x962AFC")]
	private void DeathExplode_Enter()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x962CA4", Offset = "0x962CA4", VA = "0x962CA4")]
	private void DeathExplode_Update()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x962D3C", Offset = "0x962D3C", VA = "0x962D3C")]
	private void Death_Enter()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x96310C", Offset = "0x96310C", VA = "0x96310C")]
	private void Death_Update()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x9638FC", Offset = "0x9638FC", VA = "0x9638FC")]
	private void Death_Exit()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x9639FC", Offset = "0x9639FC", VA = "0x9639FC")]
	private void Death_OnTimer()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x963A1C", Offset = "0x963A1C", VA = "0x963A1C")]
	private void Disappear_Enter()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x963AD8", Offset = "0x963AD8", VA = "0x963AD8")]
	private void OnFinishDisappear(GameObject go)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x963B98", Offset = "0x963B98", VA = "0x963B98")]
	private void Hidden_Enter()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x963CA0", Offset = "0x963CA0", VA = "0x963CA0")]
	private void Hidden_Update()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x963E14", Offset = "0x963E14", VA = "0x963E14")]
	private void OnCrossingDoor(Door door)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x963EC4", Offset = "0x963EC4", VA = "0x963EC4")]
	private void OnHeardSound(HearingSystem.Soundwave sound)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x9642C0", Offset = "0x9642C0", VA = "0x9642C0")]
	private void OnReceiveDamage(int damagePoints, Health.DamageType damageType, Health.Faction faction, Vector3 originPoint)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x96489C", Offset = "0x96489C", VA = "0x96489C")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x964938", Offset = "0x964938", VA = "0x964938")]
	private void OnOcclusionChange(bool visibility, bool potentialVisibility)
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x964AA8", Offset = "0x964AA8", VA = "0x964AA8")]
	private void OnRagdollChange(bool active)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x963588", Offset = "0x963588", VA = "0x963588", Slot = "12")]
	public void Teleport(Vector3 newPosition)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x964C08", Offset = "0x964C08", VA = "0x964C08", Slot = "13")]
	public void EMPulse(Room room)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x964C0C", Offset = "0x964C0C", VA = "0x964C0C", Slot = "14")]
	public Renderer[] GetBodyRenderers()
	{
		return null;
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x964C14", Offset = "0x964C14", VA = "0x964C14", Slot = "15")]
	public string GetAgentName()
	{
		return null;
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x964C74", Offset = "0x964C74", VA = "0x964C74", Slot = "16")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x9650B0", Offset = "0x9650B0", VA = "0x9650B0", Slot = "17")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x95EF38", Offset = "0x95EF38", VA = "0x95EF38")]
	private void DeserializeAfterStart()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x96517C", Offset = "0x96517C", VA = "0x96517C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x764870", Offset = "0x764870")]
	private IEnumerator DeserializeAfterStart_co()
	{
		return null;
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x965224", Offset = "0x965224", VA = "0x965224", Slot = "18")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x96529C", Offset = "0x96529C", VA = "0x96529C")]
	public Crawler()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000406")]
	[Address(RVA = "0x965430", Offset = "0x965430", VA = "0x965430", Slot = "11")]
	private GameObject IAgent.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x20000A2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758234", Offset = "0x758234")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758234", Offset = "0x758234")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758234", Offset = "0x758234")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758234", Offset = "0x758234")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758234", Offset = "0x758234")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758234", Offset = "0x758234")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758234", Offset = "0x758234")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758234", Offset = "0x758234")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758234", Offset = "0x758234")]
[SelectionBase]
public class Cytoma : FSMComponent, IAgent, IGameSerializable
{
	[Token(Token = "0x2000337")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Hidden;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Deploy;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State ReHide;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Idle;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Wander;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Agressive;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Reposition;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public FSM.State LongReposition;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FSM.State Chase;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public FSM.State Investigate;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public FSM.State Hurt;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public FSM.State ChargeAim;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public FSM.State Charge;

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x96FCF4", Offset = "0x96FCF4", VA = "0x96FCF4")]
		public EStates()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000338")]
	private struct HidingPos
	{
		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 center;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 fwdAxis;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 upAxis;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 referencePoint;
	}

	[Token(Token = "0x2000339")]
	private class ExtraSerializedData
	{
		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool hiding;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public HidingPos hidingPos;

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x96FA34", Offset = "0x96FA34", VA = "0x96FA34")]
		public ExtraSerializedData()
		{
		}
	}

	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B928", Offset = "0x75B928")]
	private sealed class <DeserializeAfterStart_co>d__123 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Cytoma <>4__this;

		[Token(Token = "0x170001B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018D9")]
			[Address(RVA = "0x970048", Offset = "0x970048", VA = "0x970048", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018DB")]
			[Address(RVA = "0x9700B0", Offset = "0x9700B0", VA = "0x9700B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x96FBB0", Offset = "0x96FBB0", VA = "0x96FBB0")]
		[DebuggerHidden]
		public <DeserializeAfterStart_co>d__123(int <>1__state)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x96FD04", Offset = "0x96FD04", VA = "0x96FD04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x96FD08", Offset = "0x96FD08", VA = "0x96FD08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x970050", Offset = "0x970050", VA = "0x970050", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventHub evHub;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AgentWalk agentWalk;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HoverLocomotion hoverLocomotion;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AgentVision agentVision;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AgentLightSense agentLightSense;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AgentHearing agentHearing;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AgentAwareness agentAwareness;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animator animator;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Health health;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RandomSounds randomSounds;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private JukeboxSetter jukeboxSetter;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private VisionTarget visionTarget;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ItemOrbiter orbiter;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private CytomaBlinking eyeBlinking;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private EyeController[] eyeControllers;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float attackRange;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public LayerMask chargeCollisions;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int chargeDamage;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Health.KillSignature chargeKillSignature;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Renderer[] bodyRenderers;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ParticleSystem deathFX;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioCue deploySound;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioCue chargeSound;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AudioSource chargeSoundSource;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioCue explosionSound;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioCue painSound;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private HidingPos hidingPos;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 deployPos;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Quaternion deployRotInit;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float deployFactor;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool hasReHidingPos;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float reHidePosCheckTime;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector3 reHidePosInit;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private Quaternion reHideRotInit;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float reHideFactor;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float chanceThrow;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private int depletedCounter;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float aimedCounter;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float aimedTimeout;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public RepositionTask repositionTask;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool canDoLongReposition;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public ChaseTask chaseTask;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public InvestigateTask investigateTask;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool wasAgressive;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
	private bool hurtInterruptCooldown;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private int hurtFXTaskId;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool aimPhase;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private Vector3 chargeLastPos;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Door openDoor;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private AgentUtils.LODState lodState;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private AgentUtils.SerializedData serializedData;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private Vector3 serializedTranform;

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x969258", Offset = "0x969258", VA = "0x969258")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x969370", Offset = "0x969370", VA = "0x969370", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x9693C8", Offset = "0x9693C8", VA = "0x9693C8", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x9693F4", Offset = "0x9693F4", VA = "0x9693F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x969AF4", Offset = "0x969AF4", VA = "0x969AF4")]
	private void Hidden_Enter()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x96A7F0", Offset = "0x96A7F0", VA = "0x96A7F0")]
	private void Hidden_Update()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x96A8A0", Offset = "0x96A8A0", VA = "0x96A8A0")]
	private void Hidden_Exit()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x969DE0", Offset = "0x969DE0", VA = "0x969DE0")]
	private bool FindHidingPosition(out HidingPos hidingPos, bool canCorrectOutOfBounds)
	{
		return default(bool);
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x96A96C", Offset = "0x96A96C", VA = "0x96A96C")]
	private void Deploy_Enter()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x96AC98", Offset = "0x96AC98", VA = "0x96AC98")]
	private void Deploy_Update()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x96AE94", Offset = "0x96AE94", VA = "0x96AE94")]
	private void Deploy_Exit()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x96AF58", Offset = "0x96AF58", VA = "0x96AF58")]
	private void ReHide_Enter()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x96B104", Offset = "0x96B104", VA = "0x96B104")]
	private void ReHide_Update()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x96B334", Offset = "0x96B334", VA = "0x96B334")]
	private void ReHide_Exit()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x96B3B8", Offset = "0x96B3B8", VA = "0x96B3B8")]
	private bool CheckReHide()
	{
		return default(bool);
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x96B574", Offset = "0x96B574", VA = "0x96B574")]
	private void Idle_Enter()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x96B858", Offset = "0x96B858", VA = "0x96B858")]
	private void Idle_OnTimer()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x96B938", Offset = "0x96B938", VA = "0x96B938")]
	private void Idle_Update()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x96B9E8", Offset = "0x96B9E8", VA = "0x96B9E8")]
	private void Wander_Enter()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x96BAD8", Offset = "0x96BAD8", VA = "0x96BAD8")]
	private void Wander_Update()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x96BC64", Offset = "0x96BC64", VA = "0x96BC64")]
	private void Agressive_Enter()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x96BE0C", Offset = "0x96BE0C", VA = "0x96BE0C")]
	private void Agressive_Update()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x96C1EC", Offset = "0x96C1EC", VA = "0x96C1EC")]
	private void Agressive_Exit()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x96C1F0", Offset = "0x96C1F0", VA = "0x96C1F0")]
	private void Agressive_OnTimer()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x96BF50", Offset = "0x96BF50", VA = "0x96BF50")]
	private bool IsPlayerAiming(Hand playerHand, float aimRadius = 0.5f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x96C464", Offset = "0x96C464", VA = "0x96C464")]
	private void Reposition_Enter()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x96C610", Offset = "0x96C610", VA = "0x96C610")]
	private void Reposition_Update()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x96C70C", Offset = "0x96C70C", VA = "0x96C70C")]
	private void Reposition_Exit()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x96C72C", Offset = "0x96C72C", VA = "0x96C72C")]
	private void LongReposition_Enter()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x96C88C", Offset = "0x96C88C", VA = "0x96C88C")]
	private bool RepositionWander(Transform transform, AgentWalk agentWalk)
	{
		return default(bool);
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x96CD9C", Offset = "0x96CD9C", VA = "0x96CD9C")]
	private void LongReposition_Update()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x96CEB0", Offset = "0x96CEB0", VA = "0x96CEB0")]
	private void LongReposition_OnTimer()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x96CFB0", Offset = "0x96CFB0", VA = "0x96CFB0")]
	private void Chase_Enter()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x96D0B0", Offset = "0x96D0B0", VA = "0x96D0B0")]
	private void Chase_Update()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x96D1AC", Offset = "0x96D1AC", VA = "0x96D1AC")]
	private void Chase_Exit()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x96D1CC", Offset = "0x96D1CC", VA = "0x96D1CC")]
	private void Chase_OnTimer()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x96D258", Offset = "0x96D258", VA = "0x96D258")]
	private void Investigate_Enter()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x96D310", Offset = "0x96D310", VA = "0x96D310")]
	private void Investigate_Update()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x96D3D4", Offset = "0x96D3D4", VA = "0x96D3D4")]
	private void Investigate_OnTimer()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x96D488", Offset = "0x96D488", VA = "0x96D488")]
	private void Hurt_Enter()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x96D6F0", Offset = "0x96D6F0", VA = "0x96D6F0")]
	private void Hurt_Exit()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x96D778", Offset = "0x96D778", VA = "0x96D778")]
	private void Hurt_OnTimer()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x96D900", Offset = "0x96D900", VA = "0x96D900")]
	private void OnHurtInterruptCooldown()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x96D908", Offset = "0x96D908", VA = "0x96D908")]
	private void PlayHurtFX()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x96DB04", Offset = "0x96DB04", VA = "0x96DB04")]
	private void PlayHurtFX_End()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x96DB10", Offset = "0x96DB10", VA = "0x96DB10")]
	private void ChargeAim_Enter()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x96DC64", Offset = "0x96DC64", VA = "0x96DC64")]
	private void ChargeAim_Update()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x96DEBC", Offset = "0x96DEBC", VA = "0x96DEBC")]
	private void ChargeAim_OnTimer()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x96E03C", Offset = "0x96E03C", VA = "0x96E03C")]
	private void Charge_Enter()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x96E1F4", Offset = "0x96E1F4", VA = "0x96E1F4")]
	private void Charge_Update()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x96E5E8", Offset = "0x96E5E8", VA = "0x96E5E8")]
	private void OnApproachDoor(Door door)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x96E88C", Offset = "0x96E88C", VA = "0x96E88C")]
	private void OnDepartDoor(Door door)
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x96EA78", Offset = "0x96EA78", VA = "0x96EA78")]
	private void OnCrossingDoor(Door door)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x96EB00", Offset = "0x96EB00", VA = "0x96EB00")]
	private void OnHeardSound(HearingSystem.Soundwave sound)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x96EFD0", Offset = "0x96EFD0", VA = "0x96EFD0")]
	private void OnReceiveDamage(int damagePoints, Health.DamageType damageType, Health.Faction faction, Vector3 originPoint)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x96E398", Offset = "0x96E398", VA = "0x96E398")]
	private void DieExplode()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x96F368", Offset = "0x96F368", VA = "0x96F368")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x96F498", Offset = "0x96F498", VA = "0x96F498")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x96F49C", Offset = "0x96F49C", VA = "0x96F49C")]
	private void OnOcclusionChange(bool visibility, bool potentialVisibility)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x96F584", Offset = "0x96F584", VA = "0x96F584", Slot = "12")]
	public void Teleport(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x96F728", Offset = "0x96F728", VA = "0x96F728", Slot = "13")]
	public void EMPulse(Room room)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x96F72C", Offset = "0x96F72C", VA = "0x96F72C", Slot = "14")]
	public Renderer[] GetBodyRenderers()
	{
		return null;
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x96A790", Offset = "0x96A790", VA = "0x96A790")]
	private void SetEyesMode(EyeController.Modes mode)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x96F734", Offset = "0x96F734", VA = "0x96F734", Slot = "15")]
	public string GetAgentName()
	{
		return null;
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x96F77C", Offset = "0x96F77C", VA = "0x96F77C", Slot = "16")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x96FA3C", Offset = "0x96FA3C", VA = "0x96FA3C", Slot = "17")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x969AC8", Offset = "0x969AC8", VA = "0x969AC8")]
	private void DeserializeAfterStart()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x96FB34", Offset = "0x96FB34", VA = "0x96FB34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7648D4", Offset = "0x7648D4")]
	private IEnumerator DeserializeAfterStart_co()
	{
		return null;
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x96FBDC", Offset = "0x96FBDC", VA = "0x96FBDC", Slot = "18")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x96FC54", Offset = "0x96FC54", VA = "0x96FC54")]
	public Cytoma()
	{
	}

	[SpecialName]
	[Token(Token = "0x600044E")]
	[Address(RVA = "0x96FCFC", Offset = "0x96FCFC", VA = "0x96FCFC", Slot = "11")]
	private GameObject IAgent.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x20000A3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7583E8", Offset = "0x7583E8")]
public class CytomaBlinking : MonoBehaviour
{
	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool closed;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float animSpeed;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SkinnedMeshRenderer renderer;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] blinkWeights;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] blinkTimers;

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x9700B8", Offset = "0x9700B8", VA = "0x9700B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x970118", Offset = "0x970118", VA = "0x970118")]
	private void Update()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x9703CC", Offset = "0x9703CC", VA = "0x9703CC")]
	public CytomaBlinking()
	{
	}
}
[Token(Token = "0x20000A4")]
public class EyeController : MonoBehaviour
{
	[Token(Token = "0x200033B")]
	public enum Modes
	{
		[Token(Token = "0x40018BA")]
		Idle,
		[Token(Token = "0x40018BB")]
		Random,
		[Token(Token = "0x40018BC")]
		FollowPlayer
	}

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Modes mode;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxAngle;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion defaultRotation;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion targetRotation;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion curRotation;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float randomTimer;

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xA1CEE4", Offset = "0xA1CEE4", VA = "0xA1CEE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xA1CF30", Offset = "0xA1CF30", VA = "0xA1CF30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xA1CF68", Offset = "0xA1CF68", VA = "0xA1CF68")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xA1D420", Offset = "0xA1D420", VA = "0xA1D420")]
	public EyeController()
	{
	}
}
[Token(Token = "0x20000A5")]
public class Footsteps : MonoBehaviour
{
	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioCue stepSounds;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float frequency;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool addCameraShake;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ShakeSource shakeSource;

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xA298F8", Offset = "0xA298F8", VA = "0xA298F8")]
	private void EventStep()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xA299E4", Offset = "0xA299E4", VA = "0xA299E4")]
	private void EventStepWeighted(AnimationEvent evt)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xA29A3C", Offset = "0xA29A3C", VA = "0xA29A3C")]
	public Footsteps()
	{
	}
}
[Token(Token = "0x20000A6")]
public class HearingSystem : Singleton<HearingSystem>
{
	[Token(Token = "0x200033C")]
	public struct Listener
	{
		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform owner;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AgentHearing hearing;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool active;

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x9D79E8", Offset = "0x9D79E8", VA = "0x9D79E8")]
		public Listener([Optional] AgentHearing hearing)
		{
		}
	}

	[Token(Token = "0x200033D")]
	public struct Soundwave
	{
		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 origin;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SoundwaveData data;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isImportant;

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x9D7C60", Offset = "0x9D7C60", VA = "0x9D7C60")]
		public Soundwave(Vector3 origin, SoundwaveData data, bool isImportant)
		{
		}
	}

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Listener> listeners;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Soundwave> soundwaves;

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x9D78B0", Offset = "0x9D78B0", VA = "0x9D78B0")]
	public int AddListener(AgentHearing hearing)
	{
		return default(int);
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x9D7AE0", Offset = "0x9D7AE0", VA = "0x9D7AE0")]
	public void RemoveListener(int listenerId)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x9D7B70", Offset = "0x9D7B70", VA = "0x9D7B70")]
	public void RemoveListener(AgentHearing hearing)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x9CD674", Offset = "0x9CD674", VA = "0x9CD674")]
	public void TriggerSoundwave(Vector3 origin, SoundwaveData data, bool isImportant = false)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x9D7CB8", Offset = "0x9D7CB8", VA = "0x9D7CB8")]
	private void Update()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x9D7ED0", Offset = "0x9D7ED0", VA = "0x9D7ED0")]
	public HearingSystem()
	{
	}
}
[Token(Token = "0x20000A7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75844C", Offset = "0x75844C")]
public class HoverLocomotion : MonoBehaviour, ILocomotion
{
	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform mainBody;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hoverHeight;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float landedHeight;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75C834", Offset = "0x75C834")]
	public bool bobbingPerlin;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float bobbingAmount;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float bobbingFrequency;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float wigglingAngle;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float wigglingFreq;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float bobbingWigglingFactor;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75C86C", Offset = "0x75C86C")]
	public AnimationCurve hitReactCurve;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float hitReactSpeed;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 hitReactDir;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 hitReactWiggleAngles;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float hitReactProgress;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75C8A4", Offset = "0x75C8A4")]
	public bool isLanded;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NavMeshAgent navMeshAgent;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public Vector3 wantedSpeed;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 speed;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float bobY;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 horizTakeOffOffset;

	[Token(Token = "0x14000004")]
	public event Action onMove
	{
		[Token(Token = "0x6000468")]
		[Address(RVA = "0x9DD270", Offset = "0x9DD270", VA = "0x9DD270", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764938", Offset = "0x764938")]
		add
		{
		}
		[Token(Token = "0x6000469")]
		[Address(RVA = "0x9DD314", Offset = "0x9DD314", VA = "0x9DD314", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764948", Offset = "0x764948")]
		remove
		{
		}
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x9DC754", Offset = "0x9DC754", VA = "0x9DC754")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x9DC7B4", Offset = "0x9DC7B4", VA = "0x9DC7B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x9DC828", Offset = "0x9DC828", VA = "0x9DC828")]
	private void Update()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x9DCF7C", Offset = "0x9DCF7C", VA = "0x9DCF7C")]
	public void PlayReactToHit(Vector3 hitDir)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x9DD06C", Offset = "0x9DD06C", VA = "0x9DD06C")]
	public void SetLanded()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x9DD150", Offset = "0x9DD150", VA = "0x9DD150")]
	public void TakeOff(Vector3 horizOffset, float? baseOffset)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x9DD250", Offset = "0x9DD250", VA = "0x9DD250")]
	public void ResetFactor()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x9DD258", Offset = "0x9DD258", VA = "0x9DD258", Slot = "4")]
	public void SetDesiredVelocity(Vector3 velocity)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x9DD264", Offset = "0x9DD264", VA = "0x9DD264", Slot = "7")]
	public Vector3 GetSpeed()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x9DD3B8", Offset = "0x9DD3B8", VA = "0x9DD3B8")]
	public HoverLocomotion()
	{
	}
}
[Token(Token = "0x20000A8")]
public interface IAgent
{
	[Token(Token = "0x1700007C")]
	GameObject gameObject
	{
		[Token(Token = "0x600046B")]
		get;
	}

	[Token(Token = "0x600046C")]
	void Teleport(Vector3 newPosition);

	[Token(Token = "0x600046D")]
	void EMPulse(Room room);

	[Token(Token = "0x600046E")]
	Renderer[] GetBodyRenderers();

	[Token(Token = "0x600046F")]
	string GetAgentName();
}
[Token(Token = "0x20000A9")]
public interface ILocomotion
{
	[Token(Token = "0x14000005")]
	event Action onMove;

	[Token(Token = "0x6000470")]
	void SetDesiredVelocity(Vector3 velocity);

	[Token(Token = "0x6000473")]
	Vector3 GetSpeed();
}
[Token(Token = "0x20000AA")]
public class ItemOrbiter : MonoBehaviour
{
	[Token(Token = "0x200033E")]
	private class Tractor
	{
		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Rigidbody rBody;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConfigurableJoint joint;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 startPoint;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float orbitFactor;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float orbitOffset;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 position;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool active;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 lastPos;

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xBC8318", Offset = "0xBC8318", VA = "0xBC8318")]
		public Tractor(Transform parent)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xBC85DC", Offset = "0xBC85DC", VA = "0xBC85DC")]
		public void SetItem(Rigidbody item, float angleOffset = 0f)
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xBC956C", Offset = "0xBC956C", VA = "0xBC956C")]
		public Rigidbody GetItem()
		{
			return null;
		}
	}

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75C8FC", Offset = "0x75C8FC")]
	public float acquisitionRange;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float tractorLerpSpeed;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float throwForce;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioCue throwSound;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75C934", Offset = "0x75C934")]
	public float orbitDist;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float orbitSpeed;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float orbitAcceleration;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75C96C", Offset = "0x75C96C")]
	public float inclinationRangeX;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float inclinationRangeZ;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float inclinationSpeedX;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float inclinationSpeedZ;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public List<Rigidbody> canAcquireItems;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool throwAtTarget;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource floatSound;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Tractor> tractors;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float orbitAngle;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75C9B4", Offset = "0x75C9B4")]
	public bool _acquireItems;

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xBC8234", Offset = "0xBC8234", VA = "0xBC8234")]
	private void Start()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xBC8498", Offset = "0xBC8498", VA = "0xBC8498")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xBC8A2C", Offset = "0xBC8A2C", VA = "0xBC8A2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xBC9780", Offset = "0xBC9780", VA = "0xBC9780")]
	public int AcquireItems()
	{
		return default(int);
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xBC9974", Offset = "0xBC9974", VA = "0xBC9974")]
	public int CheckCanAcquireItems(float rangeFactor = 1f)
	{
		return default(int);
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xBCA1FC", Offset = "0xBCA1FC", VA = "0xBCA1FC")]
	public int GetNumActive()
	{
		return default(int);
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xBCA2F8", Offset = "0xBCA2F8", VA = "0xBCA2F8")]
	public ItemOrbiter()
	{
	}
}
[Token(Token = "0x20000AB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7584B0", Offset = "0x7584B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7584B0", Offset = "0x7584B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7584B0", Offset = "0x7584B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7584B0", Offset = "0x7584B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7584B0", Offset = "0x7584B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7584B0", Offset = "0x7584B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7584B0", Offset = "0x7584B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7584B0", Offset = "0x7584B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7584B0", Offset = "0x7584B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7584B0", Offset = "0x7584B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7584B0", Offset = "0x7584B0")]
[SelectionBase]
public class Meatman : FSMComponent, IAgent, IGameSerializable
{
	[Token(Token = "0x200033F")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State MeltUp;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State WaitForDiscovery;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Idle;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Wander;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State React;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Chase;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Attack;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public FSM.State Blink;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FSM.State Investigate;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public FSM.State Hurt;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public FSM.State Death;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public FSM.State Disappear;

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xC6464C", Offset = "0xC6464C", VA = "0xC6464C")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B938", Offset = "0x75B938")]
	private sealed class <DeserializeAfterStart_co>d__107 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Meatman <>4__this;

		[Token(Token = "0x170001B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018E5")]
			[Address(RVA = "0xC64790", Offset = "0xC64790", VA = "0xC64790", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018E7")]
			[Address(RVA = "0xC647F8", Offset = "0xC647F8", VA = "0xC647F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xC644F8", Offset = "0xC644F8", VA = "0xC644F8")]
		[DebuggerHidden]
		public <DeserializeAfterStart_co>d__107(int <>1__state)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xC6465C", Offset = "0xC6465C", VA = "0xC6465C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xC64660", Offset = "0xC64660", VA = "0xC64660", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xC64798", Offset = "0xC64798", VA = "0xC64798", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int attackDamage;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float attackRange;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EventHub evHub;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AgentWalk agentWalk;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AgentVision agentVision;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AgentLightSense agentLightSense;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AgentHearing agentHearing;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AgentAwareness agentAwareness;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animator animator;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Health health;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Footsteps footSteps;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RandomSounds randomSounds;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private JukeboxSetter jukeboxSetter;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<Collider> bodyColliders;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Collider lodCollider;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Collider moveCollider;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Collider tpCollider;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Renderer[] bodyRenderers;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private AnimSpasm animSpasms;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float spasmsCreepyTimer;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AgentLookAt lookAt;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private VisionTarget visionTarget;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private RagdollController ragdoll;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Dissolve dissolve;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public ParticleSystem smokeFX;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public ParticlesArmature bloodFlowFX;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioCue reactSound;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioCue deathSound;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public AudioCue painSound;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioCue attackSounds;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float audioYDelta;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float chaseSpeedFactor;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float chaseHurtCooldownMin;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float chaseHurtCooldownMax;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float attackCooldown;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float hurtInterruptCooldownLength;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool isStealth;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public ChaseTask chaseTask;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool chasingVisible;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public BlinkTask blinkTask;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool wantsToBlink;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float blinkLastTime;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float blinkChance;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float blinkCooldown;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public InvestigateTask investigateTask;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool wasChasing;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	private bool hurtInterruptCooldown;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private int hurtFXTaskId;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public DeathTask deathTask;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private AgentUtils.LODState lodState;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private AgentUtils.SerializedData serializedData;

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xC60438", Offset = "0xC60438", VA = "0xC60438")]
	private void Awake()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xC60578", Offset = "0xC60578", VA = "0xC60578", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xC605D0", Offset = "0xC605D0", VA = "0xC605D0", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xC605FC", Offset = "0xC605FC", VA = "0xC605FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xC60CD4", Offset = "0xC60CD4", VA = "0xC60CD4")]
	private void Idle_Enter()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xC60E78", Offset = "0xC60E78", VA = "0xC60E78")]
	private void Idle_OnTimer()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xC60F54", Offset = "0xC60F54", VA = "0xC60F54")]
	private void Idle_Update()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xC61004", Offset = "0xC61004", VA = "0xC61004")]
	private void Wander_Enter()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xC61108", Offset = "0xC61108", VA = "0xC61108")]
	private void Wander_Update()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xC61330", Offset = "0xC61330", VA = "0xC61330")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xC6151C", Offset = "0xC6151C", VA = "0xC6151C")]
	private void React_Enter()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xC61768", Offset = "0xC61768", VA = "0xC61768")]
	private void React_Update()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xC61A00", Offset = "0xC61A00", VA = "0xC61A00")]
	private void React_Exit()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xC61AB8", Offset = "0xC61AB8", VA = "0xC61AB8")]
	private void Chase_Enter()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xC61B38", Offset = "0xC61B38", VA = "0xC61B38")]
	private void Chase_Update()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xC61DEC", Offset = "0xC61DEC", VA = "0xC61DEC")]
	private void Chase_Exit()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xC61F04", Offset = "0xC61F04", VA = "0xC61F04")]
	private void Attack_Enter()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xC620B4", Offset = "0xC620B4", VA = "0xC620B4")]
	private void Attack_Update()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xC6236C", Offset = "0xC6236C", VA = "0xC6236C")]
	private void Attack_Exit()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xC62410", Offset = "0xC62410", VA = "0xC62410")]
	private void Attack_OnTimer()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xC61D58", Offset = "0xC61D58", VA = "0xC61D58")]
	private bool CheckBlink()
	{
		return default(bool);
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xC624AC", Offset = "0xC624AC", VA = "0xC624AC")]
	private void Blink_Enter()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xC625C8", Offset = "0xC625C8", VA = "0xC625C8")]
	private void Blink_Exit()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xC625E8", Offset = "0xC625E8", VA = "0xC625E8")]
	private void Blink_OnTimer()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xC626E4", Offset = "0xC626E4", VA = "0xC626E4")]
	private void Investigate_Enter()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xC62728", Offset = "0xC62728", VA = "0xC62728")]
	private void Investigate_Update()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xC627EC", Offset = "0xC627EC", VA = "0xC627EC")]
	private void Investigate_OnTimer()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xC628A0", Offset = "0xC628A0", VA = "0xC628A0")]
	private void Hurt_Enter()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xC62B04", Offset = "0xC62B04", VA = "0xC62B04")]
	private void Hurt_Exit()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xC62B44", Offset = "0xC62B44", VA = "0xC62B44")]
	private void Hurt_OnTimer()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xC62D58", Offset = "0xC62D58", VA = "0xC62D58")]
	private void OnHurtInterruptCooldown()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xC62D60", Offset = "0xC62D60", VA = "0xC62D60")]
	private void PlayHurtFX()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xC62EFC", Offset = "0xC62EFC", VA = "0xC62EFC")]
	private void PlayHurtFX_End()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xC62F08", Offset = "0xC62F08", VA = "0xC62F08")]
	private void Death_Enter()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xC630DC", Offset = "0xC630DC", VA = "0xC630DC")]
	private void Death_Update()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xC631DC", Offset = "0xC631DC", VA = "0xC631DC")]
	private void Death_Exit()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xC63220", Offset = "0xC63220", VA = "0xC63220")]
	private void Death_OnTimer()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xC63240", Offset = "0xC63240", VA = "0xC63240")]
	private void Disappear_Enter()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xC633DC", Offset = "0xC633DC", VA = "0xC633DC")]
	private void OnFinishDisappear(GameObject go)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xC6349C", Offset = "0xC6349C", VA = "0xC6349C")]
	private void OnCrossingDoor(Door door)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xC6352C", Offset = "0xC6352C", VA = "0xC6352C")]
	private void OnHeardSound(HearingSystem.Soundwave sound)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xC638B0", Offset = "0xC638B0", VA = "0xC638B0")]
	private void OnReceiveDamage(int damagePoints, Health.DamageType damageType, Health.Faction faction, Vector3 originPoint)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xC63B28", Offset = "0xC63B28", VA = "0xC63B28")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xC63BC4", Offset = "0xC63BC4", VA = "0xC63BC4")]
	private void EventAttack()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xC63D18", Offset = "0xC63D18", VA = "0xC63D18")]
	private void OnOcclusionChange(bool visibility, bool potentialVisibility)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xC63E94", Offset = "0xC63E94", VA = "0xC63E94")]
	private void OnRagdollChange(bool active)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xC64000", Offset = "0xC64000", VA = "0xC64000", Slot = "12")]
	public void Teleport(Vector3 newPosition)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xC642A4", Offset = "0xC642A4", VA = "0xC642A4", Slot = "13")]
	public void EMPulse(Room room)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xC642A8", Offset = "0xC642A8", VA = "0xC642A8", Slot = "14")]
	public Renderer[] GetBodyRenderers()
	{
		return null;
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xC642B0", Offset = "0xC642B0", VA = "0xC642B0", Slot = "15")]
	public string GetAgentName()
	{
		return null;
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xC642F8", Offset = "0xC642F8", VA = "0xC642F8", Slot = "16")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xC643B0", Offset = "0xC643B0", VA = "0xC643B0", Slot = "17")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xC60CA8", Offset = "0xC60CA8", VA = "0xC60CA8")]
	private void DeserializeAfterStart()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xC6447C", Offset = "0xC6447C", VA = "0xC6447C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x764978", Offset = "0x764978")]
	private IEnumerator DeserializeAfterStart_co()
	{
		return null;
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xC64524", Offset = "0xC64524", VA = "0xC64524", Slot = "18")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xC6459C", Offset = "0xC6459C", VA = "0xC6459C")]
	public Meatman()
	{
	}

	[SpecialName]
	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xC64654", Offset = "0xC64654", VA = "0xC64654", Slot = "11")]
	private GameObject IAgent.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x20000AC")]
public class MonsterManager : Singleton<MonsterManager>
{
	[Serializable]
	[Token(Token = "0x2000341")]
	public class MonsterSpawnInfo
	{
		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SwitchRefGameObject monsterPrefab;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int clusterMin;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int clusterMax;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool requireInfestation;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool skipCorridors;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool disabledGeneration;

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xB978B8", Offset = "0xB978B8", VA = "0xB978B8")]
		public MonsterSpawnInfo()
		{
		}
	}

	[Token(Token = "0x2000342")]
	public class SerializedData
	{
		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string xform;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string dataString;

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xB97040", Offset = "0xB97040", VA = "0xB97040")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x2000343")]
	private class ManagerSerializedData
	{
		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float spawningCooldown;

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xB977C8", Offset = "0xB977C8", VA = "0xB977C8")]
		public ManagerSerializedData()
		{
		}
	}

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool placeMonsters;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool placeSecurity;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int numMonsters;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MonsterSpawnInfo[] monsterSpawnPrefabs;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SwitchRefGameObject[] monsterPrefabs;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int numTurrets;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SwitchRefGameObject turretPrefabs;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int numDrones;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float droneItemChance;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SwitchRefGameObject securityDrone;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SwitchRefSpawnInfo securityDroneItem;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int numMinHiddenCrawlers;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int numMaxHiddenCrawlers;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SwitchRefGameObject hiddenCrawlerPrefab;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SwitchRefGameObject hunterPrefab;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<GameObject> agents;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float spawningCooldown;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int startedNumAgents;

	[Token(Token = "0x4000594")]
	private const float initCooldownTimeMin = 20f;

	[Token(Token = "0x4000595")]
	private const float initCooldownTimeMax = 60f;

	[Token(Token = "0x4000596")]
	private const float spawnCooldownTimeMin = 10f;

	[Token(Token = "0x4000597")]
	private const float spawnCooldownTimeMax = 60f;

	[Token(Token = "0x4000598")]
	private const float spawnChance = 0.3f;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool hunterSpawned;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75C9EC", Offset = "0x75C9EC")]
	public bool _testSpawn;

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xB947E8", Offset = "0xB947E8", VA = "0xB947E8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xB9486C", Offset = "0xB9486C", VA = "0xB9486C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xB948FC", Offset = "0xB948FC", VA = "0xB948FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xB9503C", Offset = "0xB9503C", VA = "0xB9503C")]
	public int PlaceEnemies()
	{
		return default(int);
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xB94E74", Offset = "0xB94E74", VA = "0xB94E74")]
	public GameObject SpawnAgent(GameObject monsterPrefab, Room room, bool checkVisibility = false)
	{
		return null;
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xB95970", Offset = "0xB95970", VA = "0xB95970")]
	private GameObject SpawnAgentInPos(GameObject monsterPrefab, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xB95B80", Offset = "0xB95B80", VA = "0xB95B80")]
	public GameObject SpawnHunter()
	{
		return null;
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xB95E44", Offset = "0xB95E44", VA = "0xB95E44")]
	private void SpawnHunterOnTimer()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xB95B20", Offset = "0xB95B20", VA = "0xB95B20")]
	public void SubscribeAgent(GameObject agent)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xB95E48", Offset = "0xB95E48", VA = "0xB95E48")]
	public void RemoveAgent(GameObject go)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xB95EDC", Offset = "0xB95EDC", VA = "0xB95EDC")]
	public int PlaceTurrets()
	{
		return default(int);
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xB962F8", Offset = "0xB962F8", VA = "0xB962F8")]
	public int PlaceDrones()
	{
		return default(int);
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xB96768", Offset = "0xB96768", VA = "0xB96768")]
	public int PlaceHiddenCrawlers()
	{
		return default(int);
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xB96B94", Offset = "0xB96B94", VA = "0xB96B94")]
	public void TriggerEMPulse(Room room)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xB96D24", Offset = "0xB96D24", VA = "0xB96D24")]
	public void TestSpawn()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xB96EA8", Offset = "0xB96EA8", VA = "0xB96EA8")]
	public string Serialize(IAgent agent, object dataAgent)
	{
		return null;
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xB97048", Offset = "0xB97048", VA = "0xB97048")]
	public string DeserializeState(IAgent agent, string dataString)
	{
		return null;
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xB97140", Offset = "0xB97140", VA = "0xB97140")]
	public IGameSerializable DeserializeSpawn(string dataString)
	{
		return null;
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xB97754", Offset = "0xB97754", VA = "0xB97754")]
	public string SerializeManagerState()
	{
		return null;
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xB977D0", Offset = "0xB977D0", VA = "0xB977D0")]
	public void DeserializeManagerState(string dataString)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xB9783C", Offset = "0xB9783C", VA = "0xB9783C")]
	public MonsterManager()
	{
	}
}
[Token(Token = "0x20000AD")]
public class MonsterTracker : MonoBehaviour
{
	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xB978C8", Offset = "0xB978C8", VA = "0xB978C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xB97980", Offset = "0xB97980", VA = "0xB97980")]
	public MonsterTracker()
	{
	}
}
[Token(Token = "0x20000AE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7586B4", Offset = "0x7586B4")]
public class ParticlesArmature : SpawnerArmature
{
	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] timers;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float activationTimeMin;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float activationTimeMax;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float cooldownTimeMin;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float cooldownTimeMax;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool emissionEnabled;

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x9E4468", Offset = "0x9E4468", VA = "0x9E4468", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x9E45D4", Offset = "0x9E45D4", VA = "0x9E45D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x9E473C", Offset = "0x9E473C", VA = "0x9E473C")]
	public void StopEmission()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x9E47A8", Offset = "0x9E47A8", VA = "0x9E47A8")]
	public void ResumeEmission()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x9E47B4", Offset = "0x9E47B4", VA = "0x9E47B4")]
	public ParticlesArmature()
	{
	}
}
[Token(Token = "0x20000AF")]
public class RagdollController : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x2000344")]
	private class SerializedData
	{
		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] xforms;

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xA4BD40", Offset = "0xA4BD40", VA = "0xA4BD40")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject armature;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool disablePhysicsOnSleep;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool disableCollidersOnSleep;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool readjustRootTransform;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x75CA30", Offset = "0x75CA30")]
	public Transform hipBone;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x75CA68", Offset = "0x75CA68")]
	public Renderer skinRenderer;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x75CAA0", Offset = "0x75CAA0")]
	public bool rootInCenter;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody[] rigidBodies;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Collider[] bodyColliders;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animator animator;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LookAtIK lookAtIK;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isSleeping;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float sleepTimer;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 localArmaturePos;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Quaternion localArmatureRot;

	[Token(Token = "0x14000006")]
	public event Action<bool> onChangeState
	{
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xA4A93C", Offset = "0xA4A93C", VA = "0xA4A93C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7649DC", Offset = "0x7649DC")]
		add
		{
		}
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xA4A9E0", Offset = "0xA4A9E0", VA = "0xA4A9E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7649EC", Offset = "0x7649EC")]
		remove
		{
		}
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xA4AA84", Offset = "0xA4AA84", VA = "0xA4AA84")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xA4AD70", Offset = "0xA4AD70", VA = "0xA4AD70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xA4B14C", Offset = "0xA4B14C", VA = "0xA4B14C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xA4B24C", Offset = "0xA4B24C", VA = "0xA4B24C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xA4AD78", Offset = "0xA4AD78", VA = "0xA4AD78")]
	private void SetRagdoll(bool enablePhysics = true)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xA4B544", Offset = "0xA4B544", VA = "0xA4B544")]
	private void ReadjustRootTransform()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xA4AB10", Offset = "0xA4AB10", VA = "0xA4AB10")]
	public void FindColliders()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xA4BBE4", Offset = "0xA4BBE4", VA = "0xA4BBE4", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xA4BD48", Offset = "0xA4BD48", VA = "0xA4BD48", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xA4BE58", Offset = "0xA4BE58", VA = "0xA4BE58", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xA4BE5C", Offset = "0xA4BE5C", VA = "0xA4BE5C")]
	public RagdollController()
	{
	}
}
[Token(Token = "0x20000B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758718", Offset = "0x758718")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758718", Offset = "0x758718")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758718", Offset = "0x758718")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758718", Offset = "0x758718")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758718", Offset = "0x758718")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758718", Offset = "0x758718")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758718", Offset = "0x758718")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758718", Offset = "0x758718")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758718", Offset = "0x758718")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758718", Offset = "0x758718")]
[SelectionBase]
public class SecurityDrone : FSMComponent, IAgent, IGameSerializable
{
	[Token(Token = "0x2000345")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Idle;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State ScanRoom;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Patrol;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State React;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Reposition;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Target;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Fire;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public FSM.State Chase;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FSM.State Investigate;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public FSM.State Offline;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public FSM.State TakeOff;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public FSM.State Standby;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public FSM.State Hurt;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public FSM.State Death;

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x9100BC", Offset = "0x9100BC", VA = "0x9100BC")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x2000346")]
	private class ExtraSerializedData
	{
		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 restPos;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion restRot;

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x90FC90", Offset = "0x90FC90", VA = "0x90FC90")]
		public ExtraSerializedData()
		{
		}
	}

	[Token(Token = "0x2000347")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B948", Offset = "0x75B948")]
	private sealed class <Fire_co>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SecurityDrone <>4__this;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 hitPoint;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__2;

		[Token(Token = "0x170001B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018F1")]
			[Address(RVA = "0x910498", Offset = "0x910498", VA = "0x910498", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018F3")]
			[Address(RVA = "0x910500", Offset = "0x910500", VA = "0x910500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x90D084", Offset = "0x90D084", VA = "0x90D084")]
		[DebuggerHidden]
		public <Fire_co>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x910320", Offset = "0x910320", VA = "0x910320", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x910324", Offset = "0x910324", VA = "0x910324", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x9104A0", Offset = "0x9104A0", VA = "0x9104A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000348")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B958", Offset = "0x75B958")]
	private sealed class <TakeOff_co>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SecurityDrone <>4__this;

		[Token(Token = "0x170001BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018F7")]
			[Address(RVA = "0x910A78", Offset = "0x910A78", VA = "0x910A78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018F9")]
			[Address(RVA = "0x910AE0", Offset = "0x910AE0", VA = "0x910AE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x90DA60", Offset = "0x90DA60", VA = "0x90DA60")]
		[DebuggerHidden]
		public <TakeOff_co>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x910508", Offset = "0x910508", VA = "0x910508", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x91050C", Offset = "0x91050C", VA = "0x91050C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x910A80", Offset = "0x910A80", VA = "0x910A80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000349")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B968", Offset = "0x75B968")]
	private sealed class <DeserializeAfterStart_co>d__117 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SecurityDrone <>4__this;

		[Token(Token = "0x170001BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018FD")]
			[Address(RVA = "0x9102B0", Offset = "0x9102B0", VA = "0x9102B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018FF")]
			[Address(RVA = "0x910318", Offset = "0x910318", VA = "0x910318", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x90FE2C", Offset = "0x90FE2C", VA = "0x90FE2C")]
		[DebuggerHidden]
		public <DeserializeAfterStart_co>d__117(int <>1__state)
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x9100CC", Offset = "0x9100CC", VA = "0x9100CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x9100D0", Offset = "0x9100D0", VA = "0x9100D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x9102B8", Offset = "0x9102B8", VA = "0x9102B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventHub evHub;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AgentWalk agentWalk;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshAgent navAgent;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private HoverLocomotion hoverLocomotion;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AgentVision agentVision;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AgentHearing agentHearing;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AgentAwareness agentAwareness;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Health health;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RandomSounds randomSounds;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private JukeboxSetter jukeboxSetter;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Renderer[] bodyRenderers;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75CAE8", Offset = "0x75CAE8")]
	public Transform muzzle;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioCue shootSound;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public LayerMask shootLayerMask;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ProjectileDamage damageData;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GunTrails gunTrails;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private MuzzleFlash muzzleFlash;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75CB20", Offset = "0x75CB20")]
	public ParticleSystem brokenFX;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ParticleSystem jetFX;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public VolumetricLightBeam spotLight;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Material materialActive;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Material materialInactive;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Renderer[] disableOnDeath;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75CB58", Offset = "0x75CB58")]
	public AudioCue reactSound;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioCue attackSound;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioCue dieSound;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public AudioCue hurtSound;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioCue activateSound;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioSource jetSound;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75CB90", Offset = "0x75CB90")]
	public bool startOffline;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float offlineActivationRadius;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Room lastPatrolledRoom;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float scanProgress;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public RepositionTask repositionTask;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool firing;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private WaitForSeconds fireCoWait;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public ChaseTask chaseTask;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public InvestigateTask investigateTask;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float forcedOffline;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Coroutine takeOffCoroutine;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private RoomPower roomPower;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool wasChasing;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool hurtInterruptCooldown;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private int hurtFXTaskId;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool disablingOnDeath;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Door openDoor;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private AgentUtils.LODState lodState;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
	private bool hurtEMPulse;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private AgentUtils.SerializedData serializedData;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Vector3 serializedPos;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private Quaternion serializedRot;

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x90AFC0", Offset = "0x90AFC0", VA = "0x90AFC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x90B0D8", Offset = "0x90B0D8", VA = "0x90B0D8", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x90B12C", Offset = "0x90B12C", VA = "0x90B12C", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x90B16C", Offset = "0x90B16C", VA = "0x90B16C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x90B774", Offset = "0x90B774", VA = "0x90B774")]
	private void Idle_Enter()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x90B814", Offset = "0x90B814", VA = "0x90B814")]
	private void Idle_Update()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x90B8C4", Offset = "0x90B8C4", VA = "0x90B8C4")]
	private void Idle_OnTimer()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x90B9A0", Offset = "0x90B9A0", VA = "0x90B9A0")]
	private void Patrol_Enter()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x90BE98", Offset = "0x90BE98", VA = "0x90BE98")]
	private void Patrol_Update()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x90C03C", Offset = "0x90C03C", VA = "0x90C03C")]
	private void ScanRoom_Enter()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x90C0AC", Offset = "0x90C0AC", VA = "0x90C0AC")]
	private void ScanRoom_Update()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x90C200", Offset = "0x90C200", VA = "0x90C200")]
	private void React_Enter()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x90C2AC", Offset = "0x90C2AC", VA = "0x90C2AC")]
	private void React_Update()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x90C3E0", Offset = "0x90C3E0", VA = "0x90C3E0")]
	private void React_Exit()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x90C400", Offset = "0x90C400", VA = "0x90C400")]
	private void React_OnTimer()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x90C49C", Offset = "0x90C49C", VA = "0x90C49C")]
	private void Reposition_Enter()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x90C630", Offset = "0x90C630", VA = "0x90C630")]
	private void Reposition_Update()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x90C73C", Offset = "0x90C73C", VA = "0x90C73C")]
	private void Reposition_Exit()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x90C75C", Offset = "0x90C75C", VA = "0x90C75C")]
	private void Target_Enter()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x90C880", Offset = "0x90C880", VA = "0x90C880")]
	private void Target_Update()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x90C98C", Offset = "0x90C98C", VA = "0x90C98C")]
	private void Target_OnTimer()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x90CA7C", Offset = "0x90CA7C", VA = "0x90CA7C")]
	private void Fire_Enter()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x90CAC0", Offset = "0x90CAC0", VA = "0x90CAC0")]
	private void Fire_Update()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x90CADC", Offset = "0x90CADC", VA = "0x90CADC")]
	private void Fire_OnTimer()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x90CFE4", Offset = "0x90CFE4", VA = "0x90CFE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7649FC", Offset = "0x7649FC")]
	private IEnumerator Fire_co(Vector3 hitPoint)
	{
		return null;
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x90D0B0", Offset = "0x90D0B0", VA = "0x90D0B0")]
	private void Chase_Enter()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x90D110", Offset = "0x90D110", VA = "0x90D110")]
	private void Chase_Update()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x90D21C", Offset = "0x90D21C", VA = "0x90D21C")]
	private void Chase_Exit()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x90D23C", Offset = "0x90D23C", VA = "0x90D23C")]
	private void Investigate_Enter()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x90D25C", Offset = "0x90D25C", VA = "0x90D25C")]
	private void Investigate_Update()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x90D320", Offset = "0x90D320", VA = "0x90D320")]
	private void Investigate_OnTimer()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x90D3D4", Offset = "0x90D3D4", VA = "0x90D3D4")]
	private void Offline_Enter()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x90D6E8", Offset = "0x90D6E8", VA = "0x90D6E8")]
	private void Offline_Update()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x90D950", Offset = "0x90D950", VA = "0x90D950")]
	private void TakeOff_Enter()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x90DA08", Offset = "0x90DA08", VA = "0x90DA08")]
	private void TakeOff_Exit()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x90D98C", Offset = "0x90D98C", VA = "0x90D98C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x764A60", Offset = "0x764A60")]
	private IEnumerator TakeOff_co()
	{
		return null;
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x90DA8C", Offset = "0x90DA8C", VA = "0x90DA8C")]
	private void Standby_Enter()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x90DB3C", Offset = "0x90DB3C", VA = "0x90DB3C")]
	private void Standby_Update()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x90DC68", Offset = "0x90DC68", VA = "0x90DC68")]
	private void Standby_Exit()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x90DD1C", Offset = "0x90DD1C", VA = "0x90DD1C")]
	private void Standby_OnTimer()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x90DD84", Offset = "0x90DD84", VA = "0x90DD84")]
	private void Hurt_Enter()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x90E054", Offset = "0x90E054", VA = "0x90E054")]
	private void Hurt_OnTimer()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x90E1B0", Offset = "0x90E1B0", VA = "0x90E1B0")]
	private void OnHurtInterruptCooldown()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x90E1B8", Offset = "0x90E1B8", VA = "0x90E1B8")]
	private void HurtFX_Begin()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x90E300", Offset = "0x90E300", VA = "0x90E300")]
	private void HurtFX_Update()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x90E36C", Offset = "0x90E36C", VA = "0x90E36C")]
	private void HurtFX_End()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x90E398", Offset = "0x90E398", VA = "0x90E398")]
	private void Death_Enter()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x90E7FC", Offset = "0x90E7FC", VA = "0x90E7FC")]
	private void OnApproachDoor(Door door)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x90E8C0", Offset = "0x90E8C0", VA = "0x90E8C0")]
	private void OnDepartDoor(Door door)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x90E9C0", Offset = "0x90E9C0", VA = "0x90E9C0")]
	private void OnCrossingDoor(Door door)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x90EA50", Offset = "0x90EA50", VA = "0x90EA50")]
	private void OnHeardSound(HearingSystem.Soundwave sound)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x90EE40", Offset = "0x90EE40", VA = "0x90EE40")]
	private void OnReceiveDamage(int damagePoints, Health.DamageType damageType, Health.Faction faction, Vector3 originPoint)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x90F288", Offset = "0x90F288", VA = "0x90F288")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x90F328", Offset = "0x90F328", VA = "0x90F328")]
	private void OnOcclusionChange(bool visibility, bool potentialVisibility)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x90F624", Offset = "0x90F624", VA = "0x90F624", Slot = "12")]
	public void Teleport(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x90F7F0", Offset = "0x90F7F0", VA = "0x90F7F0", Slot = "13")]
	public void EMPulse(Room room)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x90FA70", Offset = "0x90FA70", VA = "0x90FA70", Slot = "14")]
	public Renderer[] GetBodyRenderers()
	{
		return null;
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x90D66C", Offset = "0x90D66C", VA = "0x90D66C")]
	private void SetMaterial(Material wantedMaterial)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x90FA78", Offset = "0x90FA78", VA = "0x90FA78", Slot = "15")]
	public string GetAgentName()
	{
		return null;
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x90FAD8", Offset = "0x90FAD8", VA = "0x90FAD8", Slot = "16")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x90FC98", Offset = "0x90FC98", VA = "0x90FC98", Slot = "17")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x90B748", Offset = "0x90B748", VA = "0x90B748")]
	private void DeserializeAfterStart()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x90FDB0", Offset = "0x90FDB0", VA = "0x90FDB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x764AC4", Offset = "0x764AC4")]
	private IEnumerator DeserializeAfterStart_co()
	{
		return null;
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x90FE58", Offset = "0x90FE58", VA = "0x90FE58")]
	private void OnSerializedDeath()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x90FF48", Offset = "0x90FF48", VA = "0x90FF48", Slot = "18")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x90FFC0", Offset = "0x90FFC0", VA = "0x90FFC0")]
	public SecurityDrone()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000521")]
	[Address(RVA = "0x9100C4", Offset = "0x9100C4", VA = "0x9100C4", Slot = "11")]
	private GameObject IAgent.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x20000B1")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7588F4", Offset = "0x7588F4")]
public class SoundwaveData : ScriptableObject
{
	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float range;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isImportant;

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x919280", Offset = "0x919280", VA = "0x919280")]
	public SoundwaveData()
	{
	}
}
[Token(Token = "0x20000B2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758938", Offset = "0x758938")]
public class SpawnerArmature : MonoBehaviour
{
	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] prefabs;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75CBC8", Offset = "0x75CBC8")]
	public Transform[] excludedBones;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75CC00", Offset = "0x75CC00")]
	public Transform[] skipBones;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int minToSpawn;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int maxToSpawn;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool checkColliders;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool spawnOnAwake;

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x9B25B4", Offset = "0x9B25B4", VA = "0x9B25B4", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x9B2618", Offset = "0x9B2618", VA = "0x9B2618")]
	public void SpawnPrefabs()
	{
	}

	[Token(Token = "0x6000525")]
	protected T[] SpawnPrefabs<T>()
	{
		return null;
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x9B2668", Offset = "0x9B2668", VA = "0x9B2668")]
	public SpawnerArmature()
	{
	}
}
[Token(Token = "0x20000B3")]
public class TendrilLocomotion : MonoBehaviour, ILocomotion
{
	[Token(Token = "0x200034A")]
	private enum LimbState
	{
		[Token(Token = "0x4001901")]
		Placed,
		[Token(Token = "0x4001902")]
		Retracting,
		[Token(Token = "0x4001903")]
		Deploying,
		[Token(Token = "0x4001904")]
		Stepping,
		[Token(Token = "0x4001905")]
		LashOut_Anticipation,
		[Token(Token = "0x4001906")]
		LashOut_Action,
		[Token(Token = "0x4001907")]
		LashOut_Recovery,
		[Token(Token = "0x4001908")]
		Hiding
	}

	[Token(Token = "0x200034B")]
	private struct LimbData
	{
		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LimbState state;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 target;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 normal;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 lastTarget;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 lastNormal;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float deployFactor;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float cooldownTime;
	}

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tendril[] limbs;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxRange;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxAngle;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioCue landSound;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float retractionSpeed;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float deploySpeed;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float hideSpeed;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LimbData[] limbStates;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75CC38", Offset = "0x75CC38")]
	public int minDeployed;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float stepSpeed;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve stepCurve;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float limbCooldownTime;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public Vector3 wantedSpeed;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float gaitFreq;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float bobbingAmount;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NavMeshAgent navMeshAgent;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75CC80", Offset = "0x75CC80")]
	public AnimationCurve lashOutActionSpeedCurve;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve lashOutActionDeployCurve;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AnimationCurve lashOutActionSpreadCurve;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float lashOutAnticipationSpeed;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float lashOutActionSpeed;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float lashOutActionProgress;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3[] lashOutSpreadPoints;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AnimationCurve lashOutRecoveryCurve;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float lashOutRecoverySpeed;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int lashOutDamage;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float lashOutDamageRadius;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioCue lashOutSound;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioCue lashOutHitSound;

	[Token(Token = "0x400060E")]
	private const float speedOffsetFactor = 1.2f;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Collider bodyCollider;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private EventHub evHub;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 lastPos;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 speed;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool lodMode;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool hideLimbs;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
	private bool isMeltingUp;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFB")]
	private bool firstUpdate;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int lodFrameRetract;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private RaycastHit[] cachedHits;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Transform lashOutTarget;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 lashOutSavedTarget;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 lashOutSavedNormal;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 lashOutPrevDamagePos;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private bool lashOutDamageApplied;

	[Token(Token = "0x14000007")]
	public event Action onMove
	{
		[Token(Token = "0x6000538")]
		[Address(RVA = "0x9BE8DC", Offset = "0x9BE8DC", VA = "0x9BE8DC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764B28", Offset = "0x764B28")]
		add
		{
		}
		[Token(Token = "0x6000539")]
		[Address(RVA = "0x9BE984", Offset = "0x9BE984", VA = "0x9BE984", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764B38", Offset = "0x764B38")]
		remove
		{
		}
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x9BABD8", Offset = "0x9BABD8", VA = "0x9BABD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x9BAD60", Offset = "0x9BAD60", VA = "0x9BAD60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x9BAEBC", Offset = "0x9BAEBC", VA = "0x9BAEBC")]
	private void Start()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x9BB1E8", Offset = "0x9BB1E8", VA = "0x9BB1E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x9BC604", Offset = "0x9BC604", VA = "0x9BC604")]
	private RaycastHit CalculateLandingPoint(Tendril limb, Vector3 speedOffset, bool includeOffAngle = false)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x9BD4DC", Offset = "0x9BD4DC", VA = "0x9BD4DC")]
	public bool LashOut(Transform target)
	{
		return default(bool);
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x9BCA74", Offset = "0x9BCA74", VA = "0x9BCA74")]
	private LimbData UpdateLashOutAnim(LimbData ld, Tendril limb)
	{
		return default(LimbData);
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x9BD9B4", Offset = "0x9BD9B4", VA = "0x9BD9B4")]
	private bool CheckLashOutLineOfSight(Vector3 limbPos, Transform target)
	{
		return default(bool);
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x9BDA78", Offset = "0x9BDA78", VA = "0x9BDA78")]
	private void ComputeLashOutSpread(Transform target, Vector3 ldNormal, Vector3 limbPos)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x9BE534", Offset = "0x9BE534", VA = "0x9BE534")]
	public void SetLODMode(bool lod)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x9BE710", Offset = "0x9BE710", VA = "0x9BE710")]
	public void SetHidden(bool hidden)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x9BE8A4", Offset = "0x9BE8A4", VA = "0x9BE8A4")]
	private void OnMeltFXAppear()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x9BE8AC", Offset = "0x9BE8AC", VA = "0x9BE8AC")]
	private void OnMeltFXUp()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x9BE624", Offset = "0x9BE624", VA = "0x9BE624")]
	public void ResetTendrils()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x9BB1A0", Offset = "0x9BB1A0", VA = "0x9BB1A0")]
	private Vector3 GetLimbDir(Tendril t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x9BE8C4", Offset = "0x9BE8C4", VA = "0x9BE8C4", Slot = "4")]
	public void SetDesiredVelocity(Vector3 velocity)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x9BE8D0", Offset = "0x9BE8D0", VA = "0x9BE8D0", Slot = "7")]
	public Vector3 GetSpeed()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x9BEA2C", Offset = "0x9BEA2C", VA = "0x9BEA2C")]
	public TendrilLocomotion()
	{
	}
}
[Token(Token = "0x20000B4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75899C", Offset = "0x75899C")]
public class TestAgent : MonoBehaviour
{
	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NavMeshAgent agent;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool needsDest;

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x9C1F34", Offset = "0x9C1F34", VA = "0x9C1F34")]
	private void Start()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x9C1FAC", Offset = "0x9C1FAC", VA = "0x9C1FAC")]
	private void Update()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x9C2220", Offset = "0x9C2220", VA = "0x9C2220")]
	private void SetRandomTarget()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x9C245C", Offset = "0x9C245C", VA = "0x9C245C")]
	public TestAgent()
	{
	}
}
[Token(Token = "0x20000B5")]
public class TestMonster : FSMComponent
{
	[Token(Token = "0x200034C")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Idle;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Wander;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State React;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Chase;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Attack;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Death;

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x9C6110", Offset = "0x9C6110", VA = "0x9C6110")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int attackDamage;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float attackRange;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AgentWalk agentWalk;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AgentVision agentVision;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animator animator;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Health health;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Footsteps footSteps;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RandomSounds randomSounds;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dissolve dissolveFX;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioCue reactSound;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioCue deathSound;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioCue painSound;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioCue attackSounds;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float audioYDelta;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float chaseSpeedFactor;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isStealth;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool chasingPlayer;

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x9C4118", Offset = "0x9C4118", VA = "0x9C4118")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x9C418C", Offset = "0x9C418C", VA = "0x9C418C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x9C43F0", Offset = "0x9C43F0", VA = "0x9C43F0")]
	private void Idle_Enter()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x9C44A8", Offset = "0x9C44A8", VA = "0x9C44A8")]
	private void Idle_OnTimer()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x9C4584", Offset = "0x9C4584", VA = "0x9C4584")]
	private void Idle_Update()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x9C4630", Offset = "0x9C4630", VA = "0x9C4630")]
	private void Wander_Enter()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x9C4B04", Offset = "0x9C4B04", VA = "0x9C4B04")]
	private void Wander_Update()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x9C4C10", Offset = "0x9C4C10", VA = "0x9C4C10")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x9C4D90", Offset = "0x9C4D90", VA = "0x9C4D90")]
	private void React_Enter()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x9C50D4", Offset = "0x9C50D4", VA = "0x9C50D4")]
	private void React_Update()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x9C537C", Offset = "0x9C537C", VA = "0x9C537C")]
	private void Chase_Enter()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x9C53DC", Offset = "0x9C53DC", VA = "0x9C53DC")]
	private void Chase_Update()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x9C5598", Offset = "0x9C5598", VA = "0x9C5598")]
	private void Chase_Exit()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x9C55D8", Offset = "0x9C55D8", VA = "0x9C55D8")]
	private void Attack_Enter()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x9C5644", Offset = "0x9C5644", VA = "0x9C5644")]
	private void Attack_Update()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x9C58EC", Offset = "0x9C58EC", VA = "0x9C58EC")]
	private void Death_Enter()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x9C5AB4", Offset = "0x9C5AB4", VA = "0x9C5AB4")]
	private void Death_Exit()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x9C5B7C", Offset = "0x9C5B7C", VA = "0x9C5B7C")]
	private void OnReceiveDamage(int damagePoints, Health.DamageType damageType, Health.Faction faction, Vector3 originPoint)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x9C5E28", Offset = "0x9C5E28", VA = "0x9C5E28")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x9C5EC4", Offset = "0x9C5EC4", VA = "0x9C5EC4")]
	private void EventAttack()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x9C6080", Offset = "0x9C6080", VA = "0x9C6080")]
	public TestMonster()
	{
	}
}
[Token(Token = "0x20000B6")]
public class VisionSystem : Singleton<VisionSystem>
{
	[Token(Token = "0x200034D")]
	public enum TargetType
	{
		[Token(Token = "0x4001917")]
		Player = 1,
		[Token(Token = "0x4001918")]
		Creature = 2,
		[Token(Token = "0x4001919")]
		Security = 4,
		[Token(Token = "0x400191A")]
		Item = 8
	}

	[Token(Token = "0x200034E")]
	public struct ViewCone
	{
		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform owner;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float angle;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float length;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float yDelta;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float darkVisionFactor;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool checkLineOfSight;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask occludersMask;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetType targetMask;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool active;

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xAB8748", Offset = "0xAB8748", VA = "0xAB8748")]
		public ViewCone([Optional] Transform owner)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xAB878C", Offset = "0xAB878C", VA = "0xAB878C")]
		public void Set(Transform owner, float angle, float length, float yDelta = 0f, float darkVisionFactor = 1f)
		{
		}
	}

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<ViewCone> viewCones;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<VisionTarget> targets;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<List<VisionTarget>> targetsInView;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<bool> playerInView;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> lastPlayerPos;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int updateFrame;

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xAB7064", Offset = "0xAB7064", VA = "0xAB7064")]
	public int AddViewCone(ViewCone cone)
	{
		return default(int);
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xAB72EC", Offset = "0xAB72EC", VA = "0xAB72EC")]
	public void RemoveViewCone(int coneId)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xAB73E4", Offset = "0xAB73E4", VA = "0xAB73E4")]
	public void AddTarget(VisionTarget target)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xAB744C", Offset = "0xAB744C", VA = "0xAB744C")]
	public void RemoveTarget(VisionTarget target)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xAB7554", Offset = "0xAB7554", VA = "0xAB7554")]
	public bool CheckPlayerInView(int coneId, out Vector3 playerPos)
	{
		return default(bool);
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xAB7664", Offset = "0xAB7664", VA = "0xAB7664")]
	public bool CheckTargetInView(int coneId, TargetType targetType)
	{
		return default(bool);
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xAB77BC", Offset = "0xAB77BC", VA = "0xAB77BC")]
	public VisionTarget GetTargetInView(int coneId, TargetType targetType)
	{
		return null;
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xAB7910", Offset = "0xAB7910", VA = "0xAB7910")]
	public List<VisionTarget> GetTargetsInView(int coneId)
	{
		return null;
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xAB79A8", Offset = "0xAB79A8", VA = "0xAB79A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xAB8128", Offset = "0xAB8128", VA = "0xAB8128")]
	public static bool CheckInViewCone(VisionTarget target, Vector3 targetPos, Transform coneTransform, float coneAngle, float coneLength, bool checkLineOfSight = false, [Optional] LayerMask occludersMask, float yDelta = 0f, float coneDarkVisionFactor = 1f)
	{
		return default(bool);
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xAB85F4", Offset = "0xAB85F4", VA = "0xAB85F4")]
	public VisionSystem()
	{
	}
}
[Token(Token = "0x20000B7")]
public class VisionTarget : MonoBehaviour
{
	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "BitMaskAttribute", RVA = "0x75CCC8", Offset = "0x75CCC8")]
	public VisionSystem.TargetType targetType;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool disableWhenAsleep;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool _ignore;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool trailingCheck;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Pair<Vector3, int>> trailingPositions;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 lastPos;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rBody;

	[Token(Token = "0x1700007D")]
	public bool Ignore
	{
		[Token(Token = "0x6000560")]
		[Address(RVA = "0xAB87D8", Offset = "0xAB87D8", VA = "0xAB87D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000561")]
		[Address(RVA = "0xAB87E0", Offset = "0xAB87E0", VA = "0xAB87E0")]
		set
		{
		}
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xAB8918", Offset = "0xAB8918", VA = "0xAB8918")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xAB89DC", Offset = "0xAB89DC", VA = "0xAB89DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xAB8A84", Offset = "0xAB8A84", VA = "0xAB8A84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xAB858C", Offset = "0xAB858C", VA = "0xAB858C")]
	public bool HasTrailingPos()
	{
		return default(bool);
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xAB8DF0", Offset = "0xAB8DF0", VA = "0xAB8DF0")]
	public List<Pair<Vector3, int>> GetTrailingPos()
	{
		return null;
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xAB8DF8", Offset = "0xAB8DF8", VA = "0xAB8DF8")]
	public VisionTarget()
	{
	}
}
[Token(Token = "0x20000B8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758A00", Offset = "0x758A00")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758A00", Offset = "0x758A00")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758A00", Offset = "0x758A00")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758A00", Offset = "0x758A00")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758A00", Offset = "0x758A00")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758A00", Offset = "0x758A00")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758A00", Offset = "0x758A00")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758A00", Offset = "0x758A00")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758A00", Offset = "0x758A00")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758A00", Offset = "0x758A00")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758A00", Offset = "0x758A00")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758A00", Offset = "0x758A00")]
[SelectionBase]
public class Zombie : FSMComponent, IAgent, IGameSerializable
{
	[Token(Token = "0x200034F")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Idle;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Wander;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State React;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Chase;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Attack;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Investigate;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Hurt;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public FSM.State Death;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FSM.State Disappear;

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x1680D14", Offset = "0x1680D14", VA = "0x1680D14")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B978", Offset = "0x75B978")]
	private sealed class <DeserializeAfterStart_co>d__99 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Zombie <>4__this;

		[Token(Token = "0x170001BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001907")]
			[Address(RVA = "0x1680CA4", Offset = "0x1680CA4", VA = "0x1680CA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001909")]
			[Address(RVA = "0x1680D0C", Offset = "0x1680D0C", VA = "0x1680D0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x1680B44", Offset = "0x1680B44", VA = "0x1680B44")]
		[DebuggerHidden]
		public <DeserializeAfterStart_co>d__99(int <>1__state)
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x1680B70", Offset = "0x1680B70", VA = "0x1680B70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x1680B74", Offset = "0x1680B74", VA = "0x1680B74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x1680CAC", Offset = "0x1680CAC", VA = "0x1680CAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int attackDamage;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float attackRange;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EventHub evHub;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AgentWalk agentWalk;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AgentVision agentVision;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AgentLightSense agentLightSense;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AgentHearing agentHearing;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AgentAwareness agentAwareness;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animator animator;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Health health;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Footsteps footSteps;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RandomSounds randomSounds;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private JukeboxSetter jukeboxSetter;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private AgentLookAt lookAt;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private VisionTarget visionTarget;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private RagdollController ragdoll;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dissolve dissolve;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Collider> bodyColliders;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Collider lodCollider;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Collider moveCollider;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Collider tpCollider;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Renderer[] bodyRenderers;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioCue reactSound;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioCue deathSound;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioCue painSound;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioCue attackSounds;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float audioYDelta;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float chaseSpeedFactor;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float chaseRushSpeedFactor;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float chaseRushLengthMin;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float chaseRushLengthMax;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float chaseRushTimeoutMin;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float chaseRushTimeoutMax;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float chaseHurtCooldownMin;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float chaseHurtCooldownMax;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float attackCooldown;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float hurtInterruptCooldownLength;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private bool playReact;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public ChaseTask chaseTask;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool inChaseRush;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float chaseRushTimer;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public InvestigateTask investigateTask;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool wasChasing;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	private bool hurtInterruptCooldown;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int hurtFXTaskId;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public DeathTask deathTask;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private AgentUtils.LODState lodState;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private AgentUtils.SerializedData serializedData;

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xAC23D8", Offset = "0xAC23D8", VA = "0xAC23D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xAC24F0", Offset = "0xAC24F0", VA = "0xAC24F0", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xAC2548", Offset = "0xAC2548", VA = "0xAC2548", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xAC2574", Offset = "0xAC2574", VA = "0xAC2574")]
	private void Start()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xAC2C04", Offset = "0xAC2C04", VA = "0xAC2C04")]
	private void Idle_Enter()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xAC2C8C", Offset = "0xAC2C8C", VA = "0xAC2C8C")]
	private void Idle_OnTimer()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xAC2D68", Offset = "0xAC2D68", VA = "0xAC2D68")]
	private void Idle_Update()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xAC2E18", Offset = "0xAC2E18", VA = "0xAC2E18")]
	private void Wander_Enter()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xAC2F08", Offset = "0xAC2F08", VA = "0xAC2F08")]
	private void Wander_Update()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xAC3018", Offset = "0xAC3018", VA = "0xAC3018")]
	private void React_Enter()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xAC31F8", Offset = "0xAC31F8", VA = "0xAC31F8")]
	private void React_Update()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xAC34E8", Offset = "0xAC34E8", VA = "0xAC34E8")]
	private void React_Exit()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xAC35A0", Offset = "0xAC35A0", VA = "0xAC35A0")]
	private void Chase_Enter()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xAC3620", Offset = "0xAC3620", VA = "0xAC3620")]
	private void Chase_Update()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xAC3874", Offset = "0xAC3874", VA = "0xAC3874")]
	private void Chase_Exit()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xAC392C", Offset = "0xAC392C", VA = "0xAC392C")]
	private void Attack_Enter()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xAC3A80", Offset = "0xAC3A80", VA = "0xAC3A80")]
	private void Attack_Update()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xAC3C14", Offset = "0xAC3C14", VA = "0xAC3C14")]
	private void Attack_Exit()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xAC3CBC", Offset = "0xAC3CBC", VA = "0xAC3CBC")]
	private void Attack_OnTimer()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xAC3D58", Offset = "0xAC3D58", VA = "0xAC3D58")]
	private void Investigate_Enter()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xAC3D78", Offset = "0xAC3D78", VA = "0xAC3D78")]
	private void Investigate_Update()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xAC3E3C", Offset = "0xAC3E3C", VA = "0xAC3E3C")]
	private void Investigate_OnTimer()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xAC3EF0", Offset = "0xAC3EF0", VA = "0xAC3EF0")]
	private void Hurt_Enter()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xAC40F8", Offset = "0xAC40F8", VA = "0xAC40F8")]
	private void Hurt_Exit()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xAC4138", Offset = "0xAC4138", VA = "0xAC4138")]
	private void Hurt_OnTimer()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xAC42A4", Offset = "0xAC42A4", VA = "0xAC42A4")]
	private void OnHurtInterruptCooldown()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xAC42AC", Offset = "0xAC42AC", VA = "0xAC42AC")]
	private void PlayHurtFX()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xAC4448", Offset = "0xAC4448", VA = "0xAC4448")]
	private void PlayHurtFX_End()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xAC4454", Offset = "0xAC4454", VA = "0xAC4454")]
	private void Death_Enter()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xAC45C0", Offset = "0xAC45C0", VA = "0xAC45C0")]
	private void Death_Update()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xAC46BC", Offset = "0xAC46BC", VA = "0xAC46BC")]
	private void Death_Exit()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xAC46DC", Offset = "0xAC46DC", VA = "0xAC46DC")]
	private void Death_OnTimer()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xAC46FC", Offset = "0xAC46FC", VA = "0xAC46FC")]
	private void Disappear_Enter()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xAC47CC", Offset = "0xAC47CC", VA = "0xAC47CC")]
	private void OnFinishDisappear(GameObject go)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xAC488C", Offset = "0xAC488C", VA = "0xAC488C")]
	private void OnCrossingDoor(Door door)
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xAC491C", Offset = "0xAC491C", VA = "0xAC491C")]
	private void OnHeardSound(HearingSystem.Soundwave sound)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xAC4CA0", Offset = "0xAC4CA0", VA = "0xAC4CA0")]
	private void OnReceiveDamage(int damagePoints, Health.DamageType damageType, Health.Faction faction, Vector3 originPoint)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xAC4EA8", Offset = "0xAC4EA8", VA = "0xAC4EA8")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xAC4F44", Offset = "0xAC4F44", VA = "0xAC4F44")]
	private void EventAttack()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xAC5098", Offset = "0xAC5098", VA = "0xAC5098")]
	private void OnOcclusionChange(bool visibility, bool potentialVisibility)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xAC5214", Offset = "0xAC5214", VA = "0xAC5214")]
	private void OnRagdollChange(bool active)
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xAC5380", Offset = "0xAC5380", VA = "0xAC5380", Slot = "12")]
	public void Teleport(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xAC5548", Offset = "0xAC5548", VA = "0xAC5548", Slot = "13")]
	public void EMPulse(Room room)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xAC554C", Offset = "0xAC554C", VA = "0xAC554C", Slot = "14")]
	public Renderer[] GetBodyRenderers()
	{
		return null;
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xAC5554", Offset = "0xAC5554", VA = "0xAC5554", Slot = "15")]
	public string GetAgentName()
	{
		return null;
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xAC559C", Offset = "0xAC559C", VA = "0xAC559C", Slot = "16")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xAC5654", Offset = "0xAC5654", VA = "0xAC5654", Slot = "17")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xAC2BD8", Offset = "0xAC2BD8", VA = "0xAC2BD8")]
	private void DeserializeAfterStart()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xAC5720", Offset = "0xAC5720", VA = "0xAC5720")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x764B48", Offset = "0x764B48")]
	private IEnumerator DeserializeAfterStart_co()
	{
		return null;
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xAC579C", Offset = "0xAC579C", VA = "0xAC579C", Slot = "18")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xAC5814", Offset = "0xAC5814", VA = "0xAC5814")]
	public Zombie()
	{
	}

	[SpecialName]
	[Token(Token = "0x600059C")]
	[Address(RVA = "0xAC58D0", Offset = "0xAC58D0", VA = "0xAC58D0", Slot = "11")]
	private GameObject IAgent.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x20000B9")]
public class Jukebox : Singleton<Jukebox>
{
	[Serializable]
	[Token(Token = "0x2000351")]
	public class Mood
	{
		[Serializable]
		[Token(Token = "0x2000488")]
		public class Song
		{
			[Token(Token = "0x4001E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioClip clip;

			[Token(Token = "0x4001E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float baseVolume;

			[Token(Token = "0x4001E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool loop;

			[Token(Token = "0x6001BEA")]
			[Address(RVA = "0xA2F8EC", Offset = "0xA2F8EC", VA = "0xA2F8EC")]
			public Song()
			{
			}
		}

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float volume;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float silenceFreq;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float silenceMinTime;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float silenceMaxTime;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timeoutMin;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float timeoutMax;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool canFirstBeSilence;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Song[] songs;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastSong;

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xBCE2EC", Offset = "0xBCE2EC", VA = "0xBCE2EC")]
		public Song ChooseSong(bool canChooseSilence = true)
		{
			return null;
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xBCE97C", Offset = "0xBCE97C", VA = "0xBCE97C")]
		public Song GetCurrentSong()
		{
			return null;
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xBCE22C", Offset = "0xBCE22C", VA = "0xBCE22C")]
		public void SetSilence()
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xBCEA54", Offset = "0xBCEA54", VA = "0xBCEA54")]
		public Mood()
		{
		}
	}

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mood[] moods;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource channelExit;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource channelEnter;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource screechSound;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float exitTime;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float enterTime;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float volume;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mood baseMood;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mood enterMood;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Mood exitMood;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float activeTimeout;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float screechTimeout;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float screechVolume;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75CD2C", Offset = "0x75CD2C")]
	public AudioSource huntMusic;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75CD64", Offset = "0x75CD64")]
	public float maxHuntVolume;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float huntFactor;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string wantedMood;

	[Token(Token = "0x4000684")]
	private const string moodAmbience = "ambience";

	[Token(Token = "0x4000685")]
	private const string moodIntense = "intense";

	[Token(Token = "0x4000686")]
	private const string moodTension = "tension";

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xBCDBC4", Offset = "0xBCDBC4", VA = "0xBCDBC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xBCDC5C", Offset = "0xBCDC5C", VA = "0xBCDC5C")]
	public void SetBaseMood(string moodName)
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xBCDFE8", Offset = "0xBCDFE8", VA = "0xBCDFE8")]
	public void SetActiveMood(string moodName, bool setAsWanted = true)
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xBCE084", Offset = "0xBCE084", VA = "0xBCE084")]
	public void SetIntense(float withScreech = 0f)
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xBCE190", Offset = "0xBCE190", VA = "0xBCE190")]
	public void SetTension()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xBCE108", Offset = "0xBCE108", VA = "0xBCE108")]
	public void SetScreech(float screech)
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xBCE1E4", Offset = "0xBCE1E4", VA = "0xBCE1E4")]
	private void SetSilence()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xBCE238", Offset = "0xBCE238", VA = "0xBCE238")]
	public void PlaySilence(float min, float max)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xBCE2E0", Offset = "0xBCE2E0", VA = "0xBCE2E0")]
	public void PlaySilence()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xBCDDB0", Offset = "0xBCDDB0", VA = "0xBCDDB0")]
	private void SwapMoods()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xBCDF74", Offset = "0xBCDF74", VA = "0xBCDF74")]
	private void SetExitMood(Mood mood)
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xBCDE08", Offset = "0xBCDE08", VA = "0xBCDE08")]
	private void SetEnterMood(Mood mood)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xBCDD24", Offset = "0xBCDD24", VA = "0xBCDD24")]
	private Mood SearchMood(string moodName)
	{
		return null;
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xBCE3A8", Offset = "0xBCE3A8", VA = "0xBCE3A8")]
	private float SetSongInChannel(AudioSource channel, Mood.Song song)
	{
		return default(float);
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xBCE428", Offset = "0xBCE428", VA = "0xBCE428")]
	public void SetHuntMusic(float factor = 0f)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xBCE4B0", Offset = "0xBCE4B0", VA = "0xBCE4B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xBCE9D0", Offset = "0xBCE9D0", VA = "0xBCE9D0")]
	public Jukebox()
	{
	}
}
[Token(Token = "0x20000BA")]
public class JukeboxSetter : MonoBehaviour
{
	[Token(Token = "0x2000352")]
	public enum MoodType
	{
		[Token(Token = "0x400193B")]
		NoChange,
		[Token(Token = "0x400193C")]
		Tension,
		[Token(Token = "0x400193D")]
		Intense
	}

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoodType moodType;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool screech;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool requireVisible;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer renderer;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform bodyCenterReference;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75CD7C", Offset = "0x75CD7C")]
	[SerializeField]
	private bool huntMode;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float huntMinDistance;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float huntMaxDistance;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int huntMaxRoomDistance;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MoodType overrideMood;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool wasVisible;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int cacheFrames;

	[Token(Token = "0x1700007E")]
	public bool HuntMode
	{
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xA2F8FC", Offset = "0xA2F8FC", VA = "0xA2F8FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xA2F904", Offset = "0xA2F904", VA = "0xA2F904")]
		set
		{
		}
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xA2F98C", Offset = "0xA2F98C", VA = "0xA2F98C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xA30A18", Offset = "0xA30A18", VA = "0xA30A18")]
	public void PushTensionMood()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xA30A24", Offset = "0xA30A24", VA = "0xA30A24")]
	public void PushIntenseMood()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xA307B4", Offset = "0xA307B4", VA = "0xA307B4")]
	private bool IsVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xA30A30", Offset = "0xA30A30", VA = "0xA30A30")]
	public JukeboxSetter()
	{
	}
}
[Token(Token = "0x20000BB")]
public class RandomSounds : MonoBehaviour
{
	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B988", Offset = "0x75B988")]
	private sealed class <PlaySound>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RandomSounds <>4__this;

		[Token(Token = "0x170001C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001911")]
			[Address(RVA = "0xA4E518", Offset = "0xA4E518", VA = "0xA4E518", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001913")]
			[Address(RVA = "0xA4E580", Offset = "0xA4E580", VA = "0xA4E580", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xA4E3B8", Offset = "0xA4E3B8", VA = "0xA4E3B8")]
		[DebuggerHidden]
		public <PlaySound>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xA4E40C", Offset = "0xA4E40C", VA = "0xA4E40C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xA4E410", Offset = "0xA4E410", VA = "0xA4E410", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xA4E520", Offset = "0xA4E520", VA = "0xA4E520", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioCue sounds;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioCue intenseSounds;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool intenseMode;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float intervalMin;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float intervalMax;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float intervalIntenseModeFactor;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minRange;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxRange;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float minVolume;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float maxVolume;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool playInmediate;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float highDistance;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float highDistanceChance;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float audioYDelta;

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xA4E178", Offset = "0xA4E178", VA = "0xA4E178")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xA4E220", Offset = "0xA4E220", VA = "0xA4E220")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xA4E228", Offset = "0xA4E228", VA = "0xA4E228")]
	public void PlayNow()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xA4E1A4", Offset = "0xA4E1A4", VA = "0xA4E1A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x764BAC", Offset = "0x764BAC")]
	private IEnumerator PlaySound()
	{
		return null;
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xA4E3E4", Offset = "0xA4E3E4", VA = "0xA4E3E4")]
	public RandomSounds()
	{
	}
}
[Token(Token = "0x20000BC")]
public class SpookSounds : MonoBehaviour
{
	[Token(Token = "0x2000354")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B998", Offset = "0x75B998")]
	private sealed class <PlaySpookSound>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpookSounds <>4__this;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <bFirstTime>5__2;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <nextWait>5__3;

		[Token(Token = "0x170001C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001917")]
			[Address(RVA = "0x9B3AC0", Offset = "0x9B3AC0", VA = "0x9B3AC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001919")]
			[Address(RVA = "0x9B3B28", Offset = "0x9B3B28", VA = "0x9B3B28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x9B3254", Offset = "0x9B3254", VA = "0x9B3254")]
		[DebuggerHidden]
		public <PlaySpookSound>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x9B37A4", Offset = "0x9B37A4", VA = "0x9B37A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x9B37A8", Offset = "0x9B37A8", VA = "0x9B37A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x9B3AC8", Offset = "0x9B3AC8", VA = "0x9B3AC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000355")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B9A8", Offset = "0x75B9A8")]
	private sealed class <PlayDeepSounds>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpookSounds <>4__this;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <nextWait>5__2;

		[Token(Token = "0x170001C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600191D")]
			[Address(RVA = "0x9B34F0", Offset = "0x9B34F0", VA = "0x9B34F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600191F")]
			[Address(RVA = "0x9B3558", Offset = "0x9B3558", VA = "0x9B3558", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x9B3280", Offset = "0x9B3280", VA = "0x9B3280")]
		[DebuggerHidden]
		public <PlayDeepSounds>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x9B331C", Offset = "0x9B331C", VA = "0x9B331C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x9B3320", Offset = "0x9B3320", VA = "0x9B3320", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x9B34F8", Offset = "0x9B34F8", VA = "0x9B34F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000356")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B9B8", Offset = "0x75B9B8")]
	private sealed class <PlayPASounds>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpookSounds <>4__this;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <nextWait>5__2;

		[Token(Token = "0x170001C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001923")]
			[Address(RVA = "0x9B3734", Offset = "0x9B3734", VA = "0x9B3734", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001925")]
			[Address(RVA = "0x9B379C", Offset = "0x9B379C", VA = "0x9B379C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x9B32AC", Offset = "0x9B32AC", VA = "0x9B32AC")]
		[DebuggerHidden]
		public <PlayPASounds>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x9B3560", Offset = "0x9B3560", VA = "0x9B3560", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x9B3564", Offset = "0x9B3564", VA = "0x9B3564", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x9B373C", Offset = "0x9B373C", VA = "0x9B373C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioCue naturalSounds;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioCue monsterSounds;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float naturalWeight;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float monsterWeight;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float SilenceProbability;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float ShortWaitMin;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ShortWaitMax;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float MediumWaitMin;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float MediumWaitMax;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float LongWaitMin;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float LongWaitMax;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float MinDistance;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MaxDistance;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioCue deepSounds;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float deepWaitMin;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float deepWaitMax;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioCue paSounds;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float paWaitMin;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float paWaitMax;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float LastWait;

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x9B2F7C", Offset = "0x9B2F7C", VA = "0x9B2F7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x9B30E0", Offset = "0x9B30E0", VA = "0x9B30E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x764C10", Offset = "0x764C10")]
	private IEnumerator PlaySpookSound()
	{
		return null;
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x9B315C", Offset = "0x9B315C", VA = "0x9B315C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x764C74", Offset = "0x764C74")]
	private IEnumerator PlayDeepSounds()
	{
		return null;
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x9B31D8", Offset = "0x9B31D8", VA = "0x9B31D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x764CD8", Offset = "0x764CD8")]
	private IEnumerator PlayPASounds()
	{
		return null;
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x9B32D8", Offset = "0x9B32D8", VA = "0x9B32D8")]
	public SpookSounds()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BD")]
public class Config
{
	[Serializable]
	[Token(Token = "0x2000357")]
	public class GeneralCfg
	{
		[Token(Token = "0x2000489")]
		public enum BraceletHand
		{
			[Token(Token = "0x4001E6F")]
			Left,
			[Token(Token = "0x4001E70")]
			Right
		}

		[Token(Token = "0x200048A")]
		public enum MovementType
		{
			[Token(Token = "0x4001E72")]
			Jump,
			[Token(Token = "0x4001E73")]
			Smooth,
			[Token(Token = "0x4001E74")]
			Dash,
			[Token(Token = "0x4001E75")]
			Teleport
		}

		[Token(Token = "0x200048B")]
		public enum MovementDirRef
		{
			[Token(Token = "0x4001E77")]
			LeftHand,
			[Token(Token = "0x4001E78")]
			RightHand,
			[Token(Token = "0x4001E79")]
			Head
		}

		[Token(Token = "0x200048C")]
		public enum RotationType
		{
			[Token(Token = "0x4001E7B")]
			Snap,
			[Token(Token = "0x4001E7C")]
			Smooth
		}

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string language;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool tutorials;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BraceletHand braceletHand;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MovementType movementType;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public MovementDirRef movementDirRef;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RotationType rotationType;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int rotationSpeed;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool toggleGrab;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool forcedHeight;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool swapControls;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool bHaptics;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool bHapticsSetup;

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x9342CC", Offset = "0x9342CC", VA = "0x9342CC")]
		public string Serialize(string key)
		{
			return null;
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x9342D4", Offset = "0x9342D4", VA = "0x9342D4")]
		public void Deserialize(string jsonString)
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x933EAC", Offset = "0x933EAC", VA = "0x933EAC")]
		public GeneralCfg()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000358")]
	public class VideoCfg
	{
		[Token(Token = "0x200048D")]
		public enum MSAALevel
		{
			[Token(Token = "0x4001E7E")]
			x0,
			[Token(Token = "0x4001E7F")]
			x2,
			[Token(Token = "0x4001E80")]
			x4,
			[Token(Token = "0x4001E81")]
			x8
		}

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int qualityLevel;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int pixelDensity;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MSAALevel msaaLevel;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool spectatorHUD;

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x93434C", Offset = "0x93434C", VA = "0x93434C")]
		public int GetMSAA()
		{
			return default(int);
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x933F1C", Offset = "0x933F1C", VA = "0x933F1C")]
		public VideoCfg()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000359")]
	public class AudioCfg
	{
		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int masterVolume;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int musicVolume;

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x933F40", Offset = "0x933F40", VA = "0x933F40")]
		public AudioCfg()
		{
		}
	}

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Config instance;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GeneralCfg general;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VideoCfg video;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioCfg audio;

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x933CF8", Offset = "0x933CF8", VA = "0x933CF8")]
	public static Config Get()
	{
		return null;
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x933DC0", Offset = "0x933DC0", VA = "0x933DC0")]
	private Config()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x933F50", Offset = "0x933F50", VA = "0x933F50")]
	public static GeneralCfg General()
	{
		return null;
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x933FBC", Offset = "0x933FBC", VA = "0x933FBC")]
	public static VideoCfg Video()
	{
		return null;
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x934028", Offset = "0x934028", VA = "0x934028")]
	public static AudioCfg Audio()
	{
		return null;
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x934094", Offset = "0x934094", VA = "0x934094")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x934220", Offset = "0x934220", VA = "0x934220")]
	public static bool Save()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x9342C0", Offset = "0x9342C0", VA = "0x9342C0")]
	private string Serialize()
	{
		return null;
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x934154", Offset = "0x934154", VA = "0x934154")]
	private bool Deserialize(string jsonString)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000BE")]
public class DamageCapsule : MonoBehaviour
{
	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75CDC8", Offset = "0x75CDC8")]
	public float radius;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float length;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75CE00", Offset = "0x75CE00")]
	public Health.DamageType damageType;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int damage;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Health.Faction faction;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask layerMask;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float cycleTime;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool cyclic;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float timer;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider[] colliderBuffer;

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x97045C", Offset = "0x97045C", VA = "0x97045C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x9704BC", Offset = "0x9704BC", VA = "0x9704BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x970538", Offset = "0x970538", VA = "0x970538")]
	private void ApplyDamage()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x9706C0", Offset = "0x9706C0", VA = "0x9706C0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x970AEC", Offset = "0x970AEC", VA = "0x970AEC")]
	public DamageCapsule()
	{
	}
}
[Token(Token = "0x20000BF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758C2C", Offset = "0x758C2C")]
public class DamageMultiplier : MonoBehaviour
{
	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float multiplierFactor;

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x970B04", Offset = "0x970B04", VA = "0x970B04")]
	public DamageMultiplier()
	{
	}
}
[Token(Token = "0x20000C0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758C90", Offset = "0x758C90")]
public class DamageTrigger : MonoBehaviour
{
	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75CE38", Offset = "0x75CE38")]
	public Health.DamageType damageType;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int damage;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Health.Faction faction;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x75CE70", Offset = "0x75CE70")]
	public LayerMask layerMask;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool applyDamageOnStay;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider triggerCollider;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x970B14", Offset = "0x970B14", VA = "0x970B14")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x970B74", Offset = "0x970B74", VA = "0x970B74")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x970CE8", Offset = "0x970CE8", VA = "0x970CE8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x970BE0", Offset = "0x970BE0", VA = "0x970BE0")]
	private void ApplyDamage(Collider other)
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x970D5C", Offset = "0x970D5C", VA = "0x970D5C")]
	public DamageTrigger()
	{
	}
}
[Token(Token = "0x20000C1")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x758CF4", Offset = "0x758CF4")]
public class ExplosionDamage : ScriptableObject
{
	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int explosionDamage;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float explosionRadius;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask affectedLayers;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float impactForce;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xA1CDDC", Offset = "0xA1CDDC", VA = "0xA1CDDC")]
	public void Explode(Vector3 centerPos, Health.Faction faction)
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xA1CEC8", Offset = "0xA1CEC8", VA = "0xA1CEC8")]
	public ExplosionDamage()
	{
	}
}
[Token(Token = "0x20000C2")]
public sealed class Health : MonoBehaviour
{
	[Token(Token = "0x200035A")]
	public enum DamageType
	{
		[Token(Token = "0x4001961")]
		Kinetic,
		[Token(Token = "0x4001962")]
		Fire,
		[Token(Token = "0x4001963")]
		Electrical,
		[Token(Token = "0x4001964")]
		Organic,
		[Token(Token = "0x4001965")]
		Explosive
	}

	[Token(Token = "0x200035B")]
	public enum ImpactSurfaceType
	{
		[Token(Token = "0x4001967")]
		HardSurface,
		[Token(Token = "0x4001968")]
		Organic
	}

	[Token(Token = "0x200035C")]
	public enum Faction
	{
		[Token(Token = "0x400196A")]
		None,
		[Token(Token = "0x400196B")]
		Player,
		[Token(Token = "0x400196C")]
		Creature,
		[Token(Token = "0x400196D")]
		Defense,
		[Token(Token = "0x400196E")]
		Environment,
		[Token(Token = "0x400196F")]
		EnvironmentPlayer
	}

	[Token(Token = "0x200035D")]
	public enum KillSignature
	{
		[Token(Token = "0x4001971")]
		Default,
		[Token(Token = "0x4001972")]
		Enemy_Cosmonaut,
		[Token(Token = "0x4001973")]
		Enemy_Crawler,
		[Token(Token = "0x4001974")]
		Enemy_Cytoma_Charge,
		[Token(Token = "0x4001975")]
		Enemy_Meatman,
		[Token(Token = "0x4001976")]
		Enemy_Zombie,
		[Token(Token = "0x4001977")]
		Enemy_Blob,
		[Token(Token = "0x4001978")]
		Security_Drone,
		[Token(Token = "0x4001979")]
		Security_Turret,
		[Token(Token = "0x400197A")]
		Hazard_Electrical,
		[Token(Token = "0x400197B")]
		Hazard_Leak_Steam,
		[Token(Token = "0x400197C")]
		Hazard_Leak_Fire,
		[Token(Token = "0x400197D")]
		Hazard_Vent_Tendril,
		[Token(Token = "0x400197E")]
		Weapon_Player,
		[Token(Token = "0x400197F")]
		Item_Projectile,
		[Token(Token = "0x4001980")]
		Explosion_Grenade_HE,
		[Token(Token = "0x4001981")]
		Explosion_Trapmine,
		[Token(Token = "0x4001982")]
		Explosion_Flammable,
		[Token(Token = "0x4001983")]
		Oxygen
	}

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KillSignature receivedKillSignature;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Faction receivedFaction;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected int _healthPoints;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxHealth;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ImpactSurfaceType surfaceType;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool ignoreDamage;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Shake cameraShake;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75CE80", Offset = "0x75CE80")]
	public bool useChildrenColliders;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Collider> validColliders;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75CEB8", Offset = "0x75CEB8")]
	public float kineticResitance;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float fireResistance;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float electricalResistance;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float organicResistance;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float explosiveResistance;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x75CEF0", Offset = "0x75CEF0")]
	public bool addDamageToPlayerStats;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Collider[] colliderBuffer;

	[Token(Token = "0x40006E3")]
	private const int colliderBufferSize = 128;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool isInFunction;

	[Token(Token = "0x1700007F")]
	[ShowNativeProperty]
	public int HealthPoints
	{
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x9D4804", Offset = "0x9D4804", VA = "0x9D4804")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000080")]
	public float HealthPercent
	{
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x9D480C", Offset = "0x9D480C", VA = "0x9D480C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x14000008")]
	public event Action onDeath
	{
		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x9D12AC", Offset = "0x9D12AC", VA = "0x9D12AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764D3C", Offset = "0x764D3C")]
		add
		{
		}
		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x9D1598", Offset = "0x9D1598", VA = "0x9D1598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764D4C", Offset = "0x764D4C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action<int, DamageType, Faction, Vector3> onReceiveDamage
	{
		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x9D1208", Offset = "0x9D1208", VA = "0x9D1208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764D5C", Offset = "0x764D5C")]
		add
		{
		}
		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x9D14F4", Offset = "0x9D14F4", VA = "0x9D14F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764D6C", Offset = "0x764D6C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action onReceiveHeal
	{
		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x9D50C0", Offset = "0x9D50C0", VA = "0x9D50C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764D7C", Offset = "0x764D7C")]
		add
		{
		}
		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x9D5164", Offset = "0x9D5164", VA = "0x9D5164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764D8C", Offset = "0x764D8C")]
		remove
		{
		}
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x9D4898", Offset = "0x9D4898", VA = "0x9D4898")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x9D48B4", Offset = "0x9D48B4", VA = "0x9D48B4")]
	public ImpactSurfaceType ApplyDamage(int damage, DamageType damageType, Faction faction, [Optional] Collider collider, KillSignature killSignature = KillSignature.Default, [Optional] Vector3? originPoint)
	{
		return default(ImpactSurfaceType);
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x9D4FAC", Offset = "0x9D4FAC", VA = "0x9D4FAC")]
	public void ApplyHeal(int points)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x9D4FD8", Offset = "0x9D4FD8", VA = "0x9D4FD8")]
	public void SetHealth(int newHealth)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x9D4FE0", Offset = "0x9D4FE0", VA = "0x9D4FE0")]
	public bool IsValidReceiver(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x9D5208", Offset = "0x9D5208", VA = "0x9D5208")]
	public static bool AddDamageCapsule(Vector3 startPoint, Vector3 endPoint, float radius, LayerMask layerMask, int damage, DamageType damageType, Faction faction, KillSignature signature = KillSignature.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x9D56D4", Offset = "0x9D56D4", VA = "0x9D56D4")]
	public static bool AddDamageSphere(Vector3 center, float radius, LayerMask layerMask, int damage, DamageType damageType, Faction faction, KillSignature signature = KillSignature.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x9D5B78", Offset = "0x9D5B78", VA = "0x9D5B78")]
	public static bool AddDamageBlastSphere(Vector3 center, float radius, LayerMask layerMask, int maxDamage, DamageType damageType, Faction faction, [Optional] float? impactForce, KillSignature signature = KillSignature.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x9D6B38", Offset = "0x9D6B38", VA = "0x9D6B38")]
	public static bool AddDamageBox(Vector3 center, Vector3 halfExtents, Quaternion orientation, LayerMask layerMask, int damage, DamageType damageType, Faction faction, KillSignature signature = KillSignature.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x9D7004", Offset = "0x9D7004", VA = "0x9D7004")]
	public static bool RaycastDamage(Vector3 origin, Vector3 direction, float range, LayerMask layerMask, int damage, DamageType damageType, Faction faction, bool addImpactForce, [Optional][MetadataOffset(Offset = "0x283D87")] float? impactForce, KillSignature signature = KillSignature.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x9CD030", Offset = "0x9CD030", VA = "0x9CD030")]
	public static bool RaycastDamage(Vector3 origin, Vector3 direction, float range, LayerMask layerMask, int damage, DamageType damageType, out RaycastHit hitInfo, out ImpactSurfaceType surfaceType, Faction faction, [Optional][MetadataOffset(Offset = "0x283D8F")] float? impactForce, KillSignature signature = KillSignature.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x9D712C", Offset = "0x9D712C", VA = "0x9D712C")]
	public static int AddHealSphere(Vector3 center, float radius, LayerMask layerMask, int healPoints, bool mustBePlayer = false)
	{
		return default(int);
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x9D75A8", Offset = "0x9D75A8", VA = "0x9D75A8")]
	public Health()
	{
	}
}
[Token(Token = "0x20000C3")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x758D38", Offset = "0x758D38")]
public class ProjectileDamage : ScriptableObject
{
	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75CF30", Offset = "0x75CF30")]
	public Health.DamageType damageType;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int damage;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float impactForce;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75CF68", Offset = "0x75CF68")]
	public Transform impactFXHardSurface;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioCue impactSoundHardSurface;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform impactFXOrganic;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioCue impactSoundOrganic;

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x9F1738", Offset = "0x9F1738", VA = "0x9F1738")]
	public void ApplyHitEffect(Health.ImpactSurfaceType surfaceType, Vector3 hitPoint, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x9F4560", Offset = "0x9F4560", VA = "0x9F4560")]
	public ProjectileDamage()
	{
	}
}
[Token(Token = "0x20000C4")]
public class BurningFX : MonoBehaviour
{
	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem burnParticlesPrefab;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float burnTime;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] renderersForParticlesFX;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Health health;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventHub evHub;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem burnParticles;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float emissionCooldown;

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x92B638", Offset = "0x92B638", VA = "0x92B638")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x92B6BC", Offset = "0x92B6BC", VA = "0x92B6BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x92B83C", Offset = "0x92B83C", VA = "0x92B83C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x92BA04", Offset = "0x92BA04", VA = "0x92BA04")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x92BB50", Offset = "0x92BB50", VA = "0x92BB50")]
	private void OnReceiveDamage(int damagePoints, Health.DamageType damageType, Health.Faction faction, Vector3 originPoint)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x92C164", Offset = "0x92C164", VA = "0x92C164")]
	private void OnDisappearStart()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x92BC30", Offset = "0x92BC30", VA = "0x92BC30")]
	private void CreateParticleSystem()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x92C170", Offset = "0x92C170", VA = "0x92C170")]
	public BurningFX()
	{
	}
}
[Token(Token = "0x20000C5")]
public class ColorFlicker : MonoBehaviour
{
	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Gradient colorGradient;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float frequency;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float offset;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool applyToLight;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool applyToLineRenderer;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool applyToMaterial;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool applyToMaterialTint;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light light;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer line;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material material;

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x92E9D0", Offset = "0x92E9D0", VA = "0x92E9D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x92EAB4", Offset = "0x92EAB4", VA = "0x92EAB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x92ED00", Offset = "0x92ED00", VA = "0x92ED00")]
	public ColorFlicker()
	{
	}
}
[Token(Token = "0x20000C6")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758D7C", Offset = "0x758D7C")]
public class DecalUVNormalizer : MonoBehaviour, IMeshProcessor
{
	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EasyDecal decal;

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x9711F8", Offset = "0x9711F8", VA = "0x9711F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x9712D4", Offset = "0x9712D4", VA = "0x9712D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x97138C", Offset = "0x97138C", VA = "0x97138C", Slot = "4")]
	public void Process(IMesh mesh)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x971660", Offset = "0x971660", VA = "0x971660")]
	public DecalUVNormalizer()
	{
	}
}
[Token(Token = "0x20000C7")]
public class Dissolve : MonoBehaviour
{
	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material dissolveBaseMaterial;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool destroyOnEnd;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool fabricate;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float solidProgress;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject baseRenderer;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer[] objRenderers;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader[] oldShaders;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material newMaterial;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem particleFX;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool applyParticlesToRenderers;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x75CFA0", Offset = "0x75CFA0")]
	public ParticleSystem rendererParticleFXPrefab;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x75CFD8", Offset = "0x75CFD8")]
	public Renderer[] renderersForParticlesFX;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioCue dissolveSound;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Action<GameObject> onFinished;

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x973670", Offset = "0x973670", VA = "0x973670")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x973804", Offset = "0x973804", VA = "0x973804")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x974074", Offset = "0x974074", VA = "0x974074")]
	private void Update()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x974310", Offset = "0x974310", VA = "0x974310")]
	private void OnParticleEnd()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x97438C", Offset = "0x97438C", VA = "0x97438C")]
	public Dissolve()
	{
	}
}
[Token(Token = "0x20000C8")]
public class FabricationFX : MonoBehaviour
{
	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material fxBaseMaterial;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool destroyOnEnd;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool fabricate;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float solidProgress;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 cutRange;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject baseRenderer;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Renderer> objRenderers;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Shader[][] oldShaders;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material newMaterial;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem particleFX;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<GameObject> onFinished;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 cutPosition;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Rigidbody rb;

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xA2038C", Offset = "0xA2038C", VA = "0xA2038C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xA20AB0", Offset = "0xA20AB0", VA = "0xA20AB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xA2111C", Offset = "0xA2111C", VA = "0xA2111C")]
	private void OnParticleEnd()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xA21198", Offset = "0xA21198", VA = "0xA21198")]
	public FabricationFX()
	{
	}
}
[Token(Token = "0x20000C9")]
public class FlickerLight : MonoBehaviour
{
	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_Rnd;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool m_Burning;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light m_Light;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float offsetFactor;

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xA29610", Offset = "0xA29610", VA = "0xA29610")]
	private void Start()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xA29688", Offset = "0xA29688", VA = "0xA29688")]
	private void Update()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xA298B4", Offset = "0xA298B4", VA = "0xA298B4")]
	public void Extinguish()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xA298DC", Offset = "0xA298DC", VA = "0xA298DC")]
	public FlickerLight()
	{
	}
}
[Token(Token = "0x20000CA")]
public class GrowableBodyPart : MonoBehaviour
{
	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform bodyPart;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 defaultScale;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 defaultOffset;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve scaleCurveX;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve scaleCurveY;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve scaleCurveZ;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float animSpeed;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float animTimerMin;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float animTimerMax;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float animFactor;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float animFactorTarget;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float animTimer;

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x9CB304", Offset = "0x9CB304", VA = "0x9CB304")]
	private void Start()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x9CB3FC", Offset = "0x9CB3FC", VA = "0x9CB3FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x9CB610", Offset = "0x9CB610", VA = "0x9CB610")]
	public GrowableBodyPart()
	{
	}
}
[Token(Token = "0x20000CB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758DF0", Offset = "0x758DF0")]
public class GunTrails : MonoBehaviour
{
	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float trailDuration;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float trailLife;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color startLifeColor;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float startLifeWidth;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color endLifeColor;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float endLifeWidth;

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x9CB62C", Offset = "0x9CB62C", VA = "0x9CB62C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x9CB68C", Offset = "0x9CB68C", VA = "0x9CB68C")]
	private void Start()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x9CB6AC", Offset = "0x9CB6AC", VA = "0x9CB6AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x9CB83C", Offset = "0x9CB83C", VA = "0x9CB83C")]
	public void AddTrail(Vector3 posBegin, Vector3 posEnd)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x9CB8E8", Offset = "0x9CB8E8", VA = "0x9CB8E8")]
	public GunTrails()
	{
	}
}
[Token(Token = "0x20000CC")]
public class HoleField : MonoBehaviour
{
	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem collisionFX;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioCue collisionSound;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float bounceImpulse;

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x9D8048", Offset = "0x9D8048", VA = "0x9D8048")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x9D83C8", Offset = "0x9D83C8", VA = "0x9D83C8")]
	public HoleField()
	{
	}
}
[Token(Token = "0x20000CD")]
public class Lightning : MonoBehaviour
{
	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform beamTarget;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int textureTiles;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float beamScale;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float animUVSpeed;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float beamAmplitude;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float beamOscillateRate;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float oscillateTimer;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer beamRenderer;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Light pointLight;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float beamLength;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float initialBeamOffset;

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xA37E00", Offset = "0xA37E00", VA = "0xA37E00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xA37EF8", Offset = "0xA37EF8", VA = "0xA37EF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xA38270", Offset = "0xA38270", VA = "0xA38270")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xA3831C", Offset = "0xA3831C", VA = "0xA3831C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xA37F40", Offset = "0xA37F40", VA = "0xA37F40")]
	private void UpdateBeam()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xA38190", Offset = "0xA38190", VA = "0xA38190")]
	private void AnimateUV()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xA384A0", Offset = "0xA384A0", VA = "0xA384A0")]
	public Lightning()
	{
	}
}
[Token(Token = "0x20000CE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758E54", Offset = "0x758E54")]
public class MeltFX : FSMComponent
{
	[Token(Token = "0x200035E")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Appear;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State MeltUp;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Default;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State MeltDown;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Disappear;

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xB83760", Offset = "0xB83760", VA = "0xB83760")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer meltRenderer;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float depth;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float depthMeltUp;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float depthMeltDown;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxMeltFactor;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float heightOffset;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float meltUpSpeed;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float meltDownSpeed;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float disappearSpeed;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float appearSpeed;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float sphereMaxRadius;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource audioFX;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material meltMaterial;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float progress;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 meltedPos;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 raisedPos;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool halfMeltDown;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	private bool disappearAfterMeltDown;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private EventHub evHub;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly int onFullMelted;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly int onAppear;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly int onMeltUp;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static readonly int onMeltDownStart;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly int onMeltDown;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static readonly int onDisappear;

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xC64800", Offset = "0xC64800", VA = "0xC64800")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xC648E4", Offset = "0xC648E4", VA = "0xC648E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xC64980", Offset = "0xC64980", VA = "0xC64980")]
	public void DoAppear()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xC64A3C", Offset = "0xC64A3C", VA = "0xC64A3C")]
	public void DoMeltUp()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xC64AF8", Offset = "0xC64AF8", VA = "0xC64AF8")]
	public void DoMeltDown(bool disappearWhenDone = false, bool halfMeltDown = false)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xC64C40", Offset = "0xC64C40", VA = "0xC64C40")]
	public void DoDisappear()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xC64E54", Offset = "0xC64E54", VA = "0xC64E54")]
	private void SetFullMelted()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xC64F68", Offset = "0xC64F68", VA = "0xC64F68")]
	public void ResetToDefault()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xC650D8", Offset = "0xC650D8", VA = "0xC650D8")]
	private void Appear_Enter()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xC65328", Offset = "0xC65328", VA = "0xC65328")]
	private void Appear_Update()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xC654A0", Offset = "0xC654A0", VA = "0xC654A0")]
	private void Appear_Exit()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xC6558C", Offset = "0xC6558C", VA = "0xC6558C")]
	private void MeltUp_Enter()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xC65668", Offset = "0xC65668", VA = "0xC65668")]
	private void MeltUp_Update()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xC658A0", Offset = "0xC658A0", VA = "0xC658A0")]
	private void MeltUp_Exit()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xC65960", Offset = "0xC65960", VA = "0xC65960")]
	private void Default_Enter()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xC65A58", Offset = "0xC65A58", VA = "0xC65A58")]
	private void MeltDown_Enter()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xC65BC0", Offset = "0xC65BC0", VA = "0xC65BC0")]
	private void MeltDown_Update()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xC65F10", Offset = "0xC65F10", VA = "0xC65F10")]
	private void MeltDown_Exit()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xC65F90", Offset = "0xC65F90", VA = "0xC65F90")]
	private void Disappear_Enter()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xC66198", Offset = "0xC66198", VA = "0xC66198")]
	private void Disappear_Update()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xC66304", Offset = "0xC66304", VA = "0xC66304")]
	private void Disappear_Exit()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xC66384", Offset = "0xC66384", VA = "0xC66384")]
	public MeltFX()
	{
	}
}
[Token(Token = "0x20000CF")]
[ExecuteInEditMode]
public class Monochromize : MonoBehaviour
{
	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75D010", Offset = "0x75D010")]
	public float intensity;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float brightnessFactor;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xB9470C", Offset = "0xB9470C", VA = "0xB9470C")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xB94710", Offset = "0xB94710", VA = "0xB94710")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xB947D8", Offset = "0xB947D8", VA = "0xB947D8")]
	public Monochromize()
	{
	}
}
[Token(Token = "0x20000D0")]
public class MuzzleFlash : MonoBehaviour
{
	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool randomizeRotation;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool loop;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeCounter;

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xB97988", Offset = "0xB97988", VA = "0xB97988")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xB97A50", Offset = "0xB97A50", VA = "0xB97A50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xB97AC4", Offset = "0xB97AC4", VA = "0xB97AC4")]
	public void Show()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xB97AEC", Offset = "0xB97AEC", VA = "0xB97AEC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xB97B14", Offset = "0xB97B14", VA = "0xB97B14")]
	public MuzzleFlash()
	{
	}
}
[Token(Token = "0x20000D1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x758EC8", Offset = "0x758EC8")]
public class PulsingFlesh : MonoBehaviour
{
	[Token(Token = "0x4000762")]
	private const float highFreqScale = 100000f;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lowFreqScale;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D mask;

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x9F4574", Offset = "0x9F4574", VA = "0x9F4574")]
	private void Start()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x9F4578", Offset = "0x9F4578", VA = "0x9F4578")]
	public static void ApplyToMesh(Mesh mesh, float lowFreqScale, Texture2D mask)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x9F49F4", Offset = "0x9F49F4", VA = "0x9F49F4")]
	public PulsingFlesh()
	{
	}
}
[Token(Token = "0x20000D2")]
public class Shake : MonoBehaviour
{
	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float intensity;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float intensityDecayRate;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool applyTranslation;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 maxOffset;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool applyRotation;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxYaw;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxPitch;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxRoll;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float noiseFreq;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] perlinSeeds;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75D028", Offset = "0x75D028")]
	public bool _addLow;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75D06C", Offset = "0x75D06C")]
	public bool _addMedium;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75D0B0", Offset = "0x75D0B0")]
	public bool _addStrong;

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x911148", Offset = "0x911148", VA = "0x911148")]
	private void Start()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x9111C8", Offset = "0x9111C8", VA = "0x9111C8")]
	private void Update()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x911564", Offset = "0x911564", VA = "0x911564")]
	public void Add(float traumaIntensity = 0.2f)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x9115E4", Offset = "0x9115E4", VA = "0x9115E4")]
	public void AddLow()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x9115F0", Offset = "0x9115F0", VA = "0x9115F0")]
	public void AddMedium()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x9115F8", Offset = "0x9115F8", VA = "0x9115F8")]
	public void AddStrong()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x911604", Offset = "0x911604", VA = "0x911604")]
	public Shake()
	{
	}
}
[Token(Token = "0x20000D3")]
public class ShakeSource : MonoBehaviour
{
	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float intensity;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float period;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float range;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool requireVisible;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shake camShake;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer renderer;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timer;

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x9116C4", Offset = "0x9116C4", VA = "0x9116C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x911780", Offset = "0x911780", VA = "0x911780")]
	private void Update()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x9117E8", Offset = "0x9117E8", VA = "0x9117E8")]
	public void TriggerPulse()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x911A94", Offset = "0x911A94", VA = "0x911A94")]
	public ShakeSource()
	{
	}
}
[Token(Token = "0x20000D4")]
public class TeleportIconAnim : MonoBehaviour
{
	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scaleUpSpeed;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float auraPulse;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform iconObj;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform auraObj;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float auraVertScale;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool hiding;

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x9B6AEC", Offset = "0x9B6AEC", VA = "0x9B6AEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x9B6AF0", Offset = "0x9B6AF0", VA = "0x9B6AF0")]
	public void Show()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x9B6C30", Offset = "0x9B6C30", VA = "0x9B6C30")]
	public void Hide()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x9B6C58", Offset = "0x9B6C58", VA = "0x9B6C58")]
	private void Update()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x9B702C", Offset = "0x9B702C", VA = "0x9B702C")]
	public TeleportIconAnim()
	{
	}
}
[Token(Token = "0x20000D5")]
public class Tendril : MonoBehaviour, IRoomInfestationPart
{
	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool proceduralMesh;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minLength;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float length;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lengthFactor;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool animateLength;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float animateLengthSpeed;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minBaseRadius;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxBaseRadius;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float baseRadius;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float radiusFactor;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float minLengthFactor;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float minRadiusFactor;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int numSegments;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int numSides;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool multiBones;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool addColliders;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool addRagdoll;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x75D0F4", Offset = "0x75D0F4")]
	public float ragdollMass;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x75D12C", Offset = "0x75D12C")]
	public Rigidbody ragdollRoot;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool useRadiusCurve;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve radiusCurve;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float animAmplitudeFactor;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float animFrequencyFactor;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Mesh mesh;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SkinnedMeshRenderer renderer;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] animAmplitude;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector2[] animFreq;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float animPhaseOffset;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float animLengthTimer;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float animLengthTarget;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float animLengthTimerMin;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float animLengthTimerMax;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool ignoreMeltEvents;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	public bool ignoreAgentEvents;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float boneScaleOnHide;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float collapseScaleFactor;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D164", Offset = "0x75D164")]
	public bool bezierTarget;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform bezierTargetObj;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector3 bezierTargetPos;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public Vector3 bezierTargetNormal;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D19C", Offset = "0x75D19C")]
	public float spasmFactor;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private EventHub evHub;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool forceHidden;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Transform[] bones;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private CapsuleCollider[] colliders;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Rigidbody[] rBodies;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float[] customSegmentProgress;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3[] controlPoints;

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x9B7048", Offset = "0x9B7048", VA = "0x9B7048")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x9B7344", Offset = "0x9B7344", VA = "0x9B7344")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x9B7608", Offset = "0x9B7608", VA = "0x9B7608")]
	private void Start()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x9B76A8", Offset = "0x9B76A8", VA = "0x9B76A8")]
	private void CreateMesh()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x9B87E0", Offset = "0x9B87E0", VA = "0x9B87E0")]
	private void ProcessMesh()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x9B8FA4", Offset = "0x9B8FA4", VA = "0x9B8FA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x9B9270", Offset = "0x9B9270", VA = "0x9B9270")]
	private void UpdateBones(bool useBezier, Vector3 bTarget, Vector3 bTargetNormal)
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x9BA0F0", Offset = "0x9BA0F0", VA = "0x9BA0F0")]
	private void AddSpasms()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x9BA594", Offset = "0x9BA594", VA = "0x9BA594")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x9BA7AC", Offset = "0x9BA7AC", VA = "0x9BA7AC")]
	public Transform GetBone(int idx)
	{
		return null;
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x9BA7F8", Offset = "0x9BA7F8", VA = "0x9BA7F8")]
	public void SetHidden(bool isHidden)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x9BA804", Offset = "0x9BA804", VA = "0x9BA804")]
	private void OnAgentAppear()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x9BA80C", Offset = "0x9BA80C", VA = "0x9BA80C")]
	private void OnAgentDie()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x9BA818", Offset = "0x9BA818", VA = "0x9BA818")]
	private void OnAgentDisappear()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x9BA82C", Offset = "0x9BA82C", VA = "0x9BA82C")]
	public void SetHierarchy(bool inHierarchy)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x9BA8B4", Offset = "0x9BA8B4", VA = "0x9BA8B4")]
	public void SetCollidersEnabled(bool enabled)
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x9BA930", Offset = "0x9BA930", VA = "0x9BA930")]
	public bool ApplyDamage(ref Vector3 lastPos, float radius, LayerMask layerMask, int damage, Health.Faction faction, Health.KillSignature killSignature)
	{
		return default(bool);
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x9BAA6C", Offset = "0x9BAA6C", VA = "0x9BAA6C", Slot = "5")]
	public void SetInfestationLevel(float level)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x9BAAFC", Offset = "0x9BAAFC", VA = "0x9BAAFC")]
	public Tendril()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000660")]
	[Address(RVA = "0x9BABD0", Offset = "0x9BABD0", VA = "0x9BABD0", Slot = "4")]
	private GameObject IRoomInfestationPart.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x20000D6")]
public class VertexTendril : MonoBehaviour
{
	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minLength;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxLength;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float length;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float lengthFactor;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool animateLength;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float animateLengthSpeed;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minBaseRadius;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxBaseRadius;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float baseRadius;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float radiusFactor;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int numSegments;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int numSides;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool useRadiusCurve;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve radiusCurve;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float animAmplitudeFactor;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float animFrequencyFactor;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Mesh mesh;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MeshRenderer renderer;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] animAmplitude;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] animFreq;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float animPhaseOffset;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float animLengthTimer;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float animLengthTarget;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float animLengthTimerMin;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float animLengthTimerMax;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D1D4", Offset = "0x75D1D4")]
	public bool bezierTarget;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform bezierTargetObj;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 bezierTargetPos;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector3 bezierTargetNormal;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private EventHub evHub;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool forceHidden;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3[] verts;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3[] normals;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3[] controlPoints;

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xAB2EE0", Offset = "0xAB2EE0", VA = "0xAB2EE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xAB30B4", Offset = "0xAB30B4", VA = "0xAB30B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xAB325C", Offset = "0xAB325C", VA = "0xAB325C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xAB41D8", Offset = "0xAB41D8", VA = "0xAB41D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xAB380C", Offset = "0xAB380C", VA = "0xAB380C")]
	private void UpdatePositions()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xAB4428", Offset = "0xAB4428", VA = "0xAB4428")]
	private void UpdatePositionsBezier(Vector3 bTarget, Vector3 bTargetNormal)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xAB4F3C", Offset = "0xAB4F3C", VA = "0xAB4F3C")]
	private void OnMeltFXUp()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xAB4F44", Offset = "0xAB4F44", VA = "0xAB4F44")]
	private void OnMeltFXDownStart()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xAB4F50", Offset = "0xAB4F50", VA = "0xAB4F50")]
	private void OnMeltFXFullMelted()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xAB4F60", Offset = "0xAB4F60", VA = "0xAB4F60")]
	public VertexTendril()
	{
	}
}
[Token(Token = "0x20000D7")]
public class WarpJump : MonoBehaviour
{
	[Token(Token = "0x200035F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B9C8", Offset = "0x75B9C8")]
	private sealed class <Warp_co>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WarpJump <>4__this;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material targetSkybox;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action callbackMiddle;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <exposureStart>5__2;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <exposureEnd>5__3;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color <colorStart>5__4;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color <colorEnd>5__5;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <transFactor>5__6;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float <target>5__7;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float <progress>5__8;

		[Token(Token = "0x170001C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001930")]
			[Address(RVA = "0xAC20E8", Offset = "0xAC20E8", VA = "0xAC20E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001932")]
			[Address(RVA = "0xAC2150", Offset = "0xAC2150", VA = "0xAC2150", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xAC1BD4", Offset = "0xAC1BD4", VA = "0xAC1BD4")]
		[DebuggerHidden]
		public <Warp_co>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xAC1C10", Offset = "0xAC1C10", VA = "0xAC1C10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xAC1C14", Offset = "0xAC1C14", VA = "0xAC1C14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xAC20F0", Offset = "0xAC20F0", VA = "0xAC20F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve warpTransition;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float warpSpeed;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material warpSkybox;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform spaceObjs;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIGalaxyView galaxyViewConsole;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource warpSound;

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xAC1A84", Offset = "0xAC1A84", VA = "0xAC1A84")]
	private void Start()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xAC1AFC", Offset = "0xAC1AFC", VA = "0xAC1AFC")]
	public void Warp(Material targetSkybox, Action callbackMiddle)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xAC1B28", Offset = "0xAC1B28", VA = "0xAC1B28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x764D9C", Offset = "0x764D9C")]
	public IEnumerator Warp_co(Material targetSkybox, Action callbackMiddle)
	{
		return null;
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xAC1C00", Offset = "0xAC1C00", VA = "0xAC1C00")]
	public WarpJump()
	{
	}
}
[Token(Token = "0x20000D8")]
public class AnimEvents : MonoBehaviour
{
	[Token(Token = "0x600066F")]
	[Address(RVA = "0xB69B2C", Offset = "0xB69B2C", VA = "0xB69B2C")]
	public AnimEvents()
	{
	}
}
[Token(Token = "0x20000D9")]
public class AnimStateEvents : StateMachineBehaviour
{
	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _inState;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action onEnter;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action onExit;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EventHub evHub;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string eventEnter;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int eventEnterHash;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string eventExit;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int eventExitHash;

	[Token(Token = "0x17000081")]
	public bool InState
	{
		[Token(Token = "0x6000670")]
		[Address(RVA = "0xB6A468", Offset = "0xB6A468", VA = "0xB6A468")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xB6A470", Offset = "0xB6A470", VA = "0xB6A470", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xB6A524", Offset = "0xB6A524", VA = "0xB6A524", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xB6A5D4", Offset = "0xB6A5D4", VA = "0xB6A5D4")]
	public static void SetEventHub(Animator animator, EventHub hub)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xB6A6E0", Offset = "0xB6A6E0", VA = "0xB6A6E0")]
	public AnimStateEvents()
	{
	}
}
[Token(Token = "0x20000DA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x758F2C", Offset = "0x758F2C")]
public class AudioCue : ScriptableObject
{
	[Token(Token = "0x2000360")]
	public enum PlaybackType
	{
		[Token(Token = "0x4001996")]
		Random,
		[Token(Token = "0x4001997")]
		TrueRandom,
		[Token(Token = "0x4001998")]
		Sequential
	}

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75D20C", Offset = "0x75D20C")]
	public AudioClip[] clips;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75D244", Offset = "0x75D244")]
	public PlaybackType playbackType;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixerGroup mixerOutput;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loop;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float delay;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75D27C", Offset = "0x75D27C")]
	public int priority;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75D298", Offset = "0x75D298")]
	public float volume;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75D2B0", Offset = "0x75D2B0")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x75D2B0", Offset = "0x75D2B0")]
	public Vector2 pitch;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75D30C", Offset = "0x75D30C")]
	public bool spatialized;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75D344", Offset = "0x75D344")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x75D344", Offset = "0x75D344")]
	public Vector2 range;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75D3A4", Offset = "0x75D3A4")]
	public bool useCustomFalloffCurve;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve customFalloff;

	[NonSerialized]
	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int lastSelectedIdx;

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xB6C388", Offset = "0xB6C388", VA = "0xB6C388")]
	public AudioClip GetClip()
	{
		return null;
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xB6C470", Offset = "0xB6C470", VA = "0xB6C470")]
	public float GetPitch()
	{
		return default(float);
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xB6C47C", Offset = "0xB6C47C", VA = "0xB6C47C")]
	public float GetRangeMin()
	{
		return default(float);
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xB6C484", Offset = "0xB6C484", VA = "0xB6C484")]
	public float GetRangeMax()
	{
		return default(float);
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xB6C48C", Offset = "0xB6C48C", VA = "0xB6C48C")]
	public AudioSource Play(Vector3 position, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xB6C490", Offset = "0xB6C490", VA = "0xB6C490")]
	public AudioCue()
	{
	}
}
[Token(Token = "0x20000DB")]
public class AudioExt : Singleton<AudioExt>
{
	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int cacheSize;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float spatializeGain;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixer masterMixer;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioMixerGroup mixerGroupDefault;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve defaultFalloffCurve;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<AudioSource> freeSources;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<AudioSource> usedSources;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<AudioSource> freeSpatializedSources;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<AudioSource> usedSpatializedSources;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float masterVolume;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float volumeMultiplier;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float musicVolume;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool firstUpdate;

	[Token(Token = "0x17000082")]
	public float MasterVolume
	{
		[Token(Token = "0x600067B")]
		[Address(RVA = "0xB6C570", Offset = "0xB6C570", VA = "0xB6C570")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600067C")]
		[Address(RVA = "0xB6C578", Offset = "0xB6C578", VA = "0xB6C578")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public float VolumeMultiplier
	{
		[Token(Token = "0x600067D")]
		[Address(RVA = "0xB6C6E8", Offset = "0xB6C6E8", VA = "0xB6C6E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600067E")]
		[Address(RVA = "0xB6C6F0", Offset = "0xB6C6F0", VA = "0xB6C6F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public float MusicVolume
	{
		[Token(Token = "0x600067F")]
		[Address(RVA = "0xB6C764", Offset = "0xB6C764", VA = "0xB6C764")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000680")]
		[Address(RVA = "0xB6C76C", Offset = "0xB6C76C", VA = "0xB6C76C")]
		set
		{
		}
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xB6C7DC", Offset = "0xB6C7DC", VA = "0xB6C7DC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xB6C8DC", Offset = "0xB6C8DC", VA = "0xB6C8DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xB6CB30", Offset = "0xB6CB30", VA = "0xB6CB30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xB6C5EC", Offset = "0xB6C5EC", VA = "0xB6C5EC")]
	private void SetMixerVolume(float volume, string parameter = "MasterVolume", float maxDb = 0f, float zeroDb = -80f)
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xB6C880", Offset = "0xB6C880", VA = "0xB6C880")]
	private float GetMixerVolume(string parameter = "MasterVolume", float maxDb = 0f, float zeroDb = -80f)
	{
		return default(float);
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xB6CB34", Offset = "0xB6CB34", VA = "0xB6CB34")]
	public static float AttenuationFromVolume(float volume, float maxDb = 0f, float zeroDb = -80f)
	{
		return default(float);
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xB6CBDC", Offset = "0xB6CBDC", VA = "0xB6CBDC")]
	public static float VolumeFromAttenuation(float attenuationDb, float maxDb = 0f, float zeroDb = -80f)
	{
		return default(float);
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xB6CC74", Offset = "0xB6CC74", VA = "0xB6CC74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xB6D1DC", Offset = "0xB6D1DC", VA = "0xB6D1DC")]
	public static AudioSource PlayClipAtPoint(AudioClip clip, Vector3 position, float volume = 1f, bool spatialized = true, float maxRange = 25f)
	{
		return null;
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xB6D514", Offset = "0xB6D514", VA = "0xB6D514")]
	public static AudioSource PlayClipOnObject(AudioClip clip, Transform obj, Vector3 localPosition, float volume = 1f, bool spatialized = true, float maxRange = 25f)
	{
		return null;
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xB6D69C", Offset = "0xB6D69C", VA = "0xB6D69C")]
	public static AudioSource PlayClipAtPoint(AudioClip[] clips, Vector3 position, float volume = 1f, bool spatialized = true, float maxRange = 25f)
	{
		return null;
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xB6D770", Offset = "0xB6D770", VA = "0xB6D770")]
	public static AudioSource PlayClipOnObject(AudioClip[] clips, Transform obj, Vector3 localPosition, float volume = 1f, bool spatialized = true, float maxRange = 25f)
	{
		return null;
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xB5757C", Offset = "0xB5757C", VA = "0xB5757C")]
	public static AudioSource PlayCue(AudioCue cue, Vector3 position, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xB60FC8", Offset = "0xB60FC8", VA = "0xB60FC8")]
	public static AudioSource PlayClipAtPoint(AudioCue cue, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xB6D84C", Offset = "0xB6D84C", VA = "0xB6D84C")]
	public static AudioSource PlayClipOnObject(AudioCue cue, Transform obj, Vector3 localPosition)
	{
		return null;
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xB6D850", Offset = "0xB6D850", VA = "0xB6D850")]
	public static AudioSource PlayClipAtPoint(AudioCue cue, Vector3 position, float volume = 1f, float maxRange = 25f)
	{
		return null;
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xB6D8B8", Offset = "0xB6D8B8", VA = "0xB6D8B8")]
	public static AudioSource PlayClipOnObject(AudioCue cue, Transform obj, Vector3 localPosition, float volume = 1f, float maxRange = 25f)
	{
		return null;
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xB6D91C", Offset = "0xB6D91C", VA = "0xB6D91C")]
	public void StopAll(bool onlyLooping = false)
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xB6D33C", Offset = "0xB6D33C", VA = "0xB6D33C")]
	private AudioSource GetFreeSource(bool spatialized)
	{
		return null;
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xB6CFAC", Offset = "0xB6CFAC", VA = "0xB6CFAC")]
	private void SetFree(AudioSource src)
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xB6C9D8", Offset = "0xB6C9D8", VA = "0xB6C9D8")]
	private void BuildCache(int size, bool spatialized)
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xB6D420", Offset = "0xB6D420", VA = "0xB6D420")]
	private static void SetRange(AudioSource src, bool spatialized, float maxRange, float minRange = 1f)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xB6DC18", Offset = "0xB6DC18", VA = "0xB6DC18")]
	public AudioExt()
	{
	}
}
[Token(Token = "0x20000DC")]
public class CachedArray
{
	[Token(Token = "0x2000361")]
	private class CacheData
	{
		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ICollection> arraysStack;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numUsed;

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x92C988", Offset = "0x92C988", VA = "0x92C988")]
		public CacheData()
		{
		}
	}

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<Type, CacheData> cache;

	[Token(Token = "0x6000698")]
	public static T[] Get<T>(int minSize = 32)
	{
		return null;
	}

	[Token(Token = "0x6000699")]
	public static void Free<T>(T[] array)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x92C690", Offset = "0x92C690", VA = "0x92C690")]
	public static void FreeAll()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x92C908", Offset = "0x92C908", VA = "0x92C908")]
	public CachedArray()
	{
	}
}
[Token(Token = "0x20000DD")]
public class CachedList
{
	[Token(Token = "0x2000362")]
	private class CacheData
	{
		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<IList> listsStack;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numUsed;

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x92CD04", Offset = "0x92CD04", VA = "0x92CD04")]
		public CacheData()
		{
		}
	}

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<Type, CacheData> cache;

	[Token(Token = "0x600069D")]
	public static List<T> Get<T>()
	{
		return null;
	}

	[Token(Token = "0x600069E")]
	public static void Free<T>(List<T> list)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x92CA0C", Offset = "0x92CA0C", VA = "0x92CA0C")]
	public static void FreeAll()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x92CC84", Offset = "0x92CC84", VA = "0x92CC84")]
	public CachedList()
	{
	}
}
[Token(Token = "0x20000DE")]
public class CamCenter : TimeIndependentBehaviour
{
	[Token(Token = "0x2000363")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B9D8", Offset = "0x75B9D8")]
	private sealed class <Recenter_co>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CamCenter <>4__this;

		[Token(Token = "0x170001CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001938")]
			[Address(RVA = "0x92D820", Offset = "0x92D820", VA = "0x92D820", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600193A")]
			[Address(RVA = "0x92D888", Offset = "0x92D888", VA = "0x92D888", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x92D720", Offset = "0x92D720", VA = "0x92D720")]
		[DebuggerHidden]
		public <Recenter_co>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x92D76C", Offset = "0x92D76C", VA = "0x92D76C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x92D770", Offset = "0x92D770", VA = "0x92D770", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x92D828", Offset = "0x92D828", VA = "0x92D828", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform lookDirection;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform centerObj;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 centerPos;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool keepCentered;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxAngle;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool useDefaultDistance;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float desiredDistance;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool recenterOnStart;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool recenterOnHMDReset;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool testCollisions;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LayerMask collisionMask;

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x92CD88", Offset = "0x92CD88", VA = "0x92CD88")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x92CFF0", Offset = "0x92CFF0", VA = "0x92CFF0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x92D4B0", Offset = "0x92D4B0", VA = "0x92D4B0")]
	public void Recenter()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x92CF74", Offset = "0x92CF74", VA = "0x92CF74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x764E00", Offset = "0x764E00")]
	private IEnumerator Recenter_co()
	{
		return null;
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x92D74C", Offset = "0x92D74C", VA = "0x92D74C")]
	public CamCenter()
	{
	}
}
[Token(Token = "0x20000DF")]
public class DebugBounds : MonoBehaviour
{
	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x97108C", Offset = "0x97108C", VA = "0x97108C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x9711D8", Offset = "0x9711D8", VA = "0x9711D8")]
	public DebugBounds()
	{
	}
}
[Token(Token = "0x20000E0")]
public class DbgUtils
{
	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x971010", Offset = "0x971010", VA = "0x971010")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x764E64", Offset = "0x764E64")]
	public static void Assert(bool condition)
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x971084", Offset = "0x971084", VA = "0x971084")]
	public DbgUtils()
	{
	}
}
[Token(Token = "0x20000E1")]
public class DestroyOnPlay : MonoBehaviour
{
	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool randomize;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x75D3DC", Offset = "0x75D3DC")]
	public float stayChance;

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x9728F0", Offset = "0x9728F0", VA = "0x9728F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x972994", Offset = "0x972994", VA = "0x972994")]
	public DestroyOnPlay()
	{
	}
}
[Token(Token = "0x20000E2")]
public class DiamondSquare
{
	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x97299C", Offset = "0x97299C", VA = "0x97299C")]
	public static float[] Generate(int size, System.Random rgen)
	{
		return null;
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x9729AC", Offset = "0x9729AC", VA = "0x9729AC")]
	public static float[] Generate(int size, System.Random rgen, float range, float hardness)
	{
		return null;
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x972E2C", Offset = "0x972E2C", VA = "0x972E2C")]
	private static void ComputeColor(Point center, Point[] points, float range, ref float[] map, int size, System.Random rgen)
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x97307C", Offset = "0x97307C", VA = "0x97307C")]
	public DiamondSquare()
	{
	}
}
[Token(Token = "0x20000E3")]
public class EventHub : MonoBehaviour
{
	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, Action> eventsDict;

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xA1C4EC", Offset = "0xA1C4EC", VA = "0xA1C4EC")]
	public void Listen(int key, Action func)
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xA1C610", Offset = "0xA1C610", VA = "0xA1C610")]
	public void Listen(string key, Action func)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xA1C648", Offset = "0xA1C648", VA = "0xA1C648")]
	public void StopListening(int key, Action func)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xA1C724", Offset = "0xA1C724", VA = "0xA1C724")]
	public void StopListening(string key, Action func)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xA1C75C", Offset = "0xA1C75C", VA = "0xA1C75C")]
	public void Trigger(int key)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xA1C7E4", Offset = "0xA1C7E4", VA = "0xA1C7E4")]
	public void Trigger(string key)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xA1C814", Offset = "0xA1C814", VA = "0xA1C814")]
	public static EventHub Get(GameObject obj, bool checkAncestors = false)
	{
		return null;
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xA1C914", Offset = "0xA1C914", VA = "0xA1C914")]
	public static EventHub GetOrAdd(GameObject obj, bool checkAncestors = false)
	{
		return null;
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xA1C9CC", Offset = "0xA1C9CC", VA = "0xA1C9CC")]
	public EventHub()
	{
	}
}
[Token(Token = "0x20000E4")]
public static class ArrayExt
{
	[Token(Token = "0x60006BA")]
	public static T[] ChangeSize<T>(this T[] array, int newSize)
	{
		return null;
	}

	[Token(Token = "0x60006BB")]
	public static T[] AddElement<T>(this T[] array, T newElement)
	{
		return null;
	}
}
[Token(Token = "0x20000E5")]
public static class BoxColliderExt
{
	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x92B49C", Offset = "0x92B49C", VA = "0x92B49C")]
	public static bool ContainsPoint(this BoxCollider collider, Vector3 point)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000E6")]
public static class ColorExt
{
	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x92DDE8", Offset = "0x92DDE8", VA = "0x92DDE8")]
	public static Vector3 ToVector3_RGB(this Color color)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x92DE1C", Offset = "0x92DE1C", VA = "0x92DE1C")]
	public static Vector4 ToVector4_RGBA(this Color color)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x92DE4C", Offset = "0x92DE4C", VA = "0x92DE4C")]
	public static Vector4 ToVector4_ARGB(this Color color)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x92DE90", Offset = "0x92DE90", VA = "0x92DE90")]
	public static float Luminance(this Color color)
	{
		return default(float);
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x92DF94", Offset = "0x92DF94", VA = "0x92DF94")]
	public static float LuminanceAlpha(this Color color)
	{
		return default(float);
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x92E0A8", Offset = "0x92E0A8", VA = "0x92E0A8")]
	public static Color FromValue(uint value)
	{
		return default(Color);
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x92E0E4", Offset = "0x92E0E4", VA = "0x92E0E4")]
	public static uint ToValue(this Color color)
	{
		return default(uint);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x92E10C", Offset = "0x92E10C", VA = "0x92E10C")]
	public static string ToHex(this Color color)
	{
		return null;
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x92E204", Offset = "0x92E204", VA = "0x92E204")]
	public static Color FromHexString(string hex)
	{
		return default(Color);
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x92E2EC", Offset = "0x92E2EC", VA = "0x92E2EC")]
	public static Color WithRed(this Color color, float newRed)
	{
		return default(Color);
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x92E320", Offset = "0x92E320", VA = "0x92E320")]
	public static Color WithGreen(this Color color, float newGreen)
	{
		return default(Color);
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x92E354", Offset = "0x92E354", VA = "0x92E354")]
	public static Color WithBlue(this Color color, float newBlue)
	{
		return default(Color);
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x92E388", Offset = "0x92E388", VA = "0x92E388")]
	public static Color WithAlpha(this Color color, float newAlpha)
	{
		return default(Color);
	}
}
[Token(Token = "0x20000E7")]
public static class DebugExt
{
	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x9711E0", Offset = "0x9711E0", VA = "0x9711E0")]
	public static void DrawCube(Vector3 pos, Color col, Vector3 scale, float duration = 0f)
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x9711E4", Offset = "0x9711E4", VA = "0x9711E4")]
	public static void DrawRect(Rect rect, Color col, float duration = 0f)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x9711E8", Offset = "0x9711E8", VA = "0x9711E8")]
	public static void DrawRect(Vector3 pos, Color col, Vector3 scale, float duration = 0f)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x960AB0", Offset = "0x960AB0", VA = "0x960AB0")]
	public static void DrawPoint(Vector3 pos, Color col, float scale, float duration = 0f)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x960AB4", Offset = "0x960AB4", VA = "0x960AB4")]
	public static void DrawSphere(Vector3 pos, Color col, float radius = 1f, float duration = 0f)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x9711EC", Offset = "0x9711EC", VA = "0x9711EC")]
	public static void DrawArc(Vector3 center, Vector3 forward, Vector3 up, float angle, float radius, Color col, int segments = 5, float duration = 0f)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x9711F0", Offset = "0x9711F0", VA = "0x9711F0")]
	public static void DrawCapsule(Vector3 start, Vector3 end, float radius, Color col, float duration = 0f)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x9711F4", Offset = "0x9711F4", VA = "0x9711F4")]
	public static void DrawBezier(Vector3 vP1, Vector3 vP2, Vector3 vP3, Vector3 vP4, Color col, float duration = 0f)
	{
	}
}
[Token(Token = "0x20000E8")]
public static class LayerMaskExtensions
{
	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xA33CA4", Offset = "0xA33CA4", VA = "0xA33CA4")]
	public static LayerMask Create(params string[] layerNames)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xA33D70", Offset = "0xA33D70", VA = "0xA33D70")]
	public static LayerMask Create(params int[] layerNumbers)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xA33E2C", Offset = "0xA33E2C", VA = "0xA33E2C")]
	public static LayerMask LayerToMask(int layer)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xA33CBC", Offset = "0xA33CBC", VA = "0xA33CBC")]
	public static LayerMask NamesToMask(params string[] layerNames)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xA33E50", Offset = "0xA33E50", VA = "0xA33E50")]
	public static LayerMask NameToMask(string layerName)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xA33D88", Offset = "0xA33D88", VA = "0xA33D88")]
	public static LayerMask LayerNumbersToMask(params int[] layerNumbers)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xA33EAC", Offset = "0xA33EAC", VA = "0xA33EAC")]
	public static LayerMask Inverse(this LayerMask original)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xA33ED8", Offset = "0xA33ED8", VA = "0xA33ED8")]
	public static LayerMask AddToMask(this LayerMask original, params string[] layerNames)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xA33F28", Offset = "0xA33F28", VA = "0xA33F28")]
	public static LayerMask RemoveFromMask(this LayerMask original, params string[] layerNames)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xA33F94", Offset = "0xA33F94", VA = "0xA33F94")]
	public static string[] MaskToNames(this LayerMask original)
	{
		return null;
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xA34088", Offset = "0xA34088", VA = "0xA34088")]
	public static string MaskToString(this LayerMask original)
	{
		return null;
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xA340E8", Offset = "0xA340E8", VA = "0xA340E8")]
	public static string MaskToString(this LayerMask original, string delimiter)
	{
		return null;
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xA34118", Offset = "0xA34118", VA = "0xA34118")]
	public static bool Compare(GameObject go, LayerMask layerMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xA34164", Offset = "0xA34164", VA = "0xA34164")]
	public static bool Compare(this LayerMask layerMask, GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xA341B4", Offset = "0xA341B4", VA = "0xA341B4")]
	public static bool Compare(this LayerMask layerMask, int layer)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000E9")]
public static class ListExtensions
{
	[Token(Token = "0x60006E1")]
	public static void Reverse_NoHeapAlloc<T>(this List<T> list)
	{
	}

	[Token(Token = "0x60006E2")]
	public static int GetOrderIndependentHashCode<T>(this List<T> list)
	{
		return default(int);
	}

	[Token(Token = "0x60006E3")]
	public static void AddIfNotInside<T>(this List<T> list, T item)
	{
	}

	[Token(Token = "0x60006E4")]
	public static void Shuffle<T>(this List<T> list)
	{
	}
}
[Token(Token = "0x20000EA")]
public static class Matrix4x4Ext
{
	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xC601B4", Offset = "0xC601B4", VA = "0xC601B4")]
	public static Vector3 GetTranslation(this Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xC60258", Offset = "0xC60258", VA = "0xC60258")]
	public static Quaternion GetRotation(this Matrix4x4 m)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xC60374", Offset = "0xC60374", VA = "0xC60374")]
	public static Vector3 GetScale(this Matrix4x4 m)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20000EB")]
public static class ParticleSystemExt
{
	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x9E4330", Offset = "0x9E4330", VA = "0x9E4330")]
	public static void SetSubsystemsEmission(this ParticleSystem sys, bool enabled)
	{
	}
}
[Token(Token = "0x20000EC")]
public static class PhysicsExt
{
	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x9E61B0", Offset = "0x9E61B0", VA = "0x9E61B0")]
	public static int ConeCastNonAlloc(Vector3 origin, Vector3 direction, float distance, float angle, RaycastHit[] results, int layerMask)
	{
		return default(int);
	}
}
[Token(Token = "0x20000ED")]
public static class SphericalHarmonicsL2Ext
{
	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x9B27DC", Offset = "0x9B27DC", VA = "0x9B27DC")]
	public static SphericalHarmonicsL2 Rotate(this SphericalHarmonicsL2 sph, Quaternion qRot)
	{
		return default(SphericalHarmonicsL2);
	}
}
[Token(Token = "0x20000EE")]
public class StringBuilderEx
{
	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public StringBuilder Builder;

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x9B4A58", Offset = "0x9B4A58", VA = "0x9B4A58")]
	public StringBuilderEx(int capacity)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x9B4AE0", Offset = "0x9B4AE0", VA = "0x9B4AE0")]
	public StringBuilderEx(int capacity, int maxCapacity)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x9B4ADC", Offset = "0x9B4ADC", VA = "0x9B4ADC")]
	private void InitInnerStr()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x9B4B6C", Offset = "0x9B4B6C", VA = "0x9B4B6C")]
	public StringBuilder Get()
	{
		return null;
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x9B4B74", Offset = "0x9B4B74", VA = "0x9B4B74", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x20000EF")]
public static class StringBuilderExtensions
{
	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly char[] ms_digits;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly uint ms_default_decimal_places;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly char ms_default_pad_char;

	[Token(Token = "0x60006F0")]
	public static StringBuilder ConcatFormat<A>(this StringBuilder string_builder, string format_string, A arg1) where A : IConvertible
	{
		return null;
	}

	[Token(Token = "0x60006F1")]
	public static StringBuilder ConcatFormat<A, B>(this StringBuilder string_builder, string format_string, A arg1, B arg2) where A : IConvertible where B : IConvertible
	{
		return null;
	}

	[Token(Token = "0x60006F2")]
	public static StringBuilder ConcatFormat<A, B, C>(this StringBuilder string_builder, string format_string, A arg1, B arg2, C arg3) where A : IConvertible where B : IConvertible where C : IConvertible
	{
		return null;
	}

	[Token(Token = "0x60006F3")]
	public static StringBuilder ConcatFormat<A, B, C, D>(this StringBuilder string_builder, string format_string, A arg1, B arg2, C arg3, D arg4) where A : IConvertible where B : IConvertible where C : IConvertible where D : IConvertible
	{
		return null;
	}

	[Token(Token = "0x60006F4")]
	private static void ConcatFormatValue<T>(this StringBuilder string_builder, T arg, uint padding, uint base_value, uint decimal_places) where T : IConvertible
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x9B4B94", Offset = "0x9B4B94", VA = "0x9B4B94")]
	public static StringBuilder Concat(this StringBuilder string_builder, uint uint_val, uint pad_amount, char pad_char, uint base_val)
	{
		return null;
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x9B4CFC", Offset = "0x9B4CFC", VA = "0x9B4CFC")]
	public static StringBuilder Concat(this StringBuilder string_builder, uint uint_val)
	{
		return null;
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x9B4D84", Offset = "0x9B4D84", VA = "0x9B4D84")]
	public static StringBuilder Concat(this StringBuilder string_builder, uint uint_val, uint pad_amount)
	{
		return null;
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x9B4E10", Offset = "0x9B4E10", VA = "0x9B4E10")]
	public static StringBuilder Concat(this StringBuilder string_builder, uint uint_val, uint pad_amount, char pad_char)
	{
		return null;
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x9B4EA0", Offset = "0x9B4EA0", VA = "0x9B4EA0")]
	public static StringBuilder Concat(this StringBuilder string_builder, int int_val, uint pad_amount, char pad_char, uint base_val)
	{
		return null;
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x9B4F64", Offset = "0x9B4F64", VA = "0x9B4F64")]
	public static StringBuilder Concat(this StringBuilder string_builder, int int_val)
	{
		return null;
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x9B4FEC", Offset = "0x9B4FEC", VA = "0x9B4FEC")]
	public static StringBuilder Concat(this StringBuilder string_builder, int int_val, uint pad_amount)
	{
		return null;
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x9B5078", Offset = "0x9B5078", VA = "0x9B5078")]
	public static StringBuilder Concat(this StringBuilder string_builder, int int_val, uint pad_amount, char pad_char)
	{
		return null;
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x9B5108", Offset = "0x9B5108", VA = "0x9B5108")]
	public static StringBuilder Concat(this StringBuilder string_builder, float float_val, uint decimal_places, uint pad_amount, char pad_char)
	{
		return null;
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x9B52D8", Offset = "0x9B52D8", VA = "0x9B52D8")]
	public static StringBuilder Concat(this StringBuilder string_builder, float float_val)
	{
		return null;
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x9B5360", Offset = "0x9B5360", VA = "0x9B5360")]
	public static StringBuilder Concat(this StringBuilder string_builder, float float_val, uint decimal_places)
	{
		return null;
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x9B53F4", Offset = "0x9B53F4", VA = "0x9B53F4")]
	public static StringBuilder Concat(this StringBuilder string_builder, float float_val, uint decimal_places, uint pad_amount)
	{
		return null;
	}
}
[Token(Token = "0x20000F0")]
public static class TextureExt
{
	[Token(Token = "0x6000702")]
	[Address(RVA = "0x9C8808", Offset = "0x9C8808", VA = "0x9C8808")]
	public static void SaveToFile(this Texture2D texture, string filename)
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x9C88CC", Offset = "0x9C88CC", VA = "0x9C88CC")]
	public static void SaveToFileEXR(this Texture2D texture, string filename, Texture2D.EXRFlags flags = Texture2D.EXRFlags.None)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x9C8998", Offset = "0x9C8998", VA = "0x9C8998")]
	public static Texture2D ToTexture2D(this RenderTexture renderTex, bool mipmap = false, bool linear = true, TextureFormat format = TextureFormat.RGBA32)
	{
		return null;
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x9C8B04", Offset = "0x9C8B04", VA = "0x9C8B04")]
	public static Texture2D ToTexture2D(this RenderTexture renderTex, Texture2D destTex)
	{
		return null;
	}
}
[Token(Token = "0x20000F1")]
public static class TransformExt
{
	[Token(Token = "0x6000706")]
	[Address(RVA = "0x9C9164", Offset = "0x9C9164", VA = "0x9C9164")]
	public static bool IsAncestor(this Transform parent, Transform obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x9C924C", Offset = "0x9C924C", VA = "0x9C924C")]
	public static Transform FindChildRecursive(this Transform parent, string name, bool exactMatch)
	{
		return null;
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x9C95AC", Offset = "0x9C95AC", VA = "0x9C95AC")]
	public static int FindChildrenRecursive(this Transform parent, string name, List<Transform> children, bool exactMatch = false)
	{
		return default(int);
	}
}
[Token(Token = "0x20000F2")]
public static class Vector2Ext
{
	[Token(Token = "0x6000709")]
	[Address(RVA = "0xAB1238", Offset = "0xAB1238", VA = "0xAB1238")]
	public static Vector2 MajorAxis(this Vector2 vec)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xAB12FC", Offset = "0xAB12FC", VA = "0xAB12FC")]
	public static bool Approximately(this Vector2 v1, Vector2 v2)
	{
		return default(bool);
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xAB13C8", Offset = "0xAB13C8", VA = "0xAB13C8")]
	public static Vector2 WithX(this Vector2 v, float newX)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xAB13F8", Offset = "0xAB13F8", VA = "0xAB13F8")]
	public static Vector2 WithY(this Vector2 v, float newY)
	{
		return default(Vector2);
	}
}
[Token(Token = "0x20000F3")]
public static class Vector3Ext
{
	[Token(Token = "0x600070D")]
	[Address(RVA = "0xAB1428", Offset = "0xAB1428", VA = "0xAB1428")]
	public static Vector3 GroundNormalize(this Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xAB1460", Offset = "0xAB1460", VA = "0xAB1460")]
	public static Vector3 ToGroundNormalized(this Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xAB1498", Offset = "0xAB1498", VA = "0xAB1498")]
	public static float magnitudeGround(this Vector3 vec)
	{
		return default(float);
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xAB151C", Offset = "0xAB151C", VA = "0xAB151C")]
	public static float sqrMagnitudeGround(this Vector3 vec)
	{
		return default(float);
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xAB14E4", Offset = "0xAB14E4", VA = "0xAB14E4")]
	public static Vector3 GroundVector(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xAB1568", Offset = "0xAB1568", VA = "0xAB1568")]
	public static Vector3 GroundVector(Vector3 to, Vector3 from)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xAB1674", Offset = "0xAB1674", VA = "0xAB1674")]
	public static Vector3 MajorAxis(this Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xAB17A0", Offset = "0xAB17A0", VA = "0xAB17A0")]
	public static float MaxComponent(this Vector3 vec)
	{
		return default(float);
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xAB1830", Offset = "0xAB1830", VA = "0xAB1830")]
	public static float MinComponent(this Vector3 vec)
	{
		return default(float);
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xAB18C0", Offset = "0xAB18C0", VA = "0xAB18C0")]
	public static Vector3 Abs(this Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xAB1968", Offset = "0xAB1968", VA = "0xAB1968")]
	public static bool Approximately(this Vector3 v1, Vector3 v2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xAB1A74", Offset = "0xAB1A74", VA = "0xAB1A74")]
	public static Vector3 Divide(this Vector3 v1, Vector3 v2)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xAB1AB4", Offset = "0xAB1AB4", VA = "0xAB1AB4")]
	public static Vector3 Clamp(this Vector3 vec, float min, float max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xAB1BB0", Offset = "0xAB1BB0", VA = "0xAB1BB0")]
	public static Vector3 WithX(this Vector3 v, float newX)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xAB163C", Offset = "0xAB163C", VA = "0xAB163C")]
	public static Vector3 WithY(this Vector3 v, float newY)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xAABBF0", Offset = "0xAABBF0", VA = "0xAABBF0")]
	public static Vector3 WithZ(this Vector3 v, float newZ)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xAB1BE8", Offset = "0xAB1BE8", VA = "0xAB1BE8")]
	public static Vector2 xy(this Vector3 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xAB1C14", Offset = "0xAB1C14", VA = "0xAB1C14")]
	public static Vector2 xz(this Vector3 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xAB1C44", Offset = "0xAB1C44", VA = "0xAB1C44")]
	public static Vector2 yz(this Vector3 v)
	{
		return default(Vector2);
	}
}
[Token(Token = "0x20000F4")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x759040", Offset = "0x759040")]
public class FSM
{
	[Token(Token = "0x2000364")]
	public struct State : IEquatable<State>, IEqualityComparer<State>
	{
		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int code;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isDefault;

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xA1F7B4", Offset = "0xA1F7B4", VA = "0xA1F7B4")]
		public State(string name, bool isDefault = false)
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xA1F800", Offset = "0xA1F800", VA = "0xA1F800")]
		public State(bool isDefault = false)
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xA1F1FC", Offset = "0xA1F1FC", VA = "0xA1F1FC", Slot = "4")]
		public bool Equals(State x)
		{
			return default(bool);
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xA1F838", Offset = "0xA1F838", VA = "0xA1F838", Slot = "5")]
		public bool Equals(State x, State y)
		{
			return default(bool);
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xA1F84C", Offset = "0xA1F84C", VA = "0xA1F84C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xA1F994", Offset = "0xA1F994", VA = "0xA1F994", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xA1F99C", Offset = "0xA1F99C", VA = "0xA1F99C", Slot = "6")]
		public int GetHashCode(State obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xA17068", Offset = "0xA17068", VA = "0xA17068")]
		public static bool operator ==(State x, State y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xA186DC", Offset = "0xA186DC", VA = "0xA186DC")]
		public static bool operator !=(State x, State y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000365")]
	public class StateInfo
	{
		[Token(Token = "0x200048E")]
		public delegate void StateDelegate();

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StateDelegate Enter;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StateDelegate Exit;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StateDelegate Update;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StateDelegate FixedUpdate;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public StateDelegate LateUpdate;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public StateDelegate OnTimer;

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xA1E638", Offset = "0xA1E638", VA = "0xA1E638")]
		public StateInfo()
		{
		}
	}

	[Token(Token = "0x2000366")]
	public class StateContainer
	{
		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<State> _statesList;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _defaultIdx;

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xA17150", Offset = "0xA17150", VA = "0xA17150")]
		public StateContainer()
		{
		}
	}

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<State, StateInfo> states;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StateInfo alwaysDelegates;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isInitialized;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private State currentState;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private State previousState;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private State nextState;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private StateInfo currentInfo;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private State defaultState;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float timer;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool timerActive;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool timerLocal;

	[Token(Token = "0x17000085")]
	public bool IsInitialized
	{
		[Token(Token = "0x6000720")]
		[Address(RVA = "0xA1E530", Offset = "0xA1E530", VA = "0xA1E530")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000086")]
	public StateInfo Item
	{
		[Token(Token = "0x6000721")]
		[Address(RVA = "0xA1E538", Offset = "0xA1E538", VA = "0xA1E538")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000722")]
		[Address(RVA = "0xA1E6B8", Offset = "0xA1E6B8", VA = "0xA1E6B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public State CurrentState
	{
		[Token(Token = "0x6000723")]
		[Address(RVA = "0xA1E754", Offset = "0xA1E754", VA = "0xA1E754")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x6000724")]
		[Address(RVA = "0xA1E768", Offset = "0xA1E768", VA = "0xA1E768")]
		set
		{
		}
	}

	[Token(Token = "0x17000088")]
	public State PreviousState
	{
		[Token(Token = "0x6000725")]
		[Address(RVA = "0xA1E8E8", Offset = "0xA1E8E8", VA = "0xA1E8E8")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000089")]
	public State NextState
	{
		[Token(Token = "0x6000726")]
		[Address(RVA = "0xA1E8FC", Offset = "0xA1E8FC", VA = "0xA1E8FC")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xA1E910", Offset = "0xA1E910", VA = "0xA1E910")]
	public FSM()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xA1E9DC", Offset = "0xA1E9DC", VA = "0xA1E9DC")]
	public void Populate(object owner)
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xA1EC7C", Offset = "0xA1EC7C", VA = "0xA1EC7C")]
	public StateInfo Add(State s, [Optional] StateInfo.StateDelegate enter, [Optional] StateInfo.StateDelegate update, [Optional] StateInfo.StateDelegate exit, [Optional] StateInfo.StateDelegate onTimer)
	{
		return null;
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xA1EDB8", Offset = "0xA1EDB8", VA = "0xA1EDB8")]
	public StateInfo AddAlways([Optional] StateInfo.StateDelegate enter, [Optional] StateInfo.StateDelegate update, [Optional] StateInfo.StateDelegate exit, [Optional] StateInfo.StateDelegate onTimer)
	{
		return null;
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xA1EE3C", Offset = "0xA1EE3C", VA = "0xA1EE3C")]
	public void Add(StateContainer container)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xA1EFD8", Offset = "0xA1EFD8", VA = "0xA1EFD8")]
	public void Clear()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xA1F04C", Offset = "0xA1F04C", VA = "0xA1F04C")]
	public void ClearTimer()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xA1F058", Offset = "0xA1F058", VA = "0xA1F058")]
	public void SetTimer(float time, bool local = true)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xA1F070", Offset = "0xA1F070", VA = "0xA1F070")]
	public bool HasActiveTimer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xA1F078", Offset = "0xA1F078", VA = "0xA1F078")]
	public void Init(State initState)
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xA1E798", Offset = "0xA1E798", VA = "0xA1E798")]
	public void SetState(State newState)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xA1F25C", Offset = "0xA1F25C", VA = "0xA1F25C")]
	public State GetState()
	{
		return default(State);
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xA1EB04", Offset = "0xA1EB04", VA = "0xA1EB04")]
	private StateInfo FindDelegates(object owner, StateInfo sInfo, string stateName)
	{
		return null;
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xA1F270", Offset = "0xA1F270", VA = "0xA1F270")]
	private StateInfo.StateDelegate FindDelegate(object owner, string stateName, string type)
	{
		return null;
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xA1F388", Offset = "0xA1F388", VA = "0xA1F388")]
	public bool HasUpdateDelegate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xA1F3C0", Offset = "0xA1F3C0", VA = "0xA1F3C0")]
	public bool HasFixedUpdateDelegate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xA1F3F8", Offset = "0xA1F3F8", VA = "0xA1F3F8")]
	public bool HasLateUpdateDelegate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xA1F1B0", Offset = "0xA1F1B0", VA = "0xA1F1B0")]
	private void OnEnter()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xA1F210", Offset = "0xA1F210", VA = "0xA1F210")]
	private void OnExit()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xA1F63C", Offset = "0xA1F63C", VA = "0xA1F63C")]
	public void Update()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xA1F71C", Offset = "0xA1F71C", VA = "0xA1F71C")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xA1F768", Offset = "0xA1F768", VA = "0xA1F768")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xA1F6D0", Offset = "0xA1F6D0", VA = "0xA1F6D0")]
	public void OnTimer()
	{
	}
}
[Token(Token = "0x20000F5")]
public class FSMComponent : MonoBehaviour, IFSMTimer
{
	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected FSM fsm;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string curState;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int updateTask;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int fixedUpdateTask;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lateUpdateTask;

	[Token(Token = "0x1700008A")]
	public FSM.State State
	{
		[Token(Token = "0x6000742")]
		[Address(RVA = "0xA17040", Offset = "0xA17040", VA = "0xA17040")]
		get
		{
			return default(FSM.State);
		}
		[Token(Token = "0x6000743")]
		[Address(RVA = "0xA1707C", Offset = "0xA1707C", VA = "0xA1707C")]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public FSM.State PreviousState
	{
		[Token(Token = "0x6000744")]
		[Address(RVA = "0xA1FC8C", Offset = "0xA1FC8C", VA = "0xA1FC8C")]
		get
		{
			return default(FSM.State);
		}
	}

	[Token(Token = "0x1700008C")]
	public FSM.State NextState
	{
		[Token(Token = "0x6000745")]
		[Address(RVA = "0xA1FCB4", Offset = "0xA1FCB4", VA = "0xA1FCB4")]
		get
		{
			return default(FSM.State);
		}
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xA17604", Offset = "0xA17604", VA = "0xA17604")]
	protected void AddStates(FSM.StateContainer states)
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xA1F9F0", Offset = "0xA1F9F0", VA = "0xA1F9F0")]
	protected FSM.StateInfo AddState(FSM.State s, [Optional] FSM.StateInfo.StateDelegate enter, [Optional] FSM.StateInfo.StateDelegate update, [Optional] FSM.StateInfo.StateDelegate exit, [Optional] FSM.StateInfo.StateDelegate onTimer)
	{
		return null;
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xA1FAF4", Offset = "0xA1FAF4", VA = "0xA1FAF4")]
	protected FSM.StateInfo AddAlways([Optional] FSM.StateInfo.StateDelegate enter, [Optional] FSM.StateInfo.StateDelegate update, [Optional] FSM.StateInfo.StateDelegate exit, [Optional] FSM.StateInfo.StateDelegate onTimer)
	{
		return null;
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xA17A24", Offset = "0xA17A24", VA = "0xA17A24")]
	protected void Init(FSM.State startState)
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xA188BC", Offset = "0xA188BC", VA = "0xA188BC")]
	protected void SetState(FSM.State newState)
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xA1FCDC", Offset = "0xA1FCDC", VA = "0xA1FCDC")]
	protected FSM.State GetState()
	{
		return default(FSM.State);
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xA1FD04", Offset = "0xA1FD04", VA = "0xA1FD04", Slot = "6")]
	protected virtual void UpdateTask()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xA1FD1C", Offset = "0xA1FD1C", VA = "0xA1FD1C", Slot = "7")]
	protected virtual void FixedUpdateTask()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xA1FD34", Offset = "0xA1FD34", VA = "0xA1FD34", Slot = "8")]
	protected virtual void LateUpdateTask()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xA1FBA0", Offset = "0xA1FBA0", VA = "0xA1FBA0")]
	private void SubscribeTasks()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xA1FD4C", Offset = "0xA1FD4C", VA = "0xA1FD4C")]
	private void SubscribeUpdateTask()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xA1FEDC", Offset = "0xA1FEDC", VA = "0xA1FEDC")]
	private void SubscribeFixedUpdateTask()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xA1FFA8", Offset = "0xA1FFA8", VA = "0xA1FFA8")]
	private void SubscribeLateUpdateTask()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xA1FE18", Offset = "0xA1FE18", VA = "0xA1FE18")]
	private int UnsubscribeTask(int taskId)
	{
		return default(int);
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xA177D8", Offset = "0xA177D8", VA = "0xA177D8", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xA1790C", Offset = "0xA1790C", VA = "0xA1790C", Slot = "10")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xA20074", Offset = "0xA20074", VA = "0xA20074", Slot = "4")]
	public void ClearTimer()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xA19CF8", Offset = "0xA19CF8", VA = "0xA19CF8", Slot = "5")]
	public void SetTimer(float time, bool local = true)
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xA18944", Offset = "0xA18944", VA = "0xA18944")]
	public FSMComponent()
	{
	}
}
[Token(Token = "0x20000F6")]
public class FSMTest : FSMComponent
{
	[Token(Token = "0x2000367")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State StateOne;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State StateTwo;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State StateThree;

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xA20388", Offset = "0xA20388", VA = "0xA20388")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int counter;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int numChanges;

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xA20094", Offset = "0xA20094", VA = "0xA20094")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xA20104", Offset = "0xA20104", VA = "0xA20104")]
	public void Start()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xA2019C", Offset = "0xA2019C", VA = "0xA2019C")]
	private void StateOne_Enter()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xA201A0", Offset = "0xA201A0", VA = "0xA201A0")]
	private void StateOne_Update()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xA20238", Offset = "0xA20238", VA = "0xA20238")]
	private void StateOne_Exit()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xA2023C", Offset = "0xA2023C", VA = "0xA2023C")]
	private void StateTwo_Enter()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xA20244", Offset = "0xA20244", VA = "0xA20244")]
	private void StateTwo_Update()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xA202F0", Offset = "0xA202F0", VA = "0xA202F0")]
	private void StateTwo_Exit()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xA202F4", Offset = "0xA202F4", VA = "0xA202F4")]
	private void Always_Enter()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xA20304", Offset = "0xA20304", VA = "0xA20304")]
	public FSMTest()
	{
	}
}
[Token(Token = "0x20000F7")]
public interface IFSMTimer
{
	[Token(Token = "0x6000760")]
	void ClearTimer();

	[Token(Token = "0x6000761")]
	void SetTimer(float time, bool local = true);
}
[Token(Token = "0x20000F8")]
public class Fader : TimeIndependentBehaviour
{
	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float FromOpacity;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ToOpacity;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Speed;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool FadeAudio;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float Progress;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material material;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Action onEndDelegate;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isFading;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int firstUpdates;

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xA25CB8", Offset = "0xA25CB8", VA = "0xA25CB8")]
	public void FadeOut(float speed = 1f, bool fadeAudio = false, [Optional] Action onEnd)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xA1AAFC", Offset = "0xA1AAFC", VA = "0xA1AAFC")]
	public void FadeIn(float speed = 1f, bool fadeAudio = false, [Optional] Action onEnd)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xA25CE0", Offset = "0xA25CE0", VA = "0xA25CE0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xA25EB4", Offset = "0xA25EB4", VA = "0xA25EB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xA25EBC", Offset = "0xA25EBC", VA = "0xA25EBC", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xA260A4", Offset = "0xA260A4", VA = "0xA260A4")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xA25DBC", Offset = "0xA25DBC", VA = "0xA25DBC")]
	private Color GetCurColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xA1AA78", Offset = "0xA1AA78", VA = "0xA1AA78")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xA2618C", Offset = "0xA2618C", VA = "0xA2618C")]
	public void ForceAlpha(float val)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xA26258", Offset = "0xA26258", VA = "0xA26258")]
	public Fader()
	{
	}
}
[Token(Token = "0x20000F9")]
public class GraphPathfinder
{
	[Token(Token = "0x2000368")]
	public class Graph
	{
		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector2> positions;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Pair<int, int>> edges;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isDirected;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, List<int>> edgesCache;

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x9A6C4C", Offset = "0x9A6C4C", VA = "0x9A6C4C")]
		public Graph(List<Vector2> positions, List<Pair<int, int>> edges, bool directed = false)
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x9AEA20", Offset = "0x9AEA20", VA = "0x9AEA20")]
		public List<int> GetNeighbors(int idx)
		{
			return null;
		}
	}

	[Token(Token = "0x2000369")]
	public class Node : IComparable<Node>
	{
		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Index;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Node Parent;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CostToNode;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TotalCost;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool InOpen;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool InClosed;

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x9AEBD0", Offset = "0x9AEBD0", VA = "0x9AEBD0", Slot = "4")]
		public int CompareTo(Node tNode)
		{
			return default(int);
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x9ADD60", Offset = "0x9ADD60", VA = "0x9ADD60")]
		public Node()
		{
		}
	}

	[Token(Token = "0x200036A")]
	public delegate float GetCostHandler(Graph graph, int init, int end, object movementDesc);

	[Token(Token = "0x200036B")]
	public class Query
	{
		[Token(Token = "0x200048F")]
		public enum EState
		{
			[Token(Token = "0x4001E83")]
			Pending,
			[Token(Token = "0x4001E84")]
			Running,
			[Token(Token = "0x4001E85")]
			Success,
			[Token(Token = "0x4001E86")]
			Failure
		}

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GraphPathfinder Owner;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Graph graph;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Init;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int End;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EState State;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<int> Path;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public object MovementDesc;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int numUpdates;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GetCostHandler EstimateCost;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GetCostHandler TraversalCost;

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x9ADA90", Offset = "0x9ADA90", VA = "0x9ADA90")]
		public Query(GraphPathfinder owner, Graph graph)
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x9ADB68", Offset = "0x9ADB68", VA = "0x9ADB68")]
		public void Initialize(int init, int end, object movementDesc, GetCostHandler traversalCost, GetCostHandler estimateCost)
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x9AEC00", Offset = "0x9AEC00", VA = "0x9AEC00")]
		public void Initialize(int init, int end, object movementDesc)
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x9AE5A8", Offset = "0x9AE5A8", VA = "0x9AE5A8")]
		public bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x9AEC0C", Offset = "0x9AEC0C", VA = "0x9AEC0C")]
		public bool IsSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x9AEC1C", Offset = "0x9AEC1C", VA = "0x9AEC1C")]
		public void Free()
		{
		}
	}

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GraphPathfinder instance;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int iterationLimit;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Node> m_CachedNodes;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_NextNode;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, Node> m_ActiveNodes;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BinaryHeap<Node> m_OpenList;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Queue<Query> m_PendingQueries;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Query m_ActiveQuery;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GetCostHandler EstimateCostDelegate;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GetCostHandler TraversalCostDelegate;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Query> m_listFreeQueries;

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x9AD694", Offset = "0x9AD694", VA = "0x9AD694")]
	public static GraphPathfinder Get()
	{
		return null;
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x9AD91C", Offset = "0x9AD91C", VA = "0x9AD91C")]
	public static void Clear()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x9AD71C", Offset = "0x9AD71C", VA = "0x9AD71C")]
	public GraphPathfinder(int iterationLimit = 120)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x9AD984", Offset = "0x9AD984", VA = "0x9AD984")]
	public Query AddQuery(Graph graph, int init, int end, object movementDesc, GetCostHandler traversalCost, GetCostHandler estimateCost)
	{
		return null;
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x9ADC30", Offset = "0x9ADC30", VA = "0x9ADC30")]
	public Query AddQuery(Graph graph, int init, int end, object movementDesc)
	{
		return null;
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x9ADC3C", Offset = "0x9ADC3C", VA = "0x9ADC3C")]
	private Node AddNode(int posIndex)
	{
		return null;
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x9ADD68", Offset = "0x9ADD68", VA = "0x9ADD68")]
	private void AddToOpen(Node tNode)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x9ADDDC", Offset = "0x9ADDDC", VA = "0x9ADDDC")]
	public float DefaultEstimateCost(Graph graph, int init, int end, object movementDesc)
	{
		return default(float);
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x9ADEEC", Offset = "0x9ADEEC", VA = "0x9ADEEC")]
	public float DefaultTraversalCost(Graph graph, int init, int end, object movementDesc)
	{
		return default(float);
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x9ADFFC", Offset = "0x9ADFFC", VA = "0x9ADFFC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x9AE5A0", Offset = "0x9AE5A0", VA = "0x9AE5A0")]
	public bool RunAStar(Query query)
	{
		return default(bool);
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x9AE0C0", Offset = "0x9AE0C0", VA = "0x9AE0C0")]
	public bool RunAStar(Query query, int iterationLimit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x9AEA88", Offset = "0x9AEA88", VA = "0x9AEA88")]
	public void FreeQuery(Query query)
	{
	}
}
[Token(Token = "0x20000FA")]
public class Interpolate
{
	[Token(Token = "0x6000779")]
	[Address(RVA = "0xBB6A38", Offset = "0xBB6A38", VA = "0xBB6A38")]
	public static float Lerp(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xBB6A48", Offset = "0xBB6A48", VA = "0xBB6A48")]
	public static Vector3 Lerp(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xBB6B00", Offset = "0xBB6B00", VA = "0xBB6B00")]
	public static Vector2 Lerp(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xBB6BA0", Offset = "0xBB6BA0", VA = "0xBB6BA0")]
	public static Color Lerp(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xBB6BB0", Offset = "0xBB6BB0", VA = "0xBB6BB0")]
	public static float SmoothStep(float t)
	{
		return default(float);
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xBB6BC8", Offset = "0xBB6BC8", VA = "0xBB6BC8")]
	public static float SmoothStep(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xBB6BEC", Offset = "0xBB6BEC", VA = "0xBB6BEC")]
	public static Vector3 SmoothStep(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xBB6C04", Offset = "0xBB6C04", VA = "0xBB6C04")]
	public static Vector2 SmoothStep(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xBB6C1C", Offset = "0xBB6C1C", VA = "0xBB6C1C")]
	public static Color SmoothStep(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xBB6C40", Offset = "0xBB6C40", VA = "0xBB6C40")]
	public static float EaseIn(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xBB6C48", Offset = "0xBB6C48", VA = "0xBB6C48")]
	public static float EaseOut(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xBB6C58", Offset = "0xBB6C58", VA = "0xBB6C58")]
	public static float EaseInOut(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xBB6C98", Offset = "0xBB6C98", VA = "0xBB6C98")]
	public static float EaseIn(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xBB6CAC", Offset = "0xBB6CAC", VA = "0xBB6CAC")]
	public static float EaseOut(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xBB6CC8", Offset = "0xBB6CC8", VA = "0xBB6CC8")]
	public static float EaseInOut(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xBB6D14", Offset = "0xBB6D14", VA = "0xBB6D14")]
	public static Vector3 EaseIn(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xBB6D1C", Offset = "0xBB6D1C", VA = "0xBB6D1C")]
	public static Vector3 EaseOut(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xBB6D2C", Offset = "0xBB6D2C", VA = "0xBB6D2C")]
	public static Vector3 EaseInOut(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xBB6D6C", Offset = "0xBB6D6C", VA = "0xBB6D6C")]
	public static Vector2 EaseIn(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xBB6D74", Offset = "0xBB6D74", VA = "0xBB6D74")]
	public static Vector2 EaseOut(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xBB6D84", Offset = "0xBB6D84", VA = "0xBB6D84")]
	public static Vector2 EaseInOut(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xBB6DC4", Offset = "0xBB6DC4", VA = "0xBB6DC4")]
	public static Color EaseIn(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xBB6DD8", Offset = "0xBB6DD8", VA = "0xBB6DD8")]
	public static Color EaseOut(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xBB6DF4", Offset = "0xBB6DF4", VA = "0xBB6DF4")]
	public static Color EaseInOut(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xBB6E40", Offset = "0xBB6E40", VA = "0xBB6E40")]
	public static float EaseInCubic(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xBB6E4C", Offset = "0xBB6E4C", VA = "0xBB6E4C")]
	public static float EaseOutCubic(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xBB6E68", Offset = "0xBB6E68", VA = "0xBB6E68")]
	public static float EaseInOutCubic(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xBB6EAC", Offset = "0xBB6EAC", VA = "0xBB6EAC")]
	public static float EaseInCubic(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xBB6EC4", Offset = "0xBB6EC4", VA = "0xBB6EC4")]
	public static float EaseOutCubic(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xBB6EEC", Offset = "0xBB6EEC", VA = "0xBB6EEC")]
	public static float EaseInOutCubic(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xBB6F3C", Offset = "0xBB6F3C", VA = "0xBB6F3C")]
	public static Vector3 EaseInCubic(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xBB6F48", Offset = "0xBB6F48", VA = "0xBB6F48")]
	public static Vector3 EaseOutCubic(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xBB6F64", Offset = "0xBB6F64", VA = "0xBB6F64")]
	public static Vector3 EaseInOutCubic(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xBB6FA8", Offset = "0xBB6FA8", VA = "0xBB6FA8")]
	public static Vector2 EaseInCubic(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xBB6FB4", Offset = "0xBB6FB4", VA = "0xBB6FB4")]
	public static Vector2 EaseOutCubic(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xBB6FD0", Offset = "0xBB6FD0", VA = "0xBB6FD0")]
	public static Vector2 EaseInOutCubic(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xBB7014", Offset = "0xBB7014", VA = "0xBB7014")]
	public static Color EaseInCubic(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xBB702C", Offset = "0xBB702C", VA = "0xBB702C")]
	public static Color EaseOutCubic(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xBB7054", Offset = "0xBB7054", VA = "0xBB7054")]
	public static Color EaseInOutCubic(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xBB70A4", Offset = "0xBB70A4", VA = "0xBB70A4")]
	public static float EaseInQuart(float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xBB70B4", Offset = "0xBB70B4", VA = "0xBB70B4")]
	public static float EaseOutQuart(float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xBB70D4", Offset = "0xBB70D4", VA = "0xBB70D4")]
	public static float EaseInOutQuart(float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xBB711C", Offset = "0xBB711C", VA = "0xBB711C")]
	public static float EaseInQuart(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xBB7138", Offset = "0xBB7138", VA = "0xBB7138")]
	public static float EaseOutQuart(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xBB7160", Offset = "0xBB7160", VA = "0xBB7160")]
	public static float EaseInOutQuart(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xBB71B4", Offset = "0xBB71B4", VA = "0xBB71B4")]
	public static Vector3 EaseInQuart(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xBB71C4", Offset = "0xBB71C4", VA = "0xBB71C4")]
	public static Vector3 EaseOutQuart(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xBB71E4", Offset = "0xBB71E4", VA = "0xBB71E4")]
	public static Vector3 EaseInOutQuart(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xBB722C", Offset = "0xBB722C", VA = "0xBB722C")]
	public static Vector2 EaseInQuart(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xBB723C", Offset = "0xBB723C", VA = "0xBB723C")]
	public static Vector2 EaseOutQuart(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xBB725C", Offset = "0xBB725C", VA = "0xBB725C")]
	public static Vector2 EaseInOutQuart(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xBB72A4", Offset = "0xBB72A4", VA = "0xBB72A4")]
	public static Color EaseInQuart(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xBB72C0", Offset = "0xBB72C0", VA = "0xBB72C0")]
	public static Color EaseOutQuart(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xBB72EC", Offset = "0xBB72EC", VA = "0xBB72EC")]
	public static Color EaseInOutQuart(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xBB7340", Offset = "0xBB7340", VA = "0xBB7340")]
	public static float EaseInQuintic(float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xBB7354", Offset = "0xBB7354", VA = "0xBB7354")]
	public static float EaseOutQuintic(float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xBB7378", Offset = "0xBB7378", VA = "0xBB7378")]
	public static float EaseInOutQuintic(float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xBB73CC", Offset = "0xBB73CC", VA = "0xBB73CC")]
	public static float EaseInQuintic(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xBB73EC", Offset = "0xBB73EC", VA = "0xBB73EC")]
	public static float EaseOutQuintic(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xBB741C", Offset = "0xBB741C", VA = "0xBB741C")]
	public static float EaseInOutQuintic(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xBB747C", Offset = "0xBB747C", VA = "0xBB747C")]
	public static Vector3 EaseInQuintic(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xBB7490", Offset = "0xBB7490", VA = "0xBB7490")]
	public static Vector3 EaseOutQuintic(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xBB74B4", Offset = "0xBB74B4", VA = "0xBB74B4")]
	public static Vector3 EaseInOutQuintic(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xBB7508", Offset = "0xBB7508", VA = "0xBB7508")]
	public static Vector2 EaseInQuintic(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xBB751C", Offset = "0xBB751C", VA = "0xBB751C")]
	public static Vector2 EaseOutQuintic(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xBB7540", Offset = "0xBB7540", VA = "0xBB7540")]
	public static Vector2 EaseInOutQuintic(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xBB7594", Offset = "0xBB7594", VA = "0xBB7594")]
	public static Color EaseInQuintic(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xBB75B4", Offset = "0xBB75B4", VA = "0xBB75B4")]
	public static Color EaseOutQuintic(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xBB75E4", Offset = "0xBB75E4", VA = "0xBB75E4")]
	public static Color EaseInOutQuintic(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xBB7644", Offset = "0xBB7644", VA = "0xBB7644")]
	public static float EaseInSine(float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xBB76CC", Offset = "0xBB76CC", VA = "0xBB76CC")]
	public static float EaseOutSine(float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xBB7748", Offset = "0xBB7748", VA = "0xBB7748")]
	public static float EaseInOutSine(float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xBB77D0", Offset = "0xBB77D0", VA = "0xBB77D0")]
	public static float EaseInSine(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xBB7804", Offset = "0xBB7804", VA = "0xBB7804")]
	public static float EaseOutSine(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xBB7838", Offset = "0xBB7838", VA = "0xBB7838")]
	public static float EaseInOutSine(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xBB786C", Offset = "0xBB786C", VA = "0xBB786C")]
	public static Vector3 EaseInSine(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xBB78D0", Offset = "0xBB78D0", VA = "0xBB78D0")]
	public static Vector3 EaseOutSine(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xBB7934", Offset = "0xBB7934", VA = "0xBB7934")]
	public static Vector3 EaseInOutSine(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xBB7998", Offset = "0xBB7998", VA = "0xBB7998")]
	public static Vector2 EaseInSine(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xBB79E4", Offset = "0xBB79E4", VA = "0xBB79E4")]
	public static Vector2 EaseOutSine(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xBB7A30", Offset = "0xBB7A30", VA = "0xBB7A30")]
	public static Vector2 EaseInOutSine(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xBB7A7C", Offset = "0xBB7A7C", VA = "0xBB7A7C")]
	public static Color EaseInSine(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xBB7B00", Offset = "0xBB7B00", VA = "0xBB7B00")]
	public static Color EaseOutSine(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xBB7B84", Offset = "0xBB7B84", VA = "0xBB7B84")]
	public static Color EaseInOutSine(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xBB7C08", Offset = "0xBB7C08", VA = "0xBB7C08")]
	public static float EaseInCircular(float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xBB7C9C", Offset = "0xBB7C9C", VA = "0xBB7C9C")]
	public static float EaseOutCircular(float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xBB7D38", Offset = "0xBB7D38", VA = "0xBB7D38")]
	public static float EaseInOutCircular(float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xBB7E14", Offset = "0xBB7E14", VA = "0xBB7E14")]
	public static float EaseInCircular(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xBB7E48", Offset = "0xBB7E48", VA = "0xBB7E48")]
	public static float EaseOutCircular(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xBB7E7C", Offset = "0xBB7E7C", VA = "0xBB7E7C")]
	public static float EaseInOutCircular(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xBB7EB0", Offset = "0xBB7EB0", VA = "0xBB7EB0")]
	public static Vector3 EaseInCircular(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xBB7F14", Offset = "0xBB7F14", VA = "0xBB7F14")]
	public static Vector3 EaseOutCircular(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xBB7F78", Offset = "0xBB7F78", VA = "0xBB7F78")]
	public static Vector3 EaseInOutCircular(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xBB7FDC", Offset = "0xBB7FDC", VA = "0xBB7FDC")]
	public static Vector2 EaseInCircular(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xBB8028", Offset = "0xBB8028", VA = "0xBB8028")]
	public static Vector2 EaseOutCircular(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xBB8074", Offset = "0xBB8074", VA = "0xBB8074")]
	public static Vector2 EaseInOutCircular(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xBB80C0", Offset = "0xBB80C0", VA = "0xBB80C0")]
	public static Color EaseInCircular(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xBB8144", Offset = "0xBB8144", VA = "0xBB8144")]
	public static Color EaseOutCircular(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xBB81C8", Offset = "0xBB81C8", VA = "0xBB81C8")]
	public static Color EaseInOutCircular(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xBB824C", Offset = "0xBB824C", VA = "0xBB824C")]
	public static Vector2 Slerp(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xBB8424", Offset = "0xBB8424", VA = "0xBB8424")]
	public static Vector3 Slerp(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xBB84DC", Offset = "0xBB84DC", VA = "0xBB84DC")]
	public static Quaternion Slerp(Quaternion from, Quaternion to, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xBB85F4", Offset = "0xBB85F4", VA = "0xBB85F4")]
	public static Vector2 NLerp(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xBB86F0", Offset = "0xBB86F0", VA = "0xBB86F0")]
	public static Vector2 NLerp(Vector3 from, Vector3 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xBB8804", Offset = "0xBB8804", VA = "0xBB8804")]
	public static float Approach(float current, float to, float speed)
	{
		return default(float);
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xBB8814", Offset = "0xBB8814", VA = "0xBB8814")]
	public static Vector3 Approach(Vector3 current, Vector3 to, float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xBB88CC", Offset = "0xBB88CC", VA = "0xBB88CC")]
	public static Vector2 Approach(Vector2 current, Vector2 to, float speed)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xBB896C", Offset = "0xBB896C", VA = "0xBB896C")]
	public static Color Approach(Color current, Color to, float speed)
	{
		return default(Color);
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xBB897C", Offset = "0xBB897C", VA = "0xBB897C")]
	public static Quaternion Approach(Quaternion current, Quaternion to, float speed)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xBB8A94", Offset = "0xBB8A94", VA = "0xBB8A94")]
	public static float ApproachExp(float actual, float to, float speed)
	{
		return default(float);
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xBB8AA4", Offset = "0xBB8AA4", VA = "0xBB8AA4")]
	public static Vector3 ApproachExp(Vector3 actual, Vector3 to, float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xBB8B84", Offset = "0xBB8B84", VA = "0xBB8B84")]
	public static Vector2 ApproachExp(Vector2 actual, Vector2 to, float speed)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xBB8C44", Offset = "0xBB8C44", VA = "0xBB8C44")]
	public static Color ApproachExp(Color actual, Color to, float speed)
	{
		return default(Color);
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xBB8CD8", Offset = "0xBB8CD8", VA = "0xBB8CD8")]
	public static Quaternion ApproachExp(Quaternion current, Quaternion to, float speed)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xBB8DD4", Offset = "0xBB8DD4", VA = "0xBB8DD4")]
	public static float Damp(float value, float factor, float deltaTime)
	{
		return default(float);
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xBB8E5C", Offset = "0xBB8E5C", VA = "0xBB8E5C")]
	public static float Damp(float from, float to, float factor, float deltaTime)
	{
		return default(float);
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xBB8EF8", Offset = "0xBB8EF8", VA = "0xBB8EF8")]
	public static Vector3 Bezier(Vector3 vP1, Vector3 vP2, Vector3 vP3, Vector3 vP4, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xBB90C0", Offset = "0xBB90C0", VA = "0xBB90C0")]
	public static Vector3 BezierTangent(Vector3 vP1, Vector3 vP2, Vector3 vP3, Vector3 vP4, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xBB9294", Offset = "0xBB9294", VA = "0xBB9294")]
	public static Vector3 CatmullRom(Vector3 vP0, Vector3 vP1, Vector3 vP2, Vector3 vP3, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xBB95FC", Offset = "0xBB95FC", VA = "0xBB95FC")]
	public static Vector3 CatmullRom(Vector3[] pts, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xBB9A28", Offset = "0xBB9A28", VA = "0xBB9A28")]
	public static float Hermite(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xBB9AC0", Offset = "0xBB9AC0", VA = "0xBB9AC0")]
	public static float Sinerp(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xBB9B60", Offset = "0xBB9B60", VA = "0xBB9B60")]
	public static float Coserp(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xBB9C04", Offset = "0xBB9C04", VA = "0xBB9C04")]
	public static float Berp(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xBB9D08", Offset = "0xBB9D08", VA = "0xBB9D08")]
	public static float Bounce(float x)
	{
		return default(float);
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xBB9D98", Offset = "0xBB9D98", VA = "0xBB9D98")]
	public static float Clerp(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xBB9E6C", Offset = "0xBB9E6C", VA = "0xBB9E6C")]
	public static float Barycentric(float val1, float val2, float val3, Vector3 coords)
	{
		return default(float);
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xBB9E84", Offset = "0xBB9E84", VA = "0xBB9E84")]
	public Interpolate()
	{
	}
}
[Token(Token = "0x20000FB")]
public class LSystem<T> where T : new()
{
	[Token(Token = "0x200036C")]
	public struct Symbol
	{
		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<int, LSeq> rule;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T leaf;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool hasValidLeaf;

		[Token(Token = "0x6001955")]
		public Symbol(Action<int, LSeq> rule)
		{
		}

		[Token(Token = "0x6001956")]
		public Symbol(T leaf)
		{
		}

		[Token(Token = "0x6001957")]
		public bool IsRule()
		{
			return default(bool);
		}

		[Token(Token = "0x6001958")]
		public bool IsTerminal()
		{
			return default(bool);
		}

		[Token(Token = "0x6001959")]
		public bool IsEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x600195A")]
		public void ApplyRule(int capacity, LSeq seq)
		{
		}
	}

	[Token(Token = "0x200036D")]
	public class LSeq
	{
		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<Symbol> symbols;

		[Token(Token = "0x600195B")]
		public LSeq()
		{
		}

		[Token(Token = "0x600195C")]
		public void Add(Symbol symbol)
		{
		}

		[Token(Token = "0x600195D")]
		public void Add(T leafSymbol)
		{
		}

		[Token(Token = "0x600195E")]
		public void Add(Action<int, LSeq> ruleSymbol)
		{
		}

		[Token(Token = "0x600195F")]
		public int GetTerminalLength()
		{
			return default(int);
		}

		[Token(Token = "0x6001960")]
		public void Expand(int idx, LSeq newSymbols)
		{
		}

		[Token(Token = "0x6001961")]
		public List<T> Resolve()
		{
			return null;
		}
	}

	[Token(Token = "0x200036E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B9E8", Offset = "0x75B9E8")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Symbol delayed;

		[Token(Token = "0x6001962")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6001963")]
		internal void <Delay>b__0(int capacity, LSeq seq)
		{
		}
	}

	[Token(Token = "0x60007F9")]
	public List<T> Process(int capacity)
	{
		return null;
	}

	[Token(Token = "0x60007FA")]
	public virtual void Axiom(int capacity, LSeq seq)
	{
	}

	[Token(Token = "0x60007FB")]
	protected Symbol Delay(Symbol delayed)
	{
		return default(Symbol);
	}

	[Token(Token = "0x60007FC")]
	protected Symbol Delay(Action<int, LSeq> ruleSymbol)
	{
		return default(Symbol);
	}

	[Token(Token = "0x60007FD")]
	protected Symbol Delay(T leafSymbol)
	{
		return default(Symbol);
	}

	[Token(Token = "0x60007FE")]
	protected void Choose(params Action[] options)
	{
	}

	[Token(Token = "0x60007FF")]
	public virtual string GetName()
	{
		return null;
	}

	[Token(Token = "0x6000800")]
	public LSystem()
	{
	}
}
[Token(Token = "0x20000FC")]
public class TestGrammar : LSystem<char>
{
	[Token(Token = "0x200036F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75B9F8", Offset = "0x75B9F8")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LSeq seq;

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x9C2D68", Offset = "0x9C2D68", VA = "0x9C2D68")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x9C2DC0", Offset = "0x9C2DC0", VA = "0x9C2DC0")]
		internal void <G>b__0()
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x9C2E1C", Offset = "0x9C2E1C", VA = "0x9C2E1C")]
		internal void <G>b__1()
		{
		}
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x9C28F0", Offset = "0x9C28F0", VA = "0x9C28F0", Slot = "4")]
	public override void Axiom(int capacity, LSeq seq)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x9C2A50", Offset = "0x9C2A50", VA = "0x9C2A50")]
	public void H(int capacity, LSeq seq)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x9C2B44", Offset = "0x9C2B44", VA = "0x9C2B44")]
	public void G(int capacity, LSeq seq)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x9C2D70", Offset = "0x9C2D70", VA = "0x9C2D70")]
	public TestGrammar()
	{
	}
}
[Token(Token = "0x20000FD")]
public class LinearBlur
{
	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float _rSum;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float _gSum;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _bSum;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Texture2D _sourceImage;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _sourceWidth;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _sourceHeight;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _windowSize;

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xA39FE8", Offset = "0xA39FE8", VA = "0xA39FE8")]
	public Texture2D Blur(Texture2D image, int radius, int iterations)
	{
		return null;
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xA3A094", Offset = "0xA3A094", VA = "0xA3A094")]
	private Texture2D OneDimensialBlur(Texture2D image, int radius, bool horizontal)
	{
		return null;
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xA3A3D0", Offset = "0xA3A3D0", VA = "0xA3A3D0")]
	private Color GetPixelWithXCheck(int x, int y)
	{
		return default(Color);
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xA3A4AC", Offset = "0xA3A4AC", VA = "0xA3A4AC")]
	private Color GetPixelWithYCheck(int x, int y)
	{
		return default(Color);
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xA3A420", Offset = "0xA3A420", VA = "0xA3A420")]
	private void AddPixel(Color pixel)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xA3A440", Offset = "0xA3A440", VA = "0xA3A440")]
	private void SubstPixel(Color pixel)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xA3A3C4", Offset = "0xA3A3C4", VA = "0xA3A3C4")]
	private void ResetSum()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xA3A460", Offset = "0xA3A460", VA = "0xA3A460")]
	private Color CalcPixelFromSum()
	{
		return default(Color);
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xA3A4FC", Offset = "0xA3A4FC", VA = "0xA3A4FC")]
	public LinearBlur()
	{
	}
}
[Token(Token = "0x20000FE")]
public class LinkedPrefab : MonoBehaviour
{
	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xA3A504", Offset = "0xA3A504", VA = "0xA3A504")]
	private void Awake()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xA3A670", Offset = "0xA3A670", VA = "0xA3A670")]
	public LinkedPrefab()
	{
	}
}
[Token(Token = "0x20000FF")]
public class MinMaxAttribute : PropertyAttribute
{
	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float minDefaultVal;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float maxDefaultVal;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float min;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float max;

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xB8DAC0", Offset = "0xB8DAC0", VA = "0xB8DAC0")]
	public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
	{
	}
}
[Token(Token = "0x2000100")]
public class ParticleSystemEndAction : MonoBehaviour
{
	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action action;

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x9E4314", Offset = "0x9E4314", VA = "0x9E4314")]
	private void OnParticleSystemStopped()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x9E4328", Offset = "0x9E4328", VA = "0x9E4328")]
	public ParticleSystemEndAction()
	{
	}
}
[Token(Token = "0x2000101")]
public static class Perlin
{
	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int[] perm;

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x9E4F84", Offset = "0x9E4F84", VA = "0x9E4F84")]
	public static float Noise(float x)
	{
		return default(float);
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x9E5118", Offset = "0x9E5118", VA = "0x9E5118")]
	public static float Noise(float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x9E5378", Offset = "0x9E5378", VA = "0x9E5378")]
	public static float Noise(Vector2 coord)
	{
		return default(float);
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x9E53EC", Offset = "0x9E53EC", VA = "0x9E53EC")]
	public static float Noise(float x, float y, float z)
	{
		return default(float);
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x9E5998", Offset = "0x9E5998", VA = "0x9E5998")]
	public static float Noise(Vector3 coord)
	{
		return default(float);
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x9E5A1C", Offset = "0x9E5A1C", VA = "0x9E5A1C")]
	public static float Fbm(float x, int octave)
	{
		return default(float);
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x9E5AD0", Offset = "0x9E5AD0", VA = "0x9E5AD0")]
	public static float Fbm(Vector2 coord, int octave)
	{
		return default(float);
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x9E5BE0", Offset = "0x9E5BE0", VA = "0x9E5BE0")]
	public static float Fbm(float x, float y, int octave)
	{
		return default(float);
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x9E5C7C", Offset = "0x9E5C7C", VA = "0x9E5C7C")]
	public static float Fbm(Vector3 coord, int octave)
	{
		return default(float);
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x9E5D9C", Offset = "0x9E5D9C", VA = "0x9E5D9C")]
	public static float Fbm(float x, float y, float z, int octave)
	{
		return default(float);
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x9E50CC", Offset = "0x9E50CC", VA = "0x9E50CC")]
	private static float Fade(float t)
	{
		return default(float);
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x9E5108", Offset = "0x9E5108", VA = "0x9E5108")]
	private static float Lerp(float t, float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x9E50F8", Offset = "0x9E50F8", VA = "0x9E50F8")]
	private static float Grad(int hash, float x)
	{
		return default(float);
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x9E5358", Offset = "0x9E5358", VA = "0x9E5358")]
	private static float Grad(int hash, float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x9E594C", Offset = "0x9E594C", VA = "0x9E594C")]
	private static float Grad(int hash, float x, float y, float z)
	{
		return default(float);
	}
}
[Token(Token = "0x2000102")]
public class Permutator
{
	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int Hits;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int SeqLength;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int InitWait;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int MaxStreak;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<bool> Sequence;

	[Token(Token = "0x1700008D")]
	public bool Next
	{
		[Token(Token = "0x6000824")]
		[Address(RVA = "0x9E6094", Offset = "0x9E6094", VA = "0x9E6094")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x9E5ED0", Offset = "0x9E5ED0", VA = "0x9E5ED0")]
	public Permutator(int hits, int seqLength, int initWait = 0)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x9E6134", Offset = "0x9E6134", VA = "0x9E6134")]
	public bool PeekNext()
	{
		return default(bool);
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x9E5F88", Offset = "0x9E5F88", VA = "0x9E5F88")]
	private void GenerateSequence()
	{
	}
}
[Token(Token = "0x2000103")]
public static class RandomExt
{
	[Token(Token = "0x6000827")]
	[Address(RVA = "0xA4D640", Offset = "0xA4D640", VA = "0xA4D640")]
	public static int RandInt(int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xA4D64C", Offset = "0xA4D64C", VA = "0xA4D64C")]
	public static int RandInt(int max)
	{
		return default(int);
	}

	[Token(Token = "0x6000829")]
	public static T Choice<T>(List<T> arrItems)
	{
		return (T)null;
	}

	[Token(Token = "0x600082A")]
	public static T Choice<T>(T[] arrItems)
	{
		return (T)null;
	}

	[Token(Token = "0x600082B")]
	public static T WeightedChoice<T>(List<Pair<T, int>> arrItems)
	{
		return (T)null;
	}

	[Token(Token = "0x600082C")]
	public static T WeightedChoice<T>(List<Pair<T, float>> arrItems)
	{
		return (T)null;
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xA4D65C", Offset = "0xA4D65C", VA = "0xA4D65C")]
	public static int WeightedChoice(List<float> arrWeights)
	{
		return default(int);
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xA4D7F4", Offset = "0xA4D7F4", VA = "0xA4D7F4")]
	public static int WeightedChoice(float[] arrWeights)
	{
		return default(int);
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xA4D8B0", Offset = "0xA4D8B0", VA = "0xA4D8B0")]
	public static float Gaussian(float avg = 0f, float stdDev = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xA4D99C", Offset = "0xA4D99C", VA = "0xA4D99C")]
	public static float GaussianRange(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xA4DA4C", Offset = "0xA4DA4C", VA = "0xA4DA4C")]
	public static Vector3 PointInsideSphere(Vector3 center, float radius)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xA4DB20", Offset = "0xA4DB20", VA = "0xA4DB20")]
	public static Vector3 PointInsideBounds(Bounds bounds)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xA4DC74", Offset = "0xA4DC74", VA = "0xA4DC74")]
	public static Vector3 DirectionInsideCone(Vector3 coneDirection, float angle)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000104")]
public class Scheduler : Singleton<Scheduler>
{
	[Token(Token = "0x2000370")]
	private struct SchedulingInfo
	{
		[Token(Token = "0x2000490")]
		public enum SchedulingType
		{
			[Token(Token = "0x4001E88")]
			Timer,
			[Token(Token = "0x4001E89")]
			PeriodicTask,
			[Token(Token = "0x4001E8A")]
			Update,
			[Token(Token = "0x4001E8B")]
			State,
			[Token(Token = "0x4001E8C")]
			FixedUpdate,
			[Token(Token = "0x4001E8D")]
			LateUpdate
		}

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject owner;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SchedulingType schedType;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float timer;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float periodTime;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int frameSkip;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int framePeriod;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callback;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action stateStart;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action stateEnd;
	}

	[Token(Token = "0x2000371")]
	public class Cooldown
	{
		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _isValid;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject owner;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int taskId;

		[Token(Token = "0x170001CD")]
		public bool IsValid
		{
			[Token(Token = "0x6001967")]
			[Address(RVA = "0x90AB70", Offset = "0x90AB70", VA = "0x90AB70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x90AB78", Offset = "0x90AB78", VA = "0x90AB78")]
		public Cooldown(GameObject goOwner)
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x90ABBC", Offset = "0x90ABBC", VA = "0x90ABBC")]
		public void Set(float time)
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x90ACA0", Offset = "0x90ACA0", VA = "0x90ACA0")]
		private void OnTimer()
		{
		}
	}

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<SchedulingInfo> scheduledTasks;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> slotAvailability;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> toRemoveList;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<SchedulingInfo> toAddList;

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x9099C0", Offset = "0x9099C0", VA = "0x9099C0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x909A80", Offset = "0x909A80", VA = "0x909A80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x90A078", Offset = "0x90A078", VA = "0x90A078")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x90A080", Offset = "0x90A080", VA = "0x90A080")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x909A88", Offset = "0x909A88", VA = "0x909A88")]
	private void UpdateTasks(SchedulingInfo.SchedulingType updateType = SchedulingInfo.SchedulingType.Update)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x90A088", Offset = "0x90A088", VA = "0x90A088")]
	public int AddTimer(float time, GameObject owner, Action callback)
	{
		return default(int);
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x90A26C", Offset = "0x90A26C", VA = "0x90A26C")]
	public int AddPeriodic(float period, GameObject owner, Action callback, bool scheduleForLater = true)
	{
		return default(int);
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x90A384", Offset = "0x90A384", VA = "0x90A384")]
	public int AddUpdate(int framePeriod, GameObject owner, Action callback)
	{
		return default(int);
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x90A484", Offset = "0x90A484", VA = "0x90A484")]
	public int AddFixedUpdate(int framePeriod, GameObject owner, Action callback)
	{
		return default(int);
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x90A584", Offset = "0x90A584", VA = "0x90A584")]
	public int AddLateUpdate(int framePeriod, GameObject owner, Action callback)
	{
		return default(int);
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x90A684", Offset = "0x90A684", VA = "0x90A684")]
	public int AddState(float duration, GameObject owner, Action updateCallback, [Optional] Action startCallback, [Optional] Action endCallback)
	{
		return default(int);
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x90A7CC", Offset = "0x90A7CC", VA = "0x90A7CC")]
	public int RemoveTask(int id)
	{
		return default(int);
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x90A9AC", Offset = "0x90A9AC", VA = "0x90A9AC")]
	public void AdjustTimer(int id, float newTimer)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x90A184", Offset = "0x90A184", VA = "0x90A184")]
	private int GetAvailableSlot()
	{
		return default(int);
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x90AAB0", Offset = "0x90AAB0", VA = "0x90AAB0")]
	public Scheduler()
	{
	}
}
[Token(Token = "0x2000105")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x759078", Offset = "0x759078")]
public class SetRenderQueue : MonoBehaviour
{
	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int[] m_queues;

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x910CD8", Offset = "0x910CD8", VA = "0x910CD8")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x910DE4", Offset = "0x910DE4", VA = "0x910DE4")]
	public SetRenderQueue()
	{
	}
}
[Token(Token = "0x2000106")]
public class Singleton<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static T instance;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool dontDestroyOnLoad;

	[Token(Token = "0x6000845")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000846")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000847")]
	public static T Get(bool autoCreate = true)
	{
		return null;
	}

	[Token(Token = "0x6000848")]
	public Singleton()
	{
	}
}
[Token(Token = "0x2000107")]
public class SwitchOnPlay : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000372")]
	public class ObjInfo
	{
		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject obj;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7623C8", Offset = "0x7623C8")]
		public float weight;

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x9B56A4", Offset = "0x9B56A4", VA = "0x9B56A4")]
		public ObjInfo()
		{
		}
	}

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObjInfo[] objects;

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x9B552C", Offset = "0x9B552C", VA = "0x9B552C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x9B569C", Offset = "0x9B569C", VA = "0x9B569C")]
	public SwitchOnPlay()
	{
	}
}
[Token(Token = "0x2000108")]
public class TimeIndependentAnimation : TimeIndependentBehaviour
{
	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool playOnStart;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string playOnStartStateName;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AnimationState currentState;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Action currentCompletionHandler;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float elapsedTime;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool playing;

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x9C8BD4", Offset = "0x9C8BD4", VA = "0x9C8BD4")]
	private void Start()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x9C8CD0", Offset = "0x9C8CD0", VA = "0x9C8CD0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x9C8BEC", Offset = "0x9C8BEC", VA = "0x9C8BEC")]
	public void Play(string stateName, [Optional] Action completionHandler)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x9C8E58", Offset = "0x9C8E58", VA = "0x9C8E58")]
	public TimeIndependentAnimation()
	{
	}
}
[Token(Token = "0x2000109")]
public class TimeIndependentBehaviour : MonoBehaviour
{
	[Token(Token = "0x2000373")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BA08", Offset = "0x75BA08")]
	private sealed class <TimeIndependentWaitForSeconds>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeIndependentBehaviour <>4__this;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float seconds;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170001CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600196F")]
			[Address(RVA = "0x9C903C", Offset = "0x9C903C", VA = "0x9C903C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001971")]
			[Address(RVA = "0x9C90A4", Offset = "0x9C90A4", VA = "0x9C90A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x9C8F44", Offset = "0x9C8F44", VA = "0x9C8F44")]
		[DebuggerHidden]
		public <TimeIndependentWaitForSeconds>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x9C8FA8", Offset = "0x9C8FA8", VA = "0x9C8FA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x9C8FAC", Offset = "0x9C8FAC", VA = "0x9C8FAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x9C9044", Offset = "0x9C9044", VA = "0x9C9044", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pausable;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float previousTimeSinceStartup;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75D424", Offset = "0x75D424")]
	private float <deltaTime>k__BackingField;

	[Token(Token = "0x1700008E")]
	public float deltaTime
	{
		[Token(Token = "0x6000853")]
		[Address(RVA = "0x9C8F70", Offset = "0x9C8F70", VA = "0x9C8F70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7653C0", Offset = "0x7653C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000854")]
		[Address(RVA = "0x9C8F78", Offset = "0x9C8F78", VA = "0x9C8F78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7653D0", Offset = "0x7653D0")]
		private set
		{
		}
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x9C8E68", Offset = "0x9C8E68", VA = "0x9C8E68", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x9C8E90", Offset = "0x9C8E90", VA = "0x9C8E90", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x9C8DB8", Offset = "0x9C8DB8", VA = "0x9C8DB8", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x9C8EB8", Offset = "0x9C8EB8", VA = "0x9C8EB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76535C", Offset = "0x76535C")]
	public IEnumerator TimeIndependentWaitForSeconds(float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x9C8F80", Offset = "0x9C8F80", VA = "0x9C8F80")]
	protected void UpdateTimeSinceStartup()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x9C8E60", Offset = "0x9C8E60", VA = "0x9C8E60")]
	public TimeIndependentBehaviour()
	{
	}
}
[Token(Token = "0x200010A")]
public class TimeIndependentParticleSystem : TimeIndependentBehaviour
{
	[Token(Token = "0x6000857")]
	[Address(RVA = "0x9C90AC", Offset = "0x9C90AC", VA = "0x9C90AC", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x9C9120", Offset = "0x9C9120", VA = "0x9C9120")]
	public TimeIndependentParticleSystem()
	{
	}
}
[Token(Token = "0x200010B")]
public class Translate
{
	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Translate instance;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, Dictionary<string, string>> langTables;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, string> curTable;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string curLangIndex;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static StringBuilder formatString;

	[Token(Token = "0x1400000B")]
	public event Action onChangedLanguage
	{
		[Token(Token = "0x600085B")]
		[Address(RVA = "0x9C9A84", Offset = "0x9C9A84", VA = "0x9C9A84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7653E0", Offset = "0x7653E0")]
		add
		{
		}
		[Token(Token = "0x600085C")]
		[Address(RVA = "0x9C9B28", Offset = "0x9C9B28", VA = "0x9C9B28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7653F0", Offset = "0x7653F0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x9C98EC", Offset = "0x9C98EC", VA = "0x9C98EC")]
	public static Translate Instance(bool autoCreate = true, bool forceNewInstance = false)
	{
		return null;
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x9C99F0", Offset = "0x9C99F0", VA = "0x9C99F0")]
	private Translate()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x9C9BCC", Offset = "0x9C9BCC", VA = "0x9C9BCC")]
	public static string Initialize(string baseFolder = "Text", string defaultLanguage = "")
	{
		return null;
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x9C9CC4", Offset = "0x9C9CC4", VA = "0x9C9CC4")]
	public static void LoadBaseFolder(string basePath)
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x9CA190", Offset = "0x9CA190", VA = "0x9CA190")]
	private bool LoadFolder(string path, string langName = "english")
	{
		return default(bool);
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x9CA334", Offset = "0x9CA334", VA = "0x9CA334")]
	private void ProcessFile(TextAsset textAsset, Dictionary<string, string> langTable)
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x9C9FFC", Offset = "0x9C9FFC", VA = "0x9C9FFC")]
	public static bool SetLanguage(string index, bool invokeRefreshEvent = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x9CA11C", Offset = "0x9CA11C", VA = "0x9CA11C")]
	public static string GetLanguage()
	{
		return null;
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x9C9F0C", Offset = "0x9C9F0C", VA = "0x9C9F0C")]
	public static void SetSystemLanguage()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x9CA53C", Offset = "0x9CA53C", VA = "0x9CA53C")]
	public static string[] ListLanguages()
	{
		return null;
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x9B45F8", Offset = "0x9B45F8", VA = "0x9B45F8")]
	public static string Get(string key, bool defaultToEnglish = false)
	{
		return null;
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x9CA70C", Offset = "0x9CA70C", VA = "0x9CA70C")]
	public static string GetOrEnglish(string key)
	{
		return null;
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x9CA774", Offset = "0x9CA774", VA = "0x9CA774")]
	public static string GetFormatVars(string key, Dictionary<string, string> values, bool defaultToEnglish = false)
	{
		return null;
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x9CA988", Offset = "0x9CA988", VA = "0x9CA988")]
	public static bool Check(string key)
	{
		return default(bool);
	}
}
[Token(Token = "0x200010C")]
public class TranslatedText : MonoBehaviour
{
	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string textId;

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x9FE1C0", Offset = "0x9FE1C0", VA = "0x9FE1C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x9FE350", Offset = "0x9FE350", VA = "0x9FE350")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x9FE410", Offset = "0x9FE410", VA = "0x9FE410")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x9FE1C4", Offset = "0x9FE1C4", VA = "0x9FE1C4")]
	public void RefreshText()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x9FE4D8", Offset = "0x9FE4D8", VA = "0x9FE4D8")]
	private void OnChangedLanguage()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x9FE4DC", Offset = "0x9FE4DC", VA = "0x9FE4DC")]
	public TranslatedText()
	{
	}
}
[Token(Token = "0x200010D")]
public class BinaryHeap<T> where T : IComparable<T>
{
	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<T> m_Elements;

	[Token(Token = "0x1700008F")]
	public int Count
	{
		[Token(Token = "0x6000871")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000870")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000872")]
	public void Push(T item)
	{
	}

	[Token(Token = "0x6000873")]
	public T Peek()
	{
		return (T)null;
	}

	[Token(Token = "0x6000874")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000875")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000876")]
	public void SiftUp(int index)
	{
	}

	[Token(Token = "0x6000877")]
	public void SiftDown(int indexSwap)
	{
	}

	[Token(Token = "0x6000878")]
	public BinaryHeap()
	{
	}
}
[Serializable]
[Token(Token = "0x200010E")]
public class CPoint : IEquatable<CPoint>
{
	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int X;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int Y;

	[Token(Token = "0x17000090")]
	public static CPoint Zero
	{
		[Token(Token = "0x600087D")]
		[Address(RVA = "0x92C270", Offset = "0x92C270", VA = "0x92C270")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x92C180", Offset = "0x92C180", VA = "0x92C180")]
	public CPoint(int x, int y)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x92C1B8", Offset = "0x92C1B8", VA = "0x92C1B8")]
	public CPoint(Point point)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x92C1E8", Offset = "0x92C1E8", VA = "0x92C1E8")]
	public static bool operator !=(CPoint a, CPoint b)
	{
		return default(bool);
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x92C22C", Offset = "0x92C22C", VA = "0x92C22C")]
	public static bool operator ==(CPoint a, CPoint b)
	{
		return default(bool);
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x92C2D0", Offset = "0x92C2D0", VA = "0x92C2D0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x92C37C", Offset = "0x92C37C", VA = "0x92C37C", Slot = "4")]
	public bool Equals(CPoint other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x92C3B8", Offset = "0x92C3B8", VA = "0x92C3B8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x92C400", Offset = "0x92C400", VA = "0x92C400")]
	public static CPoint operator +(CPoint p1, CPoint p2)
	{
		return null;
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x92C490", Offset = "0x92C490", VA = "0x92C490")]
	public static CPoint operator -(CPoint p1, CPoint p2)
	{
		return null;
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x92C520", Offset = "0x92C520", VA = "0x92C520")]
	public static CPoint operator /(CPoint p1, int v)
	{
		return null;
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x92C5A4", Offset = "0x92C5A4", VA = "0x92C5A4")]
	public static CPoint operator *(CPoint p1, int v)
	{
		return null;
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x92C630", Offset = "0x92C630", VA = "0x92C630")]
	public void Set(CPoint point)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x92C654", Offset = "0x92C654", VA = "0x92C654")]
	public void Set(Point point)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x92C660", Offset = "0x92C660", VA = "0x92C660")]
	public Point ToPoint()
	{
		return default(Point);
	}
}
[Token(Token = "0x200010F")]
public struct IntRect
{
	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int _xMin;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private int _xMax;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private int _yMin;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int _yMax;

	[Token(Token = "0x17000091")]
	public int bottom
	{
		[Token(Token = "0x600088C")]
		[Address(RVA = "0x9E28F4", Offset = "0x9E28F4", VA = "0x9E28F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000092")]
	public int height
	{
		[Token(Token = "0x600088D")]
		[Address(RVA = "0x9E28FC", Offset = "0x9E28FC", VA = "0x9E28FC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600088E")]
		[Address(RVA = "0x9E2908", Offset = "0x9E2908", VA = "0x9E2908")]
		set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public int left
	{
		[Token(Token = "0x600088F")]
		[Address(RVA = "0x9E2918", Offset = "0x9E2918", VA = "0x9E2918")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000094")]
	public int right
	{
		[Token(Token = "0x6000890")]
		[Address(RVA = "0x9E2920", Offset = "0x9E2920", VA = "0x9E2920")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000095")]
	public int top
	{
		[Token(Token = "0x6000891")]
		[Address(RVA = "0x9E2928", Offset = "0x9E2928", VA = "0x9E2928")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000096")]
	public int width
	{
		[Token(Token = "0x6000892")]
		[Address(RVA = "0x9E2930", Offset = "0x9E2930", VA = "0x9E2930")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000893")]
		[Address(RVA = "0x9E293C", Offset = "0x9E293C", VA = "0x9E293C")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public int x
	{
		[Token(Token = "0x6000894")]
		[Address(RVA = "0x9E294C", Offset = "0x9E294C", VA = "0x9E294C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000895")]
		[Address(RVA = "0x9E2954", Offset = "0x9E2954", VA = "0x9E2954")]
		set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public int xMax
	{
		[Token(Token = "0x6000896")]
		[Address(RVA = "0x9E295C", Offset = "0x9E295C", VA = "0x9E295C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000897")]
		[Address(RVA = "0x9E2964", Offset = "0x9E2964", VA = "0x9E2964")]
		set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public int xMin
	{
		[Token(Token = "0x6000898")]
		[Address(RVA = "0x9E296C", Offset = "0x9E296C", VA = "0x9E296C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000899")]
		[Address(RVA = "0x9E2974", Offset = "0x9E2974", VA = "0x9E2974")]
		set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	public int y
	{
		[Token(Token = "0x600089A")]
		[Address(RVA = "0x9E297C", Offset = "0x9E297C", VA = "0x9E297C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600089B")]
		[Address(RVA = "0x9E2984", Offset = "0x9E2984", VA = "0x9E2984")]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public int yMax
	{
		[Token(Token = "0x600089C")]
		[Address(RVA = "0x9E298C", Offset = "0x9E298C", VA = "0x9E298C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600089D")]
		[Address(RVA = "0x9E2994", Offset = "0x9E2994", VA = "0x9E2994")]
		set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public int yMin
	{
		[Token(Token = "0x600089E")]
		[Address(RVA = "0x9E299C", Offset = "0x9E299C", VA = "0x9E299C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600089F")]
		[Address(RVA = "0x9E29A4", Offset = "0x9E29A4", VA = "0x9E29A4")]
		set
		{
		}
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x9E284C", Offset = "0x9E284C", VA = "0x9E284C")]
	public IntRect(IntRect source)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x9E2860", Offset = "0x9E2860", VA = "0x9E2860")]
	public IntRect(int left, int top, int width, int height)
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x9E2874", Offset = "0x9E2874", VA = "0x9E2874")]
	public static bool operator !=(IntRect lhs, IntRect rhs)
	{
		return default(bool);
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x9E28B4", Offset = "0x9E28B4", VA = "0x9E28B4")]
	public static bool operator ==(IntRect lhs, IntRect rhs)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x9E29AC", Offset = "0x9E29AC", VA = "0x9E29AC")]
	public bool Contains(Point point)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x9E29EC", Offset = "0x9E29EC", VA = "0x9E29EC", Slot = "0")]
	public override bool Equals(object other)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x9E2AA4", Offset = "0x9E2AA4", VA = "0x9E2AA4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x9E2B1C", Offset = "0x9E2B1C", VA = "0x9E2B1C")]
	public void Set(int left, int top, int width, int height)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x9E2B30", Offset = "0x9E2B30", VA = "0x9E2B30", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000110")]
public struct Pair<T, U>
{
	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T First;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public U Second;

	[Token(Token = "0x60008A5")]
	public Pair(T first, U second)
	{
	}
}
[Token(Token = "0x2000111")]
public struct Point : IEquatable<Point>
{
	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int x;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int y;

	[Token(Token = "0x1700009D")]
	public static Point Zero
	{
		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x9F1A18", Offset = "0x9F1A18", VA = "0x9F1A18")]
		get
		{
			return default(Point);
		}
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x9F1974", Offset = "0x9F1974", VA = "0x9F1974")]
	public Point(int x, int y)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x9F197C", Offset = "0x9F197C", VA = "0x9F197C")]
	public Point(CPoint cp)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x9F19A0", Offset = "0x9F19A0", VA = "0x9F19A0")]
	public Point(Vector2 v)
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x9F19D8", Offset = "0x9F19D8", VA = "0x9F19D8")]
	public static bool operator !=(Point a, Point b)
	{
		return default(bool);
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x9F19F8", Offset = "0x9F19F8", VA = "0x9F19F8")]
	public static bool operator ==(Point a, Point b)
	{
		return default(bool);
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x9F1A20", Offset = "0x9F1A20", VA = "0x9F1A20", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x9F1AB8", Offset = "0x9F1AB8", VA = "0x9F1AB8", Slot = "4")]
	public bool Equals(Point other)
	{
		return default(bool);
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x9F1AE0", Offset = "0x9F1AE0", VA = "0x9F1AE0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x9F1B24", Offset = "0x9F1B24", VA = "0x9F1B24")]
	public static Point operator +(Point p1, Point p2)
	{
		return default(Point);
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x9F1B3C", Offset = "0x9F1B3C", VA = "0x9F1B3C")]
	public static Point operator -(Point p1, Point p2)
	{
		return default(Point);
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x9F1B54", Offset = "0x9F1B54", VA = "0x9F1B54")]
	public static Point operator /(Point p1, int v)
	{
		return default(Point);
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x9F1B68", Offset = "0x9F1B68", VA = "0x9F1B68")]
	public static Point operator *(Point p1, int v)
	{
		return default(Point);
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x9F1B7C", Offset = "0x9F1B7C", VA = "0x9F1B7C")]
	public float DistanceSq()
	{
		return default(float);
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x9F1C0C", Offset = "0x9F1C0C", VA = "0x9F1C0C")]
	public int ManhattanDistance()
	{
		return default(int);
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x9F1C94", Offset = "0x9F1C94", VA = "0x9F1C94")]
	public Point Clamp(IntRect rect)
	{
		return default(Point);
	}
}
[Token(Token = "0x2000112")]
public class Pool<T> where T : class, new()
{
	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<T> items;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<bool> availability;

	[Token(Token = "0x60008B6")]
	public Pool()
	{
	}

	[Token(Token = "0x60008B7")]
	public Pool(int capacity)
	{
	}

	[Token(Token = "0x60008B8")]
	public T Get()
	{
		return null;
	}

	[Token(Token = "0x60008B9")]
	public void Free(T item)
	{
	}
}
[Token(Token = "0x2000113")]
public class Utils
{
	[Token(Token = "0x2000374")]
	public class RaycastDistanceComparer : IComparer<RaycastHit>
	{
		[Token(Token = "0x6001972")]
		[Address(RVA = "0xEE2210", Offset = "0xEE2210", VA = "0xEE2210", Slot = "4")]
		public int Compare(RaycastHit x, RaycastHit y)
		{
			return default(int);
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xEE20F8", Offset = "0xEE20F8", VA = "0xEE20F8")]
		public RaycastDistanceComparer()
		{
		}
	}

	[Token(Token = "0x2000375")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BA18", Offset = "0x75BA18")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string nameSpace;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Func<Type, bool> <>9__0;

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xEDEBFC", Offset = "0xEDEBFC", VA = "0xEDEBFC")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xEE2100", Offset = "0xEE2100", VA = "0xEE2100")]
		internal bool <GetTypesInNamespace>b__0(Type t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000376")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BA28", Offset = "0x75BA28")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type requirement;

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xEE0704", Offset = "0xEE0704", VA = "0xEE0704")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xEE2148", Offset = "0xEE2148", VA = "0xEE2148")]
		internal bool <Requires>b__0(RequireComponent rc)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000377")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BA38", Offset = "0x75BA38")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type t;

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xEE0804", Offset = "0xEE0804", VA = "0xEE0804")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xEE217C", Offset = "0xEE217C", VA = "0xEE217C")]
		internal bool <FindDependencies>b__0(Component c)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastDistanceComparer raycastDistanceComparer;

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xEDD710", Offset = "0xEDD710", VA = "0xEDD710")]
	public static float Sq(float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xEDD718", Offset = "0xEDD718", VA = "0xEDD718")]
	public static int Sq(int value)
	{
		return default(int);
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xEDD720", Offset = "0xEDD720", VA = "0xEDD720")]
	public static double Sq(double value)
	{
		return default(double);
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xEDD728", Offset = "0xEDD728", VA = "0xEDD728")]
	public static Vector2 Slerp(Vector2 from, Vector2 to, float f)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xEDD938", Offset = "0xEDD938", VA = "0xEDD938")]
	public static bool IntersectCircleRectangle(Vector2 circleCenter, float circleRadius, Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xEDDA90", Offset = "0xEDDA90", VA = "0xEDDA90")]
	public static Vector2 ProjectPointOnSegment(Vector2 vPoint, Vector2 vStart, Vector2 vEnd)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xEDDB40", Offset = "0xEDDB40", VA = "0xEDDB40")]
	public static Vector2 ProjectPointOnSegment(Vector2 vPoint, Vector2 vStart, Vector2 vEnd, out float f)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xEDDCC8", Offset = "0xEDDCC8", VA = "0xEDDCC8")]
	public static int ClosestSegmentInPath(List<Vector2> path, Vector2 vPoint)
	{
		return default(int);
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xEDDF48", Offset = "0xEDDF48", VA = "0xEDDF48")]
	public static int ClosestSegmentInPath(List<Vector2> path, Vector2 vPoint, out Vector2 vProjection)
	{
		return default(int);
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xEDDFE0", Offset = "0xEDDFE0", VA = "0xEDDFE0")]
	public static int ClosestSegmentInPath(List<Vector2> path, Vector2 vPoint, out float f)
	{
		return default(int);
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xEDDD60", Offset = "0xEDDD60", VA = "0xEDDD60")]
	public static int ClosestSegmentInPath(List<Vector2> path, Vector2 vPoint, out Vector2 vProjection, out float f)
	{
		return default(int);
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xEDE078", Offset = "0xEDE078", VA = "0xEDE078")]
	public static float DistanceToSegmentSq(Vector2 vPoint, Vector2 vStart, Vector2 vEnd)
	{
		return default(float);
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xEDE184", Offset = "0xEDE184", VA = "0xEDE184")]
	public static float DistanceToSegment(Vector2 vPoint, Vector2 vStart, Vector2 vEnd)
	{
		return default(float);
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xEDE278", Offset = "0xEDE278", VA = "0xEDE278")]
	public static float GetSlope(float fX1, float fY1, float fX2, float fY2)
	{
		return default(float);
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xEDE288", Offset = "0xEDE288", VA = "0xEDE288")]
	public static float GetSlopeInv(float fX1, float fY1, float fX2, float fY2)
	{
		return default(float);
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xEDE298", Offset = "0xEDE298", VA = "0xEDE298")]
	public static float GetSlope(float fX1, float fY1, float fX2, float fY2, bool bInvert)
	{
		return default(float);
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xEDE344", Offset = "0xEDE344", VA = "0xEDE344")]
	public static bool SegmentIntersect(ref Vector2 vStart, ref Vector2 vEnd, ref Vector2 vStart2, ref Vector2 vEnd2, out Vector2 vIntersection)
	{
		return default(bool);
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xEDE518", Offset = "0xEDE518", VA = "0xEDE518")]
	public static bool SegmentIntersect(ref Vector2 vStart, ref Vector2 vEnd, ref Vector2 vStart2, ref Vector2 vEnd2, ref Vector2 vS, out Vector2 vIntersection)
	{
		return default(bool);
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xEDE6C8", Offset = "0xEDE6C8", VA = "0xEDE6C8")]
	public static Vector3 Plane3Intersect(Plane p1, Plane p2, Plane p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xEDE9D0", Offset = "0xEDE9D0", VA = "0xEDE9D0")]
	public static bool IsInLayerMask(GameObject obj, LayerMask layerMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xEDEA18", Offset = "0xEDEA18", VA = "0xEDEA18")]
	public static int NumberOfSetBits(int i)
	{
		return default(int);
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xEDEA4C", Offset = "0xEDEA4C", VA = "0xEDEA4C")]
	public static void GetTypesInNamespace(List<Type> list, string nameSpace)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xEDEC04", Offset = "0xEDEC04", VA = "0xEDEC04")]
	public static Vector3 BezierInterpolate(Vector3 vP1, Vector3 vP2, Vector3 vP3, Vector3 vP4, float param)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xEDEDD0", Offset = "0xEDEDD0", VA = "0xEDEDD0")]
	public static bool IsAncestor(Transform obj, Transform parent)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xEDEEB8", Offset = "0xEDEEB8", VA = "0xEDEEB8")]
	public static string WordWrap(string sourceStr, TextMesh textMesh, float wrapLimit)
	{
		return null;
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xEDF26C", Offset = "0xEDF26C", VA = "0xEDF26C")]
	public static string WordWrapChinese(string sourceStr, TextMesh textMesh, float wrapLimit)
	{
		return null;
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xEDF594", Offset = "0xEDF594", VA = "0xEDF594")]
	public static float GetAngleToPoint(Transform refTransform, Vector3 targetPoint)
	{
		return default(float);
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xEDF698", Offset = "0xEDF698", VA = "0xEDF698")]
	public static float GetAngleToPointFlat(Transform refTransform, Vector3 targetPoint)
	{
		return default(float);
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xEDF78C", Offset = "0xEDF78C", VA = "0xEDF78C")]
	public static Vector3 GetPositionFromAncestor(Transform obj, Transform reference)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xEDF800", Offset = "0xEDF800", VA = "0xEDF800")]
	public static Quaternion GetRotationFromAncestor(Transform obj, Transform ancestor)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60008D8")]
	public static T GetComponentInAncestor<T>(Transform obj)
	{
		return (T)null;
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xEDF9B8", Offset = "0xEDF9B8", VA = "0xEDF9B8")]
	public static Bounds TransformBoundsToWorldSpace(Bounds bounds, Transform transform)
	{
		return default(Bounds);
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xEDFB68", Offset = "0xEDFB68", VA = "0xEDFB68")]
	public static bool PointInBox(Vector3 point, BoxCollider box)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xEDFD00", Offset = "0xEDFD00", VA = "0xEDFD00")]
	public static bool InDistance(Vector3 first, Vector3 second, float range)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xEDFDE8", Offset = "0xEDFDE8", VA = "0xEDFDE8")]
	public static bool InDistanceGround(Vector3 first, Vector3 second, float range)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xEDFEB4", Offset = "0xEDFEB4", VA = "0xEDFEB4")]
	public static float MapRange(float value, float rangeMin, float rangeMax)
	{
		return default(float);
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xEDFF3C", Offset = "0xEDFF3C", VA = "0xEDFF3C")]
	public static float Remap(float value, float oldRangeMin, float oldRangeMax, float newRangeMin, float newRangeMax)
	{
		return default(float);
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xEE0008", Offset = "0xEE0008", VA = "0xEE0008")]
	public static int CombineHashCodes(IEnumerable<int> hashCodes)
	{
		return default(int);
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xEE02A8", Offset = "0xEE02A8", VA = "0xEE02A8")]
	public static int CombineHashCodes(IEnumerable<object> objs)
	{
		return default(int);
	}

	[Token(Token = "0x60008E1")]
	public static void Swap<T>(ref T first, ref T second)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xEE0580", Offset = "0xEE0580", VA = "0xEE0580")]
	private static bool Requires(Type obj, Type requirement)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xEE070C", Offset = "0xEE070C", VA = "0xEE070C")]
	public static Component[] FindDependencies(GameObject go, Type t)
	{
		return null;
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xEE080C", Offset = "0xEE080C", VA = "0xEE080C")]
	public static void SortRaycast(RaycastHit[] results, int numResults)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xEE089C", Offset = "0xEE089C", VA = "0xEE089C")]
	public static Vector3 GetBarycentricCoords(Vector3 vPoint, Vector3 vA, Vector3 vB, Vector3 vC)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xEE0B10", Offset = "0xEE0B10", VA = "0xEE0B10")]
	public static float Wrap01(float v)
	{
		return default(float);
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xEE0B48", Offset = "0xEE0B48", VA = "0xEE0B48")]
	public static Vector2 Wrap01(Vector2 uv)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xEE0C2C", Offset = "0xEE0C2C", VA = "0xEE0C2C")]
	public static List<Pair<int, int>> ComputeMinSpanningTree(List<Vector2> positions, List<Pair<int, int>> edges)
	{
		return null;
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xEE0F54", Offset = "0xEE0F54", VA = "0xEE0F54")]
	public static Bounds GetRendererHierarchyBounds(GameObject go)
	{
		return default(Bounds);
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xEE10EC", Offset = "0xEE10EC", VA = "0xEE10EC")]
	public static void AttachItemToHand(GameObject item, Hand hand)
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xEE14B4", Offset = "0xEE14B4", VA = "0xEE14B4")]
	public static Vector3 Steer(Vector3 currentSpeed, Vector3 desiredVelocity, float maxSpeed, float maxForce, float mass)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xEE175C", Offset = "0xEE175C", VA = "0xEE175C")]
	public static Vector3 SteerApproach(Vector3 target, Vector3 currentPosition, float maxSpeed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xEE18E4", Offset = "0xEE18E4", VA = "0xEE18E4")]
	public static bool CheckLineOfSight(Vector3 originPos, Transform target, Transform source, Collider sourceCollider, RaycastHit[] cachedHits)
	{
		return default(bool);
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xEE1C40", Offset = "0xEE1C40", VA = "0xEE1C40")]
	public static bool CheckLineOfSight(Vector3 originPos, Vector3 target, Transform source, Collider sourceCollider, RaycastHit[] cachedHits, [Optional] Transform targetObj)
	{
		return default(bool);
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xEE1FE4", Offset = "0xEE1FE4", VA = "0xEE1FE4")]
	public static Vector3 ToGround(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xEE2080", Offset = "0xEE2080", VA = "0xEE2080")]
	public Utils()
	{
	}
}
[Token(Token = "0x2000114")]
public class HandPoseProxy : MonoBehaviour
{
	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Hand.Handedness handedness;

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x9CDE00", Offset = "0x9CDE00", VA = "0x9CDE00")]
	public HandPoseProxy()
	{
	}
}
[Token(Token = "0x2000115")]
public interface IRoomInfestationPart
{
	[Token(Token = "0x1700009E")]
	GameObject gameObject
	{
		[Token(Token = "0x60008F3")]
		get;
	}

	[Token(Token = "0x60008F4")]
	void SetInfestationLevel(float progress);
}
[Token(Token = "0x2000116")]
public class RoomInfestation : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x2000378")]
	private class SerializedData
	{
		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool infestated;

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xA52D70", Offset = "0xA52D70", VA = "0xA52D70")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x2000379")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BA48", Offset = "0x75BA48")]
	private sealed class <Initialize_co>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomInfestation <>4__this;

		[Token(Token = "0x170001D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600197E")]
			[Address(RVA = "0xA536BC", Offset = "0xA536BC", VA = "0xA536BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001980")]
			[Address(RVA = "0xA53724", Offset = "0xA53724", VA = "0xA53724", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xA527CC", Offset = "0xA527CC", VA = "0xA527CC")]
		[DebuggerHidden]
		public <Initialize_co>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xA535F0", Offset = "0xA535F0", VA = "0xA535F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xA535F4", Offset = "0xA535F4", VA = "0xA535F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xA536C4", Offset = "0xA536C4", VA = "0xA536C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200037A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BA58", Offset = "0x75BA58")]
	private sealed class <SpawnParts_co>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomInfestation <>4__this;

		[Token(Token = "0x170001D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001984")]
			[Address(RVA = "0xA53B60", Offset = "0xA53B60", VA = "0xA53B60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001986")]
			[Address(RVA = "0xA53BC8", Offset = "0xA53BC8", VA = "0xA53BC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xA52874", Offset = "0xA52874", VA = "0xA52874")]
		[DebuggerHidden]
		public <SpawnParts_co>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xA53A3C", Offset = "0xA53A3C", VA = "0xA53A3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xA53A40", Offset = "0xA53A40", VA = "0xA53A40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xA53B68", Offset = "0xA53B68", VA = "0xA53B68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200037B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BA68", Offset = "0x75BA68")]
	private sealed class <CombinePartDecals_co>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomInfestation <>4__this;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<EasyDecal> sourceDecals;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <wasActive>5__2;

		[Token(Token = "0x170001D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600198A")]
			[Address(RVA = "0xA53580", Offset = "0xA53580", VA = "0xA53580", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600198C")]
			[Address(RVA = "0xA535E8", Offset = "0xA535E8", VA = "0xA535E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xA52938", Offset = "0xA52938", VA = "0xA52938")]
		[DebuggerHidden]
		public <CombinePartDecals_co>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xA52EE4", Offset = "0xA52EE4", VA = "0xA52EE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xA52EE8", Offset = "0xA52EE8", VA = "0xA52EE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xA53588", Offset = "0xA53588", VA = "0xA53588", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200037C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BA78", Offset = "0x75BA78")]
	private sealed class <PlaySounds_co>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomInfestation <>4__this;

		[Token(Token = "0x170001D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001990")]
			[Address(RVA = "0xA539CC", Offset = "0xA539CC", VA = "0xA539CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001992")]
			[Address(RVA = "0xA53A34", Offset = "0xA53A34", VA = "0xA53A34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xA52CD0", Offset = "0xA52CD0", VA = "0xA52CD0")]
		[DebuggerHidden]
		public <PlaySounds_co>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xA5372C", Offset = "0xA5372C", VA = "0xA5372C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xA53730", Offset = "0xA53730", VA = "0xA53730", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xA539D4", Offset = "0xA539D4", VA = "0xA539D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isInfestated;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool startInfestated;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float infestationLevel;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ignoreLightLevel;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float forcedInfestationLevel;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float forcedInfestationCooldown;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RoomInfestationData data;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material infestatedSurfaceMaterial;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool addedSurfaceMaterials;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float minThreshold;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float maxParallax;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<IRoomInfestationPart> parts;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<GameObject> partDecals;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material[] partDecalsMaterials;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<Material, Material> matSubstitutions;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<Renderer, List<Material>> originalMaterials;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Room room;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RoomPower rPower;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RoomMarker.RoomMarkerCollection infestationMarkers;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float spreadTimer;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isInitializing;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int achievementCooldown;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75D444", Offset = "0x75D444")]
	public bool _ToggleBtn;

	[Token(Token = "0x1700009F")]
	public bool IsInfestated
	{
		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xA50AE8", Offset = "0xA50AE8", VA = "0xA50AE8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xA50AF0", Offset = "0xA50AF0", VA = "0xA50AF0")]
		set
		{
		}
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xA50BA4", Offset = "0xA50BA4", VA = "0xA50BA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xA50E6C", Offset = "0xA50E6C", VA = "0xA50E6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xA5107C", Offset = "0xA5107C", VA = "0xA5107C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xA511DC", Offset = "0xA511DC", VA = "0xA511DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xA51694", Offset = "0xA51694", VA = "0xA51694")]
	private void ApplyInfestationLevel(float visualLevel)
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xA50B10", Offset = "0xA50B10", VA = "0xA50B10")]
	public void SetInfestated(bool isInfestated, bool instantaneous = false)
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xA525DC", Offset = "0xA525DC", VA = "0xA525DC")]
	public bool ReduceForcedInfestation(float factor = 1f)
	{
		return default(bool);
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xA51F00", Offset = "0xA51F00", VA = "0xA51F00")]
	private void AddSurfaceMaterial()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xA51998", Offset = "0xA51998", VA = "0xA51998")]
	private void RemoveSurfaceMaterial()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xA51160", Offset = "0xA51160", VA = "0xA51160")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765400", Offset = "0x765400")]
	private IEnumerator Initialize_co()
	{
		return null;
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xA527F8", Offset = "0xA527F8", VA = "0xA527F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765464", Offset = "0x765464")]
	private IEnumerator SpawnParts_co()
	{
		return null;
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xA528A0", Offset = "0xA528A0", VA = "0xA528A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7654C8", Offset = "0x7654C8")]
	private IEnumerator CombinePartDecals_co(List<EasyDecal> sourceDecals)
	{
		return null;
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xA51BA8", Offset = "0xA51BA8", VA = "0xA51BA8")]
	private void SetPartsActive(bool active)
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xA51DEC", Offset = "0xA51DEC", VA = "0xA51DEC")]
	private void ResetSpreadTimer()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xA52964", Offset = "0xA52964", VA = "0xA52964")]
	private void ToggleBtn()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xA52978", Offset = "0xA52978", VA = "0xA52978")]
	private void OnRoomPowerChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xA52BEC", Offset = "0xA52BEC", VA = "0xA52BEC")]
	public static bool IsInInfestatedRoom(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xA50DF0", Offset = "0xA50DF0", VA = "0xA50DF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76552C", Offset = "0x76552C")]
	private IEnumerator PlaySounds_co()
	{
		return null;
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xA52CFC", Offset = "0xA52CFC", VA = "0xA52CFC", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xA52D78", Offset = "0xA52D78", VA = "0xA52D78", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xA52DEC", Offset = "0xA52DEC", VA = "0xA52DEC", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xA52DF0", Offset = "0xA52DF0", VA = "0xA52DF0")]
	public RoomInfestation()
	{
	}
}
[Token(Token = "0x2000117")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7590B0", Offset = "0x7590B0")]
public class RoomInfestationData : ScriptableObject
{
	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float appearSpeed;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float disappearSpeed;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float forcedInfestationSpeedFactor;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float forcedInfestationCooldown;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SwitchRefMaterial infestatedSurfaceMaterial;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Shader[] shaderSubstitutionsEnvironment;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader[] shaderSubstitutionsInfestation;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SwitchRefListGameObject partPrefabs;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D4A4", Offset = "0x75D4A4")]
	public AudioCue ambienceSounds;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float soundIntervalMin;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float soundIntervalMax;

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xA53BD0", Offset = "0xA53BD0", VA = "0xA53BD0")]
	public RoomInfestationData()
	{
	}
}
[Token(Token = "0x2000118")]
public class RoomInfestationIgnore : MonoBehaviour
{
	[Token(Token = "0x600090E")]
	[Address(RVA = "0xA53BF0", Offset = "0xA53BF0", VA = "0xA53BF0")]
	public RoomInfestationIgnore()
	{
	}
}
[Token(Token = "0x2000119")]
public class RoomInfestationPart : MonoBehaviour, IRoomInfestationPart
{
	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool applyScale;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 baseScale;

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xA53BF8", Offset = "0xA53BF8", VA = "0xA53BF8")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xA53C34", Offset = "0xA53C34", VA = "0xA53C34", Slot = "5")]
	public void SetInfestationLevel(float progress)
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xA53D08", Offset = "0xA53D08", VA = "0xA53D08")]
	public RoomInfestationPart()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000912")]
	[Address(RVA = "0xA53D18", Offset = "0xA53D18", VA = "0xA53D18", Slot = "4")]
	private GameObject IRoomInfestationPart.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x200011A")]
public class InputExt : Singleton<InputExt>
{
	[Token(Token = "0x200037D")]
	public enum Button
	{
		[Token(Token = "0x40019F0")]
		Action,
		[Token(Token = "0x40019F1")]
		Teleport,
		[Token(Token = "0x40019F2")]
		Grab,
		[Token(Token = "0x40019F3")]
		Inventory,
		[Token(Token = "0x40019F4")]
		Menu,
		[Token(Token = "0x40019F5")]
		SecondaryButton
	}

	[Token(Token = "0x200037E")]
	public enum EControllerType
	{
		[Token(Token = "0x40019F7")]
		Oculus,
		[Token(Token = "0x40019F8")]
		Vive,
		[Token(Token = "0x40019F9")]
		WindowsMR,
		[Token(Token = "0x40019FA")]
		Index,
		[Token(Token = "0x40019FB")]
		HPMotionControllers,
		[Token(Token = "0x40019FC")]
		Generic
	}

	[Token(Token = "0x200037F")]
	public enum Swipe
	{
		[Token(Token = "0x40019FE")]
		Right,
		[Token(Token = "0x40019FF")]
		Left,
		[Token(Token = "0x4001A00")]
		Up,
		[Token(Token = "0x4001A01")]
		Down
	}

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Hand.Handedness primaryHand;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Hand.Handedness secondaryHand;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 lastAxisLeft;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 lastAxisRight;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 axisLeft;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 axisRight;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool grabAxisWasPressedLeft;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool grabAxisIsPressedLeft;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	private bool grabAxisWasPressedRight;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	private bool grabAxisIsPressedRight;

	[Token(Token = "0x400089D")]
	private const float grabAxisPressThreshold = 0.7f;

	[Token(Token = "0x400089E")]
	private const float grabAxisReleaseThreshold = 0.4f;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool btnTeleportIsDown;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool btnTeleportWasDown;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool useOpenVRLayout;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	public bool requireTouchpadPress;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private EControllerType _controllerType;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float controllerTypeUpdateTimer;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool firstUpdate;

	[Token(Token = "0x40008A6")]
	private const float swipeThreshold = 0.7f;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<string, string> controlTexts;

	[Token(Token = "0x170000A0")]
	public static EControllerType ControllerType
	{
		[Token(Token = "0x6000915")]
		[Address(RVA = "0x9E03AC", Offset = "0x9E03AC", VA = "0x9E03AC")]
		get
		{
			return default(EControllerType);
		}
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x9E02F4", Offset = "0x9E02F4", VA = "0x9E02F4")]
	public static Hand.Handedness GetPrimaryHand()
	{
		return default(Hand.Handedness);
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x9E0350", Offset = "0x9E0350", VA = "0x9E0350")]
	public static Hand.Handedness GetSecondaryHand()
	{
		return default(Hand.Handedness);
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x9E0408", Offset = "0x9E0408", VA = "0x9E0408")]
	private void Start()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x9E05D4", Offset = "0x9E05D4", VA = "0x9E05D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x9E087C", Offset = "0x9E087C", VA = "0x9E087C")]
	private EControllerType FindControllerType(bool printToDebug = false)
	{
		return default(EControllerType);
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x9E0C6C", Offset = "0x9E0C6C", VA = "0x9E0C6C")]
	public static bool GetButton(Button btn, Hand.Handedness hand = Hand.Handedness.Primary)
	{
		return default(bool);
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x9E0FB0", Offset = "0x9E0FB0", VA = "0x9E0FB0")]
	public static bool GetButtonDown(Button btn, Hand.Handedness hand = Hand.Handedness.Primary)
	{
		return default(bool);
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x9E11D8", Offset = "0x9E11D8", VA = "0x9E11D8")]
	public static bool GetButtonUp(Button btn, Hand.Handedness hand = Hand.Handedness.Primary)
	{
		return default(bool);
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x9E0B0C", Offset = "0x9E0B0C", VA = "0x9E0B0C")]
	public static float GetButtonAxis(Button btn, Hand.Handedness hand = Hand.Handedness.Primary)
	{
		return default(float);
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x9E0930", Offset = "0x9E0930", VA = "0x9E0930")]
	public static Vector2 GetAxis(Hand.Handedness hand = Hand.Handedness.Primary, bool requirePress = true)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x9E141C", Offset = "0x9E141C", VA = "0x9E141C")]
	public static bool GetRecenterDown()
	{
		return default(bool);
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x9E1540", Offset = "0x9E1540", VA = "0x9E1540")]
	public static bool GetHandPointing(Hand.Handedness hand = Hand.Handedness.Primary)
	{
		return default(bool);
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x9E1688", Offset = "0x9E1688", VA = "0x9E1688")]
	public static bool GetHandThumbsUp(Hand.Handedness hand = Hand.Handedness.Primary)
	{
		return default(bool);
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x9E17C8", Offset = "0x9E17C8", VA = "0x9E17C8")]
	public static bool GetSwipe(Swipe swipe, Hand.Handedness hand = Hand.Handedness.Primary)
	{
		return default(bool);
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x9E191C", Offset = "0x9E191C", VA = "0x9E191C")]
	public static void TriggerHapticPulse(Hand.Handedness hand, float frequency, float amplitude)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x9E0E60", Offset = "0x9E0E60", VA = "0x9E0E60")]
	private static Hand.Handedness ResolveHand(Hand.Handedness hand)
	{
		return default(Hand.Handedness);
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x9E19B4", Offset = "0x9E19B4", VA = "0x9E19B4")]
	public static Dictionary<string, string> GetControlTexts()
	{
		return null;
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x9E0884", Offset = "0x9E0884", VA = "0x9E0884")]
	public void ResetControlTexts()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x9E0F90", Offset = "0x9E0F90", VA = "0x9E0F90")]
	private static OVRInput.Controller OVR_GetControllerForHand(Hand.Handedness hand)
	{
		return default(OVRInput.Controller);
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x9E0EFC", Offset = "0x9E0EFC", VA = "0x9E0EFC")]
	private static OVRInput.Button OVR_GetButton(Button btn)
	{
		return default(OVRInput.Button);
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x9E1400", Offset = "0x9E1400", VA = "0x9E1400")]
	private static OVRInput.Axis1D OVR_GetButtonAxis(Button btn)
	{
		return default(OVRInput.Axis1D);
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x9E25E4", Offset = "0x9E25E4", VA = "0x9E25E4")]
	public InputExt()
	{
	}
}
[Token(Token = "0x200011B")]
public class Armor : Equipable
{
	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75D4DC", Offset = "0x75D4DC")]
	public float damageResistance;

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xB6C1F8", Offset = "0xB6C1F8", VA = "0xB6C1F8", Slot = "4")]
	protected override bool CheckCanEquip()
	{
		return default(bool);
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xB6C228", Offset = "0xB6C228", VA = "0xB6C228", Slot = "5")]
	protected override void Equip()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xB6C374", Offset = "0xB6C374", VA = "0xB6C374")]
	public Armor()
	{
	}
}
[Token(Token = "0x200011C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7590F4", Offset = "0x7590F4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7590F4", Offset = "0x7590F4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7590F4", Offset = "0x7590F4")]
[SelectionBase]
public class Baton : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform muzzle;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform staff;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float staffRetraction;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D4F4", Offset = "0x75D4F4")]
	public Health.DamageType damageType;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int damageAmount;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float damageRadius;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float damageTime;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayerMask layerMask;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float heatupSpeed;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float cooldownSpeed;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D52C", Offset = "0x75D52C")]
	public ParticleSystem flareFX;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem sparksFX;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource humSound;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioCue sparkSounds;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MeshRenderer[] meshRenderers;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool inHand;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float deployFactor;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float damageCooldown;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float activationHeating;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool overheated;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material mainMaterial;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color emissionColor;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Lightning lightningFX;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private HandTool handTool;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Item item;

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xAC9F98", Offset = "0xAC9F98", VA = "0xAC9F98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xACA0B4", Offset = "0xACA0B4", VA = "0xACA0B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xACA1D0", Offset = "0xACA1D0", VA = "0xACA1D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xACA310", Offset = "0xACA310", VA = "0xACA310")]
	private void Start()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xACA3D0", Offset = "0xACA3D0", VA = "0xACA3D0")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xACA3E0", Offset = "0xACA3E0", VA = "0xACA3E0")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xACA488", Offset = "0xACA488", VA = "0xACA488")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xACA8E8", Offset = "0xACA8E8", VA = "0xACA8E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xACAA6C", Offset = "0xACAA6C", VA = "0xACAA6C", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xACA3CC", Offset = "0xACA3CC", VA = "0xACA3CC", Slot = "5")]
	public void DeserializeState(string jsonString)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xACAAB4", Offset = "0xACAAB4", VA = "0xACAAB4", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xACAB30", Offset = "0xACAB30", VA = "0xACAB30")]
	public Baton()
	{
	}
}
[Token(Token = "0x200011D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7591B8", Offset = "0x7591B8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7591B8", Offset = "0x7591B8")]
public class Beacon : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x2000380")]
	private class SerializedData
	{
		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int pathIdx;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint pathColor;

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xACBAC0", Offset = "0xACBAC0", VA = "0xACBAC0")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer[] mainRenderers;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x75D564", Offset = "0x75D564")]
	public Color defaultColor;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioCue soundClipOpen;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioCue soundClipClose;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioCue soundClipPing;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ItemLatch itemLatch;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animation animation;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int pathIdx;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Color pathColor;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int pingSoundTask;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material bodyMaterial;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool deserialized;

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xACAB5C", Offset = "0xACAB5C", VA = "0xACAB5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xACABE0", Offset = "0xACABE0", VA = "0xACABE0")]
	private void Start()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xACAE4C", Offset = "0xACAE4C", VA = "0xACAE4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xACB07C", Offset = "0xACB07C", VA = "0xACB07C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xACB324", Offset = "0xACB324", VA = "0xACB324")]
	private void Update()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xACB4AC", Offset = "0xACB4AC", VA = "0xACB4AC")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xACB4B0", Offset = "0xACB4B0", VA = "0xACB4B0")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xACB4B4", Offset = "0xACB4B4", VA = "0xACB4B4")]
	private void OnLatchingStart()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xACB514", Offset = "0xACB514", VA = "0xACB514")]
	private void OnLatched()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xACB884", Offset = "0xACB884", VA = "0xACB884")]
	private void OnUnlatched()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xACB9FC", Offset = "0xACB9FC", VA = "0xACB9FC")]
	private void OnPlayPing()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xACBA38", Offset = "0xACBA38", VA = "0xACBA38", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xACAD98", Offset = "0xACAD98", VA = "0xACAD98", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xACBAC8", Offset = "0xACBAC8", VA = "0xACBAC8", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xACBB44", Offset = "0xACBB44", VA = "0xACBB44")]
	public Beacon()
	{
	}
}
[Token(Token = "0x200011E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x759244", Offset = "0x759244")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x759244", Offset = "0x759244")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x759244", Offset = "0x759244")]
public class Crossbow : PlayerWeapon, IGameSerializable
{
	[Serializable]
	[Token(Token = "0x2000381")]
	public class SerializedData
	{
		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item.Properties.SerializedData arrowPackData;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ammo;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string modData;

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x967EFC", Offset = "0x967EFC", VA = "0x967EFC")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public DraggableLinear nock;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isNocked;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Collider gunCollider;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private HandTool handTool;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Hand hand;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool disableNockOnUpdate;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioCue emptySound;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioCue releasePackSound;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D57C", Offset = "0x75D57C")]
	public Transform leftArm;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform rightArm;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform trigger;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float triggerMaxRotation;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform stock;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Vector3 stockCollapsedPos;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 stockExtendedPos;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D5B4", Offset = "0x75D5B4")]
	public int maxAmmo;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[SerializeField]
	private int _ammo;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D5FC", Offset = "0x75D5FC")]
	public Collider ammoEntryArea;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private ItemReceptor ammoReceptor;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private CrossbowArrowPack arrowPack;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D634", Offset = "0x75D634")]
	public TutorialTrigger grabTutorial;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Item ammoPackTutorial;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private TutorialPanel grabPackTutorialPanel;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private TutorialPanel insertPackTutorialPanel;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private TutorialPanel nockTutorialPanel;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Item item;

	[Token(Token = "0x170000A1")]
	public int Ammo
	{
		[Token(Token = "0x6000948")]
		[Address(RVA = "0x965C48", Offset = "0x965C48", VA = "0x965C48")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x965C50", Offset = "0x965C50", VA = "0x965C50", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x965E6C", Offset = "0x965E6C", VA = "0x965E6C", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x966060", Offset = "0x966060", VA = "0x966060")]
	protected new void Awake()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x966114", Offset = "0x966114", VA = "0x966114")]
	private void Start()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x966870", Offset = "0x966870", VA = "0x966870")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x966C50", Offset = "0x966C50", VA = "0x966C50")]
	private void OnTutorial_GrabAmmo(Hand hand)
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x966ECC", Offset = "0x966ECC", VA = "0x966ECC")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x966F5C", Offset = "0x966F5C", VA = "0x966F5C")]
	private void OnNockSnap(DraggableLinear drag)
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x9670B4", Offset = "0x9670B4", VA = "0x9670B4")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x9674C8", Offset = "0x9674C8", VA = "0x9674C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x9672F4", Offset = "0x9672F4", VA = "0x9672F4")]
	protected void Shoot()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x967AC0", Offset = "0x967AC0", VA = "0x967AC0")]
	private void OnAmmoInserted(Item arrowPackItem)
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x967C54", Offset = "0x967C54", VA = "0x967C54")]
	public void InsertAmmo(CrossbowArrowPack arrowPack)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x967DC4", Offset = "0x967DC4", VA = "0x967DC4")]
	public void AddAmmo(int amount)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x967D20", Offset = "0x967D20", VA = "0x967D20")]
	public void SetAmmo(int amount)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x9661E0", Offset = "0x9661E0", VA = "0x9661E0")]
	private void UpdateAmmo()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x9678C0", Offset = "0x9678C0", VA = "0x9678C0", Slot = "8")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x966598", Offset = "0x966598", VA = "0x966598", Slot = "9")]
	public void DeserializeState(string jsonString)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x967F04", Offset = "0x967F04", VA = "0x967F04", Slot = "10")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x967F80", Offset = "0x967F80", VA = "0x967F80")]
	public Crossbow()
	{
	}
}
[Token(Token = "0x200011F")]
public class CrossbowArrowPack : MonoBehaviour
{
	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProjectileDamage damage;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] arrows;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float arrowYDelta;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float arrowBaseYPos;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int consumed;

	[Token(Token = "0x170000A2")]
	public int AmmoAmount
	{
		[Token(Token = "0x600095D")]
		[Address(RVA = "0x967CFC", Offset = "0x967CFC", VA = "0x967CFC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x967F98", Offset = "0x967F98", VA = "0x967F98")]
	private void Awake()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x967844", Offset = "0x967844", VA = "0x967844")]
	public void Shoot()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x967D28", Offset = "0x967D28", VA = "0x967D28")]
	public void Insert()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x967DD4", Offset = "0x967DD4", VA = "0x967DD4")]
	public void Release()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x9673DC", Offset = "0x9673DC", VA = "0x9673DC")]
	public void SetNockingProgress(float progress)
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x967FEC", Offset = "0x967FEC", VA = "0x967FEC")]
	public CrossbowArrowPack()
	{
	}
}
[Token(Token = "0x2000120")]
public class CrossbowCord : MonoBehaviour
{
	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer[] lineRenderers;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] bowAttachPoints;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3[] nookAttachPoints;

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x968000", Offset = "0x968000", VA = "0x968000")]
	private void Start()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x968070", Offset = "0x968070", VA = "0x968070")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x9681C0", Offset = "0x9681C0", VA = "0x9681C0")]
	public CrossbowCord()
	{
	}
}
[Token(Token = "0x2000121")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7592F8", Offset = "0x7592F8")]
public class Equipable : MonoBehaviour
{
	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 anchorPosition;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 anchorRotationAngles;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioCue equipSound;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HapticClip bHapticsClipEquip;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GhostOutline ghostOutline;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float checkRadius;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool inPosition;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool positioning;

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xA1B6B4", Offset = "0xA1B6B4", VA = "0xA1B6B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xA1B79C", Offset = "0xA1B79C", VA = "0xA1B79C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xA1B884", Offset = "0xA1B884", VA = "0xA1B884")]
	private void Start()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xA1BA10", Offset = "0xA1BA10", VA = "0xA1BA10")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xA1BD64", Offset = "0xA1BD64", VA = "0xA1BD64")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xA1BFE0", Offset = "0xA1BFE0", VA = "0xA1BFE0")]
	public void AutoEquip()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xA1C1B8", Offset = "0xA1C1B8", VA = "0xA1C1B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xA1C394", Offset = "0xA1C394", VA = "0xA1C394", Slot = "4")]
	protected virtual bool CheckCanEquip()
	{
		return default(bool);
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xA1C39C", Offset = "0xA1C39C", VA = "0xA1C39C", Slot = "5")]
	protected virtual void Equip()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xA1C3A0", Offset = "0xA1C3A0", VA = "0xA1C3A0")]
	public Equipable()
	{
	}
}
[Token(Token = "0x2000122")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75935C", Offset = "0x75935C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75935C", Offset = "0x75935C")]
[SelectionBase]
public class Flamethrower : MonoBehaviour, IModableWeapon, IAimableWeapon, IGameSerializable
{
	[Serializable]
	[Token(Token = "0x2000382")]
	public class SerializedData
	{
		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item.Properties.SerializedData ammoPackData;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ammo;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string modData;

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xA294C4", Offset = "0xA294C4", VA = "0xA294C4")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform muzzle;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform laserSightAttachPoint;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem jetFlames;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Light jetLight;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D66C", Offset = "0x75D66C")]
	public float coneAngle;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float coneLength;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float coneSpreadTime;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D6A4", Offset = "0x75D6A4")]
	public Health.DamageType damageType;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int damageAmount;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float damageTime;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public LayerMask layerMask;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D6DC", Offset = "0x75D6DC")]
	public AudioCue emptySound;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioCue releasePackSound;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioCue soundClipJet;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioCue soundClipJetStart;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioCue soundClipJetEnd;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioCue soundClipJetCompressor;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioCue soundClipBurn;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SoundwaveData noiseSoundWave;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private AudioSource soundJet;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private AudioSource soundJetCompressor;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private AudioSource soundBurn;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D714", Offset = "0x75D714")]
	[SerializeField]
	private int _ammo;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float ammoConsumptionSpeed;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float ammoConsumptionRate;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Collider ammoEntryArea;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Renderer chargeFillBarRenderer;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D760", Offset = "0x75D760")]
	public Transform trigger;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float triggerMaxRotation;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D798", Offset = "0x75D798")]
	public HapticClip bHapticsClipLeftArm;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public HapticClip bHapticsClipRightArm;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float bHapticsIntensityArms;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int bHapticsArmsTask;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public HapticClip bHapticsClipVestLeft;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public HapticClip bHapticsClipVestRight;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float bHapticsIntensityVest;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private int bHapticsVestTask;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private ItemReceptor ammoReceptor;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private HandGunMagazine ammoPack;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Collider gunCollider;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private HandTool handTool;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Hand hand;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Rigidbody rbJet;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Transform jetAttach;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool flaming;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float damageCooldown;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float flamingSpreadProgress;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float lightMaxRange;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float jetBaseSpeed;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float jetBaseLifetime;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float soundWaveTimer;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Material chargeFillBar;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Vector3 oldJetPos;

	[Token(Token = "0x170000A3")]
	public int Ammo
	{
		[Token(Token = "0x6000971")]
		[Address(RVA = "0xA26454", Offset = "0xA26454", VA = "0xA26454")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xA2645C", Offset = "0xA2645C", VA = "0xA2645C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xA26608", Offset = "0xA26608", VA = "0xA26608")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xA26770", Offset = "0xA26770", VA = "0xA26770")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xA268D8", Offset = "0xA268D8", VA = "0xA268D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xA2707C", Offset = "0xA2707C", VA = "0xA2707C")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xA271B8", Offset = "0xA271B8", VA = "0xA271B8")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xA27458", Offset = "0xA27458", VA = "0xA27458")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xA28868", Offset = "0xA28868", VA = "0xA28868")]
	private void Update()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xA27704", Offset = "0xA27704", VA = "0xA27704")]
	private void StartFlameJet()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xA2727C", Offset = "0xA2727C", VA = "0xA2727C")]
	private void StopFlameJet()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xA27A88", Offset = "0xA27A88", VA = "0xA27A88")]
	private void UpdateFlameJet()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xA28DD8", Offset = "0xA28DD8", VA = "0xA28DD8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xA290AC", Offset = "0xA290AC", VA = "0xA290AC")]
	private void OnAmmoInserted(Item ammoPackItem)
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xA29168", Offset = "0xA29168", VA = "0xA29168")]
	public void InsertAmmo(HandGunMagazine magazine)
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xA26AAC", Offset = "0xA26AAC", VA = "0xA26AAC")]
	private void UpdateAmmo()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xA28CF8", Offset = "0xA28CF8", VA = "0xA28CF8")]
	private void StopBHapticsArms()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xA28AF0", Offset = "0xA28AF0", VA = "0xA28AF0")]
	private void LoopBHapticsArms()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xA28D68", Offset = "0xA28D68", VA = "0xA28D68")]
	private void StopBHapticsVest()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xA28BF4", Offset = "0xA28BF4", VA = "0xA28BF4")]
	private void LoopBHapticsVest()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xA292B4", Offset = "0xA292B4", VA = "0xA292B4", Slot = "4")]
	public Transform GetModAttachPoint()
	{
		return null;
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xA292BC", Offset = "0xA292BC", VA = "0xA292BC", Slot = "5")]
	public Transform GetAimMuzzle()
	{
		return null;
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xA292C4", Offset = "0xA292C4", VA = "0xA292C4", Slot = "6")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xA26DEC", Offset = "0xA26DEC", VA = "0xA26DEC", Slot = "7")]
	public void DeserializeState(string jsonString)
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xA294CC", Offset = "0xA294CC", VA = "0xA294CC", Slot = "8")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xA29548", Offset = "0xA29548", VA = "0xA29548")]
	public Flamethrower()
	{
	}
}
[Token(Token = "0x2000123")]
public class GhostOutline : MonoBehaviour
{
	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material ghostMaterial;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<MeshFilter> objFilters;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Matrix4x4> objMatrices;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<MeshRenderer> objRenderers;

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x9ACE50", Offset = "0x9ACE50", VA = "0x9ACE50")]
	private void Awake()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x9ACF38", Offset = "0x9ACF38", VA = "0x9ACF38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x9ACFC0", Offset = "0x9ACFC0", VA = "0x9ACFC0")]
	private void Update()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x9AD1C8", Offset = "0x9AD1C8", VA = "0x9AD1C8")]
	public void Show(GameObject go)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x9AD68C", Offset = "0x9AD68C", VA = "0x9AD68C")]
	public GhostOutline()
	{
	}
}
[Token(Token = "0x2000124")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7593F8", Offset = "0x7593F8")]
public class Grenade : MonoBehaviour
{
	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform lockHandle;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float primingTime;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioCue lockReleaseSound;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioCue primingSound;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem primingFlareFX;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject detonationFXPrefab;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioCue detonationSound;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SoundwaveData detonationSoundwave;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool destroyOnDetonation;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D7D0", Offset = "0x75D7D0")]
	public AudioCue[] primingSequenceSounds;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int nextPrimingSound;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D808", Offset = "0x75D808")]
	public HapticClip bHapticsPrimingClipLeft;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public HapticClip bHapticsPrimingClipRight;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int bHapticsTask;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected bool primed;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Hand hand;

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x9AEC38", Offset = "0x9AEC38", VA = "0x9AEC38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x9AEDC4", Offset = "0x9AEDC4", VA = "0x9AEDC4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x9AEF50", Offset = "0x9AEF50", VA = "0x9AEF50")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x9AF658", Offset = "0x9AF658", VA = "0x9AF658")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x9AEFCC", Offset = "0x9AEFCC", VA = "0x9AEFCC")]
	protected void Prime(float maxTime = float.MaxValue)
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x9AF6F4", Offset = "0x9AF6F4", VA = "0x9AF6F4")]
	private void PlayPrimingSeq()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x9AF7C8", Offset = "0x9AF7C8", VA = "0x9AF7C8")]
	public void Detonate()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x9AFBDC", Offset = "0x9AFBDC", VA = "0x9AFBDC")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x9AF684", Offset = "0x9AF684", VA = "0x9AF684")]
	private void StopBHaptics()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x9AF57C", Offset = "0x9AF57C", VA = "0x9AF57C")]
	private void LoopBHaptics()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x9AFBF0", Offset = "0x9AFBF0", VA = "0x9AFBF0", Slot = "4")]
	protected virtual void OnDetonate()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x9AFBF4", Offset = "0x9AFBF4", VA = "0x9AFBF4", Slot = "5")]
	protected virtual void OnPrime()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x9AFBF8", Offset = "0x9AFBF8", VA = "0x9AFBF8")]
	public Grenade()
	{
	}
}
[Token(Token = "0x2000125")]
public class GrenadeEMPulse : Grenade
{
	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material usedMaterial;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float pulseDuration;

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x9AFC10", Offset = "0x9AFC10", VA = "0x9AFC10", Slot = "4")]
	protected override void OnDetonate()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x9AFF08", Offset = "0x9AFF08", VA = "0x9AFF08")]
	public GrenadeEMPulse()
	{
	}
}
[Token(Token = "0x2000126")]
public class GrenadeHE : Grenade
{
	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ExplosionDamage damageData;

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x9AFF28", Offset = "0x9AFF28", VA = "0x9AFF28", Slot = "4")]
	protected override void OnDetonate()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x9AFF6C", Offset = "0x9AFF6C", VA = "0x9AFF6C")]
	public GrenadeHE()
	{
	}
}
[Token(Token = "0x2000127")]
public class GrenadeLight : Grenade
{
	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float flareDuration;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject flareFX;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material usedMaterial;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioCue flareSound;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float flareCountdown;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ParticleSystem particlesFX;

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x9AFF84", Offset = "0x9AFF84", VA = "0x9AFF84", Slot = "4")]
	protected override void OnDetonate()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x9B02B4", Offset = "0x9B02B4", VA = "0x9B02B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x9B0458", Offset = "0x9B0458", VA = "0x9B0458")]
	public GrenadeLight()
	{
	}
}
[Token(Token = "0x2000128")]
public class GrenadeTeleporter : Grenade
{
	[Token(Token = "0x2000383")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BA88", Offset = "0x75BA88")]
	private sealed class <TeleportEnemy_co>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IAgent enemy;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrenadeTeleporter <>4__this;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <spawnPos>5__2;

		[Token(Token = "0x170001D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001999")]
			[Address(RVA = "0x9CB294", Offset = "0x9CB294", VA = "0x9CB294", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600199B")]
			[Address(RVA = "0x9CB2FC", Offset = "0x9CB2FC", VA = "0x9CB2FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x9CAA84", Offset = "0x9CAA84", VA = "0x9CAA84")]
		[DebuggerHidden]
		public <TeleportEnemy_co>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x9CAAB0", Offset = "0x9CAAB0", VA = "0x9CAAB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x9CAAB4", Offset = "0x9CAAB4", VA = "0x9CAAB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x9CB29C", Offset = "0x9CB29C", VA = "0x9CB29C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float effectRadius;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float effectRadiusPlayer;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material usedMaterial;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject primingFX;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ParticleSystem creaturePortFX;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ParticleSystem creaturePortSmallFX;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public HapticClip bHapticsTeleportClip;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Grabbable grabbable;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ParticleSystem particlesFX;

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x9B0478", Offset = "0x9B0478", VA = "0x9B0478", Slot = "5")]
	protected override void OnPrime()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x9B0650", Offset = "0x9B0650", VA = "0x9B0650", Slot = "4")]
	protected override void OnDetonate()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x9B0D44", Offset = "0x9B0D44", VA = "0x9B0D44")]
	private void TeleportPlayer()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x9B0F04", Offset = "0x9B0F04", VA = "0x9B0F04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765590", Offset = "0x765590")]
	private IEnumerator TeleportEnemy_co(IAgent enemy)
	{
		return null;
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x9B0F9C", Offset = "0x9B0F9C", VA = "0x9B0F9C")]
	private Room GetTargetRoom(Room curRoom, Room playerRoom, bool isPlayer = true)
	{
		return null;
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x9B1594", Offset = "0x9B1594", VA = "0x9B1594")]
	public GrenadeTeleporter()
	{
	}
}
[Token(Token = "0x2000129")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75945C", Offset = "0x75945C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75945C", Offset = "0x75945C")]
public class HandGun : MonoBehaviour, IGameSerializable, IModableWeapon, IAimableWeapon
{
	[Serializable]
	[Token(Token = "0x2000384")]
	public class SerializedData
	{
		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ammo;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string modData;

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x9CDC5C", Offset = "0x9CDC5C", VA = "0x9CDC5C")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Hand hand;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fireRate;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float cooldownTime;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autoFire;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float range;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool rayCast;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask layerMask;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform laserSightAttachPoint;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ProjectileDamage damageData;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform gunBody;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform muzzle;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform trigger;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float triggerMaxDisplacement;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 triggerDefaultPos;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MuzzleFlash muzzleFlash;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GunTrails gunTrails;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioCue shootSound;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioCue emptySound;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioCue releaseMagazineSound;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SoundwaveData shootSoundwave;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float shootHapticsStrength;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public HapticClip bHapticsClipLeft;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public HapticClip bHapticsClipRight;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public HapticClip bHapticsVestRecoilLeft;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public HapticClip bHapticsVestRecoilRight;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float shootHapticsVestRecoilIntensity;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D840", Offset = "0x75D840")]
	public int maxAmmo;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private int _ammo;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TMP_Text ammoCounter;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D888", Offset = "0x75D888")]
	public Collider magazineEntryArea;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private ItemReceptor magazineReceptor;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform magazineTargetPos;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioClip insertMagazineSound;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float magazineInsertSpeed;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private HandGunMagazine magazine;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float magazineEntryProgress;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 magazineStartPos;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Quaternion magazineStartRot;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private HandTool handTool;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Recoil recoilFX;

	[Token(Token = "0x170000A4")]
	public int Ammo
	{
		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x9CB8FC", Offset = "0x9CB8FC", VA = "0x9CB8FC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x9CB904", Offset = "0x9CB904", VA = "0x9CB904")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x9CBA98", Offset = "0x9CBA98", VA = "0x9CBA98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x9CBC00", Offset = "0x9CBC00", VA = "0x9CBC00")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x9CBCB0", Offset = "0x9CBCB0", VA = "0x9CBCB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x9CC3BC", Offset = "0x9CC3BC", VA = "0x9CC3BC")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x9CC4A4", Offset = "0x9CC4A4", VA = "0x9CC4A4")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x9CC584", Offset = "0x9CC584", VA = "0x9CC584")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x9CCDB0", Offset = "0x9CCDB0", VA = "0x9CCDB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x9CC7B0", Offset = "0x9CC7B0", VA = "0x9CC7B0")]
	private void Shoot()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x9CD738", Offset = "0x9CD738", VA = "0x9CD738")]
	public void AddAmmo(int amount)
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x9CD028", Offset = "0x9CD028", VA = "0x9CD028")]
	public void SetAmmo(int amount)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x9CBDA8", Offset = "0x9CBDA8", VA = "0x9CBDA8")]
	private void UpdateAmmo()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x9CD870", Offset = "0x9CD870", VA = "0x9CD870")]
	private void OnMagazineInserted(Item magItem)
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x9CD92C", Offset = "0x9CD92C", VA = "0x9CD92C")]
	public void InsertMagazine(HandGunMagazine magazine)
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x9CDB2C", Offset = "0x9CDB2C", VA = "0x9CDB2C", Slot = "7")]
	public Transform GetModAttachPoint()
	{
		return null;
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x9CDB34", Offset = "0x9CDB34", VA = "0x9CDB34", Slot = "8")]
	public Transform GetAimMuzzle()
	{
		return null;
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x9CDB3C", Offset = "0x9CDB3C", VA = "0x9CDB3C", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x9CC1C8", Offset = "0x9CC1C8", VA = "0x9CC1C8", Slot = "5")]
	public void DeserializeState(string jsonString)
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x9CDC64", Offset = "0x9CDC64", VA = "0x9CDC64", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x9CDCE0", Offset = "0x9CDCE0", VA = "0x9CDCE0")]
	public HandGun()
	{
	}
}
[Token(Token = "0x200012A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7594E8", Offset = "0x7594E8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7594E8", Offset = "0x7594E8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7594E8", Offset = "0x7594E8")]
public class HandGunMagazine : MonoBehaviour
{
	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ammoAmount;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform topPoint;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float detectionRadius;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask layerMask;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material usedMaterial;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Grabbable grabbable;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider[] colliderBuffer;

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x9CDD24", Offset = "0x9CDD24", VA = "0x9CDD24")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x9CDD84", Offset = "0x9CDD84", VA = "0x9CDD84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x9CDD88", Offset = "0x9CDD88", VA = "0x9CDD88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x9CDA90", Offset = "0x9CDA90", VA = "0x9CDA90")]
	public void Insert()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x9CD748", Offset = "0x9CD748", VA = "0x9CD748")]
	public void Release()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x9CDD8C", Offset = "0x9CDD8C", VA = "0x9CDD8C")]
	public HandGunMagazine()
	{
	}
}
[Token(Token = "0x200012B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75959C", Offset = "0x75959C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75959C", Offset = "0x75959C")]
public class HandTool : MonoBehaviour
{
	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform attachPoint;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int customPose;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Hand grabbingHand;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 inHolsterPos;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 inHolsterRot;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _isLocked;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Holster holster;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D8C0", Offset = "0x75D8C0")]
	public AudioCue holsterSound;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioCue unholsterSound;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x75D8F8", Offset = "0x75D8F8")]
	public GameObject bodyItemCollider;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private BoxCollider collider;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Highlightable highlight;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Item item;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private OcclusionTracker occlusionTracker;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Collider[] colliderBuffer;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isAttaching;

	[Token(Token = "0x170000A5")]
	public bool InHand
	{
		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x9CDE08", Offset = "0x9CDE08", VA = "0x9CDE08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A6")]
	public Hand GrabbingHand
	{
		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x9CDE78", Offset = "0x9CDE78", VA = "0x9CDE78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A7")]
	public bool IsLocked
	{
		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x9CDE80", Offset = "0x9CDE80", VA = "0x9CDE80")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A8")]
	public bool IsHolstered
	{
		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x9CDE88", Offset = "0x9CDE88", VA = "0x9CDE88")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x9CDEF8", Offset = "0x9CDEF8", VA = "0x9CDEF8")]
	public Holster GetHolster()
	{
		return null;
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x9CDF00", Offset = "0x9CDF00", VA = "0x9CDF00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x9CE050", Offset = "0x9CE050", VA = "0x9CE050")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x9CE1A0", Offset = "0x9CE1A0", VA = "0x9CE1A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x9CE280", Offset = "0x9CE280", VA = "0x9CE280")]
	private void Start()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x9CE460", Offset = "0x9CE460", VA = "0x9CE460")]
	private void OnHoverUpdate(Hand hand)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x9CE524", Offset = "0x9CE524", VA = "0x9CE524")]
	public void AttachToHand(Hand hand)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x9CE6C4", Offset = "0x9CE6C4", VA = "0x9CE6C4")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x9CECCC", Offset = "0x9CECCC", VA = "0x9CECCC")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x9CEDAC", Offset = "0x9CEDAC", VA = "0x9CEDAC")]
	public void PlaceInHolster(Holster holster)
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x9CF0C4", Offset = "0x9CF0C4", VA = "0x9CF0C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x9CF30C", Offset = "0x9CF30C", VA = "0x9CF30C")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x9CE908", Offset = "0x9CE908", VA = "0x9CE908")]
	public void SetItemPhysics(bool enabled, bool addImpulse = false)
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x9CF764", Offset = "0x9CF764", VA = "0x9CF764")]
	public HandTool()
	{
	}
}
[Token(Token = "0x200012C")]
public interface IAimableWeapon
{
	[Token(Token = "0x60009D7")]
	Transform GetAimMuzzle();
}
[Token(Token = "0x200012D")]
public interface IModableWeapon
{
	[Token(Token = "0x60009D8")]
	Transform GetModAttachPoint();
}
[Token(Token = "0x200012E")]
public interface IWeaponMod
{
	[Token(Token = "0x60009D9")]
	void OnPostDeserialize();
}
[Token(Token = "0x200012F")]
public class InventoryExpansion : Equipable
{
	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int extraCapacity;

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xBBF118", Offset = "0xBBF118", VA = "0xBBF118", Slot = "4")]
	protected override bool CheckCanEquip()
	{
		return default(bool);
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xBBF144", Offset = "0xBBF144", VA = "0xBBF144", Slot = "5")]
	protected override void Equip()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xBBF178", Offset = "0xBBF178", VA = "0xBBF178")]
	public InventoryExpansion()
	{
	}
}
[Token(Token = "0x2000130")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x759628", Offset = "0x759628")]
public class InvisibilityCloak : MonoBehaviour
{
	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float totalDuration;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float remainingPercent;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool effectActive;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material fillBar;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem activationFX;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioCue startSound;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioCue endSound;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource activeSound;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material usedMaterial;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D908", Offset = "0x75D908")]
	public HapticClip bHapticsClipLeft;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public HapticClip bHapticsClipRight;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public HapticClip bHapticsClipVest;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int bHapticsTaskHand;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int bHapticsTaskVest;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Hand hand;

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xBC3060", Offset = "0xBC3060", VA = "0xBC3060")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xBC3160", Offset = "0xBC3160", VA = "0xBC3160")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xBC3248", Offset = "0xBC3248", VA = "0xBC3248")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xBC3330", Offset = "0xBC3330", VA = "0xBC3330")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xBC3560", Offset = "0xBC3560", VA = "0xBC3560")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xBC38E0", Offset = "0xBC38E0", VA = "0xBC38E0")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xBC3444", Offset = "0xBC3444", VA = "0xBC3444")]
	private void StartCloak()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xBC36EC", Offset = "0xBC36EC", VA = "0xBC36EC")]
	private void StopCloak()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xBC3ADC", Offset = "0xBC3ADC", VA = "0xBC3ADC")]
	private void StopBHaptics()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xBC390C", Offset = "0xBC390C", VA = "0xBC390C")]
	private void LoopBHapticsHand()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xBC3A14", Offset = "0xBC3A14", VA = "0xBC3A14")]
	private void LoopBHapticsVest()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xBC3B70", Offset = "0xBC3B70", VA = "0xBC3B70")]
	public InvisibilityCloak()
	{
	}
}
[Token(Token = "0x2000131")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75968C", Offset = "0x75968C")]
public class Item : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x2000385")]
	public enum ItemType
	{
		[Token(Token = "0x4001A12")]
		Default,
		[Token(Token = "0x4001A13")]
		Ammo,
		[Token(Token = "0x4001A14")]
		Consumable,
		[Token(Token = "0x4001A15")]
		Key,
		[Token(Token = "0x4001A16")]
		Artifact,
		[Token(Token = "0x4001A17")]
		HandTool,
		[Token(Token = "0x4001A18")]
		Weapon,
		[Token(Token = "0x4001A19")]
		Grenade,
		[Token(Token = "0x4001A1A")]
		Trap
	}

	[Serializable]
	[Token(Token = "0x2000386")]
	public class Properties
	{
		[Serializable]
		[Token(Token = "0x2000491")]
		public class SerializedData
		{
			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string itemName;

			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string prefabId;

			[Token(Token = "0x4001E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isInitialized;

			[Token(Token = "0x4001E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string itemDataString;

			[Token(Token = "0x6001BEF")]
			[Address(RVA = "0xBC5ACC", Offset = "0xBC5ACC", VA = "0xBC5ACC")]
			public SerializedData()
			{
			}

			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0xBBC890", Offset = "0xBBC890", VA = "0xBBC890")]
			public SerializedData(Properties props)
			{
			}

			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0xBC5AD4", Offset = "0xBC5AD4", VA = "0xBC5AD4")]
			public void Set(Properties props)
			{
			}

			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0xBBCCF0", Offset = "0xBBCCF0", VA = "0xBBCCF0")]
			public Properties GetProperties()
			{
				return null;
			}

			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0xBC5B30", Offset = "0xBC5B30", VA = "0xBC5B30")]
			public bool IsValid()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string itemName;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemType type;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string prefabId;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CraftRecipes.IngredientList ingredients;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ignoreInfoPanel;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool ignoreInventory;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		private bool isInitialized;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string itemDataString;

		[Token(Token = "0x170001DA")]
		public string NameId
		{
			[Token(Token = "0x600199D")]
			[Address(RVA = "0xBC5A18", Offset = "0xBC5A18", VA = "0xBC5A18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		public string InfoId
		{
			[Token(Token = "0x600199E")]
			[Address(RVA = "0xBC5A6C", Offset = "0xBC5A6C", VA = "0xBC5A6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xBC3ED0", Offset = "0xBC3ED0", VA = "0xBC3ED0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xBBB56C", Offset = "0xBBB56C", VA = "0xBBB56C")]
		public Properties(Properties other)
		{
		}
	}

	[Token(Token = "0x2000387")]
	private class SerializedData
	{
		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string xform;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Properties.SerializedData properties;

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xBC5518", Offset = "0xBC5518", VA = "0xBC5518")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Properties properties;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ItemReceptor receptor;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75D940", Offset = "0x75D940")]
	private readonly ItemReceptor <Receptor>k__BackingField;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Collider[] colliderBuffer;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Highlightable highlightable;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool visionTrackedWhenThrown;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VisionTarget visionTarget;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool canCollect;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool autoUnregisterSerialization;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool ignoreRegistry;

	[Token(Token = "0x170000A9")]
	public ItemReceptor Receptor
	{
		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xBC3E58", Offset = "0xBC3E58", VA = "0xBC3E58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7655F4", Offset = "0x7655F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xBC3E60", Offset = "0xBC3E60", VA = "0xBC3E60")]
	private void Start()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xBC400C", Offset = "0xBC400C", VA = "0xBC400C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xBC41A0", Offset = "0xBC41A0", VA = "0xBC41A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xBC43E8", Offset = "0xBC43E8", VA = "0xBC43E8")]
	private void OnHoverBegin(Hand hand)
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xBC4488", Offset = "0xBC4488", VA = "0xBC4488")]
	private void OnHoverEnd(Hand hand)
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xBC4520", Offset = "0xBC4520", VA = "0xBC4520")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xBC46EC", Offset = "0xBC46EC", VA = "0xBC46EC")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xBC4B54", Offset = "0xBC4B54", VA = "0xBC4B54")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xBC5194", Offset = "0xBC5194", VA = "0xBC5194")]
	public static Item Spawn(Item prefab)
	{
		return null;
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xBC52A0", Offset = "0xBC52A0", VA = "0xBC52A0")]
	public static Item Spawn(Item prefab, Vector3 pos, Quaternion rot)
	{
		return null;
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xBBBCC4", Offset = "0xBBBCC4", VA = "0xBBBCC4")]
	public static Item Spawn(Properties itemProperties)
	{
		return null;
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xBBC250", Offset = "0xBBC250", VA = "0xBBC250")]
	public static Item Spawn(Properties itemProperties, Vector3 pos, Quaternion rot)
	{
		return null;
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xBC543C", Offset = "0xBC543C", VA = "0xBC543C", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xBC5520", Offset = "0xBC5520", VA = "0xBC5520", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xBC5858", Offset = "0xBC5858", VA = "0xBC5858", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xBC58D4", Offset = "0xBC58D4", VA = "0xBC58D4")]
	public static IGameSerializable DeserializeSpawn(string dataString)
	{
		return null;
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xBBB228", Offset = "0xBBB228", VA = "0xBBB228")]
	public void SerializeData()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xBC5644", Offset = "0xBC5644", VA = "0xBC5644")]
	private void DeserializeData()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xBC5994", Offset = "0xBC5994", VA = "0xBC5994")]
	public Item()
	{
	}
}
[Token(Token = "0x2000132")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7596F0", Offset = "0x7596F0")]
public class ItemLatch : FSMComponent
{
	[Token(Token = "0x2000388")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Normal;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Latching;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Latched;

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xBC7BD8", Offset = "0xBC7BD8", VA = "0xBC7BD8")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float latchDistance;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float latchForwardOffset;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LayerMask latchCollisionMask;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayerMask latchValidMask;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float latchSpeed;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioCue latchSound;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action onLatchingStart;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action onLatched;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action onUnlatched;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GhostOutline ghostOutline;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hasLatchPosition;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 latchPos;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Quaternion latchRot;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float latchProgress;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 origPos;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Quaternion origRot;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool forceSet;

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xBC684C", Offset = "0xBC684C", VA = "0xBC684C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xBC68C0", Offset = "0xBC68C0", VA = "0xBC68C0", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xBC69E8", Offset = "0xBC69E8", VA = "0xBC69E8", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xBC6B10", Offset = "0xBC6B10", VA = "0xBC6B10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xBC6BD0", Offset = "0xBC6BD0", VA = "0xBC6BD0")]
	public void SetLatched()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xBC6DB0", Offset = "0xBC6DB0", VA = "0xBC6DB0")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xBC6EB8", Offset = "0xBC6EB8", VA = "0xBC6EB8")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xBC7834", Offset = "0xBC7834", VA = "0xBC7834")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xBC6C80", Offset = "0xBC6C80", VA = "0xBC6C80")]
	private void Latching_Enter()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xBC7918", Offset = "0xBC7918", VA = "0xBC7918")]
	private void Latching_Update()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xBC7B24", Offset = "0xBC7B24", VA = "0xBC7B24")]
	private void Latched_Enter()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xBC7B38", Offset = "0xBC7B38", VA = "0xBC7B38")]
	private void Latched_Exit()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xBC7B4C", Offset = "0xBC7B4C", VA = "0xBC7B4C")]
	public ItemLatch()
	{
	}
}
[Token(Token = "0x2000133")]
public class ItemOnDamaged : MonoBehaviour
{
	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destroyOnDeath;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioCue deathSound;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject deathFXPrefab;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SoundwaveData soundwave;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExplosionDamage explosionDamage;

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xBC7BE0", Offset = "0xBC7BE0", VA = "0xBC7BE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xBC7CC8", Offset = "0xBC7CC8", VA = "0xBC7CC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xBC7DB0", Offset = "0xBC7DB0", VA = "0xBC7DB0")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xBC80BC", Offset = "0xBC80BC", VA = "0xBC80BC")]
	private void OnDeathEnd()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xBC8224", Offset = "0xBC8224", VA = "0xBC8224")]
	public ItemOnDamaged()
	{
	}
}
[Token(Token = "0x2000134")]
public class ItemPhysics : MonoBehaviour
{
	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioCue collisionSound;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x75D950", Offset = "0x75D950")]
	public float collisionSoundVelocity;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SoundwaveData soundwave;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D988", Offset = "0x75D988")]
	public AudioCue projectileCollisionSound;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioCue projectileDamageSound;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float projectileDamageRadius;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Health.KillSignature projectileKillSignature;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool projectileMode;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private CollisionDetectionMode oldCollisionMode;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int projectileDamage;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int projectileTask;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody projectileBody;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 lastProjectilePos;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public bool isOrbiting;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x75D9D0", Offset = "0x75D9D0")]
	public bool strictCollisionChecks;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ItemPhysicsCollisionChecker collisionChecker;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool releaseFromHandOnCollision;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float grabbingTimer;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Hand grabbingHand;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float releaseTime;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 lastReleasePos;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool wasReleasedBecauseOfCollision;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Hand.Handedness lastHandReleased;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int floorCheckTask;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Rigidbody attachedRB;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 attachedLastValidPos;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool dbgRestored;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int floorCheckNum;

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xBCA3D8", Offset = "0xBCA3D8", VA = "0xBCA3D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xBCA53C", Offset = "0xBCA53C", VA = "0xBCA53C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xBCA700", Offset = "0xBCA700", VA = "0xBCA700")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xBCAAC4", Offset = "0xBCAAC4", VA = "0xBCAAC4")]
	private void UpdateProjectile()
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xBC960C", Offset = "0xBC960C", VA = "0xBC960C")]
	public void SetProjectile(int damage)
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xBCACB8", Offset = "0xBCACB8", VA = "0xBCACB8")]
	public void DisableProjectile()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xBCAD4C", Offset = "0xBCAD4C", VA = "0xBCAD4C")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xBCB038", Offset = "0xBCB038", VA = "0xBCB038")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xBCB328", Offset = "0xBCB328", VA = "0xBCB328")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xBCB678", Offset = "0xBCB678", VA = "0xBCB678")]
	private void FloorCheck()
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xBCBA90", Offset = "0xBCBA90", VA = "0xBCBA90")]
	public ItemPhysics()
	{
	}
}
[Token(Token = "0x2000135")]
public class ItemPhysicsCollisionChecker : MonoBehaviour
{
	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isColliding;

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xBCBB34", Offset = "0xBCBB34", VA = "0xBCBB34")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xBCBC14", Offset = "0xBCBC14", VA = "0xBCBC14")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xBCBC1C", Offset = "0xBCBC1C", VA = "0xBCBC1C")]
	public ItemPhysicsCollisionChecker()
	{
	}
}
[Token(Token = "0x2000136")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x759754", Offset = "0x759754")]
public class ItemsRegistry : ScriptableObject
{
	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isLow;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] itemNames;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Item[] items;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, Item> itemsDict;

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xBC2A4C", Offset = "0xBC2A4C", VA = "0xBC2A4C")]
	public Item Get(string name)
	{
		return null;
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xBCD054", Offset = "0xBCD054", VA = "0xBCD054")]
	private void BuildDictionary()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xBCD1A8", Offset = "0xBCD1A8", VA = "0xBCD1A8")]
	public ItemsRegistry()
	{
	}
}
[Token(Token = "0x2000137")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x759798", Offset = "0x759798")]
public class LaserSightWeaponMod : MonoBehaviour, IWeaponMod
{
	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxDistance;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxDistanceLine;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform laserStartPoint;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform laserDot;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioCue activationSound;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform hoverAttachPoint;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ItemReceptor hoverReceptor;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform closestAttachPoint;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Interactable weapon;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform weaponMuzzle;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Item item;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private BoxCollider boxCollider;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Highlightable highlightable;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private LineRenderer laserLine;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool justDeserialized;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int activationCheckTask;

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xA31BD0", Offset = "0xA31BD0", VA = "0xA31BD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xA31D10", Offset = "0xA31D10", VA = "0xA31D10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xA31D14", Offset = "0xA31D14", VA = "0xA31D14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xA31DFC", Offset = "0xA31DFC", VA = "0xA31DFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xA32034", Offset = "0xA32034", VA = "0xA32034")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xA3264C", Offset = "0xA3264C", VA = "0xA3264C")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xA32FB4", Offset = "0xA32FB4", VA = "0xA32FB4")]
	private void ActivationCheck()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xA32D3C", Offset = "0xA32D3C", VA = "0xA32D3C")]
	private void OnInserted(Item item)
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xA33240", Offset = "0xA33240", VA = "0xA33240")]
	private void OnWeaponAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xA332E0", Offset = "0xA332E0", VA = "0xA332E0")]
	private void OnWeaponAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xA332E4", Offset = "0xA332E4", VA = "0xA332E4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xA33818", Offset = "0xA33818", VA = "0xA33818")]
	private void OnWeaponReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xA32B28", Offset = "0xA32B28", VA = "0xA32B28")]
	private static Transform FindWeaponMuzzle(Interactable objWeapon)
	{
		return null;
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xA33888", Offset = "0xA33888", VA = "0xA33888", Slot = "4")]
	public void OnPostDeserialize()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xA33C88", Offset = "0xA33C88", VA = "0xA33C88")]
	public LaserSightWeaponMod()
	{
	}
}
[Token(Token = "0x2000138")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7597FC", Offset = "0x7597FC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7597FC", Offset = "0x7597FC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7597FC", Offset = "0x7597FC")]
public class LightningGun : MonoBehaviour, IModableWeapon, IAimableWeapon, IGameSerializable
{
	[Serializable]
	[Token(Token = "0x2000389")]
	public class SerializedData
	{
		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string modData;

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xA39F20", Offset = "0xA39F20", VA = "0xA39F20")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform muzzle;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DraggableLinear pump;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer chargeFillBarRenderer;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float chargeUpAutoSpeed;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float chargeDownSpeed;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float pumpChargeFactor;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float charge;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float autoChargeCooldown;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform laserSightAttachPoint;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75D9E0", Offset = "0x75D9E0")]
	public Health.DamageType damageType;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int damageAmount;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float impactForce;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float damageTime;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public LayerMask layerMask;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75DA18", Offset = "0x75DA18")]
	public AudioCue soundClipSource;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioCue soundClipTarget;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource soundSource;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AudioSource soundTarget;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75DA50", Offset = "0x75DA50")]
	public ParticleSystem sparksFX;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform trigger;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float triggerMaxDisplacement;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 triggerDefaultPos;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75DA88", Offset = "0x75DA88")]
	public HapticClip bHapticsClipLeftArm;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public HapticClip bHapticsClipRightArm;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float bHapticsIntensityArms;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int bHapticsArmsTask;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public HapticClip bHapticsClipVestLeft;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public HapticClip bHapticsClipVestRight;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float bHapticsIntensityVest;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int bHapticsVestTask;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Collider gunCollider;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private HandTool handTool;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Hand hand;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Lightning lightningFX;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private MuzzleFlash muzzleFlash;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float pumpLastPos;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Material chargeFillBar;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float damageCooldown;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Item item;

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xA384B0", Offset = "0xA384B0", VA = "0xA384B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xA385CC", Offset = "0xA385CC", VA = "0xA385CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xA386E8", Offset = "0xA386E8", VA = "0xA386E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xA38808", Offset = "0xA38808", VA = "0xA38808")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xA38B30", Offset = "0xA38B30", VA = "0xA38B30")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xA38C1C", Offset = "0xA38C1C", VA = "0xA38C1C")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xA38FB8", Offset = "0xA38FB8", VA = "0xA38FB8")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xA39A2C", Offset = "0xA39A2C", VA = "0xA39A2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xA392BC", Offset = "0xA392BC", VA = "0xA392BC")]
	private void ShootLightining()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xA38D20", Offset = "0xA38D20", VA = "0xA38D20")]
	private void StopLightning()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xA39D18", Offset = "0xA39D18", VA = "0xA39D18")]
	private void StopBHapticsArms()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xA39B10", Offset = "0xA39B10", VA = "0xA39B10")]
	private void LoopBHapticsArms()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xA39D88", Offset = "0xA39D88", VA = "0xA39D88")]
	private void StopBHapticsVest()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xA39C14", Offset = "0xA39C14", VA = "0xA39C14")]
	private void LoopBHapticsVest()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xA39DF8", Offset = "0xA39DF8", VA = "0xA39DF8", Slot = "4")]
	public Transform GetModAttachPoint()
	{
		return null;
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xA39E00", Offset = "0xA39E00", VA = "0xA39E00", Slot = "5")]
	public Transform GetAimMuzzle()
	{
		return null;
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xA39E08", Offset = "0xA39E08", VA = "0xA39E08", Slot = "6")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xA38948", Offset = "0xA38948", VA = "0xA38948", Slot = "7")]
	public void DeserializeState(string jsonString)
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xA39F28", Offset = "0xA39F28", VA = "0xA39F28", Slot = "8")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xA39FA4", Offset = "0xA39FA4", VA = "0xA39FA4")]
	public LightningGun()
	{
	}
}
[Token(Token = "0x2000139")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7598B0", Offset = "0x7598B0")]
public class NoiseMaker : MonoBehaviour
{
	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] tapeWheels;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float wheelRotSpeed;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rewindLength;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioCue noiseClip;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SoundwaveData noiseSoundWave;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material usedMaterial;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool playing;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool played;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timeTape;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float rewindTime;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float soundWaveTimer;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75DAC0", Offset = "0x75DAC0")]
	public bool _activateNoise;

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xB97D74", Offset = "0xB97D74", VA = "0xB97D74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xB97E20", Offset = "0xB97E20", VA = "0xB97E20")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xB97ECC", Offset = "0xB97ECC", VA = "0xB97ECC")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xB97F20", Offset = "0xB97F20", VA = "0xB97F20")]
	private void ActivateNoise()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xB98060", Offset = "0xB98060", VA = "0xB98060")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xB98200", Offset = "0xB98200", VA = "0xB98200")]
	public NoiseMaker()
	{
	}
}
[Token(Token = "0x200013A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x759914", Offset = "0x759914")]
public class OxygenCanister : MonoBehaviour
{
	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool used;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform breather;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float breatherRadius;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material usedMaterial;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioCue useSoundClip;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HapticClip bHapticsClip;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material fillBar;

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xB98944", Offset = "0xB98944", VA = "0xB98944")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xB989F0", Offset = "0xB989F0", VA = "0xB989F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xB98A9C", Offset = "0xB98A9C", VA = "0xB98A9C")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xB98DB4", Offset = "0xB98DB4", VA = "0xB98DB4")]
	public OxygenCanister()
	{
	}
}
[Token(Token = "0x200013B")]
public class PlayerWeapon : MonoBehaviour, IModableWeapon, IAimableWeapon
{
	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float range;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool rayCast;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask layerMask;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ProjectileDamage damageData;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform muzzle;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MuzzleFlash muzzleFlash;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected GunTrails gunTrails;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Recoil recoilFX;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioCue shootSound;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SoundwaveData shootSoundwave;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float shootHapticsStrength;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public HapticClip bHapticsClipLeft;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public HapticClip bHapticsClipRight;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public HapticClip bHapticsVestRecoilLeft;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public HapticClip bHapticsVestRecoilRight;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float shootHapticsVestRecoilIntensity;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform laserSightAttachPoint;

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x9F0E3C", Offset = "0x9F0E3C", VA = "0x9F0E3C")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x9F0ED0", Offset = "0x9F0ED0", VA = "0x9F0ED0", Slot = "6")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x9F1000", Offset = "0x9F1000", VA = "0x9F1000", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x9F1130", Offset = "0x9F1130", VA = "0x9F1130")]
	protected void Shoot([Optional] int? overrideDamage)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x9F1904", Offset = "0x9F1904", VA = "0x9F1904", Slot = "4")]
	public Transform GetModAttachPoint()
	{
		return null;
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x9F190C", Offset = "0x9F190C", VA = "0x9F190C", Slot = "5")]
	public Transform GetAimMuzzle()
	{
		return null;
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x9F1914", Offset = "0x9F1914", VA = "0x9F1914")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x9F1930", Offset = "0x9F1930", VA = "0x9F1930")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x9F1950", Offset = "0x9F1950", VA = "0x9F1950")]
	public PlayerWeapon()
	{
	}
}
[Token(Token = "0x200013C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x759978", Offset = "0x759978")]
public class PowerCell : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _numCharges;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int maxNumCharges;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro counterText;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject deathFXPrefab;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Item item;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PowerPanel panel;

	[Token(Token = "0x170000AA")]
	public int NumCharges
	{
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x9F1D50", Offset = "0x9F1D50", VA = "0x9F1D50")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x9F1D58", Offset = "0x9F1D58", VA = "0x9F1D58")]
		set
		{
		}
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x9F1E58", Offset = "0x9F1E58", VA = "0x9F1E58")]
	public static void SetIngredients(Item.Properties itemProperties, int charges)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x9F1F08", Offset = "0x9F1F08", VA = "0x9F1F08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x9F1FF0", Offset = "0x9F1FF0", VA = "0x9F1FF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x9F20D8", Offset = "0x9F20D8", VA = "0x9F20D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x9F22C8", Offset = "0x9F22C8", VA = "0x9F22C8")]
	public void SetInPanel(PowerPanel panel)
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x9F22D0", Offset = "0x9F22D0", VA = "0x9F22D0", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x9F21AC", Offset = "0x9F21AC", VA = "0x9F21AC", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x9F22DC", Offset = "0x9F22DC", VA = "0x9F22DC", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x9F2358", Offset = "0x9F2358", VA = "0x9F2358")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x9F23F4", Offset = "0x9F23F4", VA = "0x9F23F4")]
	public PowerCell()
	{
	}
}
[Token(Token = "0x200013D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7599DC", Offset = "0x7599DC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7599DC", Offset = "0x7599DC")]
[SelectionBase]
public class Railgun : PlayerWeapon, IGameSerializable
{
	[Serializable]
	[Token(Token = "0x200038A")]
	public class SerializedData
	{
		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item.Properties.SerializedData ammoPackData;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ammo;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string modData;

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xA4D580", Offset = "0xA4D580", VA = "0xA4D580")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int damageMin;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int damageMax;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float chargedFactor;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75DAF8", Offset = "0x75DAF8")]
	public AimingGrabPoint aimGrabPoint;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Renderer chargeFillBarRenderer;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float chargeFillRate;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x75DB30", Offset = "0x75DB30")]
	public Vector2 gunTrailsDuration;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ParticleSystem shootChargedFX;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioCue emptySound;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioCue releasePackSound;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioCue shootSoundUncharged;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioCue shootSoundCharged;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75DB50", Offset = "0x75DB50")]
	[SerializeField]
	private int _ammo;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public TMP_Text ammoCounter;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Collider ammoEntryArea;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75DB9C", Offset = "0x75DB9C")]
	public Transform trigger;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float triggerMaxRotation;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75DBD4", Offset = "0x75DBD4")]
	public HapticClip bHapticsAimClipLeft;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public HapticClip bHapticsAimClipRight;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float bHapticsAimIntensity;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public HapticClip bHapticsChargeClipLeft;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public HapticClip bHapticsChargeClipRight;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float bHapticsChargeIntensity;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int bHapticsChargeTask;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private ItemReceptor ammoReceptor;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private HandGunMagazine ammoPack;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private HandTool handTool;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Hand hand;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Material chargeFillBar;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private AudioSource chargeSound;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float charge;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private bool isCharging;

	[Token(Token = "0x170000AB")]
	public int Ammo
	{
		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xA4BE64", Offset = "0xA4BE64", VA = "0xA4BE64")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xA4BE6C", Offset = "0xA4BE6C", VA = "0xA4BE6C")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xA4BF64", Offset = "0xA4BF64", VA = "0xA4BF64", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xA4C0D8", Offset = "0xA4C0D8", VA = "0xA4C0D8", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xA4C24C", Offset = "0xA4C24C", VA = "0xA4C24C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xA4C928", Offset = "0xA4C928", VA = "0xA4C928")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xA4C9BC", Offset = "0xA4C9BC", VA = "0xA4C9BC")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xA4CB00", Offset = "0xA4CB00", VA = "0xA4CB00")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xA4D1D4", Offset = "0xA4D1D4", VA = "0xA4D1D4")]
	private void OnAmmoInserted(Item ammoPackItem)
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xA4D290", Offset = "0xA4D290", VA = "0xA4D290")]
	public void InsertAmmo(HandGunMagazine magazine)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xA4C32C", Offset = "0xA4C32C", VA = "0xA4C32C")]
	private void UpdateAmmo()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xA4CA90", Offset = "0xA4CA90", VA = "0xA4CA90")]
	private void StopBHapticsCharge()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xA4D0D0", Offset = "0xA4D0D0", VA = "0xA4D0D0")]
	private void LoopBHapticsCharge()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xA4D380", Offset = "0xA4D380", VA = "0xA4D380", Slot = "8")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xA4C698", Offset = "0xA4C698", VA = "0xA4C698", Slot = "9")]
	public void DeserializeState(string jsonString)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xA4D588", Offset = "0xA4D588", VA = "0xA4D588", Slot = "10")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xA4D604", Offset = "0xA4D604", VA = "0xA4D604")]
	public Railgun()
	{
	}
}
[Token(Token = "0x200013E")]
public class Recoil : MonoBehaviour
{
	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float recoilAmount;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float recoilRotAmount;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float recoilDisplacementFactor;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float recoilRotDisplacementFactor;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float recoilRecoverySpeed;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float recoilRotRecoverySpeed;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float scaleFactor;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool addToHand;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 defaultPos;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion defaultRot;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Hand grabbingHand;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 offsetPos;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion offsetRot;

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xA4E588", Offset = "0xA4E588", VA = "0xA4E588")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xA4E66C", Offset = "0xA4E66C", VA = "0xA4E66C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xA4E9AC", Offset = "0xA4E9AC", VA = "0xA4E9AC")]
	public void AddRecoil()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xA4EBC4", Offset = "0xA4EBC4", VA = "0xA4EBC4")]
	public void SetHand(Hand hand)
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xA4EBCC", Offset = "0xA4EBCC", VA = "0xA4EBCC")]
	public Recoil()
	{
	}
}
[Token(Token = "0x200013F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x759A78", Offset = "0x759A78")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x759A78", Offset = "0x759A78")]
[SelectionBase]
public class Shotgun : PlayerWeapon, IGameSerializable
{
	[Serializable]
	[Token(Token = "0x200038B")]
	public class SerializedData
	{
		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item.Properties.SerializedData ammoPackData;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ammo;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string modData;

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x9132A8", Offset = "0x9132A8", VA = "0x9132A8")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AimingGrabPoint aimGrabPoint;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public DraggableLinear reloader;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioCue emptySound;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioCue releasePackSound;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float angleDispersion;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75DC0C", Offset = "0x75DC0C")]
	public int maxAmmo;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private int _ammo;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TMP_Text[] ammoCounters;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75DC54", Offset = "0x75DC54")]
	public Collider ammoEntryArea;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioCue cockedSound;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioCue cockedResetSound;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75DC8C", Offset = "0x75DC8C")]
	public Transform trigger;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float triggerMaxRotation;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75DCC4", Offset = "0x75DCC4")]
	public HapticClip bHapticsAimClipLeft;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public HapticClip bHapticsAimClipRight;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float bHapticsAimIntensity;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ItemReceptor ammoReceptor;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private HandGunMagazine ammoPack;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GunTrails[] gunTrailList;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private HandTool handTool;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Hand hand;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool needsCocking;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	private bool needsCockingReset;

	[Token(Token = "0x170000AC")]
	public int Ammo
	{
		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x911ACC", Offset = "0x911ACC", VA = "0x911ACC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x911AD4", Offset = "0x911AD4", VA = "0x911AD4")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x911B88", Offset = "0x911B88", VA = "0x911B88", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x911CFC", Offset = "0x911CFC", VA = "0x911CFC", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x911E70", Offset = "0x911E70", VA = "0x911E70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x912594", Offset = "0x912594", VA = "0x912594")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x912628", Offset = "0x912628", VA = "0x912628")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x9126B8", Offset = "0x9126B8", VA = "0x9126B8")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x91295C", Offset = "0x91295C", VA = "0x91295C")]
	protected void Shoot()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x912EC8", Offset = "0x912EC8", VA = "0x912EC8")]
	private void OnAmmoInserted(Item ammoPackItem)
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x912F84", Offset = "0x912F84", VA = "0x912F84")]
	public void InsertAmmo(HandGunMagazine magazine)
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x911F50", Offset = "0x911F50", VA = "0x911F50")]
	private void UpdateAmmo()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x9130A8", Offset = "0x9130A8", VA = "0x9130A8", Slot = "8")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x912304", Offset = "0x912304", VA = "0x912304", Slot = "9")]
	public void DeserializeState(string jsonString)
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x9132B0", Offset = "0x9132B0", VA = "0x9132B0", Slot = "10")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x91332C", Offset = "0x91332C", VA = "0x91332C")]
	public Shotgun()
	{
	}
}
[Token(Token = "0x2000140")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x759B14", Offset = "0x759B14")]
public class Syringe : MonoBehaviour
{
	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int healthPoints;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float remainingPercent;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float injectSpeed;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform piston;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float pistonDisplacement;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 pistonOut;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 pistonIn;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material fillBar;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform needle;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ParticleSystem squirtFX;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource squirtSound;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PlayerHandModel handModel;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75DCFC", Offset = "0x75DCFC")]
	public HapticClip bHapticsClip;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int bHapticsTask;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool playHaptics;

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x9B57D4", Offset = "0x9B57D4", VA = "0x9B57D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x9B58F0", Offset = "0x9B58F0", VA = "0x9B58F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x9B5A0C", Offset = "0x9B5A0C", VA = "0x9B5A0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x9B5BC0", Offset = "0x9B5BC0", VA = "0x9B5BC0")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x9B5C34", Offset = "0x9B5C34", VA = "0x9B5C34")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x9B6238", Offset = "0x9B6238", VA = "0x9B6238")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x9B6294", Offset = "0x9B6294", VA = "0x9B6294")]
	private void StopBHaptics()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x9B6154", Offset = "0x9B6154", VA = "0x9B6154")]
	private void LoopBHaptics()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x9B6304", Offset = "0x9B6304", VA = "0x9B6304")]
	public Syringe()
	{
	}
}
[Token(Token = "0x2000141")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x759B78", Offset = "0x759B78")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x759B78", Offset = "0x759B78")]
public class Trapmine : FSMComponent, IGameSerializable
{
	[Token(Token = "0x200038C")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Normal;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Latching;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Arming;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Armed;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Triggering;

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x9FFA38", Offset = "0x9FFA38", VA = "0x9FFA38")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75DD34", Offset = "0x75DD34")]
	public float armingTime;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float detectionDistance;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LayerMask detectionMask;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float triggerTime;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75DD6C", Offset = "0x75DD6C")]
	public ExplosionDamage damageData;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject detonationFXPrefab;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioCue detonationSound;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SoundwaveData detonationSoundwave;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75DDA4", Offset = "0x75DDA4")]
	public Renderer[] leds;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material ledMaterialOn;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material ledMaterialOff;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75DDDC", Offset = "0x75DDDC")]
	public AudioCue latchSound;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioCue[] armingSounds;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioCue armedSound;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioCue triggerSound;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ItemLatch itemLatch;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private BoxCollider triggerCollider;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool deserialized;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int armedLedIdx;

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x9FE53C", Offset = "0x9FE53C", VA = "0x9FE53C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x9FE5D4", Offset = "0x9FE5D4", VA = "0x9FE5D4", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x9FE7AC", Offset = "0x9FE7AC", VA = "0x9FE7AC", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x9FE984", Offset = "0x9FE984", VA = "0x9FE984")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x9FEAD4", Offset = "0x9FEAD4", VA = "0x9FEAD4", Slot = "11")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x9FEA74", Offset = "0x9FEA74", VA = "0x9FEA74", Slot = "12")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x9FEF34", Offset = "0x9FEF34", VA = "0x9FEF34", Slot = "13")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x9FEFB0", Offset = "0x9FEFB0", VA = "0x9FEFB0")]
	private void OnLatchingStart()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x9FEBAC", Offset = "0x9FEBAC", VA = "0x9FEBAC")]
	private void Latching_Enter()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x9FF054", Offset = "0x9FF054", VA = "0x9FF054")]
	private void OnLatched()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x9FEC30", Offset = "0x9FEC30", VA = "0x9FEC30")]
	private void Arming_Enter()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x9FF0F8", Offset = "0x9FF0F8", VA = "0x9FF0F8")]
	private void Arming_OnTimer()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x9FF294", Offset = "0x9FF294", VA = "0x9FF294")]
	private void Armed_Enter()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x9FF374", Offset = "0x9FF374", VA = "0x9FF374")]
	private void Armed_OnTimer()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x9FF3E8", Offset = "0x9FF3E8", VA = "0x9FF3E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x9FF588", Offset = "0x9FF588", VA = "0x9FF588")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x9FF3EC", Offset = "0x9FF3EC", VA = "0x9FF3EC")]
	private void CheckTrigger(Collider other)
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x9FF58C", Offset = "0x9FF58C", VA = "0x9FF58C")]
	private void Triggering_Enter()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x9FF64C", Offset = "0x9FF64C", VA = "0x9FF64C")]
	private void Triggering_OnTimer()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x9FF650", Offset = "0x9FF650", VA = "0x9FF650")]
	private void Detonate()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x9FF8F0", Offset = "0x9FF8F0", VA = "0x9FF8F0")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x9FF9AC", Offset = "0x9FF9AC", VA = "0x9FF9AC")]
	public Trapmine()
	{
	}
}
[Token(Token = "0x2000142")]
public class Achievements : Singleton<Achievements>
{
	[Token(Token = "0x200038D")]
	public enum Type
	{
		[Token(Token = "0x4001A35")]
		GOAL_ESCAPE,
		[Token(Token = "0x4001A36")]
		GOAL_JUMPDRIVE,
		[Token(Token = "0x4001A37")]
		GOAL_COORDS,
		[Token(Token = "0x4001A38")]
		GOAL_JUMP,
		[Token(Token = "0x4001A39")]
		UNLOCK_LOGS,
		[Token(Token = "0x4001A3A")]
		UNLOCK_BLUEPRINTS,
		[Token(Token = "0x4001A3B")]
		UNLOCK_OPTIONS,
		[Token(Token = "0x4001A3C")]
		CRAFT_FIRST,
		[Token(Token = "0x4001A3D")]
		KILL_EXPLOSION,
		[Token(Token = "0x4001A3E")]
		KILL_ALL,
		[Token(Token = "0x4001A3F")]
		REVEAL_ALL,
		[Token(Token = "0x4001A40")]
		TP_ENEMY,
		[Token(Token = "0x4001A41")]
		KILL_GRENADE,
		[Token(Token = "0x4001A42")]
		CLEAN_INFESTATION
	}

	[Serializable]
	[Token(Token = "0x200038E")]
	public class AchState
	{
		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> killedEnemyTypes;

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xB5B284", Offset = "0xB5B284", VA = "0xB5B284")]
		public AchState()
		{
		}
	}

	[Token(Token = "0x200038F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BA98", Offset = "0x75BA98")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string achName;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int progress;

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xB5AC80", Offset = "0xB5AC80", VA = "0xB5AC80")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xB5B038", Offset = "0xB5B038", VA = "0xB5B038")]
		internal void <SetProgress>b__0(Message<AchievementProgressList> msg)
		{
		}
	}

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool initialized;

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xB5A8E0", Offset = "0xB5A8E0", VA = "0xB5A8E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xB5A8E4", Offset = "0xB5A8E4", VA = "0xB5A8E4")]
	public void Unlock(Type type)
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xB5AA04", Offset = "0xB5AA04", VA = "0xB5AA04")]
	public void SetProgress(Type type, int progress, int total)
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xB5AC88", Offset = "0xB5AC88", VA = "0xB5AC88")]
	public void IncreaseProgress(Type type, int increase = 1)
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xB5ADD4", Offset = "0xB5ADD4", VA = "0xB5ADD4")]
	public void AddKilledEnemyType(string enemyType)
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xB5AED4", Offset = "0xB5AED4", VA = "0xB5AED4")]
	public void RecheckUnlocks(TextLogs textLogs, CraftRecipes recipes)
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xB5AFE8", Offset = "0xB5AFE8", VA = "0xB5AFE8")]
	public Achievements()
	{
	}
}
[Token(Token = "0x2000143")]
public class BHapticsExt : Singleton<BHapticsExt>
{
	[Token(Token = "0x2000390")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BAA8", Offset = "0x75BAA8")]
	private sealed class <CheckRunning_co>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BHapticsExt <>4__this;

		[Token(Token = "0x170001DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019AD")]
			[Address(RVA = "0xAC8D18", Offset = "0xAC8D18", VA = "0xAC8D18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019AF")]
			[Address(RVA = "0xAC8D80", Offset = "0xAC8D80", VA = "0xAC8D80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xAC8074", Offset = "0xAC8074", VA = "0xAC8074")]
		[DebuggerHidden]
		public <CheckRunning_co>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xAC8BA8", Offset = "0xAC8BA8", VA = "0xAC8BA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xAC8BAC", Offset = "0xAC8BAC", VA = "0xAC8BAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xAC8D20", Offset = "0xAC8D20", VA = "0xAC8D20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000391")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BAB8", Offset = "0x75BAB8")]
	private sealed class <PlayClipDelayed_co>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BHapticsExt <>4__this;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HapticClip clip;

		[Token(Token = "0x170001DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019B3")]
			[Address(RVA = "0xAC8E50", Offset = "0xAC8E50", VA = "0xAC8E50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0xAC8EB8", Offset = "0xAC8EB8", VA = "0xAC8EB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xAC8498", Offset = "0xAC8498", VA = "0xAC8498")]
		[DebuggerHidden]
		public <PlayClipDelayed_co>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xAC8D88", Offset = "0xAC8D88", VA = "0xAC8D88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xAC8D8C", Offset = "0xAC8D8C", VA = "0xAC8D8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xAC8E58", Offset = "0xAC8E58", VA = "0xAC8E58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Bhaptics_Setup setupPrefab;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isPlayerActive;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool initialized;

	[Token(Token = "0x170000AD")]
	public bool Active
	{
		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xAC7C18", Offset = "0xAC7C18", VA = "0xAC7C18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xAC7CAC", Offset = "0xAC7CAC", VA = "0xAC7CAC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xAC7D04", Offset = "0xAC7D04", VA = "0xAC7D04")]
	public void ReInitialize()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xAC7FF8", Offset = "0xAC7FF8", VA = "0xAC7FF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765604", Offset = "0x765604")]
	private IEnumerator CheckRunning_co()
	{
		return null;
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xAC7F90", Offset = "0xAC7F90", VA = "0xAC7F90")]
	public static bool IsInstalled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xAC80A8", Offset = "0xAC80A8", VA = "0xAC80A8")]
	public void PlayClip(HapticClip clip)
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xAC80E8", Offset = "0xAC80E8", VA = "0xAC80E8")]
	public void PlayClip(Hand hand, HapticClip clipLeft, HapticClip clipRight)
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xAC8160", Offset = "0xAC8160", VA = "0xAC8160")]
	public void PlayClip(HapticClip clip, float intensity)
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xAC81F8", Offset = "0xAC81F8", VA = "0xAC81F8")]
	public void PlayClip(Hand hand, HapticClip clipLeft, HapticClip clipRight, float intensity)
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xAC82D0", Offset = "0xAC82D0", VA = "0xAC82D0")]
	public void StopClip(HapticClip clip)
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xAC8314", Offset = "0xAC8314", VA = "0xAC8314")]
	public void StopClip(Hand hand, HapticClip clipLeft, HapticClip clipRight)
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xAC8390", Offset = "0xAC8390", VA = "0xAC8390")]
	public void PlayClipDelayed(HapticClip clip, float delay)
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xAC83F0", Offset = "0xAC83F0", VA = "0xAC83F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765668", Offset = "0x765668")]
	private IEnumerator PlayClipDelayed_co(HapticClip clip, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xAC84C4", Offset = "0xAC84C4", VA = "0xAC84C4")]
	public void PlayClipAtAngle(HapticClip clip, float angle, float intensity)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xAC8568", Offset = "0xAC8568", VA = "0xAC8568")]
	public float GetDuration(HapticClip hapticClip)
	{
		return default(float);
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xAC86AC", Offset = "0xAC86AC", VA = "0xAC86AC")]
	public int StopLoopTask(int taskId, HapticClip hapticClip)
	{
		return default(int);
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xAC8798", Offset = "0xAC8798", VA = "0xAC8798")]
	public int StopLoopTask(int taskId, HapticClip clipLeft, HapticClip clipRight)
	{
		return default(int);
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xAC88B4", Offset = "0xAC88B4", VA = "0xAC88B4")]
	public int LoopTask(Action task, HapticClip hapticClip, GameObject ownerGO, [Optional] float? intensity)
	{
		return default(int);
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xAC89F0", Offset = "0xAC89F0", VA = "0xAC89F0")]
	public int LoopTask(Action task, Hand hand, HapticClip clipLeft, HapticClip clipRight, GameObject ownerGO, [Optional] float? intensity)
	{
		return default(int);
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xAC8B58", Offset = "0xAC8B58", VA = "0xAC8B58")]
	public BHapticsExt()
	{
	}
}
[Token(Token = "0x2000144")]
public class Disclaimer_GameManager : GameManagerScene
{
	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timer;

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x97352C", Offset = "0x97352C", VA = "0x97352C", Slot = "4")]
	public override void InitScene()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x973530", Offset = "0x973530", VA = "0x973530", Slot = "5")]
	public override void UpdateScene()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x97365C", Offset = "0x97365C", VA = "0x97365C", Slot = "6")]
	public override void EndScene()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x973660", Offset = "0x973660", VA = "0x973660")]
	public Disclaimer_GameManager()
	{
	}
}
[Token(Token = "0x2000145")]
public class Ending_Events : MonoBehaviour
{
	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xA1A6E8", Offset = "0xA1A6E8", VA = "0xA1A6E8")]
	public void OnPlayExplosion()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xA1A7CC", Offset = "0xA1A7CC", VA = "0xA1A7CC")]
	public Ending_Events()
	{
	}
}
[Token(Token = "0x2000146")]
public class Ending_GameManager : GameManagerScene
{
	[Token(Token = "0x2000392")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BAC8", Offset = "0x75BAC8")]
	private sealed class <EndingSeq_co>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Ending_GameManager <>4__this;

		[Token(Token = "0x170001E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0xA1AFFC", Offset = "0xA1AFFC", VA = "0xA1AFFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0xA1B064", Offset = "0xA1B064", VA = "0xA1B064", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xA1AD58", Offset = "0xA1AD58", VA = "0xA1AD58")]
		[DebuggerHidden]
		public <EndingSeq_co>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xA1AEE4", Offset = "0xA1AEE4", VA = "0xA1AEE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xA1AEE8", Offset = "0xA1AEE8", VA = "0xA1AEE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xA1B004", Offset = "0xA1B004", VA = "0xA1B004", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000393")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BAD8", Offset = "0x75BAD8")]
	private sealed class <PlayExplosionFlare_co>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Ending_GameManager <>4__this;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <progress>5__2;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <lastProgress>5__3;

		[Token(Token = "0x170001E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019BF")]
			[Address(RVA = "0xA1B2FC", Offset = "0xA1B2FC", VA = "0xA1B2FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019C1")]
			[Address(RVA = "0xA1B364", Offset = "0xA1B364", VA = "0xA1B364", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xA1AE00", Offset = "0xA1AE00", VA = "0xA1AE00")]
		[DebuggerHidden]
		public <PlayExplosionFlare_co>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xA1B06C", Offset = "0xA1B06C", VA = "0xA1B06C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xA1B070", Offset = "0xA1B070", VA = "0xA1B070", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xA1B304", Offset = "0xA1B304", VA = "0xA1B304", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000394")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BAE8", Offset = "0x75BAE8")]
	private sealed class <PlayExplosionShockwave_co>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Ending_GameManager <>4__this;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Shake <cameraShake>5__2;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <progress>5__3;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <lastScale>5__4;

		[Token(Token = "0x170001E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019C5")]
			[Address(RVA = "0xA1B644", Offset = "0xA1B644", VA = "0xA1B644", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019C7")]
			[Address(RVA = "0xA1B6AC", Offset = "0xA1B6AC", VA = "0xA1B6AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xA1AEA8", Offset = "0xA1AEA8", VA = "0xA1AEA8")]
		[DebuggerHidden]
		public <PlayExplosionShockwave_co>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xA1B36C", Offset = "0xA1B36C", VA = "0xA1B36C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xA1B370", Offset = "0xA1B370", VA = "0xA1B370", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xA1B64C", Offset = "0xA1B64C", VA = "0xA1B64C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource musicSound;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Credits credits;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIFillButton skipButton;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform celestialLight;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 questLightRotation;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Renderer explosionFlare;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform explosionShockwave;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource explosionSound;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource[] ambienceSounds;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material explosionMaterial;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75DE14", Offset = "0x75DE14")]
	public bool _PlayExplosion;

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xA1A7D4", Offset = "0xA1A7D4", VA = "0xA1A7D4", Slot = "4")]
	public override void InitScene()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xA1AB24", Offset = "0xA1AB24", VA = "0xA1AB24")]
	private void OnEndFadeIn()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xA1ABCC", Offset = "0xA1ABCC", VA = "0xA1ABCC")]
	private void OnSkipBtn()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xA1AB50", Offset = "0xA1AB50", VA = "0xA1AB50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7656CC", Offset = "0x7656CC")]
	private IEnumerator EndingSeq_co()
	{
		return null;
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xA1A7A0", Offset = "0xA1A7A0", VA = "0xA1A7A0")]
	public void PlayExplosion()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xA1AD84", Offset = "0xA1AD84", VA = "0xA1AD84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765730", Offset = "0x765730")]
	private IEnumerator PlayExplosionFlare_co()
	{
		return null;
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xA1AE2C", Offset = "0xA1AE2C", VA = "0xA1AE2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765794", Offset = "0x765794")]
	private IEnumerator PlayExplosionShockwave_co()
	{
		return null;
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xA1AED4", Offset = "0xA1AED4", VA = "0xA1AED4", Slot = "5")]
	public override void UpdateScene()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xA1AED8", Offset = "0xA1AED8", VA = "0xA1AED8", Slot = "6")]
	public override void EndScene()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xA1AEDC", Offset = "0xA1AEDC", VA = "0xA1AEDC")]
	public Ending_GameManager()
	{
	}
}
[Token(Token = "0x2000147")]
public class ErrorMessage_GameManager : GameManagerScene
{
	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI text;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string messageTxt;

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xA1C3A8", Offset = "0xA1C3A8", VA = "0xA1C3A8", Slot = "4")]
	public override void InitScene()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xA1C414", Offset = "0xA1C414", VA = "0xA1C414", Slot = "5")]
	public override void UpdateScene()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xA1C4E0", Offset = "0xA1C4E0", VA = "0xA1C4E0", Slot = "6")]
	public override void EndScene()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xA1C4E4", Offset = "0xA1C4E4", VA = "0xA1C4E4")]
	public ErrorMessage_GameManager()
	{
	}
}
[Token(Token = "0x2000148")]
public class GameManager : Singleton<GameManager>
{
	[Token(Token = "0x2000395")]
	public enum VRSDK
	{
		[Token(Token = "0x4001A5D")]
		Oculus,
		[Token(Token = "0x4001A5E")]
		OpenVR
	}

	[Token(Token = "0x2000396")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BAF8", Offset = "0x75BAF8")]
	private sealed class <InitGame_co>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <isInitScene>5__2;

		[Token(Token = "0x170001E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019CB")]
			[Address(RVA = "0x9AC314", Offset = "0x9AC314", VA = "0x9AC314", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019CD")]
			[Address(RVA = "0x9AC37C", Offset = "0x9AC37C", VA = "0x9AC37C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x9A9930", Offset = "0x9A9930", VA = "0x9A9930")]
		[DebuggerHidden]
		public <InitGame_co>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x9ABDD4", Offset = "0x9ABDD4", VA = "0x9ABDD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x9ABDD8", Offset = "0x9ABDD8", VA = "0x9ABDD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x9AC31C", Offset = "0x9AC31C", VA = "0x9AC31C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000397")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BB08", Offset = "0x75BB08")]
	private sealed class <LoadingProcess>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <asyncOp>5__2;

		[Token(Token = "0x170001E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019D1")]
			[Address(RVA = "0x9AC5F0", Offset = "0x9AC5F0", VA = "0x9AC5F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019D3")]
			[Address(RVA = "0x9AC658", Offset = "0x9AC658", VA = "0x9AC658", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x9AA1A4", Offset = "0x9AA1A4", VA = "0x9AA1A4")]
		[DebuggerHidden]
		public <LoadingProcess>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x9AC384", Offset = "0x9AC384", VA = "0x9AC384", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x9AC388", Offset = "0x9AC388", VA = "0x9AC388", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x9AC5F8", Offset = "0x9AC5F8", VA = "0x9AC5F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000398")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BB18", Offset = "0x75BB18")]
	private sealed class <Autosave_co>d__86 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float wait;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameManager <>4__this;

		[Token(Token = "0x170001EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019D7")]
			[Address(RVA = "0x9ABD64", Offset = "0x9ABD64", VA = "0x9ABD64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019D9")]
			[Address(RVA = "0x9ABDCC", Offset = "0x9ABDCC", VA = "0x9ABDCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x9ABBD8", Offset = "0x9ABBD8", VA = "0x9ABBD8")]
		[DebuggerHidden]
		public <Autosave_co>d__86(int <>1__state)
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x9ABC68", Offset = "0x9ABC68", VA = "0x9ABC68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x9ABC6C", Offset = "0x9ABC6C", VA = "0x9ABC6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x9ABD6C", Offset = "0x9ABD6C", VA = "0x9ABD6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameManagerScene _sceneManager;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool pendingClearAssets;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameState _gameState;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private MetagameState _metagameState;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Savegame savegame;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SwitchRefScriptableObj itemsRegistry;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string[] commandLineArgs;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public VRSDK vrSDK;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isOculusQuest1;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Config config;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Fader fader;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject loadingObj;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool isGameOver;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool gameOverWin;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string gameOverText;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SwitchRefListMaterial atlasMaterials;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SwitchRefListTexture atlasTextures;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SwitchRefListTexture atlasTexturesHalf;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Bhaptics_Setup bHapticsSetupPrefab;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool switchingScene;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string switchingSceneName;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool switchWithLoading;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool hasVRFocus;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	private bool hasInputFocus;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
	private bool _isPaused;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool wantsToPause;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float pausedVolume;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int pushedTimeScalePauses;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _canBePaused;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75DE8C", Offset = "0x75DE8C")]
	public bool _GoToIntro;

	[Token(Token = "0x170000AE")]
	public GameManagerScene SceneManager
	{
		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x9A86B0", Offset = "0x9A86B0", VA = "0x9A86B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AF")]
	public GameState GameState
	{
		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x9A87A8", Offset = "0x9A87A8", VA = "0x9A87A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B0")]
	public MetagameState MetagameState
	{
		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x9A8B88", Offset = "0x9A8B88", VA = "0x9A8B88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B1")]
	public bool Paused
	{
		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x9AADC4", Offset = "0x9AADC4", VA = "0x9AADC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x9AADCC", Offset = "0x9AADCC", VA = "0x9AADCC")]
		set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	public bool CanBePaused
	{
		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x9AAE18", Offset = "0x9AAE18", VA = "0x9AAE18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x9AAE20", Offset = "0x9AAE20", VA = "0x9AAE20")]
		set
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<bool> onPauseChange
	{
		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x9AAE70", Offset = "0x9AAE70", VA = "0x9AAE70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7658C0", Offset = "0x7658C0")]
		add
		{
		}
		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x9AAF14", Offset = "0x9AAF14", VA = "0x9AAF14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7658D0", Offset = "0x7658D0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x9A8C14", Offset = "0x9A8C14", VA = "0x9A8C14", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x9A98B0", Offset = "0x9A98B0", VA = "0x9A98B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x9A8DA4", Offset = "0x9A8DA4", VA = "0x9A8DA4")]
	private void InitGame()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x9A98B4", Offset = "0x9A98B4", VA = "0x9A98B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7657F8", Offset = "0x7657F8")]
	private IEnumerator InitGame_co()
	{
		return null;
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x9A995C", Offset = "0x9A995C", VA = "0x9A995C")]
	public void ResetGame()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x9A9620", Offset = "0x9A9620", VA = "0x9A9620")]
	private void InitScene(string sceneName)
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x9A8740", Offset = "0x9A8740", VA = "0x9A8740")]
	private GameManagerScene FindSceneManager()
	{
		return null;
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x9A99FC", Offset = "0x9A99FC", VA = "0x9A99FC")]
	public void SetScene(string sceneName, bool fadeOut = true, bool showLoading = false, float fadeSpeed = 1f)
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x9A9BC4", Offset = "0x9A9BC4", VA = "0x9A9BC4")]
	private void OnEndFadeScene()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x9A9F38", Offset = "0x9A9F38", VA = "0x9A9F38")]
	private void ChangedActiveScene(UnityEngine.SceneManagement.Scene current, UnityEngine.SceneManagement.Scene next)
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x9AA00C", Offset = "0x9AA00C", VA = "0x9AA00C")]
	private void OnChangedToLoadScene(UnityEngine.SceneManagement.Scene current, UnityEngine.SceneManagement.Scene next)
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x9AA128", Offset = "0x9AA128", VA = "0x9AA128")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76585C", Offset = "0x76585C")]
	private IEnumerator LoadingProcess()
	{
		return null;
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x9AA1D0", Offset = "0x9AA1D0", VA = "0x9AA1D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x9AA324", Offset = "0x9AA324", VA = "0x9AA324")]
	public void Recenter()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x9AA604", Offset = "0x9AA604", VA = "0x9AA604")]
	public void GameOver(bool isWin, string txt, bool isSavedExit = false)
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x9AA858", Offset = "0x9AA858", VA = "0x9AA858")]
	public void QuitGame(bool fadeOut = true)
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x9AA894", Offset = "0x9AA894", VA = "0x9AA894")]
	private void OnEndFadeQuit()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x9AA928", Offset = "0x9AA928", VA = "0x9AA928")]
	public void SetAudioLevels()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x9A9974", Offset = "0x9A9974", VA = "0x9A9974")]
	public void ClearGarbage()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x9A99D4", Offset = "0x9A99D4", VA = "0x9A99D4")]
	public void ClearAssets()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x9AAA04", Offset = "0x9AAA04", VA = "0x9AAA04")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x9AAB88", Offset = "0x9AAB88", VA = "0x9AAB88")]
	public void ShowErrorMessage(string txt)
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x9AA544", Offset = "0x9AA544", VA = "0x9AA544")]
	private void CheckVRFocus()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x9AA4A0", Offset = "0x9AA4A0", VA = "0x9AA4A0")]
	private void CheckInputFocus()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x9AAD84", Offset = "0x9AAD84", VA = "0x9AAD84")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x9AAC34", Offset = "0x9AAC34", VA = "0x9AAC34")]
	public void SetPaused(bool paused)
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x9AADD4", Offset = "0x9AADD4", VA = "0x9AADD4")]
	public void PushTimeScalePause()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x9AADF4", Offset = "0x9AADF4", VA = "0x9AADF4")]
	public void PopTimeScalePause()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x9AAFB8", Offset = "0x9AAFB8", VA = "0x9AAFB8")]
	private void GoToIntro()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x9AB03C", Offset = "0x9AB03C", VA = "0x9AB03C")]
	public bool HasCommandLineArg(string arg)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x9AB0F0", Offset = "0x9AB0F0", VA = "0x9AB0F0")]
	public bool SaveToFile(string data, string fileName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x9AB3B4", Offset = "0x9AB3B4", VA = "0x9AB3B4")]
	public string LoadFromFile(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x9AB620", Offset = "0x9AB620", VA = "0x9AB620")]
	public bool CheckFile(string fileName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x9AB6B8", Offset = "0x9AB6B8", VA = "0x9AB6B8")]
	public bool LoadMetagame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x9AB7CC", Offset = "0x9AB7CC", VA = "0x9AB7CC")]
	public bool SaveMetagame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x9AB88C", Offset = "0x9AB88C", VA = "0x9AB88C")]
	public void ClearMetagame()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x9AB99C", Offset = "0x9AB99C", VA = "0x9AB99C")]
	public bool LoadGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x9ABAD8", Offset = "0x9ABAD8", VA = "0x9ABAD8")]
	public bool CheckSaveGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x9AAA0C", Offset = "0x9AAA0C", VA = "0x9AAA0C")]
	public bool SaveGame(bool isAutosaveTest = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x9ABB20", Offset = "0x9ABB20", VA = "0x9ABB20")]
	public void Autosave(float time)
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x9ABB4C", Offset = "0x9ABB4C", VA = "0x9ABB4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7658E0", Offset = "0x7658E0")]
	private IEnumerator Autosave_co(float wait)
	{
		return null;
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x9AA748", Offset = "0x9AA748", VA = "0x9AA748")]
	public void ClearGame()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x9ABC04", Offset = "0x9ABC04", VA = "0x9ABC04")]
	public GameManager()
	{
	}
}
[Token(Token = "0x2000149")]
public class GameManagerScene : MonoBehaviour
{
	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clearAssetsOnUnload;

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x9AC660", Offset = "0x9AC660", VA = "0x9AC660", Slot = "4")]
	public virtual void InitScene()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x9AC664", Offset = "0x9AC664", VA = "0x9AC664", Slot = "5")]
	public virtual void UpdateScene()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x9AC668", Offset = "0x9AC668", VA = "0x9AC668", Slot = "6")]
	public virtual void EndScene()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x9AC66C", Offset = "0x9AC66C", VA = "0x9AC66C")]
	public GameManagerScene()
	{
	}
}
[Token(Token = "0x200014A")]
public class GameOver_GameManager : GameManagerScene
{
	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro text;

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x9AC674", Offset = "0x9AC674", VA = "0x9AC674", Slot = "4")]
	public override void InitScene()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x9AC6F8", Offset = "0x9AC6F8", VA = "0x9AC6F8", Slot = "5")]
	public override void UpdateScene()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x9AC7D4", Offset = "0x9AC7D4", VA = "0x9AC7D4", Slot = "6")]
	public override void EndScene()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x9AC7D8", Offset = "0x9AC7D8", VA = "0x9AC7D8")]
	public GameOver_GameManager()
	{
	}
}
[Token(Token = "0x200014B")]
public class Init_GameManager : GameManagerScene
{
	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timer;

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x9E0200", Offset = "0x9E0200", VA = "0x9E0200", Slot = "4")]
	public override void InitScene()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x9E0204", Offset = "0x9E0204", VA = "0x9E0204", Slot = "5")]
	public override void UpdateScene()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x9E02E0", Offset = "0x9E02E0", VA = "0x9E02E0", Slot = "6")]
	public override void EndScene()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x9E02E4", Offset = "0x9E02E4", VA = "0x9E02E4")]
	public Init_GameManager()
	{
	}
}
[Token(Token = "0x200014C")]
public class Intro_GameManager : GameManagerScene
{
	[Token(Token = "0x2000399")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BB28", Offset = "0x75BB28")]
	private sealed class <InitScene_co>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Intro_GameManager <>4__this;

		[Token(Token = "0x170001EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019DD")]
			[Address(RVA = "0xBBACF8", Offset = "0xBBACF8", VA = "0xBBACF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019DF")]
			[Address(RVA = "0xBBAD60", Offset = "0xBBAD60", VA = "0xBBAD60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xBBA018", Offset = "0xBBA018", VA = "0xBBA018")]
		[DebuggerHidden]
		public <InitScene_co>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xBBAB00", Offset = "0xBBAB00", VA = "0xBBAB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xBBAB04", Offset = "0xBBAB04", VA = "0xBBAB04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xBBAD00", Offset = "0xBBAD00", VA = "0xBBAD00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200039A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BB38", Offset = "0x75BB38")]
	private sealed class <ApproachShip_co>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Intro_GameManager <>4__this;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <shipStartPos>5__2;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <shipEndPos>5__3;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <progress>5__4;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <musicVolumeStart>5__5;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Shake <cameraShake>5__6;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <oldProgress>5__7;

		[Token(Token = "0x170001EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019E3")]
			[Address(RVA = "0xBBAA90", Offset = "0xBBAA90", VA = "0xBBAA90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019E5")]
			[Address(RVA = "0xBBAAF8", Offset = "0xBBAAF8", VA = "0xBBAAF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xBBA2F8", Offset = "0xBBA2F8", VA = "0xBBA2F8")]
		[DebuggerHidden]
		public <ApproachShip_co>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xBBA478", Offset = "0xBBA478", VA = "0xBBA478", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xBBA47C", Offset = "0xBBA47C", VA = "0xBBA47C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xBBAA98", Offset = "0xBBAA98", VA = "0xBBAA98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200039B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BB48", Offset = "0x75BB48")]
	private sealed class <RecheckAchievements_co>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Intro_GameManager <>4__this;

		[Token(Token = "0x170001F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019E9")]
			[Address(RVA = "0xBBAE3C", Offset = "0xBBAE3C", VA = "0xBBAE3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019EB")]
			[Address(RVA = "0xBBAEA4", Offset = "0xBBAEA4", VA = "0xBBAEA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xBBA444", Offset = "0xBBA444", VA = "0xBBA444")]
		[DebuggerHidden]
		public <RecheckAchievements_co>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xBBAD68", Offset = "0xBBAD68", VA = "0xBBAD68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xBBAD6C", Offset = "0xBBAD6C", VA = "0xBBAD6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xBBAE44", Offset = "0xBBAE44", VA = "0xBBAE44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIIntroMain uiIntroMain;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIIntroGameOver uiIntroGameOver;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource musicSound;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75DEEC", Offset = "0x75DEEC")]
	public bool _ResetGame;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75DF4C", Offset = "0x75DF4C")]
	public Transform ship;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource engineSound;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource kickoffSound;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource crashSound;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource alarmSound;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource energyDischargeSound;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource energyLoopSound;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SwitchRefGameObject shipModel;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject shipFX;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] disableOnStartApproach;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] disableOnFadeout;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HapticClip bHapticsApproachClip;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public HapticClip bHapticsCrashClip;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75DF84", Offset = "0x75DF84")]
	public bool _ApproachShip;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75DFE4", Offset = "0x75DFE4")]
	public TextLogs textLogs;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public CraftRecipes craftRecipes;

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xBB9E8C", Offset = "0xBB9E8C", VA = "0xBB9E8C", Slot = "4")]
	public override void InitScene()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xBB9F9C", Offset = "0xBB9F9C", VA = "0xBB9F9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765944", Offset = "0x765944")]
	private IEnumerator InitScene_co()
	{
		return null;
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xBBA044", Offset = "0xBBA044", VA = "0xBBA044")]
	private void OnEndFadeIn()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xBBA104", Offset = "0xBBA104", VA = "0xBBA104", Slot = "5")]
	public override void UpdateScene()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xBBA108", Offset = "0xBBA108", VA = "0xBBA108", Slot = "6")]
	public override void EndScene()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xBBA10C", Offset = "0xBBA10C", VA = "0xBBA10C")]
	public void ResetGame()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xBBA184", Offset = "0xBBA184", VA = "0xBBA184")]
	public void StartGame(bool fadeOut = true)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xBBA250", Offset = "0xBBA250", VA = "0xBBA250")]
	public void ApproachShip()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xBBA27C", Offset = "0xBBA27C", VA = "0xBBA27C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7659A8", Offset = "0x7659A8")]
	private IEnumerator ApproachShip_co()
	{
		return null;
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xBBA324", Offset = "0xBBA324", VA = "0xBBA324")]
	private void OnApproachFadeOut()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xBBA088", Offset = "0xBBA088", VA = "0xBBA088")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765A0C", Offset = "0x765A0C")]
	private IEnumerator RecheckAchievements_co()
	{
		return null;
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xBBA470", Offset = "0xBBA470", VA = "0xBBA470")]
	public Intro_GameManager()
	{
	}
}
[Token(Token = "0x200014D")]
public class Main_GameManager : GameManagerScene
{
	[Token(Token = "0x200039C")]
	private class SerializedData
	{
		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int totalUnlocks;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float nextUnlock;

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xA43BDC", Offset = "0xA43BDC", VA = "0xA43BDC")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x200039D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BB58", Offset = "0x75BB58")]
	private sealed class <PreloadRenderers_co>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OcclusionManager <occMan>5__2;

		[Token(Token = "0x170001F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019F0")]
			[Address(RVA = "0xA44794", Offset = "0xA44794", VA = "0xA44794", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019F2")]
			[Address(RVA = "0xA447FC", Offset = "0xA447FC", VA = "0xA447FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xA42F5C", Offset = "0xA42F5C", VA = "0xA42F5C")]
		[DebuggerHidden]
		public <PreloadRenderers_co>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xA44604", Offset = "0xA44604", VA = "0xA44604", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xA44608", Offset = "0xA44608", VA = "0xA44608", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xA4479C", Offset = "0xA4479C", VA = "0xA4479C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200039E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BB68", Offset = "0x75BB68")]
	private sealed class <OnPlayerDeath_co>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Main_GameManager <>4__this;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string gameOverText;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Fader <fader>5__2;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <fadeToBlack>5__3;

		[Token(Token = "0x170001F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019F6")]
			[Address(RVA = "0xA44594", Offset = "0xA44594", VA = "0xA44594", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019F8")]
			[Address(RVA = "0xA445FC", Offset = "0xA445FC", VA = "0xA445FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xA434D8", Offset = "0xA434D8", VA = "0xA434D8")]
		[DebuggerHidden]
		public <OnPlayerDeath_co>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xA43F20", Offset = "0xA43F20", VA = "0xA43F20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xA43F24", Offset = "0xA43F24", VA = "0xA43F24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xA4459C", Offset = "0xA4459C", VA = "0xA4459C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200039F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BB78", Offset = "0x75BB78")]
	private sealed class <LevelOptionsUnlocking_co>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Main_GameManager <>4__this;

		[Token(Token = "0x170001F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019FC")]
			[Address(RVA = "0xA43EB0", Offset = "0xA43EB0", VA = "0xA43EB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019FE")]
			[Address(RVA = "0xA43F18", Offset = "0xA43F18", VA = "0xA43F18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xA4393C", Offset = "0xA4393C", VA = "0xA4393C")]
		[DebuggerHidden]
		public <LevelOptionsUnlocking_co>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xA43CB4", Offset = "0xA43CB4", VA = "0xA43CB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xA43CB8", Offset = "0xA43CB8", VA = "0xA43CB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xA43EB8", Offset = "0xA43EB8", VA = "0xA43EB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BB88", Offset = "0x75BB88")]
	private sealed class <SetHalloweenSkybox_co>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Main_GameManager <>4__this;

		[Token(Token = "0x170001F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A02")]
			[Address(RVA = "0xA44B98", Offset = "0xA44B98", VA = "0xA44B98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A04")]
			[Address(RVA = "0xA44C00", Offset = "0xA44C00", VA = "0xA44C00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xA43B34", Offset = "0xA43B34", VA = "0xA43B34")]
		[DebuggerHidden]
		public <SetHalloweenSkybox_co>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xA44804", Offset = "0xA44804", VA = "0xA44804", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xA44808", Offset = "0xA44808", VA = "0xA44808", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xA44BA0", Offset = "0xA44BA0", VA = "0xA44BA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[HideInInspector]
	public bool initialized;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mission playerMission;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ShuttleEscape shuttleEscapeSeq;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioCue deathSound;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color deathFadeColor;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Savegame.Serializer savegameSerializer;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Savegame savegame;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ShaderVariantCollection shaderWarmUpLow;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SwitchRefTexture halloweenSkybox;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool setHalloweenSkybox;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Texture oldSkyboxTex;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool inDyingSequence;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float nextUnlock;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int totalUnlocks;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine levelOptionsUnlockingCoroutine;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int fogRemovers;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Color defaultFogColor;

	[Token(Token = "0x170000B3")]
	public bool InDyingSequence
	{
		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xA432E0", Offset = "0xA432E0", VA = "0xA432E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action onInitScene
	{
		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xA42670", Offset = "0xA42670", VA = "0xA42670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765A70", Offset = "0x765A70")]
		add
		{
		}
		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xA42714", Offset = "0xA42714", VA = "0xA42714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765A80", Offset = "0x765A80")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action onEndScene
	{
		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xA427B8", Offset = "0xA427B8", VA = "0xA427B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765A90", Offset = "0x765A90")]
		add
		{
		}
		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xA4285C", Offset = "0xA4285C", VA = "0xA4285C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765AA0", Offset = "0x765AA0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action onFinishedMapGeneration
	{
		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xA42900", Offset = "0xA42900", VA = "0xA42900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765AB0", Offset = "0x765AB0")]
		add
		{
		}
		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xA429A4", Offset = "0xA429A4", VA = "0xA429A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765AC0", Offset = "0x765AC0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xA42A48", Offset = "0xA42A48", VA = "0xA42A48", Slot = "4")]
	public override void InitScene()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xA42BF4", Offset = "0xA42BF4", VA = "0xA42BF4")]
	public void OnFinishedMapGeneration()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xA42E80", Offset = "0xA42E80", VA = "0xA42E80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765AD0", Offset = "0x765AD0")]
	private IEnumerator PreloadRenderers_co()
	{
		return null;
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xA42F88", Offset = "0xA42F88", VA = "0xA42F88", Slot = "5")]
	public override void UpdateScene()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xA4300C", Offset = "0xA4300C", VA = "0xA4300C", Slot = "6")]
	public override void EndScene()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xA432E8", Offset = "0xA432E8", VA = "0xA432E8")]
	private void OnPlayerDeath()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xA43440", Offset = "0xA43440", VA = "0xA43440")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765B34", Offset = "0x765B34")]
	private IEnumerator OnPlayerDeath_co(string gameOverText)
	{
		return null;
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xA43504", Offset = "0xA43504", VA = "0xA43504")]
	public void OnPlayerWin()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xA31708", Offset = "0xA31708", VA = "0xA31708")]
	public static Main_GameManager Get()
	{
		return null;
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xA42DC4", Offset = "0xA42DC4", VA = "0xA42DC4")]
	private void StartLevelOptionsUnlocking()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xA438C0", Offset = "0xA438C0", VA = "0xA438C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765B98", Offset = "0x765B98")]
	private IEnumerator LevelOptionsUnlocking_co()
	{
		return null;
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xA43778", Offset = "0xA43778", VA = "0xA43778")]
	private float ComputeExploredStat()
	{
		return default(float);
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xA43968", Offset = "0xA43968", VA = "0xA43968")]
	public void RemoveFog()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xA43A58", Offset = "0xA43A58", VA = "0xA43A58")]
	public void RestoreFog()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xA42EE0", Offset = "0xA42EE0", VA = "0xA42EE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765BFC", Offset = "0x765BFC")]
	private IEnumerator SetHalloweenSkybox_co()
	{
		return null;
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xA43B60", Offset = "0xA43B60", VA = "0xA43B60")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xA43BE4", Offset = "0xA43BE4", VA = "0xA43BE4")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xA43CA8", Offset = "0xA43CA8", VA = "0xA43CA8")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xA43CAC", Offset = "0xA43CAC", VA = "0xA43CAC")]
	public Main_GameManager()
	{
	}
}
[Token(Token = "0x200014E")]
public class Overworld_GameManager : GameManagerScene
{
	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xB9893C", Offset = "0xB9893C", VA = "0xB9893C")]
	public Overworld_GameManager()
	{
	}
}
[Token(Token = "0x200014F")]
public class ShuttleEscape : MonoBehaviour
{
	[Token(Token = "0x20003A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BB98", Offset = "0x75BB98")]
	private sealed class <EscapeSequence_co>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShuttleEscape <>4__this;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <progress>5__2;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <initShipPos>5__3;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <skyRotYInit>5__4;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <skyRotZInit>5__5;

		[Token(Token = "0x170001FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A08")]
			[Address(RVA = "0x91511C", Offset = "0x91511C", VA = "0x91511C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0x915184", Offset = "0x915184", VA = "0x915184", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x913D4C", Offset = "0x913D4C", VA = "0x913D4C")]
		[DebuggerHidden]
		public <EscapeSequence_co>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x914644", Offset = "0x914644", VA = "0x914644", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x914648", Offset = "0x914648", VA = "0x914648", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x915124", Offset = "0x915124", VA = "0x915124", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BBA8", Offset = "0x75BBA8")]
	private sealed class <ShipWobble_co>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShuttleEscape <>4__this;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <bobbingWigglingFactor>5__2;

		[Token(Token = "0x170001FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A0E")]
			[Address(RVA = "0x915E64", Offset = "0x915E64", VA = "0x915E64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A10")]
			[Address(RVA = "0x915ECC", Offset = "0x915ECC", VA = "0x915ECC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x913DF4", Offset = "0x913DF4", VA = "0x913DF4")]
		[DebuggerHidden]
		public <ShipWobble_co>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x915C48", Offset = "0x915C48", VA = "0x915C48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x915C4C", Offset = "0x915C4C", VA = "0x915C4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x915E6C", Offset = "0x915E6C", VA = "0x915E6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BBB8", Offset = "0x75BBB8")]
	private sealed class <CloseShipDoor_co>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShuttleEscape <>4__this;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <progress>5__2;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion <initRot>5__3;

		[Token(Token = "0x170001FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A14")]
			[Address(RVA = "0x9145D4", Offset = "0x9145D4", VA = "0x9145D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A16")]
			[Address(RVA = "0x91463C", Offset = "0x91463C", VA = "0x91463C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x913E9C", Offset = "0x913E9C", VA = "0x913E9C")]
		[DebuggerHidden]
		public <CloseShipDoor_co>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x914404", Offset = "0x914404", VA = "0x914404", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x914408", Offset = "0x914408", VA = "0x914408", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x9145DC", Offset = "0x9145DC", VA = "0x9145DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BBC8", Offset = "0x75BBC8")]
	private sealed class <OpenHangarDoors_co>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShuttleEscape <>4__this;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <progress>5__2;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <initLeftPos>5__3;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <initRightPos>5__4;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource <leftDoorSound>5__5;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource <rightDoorSound>5__6;

		[Token(Token = "0x17000200")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0x915770", Offset = "0x915770", VA = "0x915770", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000201")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0x9157D8", Offset = "0x9157D8", VA = "0x9157D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x913F44", Offset = "0x913F44", VA = "0x913F44")]
		[DebuggerHidden]
		public <OpenHangarDoors_co>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x91518C", Offset = "0x91518C", VA = "0x91518C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x915190", Offset = "0x915190", VA = "0x915190", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x915778", Offset = "0x915778", VA = "0x915778", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BBD8", Offset = "0x75BBD8")]
	private sealed class <ReentryFX_co>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShuttleEscape <>4__this;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timeTotal;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Shake <cameraShake>5__2;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <progress>5__3;

		[Token(Token = "0x17000202")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A20")]
			[Address(RVA = "0x915BD8", Offset = "0x915BD8", VA = "0x915BD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A22")]
			[Address(RVA = "0x915C40", Offset = "0x915C40", VA = "0x915C40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x913FFC", Offset = "0x913FFC", VA = "0x913FFC")]
		[DebuggerHidden]
		public <ReentryFX_co>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x9157E0", Offset = "0x9157E0", VA = "0x9157E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x9157E4", Offset = "0x9157E4", VA = "0x9157E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x915BE0", Offset = "0x915BE0", VA = "0x915BE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BBE8", Offset = "0x75BBE8")]
	private sealed class <ChangeScene_co>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeWait;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ShuttleEscape <>4__this;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <waitTime>5__2;

		[Token(Token = "0x17000204")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A26")]
			[Address(RVA = "0x914394", Offset = "0x914394", VA = "0x914394", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A28")]
			[Address(RVA = "0x9143FC", Offset = "0x9143FC", VA = "0x9143FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x9140B4", Offset = "0x9140B4", VA = "0x9140B4")]
		[DebuggerHidden]
		public <ChangeScene_co>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x914154", Offset = "0x914154", VA = "0x914154", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x914158", Offset = "0x914158", VA = "0x914158", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x91439C", Offset = "0x91439C", VA = "0x91439C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer skybox;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform hangarDoorLeft;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform hangarDoorRight;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject hangarDoorsParticlesFX;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material skyboxMat;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E05C", Offset = "0x75E05C")]
	public Transform shuttleInterior;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform shuttleDoor;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ShuttleRendererTrigger rendererTrigger;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DraggableLinear consoleHandle;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E094", Offset = "0x75E094")]
	public Transform[] doorLeftPos;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform[] doorRightPos;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform[] shipPos;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E0CC", Offset = "0x75E0CC")]
	public Renderer[] reentryFlames;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Light reentryLight;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material reentryFlamesMat;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E104", Offset = "0x75E104")]
	public AudioSource soundEngineAmbience;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSource soundEngineMain;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioSource soundEngineHiss;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioSource soundEngineStart;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioSource soundReentry;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource soundDoorsUnlock;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioSource soundDoorsDecompress;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioSource soundDoorsLock;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioSource soundAlarm;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioSource soundCrash;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75E13C", Offset = "0x75E13C")]
	public bool _StartEscapeSequence;

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x9139C4", Offset = "0x9139C4", VA = "0x9139C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x913A68", Offset = "0x913A68", VA = "0x913A68")]
	public void StartEscapeSequence()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x913CD0", Offset = "0x913CD0", VA = "0x913CD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765C60", Offset = "0x765C60")]
	private IEnumerator EscapeSequence_co()
	{
		return null;
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x913D78", Offset = "0x913D78", VA = "0x913D78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765CC4", Offset = "0x765CC4")]
	private IEnumerator ShipWobble_co()
	{
		return null;
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x913E20", Offset = "0x913E20", VA = "0x913E20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765D28", Offset = "0x765D28")]
	private IEnumerator CloseShipDoor_co()
	{
		return null;
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x913EC8", Offset = "0x913EC8", VA = "0x913EC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765D8C", Offset = "0x765D8C")]
	private IEnumerator OpenHangarDoors_co()
	{
		return null;
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x913F70", Offset = "0x913F70", VA = "0x913F70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765DF0", Offset = "0x765DF0")]
	private IEnumerator ReentryFX_co(float timeTotal)
	{
		return null;
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x914028", Offset = "0x914028", VA = "0x914028")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765E54", Offset = "0x765E54")]
	private IEnumerator ChangeScene_co(float timeWait)
	{
		return null;
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x9140E0", Offset = "0x9140E0", VA = "0x9140E0")]
	private void OnChangeScene_Fadeout()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x91414C", Offset = "0x91414C", VA = "0x91414C")]
	public ShuttleEscape()
	{
	}
}
[Token(Token = "0x2000150")]
public class StorePlatformManager : Singleton<StorePlatformManager>
{
	[Token(Token = "0x20003A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BBF8", Offset = "0x75BBF8")]
	private sealed class <WaitForStoragePath>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StorePlatformManager <>4__this;

		[Token(Token = "0x17000206")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0x9B49E8", Offset = "0x9B49E8", VA = "0x9B49E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A2E")]
			[Address(RVA = "0x9B4A50", Offset = "0x9B4A50", VA = "0x9B4A50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x9B48FC", Offset = "0x9B48FC", VA = "0x9B48FC")]
		[DebuggerHidden]
		public <WaitForStoragePath>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x9B4980", Offset = "0x9B4980", VA = "0x9B4980", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x9B4984", Offset = "0x9B4984", VA = "0x9B4984", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x9B49F0", Offset = "0x9B49F0", VA = "0x9B49F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string dataStoragePath;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool obtainingStoragePath;

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x9B4190", Offset = "0x9B4190", VA = "0x9B4190", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x9B4208", Offset = "0x9B4208", VA = "0x9B4208")]
	private void Init_OVR()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x9B44D8", Offset = "0x9B44D8", VA = "0x9B44D8")]
	private void EntitlementCallback_OVR(Message msg)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x9B43F4", Offset = "0x9B43F4", VA = "0x9B43F4")]
	public void GetCloudStoragePath()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x9B4730", Offset = "0x9B4730", VA = "0x9B4730")]
	private void GetStoragePath_OnComplete(Message<string> msg)
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x9B4880", Offset = "0x9B4880", VA = "0x9B4880")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765EB8", Offset = "0x765EB8")]
	public IEnumerator WaitForStoragePath()
	{
		return null;
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x9B4928", Offset = "0x9B4928", VA = "0x9B4928")]
	public string GetStoragePath()
	{
		return null;
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x9B4930", Offset = "0x9B4930", VA = "0x9B4930")]
	public StorePlatformManager()
	{
	}
}
[Token(Token = "0x2000151")]
public class VideoSettings
{
	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xAB5104", Offset = "0xAB5104", VA = "0xAB5104")]
	public static void ApplyVisualSettingsQuest(bool hd)
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xAB5280", Offset = "0xAB5280", VA = "0xAB5280")]
	public VideoSettings()
	{
	}
}
[Token(Token = "0x2000152")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x759C04", Offset = "0x759C04")]
public class VideoSettingsCameraHandler : MonoBehaviour
{
	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PostProcessingProfile lowPostpro;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowExposure;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera localCamera;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PostProcessingBehaviour postpro;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AmplifyColorEffect amplifyColor;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool defaultHDR;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float defaultExposure;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PostProcessingProfile defaultPostpro;

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xAB5288", Offset = "0xAB5288", VA = "0xAB5288")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xAB53F0", Offset = "0xAB53F0", VA = "0xAB53F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xAB5464", Offset = "0xAB5464", VA = "0xAB5464")]
	public void ApplySettings(int qualityLevel)
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xAB5468", Offset = "0xAB5468", VA = "0xAB5468")]
	public VideoSettingsCameraHandler()
	{
	}
}
[Token(Token = "0x2000153")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x759C68", Offset = "0x759C68")]
public class AmbienceDescriptor : ScriptableObject
{
	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float weight;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x75E180", Offset = "0x75E180")]
	public Color fogColor1;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color fogColor2;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float fogDensityMin;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float fogDensityMax;

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xB6064C", Offset = "0xB6064C", VA = "0xB6064C")]
	public void Apply()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xB60848", Offset = "0xB60848", VA = "0xB60848")]
	public AmbienceDescriptor()
	{
	}
}
[Token(Token = "0x2000154")]
public class ChunkMesh
{
	[Token(Token = "0x20003A8")]
	private struct MaterialKey
	{
		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Material material;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int lighmapIndex;

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x92DDBC", Offset = "0x92DDBC", VA = "0x92DDBC")]
		public MaterialKey(Material mat, int lightmapIndex)
		{
		}
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x92DDB4", Offset = "0x92DDB4", VA = "0x92DDB4")]
	public ChunkMesh()
	{
	}
}
[Token(Token = "0x2000155")]
public interface IRoomBaker
{
}
[Token(Token = "0x2000156")]
public class Junction : MonoBehaviour
{
	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] blockerObjects;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform snapPoint;

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xA31800", Offset = "0xA31800", VA = "0xA31800")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xA31808", Offset = "0xA31808", VA = "0xA31808")]
	public void SetOpen(bool junctionIsOpen = true)
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xA31BC8", Offset = "0xA31BC8", VA = "0xA31BC8")]
	public Junction()
	{
	}
}
[Token(Token = "0x2000157")]
public class Level : Singleton<Level>
{
	[Token(Token = "0x20003A9")]
	public enum NavAreas
	{
		[Token(Token = "0x4001AB4")]
		Walkable,
		[Token(Token = "0x4001AB5")]
		NotWalkable,
		[Token(Token = "0x4001AB6")]
		Jump,
		[Token(Token = "0x4001AB7")]
		ClosedDoor,
		[Token(Token = "0x4001AB8")]
		LockedDoor
	}

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelGraph graph;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public LevelOptions options;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Bounds[] roomBoundsCache;

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xA341F0", Offset = "0xA341F0", VA = "0xA341F0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xA2FD5C", Offset = "0xA2FD5C", VA = "0xA2FD5C")]
	public Room GetRoomAt(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xA341F8", Offset = "0xA341F8", VA = "0xA341F8")]
	public Point GetRoomTile(Vector3 posWorld)
	{
		return default(Point);
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xA343A8", Offset = "0xA343A8", VA = "0xA343A8")]
	public Room GetRoom(Room.RoomType roomType)
	{
		return null;
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xA344C4", Offset = "0xA344C4", VA = "0xA344C4")]
	public float GetGround(Vector3 pos)
	{
		return default(float);
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xA34598", Offset = "0xA34598", VA = "0xA34598")]
	public Level()
	{
	}
}
[Token(Token = "0x2000158")]
public class LevelGraph
{
	[Token(Token = "0x20003AA")]
	public class GraphNode
	{
		[Token(Token = "0x2000492")]
		public struct Link
		{
			[Token(Token = "0x4001E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GraphNode dest;

			[Token(Token = "0x4001E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Door door;

			[Token(Token = "0x4001E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isBridge;

			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0xA36F10", Offset = "0xA36F10", VA = "0xA36F10")]
			public Link(GraphNode dest, [Optional] Door door)
			{
			}

			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0xA36898", Offset = "0xA36898", VA = "0xA36898")]
			public Link SetBridge(bool isBridge)
			{
				return default(Link);
			}
		}

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Room.RoomType roomType;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Room room;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int depth;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isArticulationPoint;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int block;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int section;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isDeadend;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int deadendLevel;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int keyLevel;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int distanceToLight;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Link> neighbors;

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xA34680", Offset = "0xA34680", VA = "0xA34680")]
		public GraphNode(Room room)
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xA34AD8", Offset = "0xA34AD8", VA = "0xA34AD8")]
		public bool IsNeighbor(Room r2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xA34BBC", Offset = "0xA34BBC", VA = "0xA34BBC")]
		public void AddNeighbor(GraphNode dest, [Optional] Door door)
		{
		}
	}

	[Token(Token = "0x20003AB")]
	public struct Bridge
	{
		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GraphNode node1;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GraphNode node2;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int cardinality;

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xA36850", Offset = "0xA36850", VA = "0xA36850")]
		public Bridge(GraphNode node1, GraphNode node2, int cardinality = 0)
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xA36A84", Offset = "0xA36A84", VA = "0xA36A84")]
		public Bridge SetCardinality(int cardinality)
		{
			return default(Bridge);
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xA36E2C", Offset = "0xA36E2C", VA = "0xA36E2C")]
		public static int CompareByCardinality(Bridge a, Bridge b)
		{
			return default(int);
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xA36E40", Offset = "0xA36E40", VA = "0xA36E40")]
		public static int CompareByDepth(Bridge a, Bridge b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<GraphNode> listNodes;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Bridge> listBridges;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GraphNode>[] listBlocks;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int maxKeyLevel;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Room> listRooms;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<Pair<Room, Room>, int> distanceCache;

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xA345E8", Offset = "0xA345E8", VA = "0xA345E8")]
	public GraphNode AddNode(Room r, int section = 0)
	{
		return null;
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xA34740", Offset = "0xA34740", VA = "0xA34740")]
	public GraphNode GetNode(Room r)
	{
		return null;
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xA34844", Offset = "0xA34844", VA = "0xA34844")]
	public int GetNodeIdx(GraphNode node)
	{
		return default(int);
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xA348E4", Offset = "0xA348E4", VA = "0xA348E4")]
	public void SetNeighbors(Room r1, Room r2, [Optional] Door door)
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xA34C78", Offset = "0xA34C78", VA = "0xA34C78")]
	public bool IsBridge(GraphNode node1, GraphNode node2, out Bridge bridge)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xA34E1C", Offset = "0xA34E1C", VA = "0xA34E1C")]
	public void Process()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xA350B0", Offset = "0xA350B0", VA = "0xA350B0")]
	private void SetDepths([Optional] GraphNode node, int depth = 0)
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xA35AE4", Offset = "0xA35AE4", VA = "0xA35AE4")]
	public void UpdateKeyLevels(Bridge lockedBridge, int keyLevel)
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xA35BB8", Offset = "0xA35BB8", VA = "0xA35BB8")]
	private void UpdateKeyLevels(GraphNode node, int keyLevel, int oldKeyLevel, GraphNode outerRoom)
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xA35D04", Offset = "0xA35D04", VA = "0xA35D04")]
	public void UpdateDistancesToLight()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xA2FF4C", Offset = "0xA2FF4C", VA = "0xA2FF4C")]
	public int GetDistance(Room r1, Room r2, [Optional] List<Room> path, [Optional] List<GraphNode.Link> linksPath)
	{
		return default(int);
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xA352A0", Offset = "0xA352A0", VA = "0xA352A0")]
	private void FindBridges()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xA361C4", Offset = "0xA361C4", VA = "0xA361C4")]
	private void FindBridges(int iNode, ref bool[] visited, ref int[] discoveryTimes, ref int[] lowTimes, ref int[] parents, ref int time)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xA35488", Offset = "0xA35488", VA = "0xA35488")]
	private void SetBridgesCardinality()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xA368B4", Offset = "0xA368B4", VA = "0xA368B4")]
	private int ComputeBridgeCardinality(int nodeIdx, ref bool[] visited)
	{
		return default(int);
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xA35660", Offset = "0xA35660", VA = "0xA35660")]
	private void PaintBlocks()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xA36A9C", Offset = "0xA36A9C", VA = "0xA36A9C")]
	private int PaintBlock(GraphNode node, int numBlock)
	{
		return default(int);
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xA35990", Offset = "0xA35990", VA = "0xA35990")]
	private void FindDeadends()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xA36BE8", Offset = "0xA36BE8", VA = "0xA36BE8")]
	private int GetDeadendLevel(GraphNode node, GraphNode parent)
	{
		return default(int);
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xA341F4", Offset = "0xA341F4", VA = "0xA341F4")]
	public void Draw()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xA36D48", Offset = "0xA36D48", VA = "0xA36D48")]
	public LevelGraph()
	{
	}
}
[Token(Token = "0x2000159")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x759CAC", Offset = "0x759CAC")]
public class LevelLightProbeGrid : MonoBehaviour
{
	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int sizeX;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int sizeZ;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int offsetX;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int offsetZ;

	[Token(Token = "0x4000B46")]
	private const int probesPerTile = 19;

	[Token(Token = "0x4000B47")]
	private const float floorHeight = 2.8f;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private int[] probeIndexes;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SphericalHarmonicsL2[] bakedProbes;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool needsReset;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool drawGrid;

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xA36F4C", Offset = "0xA36F4C", VA = "0xA36F4C")]
	private int GetProbeIndex(int tileX, int tileZ, int probeNum)
	{
		return default(int);
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0xA36F98", Offset = "0xA36F98", VA = "0xA36F98")]
	private void SetProbeIndex(int tileX, int tileZ, int probeNum, int value)
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xA36FE4", Offset = "0xA36FE4", VA = "0xA36FE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xA36FE8", Offset = "0xA36FE8", VA = "0xA36FE8")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xA370E8", Offset = "0xA370E8", VA = "0xA370E8")]
	public void SetValues(RoomLightProbes.TileProbeData roomProbes, Point roomTile, float roomYPos = 0f)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xA373F4", Offset = "0xA373F4", VA = "0xA373F4")]
	public LevelLightProbeGrid()
	{
	}
}
[Token(Token = "0x200015A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x759D10", Offset = "0x759D10")]
public class LevelOptions : ScriptableObject, IGameSerializable
{
	[Token(Token = "0x20003AC")]
	public enum EWeapons
	{
		[Token(Token = "0x4001AC8")]
		Weapon_Crossbow,
		[Token(Token = "0x4001AC9")]
		Weapon_LightningGun,
		[Token(Token = "0x4001ACA")]
		Weapon_Pistol,
		[Token(Token = "0x4001ACB")]
		Weapon_Shotgun,
		[Token(Token = "0x4001ACC")]
		Weapon_Railgun,
		[Token(Token = "0x4001ACD")]
		Weapon_Flamethrower,
		[Token(Token = "0x4001ACE")]
		Length
	}

	[Token(Token = "0x20003AD")]
	public enum EModifiers
	{
		[Token(Token = "0x4001AD0")]
		Player_Health,
		[Token(Token = "0x4001AD1")]
		Player_Speed,
		[Token(Token = "0x4001AD2")]
		Player_Inventory,
		[Token(Token = "0x4001AD3")]
		Player_Fragile,
		[Token(Token = "0x4001AD4")]
		NoMap,
		[Token(Token = "0x4001AD5")]
		NoWeapons,
		[Token(Token = "0x4001AD6")]
		NoAmmo,
		[Token(Token = "0x4001AD7")]
		Demolition,
		[Token(Token = "0x4001AD8")]
		Infestated,
		[Token(Token = "0x4001AD9")]
		LowEnergy,
		[Token(Token = "0x4001ADA")]
		Cosmonaut,
		[Token(Token = "0x4001ADB")]
		Spiders,
		[Token(Token = "0x4001ADC")]
		Security,
		[Token(Token = "0x4001ADD")]
		Length
	}

	[Serializable]
	[Token(Token = "0x20003AE")]
	public class UnlockedModsState
	{
		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> unlockedMods;

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xA37A40", Offset = "0xA37A40", VA = "0xA37A40")]
		public UnlockedModsState()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xA376A4", Offset = "0xA376A4", VA = "0xA376A4")]
		public int GetNumUnlocked()
		{
			return default(int);
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xA377B4", Offset = "0xA377B4", VA = "0xA377B4")]
		public void Unlock(EModifiers mod)
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xA376F4", Offset = "0xA376F4", VA = "0xA376F4")]
		public bool IsUnlocked(EModifiers mod)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003AF")]
	private class SerializedData
	{
		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EWeapons primaryWeapon;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<EModifiers> modifiers;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool firstRun;

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xA37980", Offset = "0xA37980", VA = "0xA37980")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minPoweredRooms;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxPoweredRooms;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minPercentInfestated;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxPercentInfestated;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float infestationSpreadRate;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int minTerminals;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int maxTerminals;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public EWeapons primaryWeapon;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<EModifiers> modifiers;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool firstRun;

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xA37410", Offset = "0xA37410", VA = "0xA37410")]
	public void ResetMods()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xA374A0", Offset = "0xA374A0", VA = "0xA374A0")]
	public void SetMod(EModifiers mod, bool active)
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xA37540", Offset = "0xA37540", VA = "0xA37540")]
	public bool HasMod(EModifiers mod)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xA375B4", Offset = "0xA375B4", VA = "0xA375B4")]
	public static EModifiers UnlockMod(UnlockedModsState modState)
	{
		return default(EModifiers);
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xA378F4", Offset = "0xA378F4", VA = "0xA378F4", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xA37988", Offset = "0xA37988", VA = "0xA37988", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xA37A14", Offset = "0xA37A14", VA = "0xA37A14", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xA37A18", Offset = "0xA37A18", VA = "0xA37A18")]
	public LevelOptions()
	{
	}
}
[Token(Token = "0x200015B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x759D54", Offset = "0x759D54")]
public class LightingProfile : ScriptableObject
{
	[Token(Token = "0x20003B0")]
	public enum Profile
	{
		[Token(Token = "0x4001AE3")]
		Standard,
		[Token(Token = "0x4001AE4")]
		LowPower
	}

	[Serializable]
	[Token(Token = "0x20003B1")]
	public class ProfileData
	{
		[Serializable]
		[Token(Token = "0x2000493")]
		public struct MaterialReplacement
		{
			[Token(Token = "0x4001E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material matFrom;

			[Token(Token = "0x4001E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material matTo;
		}

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D[] lightmaps;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MaterialReplacement[] materialReplacements;

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xA37CF8", Offset = "0xA37CF8", VA = "0xA37CF8")]
		public Material GetReplacement(Material mat)
		{
			return null;
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xA37DF8", Offset = "0xA37DF8", VA = "0xA37DF8")]
		public ProfileData()
		{
		}
	}

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProfileData standardProfile;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ProfileData lowPowerProfile;

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xA37ABC", Offset = "0xA37ABC", VA = "0xA37ABC")]
	public Texture2D GetLightmap(int index, Profile profileType)
	{
		return null;
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xA37B1C", Offset = "0xA37B1C", VA = "0xA37B1C")]
	public void ReplaceMaterials(Profile profile, List<Renderer> renderers)
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xA37DF0", Offset = "0xA37DF0", VA = "0xA37DF0")]
	public LightingProfile()
	{
	}
}
[Token(Token = "0x200015C")]
public class MapGenerator : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003B2")]
	public class Process : ScriptableObject
	{
		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xC514AC", Offset = "0xC514AC", VA = "0xC514AC", Slot = "4")]
		public virtual void Reset(MapGenerator gen, GameObject staticGeometry, GameObject dynamicGeometry)
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xC514B0", Offset = "0xC514B0", VA = "0xC514B0", Slot = "5")]
		public virtual bool Generate(MapGenerator gen, bool singleStep = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xC514B8", Offset = "0xC514B8", VA = "0xC514B8")]
		public Process()
		{
		}
	}

	[Token(Token = "0x20003B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BC08", Offset = "0x75BC08")]
	private sealed class <Generation>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MapGenerator <>4__this;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Random.State <randState>5__2;

		[Token(Token = "0x17000208")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A44")]
			[Address(RVA = "0xC5143C", Offset = "0xC5143C", VA = "0xC5143C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A46")]
			[Address(RVA = "0xC514A4", Offset = "0xC514A4", VA = "0xC514A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xC50F74", Offset = "0xC50F74", VA = "0xC50F74")]
		[DebuggerHidden]
		public <Generation>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xC50FA0", Offset = "0xC50FA0", VA = "0xC50FA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xC50FA4", Offset = "0xC50FA4", VA = "0xC50FA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xC51444", Offset = "0xC51444", VA = "0xC51444", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SwitchRefScriptableObj roomPrefabs;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SwitchRefGameObject doorPrefab;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SwitchRefGameObject[] doorLockPrefabs;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SwitchRefGameObject[] doorLockKeyPrefabs;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SwitchRefGameObject powerPanelPrefab;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SwitchRefGameObject terminalPrefab;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SwitchRefGameObject fabricatorPrefab;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VisibilityProbe visibilityProbePrefab;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RoomConnectionsMatrix roomConnections;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Process mapGeneratorProcess;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string seed;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject staticGeometry;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject dynamicGeometry;

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xA44C08", Offset = "0xA44C08", VA = "0xA44C08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xA44CB0", Offset = "0xA44CB0", VA = "0xA44CB0")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xA44FC8", Offset = "0xA44FC8", VA = "0xA44FC8")]
	private bool Generate(bool singleStep = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xA44C34", Offset = "0xA44C34", VA = "0xA44C34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765F1C", Offset = "0x765F1C")]
	private IEnumerator Generation()
	{
		return null;
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xA45070", Offset = "0xA45070", VA = "0xA45070")]
	public Room GetRoomPrefab(string roomName)
	{
		return null;
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xA451BC", Offset = "0xA451BC", VA = "0xA451BC")]
	public Room AddRoom(Room roomPrefab, Junction junction, int newRoomJunctionIndex = -1, bool addDoor = true, [Optional] Vector3? firstRoomOffset)
	{
		return null;
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xA45BC4", Offset = "0xA45BC4", VA = "0xA45BC4")]
	public Vector3 GetFirstRoomOffset(Point roomPos, Point roomDimensions, IntRect mapDimensions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xA45B1C", Offset = "0xA45B1C", VA = "0xA45B1C")]
	public GameObject AddDoor(Junction junction)
	{
		return null;
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xA45D9C", Offset = "0xA45D9C", VA = "0xA45D9C")]
	public DoorLock AddDoorLock(Door door, out Item keyPrefab, int iKeyColor, bool rightSide = true)
	{
		return null;
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xA45F04", Offset = "0xA45F04", VA = "0xA45F04")]
	private void PlaceObjects()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xA464F0", Offset = "0xA464F0", VA = "0xA464F0")]
	public void SetPlayer(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xA467F0", Offset = "0xA467F0", VA = "0xA467F0")]
	private void BuildNavMesh()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xA46BDC", Offset = "0xA46BDC", VA = "0xA46BDC")]
	public void ProcessGeometry(IEnumerable<Room> rooms)
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xA4706C", Offset = "0xA4706C", VA = "0xA4706C")]
	public MapGenerator()
	{
	}
}
[Token(Token = "0x200015D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x759D98", Offset = "0x759D98")]
public class MapGeneratorDeck : MapGenerator.Process
{
	[Token(Token = "0x20003B4")]
	private class RoomInfo
	{
		[Token(Token = "0x2000494")]
		public class TileJunctions
		{
			[Token(Token = "0x4001E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Point tile;

			[Token(Token = "0x4001E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool junctionLeft;

			[Token(Token = "0x4001E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool junctionRight;

			[Token(Token = "0x4001E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			public bool junctionTop;

			[Token(Token = "0x4001E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
			public bool junctionBottom;

			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0xC570F8", Offset = "0xC570F8", VA = "0xC570F8")]
			public TileJunctions(Point tile)
			{
			}
		}

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Room.RoomType type;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Room roomPrefab;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Point pos;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int width;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int height;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RoomInfo parent;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Point parentTile;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TileJunctions[] junctions;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool hasPower;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool hasInfestation;

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xC5637C", Offset = "0xC5637C", VA = "0xC5637C")]
		public TileJunctions GetTileJunctions(Point worldTile)
		{
			return null;
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xC56844", Offset = "0xC56844", VA = "0xC56844")]
		public RoomInfo(Room rPrefab, Point pos, int width, int height, RoomInfo parent, Point parentTile, Point junctionTile, Room.Adjacency.Dir junctionDir)
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xC57128", Offset = "0xC57128", VA = "0xC57128")]
		public int CountJunctions()
		{
			return default(int);
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xC56B04", Offset = "0xC56B04", VA = "0xC56B04")]
		public bool CanAddJunction(Point fromCell, Room.Adjacency.Dir dir, RoomMap roomMap)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xC56AB8", Offset = "0xC56AB8", VA = "0xC56AB8")]
		public bool CanAddJunction(Point newPos, RoomMap roomMap)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xC5679C", Offset = "0xC5679C", VA = "0xC5679C")]
		public Point AddJunctionTo(Point newPos, Room.Adjacency.Dir dir)
		{
			return default(Point);
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xC562E8", Offset = "0xC562E8", VA = "0xC562E8")]
		public Room.Adjacency.Dir DirToCell(Point newPos, out Point closestCell)
		{
			return default(Room.Adjacency.Dir);
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xC56274", Offset = "0xC56274", VA = "0xC56274")]
		public Point GetClosestCellInRoom(Point newPos)
		{
			return default(Point);
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xC55E78", Offset = "0xC55E78", VA = "0xC55E78")]
		public int GetAdjacencyLayoutIndex([Optional] Room prefab, bool perfectMatch = false, bool checkExtraDir = false, [Optional] Point extraDirFromCell, Room.Adjacency.Dir extraDir = Room.Adjacency.Dir.Bottom, bool checkReserved = false, [Optional] RoomMap roomMap)
		{
			return default(int);
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xC56D80", Offset = "0xC56D80", VA = "0xC56D80")]
		public int GetAdjacencyReservedTiles(Point fromTile, Room.Adjacency.Dir dir, bool perfectMatch = false)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20003B5")]
	private class RoomMap
	{
		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<RoomInfo> roomInfo;

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xC571AC", Offset = "0xC571AC", VA = "0xC571AC")]
		public RoomMap()
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xC56580", Offset = "0xC56580", VA = "0xC56580")]
		public RoomInfo At(int x, int y)
		{
			return null;
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xC55720", Offset = "0xC55720", VA = "0xC55720")]
		public RoomInfo At(Point pos)
		{
			return null;
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xC56CF4", Offset = "0xC56CF4", VA = "0xC56CF4")]
		public void Add(RoomInfo rInfo)
		{
		}
	}

	[Token(Token = "0x20003B6")]
	private class ShipLayout : IComparable
	{
		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoomMap roomMap;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntRect dimensions;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float evaluation;

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xC53FEC", Offset = "0xC53FEC", VA = "0xC53FEC")]
		public ShipLayout()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xC57228", Offset = "0xC57228", VA = "0xC57228", Slot = "4")]
		public int CompareTo(object obj)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20003B7")]
	private struct JunctionInfo
	{
		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Point from;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Point to;

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xC5683C", Offset = "0xC5683C", VA = "0xC5683C")]
		public JunctionInfo(Point from, Point to)
		{
		}
	}

	[Token(Token = "0x20003B8")]
	private struct RoomPositionConfig
	{
		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int deltaX;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int deltaZ;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int width;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int height;

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xC56574", Offset = "0xC56574", VA = "0xC56574")]
		public RoomPositionConfig(int deltaX, int deltaZ, int width, int height)
		{
		}
	}

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShipDeck shipDeckAsset;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75E1D8", Offset = "0x75E1D8")]
	public float corridorChance;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxRoomsInLine;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float corridorCostInLine;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AmbienceDescriptor[] ambienceDescs;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MapGenerator gen;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject staticGeometry;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject dynamicGeometry;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Room.RoomType> roomDeck;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<JunctionInfo> pendingJunctions;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private HashSet<Point> blockedTiles;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<RoomPositionConfig> roomPositionConfigs;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<RoomInfo> roomNeighborsCache;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Pair<JunctionInfo, Room.Adjacency.Dir>> roomNeighborsJunctions;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Room> corridorCachedPrefabs;

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xC514C0", Offset = "0xC514C0", VA = "0xC514C0", Slot = "4")]
	public override void Reset(MapGenerator generator, GameObject staticGeometry, GameObject dynamicGeometry)
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xC51510", Offset = "0xC51510", VA = "0xC51510", Slot = "5")]
	public override bool Generate(MapGenerator generator, bool singleStep = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xC51BBC", Offset = "0xC51BBC", VA = "0xC51BBC")]
	private ShipLayout GenerateLayout()
	{
		return null;
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xC522DC", Offset = "0xC522DC", VA = "0xC522DC")]
	private void BuildGeometry(ShipLayout layout)
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xC54090", Offset = "0xC54090", VA = "0xC54090")]
	private RoomInfo AddRoom(ShipLayout layout, Point pos, Room.RoomType roomType, [Optional] RoomInfo parent, [Optional] Point parentTile, bool allowBigRoom = true)
	{
		return null;
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xC563D0", Offset = "0xC563D0", VA = "0xC563D0")]
	private Room SelectRoomPrefab(Room.RoomType rType, bool allowBigRoom)
	{
		return null;
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xC55728", Offset = "0xC55728", VA = "0xC55728")]
	private Room ResolveCorridorPrefab(RoomInfo roomInfo)
	{
		return null;
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xC55090", Offset = "0xC55090", VA = "0xC55090")]
	private JunctionInfo ChooseJunction(ShipLayout layout)
	{
		return default(JunctionInfo);
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xC54AE8", Offset = "0xC54AE8", VA = "0xC54AE8")]
	private void PrunePendingJunctions(ShipLayout layout)
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xC552B4", Offset = "0xC552B4", VA = "0xC552B4")]
	private List<Room.RoomType> GetFilteredRoomDeck(ShipLayout layout, Point pos, List<Room.RoomType> deck)
	{
		return null;
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xC55934", Offset = "0xC55934", VA = "0xC55934")]
	private static float EvalLayout(ShipLayout layout)
	{
		return default(float);
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xC56CA4", Offset = "0xC56CA4", VA = "0xC56CA4")]
	private IntRect AddDimensions(IntRect oldDimensions, Point pos)
	{
		return default(IntRect);
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xC56D5C", Offset = "0xC56D5C", VA = "0xC56D5C")]
	private static int GetDimensionsArea(IntRect dimensions)
	{
		return default(int);
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xC56FD4", Offset = "0xC56FD4", VA = "0xC56FD4")]
	public MapGeneratorDeck()
	{
	}
}
[Token(Token = "0x200015E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x759DDC", Offset = "0x759DDC")]
public class MapGeneratorEM : MapGenerator.Process
{
	[Token(Token = "0x20003B9")]
	private class RoomInfo
	{
		[Token(Token = "0x2000495")]
		public class TileJunctions
		{
			[Token(Token = "0x4001E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Point tile;

			[Token(Token = "0x4001E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool junctionLeft;

			[Token(Token = "0x4001E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool junctionRight;

			[Token(Token = "0x4001E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			public bool junctionTop;

			[Token(Token = "0x4001EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
			public bool junctionBottom;

			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0xC5F920", Offset = "0xC5F920", VA = "0xC5F920")]
			public TileJunctions(Point tile)
			{
			}
		}

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Room.RoomType type;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Room roomPrefab;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Point pos;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int width;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int height;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RoomInfo parent;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Point parentTile;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int section;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TileJunctions[] junctions;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool hasPower;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool hasInfestation;

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xC5E948", Offset = "0xC5E948", VA = "0xC5E948")]
		public TileJunctions GetTileJunctions(Point worldTile)
		{
			return null;
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xC5EE90", Offset = "0xC5EE90", VA = "0xC5EE90")]
		public RoomInfo(Room rPrefab, Point pos, int width, int height, RoomInfo parent, Point parentTile, Point junctionTile, Room.Adjacency.Dir junctionDir, int section)
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xC5F650", Offset = "0xC5F650", VA = "0xC5F650")]
		public int CountJunctions()
		{
			return default(int);
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xC5F158", Offset = "0xC5F158", VA = "0xC5F158")]
		public bool CanAddJunction(Point fromCell, Room.Adjacency.Dir dir, RoomMap roomMap)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xC5F10C", Offset = "0xC5F10C", VA = "0xC5F10C")]
		public bool CanAddJunction(Point newPos, RoomMap roomMap)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xC5EDF0", Offset = "0xC5EDF0", VA = "0xC5EDF0")]
		public Point AddJunctionTo(Point newPos, Room.Adjacency.Dir dir)
		{
			return default(Point);
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xC5F6D4", Offset = "0xC5F6D4", VA = "0xC5F6D4")]
		public Point RemoveJunctionTo(Point newPos, Room.Adjacency.Dir dir)
		{
			return default(Point);
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xC5E8B4", Offset = "0xC5E8B4", VA = "0xC5E8B4")]
		public Room.Adjacency.Dir DirToCell(Point newPos, out Point closestCell)
		{
			return default(Room.Adjacency.Dir);
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xC5E840", Offset = "0xC5E840", VA = "0xC5E840")]
		public Point GetClosestCellInRoom(Point newPos)
		{
			return default(Point);
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xC5E444", Offset = "0xC5E444", VA = "0xC5E444")]
		public int GetAdjacencyLayoutIndex([Optional] Room prefab, bool perfectMatch = false, bool checkExtraDir = false, [Optional] Point extraDirFromCell, Room.Adjacency.Dir extraDir = Room.Adjacency.Dir.Bottom, bool checkReserved = false, [Optional] RoomMap roomMap)
		{
			return default(int);
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xC5F3FC", Offset = "0xC5F3FC", VA = "0xC5F3FC")]
		public int GetAdjacencyReservedTiles(Point fromTile, Room.Adjacency.Dir dir, bool perfectMatch = false)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20003BA")]
	private class RoomMap
	{
		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<RoomInfo> roomInfo;

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xC5F950", Offset = "0xC5F950", VA = "0xC5F950")]
		public RoomMap()
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xC5EBD4", Offset = "0xC5EBD4", VA = "0xC5EBD4")]
		public RoomInfo At(int x, int y)
		{
			return null;
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xC5CDD4", Offset = "0xC5CDD4", VA = "0xC5CDD4")]
		public RoomInfo At(Point pos)
		{
			return null;
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xC5F370", Offset = "0xC5F370", VA = "0xC5F370")]
		public void Add(RoomInfo rInfo)
		{
		}
	}

	[Token(Token = "0x20003BB")]
	private class ShipLayout : IComparable
	{
		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoomMap roomMap;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntRect dimensions;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float evaluation;

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xC5AD84", Offset = "0xC5AD84", VA = "0xC5AD84")]
		public ShipLayout()
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xC5F9CC", Offset = "0xC5F9CC", VA = "0xC5F9CC", Slot = "4")]
		public int CompareTo(object obj)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20003BC")]
	private struct JunctionInfo
	{
		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Point from;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Point to;

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xC5BF98", Offset = "0xC5BF98", VA = "0xC5BF98")]
		public JunctionInfo(Point from, Point to)
		{
		}
	}

	[Token(Token = "0x20003BD")]
	private struct RoomPositionConfig
	{
		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int deltaX;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int deltaZ;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int width;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int height;

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xC5EBC8", Offset = "0xC5EBC8", VA = "0xC5EBC8")]
		public RoomPositionConfig(int deltaX, int deltaZ, int width, int height)
		{
		}
	}

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Room[] hubRooms;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ShipDeck[] sectionDecks;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75E1F0", Offset = "0x75E1F0")]
	public float corridorChance;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int maxRoomsInLine;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float corridorCostInLine;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AmbienceDescriptor[] ambienceDescs;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MapGenerator gen;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject staticGeometry;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject dynamicGeometry;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<List<Room.RoomType>> roomDecks;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int minKeys;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int maxKeys;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<List<JunctionInfo>> pendingJunctions;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private HashSet<Point> blockedTiles;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Pair<Point, Point>> blockedJunctions;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<RoomPositionConfig> roomPositionConfigs;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<RoomInfo> roomNeighborsCache;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<Pair<JunctionInfo, Room.Adjacency.Dir>> roomNeighborsJunctions;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<Room> roomCachedPrefabs;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<float> roomCachedPrefabsWeight;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<Room> corridorCachedPrefabs;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<float> corridorCachedPrefabsWeight;

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xC572CC", Offset = "0xC572CC", VA = "0xC572CC", Slot = "4")]
	public override void Reset(MapGenerator generator, GameObject staticGeometry, GameObject dynamicGeometry)
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xC5731C", Offset = "0xC5731C", VA = "0xC5731C", Slot = "5")]
	public override bool Generate(MapGenerator generator, bool singleStep = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xC579F0", Offset = "0xC579F0", VA = "0xC579F0")]
	private ShipLayout GenerateLayout()
	{
		return null;
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xC5CDDC", Offset = "0xC5CDDC", VA = "0xC5CDDC")]
	private int CountPendingRooms(List<List<Room.RoomType>> decks)
	{
		return default(int);
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xC5CED8", Offset = "0xC5CED8", VA = "0xC5CED8")]
	private int CountPendingJunctions(List<List<JunctionInfo>> junctions)
	{
		return default(int);
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xC58C80", Offset = "0xC58C80", VA = "0xC58C80")]
	private void BuildGeometry(ShipLayout layout)
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xC5AE28", Offset = "0xC5AE28", VA = "0xC5AE28")]
	private RoomInfo AddRoom(ShipLayout layout, Point pos, Room.RoomType roomType, [Optional] RoomInfo parent, [Optional] Point parentTile, bool allowBigRoom = true, int section = 0, bool initHub = false)
	{
		return null;
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xC5E99C", Offset = "0xC5E99C", VA = "0xC5E99C")]
	private Room SelectRoomPrefab(Room.RoomType rType, bool allowBigRoom)
	{
		return null;
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xC5DB44", Offset = "0xC5DB44", VA = "0xC5DB44")]
	private Room ResolveCorridorPrefab(RoomInfo roomInfo)
	{
		return null;
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xC5C6E0", Offset = "0xC5C6E0", VA = "0xC5C6E0")]
	private JunctionInfo ChooseJunction(ShipLayout layout, int section)
	{
		return default(JunctionInfo);
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xC5BFA0", Offset = "0xC5BFA0", VA = "0xC5BFA0")]
	private void PrunePendingJunctions(ShipLayout layout)
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xC5CFD4", Offset = "0xC5CFD4", VA = "0xC5CFD4")]
	private void PruneCorridorDeadends(ShipLayout layout)
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xC5D18C", Offset = "0xC5D18C", VA = "0xC5D18C")]
	private void CollapseCorridors(ShipLayout layout)
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xC5C968", Offset = "0xC5C968", VA = "0xC5C968")]
	private List<Room.RoomType> GetFilteredRoomDeck(ShipLayout layout, Point pos, List<Room.RoomType> deck)
	{
		return null;
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xC5DE04", Offset = "0xC5DE04", VA = "0xC5DE04")]
	private static float EvalLayout(ShipLayout layout)
	{
		return default(float);
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xC5F320", Offset = "0xC5F320", VA = "0xC5F320")]
	private IntRect AddDimensions(IntRect oldDimensions, Point pos)
	{
		return default(IntRect);
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xC5F3D8", Offset = "0xC5F3D8", VA = "0xC5F3D8")]
	private static int GetDimensionsArea(IntRect dimensions)
	{
		return default(int);
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xC5F764", Offset = "0xC5F764", VA = "0xC5F764")]
	public MapGeneratorEM()
	{
	}
}
[Token(Token = "0x200015F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x759E20", Offset = "0x759E20")]
public class MapGeneratorTest : MapGenerator.Process
{
	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MapGenerator gen;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject staticGeometry;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject dynamicGeometry;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Junction> openJunctions;

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xC5FA70", Offset = "0xC5FA70", VA = "0xC5FA70", Slot = "4")]
	public override void Reset(MapGenerator generator, GameObject staticGeometry, GameObject dynamicGeometry)
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xC5FAD8", Offset = "0xC5FAD8", VA = "0xC5FAD8", Slot = "5")]
	public override bool Generate(MapGenerator generator, bool singleStep = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xC60040", Offset = "0xC60040", VA = "0xC60040")]
	private Room AddRoom(Room roomPrefab, Junction junction)
	{
		return null;
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xC601AC", Offset = "0xC601AC", VA = "0xC601AC")]
	public MapGeneratorTest()
	{
	}
}
[Token(Token = "0x2000160")]
public class PrefabLightmapData : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003BE")]
	public struct RendererInfo
	{
		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Renderer renderer;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int lightmapIndex;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector4 lightmapOffsetScale;
	}

	[Serializable]
	[Token(Token = "0x20003BF")]
	public struct ProfileLightData
	{
		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LightingProfile.Profile profileType;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D[] m_Lightmaps;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D[] m_LightmapsNear;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReflectionProbe[] m_ReflectionProbes;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture[] m_ReflectionMaps;
	}

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RendererInfo[] m_RendererInfo;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ProfileLightData[] profiles;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int[][] indexTranslation;

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x9F3DA8", Offset = "0x9F3DA8", VA = "0x9F3DA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x9F4270", Offset = "0x9F4270", VA = "0x9F4270")]
	public void ApplyLightmaps(LightingProfile.Profile profileType)
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x9F420C", Offset = "0x9F420C", VA = "0x9F420C")]
	private int GetProfileDataIndex(LightingProfile.Profile profileType)
	{
		return default(int);
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x9F4300", Offset = "0x9F4300", VA = "0x9F4300")]
	private static void ApplyRendererInfo(RendererInfo[] infos, int[] indexTranslation)
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x9F446C", Offset = "0x9F446C", VA = "0x9F446C")]
	private static void ApplyReflectionMaps(ReflectionProbe[] probes, Texture[] reflectionMaps)
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x9F4550", Offset = "0x9F4550", VA = "0x9F4550")]
	public PrefabLightmapData()
	{
	}
}
[Token(Token = "0x2000161")]
public class Room : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x20003C0")]
	public enum RoomType
	{
		[Token(Token = "0x4001B1D")]
		Corridor,
		[Token(Token = "0x4001B1E")]
		Entrance,
		[Token(Token = "0x4001B1F")]
		Bridge,
		[Token(Token = "0x4001B20")]
		Dorm,
		[Token(Token = "0x4001B21")]
		Kitchen,
		[Token(Token = "0x4001B22")]
		Medical,
		[Token(Token = "0x4001B23")]
		Commons,
		[Token(Token = "0x4001B24")]
		Bathroom,
		[Token(Token = "0x4001B25")]
		Workshop,
		[Token(Token = "0x4001B26")]
		Lab,
		[Token(Token = "0x4001B27")]
		Office,
		[Token(Token = "0x4001B28")]
		Power,
		[Token(Token = "0x4001B29")]
		Computers,
		[Token(Token = "0x4001B2A")]
		Storage,
		[Token(Token = "0x4001B2B")]
		Hub,
		[Token(Token = "0x4001B2C")]
		Navigation,
		[Token(Token = "0x4001B2D")]
		JumpDrive,
		[Token(Token = "0x4001B2E")]
		Hangar,
		[Token(Token = "0x4001B2F")]
		Undefined
	}

	[Serializable]
	[Token(Token = "0x20003C1")]
	public class Adjacency
	{
		[Token(Token = "0x2000496")]
		public enum Dir
		{
			[Token(Token = "0x4001EA2")]
			Left,
			[Token(Token = "0x4001EA3")]
			Top,
			[Token(Token = "0x4001EA4")]
			Right,
			[Token(Token = "0x4001EA5")]
			Bottom
		}

		[Serializable]
		[Token(Token = "0x2000497")]
		public class TileAdj
		{
			[Token(Token = "0x4001EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int _tileX;

			[Token(Token = "0x4001EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int _tileY;

			[Token(Token = "0x4001EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Junction left;

			[Token(Token = "0x4001EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Junction right;

			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Junction top;

			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Junction bottom;

			[Token(Token = "0x4001EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int[] reservedTiles;

			[Token(Token = "0x4001EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 offset;

			[Token(Token = "0x17000257")]
			public Point Tile
			{
				[Token(Token = "0x6001BF8")]
				[Address(RVA = "0xA5011C", Offset = "0xA5011C", VA = "0xA5011C")]
				get
				{
					return default(Point);
				}
				[Token(Token = "0x6001BF9")]
				[Address(RVA = "0xA5014C", Offset = "0xA5014C", VA = "0xA5014C")]
				set
				{
				}
			}

			[Token(Token = "0x6001BFA")]
			[Address(RVA = "0xA4FC64", Offset = "0xA4FC64", VA = "0xA4FC64")]
			public TileAdj([Optional] Point tile, [Optional] Junction left, [Optional] Junction right, [Optional] Junction top, [Optional] Junction bottom)
			{
			}

			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0xA50660", Offset = "0xA50660", VA = "0xA50660", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001BFC")]
			[Address(RVA = "0xA5081C", Offset = "0xA5081C", VA = "0xA5081C", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TileAdj[] tiles;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int width;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int height;

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xA4FA68", Offset = "0xA4FA68", VA = "0xA4FA68")]
		public static Point GetDirDelta(Dir dir)
		{
			return default(Point);
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xA4FB00", Offset = "0xA4FB00", VA = "0xA4FB00")]
		public static Dir GetDirFromDelta(Point delta)
		{
			return default(Dir);
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xA4FB44", Offset = "0xA4FB44", VA = "0xA4FB44")]
		public static Dir Reverse(Dir dir)
		{
			return default(Dir);
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xA4FB64", Offset = "0xA4FB64", VA = "0xA4FB64")]
		public Adjacency()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xA4FDB8", Offset = "0xA4FDB8", VA = "0xA4FDB8")]
		public Adjacency RotateCW()
		{
			return null;
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xA50158", Offset = "0xA50158", VA = "0xA50158", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xA502D8", Offset = "0xA502D8", VA = "0xA502D8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xA50390", Offset = "0xA50390", VA = "0xA50390")]
		public TileAdj GetTileAdj(Point tile)
		{
			return null;
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xA50450", Offset = "0xA50450", VA = "0xA50450")]
		public bool CheckValid(Point tile, bool left, bool right, bool top, bool bottom, bool perfectMath = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xA50610", Offset = "0xA50610", VA = "0xA50610")]
		public bool CheckBlocked(Point tile, bool blockedLeft, bool blockedRight, bool blockedTop, bool blockedBottom)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003C2")]
	private class SerializedData
	{
		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool visited;

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xA4F1D0", Offset = "0xA4F1D0", VA = "0xA4F1D0")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float MiniTileSize;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int _sizeX;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int _sizeZ;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ceilingHeight;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public RoomType type;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool disableGeneration;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float generationWeight;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int reservedTilesLeft;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int reservedTilesRight;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int reservedTilesTop;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int reservedTilesBottom;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Bounds localBounds;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Bounds localInnerBounds;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Bounds bounds;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Bounds innerBounds;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int maxJunctions;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<Junction> junctions;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<Adjacency> adjacencyData;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform entranceSpawnPoint;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RoomMarker.RoomMarkerCollection markerCollection;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool hasSecurity;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	public bool visited;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<GameObject> staticGeometry;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private RoomInfestation _infestation;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Sector occlusionSector;

	[Token(Token = "0x170000B4")]
	public int MiniSizeX
	{
		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xA4EBFC", Offset = "0xA4EBFC", VA = "0xA4EBFC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B5")]
	public int MiniSizeZ
	{
		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xA4EC04", Offset = "0xA4EC04", VA = "0xA4EC04")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B6")]
	public int TilesX
	{
		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xA4EC0C", Offset = "0xA4EC0C", VA = "0xA4EC0C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B7")]
	public int TilesZ
	{
		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xA4EC28", Offset = "0xA4EC28", VA = "0xA4EC28")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B8")]
	public RoomInfestation Infestation
	{
		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xA4EC44", Offset = "0xA4EC44", VA = "0xA4EC44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B9")]
	public bool IsInfestated
	{
		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xA4EC4C", Offset = "0xA4EC4C", VA = "0xA4EC4C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xA4ECE0", Offset = "0xA4ECE0", VA = "0xA4ECE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xA4F148", Offset = "0xA4F148", VA = "0xA4F148")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xA4F154", Offset = "0xA4F154", VA = "0xA4F154")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xA4F15C", Offset = "0xA4F15C", VA = "0xA4F15C", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xA4F1D8", Offset = "0xA4F1D8", VA = "0xA4F1D8", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xA4F248", Offset = "0xA4F248", VA = "0xA4F248", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xA4F24C", Offset = "0xA4F24C", VA = "0xA4F24C")]
	public int GetMaxJunctions()
	{
		return default(int);
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xA4F2E0", Offset = "0xA4F2E0", VA = "0xA4F2E0")]
	public int GetJunctionIndex(Junction junction)
	{
		return default(int);
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xA4F3B8", Offset = "0xA4F3B8", VA = "0xA4F3B8")]
	public Vector3 MiniTileToLocal(int xPos, int zPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xA4F468", Offset = "0xA4F468", VA = "0xA4F468")]
	public Vector3 MiniTileToWorld(int xPos, int zPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xA4F4B8", Offset = "0xA4F4B8", VA = "0xA4F4B8")]
	public Point LocalToMiniTile(Vector3 pos)
	{
		return default(Point);
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xA4F5F0", Offset = "0xA4F5F0", VA = "0xA4F5F0")]
	public Point GetTileForMiniTile(int xPos, int zPos)
	{
		return default(Point);
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xA4F63C", Offset = "0xA4F63C", VA = "0xA4F63C")]
	public Vector3 GetCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xA4F7F4", Offset = "0xA4F7F4", VA = "0xA4F7F4")]
	public Vector3 GetRandomWalkablePos(out bool isValid, int maxTries = 10)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xA4F954", Offset = "0xA4F954", VA = "0xA4F954")]
	public Vector3 GetRandomWalkablePos(int maxTries = 10)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xA4F97C", Offset = "0xA4F97C", VA = "0xA4F97C")]
	public Room()
	{
	}
}
[Token(Token = "0x2000162")]
public class RoomBakeMaterialSwitcher : MonoBehaviour, IRoomBaker
{
	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material bakingMaterial;

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xA5090C", Offset = "0xA5090C", VA = "0xA5090C")]
	public RoomBakeMaterialSwitcher()
	{
	}
}
[Token(Token = "0x2000163")]
public class RoomBakeOptions : MonoBehaviour
{
	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool dontCombineMeshes;

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xA50914", Offset = "0xA50914", VA = "0xA50914")]
	public RoomBakeOptions()
	{
	}
}
[Serializable]
[Token(Token = "0x2000164")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x759E64", Offset = "0x759E64")]
public class RoomConnectionsMatrix : ScriptableObject
{
	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool[] connections;

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xA5091C", Offset = "0xA5091C", VA = "0xA5091C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xA509C4", Offset = "0xA509C4", VA = "0xA509C4")]
	public bool Get(Room.RoomType rtype1, Room.RoomType rtype2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xA50A08", Offset = "0xA50A08", VA = "0xA50A08")]
	public void Set(Room.RoomType rtype1, Room.RoomType rtype2, bool value = true)
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xA50A74", Offset = "0xA50A74", VA = "0xA50A74")]
	public bool CanConnect(Room.RoomType rtype1, Room.RoomType rtype2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xA50AE0", Offset = "0xA50AE0", VA = "0xA50AE0")]
	public RoomConnectionsMatrix()
	{
	}
}
[Token(Token = "0x2000165")]
public class RoomLightProbes : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003C3")]
	public class TileProbeData
	{
		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int tileX;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int tileY;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] probeDataCorners;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] probeDataCenters;

		[Token(Token = "0x4001B38")]
		private const int coefficientsPerProbe = 27;

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xA5452C", Offset = "0xA5452C", VA = "0xA5452C")]
		public TileProbeData(int tileX, int tileY, int numLevels)
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xA545E0", Offset = "0xA545E0", VA = "0xA545E0")]
		public void SaveCorner(SphericalHarmonicsL2 probe, int level, int corner)
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xA546E0", Offset = "0xA546E0", VA = "0xA546E0")]
		public void SaveCenter(SphericalHarmonicsL2 probe, int level)
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xA54734", Offset = "0xA54734", VA = "0xA54734")]
		public SphericalHarmonicsL2 GetCorner(int level, int corner)
		{
			return default(SphericalHarmonicsL2);
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xA54814", Offset = "0xA54814", VA = "0xA54814")]
		public SphericalHarmonicsL2 GetCenter(int level)
		{
			return default(SphericalHarmonicsL2);
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xA54644", Offset = "0xA54644", VA = "0xA54644")]
		private void Save(float[] dest, int idx, SphericalHarmonicsL2 probe)
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xA54750", Offset = "0xA54750", VA = "0xA54750")]
		private SphericalHarmonicsL2 Get(float[] src, int idx)
		{
			return default(SphericalHarmonicsL2);
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xA54630", Offset = "0xA54630", VA = "0xA54630")]
		private int GetProbeIndexCorner(int level, int corner)
		{
			return default(int);
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xA54728", Offset = "0xA54728", VA = "0xA54728")]
		private int GetProbeIndexCenter(int level)
		{
			return default(int);
		}
	}

	[Serializable]
	[Token(Token = "0x20003C4")]
	public class OrientationProbeData
	{
		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TileProbeData[] probeTiles;

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xA54514", Offset = "0xA54514", VA = "0xA54514")]
		public OrientationProbeData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003C5")]
	public class ProbeData2
	{
		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OrientationProbeData[] probeOrientations;

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xA5451C", Offset = "0xA5451C", VA = "0xA5451C")]
		public ProbeData2()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003C6")]
	public class ReflectionProbeData
	{
		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture[] reflectionTextures;

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xA54524", Offset = "0xA54524", VA = "0xA54524")]
		public ReflectionProbeData()
		{
		}
	}

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public ProbeData2[] probeProfiles;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ReflectionProbe reflectionProbe;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public ReflectionProbeData[] reflectionProbeProfiles;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LevelLightProbeGrid levelProbes;

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xA53D20", Offset = "0xA53D20", VA = "0xA53D20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xA53FC4", Offset = "0xA53FC4", VA = "0xA53FC4")]
	public void ApplyProbes(LightingProfile.Profile profile)
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xA543FC", Offset = "0xA543FC", VA = "0xA543FC")]
	public void ApplyReflectionProbe(LightingProfile.Profile profile, int angleMod = 0)
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xA5450C", Offset = "0xA5450C", VA = "0xA5450C")]
	public RoomLightProbes()
	{
	}
}
[Token(Token = "0x2000166")]
public class RoomPower : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x20003C7")]
	public enum PowerLevel
	{
		[Token(Token = "0x4001B3D")]
		Off,
		[Token(Token = "0x4001B3E")]
		LowPower,
		[Token(Token = "0x4001B3F")]
		FullPower
	}

	[Token(Token = "0x20003C8")]
	private class SerializedData
	{
		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PowerLevel powerLevel;

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xA55ACC", Offset = "0xA55ACC", VA = "0xA55ACC")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PowerLevel _powerLevel;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool randomPowerLevel;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PowerLevel _initPowerLevel;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _powerFluctuations;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RoomPowerData data;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PrefabLightmapData prefabLightmapData;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RoomLightProbes lightProbes;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isDirty;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isInFluctuation;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float fluctuationTime;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool inFlickerMode;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float flickerTime;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 soundOrigin;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource humSound;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float forcedLitTime;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float emPulseTime;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool playEMPulseSound;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Renderer> staticRenderers;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public LightingProfile lightingProfile;

	[Token(Token = "0x170000BA")]
	public PowerLevel powerLevel
	{
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xA54C90", Offset = "0xA54C90", VA = "0xA54C90")]
		get
		{
			return default(PowerLevel);
		}
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xA54CAC", Offset = "0xA54CAC", VA = "0xA54CAC")]
		set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public PowerLevel initPowerLevel
	{
		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xA54DCC", Offset = "0xA54DCC", VA = "0xA54DCC")]
		get
		{
			return default(PowerLevel);
		}
		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xA54D9C", Offset = "0xA54D9C", VA = "0xA54D9C")]
		set
		{
		}
	}

	[Token(Token = "0x170000BC")]
	public bool PowerFluctuations
	{
		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xA54DD4", Offset = "0xA54DD4", VA = "0xA54DD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xA54DDC", Offset = "0xA54DDC", VA = "0xA54DDC")]
		set
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action<RoomPower> onPowerLevelChange
	{
		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xA50D4C", Offset = "0xA50D4C", VA = "0xA50D4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765F80", Offset = "0x765F80")]
		add
		{
		}
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xA50FD8", Offset = "0xA50FD8", VA = "0xA50FD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765F90", Offset = "0x765F90")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action<LightingProfile.Profile> onUpdateLightingProfile
	{
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xA54DFC", Offset = "0xA54DFC", VA = "0xA54DFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765FA0", Offset = "0x765FA0")]
		add
		{
		}
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xA54EA0", Offset = "0xA54EA0", VA = "0xA54EA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765FB0", Offset = "0x765FB0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xA54CB4", Offset = "0xA54CB4", VA = "0xA54CB4")]
	private void SetPowerLevel(PowerLevel newValue, bool playSounds = true)
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xA54F44", Offset = "0xA54F44", VA = "0xA54F44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xA54F50", Offset = "0xA54F50", VA = "0xA54F50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xA54F58", Offset = "0xA54F58", VA = "0xA54F58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xA551CC", Offset = "0xA551CC", VA = "0xA551CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xA52B18", Offset = "0xA52B18", VA = "0xA52B18")]
	public void UpdateLighting()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xA527C0", Offset = "0xA527C0", VA = "0xA527C0")]
	public void SetDirty()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xA5550C", Offset = "0xA5550C", VA = "0xA5550C")]
	public void ForceLit(float time)
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xA555C0", Offset = "0xA555C0", VA = "0xA555C0")]
	public void EMPulse(float time, bool playPulseSound = true, bool playFlickSound = false)
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xA556D4", Offset = "0xA556D4", VA = "0xA556D4")]
	public bool IsUnderEMPulse()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xA52AE8", Offset = "0xA52AE8", VA = "0xA52AE8")]
	public bool IsLit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xA51E20", Offset = "0xA51E20", VA = "0xA51E20")]
	public static PowerLevel GetRoomPower(Room room)
	{
		return default(PowerLevel);
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xA556E4", Offset = "0xA556E4", VA = "0xA556E4")]
	public static PowerLevel GetRoomPower(Vector3 pos)
	{
		return default(PowerLevel);
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xA557C4", Offset = "0xA557C4", VA = "0xA557C4")]
	public static RoomPower GetRoomPowerComponent(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xA558A8", Offset = "0xA558A8", VA = "0xA558A8")]
	public static bool IsInLitRoom(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xA55988", Offset = "0xA55988", VA = "0xA55988")]
	public static bool IsInLitRoom(Room room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xA55A58", Offset = "0xA55A58", VA = "0xA55A58", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xA55AD4", Offset = "0xA55AD4", VA = "0xA55AD4", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xA55B64", Offset = "0xA55B64", VA = "0xA55B64", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xA55B68", Offset = "0xA55B68", VA = "0xA55B68")]
	public RoomPower()
	{
	}
}
[Token(Token = "0x2000167")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x759EA8", Offset = "0x759EA8")]
public class RoomPowerData : ScriptableObject
{
	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioCue flickerHum;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioCue flickerThud;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioCue powerIn;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioCue powerOut;

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xA55B7C", Offset = "0xA55B7C", VA = "0xA55B7C")]
	public RoomPowerData()
	{
	}
}
[Token(Token = "0x2000168")]
public class RoomPrefabList : ScriptableObject
{
	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Room> prefabs;

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xA55B84", Offset = "0xA55B84", VA = "0xA55B84")]
	public RoomPrefabList()
	{
	}
}
[Token(Token = "0x2000169")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x759EEC", Offset = "0x759EEC")]
public class ShipDeck : ScriptableObject
{
	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Room.RoomType[] rooms;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool allowBigRooms;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int minKeys;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int maxKeys;

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x911AB0", Offset = "0x911AB0", VA = "0x911AB0")]
	public ShipDeck()
	{
	}
}
[Token(Token = "0x200016A")]
public class SkyboxWindow : RoomBakeMaterialSwitcher
{
	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<Material> skyboxWindowMaterials;

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x918B6C", Offset = "0x918B6C", VA = "0x918B6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x918CD8", Offset = "0x918CD8", VA = "0x918CD8")]
	public void AddMaterial(Material mat)
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x918E20", Offset = "0x918E20", VA = "0x918E20")]
	public static List<Material> GetMaterials()
	{
		return null;
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x918E70", Offset = "0x918E70", VA = "0x918E70")]
	public static void ClearMaterials()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x918EC4", Offset = "0x918EC4", VA = "0x918EC4")]
	public SkyboxWindow()
	{
	}
}
[Token(Token = "0x200016B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x759F30", Offset = "0x759F30")]
public class TintedLight : MonoBehaviour
{
	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool getColorFromLight;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HideIfAttribute", RVA = "0x75E298", Offset = "0x75E298")]
	public Color lightTint;

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x9C9128", Offset = "0x9C9128", VA = "0x9C9128")]
	public TintedLight()
	{
	}
}
[Token(Token = "0x200016C")]
public class VisibilityProbe : MonoBehaviour
{
	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsVisible;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool Discovered;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool InFOV;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera[] Cameras;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float farDist;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask RayMask;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float lastTimeChange;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool flicking;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Bounds bounds;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sector occlusionSector;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int probeIndex;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int probeCount;

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xAB5484", Offset = "0xAB5484", VA = "0xAB5484")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xAB55E8", Offset = "0xAB55E8", VA = "0xAB55E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xAB568C", Offset = "0xAB568C", VA = "0xAB568C")]
	public void SetBoundsHeight(float centerY, float sizeY)
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xAB5730", Offset = "0xAB5730", VA = "0xAB5730")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xAB579C", Offset = "0xAB579C", VA = "0xAB579C")]
	public void CheckVisibility(Plane[][] frustumPlanes, Vector3 camPos)
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xAB5A98", Offset = "0xAB5A98", VA = "0xAB5A98")]
	public bool CheckLoS(Vector3 cameraPos, int numRays = 1)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xAB5D0C", Offset = "0xAB5D0C", VA = "0xAB5D0C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xAB5DA0", Offset = "0xAB5DA0", VA = "0xAB5DA0")]
	public VisibilityProbe()
	{
	}
}
[Token(Token = "0x200016D")]
public class VisibilityProbeManager : Singleton<VisibilityProbeManager>
{
	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<VisibilityProbe> listProbes;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<Point, VisibilityProbe> dictProbes;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int numProbes;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool getFrustumFromPlugin;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRCameraRig cameraRig;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera[] cameras;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Plane[][] frustumPlanes;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 probeSize;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector2 probeGridOffset;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int curUpdateGroup;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int updateGroups;

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xAB5DB4", Offset = "0xAB5DB4", VA = "0xAB5DB4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xAB5E38", Offset = "0xAB5E38", VA = "0xAB5E38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xAB6154", Offset = "0xAB6154", VA = "0xAB6154")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xAB68D8", Offset = "0xAB68D8", VA = "0xAB68D8")]
	public void AddProbe(VisibilityProbe probe, Sector occlusionSector)
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xAB6B6C", Offset = "0xAB6B6C", VA = "0xAB6B6C")]
	public VisibilityProbe GetProbe(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xAB6E74", Offset = "0xAB6E74", VA = "0xAB6E74")]
	public bool IsVisible(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xAB6F3C", Offset = "0xAB6F3C", VA = "0xAB6F3C")]
	public bool IsInFOV(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xAB634C", Offset = "0xAB634C", VA = "0xAB634C")]
	private void CalculateEyeFrustum(bool leftEye, Plane[] planes)
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xAB7004", Offset = "0xAB7004", VA = "0xAB7004")]
	public VisibilityProbeManager()
	{
	}
}
[Token(Token = "0x200016E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x759F94", Offset = "0x759F94")]
public class AudioTape : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x20003C9")]
	private class SerializedData
	{
		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xAC7B80", Offset = "0xAC7B80", VA = "0xAC7B80")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] tapeWheels;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float wheelRotSpeed;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rewindLength;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material usedMaterial;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform captionCanvas;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI captionText;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextLogs textLogs;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioTapeData audioTapeData;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string audioLogId;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioClip tapeClip;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool playing;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float timeTape;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float rewindTime;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 defaultCanvasScale;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float textHeight;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float textScrollSpeed;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 textStartPos;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Triggable triggable;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<string> exclusionLogs;

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xAC68D8", Offset = "0xAC68D8", VA = "0xAC68D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xAC6988", Offset = "0xAC6988", VA = "0xAC6988")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xAC6D20", Offset = "0xAC6D20", VA = "0xAC6D20")]
	private void ClearExclusionList()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xAC6D9C", Offset = "0xAC6D9C", VA = "0xAC6D9C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xAC6E6C", Offset = "0xAC6E6C", VA = "0xAC6E6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xAC6F3C", Offset = "0xAC6F3C", VA = "0xAC6F3C")]
	private void OnTriggered(Hand hand)
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xAC7538", Offset = "0xAC7538", VA = "0xAC7538")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xAC7A10", Offset = "0xAC7A10", VA = "0xAC7A10", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xAC7A18", Offset = "0xAC7A18", VA = "0xAC7A18", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xAC7A20", Offset = "0xAC7A20", VA = "0xAC7A20", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xAC7A9C", Offset = "0xAC7A9C", VA = "0xAC7A9C")]
	public AudioTape()
	{
	}
}
[Token(Token = "0x200016F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x759FF8", Offset = "0x759FF8")]
public class AudioTapeData : ScriptableObject
{
	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] tapeClips;

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xAC74A4", Offset = "0xAC74A4", VA = "0xAC74A4")]
	public AudioClip GetById(string id)
	{
		return null;
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xAC7B88", Offset = "0xAC7B88", VA = "0xAC7B88")]
	public AudioTapeData()
	{
	}
}
[Token(Token = "0x2000170")]
public class BodyBag : MonoBehaviour
{
	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeIdleMin;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeIdleMax;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float chanceBreath;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeBreathMin;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeBreathMax;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float chanceSpasm;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeSpasmMin;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float timeSpasmMax;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator animator;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int animBreath;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int animSpasm;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int timerTask;

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x92AF90", Offset = "0x92AF90", VA = "0x92AF90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x92B090", Offset = "0x92B090", VA = "0x92B090")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x92B14C", Offset = "0x92B14C", VA = "0x92B14C")]
	private void OnTimer()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x92B3F0", Offset = "0x92B3F0", VA = "0x92B3F0")]
	public BodyBag()
	{
	}
}
[Token(Token = "0x2000171")]
public class ConsoleBridge : FSMComponent, IGameSerializable
{
	[Token(Token = "0x20003CA")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Offline;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State StandBy;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Jumped;

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x935794", Offset = "0x935794", VA = "0x935794")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x20003CB")]
	private class SerializedData
	{
		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool engaged;

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x935628", Offset = "0x935628", VA = "0x935628")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BC18", Offset = "0x75BC18")]
	private sealed class <Warp_co>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConsoleBridge <>4__this;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Material> <skyboxMats>5__2;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startAlarm>5__3;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <oldTime>5__4;

		[Token(Token = "0x1700020A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0x93633C", Offset = "0x93633C", VA = "0x93633C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A8C")]
			[Address(RVA = "0x9363A4", Offset = "0x9363A4", VA = "0x9363A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x934CE8", Offset = "0x934CE8", VA = "0x934CE8")]
		[DebuggerHidden]
		public <Warp_co>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x9359B4", Offset = "0x9359B4", VA = "0x9359B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x9359B8", Offset = "0x9359B8", VA = "0x9359B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x936344", Offset = "0x936344", VA = "0x936344", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BC28", Offset = "0x75BC28")]
	private sealed class <WarpLight_co>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConsoleBridge <>4__this;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <cycles>5__2;

		[Token(Token = "0x1700020C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A90")]
			[Address(RVA = "0x935944", Offset = "0x935944", VA = "0x935944", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A92")]
			[Address(RVA = "0x9359AC", Offset = "0x9359AC", VA = "0x9359AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x934D90", Offset = "0x934D90", VA = "0x934D90")]
		[DebuggerHidden]
		public <WarpLight_co>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x93579C", Offset = "0x93579C", VA = "0x93579C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x9357A0", Offset = "0x9357A0", VA = "0x9357A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x93594C", Offset = "0x93594C", VA = "0x93594C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E2D0", Offset = "0x75E2D0")]
	public GameObject offlineScreen;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject uiRoot;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UIScreenToggle curScreenToggleFX;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject statusMode;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject jumpMode;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject jumpFinishedMode;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject statusBarError;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject statusBarOK;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject navStatusError;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject navStatusOK;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject driveStatusError;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject driveStatusOK;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E308", Offset = "0x75E308")]
	public AudioSource humSound;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E340", Offset = "0x75E340")]
	public AudioSource warpSound;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AnimationCurve warpTransition;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float warpSpeed;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource warpAlarmSound;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioSource warpWarningSound;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioSource warpCountdownSound;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Light warningLight;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public HapticClip bHapticsWarpClip;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E378", Offset = "0x75E378")]
	public DraggableLinear lever;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float activationRange;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private RoomPower rPower;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool isPlayerNearby;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75E3B0", Offset = "0x75E3B0")]
	public bool _testEngage;

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x934370", Offset = "0x934370", VA = "0x934370")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x9343E4", Offset = "0x9343E4", VA = "0x9343E4", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x934588", Offset = "0x934588", VA = "0x934588", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x9346F4", Offset = "0x9346F4", VA = "0x9346F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x9348B4", Offset = "0x9348B4", VA = "0x9348B4")]
	private void Offline_Enter()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x934954", Offset = "0x934954", VA = "0x934954")]
	private void StandBy_Enter()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x934A00", Offset = "0x934A00", VA = "0x934A00")]
	private void RefreshStatus()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x934B24", Offset = "0x934B24", VA = "0x934B24")]
	private void Jumped_Enter()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x934C6C", Offset = "0x934C6C", VA = "0x934C6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x765FC0", Offset = "0x765FC0")]
	private IEnumerator Warp_co()
	{
		return null;
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x934D14", Offset = "0x934D14", VA = "0x934D14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x766024", Offset = "0x766024")]
	private IEnumerator WarpLight_co()
	{
		return null;
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x934DBC", Offset = "0x934DBC", VA = "0x934DBC")]
	private void Always_Update()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x935108", Offset = "0x935108", VA = "0x935108")]
	private void OnPowerLevelChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x935360", Offset = "0x935360", VA = "0x935360")]
	private void OnLeverSnap(DraggableLinear draggable)
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x93549C", Offset = "0x93549C", VA = "0x93549C")]
	public void TestEngage()
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x935538", Offset = "0x935538", VA = "0x935538", Slot = "11")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x935630", Offset = "0x935630", VA = "0x935630", Slot = "12")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x935700", Offset = "0x935700", VA = "0x935700", Slot = "13")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x935704", Offset = "0x935704", VA = "0x935704")]
	public ConsoleBridge()
	{
	}
}
[Token(Token = "0x2000172")]
public class ConsoleJumpDrive : FSMComponent, IGameSerializable
{
	[Token(Token = "0x20003CE")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Offline;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State NoFuel;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Engaged;

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x937BBC", Offset = "0x937BBC", VA = "0x937BBC")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x20003CF")]
	private class SerializedData
	{
		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool engaged;

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x9379DC", Offset = "0x9379DC", VA = "0x9379DC")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E3F4", Offset = "0x75E3F4")]
	public GameObject offlineScreen;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject uiRoot;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject uiNoFuel;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject uiEngaged;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UIScreenToggle curScreenToggleFX;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI statusText;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject statusBarError;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject statusBarOK;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image[] fuelCellOKIcons;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image[] fuelCellErrorIcons;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E42C", Offset = "0x75E42C")]
	public AudioSource humSound;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E464", Offset = "0x75E464")]
	public DraggableLinear lever;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public FuelContainer[] fuelContainers;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string fuelCellItem;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public JumpDrive jumpDrive;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float activationRange;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private RoomPower rPower;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool isPlayerNearby;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool isFuelReady;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	private bool wasActivated;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private StringBuilder stringBuilder;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75E49C", Offset = "0x75E49C")]
	public bool _testEngage;

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x9363AC", Offset = "0x9363AC", VA = "0x9363AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x936420", Offset = "0x936420", VA = "0x936420", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x9366C8", Offset = "0x9366C8", VA = "0x9366C8", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x936938", Offset = "0x936938", VA = "0x936938")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x936AF8", Offset = "0x936AF8", VA = "0x936AF8")]
	private void Offline_Enter()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x936B98", Offset = "0x936B98", VA = "0x936B98")]
	private void NoFuel_Enter()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x936C44", Offset = "0x936C44", VA = "0x936C44")]
	private void RefreshStatus()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x936FA0", Offset = "0x936FA0", VA = "0x936FA0")]
	private void Engaged_Enter()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x937144", Offset = "0x937144", VA = "0x937144")]
	private void Always_Update()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x937490", Offset = "0x937490", VA = "0x937490")]
	private void OnPowerLevelChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x9376C0", Offset = "0x9376C0", VA = "0x9376C0")]
	private void OnFuelContainerChanged()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x937788", Offset = "0x937788", VA = "0x937788")]
	private void OnLeverSnap(DraggableLinear draggable)
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x93784C", Offset = "0x93784C", VA = "0x93784C")]
	private void OnPostDeserialization()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x937850", Offset = "0x937850", VA = "0x937850")]
	public void TestEngage()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x9378EC", Offset = "0x9378EC", VA = "0x9378EC", Slot = "11")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x9379E4", Offset = "0x9379E4", VA = "0x9379E4", Slot = "12")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x937AAC", Offset = "0x937AAC", VA = "0x937AAC", Slot = "13")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x937AB0", Offset = "0x937AB0", VA = "0x937AB0")]
	public ConsoleJumpDrive()
	{
	}
}
[Token(Token = "0x2000173")]
public class ConsoleShuttle : FSMComponent
{
	[Token(Token = "0x20003D0")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State StandBy;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Engaged;

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x938768", Offset = "0x938768", VA = "0x938768")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E4E0", Offset = "0x75E4E0")]
	public GameObject uiRoot;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UIScreenToggle curScreenToggleFX;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject statusMode;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject statusBarError;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject statusBarOK;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject dockDoorError;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject dockDoorOK;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject statusTxtError;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject statusTxtOK;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UIScreenToggle infoConsoleToggleFX;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject infoConsoleDiagramOff;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject infoConsoleDiagramOn;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E518", Offset = "0x75E518")]
	public AudioSource humSound;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E550", Offset = "0x75E550")]
	public DraggableLinear lever;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float activationRange;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool isPlayerNearby;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75E588", Offset = "0x75E588")]
	public bool _testEngage;

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x937BC4", Offset = "0x937BC4", VA = "0x937BC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x937C38", Offset = "0x937C38", VA = "0x937C38", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x937D14", Offset = "0x937D14", VA = "0x937D14", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x937DF0", Offset = "0x937DF0", VA = "0x937DF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x937E8C", Offset = "0x937E8C", VA = "0x937E8C")]
	private void StandBy_Enter()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x937F24", Offset = "0x937F24", VA = "0x937F24")]
	private void RefreshStatus()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x93801C", Offset = "0x93801C", VA = "0x93801C")]
	private void Engaged_Enter()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x9381AC", Offset = "0x9381AC", VA = "0x9381AC")]
	private void Always_Update()
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x938548", Offset = "0x938548", VA = "0x938548")]
	private void OnLeverSnap(DraggableLinear draggable)
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x938610", Offset = "0x938610", VA = "0x938610")]
	public void TestEngage()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x9386E0", Offset = "0x9386E0", VA = "0x9386E0")]
	public ConsoleShuttle()
	{
	}
}
[Token(Token = "0x2000174")]
public class DisableOnPowerOff : MonoBehaviour
{
	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RoomPower rPower;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource[] audios;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MonoBehaviour[] behaviors;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] renderers;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] objects;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isActive;

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x973084", Offset = "0x973084", VA = "0x973084")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x973328", Offset = "0x973328", VA = "0x973328")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x973404", Offset = "0x973404", VA = "0x973404")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x9734E0", Offset = "0x9734E0", VA = "0x9734E0")]
	private void OnPowerLevelChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x9731B4", Offset = "0x9731B4", VA = "0x9731B4")]
	private void SetActive(bool active)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x97351C", Offset = "0x97351C", VA = "0x97351C")]
	public DisableOnPowerOff()
	{
	}
}
[Token(Token = "0x2000175")]
[SelectionBase]
public class Door : FSMComponent, IGameSerializable
{
	[Token(Token = "0x20003D1")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Closed;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Open;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Opening;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Closing;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Locked;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Dragged;

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xA1714C", Offset = "0xA1714C", VA = "0xA1714C")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x20003D2")]
	private class SerializedData
	{
		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool open;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool locked;

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xA17444", Offset = "0xA17444", VA = "0xA17444")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x20003D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BC38", Offset = "0x75BC38")]
	private sealed class <PlayMalfunction_co>d__99 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Door <>4__this;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool open;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <sparksPos>5__2;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <midOpenPosRight>5__3;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <midOpenPosLeft>5__4;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <progress>5__5;

		[Token(Token = "0x1700020E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0xA170DC", Offset = "0xA170DC", VA = "0xA170DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A9D")]
			[Address(RVA = "0xA17144", Offset = "0xA17144", VA = "0xA17144", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xA16550", Offset = "0xA16550", VA = "0xA16550")]
		[DebuggerHidden]
		public <PlayMalfunction_co>d__99(int <>1__state)
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xA1657C", Offset = "0xA1657C", VA = "0xA1657C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xA16580", Offset = "0xA16580", VA = "0xA16580", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xA170E4", Offset = "0xA170E4", VA = "0xA170E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E5CC", Offset = "0x75E5CC")]
	public Transform leftPiece;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform rightPiece;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Triggable leftPanel;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Triggable rightPanel;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Interactable[] dragHandles;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Interactable[] rightDragHandles;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Interactable[] leftDragHandles;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E604", Offset = "0x75E604")]
	private Vector3 closedPosLeft;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 closedPosRight;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 openPosLeft;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 openPosRight;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float openDistance;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float openSpeed;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float closeSpeed;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float openFactor;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E63C", Offset = "0x75E63C")]
	public AudioCue openSoundLeft;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioCue openSoundRight;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioCue closeSoundLeft;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioCue closeSoundRight;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E674", Offset = "0x75E674")]
	public AudioClip dragStartHapticClip;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioClip hapticsClip;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float dragPulseInterval;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float hapticsDragPulsesStrength;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float maxHandInteractionDistance;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioCue busyErrorSound;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public HapticClip bHapticsClipLeft;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public HapticClip bHapticsClipRight;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public HapticClip bHapticsVestClipLeft;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public HapticClip bHapticsVestClipRight;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E6AC", Offset = "0x75E6AC")]
	public float malfunctionChance;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x75E6E4", Offset = "0x75E6E4")]
	public Vector2 malfunctionCheckTimeMinMax;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform sparksFront;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform sparksBack;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject sparksPrefab;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public AudioCue malfunctionSound;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public AudioCue malfunctionCloseSound;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float malfunctionOffset;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E708", Offset = "0x75E708")]
	public bool startOpen;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x155")]
	public bool addToNavMesh;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private NavMeshLinkInstance navLink;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private NavMeshObstacle navObstacle;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Transform doorLockLeftAttach;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Transform doorLockRightAttach;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private DoorLock doorLock;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool doorLockLeft;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool doorLockRight;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float forceOpenBusyTime;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Portal portal;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int malfunctionCheckTask;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private bool usingGrabBtn;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float rateOffset;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float posRate;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float dragStartRate;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Interactable hoverHandle;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Hand draggingHand;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Vector3 handStartInteractionPos;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private float lastDragPulse;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float closeCooldownTime;

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x9743A8", Offset = "0x9743A8", VA = "0x9743A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x974744", Offset = "0x974744", VA = "0x974744")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x974FE8", Offset = "0x974FE8", VA = "0x974FE8")]
	private void OnFinishedMapGeneration()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x9750C0", Offset = "0x9750C0", VA = "0x9750C0", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x9751C8", Offset = "0x9751C8", VA = "0x9751C8", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x9753AC", Offset = "0x9753AC", VA = "0x9753AC")]
	private void Closed_Enter()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x97556C", Offset = "0x97556C", VA = "0x97556C")]
	private void Closed_Exit()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x9755D8", Offset = "0x9755D8", VA = "0x9755D8")]
	private void MalfunctionCheck()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x975894", Offset = "0x975894", VA = "0x975894")]
	private void Open_Enter()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x9759B8", Offset = "0x9759B8", VA = "0x9759B8")]
	private void Opening_Enter()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x9760D0", Offset = "0x9760D0", VA = "0x9760D0")]
	private void Opening_Update()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x9762AC", Offset = "0x9762AC", VA = "0x9762AC")]
	private void Closing_Enter()
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x9765E0", Offset = "0x9765E0", VA = "0x9765E0")]
	private void Closing_Update()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x9764A8", Offset = "0x9764A8", VA = "0x9764A8")]
	private void PlayClosingSound()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x9767B4", Offset = "0x9767B4", VA = "0x9767B4")]
	private void Dragged_Enter()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x9768D8", Offset = "0x9768D8", VA = "0x9768D8")]
	private void Dragged_Update()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x9768E4", Offset = "0x9768E4", VA = "0x9768E4")]
	private void Dragged_Exit()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x976948", Offset = "0x976948", VA = "0x976948")]
	private void OnHoverUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x977978", Offset = "0x977978", VA = "0x977978")]
	private void OnHoverEnd(Hand hand)
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x977384", Offset = "0x977384", VA = "0x977384")]
	private void EndDragging(Hand hand)
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x977154", Offset = "0x977154", VA = "0x977154")]
	private float GetLinearRate(Transform hand)
	{
		return default(float);
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x9777BC", Offset = "0x9777BC", VA = "0x9777BC")]
	private float UpdateLinearMapping(Transform hand, out bool snap)
	{
		return default(float);
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x977898", Offset = "0x977898", VA = "0x977898")]
	private void PlayDragPulses(float newRate, Hand hand)
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x96E6A4", Offset = "0x96E6A4", VA = "0x96E6A4")]
	public bool IsOpen(bool validIfOpening = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x96E7E0", Offset = "0x96E7E0", VA = "0x96E7E0")]
	public void Open()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x974E48", Offset = "0x974E48", VA = "0x974E48")]
	private void SetOpen()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x977AB8", Offset = "0x977AB8", VA = "0x977AB8")]
	private void SetClose()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x96E984", Offset = "0x96E984", VA = "0x96E984")]
	public void Close(bool playSound = false, bool checkCooldown = false)
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x96CCDC", Offset = "0x96CCDC", VA = "0x96CCDC")]
	public bool IsLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x963E9C", Offset = "0x963E9C", VA = "0x963E9C")]
	public void SetBusyOpen()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x977B88", Offset = "0x977B88", VA = "0x977B88")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x766088", Offset = "0x766088")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x977BCC", Offset = "0x977BCC", VA = "0x977BCC")]
	private void OnTriggered(Hand hand)
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x974BD0", Offset = "0x974BD0", VA = "0x974BD0")]
	private void SetNavLink()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x975F94", Offset = "0x975F94", VA = "0x975F94")]
	public Vector3 GetDoorCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x977BD0", Offset = "0x977BD0", VA = "0x977BD0")]
	public void AddDoorLock(DoorLock dlock, bool rightSide)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x977E78", Offset = "0x977E78", VA = "0x977E78")]
	private void OnDoorLockUnlock()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x978014", Offset = "0x978014", VA = "0x978014")]
	public DoorLock GetDoorLock()
	{
		return null;
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x97801C", Offset = "0x97801C", VA = "0x97801C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x7660C0", Offset = "0x7660C0")]
	private void PlayMalfunctionOpen()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x97804C", Offset = "0x97804C", VA = "0x97804C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x7660F8", Offset = "0x7660F8")]
	private void PlayMalfunction()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x975804", Offset = "0x975804", VA = "0x975804")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x766130", Offset = "0x766130")]
	private IEnumerator PlayMalfunction_co(bool open)
	{
		return null;
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x97807C", Offset = "0x97807C", VA = "0x97807C")]
	private Vector3 PlaySparks()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x97826C", Offset = "0x97826C", VA = "0x97826C", Slot = "11")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x9784F8", Offset = "0x9784F8", VA = "0x9784F8", Slot = "12")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x978834", Offset = "0x978834", VA = "0x978834", Slot = "13")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x9788B0", Offset = "0x9788B0", VA = "0x9788B0")]
	public Door()
	{
	}
}
[Token(Token = "0x2000176")]
public class DoorLock : FSMComponent, IGameSerializable
{
	[Token(Token = "0x20003D4")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Locked;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State UnfoldingHandle;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Unfolded;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Unlocked;

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xA189C8", Offset = "0xA189C8", VA = "0xA189C8")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x20003D5")]
	private class SerializedData
	{
		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string stateName;

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xA18774", Offset = "0xA18774", VA = "0xA18774")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E740", Offset = "0x75E740")]
	public ItemReceptor keyReceiver;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DraggableLinear handle;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform leftPart;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform wallConnectors;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E778", Offset = "0x75E778")]
	public Renderer[] renderers;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material redMaterial;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material greenMaterial;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E7B0", Offset = "0x75E7B0")]
	public float unlockSpeed;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float unlockDistance;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float handleUnfoldProgress;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float unlockProgress;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 unlockStartPos;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 unlockEndPos;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 unlockLeftBarStartPos;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 unlockLeftBarEndPos;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E7E8", Offset = "0x75E7E8")]
	public AudioCue handleSound;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioCue unlockBarsSound;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E820", Offset = "0x75E820")]
	public Color minimapColor;

	[Token(Token = "0x14000012")]
	public event Action onUnlock
	{
		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xA1744C", Offset = "0xA1744C", VA = "0xA1744C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766194", Offset = "0x766194")]
		add
		{
		}
		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xA174F0", Offset = "0xA174F0", VA = "0xA174F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7661A4", Offset = "0x7661A4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xA17594", Offset = "0xA17594", VA = "0xA17594")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xA176A4", Offset = "0xA176A4", VA = "0xA176A4", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xA177DC", Offset = "0xA177DC", VA = "0xA177DC", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xA1794C", Offset = "0xA1794C", VA = "0xA1794C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xA17A84", Offset = "0xA17A84", VA = "0xA17A84")]
	private void Locked_Enter()
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xA17C3C", Offset = "0xA17C3C", VA = "0xA17C3C")]
	private void UnfoldingHandle_Enter()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xA17C94", Offset = "0xA17C94", VA = "0xA17C94")]
	private void UnfoldingHandle_Update()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xA17E5C", Offset = "0xA17E5C", VA = "0xA17E5C")]
	private void Unfolded_Enter()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xA17EC8", Offset = "0xA17EC8", VA = "0xA17EC8")]
	private void Unlocked_Enter()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xA18188", Offset = "0xA18188", VA = "0xA18188")]
	private void Unlocked_Update()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xA184B4", Offset = "0xA184B4", VA = "0xA184B4")]
	private void OnKeyInserted(Item key)
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xA1854C", Offset = "0xA1854C", VA = "0xA1854C")]
	private void OnHandleSnap(DraggableLinear linear)
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xA1857C", Offset = "0xA1857C", VA = "0xA1857C")]
	public void Unlock(bool skipAnimation = false)
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xA18650", Offset = "0xA18650", VA = "0xA18650")]
	public bool IsUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xA17B48", Offset = "0xA17B48", VA = "0xA17B48")]
	private void SetLights()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xA186F0", Offset = "0xA186F0", VA = "0xA186F0", Slot = "11")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xA1877C", Offset = "0xA1877C", VA = "0xA1877C", Slot = "12")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xA1891C", Offset = "0xA1891C", VA = "0xA1891C", Slot = "13")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xA18920", Offset = "0xA18920", VA = "0xA18920")]
	public DoorLock()
	{
	}
}
[Token(Token = "0x2000177")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A04C", Offset = "0x75A04C")]
public class DraggableLinearStartPosition : MonoBehaviour
{
	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float openChance;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x75E868", Offset = "0x75E868")]
	public Vector2 openRate;

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xA18BE4", Offset = "0xA18BE4", VA = "0xA18BE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xA18CB4", Offset = "0xA18CB4", VA = "0xA18CB4")]
	public DraggableLinearStartPosition()
	{
	}
}
[Token(Token = "0x2000178")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A0B0", Offset = "0x75A0B0")]
public class ExitDoor : MonoBehaviour
{
	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xA1CCEC", Offset = "0xA1CCEC", VA = "0xA1CCEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xA1CDD0", Offset = "0xA1CDD0", VA = "0xA1CDD0")]
	private void OnTriggered(Hand hand)
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xA1CDD4", Offset = "0xA1CDD4", VA = "0xA1CDD4")]
	public ExitDoor()
	{
	}
}
[Token(Token = "0x2000179")]
public class Fabricator : FSMComponent, IGameSerializable
{
	[Token(Token = "0x20003D6")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Offline;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Selection;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State WaitingMaterials;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State RecyclingMaterials;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Printing;

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xA239B0", Offset = "0xA239B0", VA = "0xA239B0")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x20003D7")]
	private class SerializedData
	{
		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CraftRecipes.IngredientList ingredients;

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xA2381C", Offset = "0xA2381C", VA = "0xA2381C")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E890", Offset = "0x75E890")]
	public Transform printerRail;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform printerHead;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E8C8", Offset = "0x75E8C8")]
	public GameObject offlineScreen;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject uiRoot;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UICraftSelector selectionUI;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UICraftBlueprint blueprintUI;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UIModalText modalText;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private UIScreenToggle curScreenToggleFX;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E900", Offset = "0x75E900")]
	public CraftRecipes recipes;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E938", Offset = "0x75E938")]
	public AudioSource humSound;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource chimeSound;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E970", Offset = "0x75E970")]
	public Transform tutoTrayRef;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform tutoPanelRef;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E9A8", Offset = "0x75E9A8")]
	public float activationRange;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool isPlayerNearby;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private RoomPower rPower;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private FabricatorPrinterHead printerHeadFX;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private FabricatorMaterializer materializer;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private CraftRecipes.Blueprint blueprint;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private CraftRecipes.IngredientList ownedIngredients;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OcclusionTracker occlusionTracker;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int numUnlockedBPs;

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xA21250", Offset = "0xA21250", VA = "0xA21250")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xA2132C", Offset = "0xA2132C", VA = "0xA2132C", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xA21704", Offset = "0xA21704", VA = "0xA21704", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xA21AA4", Offset = "0xA21AA4", VA = "0xA21AA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xA21CE0", Offset = "0xA21CE0", VA = "0xA21CE0")]
	private void Offline_Enter()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xA21FD0", Offset = "0xA21FD0", VA = "0xA21FD0")]
	private void Selection_Enter()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xA221C0", Offset = "0xA221C0", VA = "0xA221C0")]
	private void Selection_OnTimer()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xA22268", Offset = "0xA22268", VA = "0xA22268")]
	private void Selection_Exit()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xA22338", Offset = "0xA22338", VA = "0xA22338")]
	private void OnBlueprintSelection(CraftRecipes.Blueprint bp)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xA22400", Offset = "0xA22400", VA = "0xA22400")]
	private void WaitingMaterials_Enter()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xA224FC", Offset = "0xA224FC", VA = "0xA224FC")]
	private void OnStartRecycling(Item sourceItem)
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xA22700", Offset = "0xA22700", VA = "0xA22700")]
	private void OnCraftCancel()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xA227A8", Offset = "0xA227A8", VA = "0xA227A8")]
	private void OnCraftFabricate()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xA22850", Offset = "0xA22850", VA = "0xA22850")]
	private void RecyclingMaterials_Enter()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xA22A58", Offset = "0xA22A58", VA = "0xA22A58")]
	private void RecyclingMaterials_Update()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xA22A94", Offset = "0xA22A94", VA = "0xA22A94")]
	private void OnRecycledObject(Item sourceItem)
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xA22C48", Offset = "0xA22C48", VA = "0xA22C48")]
	private void RecyclingMaterials_Exit()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xA22C84", Offset = "0xA22C84", VA = "0xA22C84")]
	private void Printing_Enter()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xA23174", Offset = "0xA23174", VA = "0xA23174")]
	private void Printing_Update()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xA231B0", Offset = "0xA231B0", VA = "0xA231B0")]
	private void OnFinishSpawning(GameObject obj)
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xA23248", Offset = "0xA23248", VA = "0xA23248")]
	private void Printing_Exit()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xA23284", Offset = "0xA23284", VA = "0xA23284")]
	private void Always_Update()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xA2356C", Offset = "0xA2356C", VA = "0xA2356C")]
	private void OnPowerLevelChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xA236E8", Offset = "0xA236E8", VA = "0xA236E8")]
	private void OnVisibility(bool visible)
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xA237A0", Offset = "0xA237A0", VA = "0xA237A0", Slot = "11")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xA23824", Offset = "0xA23824", VA = "0xA23824", Slot = "12")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xA238AC", Offset = "0xA238AC", VA = "0xA238AC", Slot = "13")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xA238B0", Offset = "0xA238B0", VA = "0xA238B0")]
	public Fabricator()
	{
	}
}
[Token(Token = "0x200017A")]
public class FabricatorMaterializer : MonoBehaviour
{
	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask acquisitionLayer;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem acquisitionModeFX;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material fabricateFXMaterial;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float centerFloatSpeed;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private BoxCollider acquisitionArea;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OcclusionTracker occlusionTracker;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _acquisitionMode;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Rigidbody> processingObjs;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody spawningObj;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isSpawning;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<Item> onStartProcessing;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action<Item> onProcessedObject;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Action<GameObject> onSpawnedObject;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public Vector3 cutEffectPos;

	[Token(Token = "0x170000BD")]
	public bool AcquisitionMode
	{
		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xA239B4", Offset = "0xA239B4", VA = "0xA239B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xA21F08", Offset = "0xA21F08", VA = "0xA21F08")]
		set
		{
		}
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xA239BC", Offset = "0xA239BC", VA = "0xA239BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xA23A74", Offset = "0xA23A74", VA = "0xA23A74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xA23B90", Offset = "0xA23B90", VA = "0xA23B90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xA23CAC", Offset = "0xA23CAC", VA = "0xA23CAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xA23D34", Offset = "0xA23D34", VA = "0xA23D34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xA242BC", Offset = "0xA242BC", VA = "0xA242BC")]
	private void OnTriggerEnter(Collider colObj)
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xA245C0", Offset = "0xA245C0", VA = "0xA245C0")]
	private void OnTriggerStay(Collider colObj)
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xA242C0", Offset = "0xA242C0", VA = "0xA242C0")]
	private void ProcessObject(Collider colObj)
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xA245C4", Offset = "0xA245C4", VA = "0xA245C4")]
	private void OnObjectProcessed(GameObject obj)
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xA22EC8", Offset = "0xA22EC8", VA = "0xA22EC8")]
	public void SpawnObject(Rigidbody rb)
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xA246EC", Offset = "0xA246EC", VA = "0xA246EC")]
	private void OnFinishedFabrication(GameObject obj)
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xA22BB0", Offset = "0xA22BB0", VA = "0xA22BB0")]
	public bool IsProcessing()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xA225B0", Offset = "0xA225B0", VA = "0xA225B0")]
	public Vector3 GetCutPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xA248E0", Offset = "0xA248E0", VA = "0xA248E0")]
	private void OnVisibility(bool visible)
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xA24940", Offset = "0xA24940", VA = "0xA24940")]
	public FabricatorMaterializer()
	{
	}
}
[Token(Token = "0x200017B")]
public class FabricatorPrinterHead : FSMComponent
{
	[Token(Token = "0x20003D8")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Offline;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Ready;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Printing;

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xA25B68", Offset = "0xA25B68", VA = "0xA25B68")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x20003D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BC48", Offset = "0x75BC48")]
	private sealed class <WarmParticles_co>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FabricatorPrinterHead <>4__this;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000210")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AA6")]
			[Address(RVA = "0xA25C48", Offset = "0xA25C48", VA = "0xA25C48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000211")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AA8")]
			[Address(RVA = "0xA25CB0", Offset = "0xA25CB0", VA = "0xA25CB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xA24BD4", Offset = "0xA24BD4", VA = "0xA24BD4")]
		[DebuggerHidden]
		public <WarmParticles_co>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xA25B6C", Offset = "0xA25B6C", VA = "0xA25B6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xA25B70", Offset = "0xA25B70", VA = "0xA25B70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xA25C50", Offset = "0xA25C50", VA = "0xA25C50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75E9F0", Offset = "0x75E9F0")]
	public Transform printRail;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform printHead;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform printHeadPoint;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EA28", Offset = "0x75EA28")]
	public Vector2 railRangeY;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector2 headRange;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector2 headAngleRange;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EA60", Offset = "0x75EA60")]
	public float railOfflinePos;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float railReadyPos;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float headOfflinePos;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float headReadyPos;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float headRestingAngle;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EA98", Offset = "0x75EA98")]
	public float railSlowSpeed;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float railFastSpeed;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float headSlowSpeed;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float headFastSpeed;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float headSlowRotSpeed;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float headFastRotSpeed;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EAD0", Offset = "0x75EAD0")]
	public float railPrintFreq;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float headPrintFreq;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float beamFXFreq;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EB08", Offset = "0x75EB08")]
	public AudioSource printingAudio;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioCue moveHeadAudio;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EB40", Offset = "0x75EB40")]
	public LineRenderer beamFX;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ParticleSystem headParticles;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ParticleSystem craftParticles;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector3 centerPos;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Rigidbody centerObj;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Light printHeadLight;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 railPos;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 headPos;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Quaternion headRot;

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xA249CC", Offset = "0xA249CC", VA = "0xA249CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xA24A3C", Offset = "0xA24A3C", VA = "0xA24A3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xA24B58", Offset = "0xA24B58", VA = "0xA24B58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7661B4", Offset = "0x7661B4")]
	private IEnumerator WarmParticles_co()
	{
		return null;
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xA24C00", Offset = "0xA24C00", VA = "0xA24C00")]
	private void Offline_Enter()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xA24D74", Offset = "0xA24D74", VA = "0xA24D74")]
	private void Offline_Update()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xA24F30", Offset = "0xA24F30", VA = "0xA24F30")]
	private void Ready_Enter()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xA250A4", Offset = "0xA250A4", VA = "0xA250A4")]
	private void Ready_Update()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xA25260", Offset = "0xA25260", VA = "0xA25260")]
	private void Printing_Enter()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xA253BC", Offset = "0xA253BC", VA = "0xA253BC")]
	private void Printing_Update()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xA259EC", Offset = "0xA259EC", VA = "0xA259EC")]
	private void Printing_Exit()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xA21DA4", Offset = "0xA21DA4", VA = "0xA21DA4")]
	public void SetOnline(bool online)
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xA228F4", Offset = "0xA228F4", VA = "0xA228F4")]
	public void SetPrinting(bool printing)
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xA25AC4", Offset = "0xA25AC4", VA = "0xA25AC4")]
	public FabricatorPrinterHead()
	{
	}
}
[Token(Token = "0x200017C")]
public class FuelContainer : MonoBehaviour
{
	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EB78", Offset = "0x75EB78")]
	public ItemReceptor receptor;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DraggableLinear handle;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EBB0", Offset = "0x75EBB0")]
	public Item fuelCellPrefab;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Item fuelCellSpentPrefab;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EBE8", Offset = "0x75EBE8")]
	public float spawnChance;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float spawnSpentChance;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float openChanceEmpty;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float openChanceFull;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool canStartOpen;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EC20", Offset = "0x75EC20")]
	public bool consumeFuel;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action onFuelInserted;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int randStateSeed;

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x9A5CD0", Offset = "0x9A5CD0", VA = "0x9A5CD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x9A5D00", Offset = "0x9A5D00", VA = "0x9A5D00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x9A5DD0", Offset = "0x9A5DD0", VA = "0x9A5DD0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x9A5EA0", Offset = "0x9A5EA0", VA = "0x9A5EA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x9A6028", Offset = "0x9A6028", VA = "0x9A6028")]
	private void OnHandleSnap(DraggableLinear linear)
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x9A60FC", Offset = "0x9A60FC", VA = "0x9A60FC")]
	public Item GetInsertedItem()
	{
		return null;
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x9A61A8", Offset = "0x9A61A8", VA = "0x9A61A8")]
	public FuelContainer()
	{
	}
}
[Token(Token = "0x200017D")]
public class ElectricalLeak : FSMComponent, IHazard
{
	[Token(Token = "0x20003DA")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State FarAway;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Cooldown;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Active;

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xA1A61C", Offset = "0xA1A61C", VA = "0xA1A61C")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float activationRadius;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float cooldownMinTime;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float cooldownMaxTime;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioCue soundClipSource;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioCue soundClipTarget;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource soundSource;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource soundTarget;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Lightning lightningFX;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector3> targetPositions;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private DamageCapsule damage;

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xA196E8", Offset = "0xA196E8", VA = "0xA196E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xA19758", Offset = "0xA19758", VA = "0xA19758")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xA19B48", Offset = "0xA19B48", VA = "0xA19B48")]
	private void FarAway_Update()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xA19CA4", Offset = "0xA19CA4", VA = "0xA19CA4")]
	private void Cooldown_Enter()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xA19D24", Offset = "0xA19D24", VA = "0xA19D24")]
	private void Cooldown_OnTimer()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xA19DFC", Offset = "0xA19DFC", VA = "0xA19DFC")]
	private void Active_Enter()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xA1A1F8", Offset = "0xA1A1F8", VA = "0xA1A1F8")]
	private void Active_Exit()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xA1A358", Offset = "0xA1A358", VA = "0xA1A358")]
	private void Active_OnTimer()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xA1A070", Offset = "0xA1A070", VA = "0xA1A070")]
	private Vector3 PositionBeam()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xA1A4F4", Offset = "0xA1A4F4", VA = "0xA1A4F4", Slot = "11")]
	public void SetSpawnMarker(RoomMarker marker)
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xA1A4F8", Offset = "0xA1A4F8", VA = "0xA1A4F8", Slot = "12")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xA1A584", Offset = "0xA1A584", VA = "0xA1A584")]
	public ElectricalLeak()
	{
	}
}
[Token(Token = "0x200017E")]
public class HazardLeak : FSMComponent, IHazard
{
	[Token(Token = "0x20003DB")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State FarAway;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Cooldown;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Active;

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x9D03A4", Offset = "0x9D03A4", VA = "0x9D03A4")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float activationRadius;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float activeMinTime;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float activeMaxTime;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float cooldownMinTime;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float cooldownMaxTime;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem fx;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioCue soundClip;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource sound;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private DamageCapsule damage;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Light light;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float lightIntensity;

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x9CF810", Offset = "0x9CF810", VA = "0x9CF810")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x9CF918", Offset = "0x9CF918", VA = "0x9CF918")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x9CFA48", Offset = "0x9CFA48", VA = "0x9CFA48")]
	private void FarAway_Update()
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x9CFBA8", Offset = "0x9CFBA8", VA = "0x9CFBA8")]
	private void Cooldown_Enter()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x9CFC00", Offset = "0x9CFC00", VA = "0x9CFC00")]
	private void Cooldown_OnTimer()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x9CFC9C", Offset = "0x9CFC9C", VA = "0x9CFC9C")]
	private void Active_Enter()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x9CFE24", Offset = "0x9CFE24", VA = "0x9CFE24")]
	private void Active_Exit()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x9CFF78", Offset = "0x9CFF78", VA = "0x9CFF78")]
	private void Active_Update()
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x9D00B4", Offset = "0x9D00B4", VA = "0x9D00B4")]
	private void Active_OnTimer()
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x9D0254", Offset = "0x9D0254", VA = "0x9D0254", Slot = "11")]
	public void SetSpawnMarker(RoomMarker marker)
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x9D0258", Offset = "0x9D0258", VA = "0x9D0258", Slot = "12")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x9D0318", Offset = "0x9D0318", VA = "0x9D0318")]
	public HazardLeak()
	{
	}
}
[Token(Token = "0x200017F")]
public class HazardManager : Singleton<HazardManager>
{
	[Serializable]
	[Token(Token = "0x20003DC")]
	public class HazardSpawnInfo
	{
		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SwitchRefGameObject hazardPrefab;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RoomMarker.Tag roomMarkerTag;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float weight;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxInLevel;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float weightBonusWhenPlaced;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weightBonusDark;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float weightBonusInfestated;

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x9D0F3C", Offset = "0x9D0F3C", VA = "0x9D0F3C")]
		public HazardSpawnInfo()
		{
		}
	}

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HazardSpawnInfo[] hazardSpawnPrefabs;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int numHazard;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<Room, List<IHazard>> roomHazards;

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x9D03AC", Offset = "0x9D03AC", VA = "0x9D03AC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x9D0430", Offset = "0x9D0430", VA = "0x9D0430")]
	public bool HasHazards(Room r)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x9D04C4", Offset = "0x9D04C4", VA = "0x9D04C4")]
	public bool HasActiveHazards(Room r)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x9D066C", Offset = "0x9D066C", VA = "0x9D066C")]
	public GameObject PlaceHazard(Room room, GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x9D09D8", Offset = "0x9D09D8", VA = "0x9D09D8")]
	public GameObject PlaceHazard(Room room, GameObject prefab, RoomMarker.Tag markerTag)
	{
		return null;
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x9D0678", Offset = "0x9D0678", VA = "0x9D0678")]
	private GameObject PlaceHazard(Room room, GameObject prefab, RoomMarker.Tag markerTag, bool useMarker = true)
	{
		return null;
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x9D09E0", Offset = "0x9D09E0", VA = "0x9D09E0")]
	public int PlaceHazards()
	{
		return default(int);
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x9D0EE4", Offset = "0x9D0EE4", VA = "0x9D0EE4")]
	public HazardManager()
	{
	}
}
[Token(Token = "0x2000180")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A114", Offset = "0x75A114")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A114", Offset = "0x75A114")]
public class HazardVentTendril : FSMComponent, IHazard, IGameSerializable
{
	[Token(Token = "0x20003DD")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Cooldown;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Curious;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State LashOutRecoil;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State LashOutAttack;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State LashOutRecovery;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Death;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Disappear;

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x9D47FC", Offset = "0x9D47FC", VA = "0x9D47FC")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x20003DE")]
	private class SerializedData
	{
		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int health;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool openVent;

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x9D44F8", Offset = "0x9D44F8", VA = "0x9D44F8")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Tendril tendril;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float activationRadius;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer mainBody;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EC58", Offset = "0x75EC58")]
	public float steerMaxForce;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float steerMass;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float tendrilNormalApproachSpeed;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EC90", Offset = "0x75EC90")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x75EC90", Offset = "0x75EC90")]
	public Vector2 curiousTargetChangeTime;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float curiousTargetMoveSpeed;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75ECF0", Offset = "0x75ECF0")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x75ECF0", Offset = "0x75ECF0")]
	public Vector2 lashOutRecoilTime;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float lashOutSpeed;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve lashOutCurve;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int lashOutDamage;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float lashOutDamageRadius;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioCue lashOutSound;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioCue lashOutHitSound;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75ED4C", Offset = "0x75ED4C")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x75ED4C", Offset = "0x75ED4C")]
	public Vector2 deathCooldown;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float respawnChance;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EDB4", Offset = "0x75EDB4")]
	public AudioSource fleshAudio;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioCue painSound;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 tendrilTarget;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 tendrilNormal;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float tendrilLengthFactor;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Renderer tendrilRenderer;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Health health;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private AgentAwareness agentAwareness;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private MeltFX meltFX;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private BurningFX burningFX;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float forcedCooldown;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vent vent;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool hasOpenVent;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 curiousTarget;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 curiousSpeed;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float lashOutOffset;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float attackAnimFactor;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private Vector3 attackTargetPos;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 attackTargetNormal;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Vector3 attackInitTendrilPos;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector3 attackInitTendrilNormal;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private Vector3 attackPrevDamagePos;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool attackDamageApplied;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float deadTimer;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float corpseBurnHealth;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float disappearLastY;

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x9D0F5C", Offset = "0x9D0F5C", VA = "0x9D0F5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x9D103C", Offset = "0x9D103C", VA = "0x9D103C", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x9D1350", Offset = "0x9D1350", VA = "0x9D1350", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x9D163C", Offset = "0x9D163C", VA = "0x9D163C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x9D180C", Offset = "0x9D180C", VA = "0x9D180C")]
	private void Always_Update()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x9D1A74", Offset = "0x9D1A74", VA = "0x9D1A74")]
	private Vector3 ApproachTargetNormal(Vector3 newTargetPos, Vector3 wantedNormal, float normalApproachSpeed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x9D1C20", Offset = "0x9D1C20", VA = "0x9D1C20")]
	private void Cooldown_Enter()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x9D1C4C", Offset = "0x9D1C4C", VA = "0x9D1C4C")]
	private void Cooldown_Update()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x9D1DEC", Offset = "0x9D1DEC", VA = "0x9D1DEC")]
	private void Curious_Enter()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x9D1EE8", Offset = "0x9D1EE8", VA = "0x9D1EE8")]
	private void Curious_Update()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x9D1E9C", Offset = "0x9D1E9C", VA = "0x9D1E9C")]
	private void Curious_OnTimer()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x9D2248", Offset = "0x9D2248", VA = "0x9D2248")]
	private Vector3 GetCuriousTarget()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x9D2684", Offset = "0x9D2684", VA = "0x9D2684")]
	private void LashOutRecoil_Enter()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x9D26BC", Offset = "0x9D26BC", VA = "0x9D26BC")]
	private void LashOutRecoil_Update()
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x9D2AB0", Offset = "0x9D2AB0", VA = "0x9D2AB0")]
	private void LashOutRecoil_OnTimer()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x9D2820", Offset = "0x9D2820", VA = "0x9D2820")]
	private void CalculateRecoilPose(Vector3 targetPos, out Vector3 recoilTarget, out Vector3 recoilNormal, float offset = 0f)
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x9D2C90", Offset = "0x9D2C90", VA = "0x9D2C90")]
	private void LashOutAttack_Enter()
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x9D2DF8", Offset = "0x9D2DF8", VA = "0x9D2DF8")]
	private void LashOutAttack_Update()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x9D3180", Offset = "0x9D3180", VA = "0x9D3180")]
	private void LashOutRecovery_Enter()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x9D31DC", Offset = "0x9D31DC", VA = "0x9D31DC")]
	private void LashOutRecovery_Update()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x9D3320", Offset = "0x9D3320", VA = "0x9D3320")]
	private void LashOutRecovery_OnTimer()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x9D3500", Offset = "0x9D3500", VA = "0x9D3500")]
	private void Death_Enter()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x9D3574", Offset = "0x9D3574", VA = "0x9D3574")]
	private void Death_Update()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x9D3798", Offset = "0x9D3798", VA = "0x9D3798")]
	private void Death_OnTimer()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x9D38CC", Offset = "0x9D38CC", VA = "0x9D38CC")]
	private void Disappear_Enter()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x9D39F4", Offset = "0x9D39F4", VA = "0x9D39F4")]
	private void Disappear_Update()
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x9D3D34", Offset = "0x9D3D34", VA = "0x9D3D34")]
	private void OnReceiveDamage(int damagePoints, Health.DamageType damageType, Health.Faction faction, Vector3 originPoint)
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x9D4044", Offset = "0x9D4044", VA = "0x9D4044")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x9D410C", Offset = "0x9D410C", VA = "0x9D410C")]
	private void OnMeltFXDisappear()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x9D4188", Offset = "0x9D4188", VA = "0x9D4188", Slot = "11")]
	public void SetSpawnMarker(RoomMarker marker)
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x9D42C8", Offset = "0x9D42C8", VA = "0x9D42C8", Slot = "12")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x9D4474", Offset = "0x9D4474", VA = "0x9D4474", Slot = "13")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x9D4500", Offset = "0x9D4500", VA = "0x9D4500", Slot = "14")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x9D4630", Offset = "0x9D4630", VA = "0x9D4630", Slot = "15")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x9D46F8", Offset = "0x9D46F8", VA = "0x9D46F8")]
	public HazardVentTendril()
	{
	}
}
[Token(Token = "0x2000181")]
public interface IHazard
{
	[Token(Token = "0x6000D3A")]
	void SetSpawnMarker(RoomMarker marker);

	[Token(Token = "0x6000D3B")]
	bool IsActive();
}
[Token(Token = "0x2000182")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A1A0", Offset = "0x75A1A0")]
public class HoloBeam : MonoBehaviour
{
	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer trackedObj;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float animSpeed;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VolumetricLightBeam lightBeam;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float targetRange;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float targetAngle;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool autoDisable;

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x9D83D8", Offset = "0x9D83D8", VA = "0x9D83D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x9D8438", Offset = "0x9D8438", VA = "0x9D8438")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x9D84E0", Offset = "0x9D84E0", VA = "0x9D84E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x9D84D4", Offset = "0x9D84D4", VA = "0x9D84D4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x9D88B8", Offset = "0x9D88B8", VA = "0x9D88B8")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x9D84EC", Offset = "0x9D84EC", VA = "0x9D84EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x9D88C4", Offset = "0x9D88C4", VA = "0x9D88C4")]
	public HoloBeam()
	{
	}
}
[Token(Token = "0x2000183")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A204", Offset = "0x75A204")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A204", Offset = "0x75A204")]
public class HoloTable : FSMComponent, IGameSerializable
{
	[Token(Token = "0x20003DF")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Offline;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Standby;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Appearing;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Active;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Coordinates;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Disappearing;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Broken;

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x9DC388", Offset = "0x9DC388", VA = "0x9DC388")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x20003E0")]
	private class SerializedData
	{
		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool coordinatesUnlocked;

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x9DC190", Offset = "0x9DC190", VA = "0x9DC190")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x20003E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BC58", Offset = "0x75BC58")]
	private sealed class <DisableText_co>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeWait;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HoloTable <>4__this;

		[Token(Token = "0x17000212")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AB3")]
			[Address(RVA = "0x9DC46C", Offset = "0x9DC46C", VA = "0x9DC46C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AB5")]
			[Address(RVA = "0x9DC4D4", Offset = "0x9DC4D4", VA = "0x9DC4D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x9DAE84", Offset = "0x9DAE84", VA = "0x9DAE84")]
		[DebuggerHidden]
		public <DisableText_co>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x9DC390", Offset = "0x9DC390", VA = "0x9DC390", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x9DC394", Offset = "0x9DC394", VA = "0x9DC394", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x9DC474", Offset = "0x9DC474", VA = "0x9DC474", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EDEC", Offset = "0x75EDEC")]
	public Material[] materialsOff;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material[] materialsOn;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material[] materialsBroken;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EE24", Offset = "0x75EE24")]
	public Transform[] holoCasters;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform surfaceCenter;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector2 surfaceExtents;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Renderer holoSpherePrefab;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public HoloBeam holoBeamPrefab;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshPro holoText;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject holoPOIPrefab;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color holoBeamPOIColor;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EE5C", Offset = "0x75EE5C")]
	public float appearSpeed;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float disappearSpeed;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EE94", Offset = "0x75EE94")]
	public AudioCue poiChimeSound;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioCue holoStartSound;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioCue holoEndSound;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource humSound;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioCue brokenSound;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EECC", Offset = "0x75EECC")]
	public ParticleSystem brokenFX;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ParticleSystem damageFXPrefab;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Renderer tableRenderer;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<WDG.Tuple<GameObject, Vector3, float, Vector3>> holograms;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<HoloBeam> holoBeams;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<GameObject> holoPOIs;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private RoomPower rPower;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private PlayerRangeDetector playerDetector;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Triggable triggable;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Health health;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool coordinatesUnlocked;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<int> neighborsList;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float appearFactor;

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x9D88D4", Offset = "0x9D88D4", VA = "0x9D88D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x9D89C4", Offset = "0x9D89C4", VA = "0x9D89C4", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x9D8CBC", Offset = "0x9D8CBC", VA = "0x9D8CBC", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x9D8EE0", Offset = "0x9D8EE0", VA = "0x9D8EE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x9D9118", Offset = "0x9D9118", VA = "0x9D9118")]
	private void Offline_Enter()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x9D916C", Offset = "0x9D916C", VA = "0x9D916C")]
	private void Offline_Exit()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x9D9194", Offset = "0x9D9194", VA = "0x9D9194")]
	private void Standby_Enter()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x9D97EC", Offset = "0x9D97EC", VA = "0x9D97EC")]
	private void Appearing_Enter()
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x9D9B84", Offset = "0x9D9B84", VA = "0x9D9B84")]
	private void Appearing_Update()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x9D9FC8", Offset = "0x9D9FC8", VA = "0x9D9FC8")]
	private void Active_Update()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x9DA074", Offset = "0x9DA074", VA = "0x9DA074")]
	private void Coordinates_Enter()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x9DADC8", Offset = "0x9DADC8", VA = "0x9DADC8")]
	private void Coordinates_Exit()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x9DADF8", Offset = "0x9DADF8", VA = "0x9DADF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x766218", Offset = "0x766218")]
	private IEnumerator DisableText_co(float timeWait = 5f)
	{
		return null;
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x9DA580", Offset = "0x9DA580", VA = "0x9DA580")]
	private void CreatePOIs()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x9DAA2C", Offset = "0x9DAA2C", VA = "0x9DAA2C")]
	private void OnPOIFinished()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x9DB370", Offset = "0x9DB370", VA = "0x9DB370")]
	private void Disappearing_Enter()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x9DB3B8", Offset = "0x9DB3B8", VA = "0x9DB3B8")]
	private void Disappearing_Update()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x9DB464", Offset = "0x9DB464", VA = "0x9DB464")]
	private void Disappearing_Exit()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x9DB728", Offset = "0x9DB728", VA = "0x9DB728")]
	private void Broken_Enter()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x9DB834", Offset = "0x9DB834", VA = "0x9DB834")]
	private void OnPowerLevelChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x9DBB98", Offset = "0x9DBB98", VA = "0x9DBB98")]
	private void OnPlayerDetection(bool playerInRange)
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x9DBE38", Offset = "0x9DBE38", VA = "0x9DBE38")]
	private void OnInteracted(Hand hand)
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x9DBF48", Offset = "0x9DBF48", VA = "0x9DBF48")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x9DBFE4", Offset = "0x9DBFE4", VA = "0x9DBFE4")]
	private void OnReceiveDamage(int damagePoints, Health.DamageType damageType, Health.Faction faction, Vector3 originPoint)
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x9D9878", Offset = "0x9D9878", VA = "0x9D9878")]
	private void ActivateHologram()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x9D9C70", Offset = "0x9D9C70", VA = "0x9D9C70")]
	private bool AnimHologram(bool appearing = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x9DB4B8", Offset = "0x9DB4B8", VA = "0x9DB4B8")]
	private void DeactivateHologram()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x9D926C", Offset = "0x9D926C", VA = "0x9D926C")]
	private void SpawnHologram()
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x9DAEB0", Offset = "0x9DAEB0", VA = "0x9DAEB0")]
	private bool CheckHoloPositionValid(Vector3 newPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x9DB0A8", Offset = "0x9DB0A8", VA = "0x9DB0A8")]
	private HoloBeam CreateHoloBeam(GameObject trackedGO)
	{
		return null;
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x9DC11C", Offset = "0x9DC11C", VA = "0x9DC11C", Slot = "11")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x9DC198", Offset = "0x9DC198", VA = "0x9DC198", Slot = "12")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x9DC300", Offset = "0x9DC300", VA = "0x9DC300", Slot = "13")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x9DC304", Offset = "0x9DC304", VA = "0x9DC304")]
	public HoloTable()
	{
	}
}
[Token(Token = "0x2000184")]
public class ItemReceptor : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x20003E2")]
	private class SerializedData
	{
		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item.Properties.SerializedData itemData;

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xBCCE80", Offset = "0xBCCE80", VA = "0xBCCE80")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] validItems;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool destroyItem;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool deleteRigidBody;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool disableItemCollider;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool allowGrabAgain;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Item hoveringItem;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Item _insertedItem;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float insertionProgress;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float insertionSpeed;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioCue insertSoundClip;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GhostOutline ghostOutline;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool serialize;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool unregisterSerialization;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider interactionCollider;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int updateTask;

	[Token(Token = "0x170000BE")]
	public Item InsertedItem
	{
		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xBCBC24", Offset = "0xBCBC24", VA = "0xBCBC24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BF")]
	public float InsertionProgress
	{
		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xBCBC2C", Offset = "0xBCBC2C", VA = "0xBCBC2C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x14000013")]
	public event Action<Item> onItemInserted
	{
		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xBCBC34", Offset = "0xBCBC34", VA = "0xBCBC34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76627C", Offset = "0x76627C")]
		add
		{
		}
		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xBCBCD8", Offset = "0xBCBCD8", VA = "0xBCBCD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76628C", Offset = "0x76628C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event Action<Item> onItemRemoved
	{
		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xBCBD7C", Offset = "0xBCBD7C", VA = "0xBCBD7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76629C", Offset = "0x76629C")]
		add
		{
		}
		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xBCBE20", Offset = "0xBCBE20", VA = "0xBCBE20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7662AC", Offset = "0x7662AC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xBCBEC4", Offset = "0xBCBEC4", VA = "0xBCBEC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xBCBF24", Offset = "0xBCBF24", VA = "0xBCBF24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xBCC0A4", Offset = "0xBCC0A4", VA = "0xBCC0A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xBCC0BC", Offset = "0xBCC0BC", VA = "0xBCC0BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xBCC2A8", Offset = "0xBCC2A8", VA = "0xBCC2A8")]
	private void UpdateTask()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xBCBFD4", Offset = "0xBCBFD4", VA = "0xBCBFD4")]
	private void StartUpdateTask()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xBC4A24", Offset = "0xBC4A24", VA = "0xBC4A24")]
	public bool CanAccept(Item item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xBC4B2C", Offset = "0xBC4B2C", VA = "0xBC4B2C")]
	public void SetHover(Item item)
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xBC4D1C", Offset = "0xBC4D1C", VA = "0xBC4D1C")]
	public bool InsertItem(Item item, bool instantaneous = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xBCC908", Offset = "0xBCC908", VA = "0xBCC908")]
	public bool DestroyItem()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xBCCA30", Offset = "0xBCCA30", VA = "0xBCCA30")]
	public void OnRemovedItem(Hand hand)
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xBCCA38", Offset = "0xBCCA38", VA = "0xBCCA38")]
	public Item ReleaseItem(bool enablePhysics = true)
	{
		return null;
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xBCCD84", Offset = "0xBCCD84", VA = "0xBCCD84", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xBCCE88", Offset = "0xBCCE88", VA = "0xBCCE88", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xBCD030", Offset = "0xBCD030", VA = "0xBCD030", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xBCD034", Offset = "0xBCD034", VA = "0xBCD034")]
	public ItemReceptor()
	{
	}
}
[Token(Token = "0x2000185")]
public class JumpDrive : MonoBehaviour
{
	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] rotators;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] rotatorMaxSpeeds;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotatorAcceleration;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource engagedSound;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material material;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x75EF24", Offset = "0x75EF24")]
	public Color emissionNoPower;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x75EF3C", Offset = "0x75EF3C")]
	public Color emissionPower;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x75EF54", Offset = "0x75EF54")]
	public Color emissionEngaged;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] rotatorSpeeds;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RoomPower rPower;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool hasPower;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool isEngaged;

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xA30A58", Offset = "0xA30A58", VA = "0xA30A58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xA30D38", Offset = "0xA30D38", VA = "0xA30D38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xA30E14", Offset = "0xA30E14", VA = "0xA30E14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xA30EF0", Offset = "0xA30EF0", VA = "0xA30EF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xA311E8", Offset = "0xA311E8", VA = "0xA311E8")]
	private void OnPowerLevelChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xA314A4", Offset = "0xA314A4", VA = "0xA314A4")]
	public void Engage()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xA312E0", Offset = "0xA312E0", VA = "0xA312E0")]
	private void DisEngage()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xA317F0", Offset = "0xA317F0", VA = "0xA317F0")]
	public JumpDrive()
	{
	}
}
[Token(Token = "0x2000186")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A290", Offset = "0x75A290")]
public class LockerDoorStartPosition : MonoBehaviour
{
	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float openChance;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x75EF6C", Offset = "0x75EF6C")]
	public Vector2 openPosition;

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xA3A678", Offset = "0xA3A678", VA = "0xA3A678")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xA3A748", Offset = "0xA3A748", VA = "0xA3A748")]
	public LockerDoorStartPosition()
	{
	}
}
[Token(Token = "0x2000187")]
public class PlayerRangeDetector : MonoBehaviour
{
	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float detectionRange;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _playerInRange;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<bool> onPlayerDetection;

	[Token(Token = "0x170000C0")]
	public bool PlayerInRange
	{
		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x9EE760", Offset = "0x9EE760", VA = "0x9EE760")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x9EE768", Offset = "0x9EE768", VA = "0x9EE768")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x9EE8E4", Offset = "0x9EE8E4", VA = "0x9EE8E4")]
	public PlayerRangeDetector()
	{
	}
}
[Token(Token = "0x2000188")]
public class PowerPanel : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x20003E3")]
	private class SerializedData
	{
		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool hasCell;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isHandleDown;

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x9F31C0", Offset = "0x9F31C0", VA = "0x9F31C0")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ItemReceptor cellReceptor;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DraggableRotation handle;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Item powerCellPrefab;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer panelRenderer;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer handleRenderer;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material emissiveMaterial;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material nonEmissiveMaterial;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material emissiveMaterialRed;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material emissiveMaterialGreen;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RoomPower roomPower;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PowerCell currentCell;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool handleIsLocked;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float handleRotTarget;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int updateTask;

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x9F2404", Offset = "0x9F2404", VA = "0x9F2404")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x9F25DC", Offset = "0x9F25DC", VA = "0x9F25DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x9F2828", Offset = "0x9F2828", VA = "0x9F2828")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x9F2D7C", Offset = "0x9F2D7C", VA = "0x9F2D7C")]
	private void UpdateTask()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x9F2E78", Offset = "0x9F2E78", VA = "0x9F2E78")]
	private void OnCellInserted(Item cell)
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x9F2F6C", Offset = "0x9F2F6C", VA = "0x9F2F6C")]
	private void OnCellRemoved(Item cell)
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x9F2FE0", Offset = "0x9F2FE0", VA = "0x9F2FE0")]
	private void OnHandleSnap(DraggableRotation linear)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x9F2C28", Offset = "0x9F2C28", VA = "0x9F2C28")]
	private void SetHandleLocked(bool locked)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x9F2D28", Offset = "0x9F2D28", VA = "0x9F2D28")]
	private void SetLights(bool green)
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x9F30D4", Offset = "0x9F30D4", VA = "0x9F30D4", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x9F31C8", Offset = "0x9F31C8", VA = "0x9F31C8", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x9F32D4", Offset = "0x9F32D4", VA = "0x9F32D4")]
	private void OnPostSerialize()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x9F33AC", Offset = "0x9F33AC", VA = "0x9F33AC", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x9F33B0", Offset = "0x9F33B0", VA = "0x9F33B0")]
	public PowerPanel()
	{
	}
}
[Token(Token = "0x2000189")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A2F4", Offset = "0x75A2F4")]
public class PoweredAnimation : MonoBehaviour
{
	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool startAtRandomPoint;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool hasEnergy;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animation animation;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource sound;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RoomPower rPower;

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x9F33C0", Offset = "0x9F33C0", VA = "0x9F33C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x9F3498", Offset = "0x9F3498", VA = "0x9F3498")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x9F388C", Offset = "0x9F388C", VA = "0x9F388C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x9F3968", Offset = "0x9F3968", VA = "0x9F3968")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x9F3A44", Offset = "0x9F3A44", VA = "0x9F3A44")]
	private void OnPowerLevelChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x9F3B9C", Offset = "0x9F3B9C", VA = "0x9F3B9C")]
	public PoweredAnimation()
	{
	}
}
[Token(Token = "0x200018A")]
public class RoomMarker : MonoBehaviour
{
	[Token(Token = "0x20003E4")]
	public enum Tag
	{
		[Token(Token = "0x4001B9D")]
		Spawn_Turret,
		[Token(Token = "0x4001B9E")]
		Hazard_Steam,
		[Token(Token = "0x4001B9F")]
		Hazard_Electricity,
		[Token(Token = "0x4001BA0")]
		Hazard_Fire,
		[Token(Token = "0x4001BA1")]
		PowerPanel,
		[Token(Token = "0x4001BA2")]
		Terminal,
		[Token(Token = "0x4001BA3")]
		Spawn_Vent,
		[Token(Token = "0x4001BA4")]
		Hazard_Tendril,
		[Token(Token = "0x4001BA5")]
		Infestation,
		[Token(Token = "0x4001BA6")]
		Spawn_HiddenCrawler
	}

	[Serializable]
	[Token(Token = "0x20003E5")]
	public class RoomMarkerCollection
	{
		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoomMarker[] roomMarkerList;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<RoomMarker> cachedMarkers;

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xA53930", Offset = "0xA53930", VA = "0xA53930")]
		public RoomMarker Get(Tag filter, bool markAsUsed = true)
		{
			return null;
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xA54A70", Offset = "0xA54A70", VA = "0xA54A70")]
		public List<RoomMarker> GetAvailable_cached(Tag filter)
		{
			return null;
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xA54C08", Offset = "0xA54C08", VA = "0xA54C08")]
		public RoomMarkerCollection()
		{
		}
	}

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Tag> tags;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isUsed;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objectReference;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<Pair<Room, int>> cachedWeights;

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xA54828", Offset = "0xA54828", VA = "0xA54828")]
	public static RoomMarker Get(List<Room> rooms, Tag filter, out Room ownerRoom, bool markAsUsed = true)
	{
		return null;
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xA538A0", Offset = "0xA538A0", VA = "0xA538A0")]
	public static RoomMarkerCollection GetMarkersForRoom(Room room)
	{
		return null;
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xA54C10", Offset = "0xA54C10", VA = "0xA54C10")]
	public RoomMarker()
	{
	}
}
[Token(Token = "0x200018B")]
public class ShuttleRendererTrigger : MonoBehaviour
{
	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Renderer> disableRenderers;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Sector sector;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BoxCollider triggerCollider;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isPlayerInside;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool wasPlayerInside;

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x915ED4", Offset = "0x915ED4", VA = "0x915ED4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x915F8C", Offset = "0x915F8C", VA = "0x915F8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x9161F8", Offset = "0x9161F8", VA = "0x9161F8")]
	public ShuttleRendererTrigger()
	{
	}
}
[Token(Token = "0x200018C")]
public class SpawnArea : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003E6")]
	public class WeightedCollection
	{
		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpawnCollection collection;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7623F0", Offset = "0x7623F0")]
		public float weight;

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x91B24C", Offset = "0x91B24C", VA = "0x91B24C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x91B294", Offset = "0x91B294", VA = "0x91B294")]
		public WeightedCollection()
		{
		}
	}

	[Token(Token = "0x20003E7")]
	private struct SpawnedRect
	{
		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Rect rect;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpawnInfo objPrefab;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angle;

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x91B178", Offset = "0x91B178", VA = "0x91B178")]
		public SpawnedRect(Rect rect, SpawnInfo obj, float angle)
		{
		}
	}

	[Token(Token = "0x20003E8")]
	private struct WeightedPrefabList
	{
		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<SpawnInfo> prefabs;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<float> weights;
	}

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EF94", Offset = "0x75EF94")]
	public Bounds bounds;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float padding;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool hasHeightLimit;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxHeight;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75EFCC", Offset = "0x75EFCC")]
	public float spawningChance;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float spawningChanceDecrease;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float spawningChancePenalty;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float dontSpawnChance;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F004", Offset = "0x75F004")]
	public bool isHidden;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform enemySpawnMarker;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public WeightedCollection[] collections;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<SpawnedRect> spawnedAreas;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75F03C", Offset = "0x75F03C")]
	public bool _spawnItems;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<int, WeightedPrefabList> cachePrefabs;

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x919374", Offset = "0x919374", VA = "0x919374")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x9194D8", Offset = "0x9194D8", VA = "0x9194D8")]
	public int Spawn()
	{
		return default(int);
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x91A2E0", Offset = "0x91A2E0", VA = "0x91A2E0")]
	public bool PreSpawnItem(SpawnInfo item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x919510", Offset = "0x919510", VA = "0x919510")]
	private int SpawnItems()
	{
		return default(int);
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x91A374", Offset = "0x91A374", VA = "0x91A374")]
	private bool TryFitObject(SpawnInfo obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x91A968", Offset = "0x91A968", VA = "0x91A968")]
	private static WeightedPrefabList GetCandidatePrefabs(WeightedCollection[] collections)
	{
		return default(WeightedPrefabList);
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x91B1B4", Offset = "0x91B1B4", VA = "0x91B1B4")]
	public SpawnArea()
	{
	}
}
[Serializable]
[Token(Token = "0x200018D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x75A358", Offset = "0x75A358")]
public class SpawnCollection : ScriptableObject
{
	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpawnInfo[] prefabsLow;

	[Token(Token = "0x170000C1")]
	public SpawnInfo[] Prefabs
	{
		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x91B4F4", Offset = "0x91B4F4", VA = "0x91B4F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x91B4FC", Offset = "0x91B4FC", VA = "0x91B4FC")]
	public SpawnCollection()
	{
	}
}
[Token(Token = "0x200018E")]
public class SpawnInfo : MonoBehaviour
{
	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F0AC", Offset = "0x75F0AC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75F0AC", Offset = "0x75F0AC")]
	public float maxAngle;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float padding;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Bounds customBounds;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool encapsulateChildren;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer[] rendererBounds;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F104", Offset = "0x75F104")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75F104", Offset = "0x75F104")]
	public float weight;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int maxInArea;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int maxInRoom;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int maxInMap;

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x91AF14", Offset = "0x91AF14", VA = "0x91AF14")]
	public Bounds GetBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x91B504", Offset = "0x91B504", VA = "0x91B504")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x91B6FC", Offset = "0x91B6FC", VA = "0x91B6FC")]
	public SpawnInfo()
	{
	}
}
[Token(Token = "0x200018F")]
public class SpawnManager : Singleton<SpawnManager>
{
	[Serializable]
	[Token(Token = "0x20003E9")]
	public struct MainItem
	{
		[Token(Token = "0x2000498")]
		public enum PlacementMode
		{
			[Token(Token = "0x4001EAF")]
			Random,
			[Token(Token = "0x4001EB0")]
			Spread,
			[Token(Token = "0x4001EB1")]
			EvenSpread,
			[Token(Token = "0x4001EB2")]
			Random_JumpDriveSection
		}

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SwitchRefSpawnInfo prefab;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int minAmount;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int maxAmount;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float spawnChance;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PlacementMode placementMode;
	}

	[Serializable]
	[Token(Token = "0x20003EA")]
	public struct WeaponSpawnItems
	{
		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LevelOptions.EWeapons weapon;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SwitchRefSpawnInfo weaponSpawn;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SwitchRefSpawnInfo ammoSpawn;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ammoMinAmount;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int ammoMaxAmount;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int ammoPrimaryMinAmount;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int ammoPrimaryMaxAmount;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weight;
	}

	[Token(Token = "0x20003EB")]
	public enum LimitScope
	{
		[Token(Token = "0x4001BBE")]
		SpawnArea,
		[Token(Token = "0x4001BBF")]
		Room,
		[Token(Token = "0x4001BC0")]
		Map
	}

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool spawnItems;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Room, List<Pair<SpawnInfo, bool>>> itemsToSpawn;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool firstUpdate;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<Room, List<SpawnArea>> spawnAreas;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F158", Offset = "0x75F158")]
	public List<MainItem> mainItemPrefabs;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SwitchRefListSpawnInfo startRoomPrefabs;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SwitchRefListSpawnInfo startRoomPrefabsInFirstRun;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public WeaponSpawnItems[] weaponItemPrefabs;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F190", Offset = "0x75F190")]
	public SpawnCollection horrorCollection;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float horrorRoomChance;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float horrorAreaChance;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<SpawnArea> crawlerSpawners;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<SpawnInfo> trapsAndGrenadesPrefabs;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<GameObject, int>[] limitSpawn;

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x91B714", Offset = "0x91B714", VA = "0x91B714")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x91B7C0", Offset = "0x91B7C0", VA = "0x91B7C0")]
	public void AddMainItems()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x91CD14", Offset = "0x91CD14", VA = "0x91CD14")]
	public void AddStartRoomItems()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x91D5B8", Offset = "0x91D5B8", VA = "0x91D5B8")]
	public void SpawnItems()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x91D4A0", Offset = "0x91D4A0", VA = "0x91D4A0")]
	public void AddItem(SpawnInfo item, Room room, bool skipHiddenAreas = false)
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x91D144", Offset = "0x91D144", VA = "0x91D144")]
	private SpawnInfo GetItemWithOptions(SpawnInfo item, LevelOptions lOptions)
	{
		return null;
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x91DD50", Offset = "0x91DD50", VA = "0x91DD50")]
	public List<Pair<SpawnInfo, bool>> GetItemsInRoom(Room room)
	{
		return null;
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x91DDD0", Offset = "0x91DDD0", VA = "0x91DDD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x9193D4", Offset = "0x9193D4", VA = "0x9193D4")]
	public void RegisterArea(SpawnArea area)
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x91E3FC", Offset = "0x91E3FC", VA = "0x91E3FC")]
	public void SetHorrorCollections()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x91E7C8", Offset = "0x91E7C8", VA = "0x91E7C8")]
	public void SetCrawlerSpawns(int numCrawlers)
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x91ECD8", Offset = "0x91ECD8", VA = "0x91ECD8")]
	public List<SpawnArea> GetCrawlerSpawners()
	{
		return null;
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x91ACF4", Offset = "0x91ACF4", VA = "0x91ACF4")]
	public bool CheckLimitSpawn(SpawnInfo info, LimitScope scope)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x91ADF8", Offset = "0x91ADF8", VA = "0x91ADF8")]
	public void AddToLimitSpawn(SpawnInfo info, LimitScope scope)
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x91ECE0", Offset = "0x91ECE0", VA = "0x91ECE0")]
	public SpawnManager()
	{
	}
}
[Token(Token = "0x2000190")]
public class Terminal : FSMComponent, IGameSerializable
{
	[Token(Token = "0x20003EC")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Offline;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Standby;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State InsertingDrive;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Booting;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State TextLog;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State CraftBlueprint;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Broken;

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x9C1F2C", Offset = "0x9C1F2C", VA = "0x9C1F2C")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x20003ED")]
	private class SerializedData
	{
		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isBroken;

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x9C1DD8", Offset = "0x9C1DD8", VA = "0x9C1DD8")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F1C8", Offset = "0x75F1C8")]
	public Transform readerFlap;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 readerFlapOpenPos;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 readerFlapClosedPos;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ItemReceptor datadriveReceptor;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 dataDriveInsertedPos;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform dataDrive;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Health health;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Renderer mainRenderer;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material brokenMaterial;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F200", Offset = "0x75F200")]
	public GameObject offlineScreen;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject standbyScreen;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject brokenScreen;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject uiRoot;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject uiBootup;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UITypewriteText uiBootupTypewriter;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject uiTextLog;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UICraftBlueprint uiCraftBlueprint;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private UIScreenToggle curScreenToggleFX;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F238", Offset = "0x75F238")]
	public AudioSource bootupSound;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioSource humSound;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioSource chimeSound;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F270", Offset = "0x75F270")]
	public TextLogs textLogs;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TextMeshProUGUI textLogsTxt;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F2A8", Offset = "0x75F2A8")]
	public CraftRecipes recipes;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F2E0", Offset = "0x75F2E0")]
	public float activationRange;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public ParticleSystem brokenFX;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public ParticleSystem damageFXPrefab;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioCue brokenSound;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool readerFlapOpen;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float readerFlapFactor;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool isPlayerNearby;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private RoomPower rPower;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float insertFactor;

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x9BFBF0", Offset = "0x9BFBF0", VA = "0x9BFBF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x9BFC64", Offset = "0x9BFC64", VA = "0x9BFC64", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x9BFF28", Offset = "0x9BFF28", VA = "0x9BFF28", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x9C0190", Offset = "0x9C0190", VA = "0x9C0190")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x9C036C", Offset = "0x9C036C", VA = "0x9C036C")]
	private void Offline_Enter()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x9C044C", Offset = "0x9C044C", VA = "0x9C044C")]
	private void Standby_Enter()
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x9C052C", Offset = "0x9C052C", VA = "0x9C052C")]
	private void InsertingDrive_Enter()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x9C0550", Offset = "0x9C0550", VA = "0x9C0550")]
	private void InsertingDrive_Update()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x9C06B4", Offset = "0x9C06B4", VA = "0x9C06B4")]
	private void Booting_Enter()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x9C07CC", Offset = "0x9C07CC", VA = "0x9C07CC")]
	private void Booting_Exit()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x9C0838", Offset = "0x9C0838", VA = "0x9C0838")]
	private void OnBootingTextEnded()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x9C0A50", Offset = "0x9C0A50", VA = "0x9C0A50")]
	private void TextLog_Enter()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x9C0F88", Offset = "0x9C0F88", VA = "0x9C0F88")]
	private void CraftBlueprint_Enter()
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x9C1118", Offset = "0x9C1118", VA = "0x9C1118")]
	private void Broken_Enter()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x9C1240", Offset = "0x9C1240", VA = "0x9C1240")]
	private void Always_Update()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x9C16A4", Offset = "0x9C16A4", VA = "0x9C16A4")]
	private void OnPowerLevelChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x9C1980", Offset = "0x9C1980", VA = "0x9C1980")]
	private void OnDriveInserted(Item item)
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x9C1AB4", Offset = "0x9C1AB4", VA = "0x9C1AB4")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x9C1B50", Offset = "0x9C1B50", VA = "0x9C1B50")]
	private void OnReceiveDamage(int damagePoints, Health.DamageType damageType, Health.Faction faction, Vector3 originPoint)
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x9C1C98", Offset = "0x9C1C98", VA = "0x9C1C98")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x9C1CE8", Offset = "0x9C1CE8", VA = "0x9C1CE8", Slot = "11")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x9C1DE0", Offset = "0x9C1DE0", VA = "0x9C1DE0", Slot = "12")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x9C1EA8", Offset = "0x9C1EA8", VA = "0x9C1EA8", Slot = "13")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x9C1EAC", Offset = "0x9C1EAC", VA = "0x9C1EAC")]
	public Terminal()
	{
	}
}
[Token(Token = "0x2000191")]
public class Turret : FSMComponent, IGameSerializable
{
	[Token(Token = "0x20003EE")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Idle;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Unfold;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Fold;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Sentry;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Target;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Fire;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Death;

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xA031EC", Offset = "0xA031EC", VA = "0xA031EC")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x20003EF")]
	private class SerializedData
	{
		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int health;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string xform;

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xA02FBC", Offset = "0xA02FBC", VA = "0xA02FBC")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x20003F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BC68", Offset = "0x75BC68")]
	private sealed class <Fire_co>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Turret <>4__this;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 hitPoint;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__2;

		[Token(Token = "0x17000214")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0xA03390", Offset = "0xA03390", VA = "0xA03390", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000215")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AC7")]
			[Address(RVA = "0xA033F8", Offset = "0xA033F8", VA = "0xA033F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xA02A20", Offset = "0xA02A20", VA = "0xA02A20")]
		[DebuggerHidden]
		public <Fire_co>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xA031F4", Offset = "0xA031F4", VA = "0xA031F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xA031F8", Offset = "0xA031F8", VA = "0xA031F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xA03398", Offset = "0xA03398", VA = "0xA03398", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform handle;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform body;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform muzzle;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float unfoldSpeed;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float foldSpeed;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioCue unfoldSound;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioCue foldSound;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioCue deactivateSound;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float sentryTimeout;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float sentryAngle;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float sentryRotSpeed;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioCue sentryPingSound;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float targetTime;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float targetTimeMultiplier;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioCue targetPingSound;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioCue targetAcquiredSound;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioCue shootSound;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public LayerMask layerMask;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ProjectileDamage damageData;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 handleDeployPos;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private AgentVision agentVision;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Health health;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private VolumetricLightBeam spotLight;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool spotLightEnabled;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GunTrails gunTrails;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private MuzzleFlash muzzleFlash;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public OcclusionTracker occlusionTracker;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private RoomPower roomPower;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float progress;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float pingRadarTime;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Quaternion origHandleRot;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Quaternion origBodyRot;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float pingTimer;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private bool disablingOnDeath;

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xA00D94", Offset = "0xA00D94", VA = "0xA00D94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xA00E08", Offset = "0xA00E08", VA = "0xA00E08", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xA00E38", Offset = "0xA00E38", VA = "0xA00E38", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xA00E7C", Offset = "0xA00E7C", VA = "0xA00E7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xA01270", Offset = "0xA01270", VA = "0xA01270")]
	private void Idle_Enter()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xA012C4", Offset = "0xA012C4", VA = "0xA012C4")]
	private void Idle_Update()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xA01388", Offset = "0xA01388", VA = "0xA01388")]
	private void Unfold_Enter()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xA013D0", Offset = "0xA013D0", VA = "0xA013D0")]
	private void Unfold_Update()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xA01524", Offset = "0xA01524", VA = "0xA01524")]
	private void Unfold_Exit()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xA01598", Offset = "0xA01598", VA = "0xA01598")]
	private void Fold_Enter()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xA01648", Offset = "0xA01648", VA = "0xA01648")]
	private void Fold_Update()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xA01878", Offset = "0xA01878", VA = "0xA01878")]
	private void Sentry_Enter()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xA018AC", Offset = "0xA018AC", VA = "0xA018AC")]
	private void Sentry_Update()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xA01B14", Offset = "0xA01B14", VA = "0xA01B14")]
	private void Sentry_OnTimer()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xA01BB0", Offset = "0xA01BB0", VA = "0xA01BB0")]
	private void Target_Enter()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xA01DC8", Offset = "0xA01DC8", VA = "0xA01DC8")]
	private void Target_Update()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xA0258C", Offset = "0xA0258C", VA = "0xA0258C")]
	private void Target_OnTimer()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xA02660", Offset = "0xA02660", VA = "0xA02660")]
	private void Fire_Enter()
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xA02670", Offset = "0xA02670", VA = "0xA02670")]
	private void Fire_OnTimer()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xA02980", Offset = "0xA02980", VA = "0xA02980")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7662BC", Offset = "0x7662BC")]
	private IEnumerator Fire_co(Vector3 hitPoint)
	{
		return null;
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xA02A4C", Offset = "0xA02A4C", VA = "0xA02A4C")]
	private void Death_Enter()
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xA02BE0", Offset = "0xA02BE0", VA = "0xA02BE0")]
	private void OnReceiveDamage(int damagePoints, Health.DamageType damageType, Health.Faction faction, Vector3 originPoint)
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xA02D70", Offset = "0xA02D70", VA = "0xA02D70")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xA02E0C", Offset = "0xA02E0C", VA = "0xA02E0C")]
	private void OnOcclusionChange(bool visibility)
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xA02E90", Offset = "0xA02E90", VA = "0xA02E90", Slot = "11")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xA02FC4", Offset = "0xA02FC4", VA = "0xA02FC4", Slot = "12")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xA030C4", Offset = "0xA030C4", VA = "0xA030C4", Slot = "13")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xA03140", Offset = "0xA03140", VA = "0xA03140")]
	public Turret()
	{
	}
}
[Token(Token = "0x2000192")]
public class Vent : MonoBehaviour
{
	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ventGrid;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fan;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem steam;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioCue popSound;

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xAB1C78", Offset = "0xAB1C78", VA = "0xAB1C78")]
	public void SetOpen()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xAB1E54", Offset = "0xAB1E54", VA = "0xAB1E54")]
	public void SetFull()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xAB1FB0", Offset = "0xAB1FB0", VA = "0xAB1FB0")]
	public void PopGrid()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xAB2108", Offset = "0xAB2108", VA = "0xAB2108")]
	public Vent()
	{
	}
}
[Token(Token = "0x2000193")]
public class VentFan : MonoBehaviour
{
	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotSpeed;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool hasEnergy;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float curSpeed;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RoomPower rPower;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource sound;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Sector occlusionSector;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int updateTask;

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xAB2110", Offset = "0xAB2110", VA = "0xAB2110")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xAB21C4", Offset = "0xAB21C4", VA = "0xAB21C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xAB27A8", Offset = "0xAB27A8", VA = "0xAB27A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xAB292C", Offset = "0xAB292C", VA = "0xAB292C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xAB2C64", Offset = "0xAB2C64", VA = "0xAB2C64")]
	private void UpdateTask()
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xAB2CFC", Offset = "0xAB2CFC", VA = "0xAB2CFC")]
	private void OnPowerLevelChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xAB26D8", Offset = "0xAB26D8", VA = "0xAB26D8")]
	private void OnVisible()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xAB2E44", Offset = "0xAB2E44", VA = "0xAB2E44")]
	private void OnInvisible()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xAB2EC0", Offset = "0xAB2EC0", VA = "0xAB2EC0")]
	public VentFan()
	{
	}
}
[Token(Token = "0x2000194")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x75A39C", Offset = "0x75A39C")]
public class CraftRecipes : ScriptableObject
{
	[Token(Token = "0x20003F1")]
	public enum IngredientType
	{
		[Token(Token = "0x4001BD8")]
		Plastics,
		[Token(Token = "0x4001BD9")]
		Organics,
		[Token(Token = "0x4001BDA")]
		Metals,
		[Token(Token = "0x4001BDB")]
		Electronics,
		[Token(Token = "0x4001BDC")]
		Chemicals,
		[Token(Token = "0x4001BDD")]
		Flammables,
		[Token(Token = "0x4001BDE")]
		ExoticMaterials,
		[Token(Token = "0x4001BDF")]
		AlienMaterials,
		[Token(Token = "0x4001BE0")]
		Energy
	}

	[Serializable]
	[Token(Token = "0x20003F2")]
	public class IngredientList
	{
		[Serializable]
		[Token(Token = "0x2000499")]
		public struct IngredientAmount : IComparable
		{
			[Token(Token = "0x4001EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IngredientType type;

			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int amount;

			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0x95E29C", Offset = "0x95E29C", VA = "0x95E29C", Slot = "4")]
			public int CompareTo(object obj)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ArrayElementTitleAttribute", RVA = "0x762408", Offset = "0x762408")]
		public List<IngredientAmount> ingredients;

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x95DC14", Offset = "0x95DC14", VA = "0x95DC14")]
		public int GetAmountOfType(IngredientType type)
		{
			return default(int);
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x95DD24", Offset = "0x95DD24", VA = "0x95DD24")]
		public void Add(IngredientType type, int amount)
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x95DE40", Offset = "0x95DE40", VA = "0x95DE40")]
		public void Add(IngredientList list)
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x95DF4C", Offset = "0x95DF4C", VA = "0x95DF4C")]
		public void Remove(IngredientType type, int amount)
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x95E080", Offset = "0x95E080", VA = "0x95E080")]
		public void Remove(IngredientList list)
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x95E18C", Offset = "0x95E18C", VA = "0x95E18C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x95E220", Offset = "0x95E220", VA = "0x95E220")]
		public IngredientList()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003F3")]
	public class Blueprint
	{
		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string idName;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite uiIcon;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SwitchRefGameObject prefab;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float unlockWeight;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IngredientList ingredientList;

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x95DB20", Offset = "0x95DB20", VA = "0x95DB20")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x95DB8C", Offset = "0x95DB8C", VA = "0x95DB8C")]
		public string GetInfo()
		{
			return null;
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x95DC04", Offset = "0x95DC04", VA = "0x95DC04")]
		public Blueprint()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003F4")]
	public class UnlockedBlueprintsState
	{
		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> unlockedBlueprints;

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x95E33C", Offset = "0x95E33C", VA = "0x95E33C")]
		public UnlockedBlueprintsState()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x95E3B8", Offset = "0x95E3B8", VA = "0x95E3B8")]
		public int GetNumUnlocked()
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Blueprint> blueprints;

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x95D4CC", Offset = "0x95D4CC", VA = "0x95D4CC")]
	public static string GetIngredientText(IngredientType type)
	{
		return null;
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x95D580", Offset = "0x95D580", VA = "0x95D580")]
	public Blueprint GetBlueprint(string id)
	{
		return null;
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x95D6A0", Offset = "0x95D6A0", VA = "0x95D6A0")]
	public bool HasLockedBlueprints(UnlockedBlueprintsState bpState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x95D714", Offset = "0x95D714", VA = "0x95D714")]
	public Blueprint UnlockBlueprint(UnlockedBlueprintsState bpState)
	{
		return null;
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x95D97C", Offset = "0x95D97C", VA = "0x95D97C")]
	public List<Blueprint> GetUnlocked(UnlockedBlueprintsState state, [Optional] List<Blueprint> cachedList)
	{
		return null;
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x95DB18", Offset = "0x95DB18", VA = "0x95DB18")]
	public CraftRecipes()
	{
	}
}
[Token(Token = "0x2000195")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x75A3E0", Offset = "0x75A3E0")]
public class CraftUIData : ScriptableObject
{
	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite[] icons;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color[] colors;

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x95E408", Offset = "0x95E408", VA = "0x95E408")]
	public CraftUIData()
	{
	}
}
[Token(Token = "0x2000196")]
public class GalaxyMap
{
	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Vector2> positions;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Pair<int, int>> edges;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Pair<int, int>> sectors;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<bool> visible;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<bool> visited;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<VesselInfo> vesselInfo;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int playerPosition;

	[Token(Token = "0x4000E22")]
	private const int posPerSector = 8;

	[Token(Token = "0x4000E23")]
	public const float sectorSize = 450f;

	[Token(Token = "0x4000E24")]
	private const float sectorMargin = 30f;

	[Token(Token = "0x4000E25")]
	private const float minSeparation = 50f;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GraphPathfinder.Graph _pathfindGraph;

	[Token(Token = "0x170000C2")]
	public GraphPathfinder.Graph PathfindGraph
	{
		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x9A6BB4", Offset = "0x9A6BB4", VA = "0x9A6BB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x9A6ED8", Offset = "0x9A6ED8", VA = "0x9A6ED8")]
	public void Generate()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x9A77BC", Offset = "0x9A77BC", VA = "0x9A77BC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x9A7C10", Offset = "0x9A7C10", VA = "0x9A7C10")]
	public bool IsVisited(int idx)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x9A7C88", Offset = "0x9A7C88", VA = "0x9A7C88")]
	public void SetVisited(int idx)
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x9A7CF4", Offset = "0x9A7CF4", VA = "0x9A7CF4")]
	public int GetNumVisited()
	{
		return default(int);
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x9A7064", Offset = "0x9A7064", VA = "0x9A7064")]
	private void GenerateSector(int sectorX, int sectorY)
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x9A7DF0", Offset = "0x9A7DF0", VA = "0x9A7DF0")]
	private static void ComputeEdges(List<Vector2> posSector, out List<Pair<int, int>> edgesSector)
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x9A8054", Offset = "0x9A8054", VA = "0x9A8054")]
	private bool GetBoundingPositions(int? sectorX, int? sectorY, out int topMost, out int bottomMost, out int leftMost, out int rightMost, bool onlyVisible = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x9A8394", Offset = "0x9A8394", VA = "0x9A8394")]
	public Rect GetBounds(bool onlyVisible = false)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x9A82A4", Offset = "0x9A82A4", VA = "0x9A82A4")]
	private int GetSectorOffset(int sectorX, int sectorY)
	{
		return default(int);
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x9A78A8", Offset = "0x9A78A8", VA = "0x9A78A8")]
	public void RevealNeighbors(int idx, bool generateVesselsInfo = true, [Optional] List<int> revealedIndexes)
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x9A8570", Offset = "0x9A8570", VA = "0x9A8570")]
	public void RevealAll(bool generateVesselsInfo = true)
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x9A86A8", Offset = "0x9A86A8", VA = "0x9A86A8")]
	public GalaxyMap()
	{
	}
}
[Serializable]
[Token(Token = "0x2000197")]
public class GameState : IGameSerializable
{
	[Token(Token = "0x20003F5")]
	private class SerializedData
	{
		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string levelOptions;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string inventory;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string seed;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int playerHealth;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float playerOxygen;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool[] playerFlashlights;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool jumpDriveEngaged;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool coordinatesSet;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool jumpPerformed;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] unlockedTextLogs;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string[] unlockedBlueprints;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LevelOptions.EModifiers[] unlockedLevelOptions;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float playtime;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float damageDealt;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float explored;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int kills;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int craftedItems;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string mission;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string mainManager;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string agentManager;

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x9ACAC0", Offset = "0x9ACAC0", VA = "0x9ACAC0")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string seed;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LevelOptions defaultLevelOptions;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelOptions levelOptions;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Inventory inventory;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int playerHealth;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float playerOxygen;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool[] playerFlashlights;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool jumpDriveEngaged;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool coordinatesSet;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool jumpPerformed;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<string> unlockedTextLogs;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<string> unlockedBlueprints;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<LevelOptions.EModifiers> unlockedLevelOptions;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float playtime;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float damageDealt;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float explored;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int kills;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int craftedItems;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D fullMinimap;

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x9A8898", Offset = "0x9A8898", VA = "0x9A8898")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x9AC7E0", Offset = "0x9AC7E0", VA = "0x9AC7E0", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x9ACAC8", Offset = "0x9ACAC8", VA = "0x9ACAC8")]
	public void DeserializeStatePre(string dataString)
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x9ACBA8", Offset = "0x9ACBA8", VA = "0x9ACBA8", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x9ACE4C", Offset = "0x9ACE4C", VA = "0x9ACE4C", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x9A882C", Offset = "0x9A882C", VA = "0x9A882C")]
	public GameState()
	{
	}
}
[Serializable]
[Token(Token = "0x2000198")]
public class MetagameState : IGameSerializable
{
	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int numRuns;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextLogs.TextLogsState textLogs;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CraftRecipes.UnlockedBlueprintsState unlockedBlueprints;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LevelOptions.UnlockedModsState unlockedLevelOptions;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Tutorial.TutorialState tutorialState;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Achievements.AchState achState;

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xB8D790", Offset = "0xB8D790", VA = "0xB8D790")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xB8D8AC", Offset = "0xB8D8AC", VA = "0xB8D8AC", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xB8D8B4", Offset = "0xB8D8B4", VA = "0xB8D8B4", Slot = "5")]
	public void DeserializeState(string jsonString)
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0xB8DAB4", Offset = "0xB8DAB4", VA = "0xB8DAB4", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0xB8DAB8", Offset = "0xB8DAB8", VA = "0xB8DAB8")]
	public MetagameState()
	{
	}
}
[Token(Token = "0x2000199")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x75A424", Offset = "0x75A424")]
public class Mission : ScriptableObject, IGameSerializable
{
	[Token(Token = "0x20003F6")]
	private class SerializedData
	{
		[Serializable]
		[Token(Token = "0x200049A")]
		public struct Goal
		{
			[Token(Token = "0x4001EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4001EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string data;
		}

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Goal[] goals;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Goal[] optionalGoals;

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xB93278", Offset = "0xB93278", VA = "0xB93278")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MissionGoal> goals;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MissionGoal> optionalGoals;

	[Token(Token = "0x14000015")]
	public event Action<MissionGoal> onGoalCompleted
	{
		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xB91C20", Offset = "0xB91C20", VA = "0xB91C20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766320", Offset = "0x766320")]
		add
		{
		}
		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xB91CC4", Offset = "0xB91CC4", VA = "0xB91CC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766330", Offset = "0x766330")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event Action<MissionGoal> onGoalsChanged
	{
		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xB91D68", Offset = "0xB91D68", VA = "0xB91D68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766340", Offset = "0x766340")]
		add
		{
		}
		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xB91E0C", Offset = "0xB91E0C", VA = "0xB91E0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766350", Offset = "0x766350")]
		remove
		{
		}
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0xB91EB0", Offset = "0xB91EB0", VA = "0xB91EB0")]
	public bool IsComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xB91FB8", Offset = "0xB91FB8", VA = "0xB91FB8")]
	public void Generate()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xB92170", Offset = "0xB92170", VA = "0xB92170")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xB925E8", Offset = "0xB925E8", VA = "0xB925E8")]
	public void DeInitialize()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xB928C4", Offset = "0xB928C4", VA = "0xB928C4")]
	public void AddGoal(MissionGoal newGoal, bool optional = false)
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xB92B04", Offset = "0xB92B04", VA = "0xB92B04")]
	public MissionGoal Get(string name)
	{
		return null;
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xB92D48", Offset = "0xB92D48", VA = "0xB92D48")]
	public bool IsCompleted(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xB92DF8", Offset = "0xB92DF8", VA = "0xB92DF8")]
	public void SetCompleted(string name)
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xB92EAC", Offset = "0xB92EAC", VA = "0xB92EAC")]
	private void OnGoalCompleted(MissionGoal goal)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xB92A90", Offset = "0xB92A90", VA = "0xB92A90")]
	private void OnGoalsChanged(MissionGoal goal)
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xB92FE0", Offset = "0xB92FE0", VA = "0xB92FE0", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xB932FC", Offset = "0xB932FC", VA = "0xB932FC", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xB93914", Offset = "0xB93914", VA = "0xB93914", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xB93634", Offset = "0xB93634", VA = "0xB93634")]
	private List<MissionGoal> ListAllGoals()
	{
		return null;
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xB93724", Offset = "0xB93724", VA = "0xB93724")]
	private MissionGoal DeserializeGoal(SerializedData.Goal goalData, List<MissionGoal> allGoals)
	{
		return null;
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xB93990", Offset = "0xB93990", VA = "0xB93990")]
	public Mission()
	{
	}
}
[Token(Token = "0x200019A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x75A468", Offset = "0x75A468")]
public class MissionGoal : ScriptableObject, IComparable
{
	[Token(Token = "0x20003F7")]
	public enum EStatus
	{
		[Token(Token = "0x4001BFF")]
		Incomplete,
		[Token(Token = "0x4001C00")]
		Complete
	}

	[Token(Token = "0x20003F8")]
	private class SerializedData
	{
		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EStatus status;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int currentProgress;

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xB93A58", Offset = "0xB93A58", VA = "0xB93A58")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public new string name;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string descriptionTextId;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isOptional;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int priority;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string groupId;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string musicMood;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool autosave;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private EStatus _status;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int progressTotal;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected int currentProgress;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MissionGoal[] newGoalsOnCompletion;

	[Token(Token = "0x170000C3")]
	public EStatus Status
	{
		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xB93998", Offset = "0xB93998", VA = "0xB93998")]
		get
		{
			return default(EStatus);
		}
		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xB92410", Offset = "0xB92410", VA = "0xB92410")]
		set
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event Action<MissionGoal> onComplete
	{
		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xB92544", Offset = "0xB92544", VA = "0xB92544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766360", Offset = "0x766360")]
		add
		{
		}
		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xB92820", Offset = "0xB92820", VA = "0xB92820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766370", Offset = "0x766370")]
		remove
		{
		}
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xB939A0", Offset = "0xB939A0", VA = "0xB939A0")]
	public int GetProgress()
	{
		return default(int);
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xB939A8", Offset = "0xB939A8", VA = "0xB939A8", Slot = "5")]
	public virtual bool UpdateComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xB939B0", Offset = "0xB939B0", VA = "0xB939B0", Slot = "6")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xB939B4", Offset = "0xB939B4", VA = "0xB939B4", Slot = "7")]
	public virtual void DeInitialize()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xB939B8", Offset = "0xB939B8", VA = "0xB939B8", Slot = "8")]
	public virtual void Generate()
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xB939BC", Offset = "0xB939BC", VA = "0xB939BC", Slot = "4")]
	public int CompareTo(object obj)
	{
		return default(int);
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xB93280", Offset = "0xB93280", VA = "0xB93280")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xB93918", Offset = "0xB93918", VA = "0xB93918")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xB93A60", Offset = "0xB93A60", VA = "0xB93A60")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xB93A64", Offset = "0xB93A64", VA = "0xB93A64")]
	public MissionGoal()
	{
	}
}
[Token(Token = "0x200019B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x75A4AC", Offset = "0x75A4AC")]
public class MissionGoal_CollectItem : MissionGoal
{
	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Item itemPrefab;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string itemName;

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xB93A74", Offset = "0xB93A74", VA = "0xB93A74", Slot = "5")]
	public override bool UpdateComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xB93BF0", Offset = "0xB93BF0", VA = "0xB93BF0", Slot = "6")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xB93D50", Offset = "0xB93D50", VA = "0xB93D50", Slot = "7")]
	public override void DeInitialize()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xB93EB4", Offset = "0xB93EB4", VA = "0xB93EB4")]
	private void OnInventoryChange()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xB93EC0", Offset = "0xB93EC0", VA = "0xB93EC0", Slot = "8")]
	public override void Generate()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0xB94424", Offset = "0xB94424", VA = "0xB94424")]
	public MissionGoal_CollectItem()
	{
	}
}
[Token(Token = "0x200019C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x75A4F0", Offset = "0x75A4F0")]
public class MissionGoal_Room : MissionGoal
{
	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Room.RoomType roomType;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool leaveRoom;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int updateTask;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool isInRoom;

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xB94434", Offset = "0xB94434", VA = "0xB94434", Slot = "5")]
	public override bool UpdateComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xB9455C", Offset = "0xB9455C", VA = "0xB9455C", Slot = "6")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xB9462C", Offset = "0xB9462C", VA = "0xB9462C", Slot = "7")]
	public override void DeInitialize()
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xB946E8", Offset = "0xB946E8", VA = "0xB946E8")]
	private void OnUpdate()
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xB946F4", Offset = "0xB946F4", VA = "0xB946F4")]
	public MissionGoal_Room()
	{
	}
}
[Token(Token = "0x200019D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x75A534", Offset = "0x75A534")]
public class TextLogs : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20003F9")]
	public class TextLogsState
	{
		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> shownLogs;

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x9C878C", Offset = "0x9C878C", VA = "0x9C878C")]
		public TextLogsState()
		{
		}
	}

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> logNames;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<float> logWeights;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, Pair<List<string>, List<float>>> logsDict;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> candidates;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<float> candidateWeights;

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x9C83D0", Offset = "0x9C83D0", VA = "0x9C83D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x9C0C98", Offset = "0x9C0C98", VA = "0x9C0C98")]
	public string SelectLog(TextLogsState logState, string groupID, bool markAsShown = true, [Optional] List<string> exclusion, [Optional] List<string> deserializationPrevUnlocked)
	{
		return null;
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x9C0A20", Offset = "0x9C0A20", VA = "0x9C0A20")]
	public bool HasLockedLogs(TextLogsState logState, string groupID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x9C0F34", Offset = "0x9C0F34", VA = "0x9C0F34")]
	public string GetLog(string logId)
	{
		return null;
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x9C86DC", Offset = "0x9C86DC", VA = "0x9C86DC")]
	public TextLogs()
	{
	}
}
[Serializable]
[Token(Token = "0x200019E")]
public class VesselInfo
{
	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string vesselName;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string seed;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool debris;

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xAB5018", Offset = "0xAB5018", VA = "0xAB5018")]
	public void Generate(RandomNamesList shipNames)
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xAB50FC", Offset = "0xAB50FC", VA = "0xAB50FC")]
	public VesselInfo()
	{
	}
}
[Token(Token = "0x200019F")]
public class ConditionalByPlatform : MonoBehaviour
{
	[Token(Token = "0x20003FA")]
	public enum Platform
	{
		[Token(Token = "0x4001C05")]
		Main,
		[Token(Token = "0x4001C06")]
		Low,
		[Token(Token = "0x4001C07")]
		NotQuest1
	}

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Platform validPlatform;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool destroyImmediate;

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x933BEC", Offset = "0x933BEC", VA = "0x933BEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x933CF0", Offset = "0x933CF0", VA = "0x933CF0")]
	public ConditionalByPlatform()
	{
	}
}
[Token(Token = "0x20001A0")]
public class SpawnByPlatform : MonoBehaviour
{
	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SwitchRefGameObject prefab;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool spawnOnAwake;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string setName;

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x91B29C", Offset = "0x91B29C", VA = "0x91B29C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x91B414", Offset = "0x91B414", VA = "0x91B414")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x91B2AC", Offset = "0x91B2AC", VA = "0x91B2AC")]
	private void Spawn()
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x91B424", Offset = "0x91B424", VA = "0x91B424")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x91B4E4", Offset = "0x91B4E4", VA = "0x91B4E4")]
	public SpawnByPlatform()
	{
	}
}
[Token(Token = "0x20001A1")]
public class SwitchRef<T>
{
	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private T low;

	[Token(Token = "0x170000C4")]
	public T Value
	{
		[Token(Token = "0x6000E5E")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000E5F")]
		set
		{
		}
	}

	[Token(Token = "0x6000E60")]
	public T Get()
	{
		return (T)null;
	}

	[Token(Token = "0x6000E61")]
	public SwitchRef()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A2")]
public class SwitchRefGameObject
{
	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GameObject low;

	[Token(Token = "0x170000C5")]
	public GameObject Value
	{
		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x9B56B4", Offset = "0x9B56B4", VA = "0x9B56B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x9B56BC", Offset = "0x9B56BC", VA = "0x9B56BC")]
		set
		{
		}
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x9B56C4", Offset = "0x9B56C4", VA = "0x9B56C4")]
	public GameObject Get()
	{
		return null;
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x9B56CC", Offset = "0x9B56CC", VA = "0x9B56CC")]
	public SwitchRefGameObject()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A3")]
public class SwitchRefScriptableObj
{
	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private ScriptableObject low;

	[Token(Token = "0x170000C6")]
	public ScriptableObject Value
	{
		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x9B5774", Offset = "0x9B5774", VA = "0x9B5774")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x9B577C", Offset = "0x9B577C", VA = "0x9B577C")]
		set
		{
		}
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x9B5784", Offset = "0x9B5784", VA = "0x9B5784")]
	public ScriptableObject Get()
	{
		return null;
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x9B578C", Offset = "0x9B578C", VA = "0x9B578C")]
	public SwitchRefScriptableObj()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A4")]
public class SwitchRefSpawnInfo
{
	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private SpawnInfo low;

	[Token(Token = "0x170000C7")]
	public SpawnInfo Value
	{
		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x9B5794", Offset = "0x9B5794", VA = "0x9B5794")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x9B579C", Offset = "0x9B579C", VA = "0x9B579C")]
		set
		{
		}
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x9B57A4", Offset = "0x9B57A4", VA = "0x9B57A4")]
	public SpawnInfo Get()
	{
		return null;
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x9B57AC", Offset = "0x9B57AC", VA = "0x9B57AC")]
	public SwitchRefSpawnInfo()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A5")]
public class SwitchRefListSpawnInfo
{
	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private List<SpawnInfo> low;

	[Token(Token = "0x170000C8")]
	public List<SpawnInfo> Value
	{
		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x9B5714", Offset = "0x9B5714", VA = "0x9B5714")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x9B571C", Offset = "0x9B571C", VA = "0x9B571C")]
		set
		{
		}
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x9B5724", Offset = "0x9B5724", VA = "0x9B5724")]
	public List<SpawnInfo> Get()
	{
		return null;
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x9B572C", Offset = "0x9B572C", VA = "0x9B572C")]
	public SwitchRefListSpawnInfo()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A6")]
public class SwitchRefMaterial
{
	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Material low;

	[Token(Token = "0x170000C9")]
	public Material Value
	{
		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x9B5754", Offset = "0x9B5754", VA = "0x9B5754")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x9B575C", Offset = "0x9B575C", VA = "0x9B575C")]
		set
		{
		}
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x9B5764", Offset = "0x9B5764", VA = "0x9B5764")]
	public Material Get()
	{
		return null;
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x9B576C", Offset = "0x9B576C", VA = "0x9B576C")]
	public SwitchRefMaterial()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A7")]
public class SwitchRefTexture
{
	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Texture low;

	[Token(Token = "0x170000CA")]
	public Texture Value
	{
		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x9B57B4", Offset = "0x9B57B4", VA = "0x9B57B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x9B57BC", Offset = "0x9B57BC", VA = "0x9B57BC")]
		set
		{
		}
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x9B57C4", Offset = "0x9B57C4", VA = "0x9B57C4")]
	public Texture Get()
	{
		return null;
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x9B57CC", Offset = "0x9B57CC", VA = "0x9B57CC")]
	public SwitchRefTexture()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A8")]
public class SwitchRefListGameObject
{
	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private List<GameObject> low;

	[Token(Token = "0x170000CB")]
	public List<GameObject> Value
	{
		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x9B56D4", Offset = "0x9B56D4", VA = "0x9B56D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x9B56DC", Offset = "0x9B56DC", VA = "0x9B56DC")]
		set
		{
		}
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x9B56E4", Offset = "0x9B56E4", VA = "0x9B56E4")]
	public List<GameObject> Get()
	{
		return null;
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x9B56EC", Offset = "0x9B56EC", VA = "0x9B56EC")]
	public SwitchRefListGameObject()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A9")]
public class SwitchRefListTexture
{
	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private List<Texture> low;

	[Token(Token = "0x170000CC")]
	public List<Texture> Value
	{
		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x9B5734", Offset = "0x9B5734", VA = "0x9B5734")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x9B573C", Offset = "0x9B573C", VA = "0x9B573C")]
		set
		{
		}
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x9B5744", Offset = "0x9B5744", VA = "0x9B5744")]
	public List<Texture> Get()
	{
		return null;
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x9B574C", Offset = "0x9B574C", VA = "0x9B574C")]
	public SwitchRefListTexture()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AA")]
public class SwitchRefListMaterial
{
	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private List<Material> low;

	[Token(Token = "0x170000CD")]
	public List<Material> Value
	{
		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x9B56F4", Offset = "0x9B56F4", VA = "0x9B56F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x9B56FC", Offset = "0x9B56FC", VA = "0x9B56FC")]
		set
		{
		}
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x9B5704", Offset = "0x9B5704", VA = "0x9B5704")]
	public List<Material> Get()
	{
		return null;
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x9B570C", Offset = "0x9B570C", VA = "0x9B570C")]
	public SwitchRefListMaterial()
	{
	}
}
[Token(Token = "0x20001AB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A578", Offset = "0x75A578")]
public class AmmoBackpack : MonoBehaviour
{
	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioCue spawnSound;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hapticStrength;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F3F8", Offset = "0x75F3F8")]
	public HapticClip bHapticsClipLeft;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HapticClip bHapticsClipRight;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HapticClip bHapticsVestClipLeft;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HapticClip bHapticsVestClipRight;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BoxCollider boxCol;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TutorialPanel tutoPanel;

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xB60858", Offset = "0xB60858", VA = "0xB60858")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xB608B8", Offset = "0xB608B8", VA = "0xB608B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xB60964", Offset = "0xB60964", VA = "0xB60964")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xB60A10", Offset = "0xB60A10", VA = "0xB60A10")]
	private void OnHoverUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xB60DC0", Offset = "0xB60DC0", VA = "0xB60DC0")]
	private Item.Properties GetAmmo(AmmoBackpackRef weaponRef, out bool hasAmmo)
	{
		return null;
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xB60FD0", Offset = "0xB60FD0", VA = "0xB60FD0")]
	public static void ShowTutorial(GameObject weapon)
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xB611D0", Offset = "0xB611D0", VA = "0xB611D0")]
	public AmmoBackpack()
	{
	}
}
[Token(Token = "0x20001AC")]
public class AmmoBackpackRef : MonoBehaviour
{
	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ammoItems;

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xB611E0", Offset = "0xB611E0", VA = "0xB611E0")]
	public AmmoBackpackRef()
	{
	}
}
[Token(Token = "0x20001AD")]
public class DustAmbient : MonoBehaviour
{
	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem dustMotes;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem infestationMotes;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Room currentRoom;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int updateTask;

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xA19414", Offset = "0xA19414", VA = "0xA19414")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xA194D0", Offset = "0xA194D0", VA = "0xA194D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xA1958C", Offset = "0xA1958C", VA = "0xA1958C")]
	private void OnUpdate()
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xA1965C", Offset = "0xA1965C", VA = "0xA1965C")]
	private void UpdateRoom(Room room)
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xA196D8", Offset = "0xA196D8", VA = "0xA196D8")]
	public DustAmbient()
	{
	}
}
[Token(Token = "0x20001AE")]
public class HealthWatch : PlayerWatch
{
	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Health health;

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x9D75C4", Offset = "0x9D75C4", VA = "0x9D75C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x9D7694", Offset = "0x9D7694", VA = "0x9D7694")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x9D7764", Offset = "0x9D7764", VA = "0x9D7764")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x9D7840", Offset = "0x9D7840", VA = "0x9D7840")]
	private void OnReceiveDamage(int damagePoints, Health.DamageType damageType, Health.Faction faction, Vector3 originPoint)
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x9D7878", Offset = "0x9D7878", VA = "0x9D7878")]
	public void OnReceiveHeal()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x9D78A8", Offset = "0x9D78A8", VA = "0x9D78A8")]
	public HealthWatch()
	{
	}
}
[Token(Token = "0x20001AF")]
public class Holster : MonoBehaviour
{
	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isLeftHolster;

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x9DC4DC", Offset = "0x9DC4DC", VA = "0x9DC4DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x9DC564", Offset = "0x9DC564", VA = "0x9DC564")]
	public bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x9CEECC", Offset = "0x9CEECC", VA = "0x9CEECC")]
	public void Store(Transform obj, bool serializeToInventory = true)
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x9CE8CC", Offset = "0x9CE8CC", VA = "0x9CE8CC")]
	public void Remove(Transform obj)
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x9DC594", Offset = "0x9DC594", VA = "0x9DC594")]
	public void Deserialize()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x9DC74C", Offset = "0x9DC74C", VA = "0x9DC74C")]
	public Holster()
	{
	}
}
[Token(Token = "0x20001B0")]
public class HurtEffect : MonoBehaviour
{
	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float recoverySpeed;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] painSounds;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip deathSound;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Health health;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer renderer;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material material;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color currentColor;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource painSoundSrc;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isDying;

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x9DD45C", Offset = "0x9DD45C", VA = "0x9DD45C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x9DD5CC", Offset = "0x9DD5CC", VA = "0x9DD5CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x9DD748", Offset = "0x9DD748", VA = "0x9DD748")]
	private void OnReceiveDamage(int damagePoints, Health.DamageType damageType, Health.Faction faction, Vector3 originPoint)
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x9DD8E0", Offset = "0x9DD8E0", VA = "0x9DD8E0")]
	public HurtEffect()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B1")]
public class Inventory : IGameSerializable
{
	[Token(Token = "0x20003FB")]
	private class SerializedData
	{
		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int capacity;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Item.Properties.SerializedData> itemsData;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Item.Properties.SerializedData leftHolsterItem;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Item.Properties.SerializedData rightHolsterItem;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Item.Properties.SerializedData[] handItems;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Item.Properties.SerializedData> equippedItems;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool armorEquipped;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int extraCapacity;

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xBBC888", Offset = "0xBBC888", VA = "0xBBC888")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int maxCapacity;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int capacity;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Item.Properties> itemsData;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Item.Properties leftHolsterItem;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Item.Properties rightHolsterItem;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Item.Properties[] handItems;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Item.Properties> equippedItems;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool armorEquipped;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int extraCapacity;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action onItemAdded;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action onItemRemoved;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Inventory _instance;

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xBBAEAC", Offset = "0xBBAEAC", VA = "0xBBAEAC")]
	public static Inventory Get(bool autoCreate = true)
	{
		return null;
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xBBAF8C", Offset = "0xBBAF8C", VA = "0xBBAF8C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xBBB0EC", Offset = "0xBBB0EC", VA = "0xBBB0EC")]
	public bool AddItem(Item item, bool invokeCallbacks = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xBBB648", Offset = "0xBBB648", VA = "0xBBB648")]
	public bool RemoveItem(Item.Properties properties)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xBBB718", Offset = "0xBBB718", VA = "0xBBB718")]
	public void RemoveItem(int idx)
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xBBB430", Offset = "0xBBB430", VA = "0xBBB430")]
	public bool HasCapacity()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xBBB7A0", Offset = "0xBBB7A0", VA = "0xBBB7A0")]
	public int GetNumOwnedItems()
	{
		return default(int);
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xBBB7F0", Offset = "0xBBB7F0", VA = "0xBBB7F0")]
	public int GetCapacity()
	{
		return default(int);
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xBBB800", Offset = "0xBBB800", VA = "0xBBB800")]
	public void SetHolster(Item item, bool leftHolster)
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xBBB8F4", Offset = "0xBBB8F4", VA = "0xBBB8F4")]
	public Item.Properties GetHolster(bool leftHolster)
	{
		return null;
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xBBB968", Offset = "0xBBB968", VA = "0xBBB968")]
	public void EquipItem(Item eqItem)
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xBBBA80", Offset = "0xBBBA80", VA = "0xBBBA80")]
	public void RestoreEquippedItems()
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xBBBE60", Offset = "0xBBBE60", VA = "0xBBBE60")]
	public void SaveHandItems()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xBBBFD8", Offset = "0xBBBFD8", VA = "0xBBBFD8")]
	public void RestoreHandItems()
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xBBB494", Offset = "0xBBB494", VA = "0xBBB494")]
	private Item.Properties GetPropertiesForSerialization(Item item)
	{
		return null;
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xBBC444", Offset = "0xBBC444", VA = "0xBBC444", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xBBC8C0", Offset = "0xBBC8C0", VA = "0xBBC8C0", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xBBCF38", Offset = "0xBBCF38", VA = "0xBBCF38", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xBBCF3C", Offset = "0xBBCF3C", VA = "0xBBCF3C")]
	public Inventory()
	{
	}
}
[Token(Token = "0x20001B2")]
public class InventoryCollector : MonoBehaviour
{
	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float displaySpeed;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioCue collectSound;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float collectAnimationSpeed;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float gracePeriod;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask layerMask;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioCue enterSound;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioCue exitSound;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _canCollect;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 displayScale;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 largeScale;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color enabledColor;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Color atCapacityColor;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float displayOpacity;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Renderer renderer;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Renderer bubbleWrapperPrefab;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Renderer bubbleWrapper;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public InventoryFoldout foldout;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material highlightInvalid;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F430", Offset = "0x75F430")]
	public bool useCapsule;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float capsuleLength;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float capsuleRadius;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F468", Offset = "0x75F468")]
	public HapticClip bHapticsClipLeft;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public HapticClip bHapticsClipRight;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public HapticClip bHapticsVestClipLeft;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public HapticClip bHapticsVestClipRight;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Item itemInCollectArea;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<Transform> animatingItems;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float graceTime;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Collider[] colliderBuffer;

	[Token(Token = "0x170000CE")]
	public bool CanCollect
	{
		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xBBCFB0", Offset = "0xBBCFB0", VA = "0xBBCFB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xBBCFB8", Offset = "0xBBCFB8", VA = "0xBBCFB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xBBD430", Offset = "0xBBD430", VA = "0xBBD430")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0xBBD568", Offset = "0xBBD568", VA = "0xBBD568")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xBBD7E8", Offset = "0xBBD7E8", VA = "0xBBD7E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0xBBEAC0", Offset = "0xBBEAC0", VA = "0xBBEAC0")]
	private void OnReleasedByHand(Hand hand, Interactable obj)
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0xBBF020", Offset = "0xBBF020", VA = "0xBBF020")]
	public void SetCanCollect(bool canCollect, bool addGracePeriod = true)
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xBBD304", Offset = "0xBBD304", VA = "0xBBD304")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xBBF048", Offset = "0xBBF048", VA = "0xBBF048")]
	public InventoryCollector()
	{
	}
}
[Token(Token = "0x20001B3")]
public class InventoryFoldout : FSMComponent
{
	[Token(Token = "0x20003FC")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Closed;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Open;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Closing;

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xBC1268", Offset = "0xBC1268", VA = "0xBC1268")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InventoryItem bubblePrefab;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<InventoryItem> bubbles;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int numBubblesActive;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Vector3> targetPositions;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float arcDistance;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float angleInterval;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int rowMaxItems;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float rowHeightSeparation;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float rowDepthSeparation;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F4A0", Offset = "0x75F4A0")]
	public Renderer decorativeBar;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshPro capacityText;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color barColor;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Color barColorFull;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color textColor;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Color textColorFull;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 barScale;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 textScale;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 barPosition;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 textPosition;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F4D8", Offset = "0x75F4D8")]
	public AudioCue openSound;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioCue closeSound;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F510", Offset = "0x75F510")]
	public Transform tutorialReference;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private TutorialPanel tutoPanel;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int blocked;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Hand openingHand;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private PlayerBodyAttachment bodyAttach;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private InventoryCollector itemCollector;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Transform leaveSpaceForObj;

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xBBF188", Offset = "0xBBF188", VA = "0xBBF188")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xBBF1FC", Offset = "0xBBF1FC", VA = "0xBBF1FC", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xBBF2D8", Offset = "0xBBF2D8", VA = "0xBBF2D8", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xBBF3C4", Offset = "0xBBF3C4", VA = "0xBBF3C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xBBF5A4", Offset = "0xBBF5A4", VA = "0xBBF5A4")]
	private void Closed_Enter()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xBBF7E0", Offset = "0xBBF7E0", VA = "0xBBF7E0")]
	private void Closed_Update()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xBBF924", Offset = "0xBBF924", VA = "0xBBF924")]
	private void Open_Enter()
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xBC0018", Offset = "0xBC0018", VA = "0xBC0018")]
	private void Open_Update()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xBC04B8", Offset = "0xBC04B8", VA = "0xBC04B8")]
	private void Open_Exit()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xBC05D4", Offset = "0xBC05D4", VA = "0xBC05D4")]
	private void Closing_Enter()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xBC082C", Offset = "0xBC082C", VA = "0xBC082C")]
	private void Closing_Update()
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xBC0CD4", Offset = "0xBC0CD4", VA = "0xBC0CD4")]
	private void Close()
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xBBFC88", Offset = "0xBBFC88", VA = "0xBBFC88")]
	private void RebuildItems()
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xBC0E7C", Offset = "0xBC0E7C", VA = "0xBC0E7C")]
	private Vector3 GetItemLocalPosition(int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xBBEA28", Offset = "0xBBEA28", VA = "0xBBEA28")]
	public void UpdatePositions()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xBC11AC", Offset = "0xBC11AC", VA = "0xBC11AC")]
	public void Block()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xBC11BC", Offset = "0xBC11BC", VA = "0xBC11BC")]
	public void Unblock()
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xBC11CC", Offset = "0xBC11CC", VA = "0xBC11CC")]
	public InventoryFoldout()
	{
	}
}
[Token(Token = "0x20001B4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A5DC", Offset = "0x75A5DC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A5DC", Offset = "0x75A5DC")]
public class InventoryItem : MonoBehaviour
{
	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationSpeed;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float showupSpeed;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hidingSpeed;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer bubbleRenderer;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Item.Properties _itemData;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject itemProxy;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 itemCenterDelta;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 bubbleScale;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isOnHover;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool isHiding;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float hidingProgress;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action OnSpawned;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F558", Offset = "0x75F558")]
	public HapticClip bHapticsClipLeft;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public HapticClip bHapticsClipRight;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public HapticClip bHapticsVestClipLeft;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public HapticClip bHapticsVestClipRight;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float grabCooldown;

	[Token(Token = "0x170000CF")]
	public Item.Properties ItemData
	{
		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xBC1270", Offset = "0xBC1270", VA = "0xBC1270")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xBC0E54", Offset = "0xBC0E54", VA = "0xBC0E54")]
		set
		{
		}
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xBC1AE4", Offset = "0xBC1AE4", VA = "0xBC1AE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xBC1C10", Offset = "0xBC1C10", VA = "0xBC1C10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xBC1D70", Offset = "0xBC1D70", VA = "0xBC1D70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xBC1DC0", Offset = "0xBC1DC0", VA = "0xBC1DC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xBC1E4C", Offset = "0xBC1E4C", VA = "0xBC1E4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xBC21F8", Offset = "0xBC21F8", VA = "0xBC21F8")]
	private void OnHoverBegin(Hand hand)
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xBC244C", Offset = "0xBC244C", VA = "0xBC244C")]
	private void OnHoverEnd(Hand hand)
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xBC268C", Offset = "0xBC268C", VA = "0xBC268C")]
	private void OnHoverUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xBC1278", Offset = "0xBC1278", VA = "0xBC1278")]
	private void SetItemProxy()
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xBC2B04", Offset = "0xBC2B04", VA = "0xBC2B04")]
	private bool SetMeshProxy(int idx, GameObject proxy, GameObject itemPrefab, Renderer prefabMeshRenderer, out Bounds proxyBounds)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xBC27D8", Offset = "0xBC27D8", VA = "0xBC27D8")]
	private void SpawnItem(Hand hand)
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xBC0818", Offset = "0xBC0818", VA = "0xBC0818")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xBC0CB4", Offset = "0xBC0CB4", VA = "0xBC0CB4")]
	public bool IsHidden()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xBC303C", Offset = "0xBC303C", VA = "0xBC303C")]
	public InventoryItem()
	{
	}
}
[Token(Token = "0x20001B5")]
public class InvisibilityEffect : MonoBehaviour
{
	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color color1;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color color2;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float animFrequency;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer renderer;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material material;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float activeFactor;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isActive;

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xBC3B88", Offset = "0xBC3B88", VA = "0xBC3B88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xBC3C0C", Offset = "0xBC3C0C", VA = "0xBC3C0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xBC3C48", Offset = "0xBC3C48", VA = "0xBC3C48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xBC3E08", Offset = "0xBC3E08", VA = "0xBC3E08")]
	public void SetEffectActive(bool isActive)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xBC3E48", Offset = "0xBC3E48", VA = "0xBC3E48")]
	public InvisibilityEffect()
	{
	}
}
[Token(Token = "0x20001B6")]
public class Minimap : MonoBehaviour
{
	[Token(Token = "0x20003FD")]
	private struct PathData
	{
		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Room targetRoom;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool inUse;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Color color;
	}

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F590", Offset = "0x75F590")]
	public Material minimapMaterial;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material minimapIconMaterial;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int materialIndex;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int materialIndexLow;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform forwardDir;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float scaleFactor;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F5C8", Offset = "0x75F5C8")]
	public bool revealMap;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool unoperative;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F600", Offset = "0x75F600")]
	public float glitchLineSpeed;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool isGlitched;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x75F638", Offset = "0x75F638")]
	public Vector2 glitchLineTime;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F65C", Offset = "0x75F65C")]
	public Color[] pathColors;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioCue soundClipAddPath;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderTexture rtMap;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Texture2D gameOverMap;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool glitchLine;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float glitchLineProgress;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool glitchLineDownwards;

	[Token(Token = "0x4000EF5")]
	private const float glitchLineWidth = 0.05f;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material material;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Bounds levelBounds;

	[Token(Token = "0x4000EF8")]
	private const float padding = 0.05f;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<PathData> listPaths;

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xB8DB1C", Offset = "0xB8DB1C", VA = "0xB8DB1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xB8DE78", Offset = "0xB8DE78", VA = "0xB8DE78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xB8F46C", Offset = "0xB8F46C", VA = "0xB8F46C")]
	private void OnCheckSerializer()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xB8F520", Offset = "0xB8F520", VA = "0xB8F520")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xB8F6E0", Offset = "0xB8F6E0", VA = "0xB8F6E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xB8FF24", Offset = "0xB8FF24", VA = "0xB8FF24")]
	public Texture2D RenderGameOverMap()
	{
		return null;
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xB8DD90", Offset = "0xB8DD90", VA = "0xB8DD90")]
	private void ClearMap()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0xB8E14C", Offset = "0xB8E14C", VA = "0xB8E14C")]
	private void RenderMap([Optional] Room currentRoom, bool gameover = false)
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0xB90480", Offset = "0xB90480", VA = "0xB90480")]
	private void RenderRoomIcon(Vector3 roomCenter, int iconIdx, Color color)
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xB90728", Offset = "0xB90728", VA = "0xB90728")]
	private void RenderPath(Room currentRoom, Room targetRoom, Color pathColor)
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xB9010C", Offset = "0xB9010C", VA = "0xB9010C")]
	private Bounds GetRoomBounds(Room r)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xB8FDB8", Offset = "0xB8FDB8", VA = "0xB8FDB8")]
	private Vector3 MapToMinimap(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xB91288", Offset = "0xB91288", VA = "0xB91288")]
	private void OnEnterRoom(Room room)
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xB91290", Offset = "0xB91290", VA = "0xB91290")]
	private void OnPostSerialize()
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xB8E078", Offset = "0xB8E078", VA = "0xB8E078")]
	private void ScheduleGlitchLine()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xB91330", Offset = "0xB91330", VA = "0xB91330")]
	private void PlayGlitchLine()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xB91384", Offset = "0xB91384", VA = "0xB91384")]
	public void SetGlitchedEMPulse(float duration)
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xB91454", Offset = "0xB91454", VA = "0xB91454")]
	private void StopGlitched()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xB9145C", Offset = "0xB9145C", VA = "0xB9145C")]
	public int AddPath(Room targetRoom, out Color color, bool playSound = false)
	{
		return default(int);
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xB91798", Offset = "0xB91798", VA = "0xB91798")]
	public void DeserializePath(int idx, Room targetRoom, Color color)
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xB919A8", Offset = "0xB919A8", VA = "0xB919A8")]
	public void RemovePath(int idx)
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xB91B3C", Offset = "0xB91B3C", VA = "0xB91B3C")]
	public Minimap()
	{
	}
}
[Token(Token = "0x20001B7")]
public class OxygenCounter : MonoBehaviour
{
	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float oxygen;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float decreaseRate;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float damageTime;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int damageAmount;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float damageCooldown;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioCue breathingLowSound;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource breathingLowSoundSrc;

	[Token(Token = "0x14000018")]
	public event Action onDecrease
	{
		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xB98DC8", Offset = "0xB98DC8", VA = "0xB98DC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766380", Offset = "0x766380")]
		add
		{
		}
		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xB98E6C", Offset = "0xB98E6C", VA = "0xB98E6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766390", Offset = "0x766390")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event Action onIncrease
	{
		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xB98F10", Offset = "0xB98F10", VA = "0xB98F10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7663A0", Offset = "0x7663A0")]
		add
		{
		}
		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xB98FB4", Offset = "0xB98FB4", VA = "0xB98FB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7663B0", Offset = "0x7663B0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xB99058", Offset = "0xB99058", VA = "0xB99058")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xB99110", Offset = "0xB99110", VA = "0xB99110")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xB98DA8", Offset = "0xB98DA8", VA = "0xB98DA8")]
	public void Refill()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xB993E8", Offset = "0xB993E8", VA = "0xB993E8")]
	public OxygenCounter()
	{
	}
}
[Token(Token = "0x20001B8")]
public class OxygenWatch : PlayerWatch
{
	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public OxygenCounter oxygenCounter;

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xB99410", Offset = "0xB99410", VA = "0xB99410")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xB994D0", Offset = "0xB994D0", VA = "0xB994D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xB99590", Offset = "0xB99590", VA = "0xB99590")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xB995C8", Offset = "0xB995C8", VA = "0xB995C8")]
	private void OnChange()
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xB995E8", Offset = "0xB995E8", VA = "0xB995E8")]
	public OxygenWatch()
	{
	}
}
[Token(Token = "0x20001B9")]
public class PauseVisibilityToggler : MonoBehaviour
{
	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Renderer> renderers;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Light> lights;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75F6B4", Offset = "0x75F6B4")]
	public bool _toggleTest;

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x9E47D0", Offset = "0x9E47D0", VA = "0x9E47D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x9E48C0", Offset = "0x9E48C0", VA = "0x9E48C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x9E49B0", Offset = "0x9E49B0", VA = "0x9E49B0")]
	private void OnPauseChange(bool paused)
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x9E49BC", Offset = "0x9E49BC", VA = "0x9E49BC")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x9E4E6C", Offset = "0x9E4E6C", VA = "0x9E4E6C")]
	public void ToggleTest()
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x9E4ED4", Offset = "0x9E4ED4", VA = "0x9E4ED4")]
	public PauseVisibilityToggler()
	{
	}
}
[Token(Token = "0x20001BA")]
public class Player : Singleton<Player>
{
	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float defaultCameraHeight;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform centerEye;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Hand leftHand;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Hand rightHand;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform mouth;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform body;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 lastSafePosition;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 bodyFacingDir;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F6EC", Offset = "0x75F6EC")]
	public Holster holsterLeft;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Holster holsterRight;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public UIOptionsMenu optionsMenu;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TrackedClip eyeClip;

	[Token(Token = "0x170000D0")]
	public static Transform CenterEye
	{
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x9E7238", Offset = "0x9E7238", VA = "0x9E7238")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D1")]
	public static Hand LeftHand
	{
		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x9E7294", Offset = "0x9E7294", VA = "0x9E7294")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D2")]
	public static Hand RightHand
	{
		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x9E72F0", Offset = "0x9E72F0", VA = "0x9E72F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D3")]
	public static Hand PrimaryHand
	{
		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x9E734C", Offset = "0x9E734C", VA = "0x9E734C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D4")]
	public static Hand SecondaryHand
	{
		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x9E73C0", Offset = "0x9E73C0", VA = "0x9E73C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D5")]
	public static Vector3 BodyFacingDir
	{
		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x9E74F4", Offset = "0x9E74F4", VA = "0x9E74F4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000D6")]
	public static Vector3 Position
	{
		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x9E7554", Offset = "0x9E7554", VA = "0x9E7554")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000D7")]
	public static Holster HolsterLeft
	{
		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x9E7638", Offset = "0x9E7638", VA = "0x9E7638")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D8")]
	public static Holster HolsterRight
	{
		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x9E7694", Offset = "0x9E7694", VA = "0x9E7694")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x9E7434", Offset = "0x9E7434", VA = "0x9E7434")]
	public static Hand GetHand(Hand.Handedness handedness)
	{
		return null;
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x9E76F0", Offset = "0x9E76F0", VA = "0x9E76F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x9E7A40", Offset = "0x9E7A40", VA = "0x9E7A40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x9E7D74", Offset = "0x9E7D74", VA = "0x9E7D74")]
	public void Serialize(GameState gs)
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x9E7F5C", Offset = "0x9E7F5C", VA = "0x9E7F5C")]
	public void Deserialize(GameState gs)
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x9E81B8", Offset = "0x9E81B8", VA = "0x9E81B8")]
	public void Reposition(Vector3 newPos, bool abortJump = true)
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x9E84FC", Offset = "0x9E84FC", VA = "0x9E84FC")]
	public void Rotate(float rotation)
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x9E865C", Offset = "0x9E865C", VA = "0x9E865C")]
	public Vector3 GetTrackingDelta()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x9E8410", Offset = "0x9E8410", VA = "0x9E8410")]
	public void UpdateSafePosition()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x9E8740", Offset = "0x9E8740", VA = "0x9E8740")]
	public Vector3 CenterEyeClipped()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x9E8878", Offset = "0x9E8878", VA = "0x9E8878")]
	public Player()
	{
	}
}
[Token(Token = "0x20001BB")]
public class PlayerBHapticsReceiver : MonoBehaviour
{
	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClip kineticDamageClip;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HapticClip fireDamageClip;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HapticClip electricalDamageClip;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HapticClip organicDamageClip;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HapticClip explosiveDamageClip;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HapticClip lowHealthClip;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int lowHealthLimit;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HapticClip veryLowHealthClip;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int veryLowHealthLimit;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int lowHealthTask;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Health health;

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x9E88D0", Offset = "0x9E88D0", VA = "0x9E88D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x9E89A0", Offset = "0x9E89A0", VA = "0x9E89A0")]
	private void OnReceiveDamage(int damagePoints, Health.DamageType damageType, Health.Faction faction, Vector3 originPoint)
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x9E8BC4", Offset = "0x9E8BC4", VA = "0x9E8BC4")]
	private float ComputeAngle(Vector3 originPoint)
	{
		return default(float);
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x9E8D14", Offset = "0x9E8D14", VA = "0x9E8D14")]
	private void StopBHapticsLowHealth()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x9E8D84", Offset = "0x9E8D84", VA = "0x9E8D84")]
	private void LoopBHapticsLowHealth()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x9E8E88", Offset = "0x9E8E88", VA = "0x9E8E88")]
	public PlayerBHapticsReceiver()
	{
	}
}
[Token(Token = "0x20001BC")]
public class PlayerBodyAttachment : MonoBehaviour
{
	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform playerHead;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float deltaHeight;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distanceInFront;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool keepCentered;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool keepPositioned;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool checkCollisions;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask collisionMask;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float collisionMargin;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform playerMainTransform;

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x9E8EA4", Offset = "0x9E8EA4", VA = "0x9E8EA4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x9E8F14", Offset = "0x9E8F14", VA = "0x9E8F14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x9E9228", Offset = "0x9E9228", VA = "0x9E9228")]
	public void Recenter(bool reposition = false)
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x9E8F5C", Offset = "0x9E8F5C", VA = "0x9E8F5C")]
	public void Reposition()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x9E9328", Offset = "0x9E9328", VA = "0x9E9328")]
	public PlayerBodyAttachment()
	{
	}
}
[Token(Token = "0x20001BD")]
public class PlayerFlashlight : MonoBehaviour
{
	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light light;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VolumetricLightBeam lightBeam;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask collisionMask;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer emissionObj;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material emissiveMat;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color emissionColor;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioCue toggleSound;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Triggable toggle;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlayerFlashlight otherHandLight;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _activated;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool isBlinking;

	[Token(Token = "0x170000D9")]
	public bool Activated
	{
		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x9E9350", Offset = "0x9E9350", VA = "0x9E9350")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x9E81B0", Offset = "0x9E81B0", VA = "0x9E81B0")]
		set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public float Range
	{
		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x9E94C4", Offset = "0x9E94C4", VA = "0x9E94C4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000DB")]
	public float Angle
	{
		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x9E94E0", Offset = "0x9E94E0", VA = "0x9E94E0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x9E94FC", Offset = "0x9E94FC", VA = "0x9E94FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x9E9638", Offset = "0x9E9638", VA = "0x9E9638")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x9E9754", Offset = "0x9E9754", VA = "0x9E9754")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x9E9870", Offset = "0x9E9870", VA = "0x9E9870")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x9E997C", Offset = "0x9E997C", VA = "0x9E997C")]
	public float IsLit(Vector3 position)
	{
		return default(float);
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x9E9C54", Offset = "0x9E9C54", VA = "0x9E9C54")]
	private void OnToggle(Hand hand)
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x9E9358", Offset = "0x9E9358", VA = "0x9E9358")]
	private void SetActivated(bool newValue)
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x9E9D28", Offset = "0x9E9D28", VA = "0x9E9D28")]
	public void SetBlinkPulse(float duration)
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x9E9E04", Offset = "0x9E9E04", VA = "0x9E9E04")]
	private void StopBlink()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x9E9E10", Offset = "0x9E9E10", VA = "0x9E9E10")]
	public PlayerFlashlight()
	{
	}
}
[Token(Token = "0x20001BE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A668", Offset = "0x75A668")]
public class PlayerHandModel : TimeIndependentBehaviour
{
	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool canPoint;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool canThumbsUp;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Hand hand;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator animator;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int animParamFlex;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int animParamPose;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int animParamPinch;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int animParamCustomPose;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int animLayerPoint;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int animLayerThumbsUp;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float pointBlend;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float thumbsUpBlend;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int customPoseIdx;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool overrideFlex;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float overrideFlexValue;

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x9E9E18", Offset = "0x9E9E18", VA = "0x9E9E18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x9EA01C", Offset = "0x9EA01C", VA = "0x9EA01C", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x9EA1E8", Offset = "0x9EA1E8", VA = "0x9EA1E8")]
	private float SmoothBlendingValue(bool active, float curValue)
	{
		return default(float);
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x9EA1BC", Offset = "0x9EA1BC", VA = "0x9EA1BC")]
	public void SetCustomPose(int idx = 0)
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x9EA290", Offset = "0x9EA290", VA = "0x9EA290")]
	public void OverrideFlex(float newValue)
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x9EA2A0", Offset = "0x9EA2A0", VA = "0x9EA2A0")]
	public PlayerHandModel()
	{
	}
}
[Token(Token = "0x20001BF")]
public class PlayerInvisibility : MonoBehaviour
{
	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InvisibilityEffect screenEffect;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VisionTarget visionTarget;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerFlashlight[] flashLights;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isActive;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool[] flashLightStates;

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x9EA350", Offset = "0x9EA350", VA = "0x9EA350")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x9EA428", Offset = "0x9EA428", VA = "0x9EA428")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x9EA430", Offset = "0x9EA430", VA = "0x9EA430")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x9EA50C", Offset = "0x9EA50C", VA = "0x9EA50C")]
	public void StartEffect()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x9EA5D4", Offset = "0x9EA5D4", VA = "0x9EA5D4")]
	public void StopEffect()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x9EA6EC", Offset = "0x9EA6EC", VA = "0x9EA6EC")]
	public PlayerInvisibility()
	{
	}
}
[Token(Token = "0x20001C0")]
public class PlayerMovement : MonoBehaviour
{
	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxReach;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool snapToGrid;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float snapSize;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask floorLayer;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask collisionLayer;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform referencePoint;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject teleportIconPrefab;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject teleportIcon;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportArc teleportArc;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color colorValid;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color colorInvalid;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool showingArc;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool useEnergy;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float minReach;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float energyRechargeRate;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float energy;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool animateTeleport;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float tpMoveDuration;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool animatingPos;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float timePos;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 lastPos;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 newPos;

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x9EA6F4", Offset = "0x9EA6F4", VA = "0x9EA6F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x9EA7C8", Offset = "0x9EA7C8", VA = "0x9EA7C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x9EAF94", Offset = "0x9EAF94", VA = "0x9EAF94")]
	private void DoTeleport(Vector3 destinationPos)
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x9EB138", Offset = "0x9EB138", VA = "0x9EB138")]
	public PlayerMovement()
	{
	}
}
[Token(Token = "0x20001C1")]
public class PlayerMovementJump : MonoBehaviour
{
	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxReach;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool snapToGrid;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float snapSize;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask floorLayer;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask collisionLayer;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask collisionLOSCheckLayer;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform referencePoint;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform referencePointRight;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform referencePointLeft;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float capsuleCheckRadius;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float chestCheckRadius;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool snapToSafePos;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float snapSafeDist;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float snapSafeMargin;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool snapArcVisualsToSafe;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TeleportIconAnim teleportIconPrefab;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TeleportIconAnim teleportIconInvalidPrefab;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TeleportIconAnim teleportIcon;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TeleportIconAnim teleportIconInvalid;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TeleportArc teleportArc;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color colorValid;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color colorInvalid;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool showingArc;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool useEnergy;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float minReach;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float energyRechargeRate;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float energy;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool animateTeleport;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool fastJump;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float tpMoveSpeed;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float maxJumpHeight;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float maxJumpRange;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float speedFactor;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float fastJumpDuration;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioCue startSound;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioCue endSound;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool animatingPos;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float timePos;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float totalTimeJump;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float jumpHeight;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 lastPos;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Vector3 newPos;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private PlayerRotation playerRotation;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private TrackedClip eyeClip;

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x9EB174", Offset = "0x9EB174", VA = "0x9EB174")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x9EB36C", Offset = "0x9EB36C", VA = "0x9EB36C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x9ED10C", Offset = "0x9ED10C", VA = "0x9ED10C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x9E8408", Offset = "0x9E8408", VA = "0x9E8408")]
	public void AbortJump()
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x9EC9CC", Offset = "0x9EC9CC", VA = "0x9EC9CC")]
	private bool FindSafePoint(Vector3 safePoint, Vector3 toSnapPos, out Vector3 result)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x9ECE7C", Offset = "0x9ECE7C", VA = "0x9ECE7C")]
	private void DoTeleport(Vector3 destinationPos)
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x9ED114", Offset = "0x9ED114", VA = "0x9ED114")]
	public void ApplyTrackingDeltaCorrection(Vector3 trackingDeltaCorrection)
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x9ED200", Offset = "0x9ED200", VA = "0x9ED200")]
	public PlayerMovementJump()
	{
	}
}
[Token(Token = "0x20001C2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A6CC", Offset = "0x75A6CC")]
public class PlayerMovementSmoothWalk : MonoBehaviour
{
	[Token(Token = "0x20003FE")]
	public enum EForwardsReference
	{
		[Token(Token = "0x4001C17")]
		LookDirection,
		[Token(Token = "0x4001C18")]
		LeftHand,
		[Token(Token = "0x4001C19")]
		RightHand
	}

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float walkSpeed;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float walkBackwardsSpeedFactor;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float strafeSpeedFactor;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speedFactor;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EForwardsReference forwardsReference;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float gravity;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioCue footstepsSound;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float footstepLength;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x75F734", Offset = "0x75F734")]
	public Vector2 footstepStart;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioCue fallLandSound;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float fallLandSpeed;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isGrounded;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool adjustableHeight;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool limitMotion;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float fallSpeed;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CharacterController charController;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform trackingRoot;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float footstep;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TrackedClip eyeClip;

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x9ED268", Offset = "0x9ED268", VA = "0x9ED268")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x9ED3E8", Offset = "0x9ED3E8", VA = "0x9ED3E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x9EE670", Offset = "0x9EE670", VA = "0x9EE670")]
	private Transform GetForwardsRef()
	{
		return null;
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x9EE6B8", Offset = "0x9EE6B8", VA = "0x9EE6B8")]
	public PlayerMovementSmoothWalk()
	{
	}
}
[Token(Token = "0x20001C3")]
public class PlayerRoomTracker : MonoBehaviour
{
	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Room currentRoom;

	[Token(Token = "0x1400001A")]
	public event Action<Room> onEnterRoom
	{
		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x9EE8F4", Offset = "0x9EE8F4", VA = "0x9EE8F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7663C0", Offset = "0x7663C0")]
		add
		{
		}
		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x9EE998", Offset = "0x9EE998", VA = "0x9EE998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7663D0", Offset = "0x7663D0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event Action<Room> onExitRoom
	{
		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x9EEA3C", Offset = "0x9EEA3C", VA = "0x9EEA3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7663E0", Offset = "0x7663E0")]
		add
		{
		}
		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x9EEAE0", Offset = "0x9EEAE0", VA = "0x9EEAE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7663F0", Offset = "0x7663F0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x9EEB84", Offset = "0x9EEB84", VA = "0x9EEB84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x9EED54", Offset = "0x9EED54", VA = "0x9EED54")]
	public PlayerRoomTracker()
	{
	}
}
[Token(Token = "0x20001C4")]
public class PlayerRotation : MonoBehaviour
{
	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationAngle;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool smooth;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float smoothSpeed;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float smoothSpeedFactor;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool bothHands;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool lockedMovement;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[HideInInspector]
	public bool lockedLeftHand;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	[HideInInspector]
	public bool lockedRightHand;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TrackedClip eyeClip;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TrackedClip[] handClips;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] handClipPos;

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x9EED5C", Offset = "0x9EED5C", VA = "0x9EED5C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x9EF634", Offset = "0x9EF634", VA = "0x9EF634")]
	public PlayerRotation()
	{
	}
}
[Token(Token = "0x20001C5")]
public class PlayerSetup : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003FF")]
	public struct ControllerOffsets
	{
		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InputExt.EControllerType controllerType;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 offsetRight;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 offsetLeft;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 rotRight;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 rotLeft;
	}

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isVR;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform trackingSpace;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F794", Offset = "0x75F794")]
	public bool smoothLocomotion;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool smoothRotation;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool forbidLocomotion;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool forbidRotation;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F7CC", Offset = "0x75F7CC")]
	public PlayerMovementJump movementJumpController;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F804", Offset = "0x75F804")]
	public PlayerMovementSmoothWalk movementSmoothController;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CharacterController characterController;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F83C", Offset = "0x75F83C")]
	public PlayerRotation rotationController;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F874", Offset = "0x75F874")]
	public GameObject braceletLeft;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject braceletRight;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UIGoalsMenu goalsMenu;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform leftGoalsAnchor;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform rightGoalsAnchor;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75F8AC", Offset = "0x75F8AC")]
	public ControllerOffsets[] controllerOffsets;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private InputExt.EControllerType activeControllerType;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75F8E4", Offset = "0x75F8E4")]
	public bool _SetupControllerOffsets;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75F944", Offset = "0x75F944")]
	public bool _RecenterTracking;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	private bool needRecenterAfterHMDRemoved;

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x9EF6D8", Offset = "0x9EF6D8", VA = "0x9EF6D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x9EF828", Offset = "0x9EF828", VA = "0x9EF828")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x9EF978", Offset = "0x9EF978", VA = "0x9EF978")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x9EFB4C", Offset = "0x9EFB4C", VA = "0x9EFB4C")]
	public void SetupHeight()
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x9F08E4", Offset = "0x9F08E4", VA = "0x9F08E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x9EFD68", Offset = "0x9EFD68", VA = "0x9EFD68")]
	public void SetupLocomotion()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x9F0120", Offset = "0x9F0120", VA = "0x9F0120")]
	public void SetupBracelets()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x9F02CC", Offset = "0x9F02CC", VA = "0x9F02CC")]
	public void SetupHands()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x9F036C", Offset = "0x9F036C", VA = "0x9F036C")]
	public void SetupControllerOffsets()
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x9F06F0", Offset = "0x9F06F0", VA = "0x9F06F0")]
	public void RecenterTracking()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x9F0930", Offset = "0x9F0930", VA = "0x9F0930")]
	private void OnRecenterEvent()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x9F0A2C", Offset = "0x9F0A2C", VA = "0x9F0A2C")]
	private void OnHMDMounted()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x9F0A40", Offset = "0x9F0A40", VA = "0x9F0A40")]
	private void OnHMDUnmounted()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x9F0A4C", Offset = "0x9F0A4C", VA = "0x9F0A4C")]
	public PlayerSetup()
	{
	}
}
[Token(Token = "0x20001C6")]
public class PlayerWatch : MonoBehaviour
{
	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Material material;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int materialIndex;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int materialIndexLow;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected float targetProgress;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float currentProgress;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float animProgressSpeed;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected Color baseColor;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color flashColor;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float flashTime;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected float flashCountdown;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float lowHealthFlashTime;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource alarmSound;

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x9F0A5C", Offset = "0x9F0A5C", VA = "0x9F0A5C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x9F0B40", Offset = "0x9F0B40", VA = "0x9F0B40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x9F0E00", Offset = "0x9F0E00", VA = "0x9F0E00")]
	public void SetValue(float newValue, bool addFlash = false)
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x9F0E14", Offset = "0x9F0E14", VA = "0x9F0E14")]
	public PlayerWatch()
	{
	}
}
[Token(Token = "0x20001C7")]
public class PrefabCollection : MonoBehaviour
{
	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PrefabCollectionData collectionData;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool randomizeOnStart;

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x9F3BAC", Offset = "0x9F3BAC", VA = "0x9F3BAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x9F3D90", Offset = "0x9F3D90", VA = "0x9F3D90")]
	public PrefabCollection()
	{
	}
}
[Token(Token = "0x20001C8")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x75A730", Offset = "0x75A730")]
public class PrefabCollectionData : ScriptableObject
{
	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] prefabs;

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x9F3D98", Offset = "0x9F3D98", VA = "0x9F3D98")]
	public PrefabCollectionData()
	{
	}
}
[Token(Token = "0x20001C9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A774", Offset = "0x75A774")]
public class DraggableLinearSerializer : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xA189CC", Offset = "0xA189CC", VA = "0xA189CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xA189D8", Offset = "0xA189D8", VA = "0xA189D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xA189E0", Offset = "0xA189E0", VA = "0xA189E0", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xA18A44", Offset = "0xA18A44", VA = "0xA18A44", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xA18BD8", Offset = "0xA18BD8", VA = "0xA18BD8", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xA18BDC", Offset = "0xA18BDC", VA = "0xA18BDC")]
	public DraggableLinearSerializer()
	{
	}
}
[Token(Token = "0x20001CA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A7D8", Offset = "0x75A7D8")]
public class DraggableRotSerializer : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xA18D10", Offset = "0xA18D10", VA = "0xA18D10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xA18D1C", Offset = "0xA18D1C", VA = "0xA18D1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xA18D24", Offset = "0xA18D24", VA = "0xA18D24", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xA18D88", Offset = "0xA18D88", VA = "0xA18D88", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xA18E80", Offset = "0xA18E80", VA = "0xA18E80", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xA18E84", Offset = "0xA18E84", VA = "0xA18E84")]
	public DraggableRotSerializer()
	{
	}
}
[Token(Token = "0x20001CB")]
public interface IGameSerializable
{
	[Token(Token = "0x6000F83")]
	string SerializeState();

	[Token(Token = "0x6000F84")]
	void DeserializeState(string dataString);

	[Token(Token = "0x6000F85")]
	void DeserializeDestroy();
}
[Token(Token = "0x20001CC")]
public class ItemsTracker : MonoBehaviour, IGameSerializable
{
	[Serializable]
	[Token(Token = "0x2000400")]
	public class SerializedItems
	{
		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] itemsPos;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Quaternion[] itemsRot;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Item.Properties[] itemsProperties;

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xBCD66C", Offset = "0xBCD66C", VA = "0xBCD66C")]
		public SerializedItems()
		{
		}
	}

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Item> trackedItems;

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xBCD1B0", Offset = "0xBCD1B0", VA = "0xBCD1B0", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xBCD674", Offset = "0xBCD674", VA = "0xBCD674", Slot = "5")]
	public void DeserializeState(string jsonString)
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xBCD7F8", Offset = "0xBCD7F8", VA = "0xBCD7F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xBCD854", Offset = "0xBCD854", VA = "0xBCD854")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0xBCD948", Offset = "0xBCD948", VA = "0xBCD948")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xBCDA44", Offset = "0xBCDA44", VA = "0xBCDA44")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0xBCDB44", Offset = "0xBCDB44", VA = "0xBCDB44", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0xBCDB48", Offset = "0xBCDB48", VA = "0xBCDB48")]
	public ItemsTracker()
	{
	}
}
[Token(Token = "0x20001CD")]
public class Savegame
{
	[Serializable]
	[Token(Token = "0x2000401")]
	public struct ObjData
	{
		[Token(Token = "0x200049B")]
		public enum Type
		{
			[Token(Token = "0x4001EB8")]
			Generic,
			[Token(Token = "0x4001EB9")]
			Item,
			[Token(Token = "0x4001EBA")]
			Agent
		}

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Type type;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool exists;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string data;
	}

	[Token(Token = "0x2000402")]
	public class Serializer
	{
		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Pair<IGameSerializable, ObjData.Type>> listSerializables;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<IGameSerializable, int> dictSerializables;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool deserializing;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool serializationAllowed;

		[Token(Token = "0x17000216")]
		public bool Deserializing
		{
			[Token(Token = "0x6001ADB")]
			[Address(RVA = "0x9087F8", Offset = "0x9087F8", VA = "0x9087F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400003B")]
		public event Action onPostDeserialization
		{
			[Token(Token = "0x6001ADC")]
			[Address(RVA = "0x908800", Offset = "0x908800", VA = "0x908800")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7683F8", Offset = "0x7683F8")]
			add
			{
			}
			[Token(Token = "0x6001ADD")]
			[Address(RVA = "0x9088A4", Offset = "0x9088A4", VA = "0x9088A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768408", Offset = "0x768408")]
			remove
			{
			}
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x907CA8", Offset = "0x907CA8", VA = "0x907CA8")]
		public void Register(IGameSerializable obj, ObjData.Type type)
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x907EB0", Offset = "0x907EB0", VA = "0x907EB0")]
		public void Unregister(IGameSerializable obj)
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x9080E0", Offset = "0x9080E0", VA = "0x9080E0")]
		public int GetRegistrationId(IGameSerializable obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x908298", Offset = "0x908298", VA = "0x908298")]
		public IGameSerializable GetRegisteredObj(int id)
		{
			return null;
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x908948", Offset = "0x908948", VA = "0x908948")]
		public Savegame Serialize()
		{
			return null;
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x908D28", Offset = "0x908D28", VA = "0x908D28")]
		public static void DeserializePreGeneration(Savegame save)
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x908DD0", Offset = "0x908DD0", VA = "0x908DD0")]
		public void DeserializePostGeneration(Savegame save)
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x909328", Offset = "0x909328", VA = "0x909328")]
		public Serializer()
		{
		}
	}

	[Token(Token = "0x2000403")]
	private struct TransformState
	{
		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 scale;

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x908604", Offset = "0x908604", VA = "0x908604")]
		public TransformState(Transform xform)
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x908708", Offset = "0x908708", VA = "0x908708")]
		public void Apply(Transform xform, bool applyScale = false)
		{
		}
	}

	[Token(Token = "0x4000FCE")]
	private const int saveVersion = 85;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string gameVersion;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int version;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string gameState;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string playerXForm;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ObjData[] objects;

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x907924", Offset = "0x907924", VA = "0x907924")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x90792C", Offset = "0x90792C", VA = "0x90792C")]
	public static Savegame DeserializeState(string dataString)
	{
		return null;
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x907B68", Offset = "0x907B68", VA = "0x907B68")]
	public static void Register(IGameSerializable obj, ObjData.Type type)
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x907D78", Offset = "0x907D78", VA = "0x907D78")]
	public static void Unregister(IGameSerializable obj)
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x907FA4", Offset = "0x907FA4", VA = "0x907FA4")]
	public static int GetRegistrationId(IGameSerializable obj)
	{
		return default(int);
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x90815C", Offset = "0x90815C", VA = "0x90815C")]
	public static IGameSerializable GetRegisteredObj(int id)
	{
		return null;
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x908320", Offset = "0x908320", VA = "0x908320")]
	public static Serializer GetSerializer()
	{
		return null;
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x908444", Offset = "0x908444", VA = "0x908444")]
	public static bool IsDeserializing()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x908570", Offset = "0x908570", VA = "0x908570")]
	public static string SerializeTransform(Transform xform)
	{
		return null;
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x908668", Offset = "0x908668", VA = "0x908668")]
	public static void DeserializeTransform(Transform xform, string dataString, bool applyScale = false)
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x908788", Offset = "0x908788", VA = "0x908788")]
	public static Vector3 GetTransformPos(string dataString)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x9087F0", Offset = "0x9087F0", VA = "0x9087F0")]
	public Savegame()
	{
	}
}
[Token(Token = "0x20001CE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A83C", Offset = "0x75A83C")]
public class AnimVertexColors : MonoBehaviour
{
	[Token(Token = "0x4000FD4")]
	private const float highFreqScale = 100000f;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lowFreqScale;

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0xB6A6E8", Offset = "0xB6A6E8", VA = "0xB6A6E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0xB6AAF4", Offset = "0xB6AAF4", VA = "0xB6AAF4")]
	public AnimVertexColors()
	{
	}
}
[Token(Token = "0x20001CF")]
public class AnimWarper : MonoBehaviour
{
	[Token(Token = "0x2000404")]
	private class BoneState
	{
		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int depth;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 deltaPos;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 deltaScale;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 startPos;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion startRot;

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xB6B134", Offset = "0xB6B134", VA = "0xB6B134")]
		public BoneState(Transform bone, int boneDepth)
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xB6BFD4", Offset = "0xB6BFD4", VA = "0xB6BFD4")]
		public void AddPos(Vector3 delta)
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xB6C15C", Offset = "0xB6C15C", VA = "0xB6C15C")]
		public void AddScale(float scale)
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xB6C088", Offset = "0xB6C088", VA = "0xB6C088")]
		public void AddScale(Vector3 scale)
		{
		}
	}

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform head;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform root;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer bodyRenderer;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer eyesRenderer;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, BoneState> bonesDict;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] warpWave;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Transform>[] warpWaveBones;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75F97C", Offset = "0x75F97C")]
	public float warpIntensity;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform[] warpScale;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Transform>[] warpScaleBones;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75F994", Offset = "0x75F994")]
	public float scaleIntensity;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 curveDirection;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75F9AC", Offset = "0x75F9AC")]
	public float curveIntensity;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75F9C4", Offset = "0x75F9C4")]
	public float headTracking;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x75F9DC", Offset = "0x75F9DC")]
	public float verticalCollapse;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CapsuleCollider capCollider;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float capsuleHeight;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 capsuleCenter;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float minColliderFactor;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float waiter;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool inited;

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0xB6AB04", Offset = "0xB6AB04", VA = "0xB6AB04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xB6AC38", Offset = "0xB6AC38", VA = "0xB6AC38")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xB6AF4C", Offset = "0xB6AF4C", VA = "0xB6AF4C")]
	private void AddBonesToDict(Transform bone, int depth = 0)
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xB6B064", Offset = "0xB6B064", VA = "0xB6B064")]
	private void AddBonesToList(Transform bone, List<Transform> list)
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xB6B218", Offset = "0xB6B218", VA = "0xB6B218")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xB6B56C", Offset = "0xB6B56C", VA = "0xB6B56C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xB6BF54", Offset = "0xB6BF54", VA = "0xB6BF54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xB6B77C", Offset = "0xB6B77C", VA = "0xB6B77C")]
	private void ApplyWarpWave()
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xB6B9F8", Offset = "0xB6B9F8", VA = "0xB6B9F8")]
	private void ApplyWarpScale()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xB6BCA4", Offset = "0xB6BCA4", VA = "0xB6BCA4")]
	private void ApplyCurve()
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xB6B274", Offset = "0xB6B274", VA = "0xB6B274")]
	public void ApplyVerticalCollapse()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xB6BF58", Offset = "0xB6BF58", VA = "0xB6BF58")]
	private BoneState GetBone(Transform bone)
	{
		return null;
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xB6C0E4", Offset = "0xB6C0E4", VA = "0xB6C0E4")]
	public AnimWarper()
	{
	}
}
[Token(Token = "0x20001D0")]
public class DbgObjectReposition : MonoBehaviour
{
	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distToPlayer;

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x970D6C", Offset = "0x970D6C", VA = "0x970D6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x970E48", Offset = "0x970E48", VA = "0x970E48")]
	private void Reposition()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x971000", Offset = "0x971000", VA = "0x971000")]
	public DbgObjectReposition()
	{
	}
}
[Token(Token = "0x20001D1")]
public class LoopMoveTest : MonoBehaviour
{
	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ILocomotion loco;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75F9F4", Offset = "0x75F9F4")]
	public bool _testWalk;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75FA38", Offset = "0x75FA38")]
	public bool _testHit;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75FA7C", Offset = "0x75FA7C")]
	public bool _testAngry;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75FAC0", Offset = "0x75FAC0")]
	public bool _testDie;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75FB04", Offset = "0x75FB04")]
	public bool _testDisappear;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75FB48", Offset = "0x75FB48")]
	public bool _testMeltUp;

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xA3ABD8", Offset = "0xA3ABD8", VA = "0xA3ABD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xA3AC60", Offset = "0xA3AC60", VA = "0xA3AC60")]
	private void TryWalk()
	{
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xA3ACD8", Offset = "0xA3ACD8", VA = "0xA3ACD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xA3ACDC", Offset = "0xA3ACDC", VA = "0xA3ACDC")]
	private void TestWalk()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xA3AD60", Offset = "0xA3AD60", VA = "0xA3AD60")]
	private void TestHit()
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xA3ADF4", Offset = "0xA3ADF4", VA = "0xA3ADF4")]
	private void TestAngry()
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xA3AF20", Offset = "0xA3AF20", VA = "0xA3AF20")]
	private void TestDie()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xA3AFAC", Offset = "0xA3AFAC", VA = "0xA3AFAC")]
	private void TestDisappear()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xA3B030", Offset = "0xA3B030", VA = "0xA3B030")]
	private void TestMeltUp()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xA3B0FC", Offset = "0xA3B0FC", VA = "0xA3B0FC")]
	public LoopMoveTest()
	{
	}
}
[Token(Token = "0x20001D2")]
public class OcclusionVerifier : MonoBehaviour
{
	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xB98934", Offset = "0xB98934", VA = "0xB98934")]
	public OcclusionVerifier()
	{
	}
}
[Token(Token = "0x20001D3")]
public class TentacleTest : MonoBehaviour
{
	[Token(Token = "0x2000405")]
	public enum TailType
	{
		[Token(Token = "0x4001C34")]
		thin,
		[Token(Token = "0x4001C35")]
		fish
	}

	[Token(Token = "0x2000406")]
	public enum TailMode
	{
		[Token(Token = "0x4001C37")]
		CurlUpLeft,
		[Token(Token = "0x4001C38")]
		CurlUpRight,
		[Token(Token = "0x4001C39")]
		Wiggle
	}

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TailType tailtype;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TailMode tailMode;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool alive;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh mesh;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material material;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float angle;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float length;

	[Token(Token = "0x4000FFB")]
	public const int segmentCount = 30;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] segments;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] targets;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] frequency;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] amplitude;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float offset;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int count;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] vertices;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] uvs;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Color[] colours;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int[] indices;

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0x9BEF54", Offset = "0x9BEF54", VA = "0x9BEF54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0x9BF2B0", Offset = "0x9BF2B0", VA = "0x9BF2B0")]
	private void SetTargetAngle(float angle)
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0x9BF2FC", Offset = "0x9BF2FC", VA = "0x9BF2FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x9BFA44", Offset = "0x9BFA44", VA = "0x9BFA44")]
	private void Die()
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x9BFA7C", Offset = "0x9BFA7C", VA = "0x9BFA7C")]
	public TentacleTest()
	{
	}
}
[Token(Token = "0x20001D4")]
public class TestAnim : MonoBehaviour
{
	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x9C246C", Offset = "0x9C246C", VA = "0x9C246C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x9C24E8", Offset = "0x9C24E8", VA = "0x9C24E8")]
	public TestAnim()
	{
	}
}
[Token(Token = "0x20001D5")]
public class TestArmatureRescale : MonoBehaviour
{
	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float factor;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x75FB8C", Offset = "0x75FB8C")]
	public bool _reScale;

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x9C24F0", Offset = "0x9C24F0", VA = "0x9C24F0")]
	public void ReScale()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x9C27DC", Offset = "0x9C27DC", VA = "0x9C27DC")]
	public TestArmatureRescale()
	{
	}
}
[Token(Token = "0x20001D6")]
public class TestControllerRotation : MonoBehaviour
{
	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x9C27EC", Offset = "0x9C27EC", VA = "0x9C27EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x9C27F0", Offset = "0x9C27F0", VA = "0x9C27F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x9C27F4", Offset = "0x9C27F4", VA = "0x9C27F4")]
	public TestControllerRotation()
	{
	}
}
[Token(Token = "0x20001D7")]
public class TestDecal : MonoBehaviour
{
	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StaticProxyCollection proxyCollection;

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x9C27FC", Offset = "0x9C27FC", VA = "0x9C27FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x9C28E8", Offset = "0x9C28E8", VA = "0x9C28E8")]
	public TestDecal()
	{
	}
}
[Token(Token = "0x20001D8")]
public class TestIKWalk : MonoBehaviour
{
	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IKController[] limbs;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 limbOutVector;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float footLimit;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float walkSpeed;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startHeight;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float gaitAmplitude;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float gaitFreq;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayerMask footSupportLayer;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] legSplineOldEnd;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] legSplineCurrentEnd;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] legSplineExtension;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool first;

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x9C2E78", Offset = "0x9C2E78", VA = "0x9C2E78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x9C3230", Offset = "0x9C3230", VA = "0x9C3230")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x9C3078", Offset = "0x9C3078", VA = "0x9C3078")]
	private Vector3 CalculateNewFootTarget(IKController limb, float offset = 1f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x9C3710", Offset = "0x9C3710", VA = "0x9C3710")]
	private Vector3 ProjectNewFootTarget(IKController limb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x9C3594", Offset = "0x9C3594", VA = "0x9C3594")]
	private bool IsFootOutOfBounds(IKController limb)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0x9C3B70", Offset = "0x9C3B70", VA = "0x9C3B70")]
	private void UpdateSplineLeg(int iLimb)
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x9C3F08", Offset = "0x9C3F08", VA = "0x9C3F08")]
	public TestIKWalk()
	{
	}
}
[Token(Token = "0x20001D9")]
public class TestMinimapDiagram : MonoBehaviour
{
	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x9C3F88", Offset = "0x9C3F88", VA = "0x9C3F88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x9C4110", Offset = "0x9C4110", VA = "0x9C4110")]
	public TestMinimapDiagram()
	{
	}
}
[Token(Token = "0x20001DA")]
public class TestOrbitObj : MonoBehaviour
{
	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x9C6118", Offset = "0x9C6118", VA = "0x9C6118")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x9C611C", Offset = "0x9C611C", VA = "0x9C611C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x9C6220", Offset = "0x9C6220", VA = "0x9C6220")]
	public TestOrbitObj()
	{
	}
}
[Token(Token = "0x20001DB")]
public class TestRoomLightAnchor : MonoBehaviour
{
	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform sourceRoom;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Sector sector;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<Renderer, Transform> anchorMap;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Transform> freeAnchors;

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x9C6230", Offset = "0x9C6230", VA = "0x9C6230")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x9C6A84", Offset = "0x9C6A84", VA = "0x9C6A84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x9C65BC", Offset = "0x9C65BC", VA = "0x9C65BC")]
	private void Add(Renderer r)
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x9C6BC8", Offset = "0x9C6BC8", VA = "0x9C6BC8")]
	private void Remove(Renderer r)
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x9C6D04", Offset = "0x9C6D04", VA = "0x9C6D04")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x9C6720", Offset = "0x9C6720", VA = "0x9C6720")]
	private void UpdateAnchors()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x9C6D08", Offset = "0x9C6D08", VA = "0x9C6D08")]
	private void OnUpdateLightingProfile()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x9C6D0C", Offset = "0x9C6D0C", VA = "0x9C6D0C")]
	public TestRoomLightAnchor()
	{
	}
}
[Token(Token = "0x20001DC")]
public class TestSceneLoad : MonoBehaviour
{
	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool cleanup;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private UnityEngine.SceneManagement.Scene scene;

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x9C6DBC", Offset = "0x9C6DBC", VA = "0x9C6DBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x9C6DC0", Offset = "0x9C6DC0", VA = "0x9C6DC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x9C6E5C", Offset = "0x9C6E5C", VA = "0x9C6E5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x9C6EF8", Offset = "0x9C6EF8", VA = "0x9C6EF8")]
	private void OnSceneLoaded(UnityEngine.SceneManagement.Scene scn, LoadSceneMode lMode)
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x9C7334", Offset = "0x9C7334", VA = "0x9C7334")]
	public TestSceneLoad()
	{
	}
}
[Token(Token = "0x20001DD")]
public class TestTrailerObjs : MonoBehaviour
{
	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform secDrone;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] gos;

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x9C733C", Offset = "0x9C733C", VA = "0x9C733C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x9C73D4", Offset = "0x9C73D4", VA = "0x9C73D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x9C73D8", Offset = "0x9C73D8", VA = "0x9C73D8")]
	private void OnFinishMapGeneration()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x9C7580", Offset = "0x9C7580", VA = "0x9C7580")]
	public TestTrailerObjs()
	{
	}
}
[Token(Token = "0x20001DE")]
public class TestVisProbes : MonoBehaviour
{
	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x9C7588", Offset = "0x9C7588", VA = "0x9C7588")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x9C76F8", Offset = "0x9C76F8", VA = "0x9C76F8")]
	public TestVisProbes()
	{
	}
}
[Token(Token = "0x20001DF")]
public class PrefabLowSwitcher : MonoBehaviour
{
	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x9F4558", Offset = "0x9F4558", VA = "0x9F4558")]
	public PrefabLowSwitcher()
	{
	}
}
[Token(Token = "0x20001E0")]
public class VariationEdit : MonoBehaviour
{
	[Token(Token = "0x2000407")]
	public class PrefabList : ScriptableObject
	{
		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> prefabs;

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xAB1230", Offset = "0xAB1230", VA = "0xAB1230")]
		public PrefabList()
		{
		}
	}

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int index;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PrefabList prefabList;

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xAB1228", Offset = "0xAB1228", VA = "0xAB1228")]
	public VariationEdit()
	{
	}
}
[Token(Token = "0x20001E1")]
public class Credits : MonoBehaviour
{
	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text text;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float creditsShowTime;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int creditsIndex;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timeout;

	[Token(Token = "0x1400001C")]
	public event Action onCreditsEnded
	{
		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x965808", Offset = "0x965808", VA = "0x965808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766400", Offset = "0x766400")]
		add
		{
		}
		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x9658AC", Offset = "0x9658AC", VA = "0x9658AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766410", Offset = "0x766410")]
		remove
		{
		}
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x965950", Offset = "0x965950", VA = "0x965950")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x965A24", Offset = "0x965A24", VA = "0x965A24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x965A78", Offset = "0x965A78", VA = "0x965A78")]
	private void AdvanceSection()
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0x965B4C", Offset = "0x965B4C", VA = "0x965B4C")]
	private string GetCreditsString(int idx)
	{
		return null;
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0x965A00", Offset = "0x965A00", VA = "0x965A00")]
	private void SetText(string txt)
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0x965C38", Offset = "0x965C38", VA = "0x965C38")]
	public Credits()
	{
	}
}
[Token(Token = "0x20001E2")]
public class ItemInfoPanel : MonoBehaviour
{
	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float hoverHeight;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text titleText;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text infoText;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas canvas;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform rectTransform;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 showScale;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer line;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UICraftIngredients craftIngredients;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform item;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Renderer itemRenderer;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Item.Properties itemProperties;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isShowing;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<ItemInfoPanel> listPanels;

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xBC5B54", Offset = "0xBC5B54", VA = "0xBC5B54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xBC5C6C", Offset = "0xBC5C6C", VA = "0xBC5C6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0xBC5D68", Offset = "0xBC5D68", VA = "0xBC5D68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xBC5E20", Offset = "0xBC5E20", VA = "0xBC5E20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0xBC5E24", Offset = "0xBC5E24", VA = "0xBC5E24")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0xBC63D0", Offset = "0xBC63D0", VA = "0xBC63D0")]
	public void Show(Transform item, Item.Properties itemProperties)
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0xBC62E4", Offset = "0xBC62E4", VA = "0xBC62E4")]
	public void Hide(Transform item)
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0xBC6638", Offset = "0xBC6638", VA = "0xBC6638")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x766420", Offset = "0x766420")]
	public static bool ShowInHand(Hand hand, Transform itemTransform, Item.Properties itemProperties)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0xBC6700", Offset = "0xBC6700", VA = "0xBC6700")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x766458", Offset = "0x766458")]
	public static bool HideInHand(Hand hand, Transform itemTransform)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0xBC229C", Offset = "0xBC229C", VA = "0xBC229C")]
	public static bool ShowPanel(Transform itemTransform, Item.Properties itemProperties)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0xBC24CC", Offset = "0xBC24CC", VA = "0xBC24CC")]
	public static bool HidePanel(Transform itemTransform)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xBC67C0", Offset = "0xBC67C0", VA = "0xBC67C0")]
	public ItemInfoPanel()
	{
	}
}
[Token(Token = "0x20001E3")]
public class Tutorial : Singleton<Tutorial>
{
	[Serializable]
	[Token(Token = "0x2000408")]
	public class TutorialState
	{
		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> shownTutorials;

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xA04C28", Offset = "0xA04C28", VA = "0xA04C28")]
		public TutorialState()
		{
		}
	}

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TutorialPanel panelPrefab;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float showTime;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<TutorialPanel> freePanels;

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xA03400", Offset = "0xA03400", VA = "0xA03400")]
	public bool HasBeenShowBefore(string tutoId, bool add = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xA03518", Offset = "0xA03518", VA = "0xA03518")]
	public void MarkAsShown(string tutoId)
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xA035F0", Offset = "0xA035F0", VA = "0xA035F0")]
	public TutorialPanel Show(string tutoId, Transform refObj, bool addAsShown = true)
	{
		return null;
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xA03F0C", Offset = "0xA03F0C", VA = "0xA03F0C")]
	public TutorialPanel ShowInPlace(string tutoId, Transform refObj, [Optional] Transform panelPos, bool lookAtCamera = false, bool addAsShown = true)
	{
		return null;
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xA04168", Offset = "0xA04168", VA = "0xA04168")]
	public TutorialPanel ShowInPlace(string tutoId, Transform refObj, Vector3 pos, Quaternion rot, bool lookAtCamera = false, bool addAsShown = true)
	{
		return null;
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xA04350", Offset = "0xA04350", VA = "0xA04350")]
	public TutorialPanel GetPanel()
	{
		return null;
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xA03750", Offset = "0xA03750", VA = "0xA03750")]
	private TutorialPanel GetFreePanel()
	{
		return null;
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xA043F8", Offset = "0xA043F8", VA = "0xA043F8")]
	private void FreePanel(TutorialPanel panel)
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xA044F8", Offset = "0xA044F8", VA = "0xA044F8")]
	public void SetMainTutorials()
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xA04698", Offset = "0xA04698", VA = "0xA04698")]
	private void ShowTutorialLocomotion()
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xA0470C", Offset = "0xA0470C", VA = "0xA0470C")]
	private void ShowTutorialRotation()
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xA04780", Offset = "0xA04780", VA = "0xA04780")]
	private void MissionExitEntrance_onComplete(MissionGoal obj)
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xA04910", Offset = "0xA04910", VA = "0xA04910")]
	private void OnShowLookAtMap()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xA049EC", Offset = "0xA049EC", VA = "0xA049EC")]
	private void OnShowLookAtGoals()
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xA04AC8", Offset = "0xA04AC8", VA = "0xA04AC8")]
	private void OnShowTutorialFlashlight()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xA04B9C", Offset = "0xA04B9C", VA = "0xA04B9C")]
	public Tutorial()
	{
	}
}
[Token(Token = "0x20001E4")]
public class TutorialPanel : MonoBehaviour
{
	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool lookAtCamera;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool inPlace;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float distToCamera;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool detectCollisions;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask collisionMask;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform refObject;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float showAnimSpeed;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float hideAnimSpeed;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioCue showSound;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioCue hideSound;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float timer;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UITypewriteText typewriteFX;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TextMeshProUGUI tutoText;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Canvas canvas;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RectTransform rectTransform;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private LineRenderer line;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform playerEye;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 wantedLocalPos;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool showing;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float animFactor;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 defaultScale;

	[Token(Token = "0x1400001D")]
	public event Action<TutorialPanel> onHide
	{
		[Token(Token = "0x600100B")]
		[Address(RVA = "0xA04354", Offset = "0xA04354", VA = "0xA04354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766490", Offset = "0x766490")]
		add
		{
		}
		[Token(Token = "0x600100C")]
		[Address(RVA = "0xA04CA4", Offset = "0xA04CA4", VA = "0xA04CA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7664A0", Offset = "0x7664A0")]
		remove
		{
		}
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xA04D48", Offset = "0xA04D48", VA = "0xA04D48")]
	private void Awake()
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0xA04EA4", Offset = "0xA04EA4", VA = "0xA04EA4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0xA04F08", Offset = "0xA04F08", VA = "0xA04F08")]
	private void Update()
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0xA050DC", Offset = "0xA050DC", VA = "0xA050DC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0xA03908", Offset = "0xA03908", VA = "0xA03908")]
	public void Show(string text, Transform refObj, bool inPlace = false, [Optional] Vector3? panelPos, [Optional] Quaternion? panelRot, bool lookAtCamera = true)
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xA05D58", Offset = "0xA05D58", VA = "0xA05D58")]
	public void SetTimer(float time)
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xA05D60", Offset = "0xA05D60", VA = "0xA05D60")]
	public void Hide()
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xA05BA8", Offset = "0xA05BA8", VA = "0xA05BA8")]
	private void LookAtCamera()
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0xA05D68", Offset = "0xA05D68", VA = "0xA05D68")]
	public TutorialPanel()
	{
	}
}
[Token(Token = "0x20001E5")]
public class TutorialTrigger : MonoBehaviour
{
	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75FBE4", Offset = "0x75FBE4")]
	public string tutoId;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75FC1C", Offset = "0x75FC1C")]
	public Transform refObject;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform panelPosition;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool lookAtCamera;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool autoHide;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int checkTask;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BoxCollider triggerBox;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TutorialPanel tutoPanel;

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xA05D88", Offset = "0xA05D88", VA = "0xA05D88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xA05DE8", Offset = "0xA05DE8", VA = "0xA05DE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xA05EF0", Offset = "0xA05EF0", VA = "0xA05EF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xA05FAC", Offset = "0xA05FAC", VA = "0xA05FAC")]
	private void Check()
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0xA06224", Offset = "0xA06224", VA = "0xA06224")]
	public void Show()
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xA06354", Offset = "0xA06354", VA = "0xA06354")]
	public void Hide(bool markAsShown = true)
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xA0642C", Offset = "0xA0642C", VA = "0xA0642C")]
	public TutorialTrigger()
	{
	}
}
[Token(Token = "0x20001E6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A8A0", Offset = "0x75A8A0")]
public class UIButtonHover : MonoBehaviour
{
	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Button button;

	[Token(Token = "0x1400001E")]
	public event Action<Button> onEnter
	{
		[Token(Token = "0x600101D")]
		[Address(RVA = "0xA06444", Offset = "0xA06444", VA = "0xA06444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7664B0", Offset = "0x7664B0")]
		add
		{
		}
		[Token(Token = "0x600101E")]
		[Address(RVA = "0xA064E8", Offset = "0xA064E8", VA = "0xA064E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7664C0", Offset = "0x7664C0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event Action<Button> onExit
	{
		[Token(Token = "0x600101F")]
		[Address(RVA = "0xA0658C", Offset = "0xA0658C", VA = "0xA0658C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7664D0", Offset = "0x7664D0")]
		add
		{
		}
		[Token(Token = "0x6001020")]
		[Address(RVA = "0xA06630", Offset = "0xA06630", VA = "0xA06630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7664E0", Offset = "0x7664E0")]
		remove
		{
		}
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0xA066D4", Offset = "0xA066D4", VA = "0xA066D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0xA069E0", Offset = "0xA069E0", VA = "0xA069E0")]
	private void OnHoverStart(BaseEventData evData)
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0xA06A68", Offset = "0xA06A68", VA = "0xA06A68")]
	private void OnHoverEnd(BaseEventData evData)
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0xA06AF0", Offset = "0xA06AF0", VA = "0xA06AF0")]
	public UIButtonHover()
	{
	}
}
[Token(Token = "0x20001E7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A904", Offset = "0x75A904")]
public class UIButtonSounds : MonoBehaviour
{
	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioCue hoverSound;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioCue clickSound;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EventTrigger evTrigger;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Button button;

	[Token(Token = "0x6001025")]
	[Address(RVA = "0xA06AF8", Offset = "0xA06AF8", VA = "0xA06AF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0xA06DB4", Offset = "0xA06DB4", VA = "0xA06DB4")]
	public void OnHover(BaseEventData evData)
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xA06E28", Offset = "0xA06E28", VA = "0xA06E28")]
	private void OnClick()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xA06E64", Offset = "0xA06E64", VA = "0xA06E64")]
	public UIButtonSounds()
	{
	}
}
[Token(Token = "0x20001E8")]
public class UICraftBlueprint : MonoBehaviour
{
	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75FC74", Offset = "0x75FC74")]
	public Image mainIcon;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI nameText;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI descText;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UICraftIngredients ingredients;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button craftBtn;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button cancelButton;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75FCAC", Offset = "0x75FCAC")]
	public CraftRecipes recipes;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CraftRecipes.Blueprint blueprint;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CraftRecipes.IngredientList ownedIngredients;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action onCancel;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action onCraft;

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xA06E6C", Offset = "0xA06E6C", VA = "0xA06E6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0xA0729C", Offset = "0xA0729C", VA = "0xA0729C")]
	public void ShowBlueprint(CraftRecipes.Blueprint bp, [Optional] CraftRecipes.IngredientList owned)
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0xA06FBC", Offset = "0xA06FBC", VA = "0xA06FBC")]
	private void Refresh()
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0xA07774", Offset = "0xA07774", VA = "0xA07774")]
	public void OnCraftButton()
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0xA07788", Offset = "0xA07788", VA = "0xA07788")]
	public void OnCancelButton()
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0xA0779C", Offset = "0xA0779C", VA = "0xA0779C")]
	public UICraftBlueprint()
	{
	}
}
[Token(Token = "0x20001E9")]
public class UICraftIngredients : MonoBehaviour
{
	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CraftUIData craftUIData;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] entries;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string formatString;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Image[] icons;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TextMeshProUGUI[] texts;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75FCE4", Offset = "0x75FCE4")]
	public Image[] ticks;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite tickValid;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite tickInvalid;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color tickValidColor;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color tickInvalidColor;

	[Token(Token = "0x600102F")]
	[Address(RVA = "0xA077A4", Offset = "0xA077A4", VA = "0xA077A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0xA072D8", Offset = "0xA072D8", VA = "0xA072D8")]
	public bool ShowIngredients(CraftRecipes.IngredientList list, [Optional] CraftRecipes.IngredientList owned)
	{
		return default(bool);
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0xA079D4", Offset = "0xA079D4", VA = "0xA079D4")]
	private void SetTick(int i, bool valid)
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0xA07AA8", Offset = "0xA07AA8", VA = "0xA07AA8")]
	public UICraftIngredients()
	{
	}
}
[Token(Token = "0x20001EA")]
public class UICraftSelector : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000409")]
	public class GridButton
	{
		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Button button;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image backIcon;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI text;

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xA08058", Offset = "0xA08058", VA = "0xA08058")]
		public GridButton()
		{
		}
	}

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CraftRecipes recipes;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75FD1C", Offset = "0x75FD1C")]
	public Button leftArrowBtn;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button rightArrowBtn;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GridButton[] buttons;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI emptyText;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<CraftRecipes.Blueprint> onBlueprintSelect;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<CraftRecipes.Blueprint> unlockedBlueprints;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int pageOffset;

	[Token(Token = "0x6001033")]
	[Address(RVA = "0xA07B08", Offset = "0xA07B08", VA = "0xA07B08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0xA07B0C", Offset = "0xA07B0C", VA = "0xA07B0C")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0xA07EDC", Offset = "0xA07EDC", VA = "0xA07EDC")]
	public void OnLeftArrowBtn()
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0xA07F04", Offset = "0xA07F04", VA = "0xA07F04")]
	public void OnRightArrowBtn()
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xA07F2C", Offset = "0xA07F2C", VA = "0xA07F2C")]
	public void OnGridBtn(int idx)
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0xA07FDC", Offset = "0xA07FDC", VA = "0xA07FDC")]
	public UICraftSelector()
	{
	}
}
[Token(Token = "0x20001EB")]
public class UIDisclaimer : MonoBehaviour
{
	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timer;

	[Token(Token = "0x6001039")]
	[Address(RVA = "0xA08060", Offset = "0xA08060", VA = "0xA08060")]
	private void Update()
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0xA08194", Offset = "0xA08194", VA = "0xA08194")]
	public UIDisclaimer()
	{
	}
}
[Token(Token = "0x20001EC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A968", Offset = "0x75A968")]
public class UIFillButton : MonoBehaviour
{
	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform fillBar;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fillRate;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas canvas;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float fillFactor;

	[Token(Token = "0x14000020")]
	public event Action onFill
	{
		[Token(Token = "0x600103B")]
		[Address(RVA = "0xA081A4", Offset = "0xA081A4", VA = "0xA081A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7664F0", Offset = "0x7664F0")]
		add
		{
		}
		[Token(Token = "0x600103C")]
		[Address(RVA = "0xA08248", Offset = "0xA08248", VA = "0xA08248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766500", Offset = "0x766500")]
		remove
		{
		}
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0xA082EC", Offset = "0xA082EC", VA = "0xA082EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0xA0834C", Offset = "0xA0834C", VA = "0xA0834C")]
	private void Update()
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0xA084B4", Offset = "0xA084B4", VA = "0xA084B4")]
	public UIFillButton()
	{
	}
}
[Token(Token = "0x20001ED")]
public class UIFuel : MonoBehaviour
{
	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fuelCount;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fuelCounterPanel;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fuelStandByPanel;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FuelContainer fuelContainer;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Interactable fuelContainerHandle;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource fuelProcessSound;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource fuelEmptySound;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UIGalaxyView galaxyConsole;

	[Token(Token = "0x6001040")]
	[Address(RVA = "0xA084C4", Offset = "0xA084C4", VA = "0xA084C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xA085E0", Offset = "0xA085E0", VA = "0xA085E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xA086A8", Offset = "0xA086A8", VA = "0xA086A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xA08514", Offset = "0xA08514", VA = "0xA08514")]
	public void RefreshCounter(bool delaySoundJump = true)
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xA08770", Offset = "0xA08770", VA = "0xA08770")]
	private void OnFuelInserted()
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0xA08870", Offset = "0xA08870", VA = "0xA08870")]
	private void OnFuelProcessed()
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xA088D0", Offset = "0xA088D0", VA = "0xA088D0")]
	public UIFuel()
	{
	}
}
[Token(Token = "0x20001EE")]
public class UIGalaxyView : MonoBehaviour
{
	[Token(Token = "0x6001047")]
	[Address(RVA = "0xA088D8", Offset = "0xA088D8", VA = "0xA088D8")]
	public UIGalaxyView()
	{
	}
}
[Token(Token = "0x20001EF")]
public class UIGoal : MonoBehaviour
{
	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image backgroundImg;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI textName;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color activeColorBackground;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color activeColorText;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color inactiveColorBackground;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color inactiveColorText;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color highlightColorBackground;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public string goalId;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isActive;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool isHighlighted;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float animTimer;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool animStatus;

	[Token(Token = "0x6001048")]
	[Address(RVA = "0xA088E0", Offset = "0xA088E0", VA = "0xA088E0")]
	public void Set(string goalId, string text, bool isActive)
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0xA08A10", Offset = "0xA08A10", VA = "0xA08A10")]
	private void Update()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0xA08ACC", Offset = "0xA08ACC", VA = "0xA08ACC")]
	public void SetHighlight(bool highlight)
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0xA08B70", Offset = "0xA08B70", VA = "0xA08B70")]
	public UIGoal()
	{
	}
}
[Token(Token = "0x20001F0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75A9CC", Offset = "0x75A9CC")]
public class UIGoalsMenu : TimeIndependentBehaviour
{
	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform goalsList;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIGoal goalUIPrefab;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIGoal goalUITitlePrefab;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxVerticalAngle;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float maxCameraAngle;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxLookAngle;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float deploySpeed;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioCue noticeSound;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioCue openSound;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioCue closeSound;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Button optionsButtonLeft;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button optionsButtonRight;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 scale;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float deployFactor;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Canvas canvas;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Collider canvasInteractionCollider;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Mission missionGoals;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private UIGoal goalsTitle;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<UIGoal> goalsUIList;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float padding;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool hasNotice;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float noticeSoundTimer;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool isShowing;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float openSoundTimer;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float closeSoundTimer;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<string> shownGoals;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool forceOpen;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool initialized;

	[Token(Token = "0x600104C")]
	[Address(RVA = "0xA08B78", Offset = "0xA08B78", VA = "0xA08B78")]
	private void Start()
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0xA08C0C", Offset = "0xA08C0C", VA = "0xA08C0C")]
	private void OnInitScene()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0xA09640", Offset = "0xA09640", VA = "0xA09640", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0xA097A8", Offset = "0xA097A8", VA = "0xA097A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0xA099C0", Offset = "0xA099C0", VA = "0xA099C0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0xA08F64", Offset = "0xA08F64", VA = "0xA08F64")]
	private void RefreshList(bool highlightNew)
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0xA0A1E0", Offset = "0xA0A1E0", VA = "0xA0A1E0")]
	private void OnGoalsChanged(MissionGoal goal)
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xA0A210", Offset = "0xA0A210", VA = "0xA0A210")]
	public void OnOptionsButton()
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0xA0A540", Offset = "0xA0A540", VA = "0xA0A540")]
	public void SetupOptionsButton(bool leftHand)
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0xA0A5A4", Offset = "0xA0A5A4", VA = "0xA0A5A4")]
	private void OnChangedLanguage()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0xA0A5AC", Offset = "0xA0A5AC", VA = "0xA0A5AC")]
	private void OnPostDeserialization()
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0xA0A5B4", Offset = "0xA0A5B4", VA = "0xA0A5B4")]
	public UIGoalsMenu()
	{
	}
}
[Token(Token = "0x20001F1")]
public class UIIntroArchive : MonoBehaviour
{
	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75FD74", Offset = "0x75FD74")]
	public GameObject mainSelector;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UICraftSelector blueprintSelectorUI;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UICraftBlueprint blueprintUI;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIIntroTextLog textLogUI;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI counterBlueprints;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI counterTextLogs;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject resetConfirmationDialog;

	[Token(Token = "0x6001058")]
	[Address(RVA = "0xA0A63C", Offset = "0xA0A63C", VA = "0xA0A63C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xA0A794", Offset = "0xA0A794", VA = "0xA0A794")]
	private void Start()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xA0A9E4", Offset = "0xA0A9E4", VA = "0xA0A9E4")]
	private void RefreshCounters()
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0xA0ABA8", Offset = "0xA0ABA8", VA = "0xA0ABA8")]
	public void OnEnterBlueprints()
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0xA0ABF8", Offset = "0xA0ABF8", VA = "0xA0ABF8")]
	public void OnEnterTextLogs()
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0xA0AC48", Offset = "0xA0AC48", VA = "0xA0AC48")]
	public void OnBlueprintSelection(CraftRecipes.Blueprint bp)
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0xA0ACBC", Offset = "0xA0ACBC", VA = "0xA0ACBC")]
	public void OnBlueprintCancel()
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0xA0AD18", Offset = "0xA0AD18", VA = "0xA0AD18")]
	public void OnBlueprintSelectorCancel()
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0xA0AD68", Offset = "0xA0AD68", VA = "0xA0AD68")]
	public void OnTextLogCancel()
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0xA0ADB8", Offset = "0xA0ADB8", VA = "0xA0ADB8")]
	public void OnResetData()
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0xA0ADD8", Offset = "0xA0ADD8", VA = "0xA0ADD8")]
	public void OnResetDataConfirmationYes()
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0xA0AE54", Offset = "0xA0AE54", VA = "0xA0AE54")]
	public void OnResetDataConfirmationNo()
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0xA0AE74", Offset = "0xA0AE74", VA = "0xA0AE74")]
	public UIIntroArchive()
	{
	}
}
[Token(Token = "0x20001F2")]
public class UIIntroGameOver : MonoBehaviour
{
	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75FDAC", Offset = "0x75FDAC")]
	public Transform console;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 deployedPos;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 retractedPos;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool deployed;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75FDE4", Offset = "0x75FDE4")]
	public GameObject gameOverTitleBarEscaped;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject gameOverTitleBarDead;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI gameOverText;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RectTransform unlockGrid;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI unlockLogs;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RectTransform unlockBlueprintPrefab;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RectTransform unlockLOptionPrefab;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CraftRecipes recipes;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Sprite> levelOptionSprites;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private UIScreenToggle screenToggleFX;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75FE1C", Offset = "0x75FE1C")]
	public GameObject summaryScreen;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Image summaryMap;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshProUGUI summaryText;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshProUGUI summaryVessel;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UIScreenToggle summaryToggleFX;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float deployRate;

	[Token(Token = "0x6001065")]
	[Address(RVA = "0xA0AE7C", Offset = "0xA0AE7C", VA = "0xA0AE7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0xA0AF44", Offset = "0xA0AF44", VA = "0xA0AF44")]
	private void Start()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0xA0AF48", Offset = "0xA0AF48", VA = "0xA0AF48")]
	private void Update()
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0xA0B16C", Offset = "0xA0B16C", VA = "0xA0B16C")]
	public void SetDeployed(bool isDeployed, bool instantaneous = false)
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0xA0B1B8", Offset = "0xA0B1B8", VA = "0xA0B1B8")]
	public void ShowGameOver(bool escaped, string text)
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0xA0BC1C", Offset = "0xA0BC1C", VA = "0xA0BC1C")]
	public UIIntroGameOver()
	{
	}
}
[Token(Token = "0x20001F3")]
public class UIIntroMain : MonoBehaviour
{
	[Token(Token = "0x200040A")]
	private enum EStates
	{
		[Token(Token = "0x4001C40")]
		Intro,
		[Token(Token = "0x4001C41")]
		MainMenu,
		[Token(Token = "0x4001C42")]
		LevelConfig,
		[Token(Token = "0x4001C43")]
		Credits
	}

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button startBtn;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIModalText modalDialog;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject backgroundPanel;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75FE54", Offset = "0x75FE54")]
	public GameObject mainPanel;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button continueBtn;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button newGameBtn;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button optionsBtn;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75FE8C", Offset = "0x75FE8C")]
	public GameObject levelConfigPanel;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI descText;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject weaponFrame;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Button weaponButton;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject randomFrame;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string[] weaponBlueprints;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image[] weaponImages;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool randomMods;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75FEC4", Offset = "0x75FEC4")]
	public GameObject creditsPanel;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Credits credits;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Button boardBtn;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private UIScreenToggle screenToggleFX;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TutorialTrigger tutoInteractConsole;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75FEFC", Offset = "0x75FEFC")]
	public GameObject debugPanel;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Button debugGodModeBtn;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Button debugResourcesBtn;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Button debugKeysBtn;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Button debugFuelBtn;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private EStates state;

	[Token(Token = "0x600106B")]
	[Address(RVA = "0xA0BC24", Offset = "0xA0BC24", VA = "0xA0BC24")]
	private void Awake()
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0xA0BCB4", Offset = "0xA0BCB4", VA = "0xA0BCB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0xA0C454", Offset = "0xA0C454", VA = "0xA0C454")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0xA0C514", Offset = "0xA0C514", VA = "0xA0C514")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0xA0C5DC", Offset = "0xA0C5DC", VA = "0xA0C5DC")]
	public void Activate()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0xA0C63C", Offset = "0xA0C63C", VA = "0xA0C63C")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xA0BFAC", Offset = "0xA0BFAC", VA = "0xA0BFAC")]
	private void SetState(EStates newState)
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xA0C8B8", Offset = "0xA0C8B8", VA = "0xA0C8B8")]
	public void OnStartButton()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xA0C9F0", Offset = "0xA0C9F0", VA = "0xA0C9F0")]
	public void OnNewGame()
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0xA0CDF8", Offset = "0xA0CDF8", VA = "0xA0CDF8")]
	private void OnNewGameConfirm()
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0xA0D040", Offset = "0xA0D040", VA = "0xA0D040")]
	private void OnNewGameCancel()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0xA0D10C", Offset = "0xA0D10C", VA = "0xA0D10C")]
	public void OnContinueGame()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0xA0D39C", Offset = "0xA0D39C", VA = "0xA0D39C")]
	private void OnContinueGameDialogClose()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0xA0D4D4", Offset = "0xA0D4D4", VA = "0xA0D4D4")]
	public void OnOptions()
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0xA0D57C", Offset = "0xA0D57C", VA = "0xA0D57C")]
	public void OnCredits()
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0xA0D584", Offset = "0xA0D584", VA = "0xA0D584")]
	public void OnCreditsEnd()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xA0D5C0", Offset = "0xA0D5C0", VA = "0xA0D5C0")]
	public void OnQuit()
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xA0D620", Offset = "0xA0D620", VA = "0xA0D620")]
	private void OnQuitConfirm()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xA0D74C", Offset = "0xA0D74C", VA = "0xA0D74C")]
	private void OnQuitCancel()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0xA0D818", Offset = "0xA0D818", VA = "0xA0D818")]
	public void OnLevelConfigBack()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0xA0D820", Offset = "0xA0D820", VA = "0xA0D820")]
	public void OnLevelConfigBoard()
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0xA0D928", Offset = "0xA0D928", VA = "0xA0D928")]
	public void OnLevelConfigToggle(UIIntroToggle toggle, bool newValue)
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0xA0D9E8", Offset = "0xA0D9E8", VA = "0xA0D9E8")]
	public void OnLevelConfigRandomToggle(UIIntroToggle toggle, bool newValue)
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xA0DC3C", Offset = "0xA0DC3C", VA = "0xA0DC3C")]
	public void OnLevelConfigWeaponBtn()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xA0C684", Offset = "0xA0C684", VA = "0xA0C684")]
	private void RefreshLevelConfigWeapon()
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xA0DE14", Offset = "0xA0DE14", VA = "0xA0DE14")]
	private void OnLevelConfigWeaponHoverEnter(Button btn)
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xA0DF08", Offset = "0xA0DF08", VA = "0xA0DF08")]
	private void OnLevelConfigWeaponHoverExit(Button btn)
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xA0DFAC", Offset = "0xA0DFAC", VA = "0xA0DFAC")]
	private void OnLevelConfigWeaponDialogClose()
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xA0D824", Offset = "0xA0D824", VA = "0xA0D824")]
	public void Board()
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xA0E040", Offset = "0xA0E040", VA = "0xA0E040")]
	private void SelectRandomMods()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xA0E430", Offset = "0xA0E430", VA = "0xA0E430")]
	private void OnChangedLanguage()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xA0E434", Offset = "0xA0E434", VA = "0xA0E434")]
	public void OnDebugGodModeButton()
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xA0E438", Offset = "0xA0E438", VA = "0xA0E438")]
	public void OnDebugResourcesButton()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xA0E43C", Offset = "0xA0E43C", VA = "0xA0E43C")]
	public void OnDebugKeysButton()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xA0E440", Offset = "0xA0E440", VA = "0xA0E440")]
	public void OnDebugFuelButton()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xA0E444", Offset = "0xA0E444", VA = "0xA0E444")]
	public void OnDebugUnlock()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xA0E448", Offset = "0xA0E448", VA = "0xA0E448")]
	public UIIntroMain()
	{
	}
}
[Token(Token = "0x20001F4")]
public class UIIntroTextLog : MonoBehaviour
{
	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextLogs textLogs;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioTapeData audioTapeData;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75FF34", Offset = "0x75FF34")]
	public TextMeshProUGUI mainText;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button nextBtn;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button prevBtn;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button playBtn;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text playBtnText;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TextLogs.TextLogsState logsState;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string curTextLogId;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action onCancel;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioClip audioTapeClip;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource audioTapeSound;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int endAudioLogTask;

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xA0E450", Offset = "0xA0E450", VA = "0xA0E450")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xA0E768", Offset = "0xA0E768", VA = "0xA0E768")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xA0E910", Offset = "0xA0E910", VA = "0xA0E910")]
	private void CycleLog(bool next = true)
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0xA0EBC8", Offset = "0xA0EBC8", VA = "0xA0EBC8")]
	public void OnNextButton()
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0xA0EBD0", Offset = "0xA0EBD0", VA = "0xA0EBD0")]
	public void OnPreviousButton()
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0xA0EBD8", Offset = "0xA0EBD8", VA = "0xA0EBD8")]
	public void OnCancelButton()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0xA0EBEC", Offset = "0xA0EBEC", VA = "0xA0EBEC")]
	public void OnPlayButton()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0xA0EEB0", Offset = "0xA0EEB0", VA = "0xA0EEB0")]
	private void OnEndAudioLog()
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0xA0EF58", Offset = "0xA0EF58", VA = "0xA0EF58")]
	private void OnChangedLanguage()
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0xA0F020", Offset = "0xA0F020", VA = "0xA0F020")]
	public UIIntroTextLog()
	{
	}
}
[Token(Token = "0x20001F5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75AA30", Offset = "0x75AA30")]
public class UIIntroToggle : MonoBehaviour
{
	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75FF6C", Offset = "0x75FF6C")]
	public AudioCue hoverSound;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioCue toggleOnSound;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioCue toggleOffSound;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x75FFA4", Offset = "0x75FFA4")]
	public LevelOptions.EModifiers levelOptionId;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI descText;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x75FFDC", Offset = "0x75FFDC")]
	public Image icon;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite lockedIcon;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isLocked;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite randomIcon;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isRandom;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private EventTrigger evTrigger;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Toggle toggle;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animator animator;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Sprite defaultIcon;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private StringBuilder sBuilder;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int animChecked;

	[Token(Token = "0x14000021")]
	public event Action onHover
	{
		[Token(Token = "0x600109A")]
		[Address(RVA = "0xA0F030", Offset = "0xA0F030", VA = "0xA0F030")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766510", Offset = "0x766510")]
		add
		{
		}
		[Token(Token = "0x600109B")]
		[Address(RVA = "0xA0F0D4", Offset = "0xA0F0D4", VA = "0xA0F0D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766520", Offset = "0x766520")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public event Action<UIIntroToggle, bool> onToggle
	{
		[Token(Token = "0x600109C")]
		[Address(RVA = "0xA0C2F4", Offset = "0xA0C2F4", VA = "0xA0C2F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766530", Offset = "0x766530")]
		add
		{
		}
		[Token(Token = "0x600109D")]
		[Address(RVA = "0xA0F178", Offset = "0xA0F178", VA = "0xA0F178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766540", Offset = "0x766540")]
		remove
		{
		}
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xA0F21C", Offset = "0xA0F21C", VA = "0xA0F21C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xA0F34C", Offset = "0xA0F34C", VA = "0xA0F34C")]
	private void Start()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xA0F63C", Offset = "0xA0F63C", VA = "0xA0F63C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0xA0F748", Offset = "0xA0F748", VA = "0xA0F748")]
	public void OnHoverEnter(BaseEventData evData)
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0xA0FA20", Offset = "0xA0FA20", VA = "0xA0FA20")]
	public void OnHoverExit(BaseEventData evData)
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0xA0FAC4", Offset = "0xA0FAC4", VA = "0xA0FAC4")]
	private void OnClicked(bool newValue)
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0xA0FB2C", Offset = "0xA0FB2C", VA = "0xA0FB2C")]
	public void OnChanged(bool newValue)
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0xA0FBF0", Offset = "0xA0FBF0", VA = "0xA0FBF0")]
	public bool IsChecked()
	{
		return default(bool);
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0xA0C398", Offset = "0xA0C398", VA = "0xA0C398")]
	public void SetLocked()
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0xA0DB44", Offset = "0xA0DB44", VA = "0xA0DB44")]
	public void SetRandom(bool random)
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xA0F4A4", Offset = "0xA0F4A4", VA = "0xA0F4A4")]
	private void AddCallback(EventTriggerType type, UnityAction<BaseEventData> callback)
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0xA0FC0C", Offset = "0xA0FC0C", VA = "0xA0FC0C")]
	public UIIntroToggle()
	{
	}
}
[Token(Token = "0x20001F6")]
public class UIModalText : TimeIndependentBehaviour
{
	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image panel;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI text;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject noButton;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject yesButton;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject okButton;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int taskId;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 defaultScale;

	[Token(Token = "0x14000023")]
	public event Action onYesBtn
	{
		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xA0CCB0", Offset = "0xA0CCB0", VA = "0xA0CCB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766550", Offset = "0x766550")]
		add
		{
		}
		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xA0CED0", Offset = "0xA0CED0", VA = "0xA0CED0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766560", Offset = "0x766560")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public event Action onNoBtn
	{
		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xA0CD54", Offset = "0xA0CD54", VA = "0xA0CD54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766570", Offset = "0x766570")]
		add
		{
		}
		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xA0CF74", Offset = "0xA0CF74", VA = "0xA0CF74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766580", Offset = "0x766580")]
		remove
		{
		}
	}

	[Token(Token = "0x14000025")]
	public event Action onOkBtn
	{
		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xA0D2F8", Offset = "0xA0D2F8", VA = "0xA0D2F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766590", Offset = "0x766590")]
		add
		{
		}
		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xA0D430", Offset = "0xA0D430", VA = "0xA0D430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7665A0", Offset = "0x7665A0")]
		remove
		{
		}
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xA0FCE4", Offset = "0xA0FCE4", VA = "0xA0FCE4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0xA0FD30", Offset = "0xA0FD30", VA = "0xA0FD30", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0xA0FD8C", Offset = "0xA0FD8C", VA = "0xA0FD8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0xA0FE48", Offset = "0xA0FE48", VA = "0xA0FE48", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0xA0CB3C", Offset = "0xA0CB3C", VA = "0xA0CB3C")]
	public void Show(string str, bool onlyOkButton = false)
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0xA0FECC", Offset = "0xA0FECC", VA = "0xA0FECC")]
	public void Show(string str, float time)
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xA0FFB0", Offset = "0xA0FFB0", VA = "0xA0FFB0")]
	private void OnTimer()
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xA0D018", Offset = "0xA0D018", VA = "0xA0D018")]
	public void Hide()
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xA0FFB4", Offset = "0xA0FFB4", VA = "0xA0FFB4")]
	public void OnYesButton()
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xA0FFC8", Offset = "0xA0FFC8", VA = "0xA0FFC8")]
	public void OnNoButton()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xA0FFDC", Offset = "0xA0FFDC", VA = "0xA0FFDC")]
	public void OnOkButton()
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0xA0FFF0", Offset = "0xA0FFF0", VA = "0xA0FFF0")]
	public UIModalText()
	{
	}
}
[Token(Token = "0x20001F7")]
public class UINavApproach : MonoBehaviour
{
	[Token(Token = "0x200040B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BC78", Offset = "0x75BC78")]
	private sealed class <Dock_co>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UINavApproach <>4__this;

		[Token(Token = "0x17000217")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0xA10F40", Offset = "0xA10F40", VA = "0xA10F40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000218")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0xA10FA8", Offset = "0xA10FA8", VA = "0xA10FA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xA10D08", Offset = "0xA10D08", VA = "0xA10D08")]
		[DebuggerHidden]
		public <Dock_co>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xA10DA4", Offset = "0xA10DA4", VA = "0xA10DA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xA10DA8", Offset = "0xA10DA8", VA = "0xA10DA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xA10F48", Offset = "0xA10F48", VA = "0xA10F48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76008C", Offset = "0x76008C")]
	public Image vesselIcon;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text distanceText;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text relSpeedText;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button boardBtn;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7600C4", Offset = "0x7600C4")]
	public DraggableLinear hStick;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DraggableLinear vStick;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7600FC", Offset = "0x7600FC")]
	public AudioSource mainEngineSound;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x760134", Offset = "0x760134")]
	public Vector2 mainEngineVolume;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x760154", Offset = "0x760154")]
	public Vector2 mainEnginePitch;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource leftEngineSound;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource rightEngineSound;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource brakeEngineSound;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x760178", Offset = "0x760178")]
	public Vector2 sideEnginesVolume;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x760198", Offset = "0x760198")]
	public Vector2 sideEnginesPitch;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource dockMainSound;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioSource dockServoSound;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSource dockPingSound;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7601BC", Offset = "0x7601BC")]
	public Transform spaceship;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector2 acceleration;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Vector2 maxSpeed;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float approachConeAngle;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float autoApproachRange;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float autoApproachSpeed;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float dockSpeed;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AnimationCurve autoApproachSpeedCurve;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Shake cameraShake;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector2 speed;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool inAutoApproach;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool hasDocked;

	[Token(Token = "0x400112B")]
	private const float shipMaxDistance = 1000f;

	[Token(Token = "0x400112C")]
	private const float uiDistanceFactor = 350f;

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0xA10000", Offset = "0xA10000", VA = "0xA10000")]
	private void Start()
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0xA1006C", Offset = "0xA1006C", VA = "0xA1006C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0xA10130", Offset = "0xA10130", VA = "0xA10130")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0xA102BC", Offset = "0xA102BC", VA = "0xA102BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0xA10AA8", Offset = "0xA10AA8", VA = "0xA10AA8")]
	private void SetEngineSound(AudioSource snd, float rate, Vector2 volumeRange, Vector2 pitchRange)
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0xA10C30", Offset = "0xA10C30", VA = "0xA10C30")]
	public void SetDocked()
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0xA10BB4", Offset = "0xA10BB4", VA = "0xA10BB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7665B0", Offset = "0x7665B0")]
	private IEnumerator Dock_co()
	{
		return null;
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0xA10D34", Offset = "0xA10D34", VA = "0xA10D34")]
	public void OnBoard()
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xA10D50", Offset = "0xA10D50", VA = "0xA10D50")]
	public UINavApproach()
	{
	}
}
[Token(Token = "0x20001F8")]
public class UIOptionsAudio : UIOptionsPanel
{
	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button volumeBtnLeft;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button volumeBtnRight;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI volumeValue;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject volumeSlot;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button musicVolumeBtnLeft;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button musicVolumeBtnRight;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI musicVolumeValue;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject musicVolumeSlot;

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xA10FB0", Offset = "0xA10FB0", VA = "0xA10FB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xA11468", Offset = "0xA11468", VA = "0xA11468", Slot = "4")]
	public override void Show()
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xA114BC", Offset = "0xA114BC", VA = "0xA114BC", Slot = "5")]
	public override void Hide()
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xA11608", Offset = "0xA11608", VA = "0xA11608", Slot = "6")]
	public override void RefreshData()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0xA117E0", Offset = "0xA117E0", VA = "0xA117E0")]
	private void OnVolumeBtnLeft()
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xA11A20", Offset = "0xA11A20", VA = "0xA11A20")]
	private void OnVolumeBtnRight()
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0xA11AE4", Offset = "0xA11AE4", VA = "0xA11AE4")]
	private void OnMusicVolumeBtnLeft()
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0xA11BA8", Offset = "0xA11BA8", VA = "0xA11BA8")]
	private void OnMusicVolumeBtnRight()
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xA11C6C", Offset = "0xA11C6C", VA = "0xA11C6C")]
	public UIOptionsAudio()
	{
	}
}
[Token(Token = "0x20001F9")]
public class UIOptionsControls : UIOptionsPanel
{
	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject diagramTouch;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject diagramVive;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject diagramIndex;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject diagramWindowsMR;

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xA11C7C", Offset = "0xA11C7C", VA = "0xA11C7C", Slot = "4")]
	public override void Show()
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xA11CA8", Offset = "0xA11CA8", VA = "0xA11CA8", Slot = "6")]
	public override void RefreshData()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xA11DE8", Offset = "0xA11DE8", VA = "0xA11DE8")]
	public UIOptionsControls()
	{
	}
}
[Token(Token = "0x20001FA")]
public class UIOptionsLocomotion : UIOptionsPanel
{
	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button moveTypeBtnLeft;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button moveTypeBtnRight;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI moveTypeValue;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject moveTypeSlot;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button moveRefBtnLeft;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button moveRefBtnRight;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI moveRefValue;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject moveRefSlot;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button rotationTypeBtnLeft;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Button rotationTypeBtnRight;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI rotationTypeValue;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject rotationTypeSlot;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Button rotationSpeedBtnLeft;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Button rotationSpeedBtnRight;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshProUGUI rotationSpeedValue;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject rotationSpeedSlot;

	[Token(Token = "0x4001149")]
	private const int minRotationSpeed = 1;

	[Token(Token = "0x400114A")]
	private const int maxRotationSpeed = 7;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Button swapControlsBtn;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject swapControlsSlot;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Button requireTouchpadPressBtn;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject requireTouchpadPressSlot;

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xA11DF0", Offset = "0xA11DF0", VA = "0xA11DF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0xA12130", Offset = "0xA12130", VA = "0xA12130", Slot = "4")]
	public override void Show()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xA1215C", Offset = "0xA1215C", VA = "0xA1215C", Slot = "5")]
	public override void Hide()
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0xA12240", Offset = "0xA12240", VA = "0xA12240", Slot = "6")]
	public override void RefreshData()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xA125A4", Offset = "0xA125A4", VA = "0xA125A4")]
	private void OnMoveTypeBtnLeft()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xA1266C", Offset = "0xA1266C", VA = "0xA1266C")]
	private void OnMoveTypeBtnRight()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xA12734", Offset = "0xA12734", VA = "0xA12734")]
	private void OnMoveRefBtnLeft()
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xA127FC", Offset = "0xA127FC", VA = "0xA127FC")]
	private void OnMoveRefBtnRight()
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xA128C4", Offset = "0xA128C4", VA = "0xA128C4")]
	private void OnRotationTypeBtnLeft()
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xA1298C", Offset = "0xA1298C", VA = "0xA1298C")]
	private void OnRotationTypeBtnRight()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xA12A54", Offset = "0xA12A54", VA = "0xA12A54")]
	private void OnRotationSpeedBtnLeft()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xA12B04", Offset = "0xA12B04", VA = "0xA12B04")]
	private void OnRotationSpeedBtnRight()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xA12BB4", Offset = "0xA12BB4", VA = "0xA12BB4")]
	private void OnSwapControlsBtn()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xA12D40", Offset = "0xA12D40", VA = "0xA12D40")]
	public UIOptionsLocomotion()
	{
	}
}
[Token(Token = "0x20001FB")]
public class UIOptionsMenu : TimeIndependentBehaviour
{
	[Token(Token = "0x200040C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BC88", Offset = "0x75BC88")]
	private sealed class <OnHMDMounted_co>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIOptionsMenu <>4__this;

		[Token(Token = "0x17000219")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AF8")]
			[Address(RVA = "0xA14E20", Offset = "0xA14E20", VA = "0xA14E20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AFA")]
			[Address(RVA = "0xA14E88", Offset = "0xA14E88", VA = "0xA14E88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xA1429C", Offset = "0xA1429C", VA = "0xA1429C")]
		[DebuggerHidden]
		public <OnHMDMounted_co>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xA14AF4", Offset = "0xA14AF4", VA = "0xA14AF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xA14AF8", Offset = "0xA14AF8", VA = "0xA14AF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xA14E28", Offset = "0xA14E28", VA = "0xA14E28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7601F4", Offset = "0x7601F4")]
	public VRCanvasInteractable selectorCanvas;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button resumeBtn;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button preferencesBtn;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button locomotionBtn;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button controlsBtn;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button audioBtn;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button videoBtn;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button exitGameBtn;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject selectorBlocker;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76022C", Offset = "0x76022C")]
	public UIOptionsPanel preferencesPanel;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UIOptionsPanel locomotionPanel;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UIOptionsPanel controlsPanel;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UIOptionsPanel videoPanel;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UIOptionsPanel audioPanel;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x760264", Offset = "0x760264")]
	public AudioCue openSound;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioCue closeSound;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x76029C", Offset = "0x76029C")]
	public RectTransform tipPanel;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UIModalText modalDialog;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 selectorScale;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 panelScale;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 tipScale;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float animProgress;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool closing;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool animating;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private UIOptionsPanel activePanel;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool justOpened;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int numBlockers;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool isMainScene;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool hasAddedPause;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private UIOptionsMenuAnchor menuAnchor;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Coroutine recenterCoroutine;

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xA12D48", Offset = "0xA12D48", VA = "0xA12D48", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xA1306C", Offset = "0xA1306C", VA = "0xA1306C", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0xA131B8", Offset = "0xA131B8", VA = "0xA131B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0xA0A2B8", Offset = "0xA0A2B8", VA = "0xA0A2B8")]
	public void Show()
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0xA13504", Offset = "0xA13504", VA = "0xA13504")]
	public void Recenter()
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0xA13328", Offset = "0xA13328", VA = "0xA13328")]
	private void UpdateExitBtnText()
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0xA13B90", Offset = "0xA13B90", VA = "0xA13B90")]
	public void Hide(bool animate = true)
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0xA140B0", Offset = "0xA140B0", VA = "0xA140B0")]
	private void OnHMDUnmounted()
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0xA140E8", Offset = "0xA140E8", VA = "0xA140E8")]
	private void OnHMDMounted()
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0xA14220", Offset = "0xA14220", VA = "0xA14220")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x766614", Offset = "0x766614")]
	private IEnumerator OnHMDMounted_co()
	{
		return null;
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0xA142C8", Offset = "0xA142C8", VA = "0xA142C8", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0xA13968", Offset = "0xA13968", VA = "0xA13968")]
	private void UpdateAnim()
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0xA13744", Offset = "0xA13744", VA = "0xA13744")]
	private void SetPanel(UIOptionsPanel newPanel)
	{
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0xA1434C", Offset = "0xA1434C", VA = "0xA1434C")]
	private void OnResumeBtn()
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0xA14354", Offset = "0xA14354", VA = "0xA14354")]
	private void OnPreferencesPanelBtn()
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0xA1435C", Offset = "0xA1435C", VA = "0xA1435C")]
	private void OnLocomotionPanelBtn()
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0xA14364", Offset = "0xA14364", VA = "0xA14364")]
	private void OnControlsBtn()
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0xA1436C", Offset = "0xA1436C", VA = "0xA1436C")]
	private void OnVideoPanelBtn()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0xA14374", Offset = "0xA14374", VA = "0xA14374")]
	private void OnAudioPanelBtn()
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0xA1437C", Offset = "0xA1437C", VA = "0xA1437C")]
	private void OnExitGameBtn()
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0xA14570", Offset = "0xA14570", VA = "0xA14570")]
	private void OnExitGameConfirm()
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0xA1499C", Offset = "0xA1499C", VA = "0xA1499C")]
	private void OnExitGameCancel()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0xA14A40", Offset = "0xA14A40", VA = "0xA14A40")]
	private void OnChangedLanguage()
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0xA1483C", Offset = "0xA1483C", VA = "0xA1483C")]
	private void ShowModal(string text, [Optional] Action onYesBtn, [Optional] Action onNoBtn)
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0xA13F48", Offset = "0xA13F48", VA = "0xA13F48")]
	private void HideModal([Optional] Action onYesBtn, [Optional] Action onNoBtn)
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0xA138A4", Offset = "0xA138A4", VA = "0xA138A4")]
	private void AddBlocker()
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0xA13E84", Offset = "0xA13E84", VA = "0xA13E84")]
	private void RemoveBlocker()
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0xA14AEC", Offset = "0xA14AEC", VA = "0xA14AEC")]
	public UIOptionsMenu()
	{
	}
}
[Token(Token = "0x20001FC")]
public class UIOptionsMenuAnchor : MonoBehaviour
{
	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float range;

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0xA14E90", Offset = "0xA14E90", VA = "0xA14E90")]
	public UIOptionsMenuAnchor()
	{
	}
}
[Token(Token = "0x20001FD")]
public class UIOptionsPanel : MonoBehaviour
{
	[Token(Token = "0x200040D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BC98", Offset = "0x75BC98")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIOptionsPanel <>4__this;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string tipId;

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xA950C0", Offset = "0xA950C0", VA = "0xA950C0")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xA950C8", Offset = "0xA950C8", VA = "0xA950C8")]
		internal void <SetHoverTip>b__0(BaseEventData evData)
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xA950EC", Offset = "0xA950EC", VA = "0xA950EC")]
		internal void <SetHoverTip>b__1(BaseEventData evData)
		{
		}
	}

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool needsCommit;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI tipText;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject blocker;

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0xA11494", Offset = "0xA11494", VA = "0xA11494", Slot = "4")]
	public virtual void Show()
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0xA1154C", Offset = "0xA1154C", VA = "0xA1154C", Slot = "5")]
	public virtual void Hide()
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0xA14A44", Offset = "0xA14A44", VA = "0xA14A44")]
	public void SetBlocker(bool active = true)
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0xA14EA0", Offset = "0xA14EA0", VA = "0xA14EA0", Slot = "6")]
	public virtual void RefreshData()
	{
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0xA118A4", Offset = "0xA118A4", VA = "0xA118A4")]
	protected int OnButtonArrow(int curValue, TextMeshProUGUI text, int min, int max, int step = 1, [Optional] Button leftArrow, [Optional] Button rightArrow)
	{
		return default(int);
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0xA14EA4", Offset = "0xA14EA4", VA = "0xA14EA4")]
	protected void SetButtonArrowValue(int curValue, TextMeshProUGUI text)
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0xA116B0", Offset = "0xA116B0", VA = "0xA116B0")]
	protected void SetButtonArrowValue(int curValue, TextMeshProUGUI text, int min, int max, Button leftArrow, Button rightArrow)
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0xA14EF0", Offset = "0xA14EF0", VA = "0xA14EF0")]
	protected int OnButtonArrow(int curValue, int min, int max, int step = 1, [Optional] Button leftArrow, [Optional] Button rightArrow)
	{
		return default(int);
	}

	[Token(Token = "0x6001105")]
	protected T OnButtonArrow<T>(T curValue, TextMeshProUGUI text, string translatePrefix, T min, T max, int step = 1, [Optional] Button leftArrow, [Optional] Button rightArrow)
	{
		return (T)null;
	}

	[Token(Token = "0x6001106")]
	protected void SetButtonArrowValue<T>(T curValue, TextMeshProUGUI text, string translatePrefix)
	{
	}

	[Token(Token = "0x6001107")]
	protected void SetButtonArrowValue<T>(T curValue, TextMeshProUGUI text, string translatePrefix, T min, T max, Button leftArrow, Button rightArrow)
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0xA15030", Offset = "0xA15030", VA = "0xA15030")]
	protected int OnButtonArrowFormat(int curValue, TextMeshProUGUI text, string formatTranslateId, int min, int max, int step = 1, [Optional] Button leftArrow, [Optional] Button rightArrow)
	{
		return default(int);
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0xA151F8", Offset = "0xA151F8", VA = "0xA151F8")]
	protected void SetButtonArrowValueFormat(int curValue, TextMeshProUGUI text, string formatTranslateId)
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0xA152CC", Offset = "0xA152CC", VA = "0xA152CC")]
	protected void SetButtonArrowValueFormat(int curValue, TextMeshProUGUI text, string formatTranslateId, int min, int max, Button leftArrow, Button rightArrow)
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0xA12D14", Offset = "0xA12D14", VA = "0xA12D14")]
	protected bool OnCheckbox(bool curValue, Button btn, string yesTextId = "UI_YES", string noTextId = "UI_NO")
	{
		return default(bool);
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0xA123CC", Offset = "0xA123CC", VA = "0xA123CC")]
	protected void SetCheckboxValue(bool curValue, Button btn, string yesTextId = "UI_YES", string noTextId = "UI_NO")
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0xA11140", Offset = "0xA11140", VA = "0xA11140")]
	protected void SetHoverTip(GameObject go, string tipId)
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0xA15450", Offset = "0xA15450", VA = "0xA15450")]
	private void OnHoverStart(string tipId)
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0xA154EC", Offset = "0xA154EC", VA = "0xA154EC")]
	private void OnHoverEnd()
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0xA11C74", Offset = "0xA11C74", VA = "0xA11C74")]
	public UIOptionsPanel()
	{
	}
}
[Token(Token = "0x20001FE")]
public class UIOptionsPreferences : UIOptionsPanel
{
	[Token(Token = "0x200040E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BCA8", Offset = "0x75BCA8")]
	private sealed class <OnForcedHeightBtn_co>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIOptionsPreferences <>4__this;

		[Token(Token = "0x1700021B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B01")]
			[Address(RVA = "0xA9660C", Offset = "0xA9660C", VA = "0xA9660C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B03")]
			[Address(RVA = "0xA96674", Offset = "0xA96674", VA = "0xA96674", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xA96264", Offset = "0xA96264", VA = "0xA96264")]
		[DebuggerHidden]
		public <OnForcedHeightBtn_co>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xA9643C", Offset = "0xA9643C", VA = "0xA9643C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xA96440", Offset = "0xA96440", VA = "0xA96440", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xA96614", Offset = "0xA96614", VA = "0xA96614", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button languageBtnLeft;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button languageBtnRight;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI languageValue;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject languageSlot;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button braceletBtnLeft;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button braceletBtnRight;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI braceletValue;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject braceletSlot;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button toggleGrabBtn;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject toggleGrabSlot;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Button tutorialsBtn;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject tutorialsSlot;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Button forcedHeightBtn;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject forcedHeightSlot;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Button bHapticsBtn;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Button bHapticsPanelBtn;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject bHapticsSlot;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject bHapticsPanel;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string[] validLanguages;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int languageIndex;

	[Token(Token = "0x6001111")]
	[Address(RVA = "0xA95108", Offset = "0xA95108", VA = "0xA95108")]
	private void Start()
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0xA95648", Offset = "0xA95648", VA = "0xA95648", Slot = "4")]
	public override void Show()
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0xA956A8", Offset = "0xA956A8", VA = "0xA956A8", Slot = "5")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xA9573C", Offset = "0xA9573C", VA = "0xA9573C", Slot = "6")]
	public override void RefreshData()
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xA95550", Offset = "0xA95550", VA = "0xA95550")]
	private void InitLangIndex()
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0xA95948", Offset = "0xA95948", VA = "0xA95948")]
	private void OnLanguageBtnLeft()
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0xA95B3C", Offset = "0xA95B3C", VA = "0xA95B3C")]
	private void OnLanguageBtnRight()
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0xA95A24", Offset = "0xA95A24", VA = "0xA95A24")]
	private void ChangeLanguage(string newLanguage)
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0xA95C20", Offset = "0xA95C20", VA = "0xA95C20")]
	private void OnBraceletBtnLeft()
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0xA95D68", Offset = "0xA95D68", VA = "0xA95D68")]
	private void OnBraceletBtnRight()
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0xA95EB0", Offset = "0xA95EB0", VA = "0xA95EB0")]
	private void OnToggleGripBtn()
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0xA95FE0", Offset = "0xA95FE0", VA = "0xA95FE0")]
	private void OnTutorialsBtn()
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0xA96094", Offset = "0xA96094", VA = "0xA96094")]
	private void OnForcedHeightBtn()
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0xA961E8", Offset = "0xA961E8", VA = "0xA961E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x766678", Offset = "0x766678")]
	private IEnumerator OnForcedHeightBtn_co()
	{
		return null;
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0xA96290", Offset = "0xA96290", VA = "0xA96290")]
	private void OnBHapticsBtn()
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0xA96380", Offset = "0xA96380", VA = "0xA96380")]
	private void OnBHapticsPanelBtn()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0xA9642C", Offset = "0xA9642C", VA = "0xA9642C")]
	public UIOptionsPreferences()
	{
	}
}
[Token(Token = "0x20001FF")]
public class UIOptionsVideo : UIOptionsPanel
{
	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button qualityBtnLeft;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button qualityBtnRight;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI qualityValue;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject qualitySlot;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button resolutionBtnLeft;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button resolutionBtnRight;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI resolutionValue;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject resolutionSlot;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button antialiasingBtnLeft;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Button antialiasingBtnRight;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI antialiasingValue;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject antialiasingSlot;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Button applyBtn;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool dirtySettings;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int curQualityLevel;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int curResolution;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Config.VideoCfg.MSAALevel curAntialiasing;

	[Token(Token = "0x4001197")]
	private const int minQualityLevel = 0;

	[Token(Token = "0x4001198")]
	private const int maxQualityLevel = 3;

	[Token(Token = "0x4001199")]
	private const int minResolution = 50;

	[Token(Token = "0x400119A")]
	private const int maxResolution = 150;

	[Token(Token = "0x6001122")]
	[Address(RVA = "0xA9667C", Offset = "0xA9667C", VA = "0xA9667C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0xA96928", Offset = "0xA96928", VA = "0xA96928", Slot = "4")]
	public override void Show()
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0xA96958", Offset = "0xA96958", VA = "0xA96958", Slot = "5")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0xA969C8", Offset = "0xA969C8", VA = "0xA969C8", Slot = "6")]
	public override void RefreshData()
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0xA96B44", Offset = "0xA96B44", VA = "0xA96B44")]
	private void SetDirty()
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0xA96B9C", Offset = "0xA96B9C", VA = "0xA96B9C")]
	private void OnQualityBtnLeft()
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xA96C44", Offset = "0xA96C44", VA = "0xA96C44")]
	private void OnQualityBtnRight()
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xA96CEC", Offset = "0xA96CEC", VA = "0xA96CEC")]
	private void OnResolutionBtnLeft()
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0xA96D88", Offset = "0xA96D88", VA = "0xA96D88")]
	private void OnResolutionBtnRight()
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xA96E24", Offset = "0xA96E24", VA = "0xA96E24")]
	private void OnAntialiasingBtnLeft()
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xA96ECC", Offset = "0xA96ECC", VA = "0xA96ECC")]
	private void OnAntialiasingBtnRight()
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xA96F74", Offset = "0xA96F74", VA = "0xA96F74")]
	private void OnApplyBtn()
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0xA96F78", Offset = "0xA96F78", VA = "0xA96F78")]
	public UIOptionsVideo()
	{
	}
}
[Token(Token = "0x2000200")]
public class UIScreenToggle : MonoBehaviour
{
	[Token(Token = "0x200040F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BCB8", Offset = "0x75BCB8")]
	private sealed class <Flicker_co>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIScreenToggle <>4__this;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <wasEnabled>5__2;

		[Token(Token = "0x1700021D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B07")]
			[Address(RVA = "0xA975B8", Offset = "0xA975B8", VA = "0xA975B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B09")]
			[Address(RVA = "0xA97620", Offset = "0xA97620", VA = "0xA97620", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xA97470", Offset = "0xA97470", VA = "0xA97470")]
		[DebuggerHidden]
		public <Flicker_co>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xA974B0", Offset = "0xA974B0", VA = "0xA974B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xA974B4", Offset = "0xA974B4", VA = "0xA974B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xA975C0", Offset = "0xA975C0", VA = "0xA975C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float animSpeed;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float openScaleY;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float target;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float currentFactor;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Canvas canvas;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer renderer;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x7602AC", Offset = "0x7602AC")]
	public bool _toggleTest;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isFlickering;

	[Token(Token = "0x600112F")]
	[Address(RVA = "0xA96F80", Offset = "0xA96F80", VA = "0xA96F80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0xA97068", Offset = "0xA97068", VA = "0xA97068")]
	private void Update()
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0xA97264", Offset = "0xA97264", VA = "0xA97264")]
	public void Toggle(bool newState, bool instantaneous = false)
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0xA97380", Offset = "0xA97380", VA = "0xA97380")]
	public bool IsToggled()
	{
		return default(bool);
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0xA97394", Offset = "0xA97394", VA = "0xA97394")]
	public void ToggleTest()
	{
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0xA973BC", Offset = "0xA973BC", VA = "0xA973BC")]
	public void Flicker()
	{
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xA973F4", Offset = "0xA973F4", VA = "0xA973F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7666DC", Offset = "0x7666DC")]
	private IEnumerator Flicker_co()
	{
		return null;
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xA9749C", Offset = "0xA9749C", VA = "0xA9749C")]
	public UIScreenToggle()
	{
	}
}
[Token(Token = "0x2000201")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75AA94", Offset = "0x75AA94")]
public class UISetHoverColors : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
{
	[Serializable]
	[Token(Token = "0x2000410")]
	public class HoverColor
	{
		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Graphic graphic;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color highlightedColor;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color normalColor;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color disabledColor;

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xA977EC", Offset = "0xA977EC", VA = "0xA977EC")]
		public HoverColor()
		{
		}
	}

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button btn;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HoverColor[] hoverColors;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool interactable;

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xA97628", Offset = "0xA97628", VA = "0xA97628")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xA976A0", Offset = "0xA976A0", VA = "0xA976A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xA97790", Offset = "0xA97790", VA = "0xA97790")]
	private void Update()
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xA977D4", Offset = "0xA977D4", VA = "0xA977D4", Slot = "4")]
	public void OnSelect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xA977DC", Offset = "0xA977DC", VA = "0xA977DC", Slot = "5")]
	public void OnDeselect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xA976A8", Offset = "0xA976A8", VA = "0xA976A8")]
	private void UpdateColors(bool highlighted)
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0xA977E4", Offset = "0xA977E4", VA = "0xA977E4")]
	public UISetHoverColors()
	{
	}
}
[Token(Token = "0x2000202")]
public class UITypewriteText : MonoBehaviour
{
	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeInterval;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float startDelay;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool playOnEnable;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool playOnStart;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text text;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TMP_Text textTMP;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string targetText;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string currentText;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timer;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action onFinish;

	[Token(Token = "0x170000DC")]
	private string Text
	{
		[Token(Token = "0x600113E")]
		[Address(RVA = "0xA977F4", Offset = "0xA977F4", VA = "0xA977F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600113F")]
		[Address(RVA = "0xA978F0", Offset = "0xA978F0", VA = "0xA978F0")]
		set
		{
		}
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0xA979E8", Offset = "0xA979E8", VA = "0xA979E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0xA97A6C", Offset = "0xA97A6C", VA = "0xA97A6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xA97B5C", Offset = "0xA97B5C", VA = "0xA97B5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xA97BD4", Offset = "0xA97BD4", VA = "0xA97BD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xA97AF0", Offset = "0xA97AF0", VA = "0xA97AF0")]
	private void StartFX()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xA97D8C", Offset = "0xA97D8C", VA = "0xA97D8C")]
	public void SetFinished()
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xA97DD4", Offset = "0xA97DD4", VA = "0xA97DD4")]
	public UITypewriteText()
	{
	}
}
[Token(Token = "0x2000203")]
public class UIVesselInfo : MonoBehaviour
{
	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text nameTxt;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text registrationTxt;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text typeTxt;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text sizeTxt;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text lifeSupportTxt;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text orbitTxt;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text boardStatusTxt;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image shipPicture;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button boardBtn;

	[Token(Token = "0x6001147")]
	[Address(RVA = "0xA97DE8", Offset = "0xA97DE8", VA = "0xA97DE8")]
	public void SetVessel(GalaxyMap gm, int vesselId)
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xA980E4", Offset = "0xA980E4", VA = "0xA980E4")]
	public void OnBoard()
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0xA980E8", Offset = "0xA980E8", VA = "0xA980E8")]
	public UIVesselInfo()
	{
	}
}
[Token(Token = "0x2000204")]
public struct Barycentric
{
	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float u;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float v;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float w;

	[Token(Token = "0x170000DD")]
	public bool IsInside
	{
		[Token(Token = "0x600114F")]
		[Address(RVA = "0xAC9A4C", Offset = "0xAC9A4C", VA = "0xAC9A4C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0xAC9314", Offset = "0xAC9314", VA = "0xAC9314")]
	public Barycentric(float aU, float aV, float aW)
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0xAC9320", Offset = "0xAC9320", VA = "0xAC9320")]
	public Barycentric(Vector2 aV1, Vector2 aV2, Vector2 aV3, Vector2 aP)
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0xAC9494", Offset = "0xAC9494", VA = "0xAC9494")]
	public Barycentric(Vector3 aV1, Vector3 aV2, Vector3 aV3, Vector3 aP)
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xAC9670", Offset = "0xAC9670", VA = "0xAC9670")]
	public Barycentric(Vector4 aV1, Vector4 aV2, Vector4 aV3, Vector4 aP)
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xAC98A4", Offset = "0xAC98A4", VA = "0xAC98A4")]
	public Barycentric(Color aV1, Color aV2, Color aV3, Color aP)
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xAC9A94", Offset = "0xAC9A94", VA = "0xAC9A94")]
	public Vector2 Interpolate(Vector2 v1, Vector2 v2, Vector2 v3)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xAC9BA8", Offset = "0xAC9BA8", VA = "0xAC9BA8")]
	public Vector3 Interpolate(Vector3 v1, Vector3 v2, Vector3 v3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xAC9CF8", Offset = "0xAC9CF8", VA = "0xAC9CF8")]
	public Vector4 Interpolate(Vector4 v1, Vector4 v2, Vector4 v3)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0xAC9E7C", Offset = "0xAC9E7C", VA = "0xAC9E7C")]
	public Color Interpolate(Color v1, Color v2, Color v3)
	{
		return default(Color);
	}
}
[Token(Token = "0x2000205")]
public class CameraPathFollowing : MonoBehaviour
{
	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7602F0", Offset = "0x7602F0")]
	public Transform[] wayPoints;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform lookAt;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x760328", Offset = "0x760328")]
	public Vector3 startPos;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Quaternion startRot;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 endPos;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion endRot;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x760360", Offset = "0x760360")]
	public float speed;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float progress;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isPlaying;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x760398", Offset = "0x760398")]
	public bool _addWaypoint;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x7603EC", Offset = "0x7603EC")]
	public bool _setStart;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x760440", Offset = "0x760440")]
	public bool _setEnd;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x760494", Offset = "0x760494")]
	public bool _play;

	[Token(Token = "0x6001154")]
	[Address(RVA = "0x92D890", Offset = "0x92D890", VA = "0x92D890")]
	private void Update()
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0x92DAD8", Offset = "0x92DAD8", VA = "0x92DAD8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0x92DBA4", Offset = "0x92DBA4", VA = "0x92DBA4")]
	private void AddWaypoint()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0x92DCE8", Offset = "0x92DCE8", VA = "0x92DCE8")]
	private void SetStart()
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x92DD44", Offset = "0x92DD44", VA = "0x92DD44")]
	private void SetEnd()
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x92DAC8", Offset = "0x92DAC8", VA = "0x92DAC8")]
	private void Play()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x92DDA0", Offset = "0x92DDA0", VA = "0x92DDA0")]
	public CameraPathFollowing()
	{
	}
}
[Token(Token = "0x2000206")]
public class CubemapScreenshot : MonoBehaviour
{
	[Token(Token = "0x600115B")]
	[Address(RVA = "0x9685D4", Offset = "0x9685D4", VA = "0x9685D4")]
	public static void SaveScreenshot(Camera ownerCamera, Cubemap outCubemap, bool hdr = true)
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0x968C44", Offset = "0x968C44", VA = "0x968C44")]
	public static bool SaveToTexture(Cubemap cubemap, string pathName, bool hdr = true)
	{
		return default(bool);
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0x969250", Offset = "0x969250", VA = "0x969250")]
	public CubemapScreenshot()
	{
	}
}
[Token(Token = "0x2000207")]
public class EnableIfCmdLine : MonoBehaviour
{
	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string cmdLineArg;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objs;

	[Token(Token = "0x600115E")]
	[Address(RVA = "0xA1A620", Offset = "0xA1A620", VA = "0xA1A620")]
	private void Awake()
	{
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0xA1A6E0", Offset = "0xA1A6E0", VA = "0xA1A6E0")]
	public EnableIfCmdLine()
	{
	}
}
[Token(Token = "0x2000208")]
public class FPSCounter : MonoBehaviour
{
	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh textMesh;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool showFPS;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode toggleFPSKey;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string toggleFPSButton;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float counter;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int frames;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float fps;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lastTime;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float accum;

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xA1E308", Offset = "0xA1E308", VA = "0xA1E308")]
	private void Start()
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xA1E37C", Offset = "0xA1E37C", VA = "0xA1E37C")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xA1E4C8", Offset = "0xA1E4C8", VA = "0xA1E4C8")]
	public FPSCounter()
	{
	}
}
[Token(Token = "0x2000209")]
public class LookAtPlayer : MonoBehaviour
{
	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool vertical;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool invert;

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xA3A7A4", Offset = "0xA3A7A4", VA = "0xA3A7A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xA3A9B4", Offset = "0xA3A9B4", VA = "0xA3A9B4")]
	public LookAtPlayer()
	{
	}
}
[Token(Token = "0x200020A")]
public class LookAtTarget : MonoBehaviour
{
	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool inverted;

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xA3A9BC", Offset = "0xA3A9BC", VA = "0xA3A9BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xA3A9C0", Offset = "0xA3A9C0", VA = "0xA3A9C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0xA3ABD0", Offset = "0xA3ABD0", VA = "0xA3ABD0")]
	public LookAtTarget()
	{
	}
}
[Token(Token = "0x200020B")]
public class ObjExporter
{
	[Token(Token = "0x6001168")]
	[Address(RVA = "0xB98214", Offset = "0xB98214", VA = "0xB98214")]
	public static string MeshToString(MeshFilter mf)
	{
		return null;
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0xB987FC", Offset = "0xB987FC", VA = "0xB987FC")]
	public static void MeshToFile(MeshFilter mf, string filename)
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0xB9892C", Offset = "0xB9892C", VA = "0xB9892C")]
	public ObjExporter()
	{
	}
}
[Token(Token = "0x200020C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75AAF8", Offset = "0x75AAF8")]
public class ParticleAlign : MonoBehaviour
{
	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem pSystem;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform alignTo;

	[Token(Token = "0x600116B")]
	[Address(RVA = "0x9E3E54", Offset = "0x9E3E54", VA = "0x9E3E54")]
	private void Start()
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0x9E3E58", Offset = "0x9E3E58", VA = "0x9E3E58")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0x9E40D4", Offset = "0x9E40D4", VA = "0x9E40D4")]
	private void InitializeIfNeeded()
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0x9E4200", Offset = "0x9E4200", VA = "0x9E4200")]
	public ParticleAlign()
	{
	}
}
[Token(Token = "0x200020D")]
public class ParticleDie : MonoBehaviour
{
	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem particles;

	[Token(Token = "0x600116F")]
	[Address(RVA = "0x9E4208", Offset = "0x9E4208", VA = "0x9E4208")]
	private void Start()
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0x9E4268", Offset = "0x9E4268", VA = "0x9E4268")]
	private void Update()
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0x9E430C", Offset = "0x9E430C", VA = "0x9E430C")]
	public ParticleDie()
	{
	}
}
[Token(Token = "0x200020E")]
[ExecuteInEditMode]
public class PrefabInstance : MonoBehaviour
{
	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x6001172")]
	[Address(RVA = "0x9F3DA0", Offset = "0x9F3DA0", VA = "0x9F3DA0")]
	public PrefabInstance()
	{
	}
}
[Token(Token = "0x200020F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x75AB6C", Offset = "0x75AB6C")]
public class RandomNamesList : ScriptableObject
{
	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset sourceText;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<string> shuffledNames;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] listNames;

	[Token(Token = "0x6001173")]
	[Address(RVA = "0xA4DEE4", Offset = "0xA4DEE4", VA = "0xA4DEE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0xA4DF9C", Offset = "0xA4DF9C", VA = "0xA4DF9C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0xA4E024", Offset = "0xA4E024", VA = "0xA4E024")]
	public string GetName()
	{
		return null;
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0xA4E0FC", Offset = "0xA4E0FC", VA = "0xA4E0FC")]
	public RandomNamesList()
	{
	}
}
[Token(Token = "0x2000210")]
public class Screenshot : MonoBehaviour
{
	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int width;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int height;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int supersize;

	[Token(Token = "0x6001177")]
	[Address(RVA = "0x90ACB4", Offset = "0x90ACB4", VA = "0x90ACB4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0x90AD04", Offset = "0x90AD04", VA = "0x90AD04")]
	private void TakeScreenshot()
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0x90AFA4", Offset = "0x90AFA4", VA = "0x90AFA4")]
	public Screenshot()
	{
	}
}
[Token(Token = "0x2000211")]
public class SetCameraDepthTexture : MonoBehaviour
{
	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DepthTextureMode mode;

	[Token(Token = "0x600117A")]
	[Address(RVA = "0x910AE8", Offset = "0x910AE8", VA = "0x910AE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0x910B98", Offset = "0x910B98", VA = "0x910B98")]
	public SetCameraDepthTexture()
	{
	}
}
[Token(Token = "0x2000212")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x75ABB0", Offset = "0x75ABB0")]
public class SetLODGroupCulled : MonoBehaviour
{
	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float[] culledPercentage;

	[Token(Token = "0x600117C")]
	[Address(RVA = "0x910BA0", Offset = "0x910BA0", VA = "0x910BA0")]
	private void Start()
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0x910CD0", Offset = "0x910CD0", VA = "0x910CD0")]
	public SetLODGroupCulled()
	{
	}
}
[Token(Token = "0x2000213")]
public class SetZWrite : MonoBehaviour
{
	[Token(Token = "0x600117E")]
	[Address(RVA = "0x910E74", Offset = "0x910E74", VA = "0x910E74")]
	private void Start()
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0x910EF0", Offset = "0x910EF0", VA = "0x910EF0")]
	public SetZWrite()
	{
	}
}
[Token(Token = "0x2000214")]
public class SmoothFollowing : MonoBehaviour
{
	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool smooth;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7604DC", Offset = "0x7604DC")]
	public float posRate;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7604F4", Offset = "0x7604F4")]
	public float rotRate;

	[Token(Token = "0x6001180")]
	[Address(RVA = "0x918ECC", Offset = "0x918ECC", VA = "0x918ECC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0x918FB8", Offset = "0x918FB8", VA = "0x918FB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0x91926C", Offset = "0x91926C", VA = "0x91926C")]
	public SmoothFollowing()
	{
	}
}
namespace Triangulator
{
	[Token(Token = "0x2000215")]
	public class Delauney
	{
		[Token(Token = "0x6001183")]
		[Address(RVA = "0x9FFA40", Offset = "0x9FFA40", VA = "0x9FFA40")]
		public static List<Triangulator.Geometry.Triangle> Triangulate(List<Triangulator.Geometry.Point> Vertex)
		{
			return null;
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xA006D0", Offset = "0xA006D0", VA = "0xA006D0")]
		public static void TriangulateEdges(List<Vector2> points, List<Pair<int, int>> edges)
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xA003CC", Offset = "0xA003CC", VA = "0xA003CC")]
		private static bool InCircle(Triangulator.Geometry.Point p, Triangulator.Geometry.Point p1, Triangulator.Geometry.Point p2, Triangulator.Geometry.Point p3)
		{
			return default(bool);
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xA00AA4", Offset = "0xA00AA4", VA = "0xA00AA4")]
		public Delauney()
		{
		}
	}
}
namespace Triangulator.Geometry
{
	[Token(Token = "0x2000216")]
	public class Edge : IEquatable<Edge>
	{
		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int p1;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int p2;

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xA0063C", Offset = "0xA0063C", VA = "0xA0063C")]
		public Edge(int point1, int point2)
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xA00AAC", Offset = "0xA00AAC", VA = "0xA00AAC")]
		public Edge()
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xA00674", Offset = "0xA00674", VA = "0xA00674", Slot = "4")]
		public bool Equals(Edge other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000217")]
	public class Point
	{
		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected double _X;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected double _Y;

		[Token(Token = "0x170000DE")]
		public double X
		{
			[Token(Token = "0x600118B")]
			[Address(RVA = "0xA00AD4", Offset = "0xA00AD4", VA = "0xA00AD4")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600118C")]
			[Address(RVA = "0xA00ADC", Offset = "0xA00ADC", VA = "0xA00ADC")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public double Y
		{
			[Token(Token = "0x600118D")]
			[Address(RVA = "0xA00AE4", Offset = "0xA00AE4", VA = "0xA00AE4")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600118E")]
			[Address(RVA = "0xA00AEC", Offset = "0xA00AEC", VA = "0xA00AEC")]
			set
			{
			}
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xA00388", Offset = "0xA00388", VA = "0xA00388")]
		public Point(double x, double y)
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xA00AF4", Offset = "0xA00AF4", VA = "0xA00AF4")]
		public bool Equals2D(Point other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000218")]
	public class Point<T> : Point
	{
		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _attr;

		[Token(Token = "0x170000E0")]
		public T Attribute
		{
			[Token(Token = "0x6001192")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001193")]
			set
			{
			}
		}

		[Token(Token = "0x6001190")]
		public Point(double x, double y, T attribute)
		{
		}

		[Token(Token = "0x6001191")]
		public Point(double x, double y)
		{
		}
	}
	[Token(Token = "0x2000219")]
	public struct Triangle
	{
		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int p1;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int p2;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int p3;

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xA003C0", Offset = "0xA003C0", VA = "0xA003C0")]
		public Triangle(int point1, int point2, int point3)
		{
		}
	}
}
namespace Valve.VR.InteractionSystem
{
	[Token(Token = "0x200021A")]
	public class TeleportArc : MonoBehaviour
	{
		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int segmentCount;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float thickness;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x76050C", Offset = "0x76050C")]
		public float arcDuration;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x760544", Offset = "0x760544")]
		public float segmentBreak;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x76057C", Offset = "0x76057C")]
		public float arcSpeed;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material material;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public int traceLayerMask;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool useCustomGravity;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 customGravity;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LineRenderer[] lineRenderers;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float arcTimeOffset;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float prevThickness;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int prevSegmentCount;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool showArc;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 startPos;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 projectileVelocity;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool useGravity;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform arcObjectsTransfrom;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool arcInvalid;

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xAB02D4", Offset = "0xAB02D4", VA = "0xAB02D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xAB02FC", Offset = "0xAB02FC", VA = "0xAB02FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xAB0348", Offset = "0xAB0348", VA = "0xAB0348")]
		private void CreateLineRendererObjects()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xAB0710", Offset = "0xAB0710", VA = "0xAB0710")]
		public void SetArcData(Vector3 position, Vector3 velocity, bool gravity, bool pointerAtBadAngle)
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xAB0764", Offset = "0xAB0764", VA = "0xAB0764")]
		public void Show()
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xAB077C", Offset = "0xAB077C", VA = "0xAB077C")]
		public void Hide()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xAB0838", Offset = "0xAB0838", VA = "0xAB0838")]
		public bool DrawArc(out RaycastHit hitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xAB0D58", Offset = "0xAB0D58", VA = "0xAB0D58")]
		private void DrawArcSegment(int index, float startTime, float endTime)
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xAB0E60", Offset = "0xAB0E60", VA = "0xAB0E60")]
		public void AdjustArc(Vector3 offset, Vector3 startPos, Vector3 endPos)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xAB10A4", Offset = "0xAB10A4", VA = "0xAB10A4")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xAB0A50", Offset = "0xAB0A50", VA = "0xAB0A50")]
		private float FindProjectileCollision(out RaycastHit hitInfo)
		{
			return default(float);
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xAB0BEC", Offset = "0xAB0BEC", VA = "0xAB0BEC")]
		public Vector3 GetArcPositionAtTime(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xAB07B4", Offset = "0xAB07B4", VA = "0xAB07B4")]
		private void HideLineSegments(int startSegment, int endSegment)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xAB1190", Offset = "0xAB1190", VA = "0xAB1190")]
		public TeleportArc()
		{
		}
	}
}
namespace Inspector
{
	[Token(Token = "0x200021B")]
	public class ArrayElementTitleAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Varname;

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x9E2690", Offset = "0x9E2690", VA = "0x9E2690")]
		public ArrayElementTitleAttribute(string ElementTitleVar)
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class BitMaskAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type propType;

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x9E26C4", Offset = "0x9E26C4", VA = "0x9E26C4")]
		public BitMaskAttribute(Type aType)
		{
		}
	}
	[Token(Token = "0x200021D")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x75AC14", Offset = "0x75AC14")]
	public class ButtonAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float kDefaultButtonWidth;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string MethodName;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _buttonWidth;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _buttonText;

		[Token(Token = "0x170000E1")]
		public float ButtonWidth
		{
			[Token(Token = "0x60011A5")]
			[Address(RVA = "0x9E26F8", Offset = "0x9E26F8", VA = "0x9E26F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011A6")]
			[Address(RVA = "0x9E2700", Offset = "0x9E2700", VA = "0x9E2700")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public string ButtonText
		{
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x9E2708", Offset = "0x9E2708", VA = "0x9E2708")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x9E2710", Offset = "0x9E2710", VA = "0x9E2710")]
			set
			{
			}
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x9E2718", Offset = "0x9E2718", VA = "0x9E2718")]
		public ButtonAttribute(string MethodName)
		{
		}
	}
	[Token(Token = "0x200021E")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x75AC28", Offset = "0x75AC28")]
	public class RoomTranslateAttribute : PropertyAttribute
	{
		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string MethodName;

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x9E2818", Offset = "0x9E2818", VA = "0x9E2818")]
		public RoomTranslateAttribute(string MethodName)
		{
		}
	}
}
namespace VRInteraction
{
	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x75AC3C", Offset = "0x75AC3C")]
	public class AimingGrabPoint : MonoBehaviour
	{
		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform mainObject;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Interactable interactable;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Highlightable highlightable;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion defaultRotation;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion aimRotation;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isAiming;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Hand _aimingHand;

		[Token(Token = "0x170000E3")]
		public bool IsAiming
		{
			[Token(Token = "0x60011AC")]
			[Address(RVA = "0xEE2384", Offset = "0xEE2384", VA = "0xEE2384")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E4")]
		public Hand AimingHand
		{
			[Token(Token = "0x60011AD")]
			[Address(RVA = "0xEE238C", Offset = "0xEE238C", VA = "0xEE238C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xEE2394", Offset = "0xEE2394", VA = "0xEE2394")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xEE2418", Offset = "0xEE2418", VA = "0xEE2418")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xEE2A30", Offset = "0xEE2A30", VA = "0xEE2A30")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xEE303C", Offset = "0xEE303C", VA = "0xEE303C")]
		private void OnMainAttached(Hand hand)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xEE30C8", Offset = "0xEE30C8", VA = "0xEE30C8")]
		private void OnMainReleased(Hand hand)
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xEE30E4", Offset = "0xEE30E4", VA = "0xEE30E4")]
		private void OnHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xEE37C0", Offset = "0xEE37C0", VA = "0xEE37C0")]
		private void OnHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xEE3E4C", Offset = "0xEE3E4C", VA = "0xEE3E4C")]
		private void OnHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xEE3EF4", Offset = "0xEE3EF4", VA = "0xEE3EF4")]
		private void OnMainAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xEE441C", Offset = "0xEE441C", VA = "0xEE441C")]
		public AimingGrabPoint()
		{
		}
	}
	[Token(Token = "0x2000220")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x75ACA0", Offset = "0x75ACA0")]
	public class ControllerHaptics : MonoBehaviour
	{
		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand hand;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioClip playingClip;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float clipStrength;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool clipLoop;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] samples;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int sampleOffset;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float startTime;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float endTime;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float length;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int cleanup;

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xEE4424", Offset = "0xEE4424", VA = "0xEE4424")]
		private void Start()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xEE4484", Offset = "0xEE4484", VA = "0xEE4484")]
		private void Update()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xEE4694", Offset = "0xEE4694", VA = "0xEE4694")]
		public void PlayClip(AudioClip clip, float strength = 1f, bool loop = false)
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xEE4720", Offset = "0xEE4720", VA = "0xEE4720")]
		public void StopClip()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xEE47F0", Offset = "0xEE47F0", VA = "0xEE47F0")]
		public void PlayPulse(float strength)
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xEE4758", Offset = "0xEE4758", VA = "0xEE4758")]
		private void SetVibration(float strength)
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xEE4818", Offset = "0xEE4818", VA = "0xEE4818")]
		public ControllerHaptics()
		{
		}
	}
	[Token(Token = "0x2000221")]
	public class ControllerVelocity : MonoBehaviour
	{
		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int velNumFrames;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int angNumFrames;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int sampleCount;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] velocities;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] angularVelocities;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isRecording;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion lastRotation;

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xEE488C", Offset = "0xEE488C", VA = "0xEE488C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xEE4910", Offset = "0xEE4910", VA = "0xEE4910")]
		public void StartRecording()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xEE4978", Offset = "0xEE4978", VA = "0xEE4978")]
		public void EndRecording()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xEE4980", Offset = "0xEE4980", VA = "0xEE4980")]
		public Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xEE4B38", Offset = "0xEE4B38", VA = "0xEE4B38")]
		public Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xEE4988", Offset = "0xEE4988", VA = "0xEE4988")]
		private Vector3 GetAverage(Vector3[] samples)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xEE4B40", Offset = "0xEE4B40", VA = "0xEE4B40")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xEE4EE0", Offset = "0xEE4EE0", VA = "0xEE4EE0")]
		public ControllerVelocity()
		{
		}
	}
	[Token(Token = "0x2000222")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x75AD04", Offset = "0x75AD04")]
	public class DraggableLinear : MonoBehaviour
	{
		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform startPos;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform endPos;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7605C4", Offset = "0x7605C4")]
		public float posRate;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rateOffset;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isDragging;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool usingGrabBtn;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxHandInteractionDistance;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useLocalParentPositioning;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7605DC", Offset = "0x7605DC")]
		public bool hasMomentum;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float momentumFriction;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int numChangeRateSamples;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] changeRateSamples;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int sampleRateIdx;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float changeRate;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x760614", Offset = "0x760614")]
		public bool hasSpring;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float springPoint;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float springStrength;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76065C", Offset = "0x76065C")]
		public AudioCue snapStartAudio;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioCue snapEndAudio;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioCue dragPulseAudio;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float dragPulseInterval;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastDragPulse;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool canPlaySnapStart;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool canPlaySnapEnd;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioCue dragLoopAudio;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private AudioSource dragLoopSound;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float dragLoopMaxChangeRate;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x760694", Offset = "0x760694")]
		public Vector2 dragLoopVolRate;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x7606B4", Offset = "0x7606B4")]
		public Vector2 dragLoopPitchRate;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7606D4", Offset = "0x7606D4")]
		public float hapticsDragPulsesStrength;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float hapticsSnapStrength;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Action<DraggableLinear> onSnap;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Hand lockedHand;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 handStartInteractionPos;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private int updateTask;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float dragLoopLastRate;

		[Token(Token = "0x170000E5")]
		public bool IsDragging
		{
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0xEE4EF4", Offset = "0xEE4EF4", VA = "0xEE4EF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xEE4EFC", Offset = "0xEE4EFC", VA = "0xEE4EFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xEE4FA4", Offset = "0xEE4FA4", VA = "0xEE4FA4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xEE526C", Offset = "0xEE526C", VA = "0xEE526C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xEE52D4", Offset = "0xEE52D4", VA = "0xEE52D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xEE53E4", Offset = "0xEE53E4", VA = "0xEE53E4")]
		private void OnHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xEE5E0C", Offset = "0xEE5E0C", VA = "0xEE5E0C")]
		public void StopDragging(Hand hand)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xEE6444", Offset = "0xEE6444", VA = "0xEE6444")]
		private void UpdateTask()
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xEE6844", Offset = "0xEE6844", VA = "0xEE6844")]
		public void SetSpringPoint(float point)
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xEE5C88", Offset = "0xEE5C88", VA = "0xEE5C88")]
		private float GetLinearRate(Transform hand)
		{
			return default(float);
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xEE6004", Offset = "0xEE6004", VA = "0xEE6004")]
		private float UpdateLinearMapping(Transform hand, out bool snap)
		{
			return default(float);
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xEE6354", Offset = "0xEE6354", VA = "0xEE6354")]
		private float EstimateChangeRate()
		{
			return default(float);
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xEE6924", Offset = "0xEE6924", VA = "0xEE6924")]
		public void SetPosRate(float rate)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xEE6188", Offset = "0xEE6188", VA = "0xEE6188")]
		private void PlayDragPulses(float newRate, Hand hand)
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xEE6A64", Offset = "0xEE6A64", VA = "0xEE6A64")]
		public DraggableLinear()
		{
		}
	}
	[Token(Token = "0x2000223")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x75AD68", Offset = "0x75AD68")]
	public class DraggableRotation : MonoBehaviour
	{
		[Token(Token = "0x2000411")]
		public enum RotAxis
		{
			[Token(Token = "0x4001C58")]
			X,
			[Token(Token = "0x4001C59")]
			Y,
			[Token(Token = "0x4001C5A")]
			Z
		}

		[Token(Token = "0x2000412")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BCC8", Offset = "0x75BCC8")]
		private sealed class <ForceOpen_co>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DraggableRotation <>4__this;

			[Token(Token = "0x4001C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float speed;

			[Token(Token = "0x4001C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Interactable <interactable>5__2;

			[Token(Token = "0x4001C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <wasListeningHands>5__3;

			[Token(Token = "0x1700021F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B0E")]
				[Address(RVA = "0xEE8534", Offset = "0xEE8534", VA = "0xEE8534", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000220")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B10")]
				[Address(RVA = "0xEE859C", Offset = "0xEE859C", VA = "0xEE859C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B0B")]
			[Address(RVA = "0xEE8288", Offset = "0xEE8288", VA = "0xEE8288")]
			[DebuggerHidden]
			public <ForceOpen_co>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x6001B0C")]
			[Address(RVA = "0xEE83CC", Offset = "0xEE83CC", VA = "0xEE83CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B0D")]
			[Address(RVA = "0xEE83D0", Offset = "0xEE83D0", VA = "0xEE83D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B0F")]
			[Address(RVA = "0xEE853C", Offset = "0xEE853C", VA = "0xEE853C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float startAngle;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float endAngle;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RotAxis rotAxis;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x76070C", Offset = "0x76070C")]
		public float rotRate;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isDragging;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool usingGrabBtn;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float movementMultiplier;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool scaleMultiplierByDistance;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x760724", Offset = "0x760724")]
		public float scaleMultiplierRange;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x76075C", Offset = "0x76075C")]
		public Vector3 scaleMultiplierEdgePos;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float maxHandInteractionDistance;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool hasMomentum;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float momentumFriction;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int numChangeRateSamples;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[] changeRateSamples;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int sampleRateIdx;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float changeRate;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x760794", Offset = "0x760794")]
		public AudioCue snapStartAudio;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioCue snapEndAudio;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioCue dragPulseAudio;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float dragPulseInterval;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastDragPulse;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool canPlaySnapStart;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool canPlaySnapEnd;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioCue dragLoopAudio;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private AudioSource dragLoopSound;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float dragLoopMaxChangeRate;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x7607CC", Offset = "0x7607CC")]
		public Vector2 dragLoopVolRate;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x7607EC", Offset = "0x7607EC")]
		public Vector2 dragLoopPitchRate;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76080C", Offset = "0x76080C")]
		public float hapticsDragPulsesStrength;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float hapticsSnapStrength;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 worldRotPlaneNormal;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 localRotPlaneNormal;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 lastHandProjected;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 handStartInteractionPos;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Action<DraggableRotation> onSnap;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int updateTask;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float dragLoopLastRate;

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xEE6B24", Offset = "0xEE6B24", VA = "0xEE6B24")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xEE6BCC", Offset = "0xEE6BCC", VA = "0xEE6BCC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xEE6CF0", Offset = "0xEE6CF0", VA = "0xEE6CF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xEE6D58", Offset = "0xEE6D58", VA = "0xEE6D58")]
		private void Start()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xEE6F40", Offset = "0xEE6F40", VA = "0xEE6F40")]
		private void OnHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xEE7F9C", Offset = "0xEE7F9C", VA = "0xEE7F9C")]
		private void UpdateTask()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xEE81A4", Offset = "0xEE81A4", VA = "0xEE81A4")]
		public void SetRate(float newRate)
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xEE6E4C", Offset = "0xEE6E4C", VA = "0xEE6E4C")]
		private void RepositionObject(float rate)
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xEE7948", Offset = "0xEE7948", VA = "0xEE7948")]
		private float UpdateAngularMapping(Vector3 handPos, out bool snap)
		{
			return default(float);
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xEE76BC", Offset = "0xEE76BC", VA = "0xEE76BC")]
		private Vector3 ProjectToRotationPlane(Vector3 handPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xEE81AC", Offset = "0xEE81AC", VA = "0xEE81AC")]
		private Vector2 GetRotationPlaneVector(Vector3 pos)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xEE7858", Offset = "0xEE7858", VA = "0xEE7858")]
		private float EstimateChangeRate()
		{
			return default(float);
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xEE7DD0", Offset = "0xEE7DD0", VA = "0xEE7DD0")]
		private void PlayDragPulses(float newRate, Hand hand)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xEE81D0", Offset = "0xEE81D0", VA = "0xEE81D0")]
		public void ForceOpen(float speed = 5f)
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xEE81FC", Offset = "0xEE81FC", VA = "0xEE81FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x766740", Offset = "0x766740")]
		private IEnumerator ForceOpen_co(float speed = 5f)
		{
			return null;
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xEE82B4", Offset = "0xEE82B4", VA = "0xEE82B4")]
		public DraggableRotation()
		{
		}
	}
	[Token(Token = "0x2000224")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x75ADCC", Offset = "0x75ADCC")]
	public class Grabbable : MonoBehaviour
	{
		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool snapInstantly;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform attachPoint;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform attachPointLeft;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform attachPointRight;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 posOffset;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 rotOffset;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool disableCollider;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool disableDefaultRenderer;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int customPose;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action<Hand> onGrabbed;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action<Hand> onReleased;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioCue grabSound;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Hand attachedHand;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RigidbodyInterpolation rbInterpolation;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int restoreCollisionTask;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CollisionDetectionMode collisionMode;

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xEE85A4", Offset = "0xEE85A4", VA = "0xEE85A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xEE86E4", Offset = "0xEE86E4", VA = "0xEE86E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xEE8B6C", Offset = "0xEE8B6C", VA = "0xEE8B6C")]
		private void OnHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xEE1214", Offset = "0xEE1214", VA = "0xEE1214")]
		public void AttachToHand(Hand hand)
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xEE9854", Offset = "0xEE9854", VA = "0xEE9854")]
		private void OnAttached(Hand hand)
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xEE9AA8", Offset = "0xEE9AA8", VA = "0xEE9AA8")]
		private void OnAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xEE9B94", Offset = "0xEE9B94", VA = "0xEE9B94")]
		private void OnReleased(Hand hand)
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xEE9ECC", Offset = "0xEE9ECC", VA = "0xEE9ECC")]
		public Hand GetAttachedHand()
		{
			return null;
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xEE8AAC", Offset = "0xEE8AAC", VA = "0xEE8AAC")]
		private void RestoreCollisionMode()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xEE9ED4", Offset = "0xEE9ED4", VA = "0xEE9ED4")]
		public Grabbable()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x2000413")]
		public enum ControllerType
		{
			[Token(Token = "0x4001C62")]
			SixDOF,
			[Token(Token = "0x4001C63")]
			ThreeDOF,
			[Token(Token = "0x4001C64")]
			Pointer2D
		}

		[Token(Token = "0x2000414")]
		public enum Handedness
		{
			[Token(Token = "0x4001C66")]
			Right,
			[Token(Token = "0x4001C67")]
			Left,
			[Token(Token = "0x4001C68")]
			Primary,
			[Token(Token = "0x4001C69")]
			Secondary,
			[Token(Token = "0x4001C6A")]
			Any
		}

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControllerType controllerType;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Handedness handedness;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer defaultRenderer;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float hoverRadius;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float hoverRange;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask hoverLayerMask;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask lineOfSightCollisionMask;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float pointerRange;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LayerMask pointerLayerMask;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Hand otherHand;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Interactable _hoverObject;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Interactable hoverLocked;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Interactable _attachedObject;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform attachedObjectOldParent;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 attachedTargetPos;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion attachedTargetRot;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float attachSnapSpeedPos;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float attachSnapSpeedRot;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 attachedPosOffset;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion attachedRotOffset;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform overrideTransform;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool overrideOffset;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 overrideOffsetPos;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Quaternion overrideOffsetRot;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Vector3 controllerOffsetPos;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public Quaternion controllerOffsetRot;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ControllerVelocity controllerVelocity;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private TrackedClip trackedClip;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private ControllerHaptics haptics;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool _canInteract;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool toggleGrab;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Collider[] colliderBuffer;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Collider[] colliderBufferRay;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private RaycastHit[] raycastBuffer;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool updatingAttachedObj;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		private bool deferDettachObj;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Transform defaultControllerAnchor;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public int customPose;

		[Token(Token = "0x170000E6")]
		public Interactable HoverObject
		{
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0xEE9F6C", Offset = "0xEE9F6C", VA = "0xEE9F6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E7")]
		public Interactable AttachedObject
		{
			[Token(Token = "0x60011F1")]
			[Address(RVA = "0xEE9F74", Offset = "0xEE9F74", VA = "0xEE9F74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		public bool CanInteract
		{
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0xEE9F7C", Offset = "0xEE9F7C", VA = "0xEE9F7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011F3")]
			[Address(RVA = "0xEE9F84", Offset = "0xEE9F84", VA = "0xEE9F84")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public Vector3 ControllerVelocity
		{
			[Token(Token = "0x6001207")]
			[Address(RVA = "0xEE9E94", Offset = "0xEE9E94", VA = "0xEE9E94")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000EA")]
		public Vector3 ControllerAngularVelocity
		{
			[Token(Token = "0x6001208")]
			[Address(RVA = "0xEE9EB0", Offset = "0xEE9EB0", VA = "0xEE9EB0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x14000026")]
		public event Action<Hand, Interactable> onObjectAttached
		{
			[Token(Token = "0x60011F4")]
			[Address(RVA = "0xEE9F90", Offset = "0xEE9F90", VA = "0xEE9F90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7667A4", Offset = "0x7667A4")]
			add
			{
			}
			[Token(Token = "0x60011F5")]
			[Address(RVA = "0xEEA038", Offset = "0xEEA038", VA = "0xEEA038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7667B4", Offset = "0x7667B4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event Action<Hand, Interactable> onObjectReleased
		{
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0xEEA0E0", Offset = "0xEEA0E0", VA = "0xEEA0E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7667C4", Offset = "0x7667C4")]
			add
			{
			}
			[Token(Token = "0x60011F7")]
			[Address(RVA = "0xEEA188", Offset = "0xEEA188", VA = "0xEEA188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7667D4", Offset = "0x7667D4")]
			remove
			{
			}
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xEEA230", Offset = "0xEEA230", VA = "0xEEA230")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xEEA358", Offset = "0xEEA358", VA = "0xEEA358")]
		private void Update()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xEEBAB0", Offset = "0xEEBAB0", VA = "0xEEBAB0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xEEBE80", Offset = "0xEEBE80", VA = "0xEEBE80")]
		public void AttachObject(GameObject go, bool useGrabPosition = false, bool snapInstantly = false)
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xEE8BC4", Offset = "0xEE8BC4", VA = "0xEE8BC4")]
		public void AttachObject(GameObject go, Vector3 localPos, Quaternion localRot, bool useGrabPosition = false, bool snapInstantly = false)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xEE8904", Offset = "0xEE8904", VA = "0xEE8904")]
		public void ReleaseObject([Optional] GameObject go)
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xEE9840", Offset = "0xEE9840", VA = "0xEE9840")]
		public void SetAttachOffset(Vector3 posOffset, Quaternion rotOffset)
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xEEC068", Offset = "0xEEC068", VA = "0xEEC068")]
		public bool HasAttachedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xEEC0D8", Offset = "0xEEC0D8", VA = "0xEEC0D8")]
		public Interactable GetAttachedObject()
		{
			return null;
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xEEC0E0", Offset = "0xEEC0E0", VA = "0xEEC0E0")]
		public void HoverLock(Interactable obj)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xEE51CC", Offset = "0xEE51CC", VA = "0xEE51CC")]
		public void HoverUnlock(Interactable obj)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xEEC0E8", Offset = "0xEEC0E8", VA = "0xEEC0E8")]
		public void OverridePosition(Transform wantedTransform)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xEE4294", Offset = "0xEE4294", VA = "0xEE4294")]
		public void OverrideOffset(Vector3 pos, Quaternion rot, bool addToExistingPostMultiply = true)
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xEE9A88", Offset = "0xEE9A88", VA = "0xEE9A88")]
		public void SetDefaultRendererEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xEEC0F0", Offset = "0xEEC0F0", VA = "0xEEC0F0")]
		public bool IsDefaultRendererEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xEE5DFC", Offset = "0xEE5DFC", VA = "0xEE5DFC")]
		public bool GetMainButton()
		{
			return default(bool);
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xEE5C78", Offset = "0xEE5C78", VA = "0xEE5C78")]
		public bool GetMainButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xEEC10C", Offset = "0xEEC10C", VA = "0xEEC10C")]
		public bool GetMainButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xEEC11C", Offset = "0xEEC11C", VA = "0xEEC11C")]
		public float GetMainButtonValue()
		{
			return default(float);
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xEE39BC", Offset = "0xEE39BC", VA = "0xEE39BC")]
		public bool GetGrabButton()
		{
			return default(bool);
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xEE39CC", Offset = "0xEE39CC", VA = "0xEE39CC")]
		public bool GetGrabButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xEEB894", Offset = "0xEEB894", VA = "0xEEB894")]
		public bool GetGrabButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xEEC12C", Offset = "0xEEC12C", VA = "0xEEC12C")]
		public float GetGrabButtonValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xEEC13C", Offset = "0xEEC13C", VA = "0xEEC13C")]
		public bool IsPointing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xEEC148", Offset = "0xEEC148", VA = "0xEEC148")]
		public bool IsThumbsUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xEE6A30", Offset = "0xEE6A30", VA = "0xEE6A30")]
		public void PlayHapticPulse(float strength = 1f)
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xEE616C", Offset = "0xEE616C", VA = "0xEE616C")]
		public void PlayHapticClip(AudioClip clip, float strength = 1f)
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xEEC154", Offset = "0xEEC154", VA = "0xEEC154")]
		public void StopHapticClip()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xEEC198", Offset = "0xEEC198", VA = "0xEEC198")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000226")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x75AE30", Offset = "0x75AE30")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x75AE30", Offset = "0x75AE30")]
	public class HandColliderFist : MonoBehaviour
	{
		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand hand;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform handTransform;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody rb;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider collider;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 localPos;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion localRot;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private OVRCameraRig ovrRig;

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xEEC268", Offset = "0xEEC268", VA = "0xEEC268")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xEEC460", Offset = "0xEEC460", VA = "0xEEC460")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xEEC53C", Offset = "0xEEC53C", VA = "0xEEC53C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xEEC618", Offset = "0xEEC618", VA = "0xEEC618")]
		private void Update()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xEEC638", Offset = "0xEEC638", VA = "0xEEC638")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xEEC6C0", Offset = "0xEEC6C0", VA = "0xEEC6C0")]
		private void UpdatePos()
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xEEC838", Offset = "0xEEC838", VA = "0xEEC838")]
		private void OnUpdatedAnchors(OVRCameraRig rig)
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xEEC83C", Offset = "0xEEC83C", VA = "0xEEC83C")]
		public HandColliderFist()
		{
		}
	}
	[Token(Token = "0x2000227")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x75AEBC", Offset = "0x75AEBC")]
	public class Highlightable : MonoBehaviour
	{
		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material hightlightMaterial;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool applyToChildren;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer[] applyToObjs;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Renderer> excludeObjs;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useHapticFeedback;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioCue audioFeedback;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool showOnHover;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool useSecondaryRenderer;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject locked;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool showingHighlight;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Pair<Renderer, Material[]>> oldMaterials;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject secondaryRendererGO;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Renderer secondaryRenderer;

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xEEC844", Offset = "0xEEC844", VA = "0xEEC844")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xEEC92C", Offset = "0xEEC92C", VA = "0xEEC92C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xEECA0C", Offset = "0xEECA0C", VA = "0xEECA0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xEE318C", Offset = "0xEE318C", VA = "0xEE318C")]
		public void ShowHighlight([Optional] Hand hand, [Optional] Material replacementMaterial)
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xEECAEC", Offset = "0xEECAEC", VA = "0xEECAEC")]
		private void ApplyToRenderer(Renderer renderer, Material highMat)
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xEE39DC", Offset = "0xEE39DC", VA = "0xEE39DC")]
		public void StopHighlight([Optional] Hand hand)
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xEECC48", Offset = "0xEECC48", VA = "0xEECC48")]
		public bool IsShowing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xEECC50", Offset = "0xEECC50", VA = "0xEECC50")]
		private void OnHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xEECC64", Offset = "0xEECC64", VA = "0xEECC64")]
		private void OnHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xEECC74", Offset = "0xEECC74", VA = "0xEECC74")]
		public bool GetLock(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xEECD14", Offset = "0xEECD14", VA = "0xEECD14")]
		public void ReleaseLock(GameObject go)
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xEECDB4", Offset = "0xEECDB4", VA = "0xEECDB4")]
		public Highlightable()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class Interactable : MonoBehaviour
	{
		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool listenToHands;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool addHightlight;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool useChildrenColliders;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool exclusiveHover;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool uiHover;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool usePreciseDistanceForHover;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool returnToOldParent;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hand.Handedness allowedHands;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxRange;

		[Token(Token = "0x14000028")]
		public event Action<Hand> onHoverBegin
		{
			[Token(Token = "0x600122C")]
			[Address(RVA = "0xEE2658", Offset = "0xEE2658", VA = "0xEE2658")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7667E4", Offset = "0x7667E4")]
			add
			{
			}
			[Token(Token = "0x600122D")]
			[Address(RVA = "0xEE2C64", Offset = "0xEE2C64", VA = "0xEE2C64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7667F4", Offset = "0x7667F4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event Action<Hand> onHoverUpdate
		{
			[Token(Token = "0x600122E")]
			[Address(RVA = "0xEE26FC", Offset = "0xEE26FC", VA = "0xEE26FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766804", Offset = "0x766804")]
			add
			{
			}
			[Token(Token = "0x600122F")]
			[Address(RVA = "0xEE2D08", Offset = "0xEE2D08", VA = "0xEE2D08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766814", Offset = "0x766814")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event Action<Hand> onHoverEnd
		{
			[Token(Token = "0x6001230")]
			[Address(RVA = "0xEE27A0", Offset = "0xEE27A0", VA = "0xEE27A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766824", Offset = "0x766824")]
			add
			{
			}
			[Token(Token = "0x6001231")]
			[Address(RVA = "0xEE2DAC", Offset = "0xEE2DAC", VA = "0xEE2DAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766834", Offset = "0x766834")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event Action<Hand> onAttached
		{
			[Token(Token = "0x6001232")]
			[Address(RVA = "0xEE2844", Offset = "0xEE2844", VA = "0xEE2844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766844", Offset = "0x766844")]
			add
			{
			}
			[Token(Token = "0x6001233")]
			[Address(RVA = "0xEE2E50", Offset = "0xEE2E50", VA = "0xEE2E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766854", Offset = "0x766854")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event Action<Hand> onAttachedUpdate
		{
			[Token(Token = "0x6001234")]
			[Address(RVA = "0xEE298C", Offset = "0xEE298C", VA = "0xEE298C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766864", Offset = "0x766864")]
			add
			{
			}
			[Token(Token = "0x6001235")]
			[Address(RVA = "0xEE2F98", Offset = "0xEE2F98", VA = "0xEE2F98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766874", Offset = "0x766874")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event Action<Hand> onReleased
		{
			[Token(Token = "0x6001236")]
			[Address(RVA = "0xEE28E8", Offset = "0xEE28E8", VA = "0xEE28E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766884", Offset = "0x766884")]
			add
			{
			}
			[Token(Token = "0x6001237")]
			[Address(RVA = "0xEE2EF4", Offset = "0xEE2EF4", VA = "0xEE2EF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766894", Offset = "0x766894")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event Action<Hand> onPointBegin
		{
			[Token(Token = "0x6001238")]
			[Address(RVA = "0xEECDC8", Offset = "0xEECDC8", VA = "0xEECDC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7668A4", Offset = "0x7668A4")]
			add
			{
			}
			[Token(Token = "0x6001239")]
			[Address(RVA = "0xEECE6C", Offset = "0xEECE6C", VA = "0xEECE6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7668B4", Offset = "0x7668B4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event Action<Hand> onPointUpdate
		{
			[Token(Token = "0x600123A")]
			[Address(RVA = "0xEECF10", Offset = "0xEECF10", VA = "0xEECF10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7668C4", Offset = "0x7668C4")]
			add
			{
			}
			[Token(Token = "0x600123B")]
			[Address(RVA = "0xEECFB4", Offset = "0xEECFB4", VA = "0xEECFB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7668D4", Offset = "0x7668D4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event Action<Hand> onPointEnd
		{
			[Token(Token = "0x600123C")]
			[Address(RVA = "0xEED058", Offset = "0xEED058", VA = "0xEED058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7668E4", Offset = "0x7668E4")]
			add
			{
			}
			[Token(Token = "0x600123D")]
			[Address(RVA = "0xEED0FC", Offset = "0xEED0FC", VA = "0xEED0FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7668F4", Offset = "0x7668F4")]
			remove
			{
			}
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xEED1A0", Offset = "0xEED1A0", VA = "0xEED1A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xEEBA3C", Offset = "0xEEBA3C", VA = "0xEEBA3C")]
		public void OnHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xEEB92C", Offset = "0xEEB92C", VA = "0xEEB92C")]
		public void OnHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xEEB9C8", Offset = "0xEEB9C8", VA = "0xEEB9C8")]
		public void OnHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xEEBF80", Offset = "0xEEBF80", VA = "0xEEBF80")]
		public void OnAttached(Hand hand)
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xEEB8B8", Offset = "0xEEB8B8", VA = "0xEEB8B8")]
		public void OnAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xEEBFF4", Offset = "0xEEBFF4", VA = "0xEEBFF4")]
		public void OnReleased(Hand hand)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xEED260", Offset = "0xEED260", VA = "0xEED260")]
		public void OnPointBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xEED2D4", Offset = "0xEED2D4", VA = "0xEED2D4")]
		public void OnPointUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xEED348", Offset = "0xEED348", VA = "0xEED348")]
		public void OnPointEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xEED3BC", Offset = "0xEED3BC", VA = "0xEED3BC")]
		public Interactable()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class TrackedClip : MonoBehaviour
	{
		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask collisionMask;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _clippingFactor;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clipRadius;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fadeOutExtent;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform trackedObj;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer quadRenderer;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TrackedClip backupClipper;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lastValidPos;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform playerRoot;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool checkNavigation;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 lastValidAbsolutePos;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool firstUpdate;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RaycastHit[] clipRaycasts;

		[Token(Token = "0x170000EB")]
		public float ClippingFactor
		{
			[Token(Token = "0x6001249")]
			[Address(RVA = "0xEED3DC", Offset = "0xEED3DC", VA = "0xEED3DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000EC")]
		public bool IsClipped
		{
			[Token(Token = "0x600124A")]
			[Address(RVA = "0xEEB8A4", Offset = "0xEEB8A4", VA = "0xEEB8A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xEED3E4", Offset = "0xEED3E4", VA = "0xEED3E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xEED4B4", Offset = "0xEED4B4", VA = "0xEED4B4")]
		private void Start()
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xEED518", Offset = "0xEED518", VA = "0xEED518")]
		private void Update()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xEEDCB0", Offset = "0xEEDCB0", VA = "0xEEDCB0")]
		private static bool Clip(Vector3 origin, Vector3 curPos, float radius, float fadeOutExtent, LayerMask mask, out float clippingFactor)
		{
			return default(bool);
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xEEE074", Offset = "0xEEE074", VA = "0xEEE074")]
		public void SetTrackedObj(Transform newObj)
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xEEE158", Offset = "0xEEE158", VA = "0xEEE158")]
		public static void SetTrackedObj(Hand hand, Transform newObj)
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xEEB9A0", Offset = "0xEEB9A0", VA = "0xEEB9A0")]
		public Vector3 GetLastValidPosWorld()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xEEE218", Offset = "0xEEE218", VA = "0xEEE218")]
		public void SetLastValidPos(Vector3 newPos)
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xEEE250", Offset = "0xEEE250", VA = "0xEEE250")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xEEE338", Offset = "0xEEE338", VA = "0xEEE338")]
		public TrackedClip()
		{
		}
	}
	[Token(Token = "0x200022A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x75AF20", Offset = "0x75AF20")]
	public class Triggable : MonoBehaviour
	{
		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool onlyOnce;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<Hand> onTriggered;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool toggleState;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool triggableOnAttached;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioCue sound;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Interactable interactable;

		[Token(Token = "0x170000ED")]
		public bool CanBeTriggered
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0xEEE3C0", Offset = "0xEEE3C0", VA = "0xEEE3C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001257")]
			[Address(RVA = "0xEEE3DC", Offset = "0xEEE3DC", VA = "0xEEE3DC")]
			set
			{
			}
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xEEE3FC", Offset = "0xEEE3FC", VA = "0xEEE3FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xEEE45C", Offset = "0xEEE45C", VA = "0xEEE45C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xEEE548", Offset = "0xEEE548", VA = "0xEEE548")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xEEE634", Offset = "0xEEE634", VA = "0xEEE634")]
		private void OnHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xEEE73C", Offset = "0xEEE73C", VA = "0xEEE73C")]
		private void OnAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xEEE638", Offset = "0xEEE638", VA = "0xEEE638")]
		private void CheckTrigger(Hand hand)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xEEE740", Offset = "0xEEE740", VA = "0xEEE740")]
		public Triggable()
		{
		}
	}
	[Token(Token = "0x200022B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x75AF84", Offset = "0x75AF84")]
	public class UIInteractable : MonoBehaviour
	{
		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable interactable;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button uiButton;

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xAAF480", Offset = "0xAAF480", VA = "0xAAF480")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xAAF4E0", Offset = "0xAAF4E0", VA = "0xAAF4E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xAAF5F4", Offset = "0xAAF5F4", VA = "0xAAF5F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xAAF7CC", Offset = "0xAAF7CC", VA = "0xAAF7CC")]
		private void OnHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xAAF904", Offset = "0xAAF904", VA = "0xAAF904")]
		private void OnHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xAAF9E4", Offset = "0xAAF9E4", VA = "0xAAF9E4")]
		private void OnHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xAAFAC0", Offset = "0xAAFAC0", VA = "0xAAFAC0")]
		public UIInteractable()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class VelocityEstimator : MonoBehaviour
	{
		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int velocityFrames;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int angularVelocityFrames;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int velSampleCount;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] velSamples;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int angVelSampleCount;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] angVelSamples;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lastPosition;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xAAFAC8", Offset = "0xAAFAC8", VA = "0xAAFAC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xAAFB44", Offset = "0xAAFB44", VA = "0xAAFB44")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xAAFBA8", Offset = "0xAAFBA8", VA = "0xAAFBA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xAAFF48", Offset = "0xAAFF48", VA = "0xAAFF48")]
		public Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xAB0104", Offset = "0xAB0104", VA = "0xAB0104")]
		public Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xAB02C0", Offset = "0xAB02C0", VA = "0xAB02C0")]
		public VelocityEstimator()
		{
		}
	}
}
namespace VRInteraction.UI
{
	[Token(Token = "0x200022D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x75AFE8", Offset = "0x75AFE8")]
	public class VRCanvasInteractable : MonoBehaviour
	{
		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string colliderLayer;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Interactable interactable;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas canvas;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float colliderThickness;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float colliderZOffset;

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xAAB6E0", Offset = "0xAAB6E0", VA = "0xAAB6E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xAABC28", Offset = "0xAABC28", VA = "0xAABC28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xAABD00", Offset = "0xAABD00", VA = "0xAABD00")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xAABF6C", Offset = "0xAABF6C", VA = "0xAABF6C")]
		private void OnHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xAABDE4", Offset = "0xAABDE4", VA = "0xAABDE4")]
		private void OnHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xAAC48C", Offset = "0xAAC48C", VA = "0xAAC48C")]
		public VRCanvasInteractable()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class VRInputModule : StandaloneInputModule
	{
		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public RectTransform cursorLeft;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public RectTransform cursorRight;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 cursorLeftScale;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 cursorRightScale;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Transform lookCamera;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<Pair<RectTransform, Hand>> activeCanvas;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool leftHandJustRemoved;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool rightHandJustRemoved;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Transform modalObject;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private MouseState mouseState;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<RaycastResult> raycastHits;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Dictionary<int, VRPointerEventData> VRPointerDataPool;

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xAAC1E0", Offset = "0xAAC1E0", VA = "0xAAC1E0")]
		public void AddActiveCanvas(RectTransform refCanvas, Hand hand)
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xAAC274", Offset = "0xAAC274", VA = "0xAAC274")]
		public void RemoveActiveCanvas(RectTransform refCanvas, Hand hand)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xAAC4F8", Offset = "0xAAC4F8", VA = "0xAAC4F8")]
		public void RemoveActiveCanvas(RectTransform refCanvas)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xAAC600", Offset = "0xAAC600", VA = "0xAAC600", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xAAC6F0", Offset = "0xAAC6F0", VA = "0xAAC6F0", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xAACF4C", Offset = "0xAACF4C", VA = "0xAACF4C")]
		private MouseState GetVRPointerData(bool rightHand)
		{
			return null;
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xAAD78C", Offset = "0xAAD78C", VA = "0xAAD78C")]
		private void ProcessMouseEvent(MouseState mouseData)
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xAADADC", Offset = "0xAADADC", VA = "0xAADADC")]
		private static bool UseMouse(bool pressed, bool released, PointerEventData pointerData)
		{
			return default(bool);
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xAADA4C", Offset = "0xAADA4C", VA = "0xAADA4C")]
		protected PointerEventData.FramePressState GetButtonState(Hand hand)
		{
			return default(PointerEventData.FramePressState);
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xAAD95C", Offset = "0xAAD95C", VA = "0xAAD95C")]
		protected bool GetPointerData(int id, out VRPointerEventData data, bool create)
		{
			return default(bool);
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xAADAEC", Offset = "0xAADAEC", VA = "0xAADAEC")]
		public static void CopyPointerEventData(VRPointerEventData from, VRPointerEventData to)
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xAADB84", Offset = "0xAADB84", VA = "0xAADB84")]
		public static void CopyPointerEventData(PointerEventData from, PointerEventData to)
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xAADBFC", Offset = "0xAADBFC", VA = "0xAADBFC")]
		public VRInputModule()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class VRPointerEventData : PointerEventData
	{
		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Ray worldRay;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public GameObject activeCanvas;

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xAADAE4", Offset = "0xAADAE4", VA = "0xAADAE4")]
		public VRPointerEventData(EventSystem eventSystem)
		{
		}
	}
	[Token(Token = "0x2000230")]
	public static class VRPointerEventDataExtension
	{
		[Token(Token = "0x6001280")]
		[Address(RVA = "0xAADD0C", Offset = "0xAADD0C", VA = "0xAADD0C")]
		public static bool IsVRPointer(this PointerEventData pointerEventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xAADD8C", Offset = "0xAADD8C", VA = "0xAADD8C")]
		public static Ray GetRay(this PointerEventData pointerEventData)
		{
			return default(Ray);
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xAADE24", Offset = "0xAADE24", VA = "0xAADE24")]
		public static GameObject GetActiveCanvas(this PointerEventData pointerEventData)
		{
			return null;
		}
	}
	[Token(Token = "0x2000231")]
	public class VRRaycaster : GraphicRaycaster, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x2000415")]
		private struct VRRaycastHit
		{
			[Token(Token = "0x4001C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Graphic graphic;

			[Token(Token = "0x4001C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 worldPos;
		}

		[Serializable]
		[Token(Token = "0x2000416")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BCD8", Offset = "0x75BCD8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<VRRaycastHit> <>9__7_0;

			[Token(Token = "0x6001B12")]
			[Address(RVA = "0xAAF420", Offset = "0xAAF420", VA = "0xAAF420")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B13")]
			[Address(RVA = "0xAAF428", Offset = "0xAAF428", VA = "0xAAF428")]
			internal int <GraphicRaycast>b__7_0(VRRaycastHit g1, VRRaycastHit g2)
			{
				return default(int);
			}
		}

		[NonSerialized]
		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Canvas m_Canvas;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<VRRaycastHit> raycastResults;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<VRRaycastHit> sortedGraphics;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector3[] corners;

		[Token(Token = "0x170000EE")]
		private Canvas canvas
		{
			[Token(Token = "0x6001283")]
			[Address(RVA = "0xAADEA4", Offset = "0xAADEA4", VA = "0xAADEA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xAADF50", Offset = "0xAADF50", VA = "0xAADF50", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xAADFB0", Offset = "0xAADFB0", VA = "0xAADFB0")]
		protected void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList, Ray ray)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xAAE5CC", Offset = "0xAAE5CC", VA = "0xAAE5CC")]
		private void GraphicRaycast(Canvas canvas, Ray ray, List<VRRaycastHit> results)
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xAAF178", Offset = "0xAAF178", VA = "0xAAF178", Slot = "22")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xAAECE8", Offset = "0xAAECE8", VA = "0xAAECE8")]
		private static bool RayIntersectsRectTransform(RectTransform rectTransform, Ray ray, out Vector3 worldPos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xAAF278", Offset = "0xAAF278", VA = "0xAAF278")]
		public VRRaycaster()
		{
		}
	}
}
namespace SimpleIK
{
	[Token(Token = "0x2000232")]
	public class IKController : MonoBehaviour
	{
		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingDistance;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float learningRate;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distanceThreshold;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKJoint[] joints;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] currentAngles;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform targetObj;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 targetPos;

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x916200", Offset = "0x916200", VA = "0x916200")]
		private void Start()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x9162F4", Offset = "0x9162F4", VA = "0x9162F4")]
		private void Update()
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x9165E4", Offset = "0x9165E4", VA = "0x9165E4")]
		public Vector3 ForwardKinematics(float[] angles, bool applyTransform = false, bool debugDraw = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x916A6C", Offset = "0x916A6C", VA = "0x916A6C")]
		public float DistanceFromTarget(Vector3 target, float[] angles)
		{
			return default(float);
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x916B38", Offset = "0x916B38", VA = "0x916B38")]
		public float PartialGradient(Vector3 target, float[] angles, int i, float samplingDistance)
		{
			return default(float);
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x9163CC", Offset = "0x9163CC", VA = "0x9163CC")]
		public void IK(Vector3 target, float[] angles)
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x916C10", Offset = "0x916C10", VA = "0x916C10")]
		public IKController()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class IKJoint : MonoBehaviour
	{
		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 axis;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 startOffset;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool constrained;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minAngle;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxAngle;

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x916C18", Offset = "0x916C18", VA = "0x916C18")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x916C54", Offset = "0x916C54", VA = "0x916C54")]
		public IKJoint()
		{
		}
	}
}
namespace WDG
{
	[Token(Token = "0x2000234")]
	public class Tuple<TItem1, TItem2>
	{
		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x760904", Offset = "0x760904")]
		private TItem1 <Item1>k__BackingField;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x760914", Offset = "0x760914")]
		private TItem2 <Item2>k__BackingField;

		[Token(Token = "0x170000EF")]
		public TItem1 Item1
		{
			[Token(Token = "0x6001295")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766934", Offset = "0x766934")]
			get
			{
				return (TItem1)null;
			}
			[Token(Token = "0x6001296")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766944", Offset = "0x766944")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		public TItem2 Item2
		{
			[Token(Token = "0x6001297")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766954", Offset = "0x766954")]
			get
			{
				return (TItem2)null;
			}
			[Token(Token = "0x6001298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766964", Offset = "0x766964")]
			private set
			{
			}
		}

		[Token(Token = "0x6001294")]
		public Tuple(TItem1 item1, TItem2 item2)
		{
		}

		[Token(Token = "0x6001299")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600129A")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600129B")]
		public static bool operator ==(Tuple<TItem1, TItem2> left, Tuple<TItem1, TItem2> right)
		{
			return default(bool);
		}

		[Token(Token = "0x600129C")]
		public static bool operator !=(Tuple<TItem1, TItem2> left, Tuple<TItem1, TItem2> right)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000235")]
	public class Tuple<TItem1, TItem2, TItem3>
	{
		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x760924", Offset = "0x760924")]
		private TItem1 <Item1>k__BackingField;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x760934", Offset = "0x760934")]
		private TItem2 <Item2>k__BackingField;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x760944", Offset = "0x760944")]
		private TItem3 <Item3>k__BackingField;

		[Token(Token = "0x170000F1")]
		public TItem1 Item1
		{
			[Token(Token = "0x600129E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766974", Offset = "0x766974")]
			get
			{
				return (TItem1)null;
			}
			[Token(Token = "0x600129F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766984", Offset = "0x766984")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public TItem2 Item2
		{
			[Token(Token = "0x60012A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766994", Offset = "0x766994")]
			get
			{
				return (TItem2)null;
			}
			[Token(Token = "0x60012A1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7669A4", Offset = "0x7669A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public TItem3 Item3
		{
			[Token(Token = "0x60012A2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7669B4", Offset = "0x7669B4")]
			get
			{
				return (TItem3)null;
			}
			[Token(Token = "0x60012A3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7669C4", Offset = "0x7669C4")]
			private set
			{
			}
		}

		[Token(Token = "0x600129D")]
		public Tuple(TItem1 item1, TItem2 item2, TItem3 item3)
		{
		}

		[Token(Token = "0x60012A4")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A5")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60012A6")]
		public static bool operator ==(Tuple<TItem1, TItem2, TItem3> left, Tuple<TItem1, TItem2, TItem3> right)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A7")]
		public static bool operator ==(Tuple<TItem1, TItem2, TItem3> left, object right)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A8")]
		public static bool operator !=(Tuple<TItem1, TItem2, TItem3> left, Tuple<TItem1, TItem2, TItem3> right)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A9")]
		public static bool operator !=(Tuple<TItem1, TItem2, TItem3> left, object right)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000236")]
	public class Tuple<TItem1, TItem2, TItem3, TItem4>
	{
		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x760954", Offset = "0x760954")]
		private TItem1 <Item1>k__BackingField;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x760964", Offset = "0x760964")]
		private TItem2 <Item2>k__BackingField;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x760974", Offset = "0x760974")]
		private TItem3 <Item3>k__BackingField;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x760984", Offset = "0x760984")]
		private TItem4 <Item4>k__BackingField;

		[Token(Token = "0x170000F4")]
		public TItem1 Item1
		{
			[Token(Token = "0x60012AB")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7669D4", Offset = "0x7669D4")]
			get
			{
				return (TItem1)null;
			}
			[Token(Token = "0x60012AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7669E4", Offset = "0x7669E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public TItem2 Item2
		{
			[Token(Token = "0x60012AD")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7669F4", Offset = "0x7669F4")]
			get
			{
				return (TItem2)null;
			}
			[Token(Token = "0x60012AE")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766A04", Offset = "0x766A04")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public TItem3 Item3
		{
			[Token(Token = "0x60012AF")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766A14", Offset = "0x766A14")]
			get
			{
				return (TItem3)null;
			}
			[Token(Token = "0x60012B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766A24", Offset = "0x766A24")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		public TItem4 Item4
		{
			[Token(Token = "0x60012B1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766A34", Offset = "0x766A34")]
			get
			{
				return (TItem4)null;
			}
			[Token(Token = "0x60012B2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766A44", Offset = "0x766A44")]
			private set
			{
			}
		}

		[Token(Token = "0x60012AA")]
		public Tuple(TItem1 item1, TItem2 item2, TItem3 item3, TItem4 item4)
		{
		}

		[Token(Token = "0x60012B3")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B4")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60012B5")]
		public static bool operator ==(Tuple<TItem1, TItem2, TItem3, TItem4> left, Tuple<TItem1, TItem2, TItem3, TItem4> right)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B6")]
		public static bool operator ==(Tuple<TItem1, TItem2, TItem3, TItem4> left, object right)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B7")]
		public static bool operator !=(Tuple<TItem1, TItem2, TItem3, TItem4> left, Tuple<TItem1, TItem2, TItem3, TItem4> right)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B8")]
		public static bool operator !=(Tuple<TItem1, TItem2, TItem3, TItem4> left, object right)
		{
			return default(bool);
		}
	}
}
namespace WDG.Occlusion
{
	[Token(Token = "0x2000237")]
	public struct Frustum
	{
		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Plane plane0;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Plane plane1;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Plane plane2;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Plane plane3;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Plane plane4;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Plane plane5;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int numPlanes;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Plane farPlane;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Plane[] tempPlanes;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector3[] boundPoints;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Vector3[] rectPoints;

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xAB8E74", Offset = "0xAB8E74", VA = "0xAB8E74")]
		public Frustum(Bounds bounds, Transform transform)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xAB91A4", Offset = "0xAB91A4", VA = "0xAB91A4")]
		public Frustum(float sizeX, float sizeY, Transform rectTransform, Vector3 origin)
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xAB9630", Offset = "0xAB9630", VA = "0xAB9630")]
		public Frustum(Camera camera)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xAB9798", Offset = "0xAB9798", VA = "0xAB9798")]
		public bool Contains(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xAB98D8", Offset = "0xAB98D8", VA = "0xAB98D8")]
		public bool Contains(IEnumerable<Vector3> points)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xAB9B74", Offset = "0xAB9B74", VA = "0xAB9B74")]
		public bool Outside(Bounds bounds, Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xABA328", Offset = "0xABA328", VA = "0xABA328")]
		public bool Outside(float sizeX, float sizeY, Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xABA23C", Offset = "0xABA23C", VA = "0xABA23C")]
		public bool Outside(Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xABA6FC", Offset = "0xABA6FC", VA = "0xABA6FC")]
		private bool Outside(Vector3[] points, Plane plane)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xAB9C2C", Offset = "0xAB9C2C", VA = "0xAB9C2C")]
		private static void PointsFromBounds(ref Vector3[] points, Bounds bounds, Transform transform)
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xABA3D0", Offset = "0xABA3D0", VA = "0xABA3D0")]
		private static void PointsFromRect(ref Vector3[] points, float sizeX, float sizeY, Transform transform)
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xABA7A0", Offset = "0xABA7A0", VA = "0xABA7A0")]
		public void DrawFrustum(Color color)
		{
		}
	}
	[Token(Token = "0x2000238")]
	public interface IOcclusion
	{
		[Token(Token = "0x60012C6")]
		bool IsVisible();

		[Token(Token = "0x60012C7")]
		bool IsPotentiallyVisible();
	}
	[Token(Token = "0x2000239")]
	public class OcclusionGroup
	{
		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<Renderer, OcclusionManager.Item<Renderer>> renderers;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Light, OcclusionManager.Item<Light>> lights;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<OcclusionTracker, OcclusionManager.Item<OcclusionTracker>> trackers;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IOcclusion container;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Renderer> cacheRenderers;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Light> cacheLights;

		[Token(Token = "0x14000031")]
		public event Action<Renderer> onAdded
		{
			[Token(Token = "0x60012C8")]
			[Address(RVA = "0xABAD10", Offset = "0xABAD10", VA = "0xABAD10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766A54", Offset = "0x766A54")]
			add
			{
			}
			[Token(Token = "0x60012C9")]
			[Address(RVA = "0xABADB4", Offset = "0xABADB4", VA = "0xABADB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766A64", Offset = "0x766A64")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event Action<Renderer> onRemoved
		{
			[Token(Token = "0x60012CA")]
			[Address(RVA = "0xABAE58", Offset = "0xABAE58", VA = "0xABAE58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766A74", Offset = "0x766A74")]
			add
			{
			}
			[Token(Token = "0x60012CB")]
			[Address(RVA = "0xABAEFC", Offset = "0xABAEFC", VA = "0xABAEFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766A84", Offset = "0x766A84")]
			remove
			{
			}
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xABAFA0", Offset = "0xABAFA0", VA = "0xABAFA0")]
		public OcclusionGroup(IOcclusion owner)
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xABB0A0", Offset = "0xABB0A0", VA = "0xABB0A0")]
		public void Add(Renderer r)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xABB390", Offset = "0xABB390", VA = "0xABB390")]
		public void Remove(Renderer r)
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xABB500", Offset = "0xABB500", VA = "0xABB500")]
		public void Add(Light l)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xABB708", Offset = "0xABB708", VA = "0xABB708")]
		public void Remove(Light l)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xABB85C", Offset = "0xABB85C", VA = "0xABB85C")]
		public void Add(OcclusionTracker t)
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xABBB68", Offset = "0xABBB68", VA = "0xABBB68")]
		public void Remove(OcclusionTracker t)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xABBCBC", Offset = "0xABBCBC", VA = "0xABBCBC")]
		public bool Contains(Renderer r)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xABBD24", Offset = "0xABBD24", VA = "0xABBD24")]
		public bool Contains(Light l)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xABBD8C", Offset = "0xABBD8C", VA = "0xABBD8C")]
		public bool Contains(OcclusionTracker t)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xABBDF4", Offset = "0xABBDF4", VA = "0xABBDF4")]
		public void AddHierarchy(GameObject go, LayerMask layerMask, bool onlyStatic, bool includeInactive = false)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xABC330", Offset = "0xABC330", VA = "0xABC330")]
		public void SetVisibility(bool visible, bool potentiallyVisible)
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xABC8E0", Offset = "0xABC8E0", VA = "0xABC8E0")]
		public void SetPotentiallyVisible(bool potentiallyVisible)
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xABB2DC", Offset = "0xABB2DC", VA = "0xABB2DC")]
		private static void ApplyVisibility(OcclusionManager.Item<Renderer> item)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xABB654", Offset = "0xABB654", VA = "0xABB654")]
		private static void ApplyVisibility(OcclusionManager.Item<Light> item)
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xABBA90", Offset = "0xABBA90", VA = "0xABBA90")]
		private static void ApplyVisibility(OcclusionManager.Item<OcclusionTracker> item)
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xABB220", Offset = "0xABB220", VA = "0xABB220")]
		public bool IsContainerVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xABB9D0", Offset = "0xABB9D0", VA = "0xABB9D0")]
		public bool IsContainerPotentiallyVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xABCB00", Offset = "0xABCB00", VA = "0xABCB00")]
		public void CleanupNullItems()
		{
		}

		[Token(Token = "0x60012DF")]
		private void CleanupNullItems<T>(Dictionary<T, OcclusionManager.Item<T>> dict, bool isRenderer, bool isLight, bool isTracker) where T : Component
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xABCBA8", Offset = "0xABCBA8", VA = "0xABCBA8")]
		public IEnumerable<Renderer> GetRenderers()
		{
			return null;
		}
	}
	[Token(Token = "0x200023A")]
	public class OcclusionManager : Singleton<OcclusionManager>
	{
		[Token(Token = "0x2000417")]
		public class Item<T> where T : Component
		{
			[Token(Token = "0x4001C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T obj;

			[Token(Token = "0x4001C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int groupCount;

			[Token(Token = "0x4001C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int visibilityCount;

			[Token(Token = "0x4001C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool vibilityDirty;

			[Token(Token = "0x4001C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int potVisibilityCount;

			[Token(Token = "0x4001C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool potVisibilityDirty;

			[Token(Token = "0x4001C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<OcclusionGroup> listGroups;

			[Token(Token = "0x6001B14")]
			public Item(T obj)
			{
			}

			[Token(Token = "0x6001B15")]
			public void Reset(T obj)
			{
			}

			[Token(Token = "0x6001B16")]
			public bool IsVisible()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B17")]
			public bool IsPotentiallyVisible()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B18")]
			public void ResetVisibilityCount()
			{
			}

			[Token(Token = "0x6001B19")]
			public void SetVisibility(bool visible)
			{
			}

			[Token(Token = "0x6001B1A")]
			public void SetPotentialVisibility(bool potVisible)
			{
			}

			[Token(Token = "0x6001B1B")]
			public void AddToGroup(OcclusionGroup g)
			{
			}

			[Token(Token = "0x6001B1C")]
			public void RemoveFromGroup(OcclusionGroup g)
			{
			}

			[Token(Token = "0x6001B1D")]
			public bool IsReferenced()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B1E")]
			public int GetGroupCount()
			{
				return default(int);
			}

			[Token(Token = "0x6001B1F")]
			public int GetVisibilityCount()
			{
				return default(int);
			}

			[Token(Token = "0x6001B20")]
			public int GetPotentialVisibilityCount()
			{
				return default(int);
			}

			[Token(Token = "0x6001B21")]
			private bool UpdateGroupsVisibility()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B22")]
			private bool UpdateGroupsPotVisibility()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool forceVisible;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool drawFrustums;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float cleanupTime;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Sector> sectors;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Portal> portals;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Sector> startSectors;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Renderer, Item<Renderer>> renderers;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<Light, Item<Light>> lights;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<OcclusionTracker, Item<OcclusionTracker>> trackers;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Item<Renderer>> renderersPool;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Item<Light>> lightsPool;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Item<OcclusionTracker>> trackersPool;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Item<Renderer>> renderersToCleanup;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Item<Light>> lightsToCleanup;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Item<OcclusionTracker>> trackersToCleanup;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int cleanUpSector;

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xABCCB0", Offset = "0xABCCB0", VA = "0xABCCB0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xABCD68", Offset = "0xABCD68", VA = "0xABCD68")]
		public void Update()
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xABD7B8", Offset = "0xABD7B8", VA = "0xABD7B8")]
		public void AddSector(Sector s)
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xABD820", Offset = "0xABD820", VA = "0xABD820")]
		public void RemoveSector(Sector s)
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xABD888", Offset = "0xABD888", VA = "0xABD888")]
		public void AddPortal(Portal p)
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xABDC0C", Offset = "0xABDC0C", VA = "0xABDC0C")]
		public void RemovePortal(Portal p)
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xABCF7C", Offset = "0xABCF7C", VA = "0xABCF7C")]
		private void PrepareProcessing()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xABD13C", Offset = "0xABD13C", VA = "0xABD13C")]
		private void Process()
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xABD508", Offset = "0xABD508", VA = "0xABD508")]
		private void EndProcessing()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xAB2464", Offset = "0xAB2464", VA = "0xAB2464")]
		public Sector GetSector(Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xABDFF8", Offset = "0xABDFF8", VA = "0xABDFF8")]
		public List<Sector> GetSectors()
		{
			return null;
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xABB1B0", Offset = "0xABB1B0", VA = "0xABB1B0")]
		public Item<Renderer> AddRenderer(Renderer r, OcclusionGroup g)
		{
			return null;
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xABB490", Offset = "0xABB490", VA = "0xABB490")]
		public void RemoveRenderer(Renderer r, OcclusionGroup g)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xABB5E4", Offset = "0xABB5E4", VA = "0xABB5E4")]
		public Item<Light> AddLight(Light l, OcclusionGroup g)
		{
			return null;
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xABB7EC", Offset = "0xABB7EC", VA = "0xABB7EC")]
		public void RemoveLight(Light l, OcclusionGroup g)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xABB960", Offset = "0xABB960", VA = "0xABB960")]
		public Item<OcclusionTracker> AddTracker(OcclusionTracker t, OcclusionGroup g)
		{
			return null;
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xABBC4C", Offset = "0xABBC4C", VA = "0xABBC4C")]
		public void RemoveTracker(OcclusionTracker t, OcclusionGroup g)
		{
		}

		[Token(Token = "0x60012F3")]
		private Item<T> AddItem<T>(T obj, Dictionary<T, Item<T>> dict, List<Item<T>> pool, OcclusionGroup g) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60012F4")]
		private void RemoveItem<T>(T obj, Dictionary<T, Item<T>> dict, List<Item<T>> cleanupList, OcclusionGroup g) where T : Component
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xABD6B0", Offset = "0xABD6B0", VA = "0xABD6B0")]
		private void CleanupItems()
		{
		}

		[Token(Token = "0x60012F6")]
		private void CleanupItems<T>(Dictionary<T, Item<T>> dict, List<Item<T>> cleanupList, List<Item<T>> pool) where T : Component
		{
		}

		[Token(Token = "0x60012F7")]
		private Item<T> GetNewItemFromPool<T>(List<Item<T>> pool, T newObj) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60012F8")]
		private void FreeItemIntoPool<T>(List<Item<T>> pool, Item<T> item) where T : Component
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xABE000", Offset = "0xABE000", VA = "0xABE000")]
		private void ResetItemsVisibility()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xABE2BC", Offset = "0xABE2BC", VA = "0xABE2BC")]
		public OcclusionManager()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class OcclusionTracker : MonoBehaviour
	{
		[Token(Token = "0x2000418")]
		public enum PopulateType
		{
			[Token(Token = "0x4001C77")]
			No,
			[Token(Token = "0x4001C78")]
			OnlyActive,
			[Token(Token = "0x4001C79")]
			IncludeInactive
		}

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ignoreOcclusion;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool ignoreChildren;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool useThisAsRoot;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool forceAddToSector;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _forceAlwaysVisible;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool checkForSubTrackers;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool checkInvisibilityBug;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int checkInvisibilityTask;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Renderer> disableRenderersOnHidden;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PopulateType autoPopulateRenderers;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<MonoBehaviour> disableComponentsOnHidden;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<GameObject> disableObjsOnHidden;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isVisible;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _potentiallyVisible;

		[Token(Token = "0x170000F8")]
		public bool ForceAlwaysVisible
		{
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0xABE508", Offset = "0xABE508", VA = "0xABE508")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012FC")]
			[Address(RVA = "0xABE510", Offset = "0xABE510", VA = "0xABE510")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public bool IsVisible
		{
			[Token(Token = "0x6001305")]
			[Address(RVA = "0xABED98", Offset = "0xABED98", VA = "0xABED98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FA")]
		public bool PotentiallyVisible
		{
			[Token(Token = "0x6001306")]
			[Address(RVA = "0xABEDA0", Offset = "0xABEDA0", VA = "0xABEDA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000033")]
		public event Action<bool> onVisible
		{
			[Token(Token = "0x60012FD")]
			[Address(RVA = "0xABE878", Offset = "0xABE878", VA = "0xABE878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766A94", Offset = "0x766A94")]
			add
			{
			}
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0xABE91C", Offset = "0xABE91C", VA = "0xABE91C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766AA4", Offset = "0x766AA4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public event Action<bool> onInvisible
		{
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0xABE9C0", Offset = "0xABE9C0", VA = "0xABE9C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766AB4", Offset = "0x766AB4")]
			add
			{
			}
			[Token(Token = "0x6001300")]
			[Address(RVA = "0xABEA64", Offset = "0xABEA64", VA = "0xABEA64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766AC4", Offset = "0x766AC4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public event Action<bool> onPotentiallyVisibleChange
		{
			[Token(Token = "0x6001301")]
			[Address(RVA = "0xABEB08", Offset = "0xABEB08", VA = "0xABEB08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766AD4", Offset = "0x766AD4")]
			add
			{
			}
			[Token(Token = "0x6001302")]
			[Address(RVA = "0xABEBAC", Offset = "0xABEBAC", VA = "0xABEBAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766AE4", Offset = "0x766AE4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public event Action<bool, bool> onVisibilityChange
		{
			[Token(Token = "0x6001303")]
			[Address(RVA = "0xABEC50", Offset = "0xABEC50", VA = "0xABEC50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766AF4", Offset = "0x766AF4")]
			add
			{
			}
			[Token(Token = "0x6001304")]
			[Address(RVA = "0xABECF4", Offset = "0xABECF4", VA = "0xABECF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766B04", Offset = "0x766B04")]
			remove
			{
			}
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xABC7E4", Offset = "0xABC7E4", VA = "0xABC7E4")]
		public bool SetVisible(bool visible, bool potentiallyVisible)
		{
			return default(bool);
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xABCA54", Offset = "0xABCA54", VA = "0xABCA54")]
		public bool SetPotentiallyVisible(bool potentiallyVisible)
		{
			return default(bool);
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xABEDA8", Offset = "0xABEDA8", VA = "0xABEDA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xABEEF4", Offset = "0xABEEF4", VA = "0xABEEF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xABEFAC", Offset = "0xABEFAC", VA = "0xABEFAC")]
		private void Start()
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xABF0A0", Offset = "0xABF0A0", VA = "0xABF0A0")]
		public void PopulateRenderers()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xABF6C8", Offset = "0xABF6C8", VA = "0xABF6C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xABFD1C", Offset = "0xABFD1C", VA = "0xABFD1C")]
		private void CheckInvisibilityBugUpdateTask()
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xABE548", Offset = "0xABE548", VA = "0xABE548")]
		private void ApplyVisibility(bool isVisible)
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xABFFA8", Offset = "0xABFFA8", VA = "0xABFFA8")]
		public void ForceRemoveFromOcclusionSector()
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xAC008C", Offset = "0xAC008C", VA = "0xAC008C")]
		public OcclusionTracker()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class Portal : MonoBehaviour, IOcclusion
	{
		[Token(Token = "0x2000419")]
		public enum State
		{
			[Token(Token = "0x4001C7B")]
			Unchecked,
			[Token(Token = "0x4001C7C")]
			Visible
		}

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isOpen;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector2 size;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private State currentState;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State lastState;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool potentiallyVisible;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Sector> sectors;

		[Token(Token = "0x14000037")]
		public event Action onVisible
		{
			[Token(Token = "0x6001312")]
			[Address(RVA = "0xAC00AC", Offset = "0xAC00AC", VA = "0xAC00AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766B14", Offset = "0x766B14")]
			add
			{
			}
			[Token(Token = "0x6001313")]
			[Address(RVA = "0xAC0150", Offset = "0xAC0150", VA = "0xAC0150")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766B24", Offset = "0x766B24")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event Action onInvisible
		{
			[Token(Token = "0x6001314")]
			[Address(RVA = "0xAC01F4", Offset = "0xAC01F4", VA = "0xAC01F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766B34", Offset = "0x766B34")]
			add
			{
			}
			[Token(Token = "0x6001315")]
			[Address(RVA = "0xAC0298", Offset = "0xAC0298", VA = "0xAC0298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766B44", Offset = "0x766B44")]
			remove
			{
			}
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xAC033C", Offset = "0xAC033C", VA = "0xAC033C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xAC039C", Offset = "0xAC039C", VA = "0xAC039C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xAC0448", Offset = "0xAC0448", VA = "0xAC0448", Slot = "4")]
		public bool IsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xAC046C", Offset = "0xAC046C", VA = "0xAC046C")]
		public bool IsVisibleIgnoreOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xAC047C", Offset = "0xAC047C", VA = "0xAC047C", Slot = "5")]
		public bool IsPotentiallyVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xABD128", Offset = "0xABD128", VA = "0xABD128")]
		public void SetVisibilityState(State newState = State.Unchecked)
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xAC0484", Offset = "0xAC0484", VA = "0xAC0484")]
		public void Process(Camera cam, Sector origin, bool forceLODIfClosed = false)
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xAC0774", Offset = "0xAC0774", VA = "0xAC0774")]
		public void SetPotentiallyVisible(Sector origin, bool requireOpen = true)
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xAC091C", Offset = "0xAC091C", VA = "0xAC091C")]
		public bool OutOfView(Frustum frustum)
		{
			return default(bool);
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xABDED0", Offset = "0xABDED0", VA = "0xABDED0")]
		public void UpdateVisibility()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xABDBA4", Offset = "0xABDBA4", VA = "0xABDBA4")]
		public void LinkSector(Sector s)
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xAC095C", Offset = "0xAC095C", VA = "0xAC095C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xAC0C94", Offset = "0xAC0C94", VA = "0xAC0C94")]
		public Portal()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class Sector : MonoBehaviour, IOcclusion
	{
		[Token(Token = "0x200041A")]
		public enum State
		{
			[Token(Token = "0x4001C7E")]
			Unchecked,
			[Token(Token = "0x4001C7F")]
			Visible
		}

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OcclusionGroup group;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask dynamicLayerMask;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private State currentState;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State lastState;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool potentiallyVisible;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool lastPotentiallyVisible;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoxCollider collider;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Frustum boundsFrustum;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<Portal> portals;

		[Token(Token = "0x14000039")]
		public event Action onVisible
		{
			[Token(Token = "0x6001323")]
			[Address(RVA = "0xAB2590", Offset = "0xAB2590", VA = "0xAB2590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766B54", Offset = "0x766B54")]
			add
			{
			}
			[Token(Token = "0x6001324")]
			[Address(RVA = "0xAB2B1C", Offset = "0xAB2B1C", VA = "0xAB2B1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766B64", Offset = "0x766B64")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event Action onInvisible
		{
			[Token(Token = "0x6001325")]
			[Address(RVA = "0xAB2634", Offset = "0xAB2634", VA = "0xAB2634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766B74", Offset = "0x766B74")]
			add
			{
			}
			[Token(Token = "0x6001326")]
			[Address(RVA = "0xAB2BC0", Offset = "0xAB2BC0", VA = "0xAB2BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766B84", Offset = "0x766B84")]
			remove
			{
			}
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xAC0D48", Offset = "0xAC0D48", VA = "0xAC0D48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xAC0DA8", Offset = "0xAC0DA8", VA = "0xAC0DA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xAC0E54", Offset = "0xAC0E54", VA = "0xAC0E54")]
		private void Awake()
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xABDB34", Offset = "0xABDB34", VA = "0xABDB34")]
		public bool Contains(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xAC0FB8", Offset = "0xAC0FB8", VA = "0xAC0FB8")]
		private Bounds GetLocalBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xAB5A88", Offset = "0xAB5A88", VA = "0xAB5A88", Slot = "4")]
		public bool IsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xAC10C4", Offset = "0xAC10C4", VA = "0xAC10C4", Slot = "5")]
		public bool IsPotentiallyVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xABD114", Offset = "0xABD114", VA = "0xABD114")]
		public void SetVisibilityState(State newState = State.Unchecked)
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xAC0910", Offset = "0xAC0910", VA = "0xAC0910")]
		public void SetPotentiallyVisible()
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xABDC74", Offset = "0xABDC74", VA = "0xABDC74")]
		public void ProcessPortals(Camera cam, Portal originPortal, Frustum? frustum, bool forceLODNeighbors = false)
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xABDF34", Offset = "0xABDF34", VA = "0xABDF34")]
		public void UpdateVisibility()
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xAC10CC", Offset = "0xAC10CC", VA = "0xAC10CC")]
		public void DisplayContents(bool visible, bool potentiallyVisible)
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xABDB3C", Offset = "0xABDB3C", VA = "0xABDB3C")]
		public void LinkPortal(Portal p)
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xAC10EC", Offset = "0xAC10EC", VA = "0xAC10EC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xAC1128", Offset = "0xAC1128", VA = "0xAC1128")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xABF110", Offset = "0xABF110", VA = "0xABF110")]
		public void AddDynamicObject(GameObject go, bool ignoreMask = false)
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xABF7F0", Offset = "0xABF7F0", VA = "0xABF7F0")]
		public void RemoveDynamicObject(GameObject go, bool ignoreMask = false)
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xAC1164", Offset = "0xAC1164", VA = "0xAC1164")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xAC12D8", Offset = "0xAC12D8", VA = "0xAC12D8")]
		private void DrawEditorRoom(Bounds bounds, Transform transform, Color color)
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xAC1A00", Offset = "0xAC1A00", VA = "0xAC1A00")]
		public Sector()
		{
		}
	}
}
namespace AITasks
{
	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x75B05C", Offset = "0x75B05C")]
	public class BlinkTask : ScriptableObject, IAITask
	{
		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float pulseDuration;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float closestDistance;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float scareChance;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioCue scareSound;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IAgent agent;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform agentTransform;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AgentWalk agentWalk;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AgentVision agentVision;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool getCloser;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool spawnedBehind;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 startPos;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 destPos;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool didTeleport;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float originalDistToPlayerSq;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool removedFog;

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xB56318", Offset = "0xB56318", VA = "0xB56318")]
		public static bool CanUseTask(Transform agTransform, AgentVision agVision, bool getCloser = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xB56478", Offset = "0xB56478", VA = "0xB56478")]
		public void Init(IAgent agent, Transform agTransform, AgentWalk agWalk, AgentVision agVision, bool getCloser = true)
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xB564FC", Offset = "0xB564FC", VA = "0xB564FC", Slot = "4")]
		public bool OnEnter(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xB56E9C", Offset = "0xB56E9C", VA = "0xB56E9C", Slot = "5")]
		public bool OnUpdate(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xB56EA4", Offset = "0xB56EA4", VA = "0xB56EA4", Slot = "6")]
		public void OnExit(IFSMTimer fsm)
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xB570AC", Offset = "0xB570AC", VA = "0xB570AC", Slot = "7")]
		public bool OnTimer(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xB57880", Offset = "0xB57880", VA = "0xB57880")]
		public BlinkTask()
		{
		}
	}
	[Token(Token = "0x200023F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x75B0A0", Offset = "0x75B0A0")]
	public class ChaseTask : ScriptableObject, IAITask
	{
		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AgentWalk agentWalk;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AgentVision agentVision;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AgentAwareness agentAwareness;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AgentLightSense agentLightSense;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float speedFactor;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float attackRange;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool getInMeleeRange;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool chasingVisible;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool _canAttack;

		[Token(Token = "0x170000FB")]
		public bool CanAttack
		{
			[Token(Token = "0x6001342")]
			[Address(RVA = "0xB578A0", Offset = "0xB578A0", VA = "0xB578A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xB578A8", Offset = "0xB578A8", VA = "0xB578A8")]
		public void Init(AgentWalk agWalk, AgentVision agVision, AgentAwareness agAwareness, AgentLightSense agLightSense, float attackRange, float speedFactor, bool getInMeleeRange = true)
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xB57938", Offset = "0xB57938", VA = "0xB57938", Slot = "4")]
		public bool OnEnter(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xB57E78", Offset = "0xB57E78", VA = "0xB57E78", Slot = "5")]
		public bool OnUpdate(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xB58314", Offset = "0xB58314", VA = "0xB58314", Slot = "6")]
		public void OnExit(IFSMTimer fsm)
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xB58374", Offset = "0xB58374", VA = "0xB58374", Slot = "7")]
		public bool OnTimer(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xB5837C", Offset = "0xB5837C", VA = "0xB5837C")]
		public ChaseTask()
		{
		}
	}
	[Token(Token = "0x2000240")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x75B0E4", Offset = "0x75B0E4")]
	public class DeathTask : ScriptableObject, IAITask
	{
		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float deathCooldownMin;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float deathCooldownMax;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool disableCollidersOnDisappear;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _disappear;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool canRise;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float deadTimer;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform transform;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AgentWalk agentWalk;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeltFX meltFX;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RagdollController ragdoll;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Health agentHealth;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventHub evHub;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Collider> bodyColliders;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Collider tpCollider;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Collider moveCollider;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator animator;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool halfMeltDown;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int corpseBurnHealth;

		[Token(Token = "0x170000FC")]
		public bool Disappear
		{
			[Token(Token = "0x6001349")]
			[Address(RVA = "0xB58394", Offset = "0xB58394", VA = "0xB58394")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xB5839C", Offset = "0xB5839C", VA = "0xB5839C")]
		public void Init(AgentWalk agWalk, MeltFX meltFX, RagdollController ragdoll, List<Collider> bodyColliders, Collider tpCollider, Collider moveCollider, Health agHealth, EventHub evHub, [Optional] Animator animator, bool halfMeltDown = true)
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xB584BC", Offset = "0xB584BC", VA = "0xB584BC", Slot = "4")]
		public bool OnEnter(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xB58BD0", Offset = "0xB58BD0", VA = "0xB58BD0", Slot = "5")]
		public bool OnUpdate(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xB58F90", Offset = "0xB58F90", VA = "0xB58F90", Slot = "6")]
		public void OnExit(IFSMTimer fsm)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xB593A4", Offset = "0xB593A4", VA = "0xB593A4", Slot = "7")]
		public bool OnTimer(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xB593B8", Offset = "0xB593B8", VA = "0xB593B8")]
		private void OnReceiveDamage(int damagePoints, Health.DamageType damageType, Health.Faction faction, Vector3 originPoint)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xB593D0", Offset = "0xB593D0", VA = "0xB593D0")]
		public DeathTask()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public interface IAITask
	{
		[Token(Token = "0x6001351")]
		bool OnEnter(IFSMTimer fsm);

		[Token(Token = "0x6001352")]
		bool OnUpdate(IFSMTimer fsm);

		[Token(Token = "0x6001353")]
		void OnExit(IFSMTimer fsm);

		[Token(Token = "0x6001354")]
		bool OnTimer(IFSMTimer fsm);
	}
	[Token(Token = "0x2000242")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x75B128", Offset = "0x75B128")]
	public class InvestigateTask : ScriptableObject, IAITask
	{
		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float reactMinTime;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float reactMaxTime;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitMinTime;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float waitMaxTime;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 position;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool isReacting;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool investigating;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AgentWalk agentWalk;

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xB593F4", Offset = "0xB593F4", VA = "0xB593F4")]
		public void Init(AgentWalk agWalk, Vector3 pos)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xB59440", Offset = "0xB59440", VA = "0xB59440", Slot = "4")]
		public bool OnEnter(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xB5952C", Offset = "0xB5952C", VA = "0xB5952C", Slot = "5")]
		public bool OnUpdate(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xB5995C", Offset = "0xB5995C", VA = "0xB5995C", Slot = "6")]
		public void OnExit(IFSMTimer fsm)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xB59960", Offset = "0xB59960", VA = "0xB59960", Slot = "7")]
		public bool OnTimer(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xB599B4", Offset = "0xB599B4", VA = "0xB599B4")]
		public bool InvestigatePosition(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xB59A04", Offset = "0xB59A04", VA = "0xB59A04")]
		public InvestigateTask()
		{
		}
	}
	[Token(Token = "0x2000243")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x75B16C", Offset = "0x75B16C")]
	public class RepositionTask : ScriptableObject, IAITask
	{
		[Token(Token = "0x200041B")]
		public enum ERotate
		{
			[Token(Token = "0x4001C81")]
			LookAtTarget,
			[Token(Token = "0x4001C82")]
			Forward,
			[Token(Token = "0x4001C83")]
			DontRotate
		}

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minRange;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxRange;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speedFactor;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ERotate rotationBehavior;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rotationSpeed;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public bool inDestination;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AgentWalk agentWalk;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AgentVision agentVision;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool oldRotate;

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xB59A20", Offset = "0xB59A20", VA = "0xB59A20")]
		public void Init(AgentWalk agentWalk, AgentVision agentVision)
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xB59A54", Offset = "0xB59A54", VA = "0xB59A54", Slot = "4")]
		public bool OnEnter(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xB59ED0", Offset = "0xB59ED0", VA = "0xB59ED0", Slot = "5")]
		public bool OnUpdate(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xB5A004", Offset = "0xB5A004", VA = "0xB5A004", Slot = "6")]
		public void OnExit(IFSMTimer fsm)
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xB5A034", Offset = "0xB5A034", VA = "0xB5A034", Slot = "7")]
		public bool OnTimer(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xB5A03C", Offset = "0xB5A03C", VA = "0xB5A03C")]
		public RepositionTask()
		{
		}
	}
}
namespace TexPacker
{
	[Token(Token = "0x2000244")]
	public enum TextureChannel
	{
		[Token(Token = "0x4001399")]
		ChannelRed,
		[Token(Token = "0x400139A")]
		ChannelGreen,
		[Token(Token = "0x400139B")]
		ChannelBlue,
		[Token(Token = "0x400139C")]
		ChannelAlpha
	}
	[Token(Token = "0x2000245")]
	public class TextureChannelInput
	{
		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TextureChannel output;

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x9C7700", Offset = "0x9C7700", VA = "0x9C7700")]
		public TextureChannelInput()
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x9C7708", Offset = "0x9C7708", VA = "0x9C7708")]
		public TextureChannelInput(TextureChannel output, bool enabled = false)
		{
		}
	}
	[Token(Token = "0x2000246")]
	public enum TextureFormat
	{
		[Token(Token = "0x40013A0")]
		JPG,
		[Token(Token = "0x40013A1")]
		PNG,
		[Token(Token = "0x40013A2")]
		EXR
	}
	[Token(Token = "0x2000247")]
	public class TextureInput
	{
		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D texture;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<TextureChannel, TextureChannelInput> _inputs;

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x9C7748", Offset = "0x9C7748", VA = "0x9C7748")]
		public TextureInput()
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x9C78AC", Offset = "0x9C78AC", VA = "0x9C78AC")]
		public TextureChannelInput GetChannelInput(TextureChannel channel)
		{
			return null;
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x9C7914", Offset = "0x9C7914", VA = "0x9C7914")]
		public void SetChannelInput(TextureChannel channel, TextureChannelInput channelInput)
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class TexturePacker
	{
		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string _shaderName;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material _material;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<TextureInput> _texInputs;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int resolution;

		[Token(Token = "0x170000FD")]
		public List<TextureInput> texInputs
		{
			[Token(Token = "0x6001367")]
			[Address(RVA = "0x9C7984", Offset = "0x9C7984", VA = "0x9C7984")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x9C798C", Offset = "0x9C798C", VA = "0x9C798C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x9C7A78", Offset = "0x9C7A78", VA = "0x9C7A78")]
		public void Add(TextureInput entry)
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x9C7AE0", Offset = "0x9C7AE0", VA = "0x9C7AE0")]
		public void Remove(TextureInput input)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x9C7B48", Offset = "0x9C7B48", VA = "0x9C7B48")]
		private string GetPropertyName(int i, string param)
		{
			return null;
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x9C7BCC", Offset = "0x9C7BCC", VA = "0x9C7BCC")]
		public void ClearProperties()
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x9C7CD4", Offset = "0x9C7CD4", VA = "0x9C7CD4")]
		private Vector4 GetInputs(TextureInput texInput)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x9C7DAC", Offset = "0x9C7DAC", VA = "0x9C7DAC")]
		private Matrix4x4 GetOutputs(TextureInput texInput)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x9C7EF8", Offset = "0x9C7EF8", VA = "0x9C7EF8")]
		public Texture2D Create()
		{
			return null;
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x9C8334", Offset = "0x9C8334", VA = "0x9C8334")]
		public TexturePacker()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public static class TextureUtility
	{
		[Token(Token = "0x6001371")]
		[Address(RVA = "0x9C817C", Offset = "0x9C817C", VA = "0x9C817C")]
		public static Texture2D GenerateTexture(int width, int height, Material mat)
		{
			return null;
		}
	}
}
namespace Puppet3D
{
	[Token(Token = "0x200024A")]
	[ExecuteInEditMode]
	public class DrivenKey : MonoBehaviour
	{
		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DrivenObject[] DriverColection;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DriverEnabled;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Blend;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string BlendName;

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x9F57D8", Offset = "0x9F57D8", VA = "0x9F57D8")]
		public void Run()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x9F5AE8", Offset = "0x9F5AE8", VA = "0x9F5AE8")]
		public DrivenKey()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200024B")]
	public class DrivenObject
	{
		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject[] DrivenGOs;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] StartPositions;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] EndPositions;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion[] StartRotations;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion[] EndRotations;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float Blend;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string BlendName;

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x9F5B6C", Offset = "0x9F5B6C", VA = "0x9F5B6C")]
		public DrivenObject(GameObject[] objs)
		{
		}
	}
	[Token(Token = "0x200024C")]
	[ExecuteInEditMode]
	public class FABRIKControl : MonoBehaviour
	{
		[Token(Token = "0x200041C")]
		public class BoneInfo
		{
			[Token(Token = "0x4001C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Trans;

			[Token(Token = "0x4001C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 Pos;

			[Token(Token = "0x4001C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float L;

			[Token(Token = "0x4001C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform Source;

			[Token(Token = "0x4001C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Quaternion Offset;

			[Token(Token = "0x6001B23")]
			[Address(RVA = "0x9F7B04", Offset = "0x9F7B04", VA = "0x9F7B04")]
			public BoneInfo(Transform TransSet, Transform SourceSet)
			{
			}
		}

		[Token(Token = "0x200041D")]
		public class BoneInfoChain
		{
			[Token(Token = "0x4001C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Effector;

			[Token(Token = "0x4001C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform Root;

			[Token(Token = "0x4001C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 EffectorPos;

			[Token(Token = "0x4001C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IKControl ikControl;

			[Token(Token = "0x4001C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float ik;

			[Token(Token = "0x4001C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<BoneInfo> _boneInfos;

			[Token(Token = "0x4001C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float _MinDistance;

			[Token(Token = "0x4001C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<BoneInfoChain> _childBoneChains;

			[Token(Token = "0x6001B24")]
			[Address(RVA = "0x9F5FD0", Offset = "0x9F5FD0", VA = "0x9F5FD0")]
			public BoneInfoChain(Transform root)
			{
			}

			[Token(Token = "0x6001B25")]
			[Address(RVA = "0x9F664C", Offset = "0x9F664C", VA = "0x9F664C")]
			public void Print()
			{
			}

			[Token(Token = "0x6001B26")]
			[Address(RVA = "0x9F6BE0", Offset = "0x9F6BE0", VA = "0x9F6BE0")]
			public Vector3 Backward()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001B27")]
			[Address(RVA = "0x9F7120", Offset = "0x9F7120", VA = "0x9F7120")]
			public void Forward(Vector3 newRootPos, bool isRoot = false)
			{
			}

			[Token(Token = "0x6001B28")]
			[Address(RVA = "0x9F7DF4", Offset = "0x9F7DF4", VA = "0x9F7DF4")]
			private bool MinDistanceCheck()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B29")]
			[Address(RVA = "0x9F7EE0", Offset = "0x9F7EE0", VA = "0x9F7EE0")]
			public bool IsTooFar()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B2A")]
			[Address(RVA = "0x9F7FCC", Offset = "0x9F7FCC", VA = "0x9F7FCC")]
			private float SumDistances()
			{
				return default(float);
			}

			[Token(Token = "0x6001B2B")]
			[Address(RVA = "0x9F6964", Offset = "0x9F6964", VA = "0x9F6964")]
			public void SetInitialBones()
			{
			}

			[Token(Token = "0x6001B2C")]
			[Address(RVA = "0x9F77E4", Offset = "0x9F77E4", VA = "0x9F77E4")]
			public void SetBones()
			{
			}

			[Token(Token = "0x6001B2D")]
			[Address(RVA = "0x9F8074", Offset = "0x9F8074", VA = "0x9F8074")]
			public void StrechedSolve()
			{
			}
		}

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoneInfoChain BoneChain;

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x9F5F20", Offset = "0x9F5F20", VA = "0x9F5F20")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x9F5FC8", Offset = "0x9F5FC8", VA = "0x9F5FC8")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x9F5FCC", Offset = "0x9F5FCC", VA = "0x9F5FCC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x9F5F24", Offset = "0x9F5F24", VA = "0x9F5F24")]
		public void Init()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x9F6B74", Offset = "0x9F6B74", VA = "0x9F6B74")]
		public void Update()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x9F7AFC", Offset = "0x9F7AFC", VA = "0x9F7AFC")]
		public FABRIKControl()
		{
		}
	}
	[Token(Token = "0x200024D")]
	[ExecuteInEditMode]
	public class GlobalControl : Control
	{
		[Serializable]
		[Token(Token = "0x200041E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BCE8", Offset = "0x75BCE8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<SkinnedMeshRenderer, float>, int> <>9__36_0;

			[Token(Token = "0x4001C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<SkinnedMeshRenderer, float>, float> <>9__36_1;

			[Token(Token = "0x6001B2F")]
			[Address(RVA = "0x9FBD74", Offset = "0x9FBD74", VA = "0x9FBD74")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B30")]
			[Address(RVA = "0x9FBD7C", Offset = "0x9FBD7C", VA = "0x9FBD7C")]
			internal int <CombineAllMeshes>b__36_0(KeyValuePair<SkinnedMeshRenderer, float> pair)
			{
				return default(int);
			}

			[Token(Token = "0x6001B31")]
			[Address(RVA = "0x9FBDCC", Offset = "0x9FBDCC", VA = "0x9FBDCC")]
			internal float <CombineAllMeshes>b__36_1(KeyValuePair<SkinnedMeshRenderer, float> pair)
			{
				return default(float);
			}
		}

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool BonesVisiblity;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool ControlsVisiblity;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SplineControl> _SplineControls;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<IKControl> _Ikhandles;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ParentControl> _ParentControls;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<IKFKBlend> _IKFKBlends;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<DrivenKey> _DrivenKeys;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x760A44", Offset = "0x760A44")]
		public float Body;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x760A5C", Offset = "0x760A5C")]
		public float ArmLeft;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x760A74", Offset = "0x760A74")]
		public float ArmRight;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x760A8C", Offset = "0x760A8C")]
		public float LegLeft;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x760AA4", Offset = "0x760AA4")]
		public float LegRight;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public List<Control> _Controls;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public List<Bone> _Bones;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool AutoRefresh;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool ControlsEnabled;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool lateUpdate;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public int _flipCorrection;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float HandleRadius;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SplineControl[] _SplineControlsArray;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private IKControl[] _IkhandlesArray;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ParentControl[] _ParentControlsArray;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Mesh _mesh;

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x9F85FC", Offset = "0x9F85FC", VA = "0x9F85FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x9F8928", Offset = "0x9F8928", VA = "0x9F8928")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x9F893C", Offset = "0x9F893C", VA = "0x9F893C")]
		public void Refresh(bool ikfkblends = true)
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x9F9094", Offset = "0x9F9094", VA = "0x9F9094")]
		private void Start()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x9F8868", Offset = "0x9F8868", VA = "0x9F8868")]
		public void InitializeArrays()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x9F9164", Offset = "0x9F9164", VA = "0x9F9164")]
		public void Init()
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x9F916C", Offset = "0x9F916C", VA = "0x9F916C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x9F9170", Offset = "0x9F9170", VA = "0x9F9170")]
		public void UpdateVisibility()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x9F93E8", Offset = "0x9F93E8", VA = "0x9F93E8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x9F956C", Offset = "0x9F956C", VA = "0x9F956C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x9F9AD4", Offset = "0x9F9AD4", VA = "0x9F9AD4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x9F9584", Offset = "0x9F9584", VA = "0x9F9584")]
		public void Run()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x9F8A54", Offset = "0x9F8A54", VA = "0x9F8A54")]
		public void TraverseHierarchy(Transform root)
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x9FA7B8", Offset = "0x9FA7B8", VA = "0x9FA7B8")]
		private void CombineAllMeshes()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x9F9AEC", Offset = "0x9F9AEC", VA = "0x9F9AEC")]
		private void FaceCamera()
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x9FBB2C", Offset = "0x9FBB2C", VA = "0x9FBB2C")]
		public GlobalControl()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class IKControl : MonoBehaviour
	{
		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x760AEC", Offset = "0x760AEC")]
		public float IKFK;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool FKVisibility;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool IKVisibility;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Vector3 AimDirection;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Transform poleVector;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector3 UpDirection;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Vector3[] scaleStart;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Transform topJointTransformIK;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform middleJointTransformIK;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Transform bottomJointTransformIK;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Vector3 OffsetScale;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Transform IK_CTRL;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 root2IK;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 root2IK2MiddleJoint;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public int numberIkBonesIndex;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[HideInInspector]
		public int numberOfBones;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public int iterations;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[HideInInspector]
		public float damping;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Transform IKHandle;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Transform endTransform;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public Transform startTransform;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public List<Vector3> bindPose;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public List<Transform> bindBones;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public bool limitBones;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[HideInInspector]
		public Quaternion Offset;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[HideInInspector]
		public Quaternion topJointTransform_OffsetRotation;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public Quaternion topJointTransform_OffsetRotation2;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[HideInInspector]
		public Quaternion middleJointTransform_OffsetRotation;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[HideInInspector]
		public Vector3 bottomJointTransform_OffsetRotation;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public bool bottomJointTransformMatchesIK_CTRLRotation;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		[HideInInspector]
		public bool debug;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float angle;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float topJointTransform_Length;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float middleJointTransform_Length;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float arm_Length;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float IK_CTRLDistance;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float adyacent;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[HideInInspector]
		public bool DisableRotateAround;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[HideInInspector]
		public Transform topJointTransform;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		public Transform middleJointTransform;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[HideInInspector]
		public Transform bottomJointTransform;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		public Transform topJointTransformFK;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[HideInInspector]
		public Transform middleJointTransformFK;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[HideInInspector]
		public Transform bottomJointTransformFK;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[HideInInspector]
		public FK[] fks;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[HideInInspector]
		public List<Transform> angleLimitTransform;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[HideInInspector]
		public List<Vector2> angleLimits;

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x9F9C20", Offset = "0x9F9C20", VA = "0x9F9C20")]
		public void CalculateIK()
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x9FC758", Offset = "0x9FC758", VA = "0x9FC758")]
		private bool IsNaN(Quaternion q)
		{
			return default(bool);
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x9FC7CC", Offset = "0x9FC7CC", VA = "0x9FC7CC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x9FC940", Offset = "0x9FC940", VA = "0x9FC940")]
		public void CalculateMultiIK()
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x9FCA64", Offset = "0x9FCA64", VA = "0x9FCA64")]
		private void CalculateMultiIK_run()
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x9FCB20", Offset = "0x9FCB20", VA = "0x9FCB20")]
		private void RotateTowardsIK_CTRL(Transform startTransform)
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x9FCE64", Offset = "0x9FCE64", VA = "0x9FCE64")]
		public static float SignedAngle(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x9FCFA8", Offset = "0x9FCFA8", VA = "0x9FCFA8")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x9FD030", Offset = "0x9FD030", VA = "0x9FD030")]
		public IKControl()
		{
		}
	}
	[Token(Token = "0x200024F")]
	[ExecuteInEditMode]
	public class IKFKBlend : MonoBehaviour
	{
		[Token(Token = "0x200041F")]
		public enum IKFKType
		{
			[Token(Token = "0x4001C95")]
			ArmL,
			[Token(Token = "0x4001C96")]
			ArmR,
			[Token(Token = "0x4001C97")]
			LegL,
			[Token(Token = "0x4001C98")]
			LegR,
			[Token(Token = "0x4001C99")]
			Body
		}

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x760D44", Offset = "0x760D44")]
		public float IKFK;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform IK;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform FK;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 PositionOffset;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion RotationOffset;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool ContrstrainPosition;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IKFKType GroupID;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 Pos;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float L;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform ConstrainedControl;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Vector3 _constrainedControlPosOffset;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Quaternion _constrainedControlRotOffset;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private Quaternion _constrainedControlRotOffsetDif;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Transform Handle;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public GlobalControl GlobalControl;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool OverrideWithRig;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Quaternion _initialRotation;

		[Token(Token = "0x170000FE")]
		private Transform GlobalControlTrans
		{
			[Token(Token = "0x6001394")]
			[Address(RVA = "0xA48074", Offset = "0xA48074", VA = "0xA48074")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xA48090", Offset = "0xA48090", VA = "0xA48090")]
		public void Init()
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xA482CC", Offset = "0xA482CC", VA = "0xA482CC")]
		public void Run()
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xA48670", Offset = "0xA48670", VA = "0xA48670")]
		public void RunConstrianedControls()
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xA48904", Offset = "0xA48904", VA = "0xA48904")]
		public IKFKBlend()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class ParentControl : Control
	{
		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject bone;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 HandleScale;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Mesh OverrideMesh;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 OverrideMeshOffset;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool Point;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool Orient;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool Scale;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool ConstrianedPosition;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool ConstrianedOrient;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool MaintainOffset;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 OffsetPos;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 OffsetScale;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Quaternion OffsetOrient;

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xA48AC0", Offset = "0xA48AC0", VA = "0xA48AC0")]
		public void ParentControlRun()
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xA48D64", Offset = "0xA48D64", VA = "0xA48D64")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xA49068", Offset = "0xA49068", VA = "0xA49068")]
		public ParentControl()
		{
		}
	}
	[Token(Token = "0x2000251")]
	[ExecuteInEditMode]
	public class SkinWeightControl : MonoBehaviour
	{
		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Bone0;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Bone1;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Bone2;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Bone3;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int boneIndex0;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int boneIndex1;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int boneIndex2;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int boneIndex3;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float Weight0;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float Weight1;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Weight2;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float Weight3;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Mesh mesh;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SkinnedMeshRenderer meshRenderer;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int vertNumber;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject[] handles;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3[] verts;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh skinnedMesh;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool autoUpdate;

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xA49458", Offset = "0xA49458", VA = "0xA49458")]
		private void Update()
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xA4945C", Offset = "0xA4945C", VA = "0xA4945C")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xA49800", Offset = "0xA49800", VA = "0xA49800")]
		public SkinWeightControl()
		{
		}
	}
	[Token(Token = "0x2000252")]
	[ExecuteInEditMode]
	public class SplineControl : MonoBehaviour
	{
		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> _splineCTRLS;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int numberBones;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector3> outCoordinates;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> bones;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 UpDirection;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float RotationOffsetX;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool RotateEnds;

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xA49ABC", Offset = "0xA49ABC", VA = "0xA49ABC")]
		private string GetUniqueName(string name)
		{
			return null;
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xA49CE0", Offset = "0xA49CE0", VA = "0xA49CE0")]
		public void Run()
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xA4A184", Offset = "0xA4A184", VA = "0xA4A184")]
		public static bool CatmullRom(List<Transform> inCoordinates, out List<Vector3> outCoordinates, int samples)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xA4A44C", Offset = "0xA4A44C", VA = "0xA4A44C")]
		public static Vector3 PointOnCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xA4A524", Offset = "0xA4A524", VA = "0xA4A524")]
		public SplineControl()
		{
		}
	}
	[Token(Token = "0x2000253")]
	[ExecuteInEditMode]
	public class Bakedmesh : MonoBehaviour
	{
		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkinnedMeshRenderer skin;

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x9F4A04", Offset = "0x9F4A04", VA = "0x9F4A04")]
		private void Start()
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x9F4A74", Offset = "0x9F4A74", VA = "0x9F4A74")]
		private void Update()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x9F4EAC", Offset = "0x9F4EAC", VA = "0x9F4EAC")]
		public Bakedmesh()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class Guides : MonoBehaviour
	{
		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] Biped;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bounds Bounds;

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x9FC568", Offset = "0x9FC568", VA = "0x9FC568")]
		public Guides()
		{
		}
	}
	[Token(Token = "0x2000255")]
	[ExecuteInEditMode]
	public class StoreData : MonoBehaviour
	{
		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> Data;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 OriginalSpritePosition;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public bool Editable;

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xA4A658", Offset = "0xA4A658", VA = "0xA4A658")]
		private void Update()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xA4A754", Offset = "0xA4A754", VA = "0xA4A754")]
		public StoreData()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class Voxel
	{
		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Bone0;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Bone1;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Bone2;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int Bone3;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Weight0;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Weight1;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Weight2;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Weight3;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3[] NeighbourIndexes;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Bounds bounds;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool Inside;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 Pos;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 Scale;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool Set;

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xA4A880", Offset = "0xA4A880", VA = "0xA4A880")]
		public Voxel()
		{
		}
	}
	[Token(Token = "0x2000257")]
	[ExecuteInEditMode]
	public class Bone : MonoBehaviour
	{
		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh _mesh;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Radius;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color Color;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool ShowJoint;

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x9F4EB4", Offset = "0x9F4EB4", VA = "0x9F4EB4")]
		private void Start()
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x9F4F84", Offset = "0x9F4F84", VA = "0x9F4F84")]
		private void Update()
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x9F4F88", Offset = "0x9F4F88", VA = "0x9F4F88")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x9F4F94", Offset = "0x9F4F94", VA = "0x9F4F94")]
		private void DrawThisBone(Color col)
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x9F5728", Offset = "0x9F5728", VA = "0x9F5728")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x9F5780", Offset = "0x9F5780", VA = "0x9F5780")]
		private void OnHideGizmos()
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x9F5784", Offset = "0x9F5784", VA = "0x9F5784")]
		public Bone()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class Control : MonoBehaviour
	{
		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool Active;

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x9F57C8", Offset = "0x9F57C8", VA = "0x9F57C8")]
		public Control()
		{
		}
	}
	[Token(Token = "0x2000259")]
	[ExecuteInEditMode]
	public class FK : Control
	{
		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Transparency;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float HandleSize;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public IKControl IKHandle;

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x9F82DC", Offset = "0x9F82DC", VA = "0x9F82DC")]
		private void Start()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x9F82E0", Offset = "0x9F82E0", VA = "0x9F82E0")]
		private void Update()
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x9F839C", Offset = "0x9F839C", VA = "0x9F839C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x9F83A0", Offset = "0x9F83A0", VA = "0x9F83A0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x9F85E4", Offset = "0x9F85E4", VA = "0x9F85E4")]
		public FK()
		{
		}
	}
	[Token(Token = "0x200025A")]
	[ExecuteInEditMode]
	public class Guide : MonoBehaviour
	{
		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Radius;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 HandlePos;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool SnapToCentre;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool Mirror;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Guide MirroredGuide;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Color _Color;

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x9FBE10", Offset = "0x9FBE10", VA = "0x9FBE10")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x9FC038", Offset = "0x9FC038", VA = "0x9FC038")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x9FC3AC", Offset = "0x9FC3AC", VA = "0x9FC3AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x9FC3B0", Offset = "0x9FC3B0", VA = "0x9FC3B0")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x9FC54C", Offset = "0x9FC54C", VA = "0x9FC54C")]
		public Guide()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class IK : Control
	{
		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float HandleSize;

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x9FC570", Offset = "0x9FC570", VA = "0x9FC570")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x9FC740", Offset = "0x9FC740", VA = "0x9FC740")]
		public IK()
		{
		}
	}
	[Token(Token = "0x200025C")]
	[ExecuteInEditMode]
	public class IKHidden : MonoBehaviour
	{
		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public IKControl IKHandle;

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xA489FC", Offset = "0xA489FC", VA = "0xA489FC")]
		private void Update()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xA48AB8", Offset = "0xA48AB8", VA = "0xA48AB8")]
		public IKHidden()
		{
		}
	}
	[Token(Token = "0x200025D")]
	[ExecuteInEditMode]
	public class Pole : Control
	{
		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float HandleRadius;

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xA4912C", Offset = "0xA4912C", VA = "0xA4912C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xA49130", Offset = "0xA49130", VA = "0xA49130")]
		private void Update()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xA49134", Offset = "0xA49134", VA = "0xA49134")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xA491A4", Offset = "0xA491A4", VA = "0xA491A4")]
		public Pole()
		{
		}
	}
	[Token(Token = "0x200025E")]
	[ExecuteInEditMode]
	public class Spline : Control
	{
		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 HandleSize;

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xA49808", Offset = "0xA49808", VA = "0xA49808")]
		private void Start()
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xA4980C", Offset = "0xA4980C", VA = "0xA4980C")]
		private void Update()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xA49810", Offset = "0xA49810", VA = "0xA49810")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xA49A44", Offset = "0xA49A44", VA = "0xA49A44")]
		public Spline()
		{
		}
	}
	[Token(Token = "0x200025F")]
	[ExecuteInEditMode]
	public class VertexWeight : MonoBehaviour
	{
		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float HandleRadius;

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xA4A808", Offset = "0xA4A808", VA = "0xA4A808")]
		private void Start()
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xA4A80C", Offset = "0xA4A80C", VA = "0xA4A80C")]
		private void Update()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xA4A810", Offset = "0xA4A810", VA = "0xA4A810")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xA4A86C", Offset = "0xA4A86C", VA = "0xA4A86C")]
		public VertexWeight()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class Puppet3DAnimatorController : MonoBehaviour
	{
		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator _animator;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string axisName;

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xA491B4", Offset = "0xA491B4", VA = "0xA491B4")]
		private void Start()
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xA49224", Offset = "0xA49224", VA = "0xA49224")]
		private void Update()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xA493E8", Offset = "0xA493E8", VA = "0xA493E8")]
		public Puppet3DAnimatorController()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class Puppet3DSortingLayer : MonoBehaviour
	{
		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Vector2 offsetAmount;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Vector2[] uvsDefault;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool initialized;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public Bounds bounds;

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xA49450", Offset = "0xA49450", VA = "0xA49450")]
		public Puppet3DSortingLayer()
		{
		}
	}
}
namespace UnitySA.Characters.FirstPerson
{
	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x75B2A0", Offset = "0x75B2A0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x75B2A0", Offset = "0x75B2A0")]
	public class FPCtrl : MonoBehaviour
	{
		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_IsWalking;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_WalkSpeed;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_RunSpeed;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x760E6C", Offset = "0x760E6C")]
		private float m_RunstepLenghten;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_JumpSpeed;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_StickToGroundForce;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_GravityMultiplier;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MLook m_MouseLook;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_UseFovKick;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FOVZoom m_FovKick;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_UseHeadBob;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CurveCtrlBob m_HeadBob;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LerpCtrlBob m_JumpBob;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_StepInterval;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Camera m_Camera;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_Jump;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_YRotation;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector2 m_Input;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 m_MoveDir;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CharacterController m_CharacterController;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private CollisionFlags m_CollisionFlags;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float m_StepCycle;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_NextStep;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool m_Jumping;

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xEDB784", Offset = "0xEDB784", VA = "0xEDB784")]
		private void Start()
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xEDB9D0", Offset = "0xEDB9D0", VA = "0xEDB9D0")]
		private void Update()
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xEDBB90", Offset = "0xEDBB90", VA = "0xEDBB90")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xEDC0E8", Offset = "0xEDC0E8", VA = "0xEDC0E8")]
		private void ProgressStepCycle(float speed)
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xEDC1E4", Offset = "0xEDC1E4", VA = "0xEDC1E4")]
		private void UpdateCameraPosition(float speed)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xEDBF4C", Offset = "0xEDBF4C", VA = "0xEDBF4C")]
		private void GetInput(out float speed)
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xEDBAC0", Offset = "0xEDBAC0", VA = "0xEDBAC0")]
		private void RotateView()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xEDC8A8", Offset = "0xEDC8A8", VA = "0xEDC8A8")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xEDCA28", Offset = "0xEDCA28", VA = "0xEDCA28")]
		public FPCtrl()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000263")]
	public class MLook
	{
		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float XSensitivity;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float YSensitivity;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool clampVerticalRotation;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MinimumX;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaximumX;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool smooth;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float smoothTime;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion m_CharacterTargetRot;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_CameraTargetRot;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_cursorIsLocked;

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xEDB97C", Offset = "0xEDB97C", VA = "0xEDB97C")]
		public void Init(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xEDC5D0", Offset = "0xEDC5D0", VA = "0xEDC5D0")]
		public void LookRotation(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xEDCE78", Offset = "0xEDCE78", VA = "0xEDCE78")]
		public void SetCursorLock(bool value)
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xEDC3A8", Offset = "0xEDC3A8", VA = "0xEDC3A8")]
		public void UpdateCursorLock()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xEDCEAC", Offset = "0xEDCEAC", VA = "0xEDCEAC")]
		private void InternalLockUpdate()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xEDCDB0", Offset = "0xEDCDB0", VA = "0xEDCDB0")]
		private Quaternion ClampRotationAroundXAxis(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xEDCF28", Offset = "0xEDCF28", VA = "0xEDCF28")]
		public MLook()
		{
		}
	}
}
namespace UnitySA.Utility
{
	[Serializable]
	[Token(Token = "0x2000264")]
	public class CurveCtrlBob
	{
		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float HorizontalBobRange;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float VerticalBobRange;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve Bobcurve;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VerticaltoHorizontalRatio;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_CyclePositionX;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_CyclePositionY;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_BobBaseInterval;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_Time;

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xEDB8D8", Offset = "0xEDB8D8", VA = "0xEDB8D8")]
		public void Setup(Camera camera, float bobBaseInterval)
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xEDC3B8", Offset = "0xEDC3B8", VA = "0xEDC3B8")]
		public Vector3 DoHeadBob(float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xEDCB5C", Offset = "0xEDCB5C", VA = "0xEDCB5C")]
		public CurveCtrlBob()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000265")]
	public class FOVZoom
	{
		[Token(Token = "0x2000420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BCF8", Offset = "0x75BCF8")]
		private sealed class <FOVKickUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVZoom <>4__this;

			[Token(Token = "0x4001C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000221")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B35")]
				[Address(RVA = "0xEDD400", Offset = "0xEDD400", VA = "0xEDD400", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000222")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B37")]
				[Address(RVA = "0xEDD468", Offset = "0xEDD468", VA = "0xEDD468", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B32")]
			[Address(RVA = "0xEDD044", Offset = "0xEDD044", VA = "0xEDD044")]
			[DebuggerHidden]
			public <FOVKickUp>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001B33")]
			[Address(RVA = "0xEDD290", Offset = "0xEDD290", VA = "0xEDD290", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B34")]
			[Address(RVA = "0xEDD294", Offset = "0xEDD294", VA = "0xEDD294", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B36")]
			[Address(RVA = "0xEDD408", Offset = "0xEDD408", VA = "0xEDD408", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000421")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BD08", Offset = "0x75BD08")]
		private sealed class <FOVKickDown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVZoom <>4__this;

			[Token(Token = "0x4001CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000223")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B3B")]
				[Address(RVA = "0xEDD220", Offset = "0xEDD220", VA = "0xEDD220", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000224")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B3D")]
				[Address(RVA = "0xEDD288", Offset = "0xEDD288", VA = "0xEDD288", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B38")]
			[Address(RVA = "0xEDD070", Offset = "0xEDD070", VA = "0xEDD070")]
			[DebuggerHidden]
			public <FOVKickDown>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001B39")]
			[Address(RVA = "0xEDD09C", Offset = "0xEDD09C", VA = "0xEDD09C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B3A")]
			[Address(RVA = "0xEDD0A0", Offset = "0xEDD0A0", VA = "0xEDD0A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B3C")]
			[Address(RVA = "0xEDD228", Offset = "0xEDD228", VA = "0xEDD228", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float originalFov;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FOVIncrease;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TimeToIncrease;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TimeToDecrease;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve IncreaseCurve;

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xEDB88C", Offset = "0xEDB88C", VA = "0xEDB88C")]
		public void Setup(Camera camera)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xEDCF5C", Offset = "0xEDCF5C", VA = "0xEDCF5C")]
		private void CheckStatus(Camera camera)
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xEDD03C", Offset = "0xEDD03C", VA = "0xEDD03C")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xEDC554", Offset = "0xEDC554", VA = "0xEDC554")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x766B94", Offset = "0x766B94")]
		public IEnumerator FOVKickUp()
		{
			return null;
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xEDC4D8", Offset = "0xEDC4D8", VA = "0xEDC4D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x766BF8", Offset = "0x766BF8")]
		public IEnumerator FOVKickDown()
		{
			return null;
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xEDCB40", Offset = "0xEDCB40", VA = "0xEDCB40")]
		public FOVZoom()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000266")]
	public class LerpCtrlBob
	{
		[Token(Token = "0x2000422")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BD18", Offset = "0x75BD18")]
		private sealed class <DoBobCycle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LerpCtrlBob <>4__this;

			[Token(Token = "0x4001CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000225")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B41")]
				[Address(RVA = "0xEDD6A0", Offset = "0xEDD6A0", VA = "0xEDD6A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000226")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B43")]
				[Address(RVA = "0xEDD708", Offset = "0xEDD708", VA = "0xEDD708", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B3E")]
			[Address(RVA = "0xEDD478", Offset = "0xEDD478", VA = "0xEDD478")]
			[DebuggerHidden]
			public <DoBobCycle>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001B3F")]
			[Address(RVA = "0xEDD4A4", Offset = "0xEDD4A4", VA = "0xEDD4A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B40")]
			[Address(RVA = "0xEDD4A8", Offset = "0xEDD4A8", VA = "0xEDD4A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B42")]
			[Address(RVA = "0xEDD6A8", Offset = "0xEDD6A8", VA = "0xEDD6A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float BobDuration;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BobAmount;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Offset;

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xEDD470", Offset = "0xEDD470", VA = "0xEDD470")]
		public float Offset()
		{
			return default(float);
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xEDBB14", Offset = "0xEDBB14", VA = "0xEDBB14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x766C5C", Offset = "0x766C5C")]
		public IEnumerator DoBobCycle()
		{
			return null;
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xEDCDA8", Offset = "0xEDCDA8", VA = "0xEDCDA8")]
		public LerpCtrlBob()
		{
		}
	}
}
namespace ch.sycoforge.Decal.Demo
{
	[Token(Token = "0x2000267")]
	public class AdvancedBulletHoles : MonoBehaviour
	{
		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EasyDecal DecalPrefab;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ImpactParticles;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CastRadius;

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x1680D1C", Offset = "0x1680D1C", VA = "0x1680D1C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x1680DF4", Offset = "0x1680DF4", VA = "0x1680DF4")]
		private void Update()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x16812D4", Offset = "0x16812D4", VA = "0x16812D4")]
		public AdvancedBulletHoles()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class BasicBulletHoles : MonoBehaviour
	{
		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EasyDecal DecalPrefab;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool t;

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x16812E4", Offset = "0x16812E4", VA = "0x16812E4")]
		public void Start()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x1681398", Offset = "0x1681398", VA = "0x1681398")]
		public void Update()
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x16815DC", Offset = "0x16815DC", VA = "0x16815DC")]
		public BasicBulletHoles()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public static class BezierUtil
	{
		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x16815E4", Offset = "0x16815E4", VA = "0x16815E4")]
		public static List<Vector3> InterpolatePath(List<Vector3> path, int segments, float radius, float angleThreshold)
		{
			return null;
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x1681AFC", Offset = "0x1681AFC", VA = "0x1681AFC")]
		public static Vector3[] GetBezierApproximation(Vector3[] controlPoints, int outputSegmentCount)
		{
			return null;
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x1681BDC", Offset = "0x1681BDC", VA = "0x1681BDC")]
		public static Vector3 GetBezierPoint(float t, Vector3[] controlPoints, int index, int count)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200026A")]
	public static class LineUtil
	{
		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x1681DBC", Offset = "0x1681DBC", VA = "0x1681DBC")]
		public static void DrawPath(float thickness, Material material, List<Vector3> path)
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x1681F60", Offset = "0x1681F60", VA = "0x1681F60")]
		private static void DrawLine(float thickness, Vector3 start, Vector3 end)
		{
		}
	}
	[Token(Token = "0x200026B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x75B32C", Offset = "0x75B32C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x75B32C", Offset = "0x75B32C")]
	public class PathAgent : MonoBehaviour
	{
		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float PathThickness;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x760F5C", Offset = "0x760F5C")]
		public float NormalPathOffset;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x760F94", Offset = "0x760F94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x760F94", Offset = "0x760F94")]
		public float Radius;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x760FEC", Offset = "0x760FEC")]
		public float AngleThreshold;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool DrawGizmos;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EasyDecal TargetAimDecal;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject TargetPointDecalPrefab;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Vector3> path;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private NavMeshAgent agent;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 decalOffset;

		[Token(Token = "0x40014A8")]
		private const int MAXDISTANCE = 50;

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x16821DC", Offset = "0x16821DC", VA = "0x16821DC")]
		private void Start()
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x1682284", Offset = "0x1682284", VA = "0x1682284")]
		private void Update()
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x1682790", Offset = "0x1682790", VA = "0x1682790")]
		private void SetTarget(Ray mouseRay)
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x168231C", Offset = "0x168231C", VA = "0x168231C")]
		private void CreatePath(Ray mouseRay)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x1682984", Offset = "0x1682984", VA = "0x1682984")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x1682AA8", Offset = "0x1682AA8", VA = "0x1682AA8")]
		public PathAgent()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class ProxyRegister : MonoBehaviour
	{
		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StaticProxyCollection ProxyCollection;

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x1682B74", Offset = "0x1682B74", VA = "0x1682B74")]
		private void Start()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x1682C2C", Offset = "0x1682C2C", VA = "0x1682C2C")]
		public ProxyRegister()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class Sinoid : MonoBehaviour
	{
		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngularVelocity;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SineFreq;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Amplitude;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float accuTime;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 startPos;

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x1682C34", Offset = "0x1682C34", VA = "0x1682C34")]
		private void Start()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x1682C70", Offset = "0x1682C70", VA = "0x1682C70")]
		private void Update()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x1682E5C", Offset = "0x1682E5C", VA = "0x1682E5C")]
		public Sinoid()
		{
		}
	}
}
namespace Forge3D
{
	[Token(Token = "0x200026E")]
	public class F3DAudioController : MonoBehaviour
	{
		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static F3DAudioController instance;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float timer_01;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float timer_02;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform audioSource;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x761024", Offset = "0x761024")]
		public AudioClip[] vulcanHit;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip vulcanShot;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float vulcanDelay;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float vulcanHitDelay;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76105C", Offset = "0x76105C")]
		public AudioClip[] soloGunHit;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip soloGunShot;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float soloGunDelay;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float soloGunHitDelay;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x761094", Offset = "0x761094")]
		public AudioClip[] sniperHit;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip sniperShot;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float sniperDelay;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float sniperHitDelay;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7610CC", Offset = "0x7610CC")]
		public AudioClip[] shotGunHit;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip shotGunShot;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float shotGunDelay;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float shotGunHitDelay;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x761104", Offset = "0x761104")]
		public AudioClip[] seekerHit;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioClip seekerShot;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float seekerDelay;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float seekerHitDelay;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76113C", Offset = "0x76113C")]
		public AudioClip[] railgunHit;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AudioClip railgunShot;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float railgunDelay;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float railgunHitDelay;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x761174", Offset = "0x761174")]
		public AudioClip[] plasmagunHit;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AudioClip plasmagunShot;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float plasmagunDelay;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float plasmagunHitDelay;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7611AC", Offset = "0x7611AC")]
		public AudioClip plasmabeamOpen;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioClip plasmabeamLoop;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioClip plasmabeamClose;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7611E4", Offset = "0x7611E4")]
		public AudioClip plasmabeamHeavyOpen;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AudioClip plasmabeamHeavyLoop;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AudioClip plasmabeamHeavyClose;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76121C", Offset = "0x76121C")]
		public AudioClip lightningGunOpen;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AudioClip lightningGunLoop;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AudioClip lightningGunClose;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x761254", Offset = "0x761254")]
		public AudioClip flameGunOpen;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public AudioClip flameGunLoop;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public AudioClip flameGunClose;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76128C", Offset = "0x76128C")]
		public AudioClip[] laserImpulseHit;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public AudioClip laserImpulseShot;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float laserImpulseDelay;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public float laserImpulseHitDelay;

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xA29E24", Offset = "0xA29E24", VA = "0xA29E24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xA29E7C", Offset = "0xA29E7C", VA = "0xA29E7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xA29EC8", Offset = "0xA29EC8", VA = "0xA29EC8")]
		public void VulcanShot(Vector3 pos)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xA2A078", Offset = "0xA2A078", VA = "0xA2A078")]
		public void VulcanHit(Vector3 pos)
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xA2A270", Offset = "0xA2A270", VA = "0xA2A270")]
		public void SoloGunShot(Vector3 pos)
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xA2A420", Offset = "0xA2A420", VA = "0xA2A420")]
		public void SoloGunHit(Vector3 pos)
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xA2A61C", Offset = "0xA2A61C", VA = "0xA2A61C")]
		public void SniperShot(Vector3 pos)
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xA2A7CC", Offset = "0xA2A7CC", VA = "0xA2A7CC")]
		public void SniperHit(Vector3 pos)
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xA2A9C4", Offset = "0xA2A9C4", VA = "0xA2A9C4")]
		public void ShotGunShot(Vector3 pos)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xA2AB74", Offset = "0xA2AB74", VA = "0xA2AB74")]
		public void ShotGunHit(Vector3 pos)
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xA2AD6C", Offset = "0xA2AD6C", VA = "0xA2AD6C")]
		public void SeekerShot(Vector3 pos)
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xA2AF1C", Offset = "0xA2AF1C", VA = "0xA2AF1C")]
		public void SeekerHit(Vector3 pos)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xA2B114", Offset = "0xA2B114", VA = "0xA2B114")]
		public void RailGunShot(Vector3 pos)
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xA2B2C4", Offset = "0xA2B2C4", VA = "0xA2B2C4")]
		public void RailGunHit(Vector3 pos)
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xA2B4BC", Offset = "0xA2B4BC", VA = "0xA2B4BC")]
		public void PlasmaGunShot(Vector3 pos)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xA2B66C", Offset = "0xA2B66C", VA = "0xA2B66C")]
		public void PlasmaGunHit(Vector3 pos)
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xA2B868", Offset = "0xA2B868", VA = "0xA2B868")]
		public void PlasmaBeamLoop(Vector3 pos, Transform loopParent)
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xA2BB38", Offset = "0xA2BB38", VA = "0xA2BB38")]
		public void PlasmaBeamClose(Vector3 pos)
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xA2BCE8", Offset = "0xA2BCE8", VA = "0xA2BCE8")]
		public void PlasmaBeamHeavyLoop(Vector3 pos, Transform loopParent)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xA2BFB8", Offset = "0xA2BFB8", VA = "0xA2BFB8")]
		public void PlasmaBeamHeavyClose(Vector3 pos)
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xA2C168", Offset = "0xA2C168", VA = "0xA2C168")]
		public void LightningGunLoop(Vector3 pos, Transform loopParent)
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xA2C458", Offset = "0xA2C458", VA = "0xA2C458")]
		public void LightningGunClose(Vector3 pos)
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xA2C608", Offset = "0xA2C608", VA = "0xA2C608")]
		public void FlameGunLoop(Vector3 pos, Transform loopParent)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xA2C8F8", Offset = "0xA2C8F8", VA = "0xA2C8F8")]
		public void FlameGunClose(Vector3 pos)
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xA2CAA8", Offset = "0xA2CAA8", VA = "0xA2CAA8")]
		public void LaserImpulseShot(Vector3 pos)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xA2CC58", Offset = "0xA2CC58", VA = "0xA2CC58")]
		public void LaserImpulseHit(Vector3 pos)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xA2CE58", Offset = "0xA2CE58", VA = "0xA2CE58")]
		public F3DAudioController()
		{
		}
	}
	[Token(Token = "0x200026F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x75B3B8", Offset = "0x75B3B8")]
	public class F3DBeam : MonoBehaviour
	{
		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layerMask;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public F3DFXType fxType;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool OneShot;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture[] BeamFrames;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FrameStep;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float beamScale;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MaxBeamLength;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool AnimateUV;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float UVTime;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rayImpact;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rayMuzzle;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RaycastHit hitPoint;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private RaycastHit2D hitPoint2D;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int frameNo;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int FrameTimerID;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float beamLength;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float initialBeamOffset;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float fxOffset;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float animateUVTime;

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xA2CE60", Offset = "0xA2CE60", VA = "0xA2CE60")]
		private void Awake()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xA2CF34", Offset = "0xA2CF34", VA = "0xA2CF34")]
		private void OnSpawned()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xA2DC40", Offset = "0xA2DC40", VA = "0xA2DC40")]
		private void OnDespawned()
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xA2CF88", Offset = "0xA2CF88", VA = "0xA2CF88")]
		private void Raycast()
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xA2DE2C", Offset = "0xA2DE2C", VA = "0xA2DE2C")]
		private void OnFrameStep()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xA2DB18", Offset = "0xA2DB18", VA = "0xA2DB18")]
		private void Animate()
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xA2DCBC", Offset = "0xA2DCBC", VA = "0xA2DCBC")]
		private void ApplyForce(float force)
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xA2DEB8", Offset = "0xA2DEB8", VA = "0xA2DEB8")]
		public void SetOffset(float offset)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xA2DEC0", Offset = "0xA2DEC0", VA = "0xA2DEC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xA2DFA4", Offset = "0xA2DFA4", VA = "0xA2DFA4")]
		public F3DBeam()
		{
		}
	}
	[Token(Token = "0x2000270")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x75B41C", Offset = "0x75B41C")]
	public class F3DCurvedBeam : MonoBehaviour
	{
		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform dest;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float beamScale;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float UVTime;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int curvePoints;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float curveHeight;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float initialBeamOffset;

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xA2E148", Offset = "0xA2E148", VA = "0xA2E148")]
		private void Start()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xA2E1D4", Offset = "0xA2E1D4", VA = "0xA2E1D4")]
		private void Update()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xA2E598", Offset = "0xA2E598", VA = "0xA2E598")]
		public F3DCurvedBeam()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public class F3DDespawn : MonoBehaviour
	{
		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float DespawnDelay;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool DespawnOnMouseUp;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource aSrc;

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xA2E5A0", Offset = "0xA2E5A0", VA = "0xA2E5A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xA2E600", Offset = "0xA2E600", VA = "0xA2E600")]
		public void OnSpawned()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xA2E6CC", Offset = "0xA2E6CC", VA = "0xA2E6CC")]
		public void OnDespawned()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xA2E6D0", Offset = "0xA2E6D0", VA = "0xA2E6D0")]
		public void DespawnOnTimer()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xA2E77C", Offset = "0xA2E77C", VA = "0xA2E77C")]
		public void Despawn()
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xA2E82C", Offset = "0xA2E82C", VA = "0xA2E82C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xA2E8E4", Offset = "0xA2E8E4", VA = "0xA2E8E4")]
		public F3DDespawn()
		{
		}
	}
	[Token(Token = "0x2000272")]
	public enum F3DFXType
	{
		[Token(Token = "0x40014FE")]
		Vulcan,
		[Token(Token = "0x40014FF")]
		SoloGun,
		[Token(Token = "0x4001500")]
		Sniper,
		[Token(Token = "0x4001501")]
		ShotGun,
		[Token(Token = "0x4001502")]
		Seeker,
		[Token(Token = "0x4001503")]
		RailGun,
		[Token(Token = "0x4001504")]
		PlasmaGun,
		[Token(Token = "0x4001505")]
		PlasmaBeam,
		[Token(Token = "0x4001506")]
		PlasmaBeamHeavy,
		[Token(Token = "0x4001507")]
		LightningGun,
		[Token(Token = "0x4001508")]
		FlameRed,
		[Token(Token = "0x4001509")]
		LaserImpulse
	}
	[Token(Token = "0x2000273")]
	public class F3DFXController : MonoBehaviour
	{
		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static F3DFXController instance;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string[] fxTypeName;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int curSocket;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int timerID;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7612C4", Offset = "0x7612C4")]
		public Transform[] TurretSocket;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem[] ShellParticles;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public F3DFXType DefaultFXType;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7612FC", Offset = "0x7612FC")]
		public Transform vulcanProjectile;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform vulcanMuzzle;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform vulcanImpact;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float vulcanOffset;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x761334", Offset = "0x761334")]
		public Transform soloGunProjectile;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform soloGunMuzzle;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform soloGunImpact;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float soloGunOffset;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76136C", Offset = "0x76136C")]
		public Transform sniperBeam;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform sniperMuzzle;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform sniperImpact;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float sniperOffset;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7613A4", Offset = "0x7613A4")]
		public Transform shotGunProjectile;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform shotGunMuzzle;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Transform shotGunImpact;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float shotGunOffset;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7613DC", Offset = "0x7613DC")]
		public Transform seekerProjectile;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Transform seekerMuzzle;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform seekerImpact;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float seekerOffset;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x761414", Offset = "0x761414")]
		public Transform railgunBeam;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Transform railgunMuzzle;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Transform railgunImpact;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float railgunOffset;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76144C", Offset = "0x76144C")]
		public Transform plasmagunProjectile;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Transform plasmagunMuzzle;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Transform plasmagunImpact;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float plasmaGunOffset;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x761484", Offset = "0x761484")]
		public Transform plasmaBeam;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float plasmaOffset;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7614BC", Offset = "0x7614BC")]
		public Transform plasmaBeamHeavy;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float plasmaBeamHeavyOffset;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7614F4", Offset = "0x7614F4")]
		public Transform lightningGunBeam;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public float lightingGunBeamOffset;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76152C", Offset = "0x76152C")]
		public Transform flameRed;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public float flameOffset;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x761564", Offset = "0x761564")]
		public Transform laserImpulseProjectile;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Transform laserImpulseMuzzle;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Transform laserImpulseImpact;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public float laserImpulseOffset;

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x997AD4", Offset = "0x997AD4", VA = "0x997AD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x997B2C", Offset = "0x997B2C", VA = "0x997B2C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x998380", Offset = "0x998380", VA = "0x998380")]
		private void Update()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x9982A4", Offset = "0x9982A4", VA = "0x9982A4")]
		private void NextWeapon()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x998290", Offset = "0x998290", VA = "0x998290")]
		private void PrevWeapon()
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x9983DC", Offset = "0x9983DC", VA = "0x9983DC")]
		private void AdvanceSocket()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x998410", Offset = "0x998410", VA = "0x998410")]
		public void Fire()
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x99AFF0", Offset = "0x99AFF0", VA = "0x99AFF0")]
		public void Stop()
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x998878", Offset = "0x998878", VA = "0x998878")]
		private void Vulcan()
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x99B7A4", Offset = "0x99B7A4", VA = "0x99B7A4")]
		public void VulcanImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x998D10", Offset = "0x998D10", VA = "0x998D10")]
		private void SoloGun()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x99B8EC", Offset = "0x99B8EC", VA = "0x99B8EC")]
		public void SoloGunImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x999168", Offset = "0x999168", VA = "0x999168")]
		private void Sniper()
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x99BA34", Offset = "0x99BA34", VA = "0x99BA34")]
		public void SniperImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x999550", Offset = "0x999550", VA = "0x999550")]
		private void ShotGun()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x9998D4", Offset = "0x9998D4", VA = "0x9998D4")]
		private void Seeker()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x99BB7C", Offset = "0x99BB7C", VA = "0x99BB7C")]
		public void SeekerImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x999C88", Offset = "0x999C88", VA = "0x999C88")]
		private void RailGun()
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x99BCC4", Offset = "0x99BCC4", VA = "0x99BCC4")]
		public void RailgunImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x99A070", Offset = "0x99A070", VA = "0x99A070")]
		private void PlasmaGun()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x99BE0C", Offset = "0x99BE0C", VA = "0x99BE0C")]
		public void PlasmaGunImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x99A424", Offset = "0x99A424", VA = "0x99A424")]
		private void PlasmaBeam()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x99A630", Offset = "0x99A630", VA = "0x99A630")]
		private void PlasmaBeamHeavy()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x99A83C", Offset = "0x99A83C", VA = "0x99A83C")]
		private void LightningGun()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x99AA3C", Offset = "0x99AA3C", VA = "0x99AA3C")]
		private void FlameRed()
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x99AC3C", Offset = "0x99AC3C", VA = "0x99AC3C")]
		private void LaserImpulse()
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x99BF54", Offset = "0x99BF54", VA = "0x99BF54")]
		public void LaserImpulseImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x99C09C", Offset = "0x99C09C", VA = "0x99C09C")]
		public F3DFXController()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class F3DFlameThrower : MonoBehaviour
	{
		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light pLight;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem heat;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int lightState;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool despawn;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem ps;

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x99C468", Offset = "0x99C468", VA = "0x99C468")]
		private void Start()
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x99C4C8", Offset = "0x99C4C8", VA = "0x99C4C8")]
		private void OnSpawned()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x99C4F8", Offset = "0x99C4F8", VA = "0x99C4F8")]
		private void OnDespawned()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x99C4FC", Offset = "0x99C4FC", VA = "0x99C4FC")]
		private void OnDespawn()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x99C804", Offset = "0x99C804", VA = "0x99C804")]
		private void Update()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x99CB2C", Offset = "0x99CB2C", VA = "0x99CB2C")]
		public F3DFlameThrower()
		{
		}
	}
	[Token(Token = "0x2000275")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x75B480", Offset = "0x75B480")]
	public class F3DLightning : MonoBehaviour
	{
		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layerMask;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture[] BeamFrames;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FrameStep;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool RandomizeFrames;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int Points;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxBeamLength;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float beamScale;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool AnimateUV;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float UVTime;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool Oscillate;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float Amplitude;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float OscillateTime;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rayImpact;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform rayMuzzle;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RaycastHit hitPoint;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int frameNo;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int FrameTimerID;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int OscillateTimerID;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float beamLength;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float initialBeamOffset;

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x99CB34", Offset = "0x99CB34", VA = "0x99CB34")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x99CC08", Offset = "0x99CC08", VA = "0x99CC08")]
		private void OnSpawned()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x99CDF0", Offset = "0x99CDF0", VA = "0x99CDF0")]
		private void OnDespawned()
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x99CE98", Offset = "0x99CE98", VA = "0x99CE98")]
		private void Raycast()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x99D570", Offset = "0x99D570", VA = "0x99D570")]
		private float GetRandomNoise()
		{
			return default(float);
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x99D580", Offset = "0x99D580", VA = "0x99D580")]
		private void OnFrameStep()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x99D630", Offset = "0x99D630", VA = "0x99D630")]
		private void OnOscillate()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x99CCEC", Offset = "0x99CCEC", VA = "0x99CCEC")]
		private void Animate()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x99D400", Offset = "0x99D400", VA = "0x99D400")]
		private void ApplyForce(float force)
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x99D86C", Offset = "0x99D86C", VA = "0x99D86C")]
		private void Update()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x99D928", Offset = "0x99D928", VA = "0x99D928")]
		public F3DLightning()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class F3DMissile : MonoBehaviour
	{
		[Token(Token = "0x2000423")]
		public enum MissileType
		{
			[Token(Token = "0x4001CA7")]
			Unguided,
			[Token(Token = "0x4001CA8")]
			Guided,
			[Token(Token = "0x4001CA9")]
			Predictive
		}

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MissileType missileType;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask layerMask;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float detonationDistance;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float lifeTime;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float despawnDelay;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float velocity;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float alignSpeed;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float RaycastAdvance;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool DelayDespawn;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ParticleSystem[] delayedParticles;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ParticleSystem[] particles;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private new Transform transform;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isHit;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool isFXSpawned;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float timer;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 targetLastPos;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 step;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x99DB58", Offset = "0x99DB58", VA = "0x99DB58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x99DC00", Offset = "0x99DC00", VA = "0x99DC00")]
		public void OnSpawned()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x99DC9C", Offset = "0x99DC9C", VA = "0x99DC9C")]
		public void OnDespawned()
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x99DCA0", Offset = "0x99DCA0", VA = "0x99DCA0")]
		private void Delay()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x99DE40", Offset = "0x99DE40", VA = "0x99DE40")]
		private void OnMissileDestroy()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x99DED8", Offset = "0x99DED8", VA = "0x99DED8")]
		private void OnHit()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x99DF30", Offset = "0x99DF30", VA = "0x99DF30")]
		private void Update()
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x99E808", Offset = "0x99E808", VA = "0x99E808")]
		public F3DMissile()
		{
		}
	}
	[Token(Token = "0x2000277")]
	[ExecuteInEditMode]
	public class F3DParticleScale : MonoBehaviour
	{
		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x76159C", Offset = "0x76159C")]
		public float ParticleScale;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool ScaleGameobject;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float prevScale;

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x99EE04", Offset = "0x99EE04", VA = "0x99EE04")]
		private void Start()
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x99EE10", Offset = "0x99EE10", VA = "0x99EE10")]
		private void ScaleShurikenSystems(float scaleFactor)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x99EE14", Offset = "0x99EE14", VA = "0x99EE14")]
		private void ScaleTrailRenderers(float scaleFactor)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x99EF00", Offset = "0x99EF00", VA = "0x99EF00")]
		private void Update()
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x99EF04", Offset = "0x99EF04", VA = "0x99EF04")]
		public F3DParticleScale()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class F3DPoolOld : MonoBehaviour
	{
		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static F3DPoolOld instance;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7615B4", Offset = "0x7615B4")]
		public Transform[] poolItems;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] poolLength;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7615EC", Offset = "0x7615EC")]
		public Transform audioSourcePrefab;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip[] audioPoolItems;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] audioPoolLength;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<Transform, Transform[]> pool;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<AudioClip, AudioSource[]> audioPool;

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x9A18A0", Offset = "0x9A18A0", VA = "0x9A18A0")]
		private void Start()
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x9A1E58", Offset = "0x9A1E58", VA = "0x9A1E58")]
		public Transform Spawn(Transform obj, Vector3 pos, Quaternion rot, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x9A2034", Offset = "0x9A2034", VA = "0x9A2034")]
		public AudioSource SpawnAudi2o(AudioClip clip, Vector3 pos, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x9A21EC", Offset = "0x9A21EC", VA = "0x9A21EC")]
		public void Despawn(Transform obj)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x9A2268", Offset = "0x9A2268", VA = "0x9A2268")]
		public F3DPoolOld()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class F3DPredictTrajectory : MonoBehaviour
	{
		[Token(Token = "0x6001471")]
		[Address(RVA = "0x99E670", Offset = "0x99E670", VA = "0x99E670")]
		public static Vector3 Predict(Vector3 sPos, Vector3 tPos, Vector3 tLastPos, float pSpeed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x9A2270", Offset = "0x9A2270", VA = "0x9A2270")]
		private static float GetProjFlightTime(Vector3 dist, Vector3 tVel, float pSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x9A23DC", Offset = "0x9A23DC", VA = "0x9A23DC")]
		public F3DPredictTrajectory()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class F3DProjectile : MonoBehaviour
	{
		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public F3DFXType fxType;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask layerMask;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float lifeTime;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float despawnDelay;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float velocity;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float RaycastAdvance;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool DelayDespawn;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem[] delayedParticles;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem[] particles;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private new Transform transform;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RaycastHit hitPoint;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool isHit;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool isFXSpawned;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float timer;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float fxOffset;

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x9A23E4", Offset = "0x9A23E4", VA = "0x9A23E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x9A2468", Offset = "0x9A2468", VA = "0x9A2468")]
		public void OnSpawned()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x9A2480", Offset = "0x9A2480", VA = "0x9A2480")]
		public void OnDespawned()
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x9A2484", Offset = "0x9A2484", VA = "0x9A2484")]
		private void Delay()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x9A2624", Offset = "0x9A2624", VA = "0x9A2624")]
		private void OnProjectileDestroy()
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x9A26BC", Offset = "0x9A26BC", VA = "0x9A26BC")]
		private void ApplyForce(float force)
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x9A2828", Offset = "0x9A2828", VA = "0x9A2828")]
		private void Update()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x9A2E4C", Offset = "0x9A2E4C", VA = "0x9A2E4C")]
		public void SetOffset(float offset)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x9A2E54", Offset = "0x9A2E54", VA = "0x9A2E54")]
		public F3DProjectile()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class F3DPulsewave : MonoBehaviour
	{
		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FadeOutDelay;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FadeOutTime;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ScaleTime;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 ScaleSize;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool DebugLoop;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private new Transform transform;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int timerID;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool isFadeOut;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool isEnabled;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color defaultColor;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color color;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int tintColorRef;

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x9A2E70", Offset = "0x9A2E70", VA = "0x9A2E70")]
		private void Awake()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x9A2F40", Offset = "0x9A2F40", VA = "0x9A2F40")]
		private void Start()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x9A2F50", Offset = "0x9A2F50", VA = "0x9A2F50")]
		private void OnSpawned()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x9A3084", Offset = "0x9A3084", VA = "0x9A3084")]
		private void OnDespawned()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x9A30F4", Offset = "0x9A30F4", VA = "0x9A30F4")]
		private void OnFadeOut()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x9A3100", Offset = "0x9A3100", VA = "0x9A3100")]
		private void Update()
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x9A32BC", Offset = "0x9A32BC", VA = "0x9A32BC")]
		public F3DPulsewave()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class F3DRandomize : MonoBehaviour
	{
		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private new Transform transform;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 defaultScale;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool RandomScale;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool RandomRotation;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float MinScale;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxScale;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinRotation;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float MaxRotaion;

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x9A32CC", Offset = "0x9A32CC", VA = "0x9A32CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x9A334C", Offset = "0x9A334C", VA = "0x9A334C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x9A34CC", Offset = "0x9A34CC", VA = "0x9A34CC")]
		public F3DRandomize()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class F3DRift : MonoBehaviour
	{
		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float RotationSpeed;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MorphSpeed;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MorphFactor;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 dScale;

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x9A34D4", Offset = "0x9A34D4", VA = "0x9A34D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x9A3510", Offset = "0x9A3510", VA = "0x9A3510")]
		private void Update()
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x9A36B8", Offset = "0x9A36B8", VA = "0x9A36B8")]
		public F3DRift()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class F3DShotgun : MonoBehaviour
	{
		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleCollisionEvent[] collisionEvents;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem ps;

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x9A36C0", Offset = "0x9A36C0", VA = "0x9A36C0")]
		private void Start()
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x9A3720", Offset = "0x9A3720", VA = "0x9A3720")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x9A39A0", Offset = "0x9A39A0", VA = "0x9A39A0")]
		public F3DShotgun()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class F3DTime : MonoBehaviour
	{
		[Token(Token = "0x2000424")]
		private class Timer
		{
			[Token(Token = "0x4001CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x4001CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool isActive;

			[Token(Token = "0x4001CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float rate;

			[Token(Token = "0x4001CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int ticks;

			[Token(Token = "0x4001CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int ticksElapsed;

			[Token(Token = "0x4001CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float last;

			[Token(Token = "0x4001CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callBack;

			[Token(Token = "0x6001B44")]
			[Address(RVA = "0x9A3ACC", Offset = "0x9A3ACC", VA = "0x9A3ACC")]
			public Timer(int id_, float rate_, int ticks_, Action callback_)
			{
			}

			[Token(Token = "0x6001B45")]
			[Address(RVA = "0x9A3D94", Offset = "0x9A3D94", VA = "0x9A3D94")]
			public void Tick()
			{
			}
		}

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static F3DTime time;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Timer> timers;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<int> removalPending;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int idCounter;

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x9A3A0C", Offset = "0x9A3A0C", VA = "0x9A3A0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x99886C", Offset = "0x99886C", VA = "0x99886C")]
		public int AddTimer(float rate, Action callBack)
		{
			return default(int);
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x99CA6C", Offset = "0x99CA6C", VA = "0x99CA6C")]
		public int AddTimer(float rate, int ticks, Action callBack)
		{
			return default(int);
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x99B198", Offset = "0x99B198", VA = "0x99B198")]
		public void RemoveTimer(int timerId)
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x9A3B4C", Offset = "0x9A3B4C", VA = "0x9A3B4C")]
		private void Remove()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x9A3D00", Offset = "0x9A3D00", VA = "0x9A3D00")]
		private void Tick()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x9A3E6C", Offset = "0x9A3E6C", VA = "0x9A3E6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x9A3E90", Offset = "0x9A3E90", VA = "0x9A3E90")]
		public F3DTime()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class F3DTurret2 : MonoBehaviour
	{
		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform hub;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform barrel;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RaycastHit hitInfo;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool isFiring;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float hubAngle;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float barrelAngle;

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x9A4138", Offset = "0x9A4138", VA = "0x9A4138")]
		private Vector3 ProjectVectorOnPlane(Vector3 planeNormal, Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x9A4214", Offset = "0x9A4214", VA = "0x9A4214")]
		private float SignedVectorAngle(Vector3 referenceVector, Vector3 otherVector, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x9A4358", Offset = "0x9A4358", VA = "0x9A4358")]
		private void Track()
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x9A49C4", Offset = "0x9A49C4", VA = "0x9A49C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x9A4A8C", Offset = "0x9A4A8C", VA = "0x9A4A8C")]
		public F3DTurret2()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class F3DWarpJump : MonoBehaviour
	{
		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem WarpSpark;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform ShipPos;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ShipJumpSpeed;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 ShipJumpStartPoint;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 ShipJumpEndPoint;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool SendOnSpawned;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool isWarping;

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x9A4A94", Offset = "0x9A4A94", VA = "0x9A4A94")]
		private void Start()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x9A4B00", Offset = "0x9A4B00", VA = "0x9A4B00")]
		public void OnSpawned()
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x9A4BF8", Offset = "0x9A4BF8", VA = "0x9A4BF8")]
		private void OnWarp()
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x9A4C04", Offset = "0x9A4C04", VA = "0x9A4C04")]
		private void ShiftShipPosition()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x9A4D40", Offset = "0x9A4D40", VA = "0x9A4D40")]
		private void Update()
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x9A4D50", Offset = "0x9A4D50", VA = "0x9A4D50")]
		public F3DWarpJump()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class F3DWarpJumpTunnel : MonoBehaviour
	{
		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private new Transform transform;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float StartDelay;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float FadeDelay;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 ScaleTo;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ScaleTime;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float ColorTime;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float ColorFadeTime;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float RotationSpeed;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool grow;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float alpha;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int alphaID;

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x9A4D58", Offset = "0x9A4D58", VA = "0x9A4D58")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x9A4DF8", Offset = "0x9A4DF8", VA = "0x9A4DF8")]
		public void OnSpawned()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x9A500C", Offset = "0x9A500C", VA = "0x9A500C")]
		private void ToggleGrow()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x9A501C", Offset = "0x9A501C", VA = "0x9A501C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x9A51E8", Offset = "0x9A51E8", VA = "0x9A51E8")]
		public F3DWarpJumpTunnel()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public class F3DWarpTunnel : MonoBehaviour
	{
		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MaxRotationSpeed;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float AdaptationFactor;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float speed;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float newSpeed;

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x9A51F0", Offset = "0x9A51F0", VA = "0x9A51F0")]
		private void Start()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x9A51F8", Offset = "0x9A51F8", VA = "0x9A51F8")]
		private void OnDirectionChange()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x9A52C4", Offset = "0x9A52C4", VA = "0x9A52C4")]
		private void Update()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x9A548C", Offset = "0x9A548C", VA = "0x9A548C")]
		public F3DWarpTunnel()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class F3DMath : MonoBehaviour
	{
		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x99D930", Offset = "0x99D930", VA = "0x99D930")]
		public static Vector3 ProjectVectorOnPlane(Vector3 planeNormal, Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x99DA0C", Offset = "0x99DA0C", VA = "0x99DA0C")]
		public static float SignedVectorAngle(Vector3 referenceVector, Vector3 otherVector, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x99DB50", Offset = "0x99DB50", VA = "0x99DB50")]
		public F3DMath()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class F3DBurnoutExample : MonoBehaviour
	{
		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshRenderer[] turretParts;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int BurnoutID;

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xA2DFAC", Offset = "0xA2DFAC", VA = "0xA2DFAC")]
		private void Start()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xA2E024", Offset = "0xA2E024", VA = "0xA2E024")]
		private void Update()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xA2E140", Offset = "0xA2E140", VA = "0xA2E140")]
		public F3DBurnoutExample()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class F3DDummyEvent : MonoBehaviour
	{
		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x997A74", Offset = "0x997A74", VA = "0x997A74")]
		private void Start()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x997ACC", Offset = "0x997ACC", VA = "0x997ACC")]
		public F3DDummyEvent()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class F3DMissileLauncher : MonoBehaviour
	{
		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static F3DMissileLauncher instance;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform missilePrefab;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform explosionPrefab;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private F3DMissile.MissileType missileType;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text missileTypeLabel;

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x99E82C", Offset = "0x99E82C", VA = "0x99E82C")]
		private void Start()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x99E554", Offset = "0x99E554", VA = "0x99E554")]
		public void SpawnExplosion(Vector3 position)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x99E8B0", Offset = "0x99E8B0", VA = "0x99E8B0")]
		private void ProcessInput()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x99EBAC", Offset = "0x99EBAC", VA = "0x99EBAC")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x99EBB0", Offset = "0x99EBB0", VA = "0x99EBB0")]
		public F3DMissileLauncher()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class F3DNebula : MonoBehaviour
	{
		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x99EBB8", Offset = "0x99EBB8", VA = "0x99EBB8")]
		private void Start()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x99EBBC", Offset = "0x99EBBC", VA = "0x99EBBC")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x99EDFC", Offset = "0x99EDFC", VA = "0x99EDFC")]
		public F3DNebula()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class F3DTrailExample : MonoBehaviour
	{
		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Mult;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float TimeMult;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 defaultPos;

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x9A3E98", Offset = "0x9A3E98", VA = "0x9A3E98")]
		private void Start()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x9A3ED4", Offset = "0x9A3ED4", VA = "0x9A3ED4")]
		private void Update()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x9A4018", Offset = "0x9A4018", VA = "0x9A4018")]
		public F3DTrailExample()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class F3DTurnTable : MonoBehaviour
	{
		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x9A4020", Offset = "0x9A4020", VA = "0x9A4020")]
		private void Start()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x9A4024", Offset = "0x9A4024", VA = "0x9A4024")]
		private void Update()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x9A4130", Offset = "0x9A4130", VA = "0x9A4130")]
		public F3DTurnTable()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class F3DPool : MonoBehaviour
	{
		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public string poolName;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Transform[] templates;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform[] templatesParent;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int[] poolLength;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public int[] poolLengthCurrent;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public int[] poolLengthMax;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public string broadcastSpawnName;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public string broadcastDespawnName;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool delayedSpawnInInstall;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public int objectsPerUpdate;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool needBroadcasting;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[HideInInspector]
		public bool optimizeSpawn;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public int targetFPS;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public bool pooling;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[HideInInspector]
		public bool needDebugging;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		[HideInInspector]
		public bool needSort;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		[HideInInspector]
		public bool needParenting;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float normalValue;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<Transform, List<Transform>> readyObjects;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<Transform, List<Transform>> occupiedObjects;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool installing;

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x99EF1C", Offset = "0x99EF1C", VA = "0x99EF1C")]
		public int GetTemplatesCount()
		{
			return default(int);
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x99EF34", Offset = "0x99EF34", VA = "0x99EF34")]
		private bool CheckForExistingTemplate(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x99C5A8", Offset = "0x99C5A8", VA = "0x99C5A8")]
		public bool Despawn(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x99F00C", Offset = "0x99F00C", VA = "0x99F00C")]
		public bool Despawn(Transform obj, Transform template)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x99F244", Offset = "0x99F244", VA = "0x99F244")]
		public int GetTemplatePosition(Transform obj)
		{
			return default(int);
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x99F31C", Offset = "0x99F31C", VA = "0x99F31C")]
		public Transform SpawnAudio(Transform obj, AudioClip clip, Vector3 pos, Transform par)
		{
			return null;
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x99F92C", Offset = "0x99F92C", VA = "0x99F92C")]
		public Transform Spawn(Transform obj, Transform par, [Optional] Vector3 pos, [Optional] Quaternion rot)
		{
			return null;
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x99B200", Offset = "0x99B200", VA = "0x99B200")]
		public Transform Spawn(Transform obj, Vector3 pos, Quaternion rot, Transform par)
		{
			return null;
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x99FED0", Offset = "0x99FED0", VA = "0x99FED0")]
		public Transform Spawn(Transform obj, [Optional] Vector3 pos, [Optional] Quaternion rot)
		{
			return null;
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x9A0410", Offset = "0x9A0410", VA = "0x9A0410")]
		public void SetTemplates(Transform[] newArray)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x9A0418", Offset = "0x9A0418", VA = "0x9A0418")]
		public void SetLength(int[] newPoolLenght)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x9A0420", Offset = "0x9A0420", VA = "0x9A0420")]
		public void SetLengthMax(int[] newPoolLengthMax)
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x9A0428", Offset = "0x9A0428", VA = "0x9A0428")]
		private void CalculateObjectsPerUpdate()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x9A04A4", Offset = "0x9A04A4", VA = "0x9A04A4")]
		private void DelayedSpawnInInstall()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x9A07A4", Offset = "0x9A07A4", VA = "0x9A07A4")]
		private void NonDelayedSpawnInInstall()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x9A089C", Offset = "0x9A089C", VA = "0x9A089C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x9A05C4", Offset = "0x9A05C4", VA = "0x9A05C4")]
		private Transform InstantiateItem(Transform temp, Transform par, int templatePosition)
		{
			return null;
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x9A08EC", Offset = "0x9A08EC", VA = "0x9A08EC")]
		public void Install()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x9A0BF0", Offset = "0x9A0BF0", VA = "0x9A0BF0")]
		public F3DPool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028C")]
	public class F3DPoolContainer
	{
		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string poolName;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] templates;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] poolLength;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] poolLengthMax;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string broadcastSpawnName;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string broadcastDespawnName;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool delayedSpawnInInstall;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int objectsPerUpdate;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool needBroadcasting;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool optimizeSpawn;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int targetFPS;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool pooling;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool needSort;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool needParenting;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool needDebug;

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x9A0DB0", Offset = "0x9A0DB0", VA = "0x9A0DB0")]
		public F3DPoolContainer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028D")]
	public class F3DPoolManager : MonoBehaviour
	{
		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static F3DPoolManager instance;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<string, F3DPool> Pools;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string databaseName;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int selectedItem;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool[] haveToShowArr;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<F3DPool> curPools;

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x9A0EC4", Offset = "0x9A0EC4", VA = "0x9A0EC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x9A15D8", Offset = "0x9A15D8", VA = "0x9A15D8")]
		public F3DPool GetPool(string valueName)
		{
			return null;
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x9A0F3C", Offset = "0x9A0F3C", VA = "0x9A0F3C")]
		private void InstallManager()
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x9A16E0", Offset = "0x9A16E0", VA = "0x9A16E0")]
		public int GetPoolsCount()
		{
			return default(int);
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x9A1734", Offset = "0x9A1734", VA = "0x9A1734")]
		public F3DPoolManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028E")]
	public class F3DPoolManagerDB : ScriptableObject
	{
		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> poolsName;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<F3DPoolContainer> pools;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string namer;

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x9A1840", Offset = "0x9A1840", VA = "0x9A1840")]
		public F3DPoolManagerDB()
		{
		}
	}
}
namespace UnityEngine.PostProcessing
{
	[Token(Token = "0x200028F")]
	public sealed class GetSetAttribute : PropertyAttribute
	{
		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string name;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool dirty;

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xAA5A7C", Offset = "0xAA5A7C", VA = "0xAA5A7C")]
		public GetSetAttribute(string name)
		{
		}
	}
	[Token(Token = "0x2000290")]
	public sealed class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xAA6638", Offset = "0xAA6638", VA = "0xAA6638")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x2000291")]
	public sealed class TrackballAttribute : PropertyAttribute
	{
		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string method;

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xEDAC24", Offset = "0xEDAC24", VA = "0xEDAC24")]
		public TrackballAttribute(string method)
		{
		}
	}
	[Token(Token = "0x2000292")]
	public sealed class TrackballGroupAttribute : PropertyAttribute
	{
		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xEDAC58", Offset = "0xEDAC58", VA = "0xEDAC58")]
		public TrackballGroupAttribute()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public sealed class AmbientOcclusionComponent : PostProcessingComponentCommandBuffer<AmbientOcclusionModel>
	{
		[Token(Token = "0x2000425")]
		private static class Uniforms
		{
			[Token(Token = "0x4001CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Intensity;

			[Token(Token = "0x4001CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Radius;

			[Token(Token = "0x4001CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _FogParams;

			[Token(Token = "0x4001CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Downsample;

			[Token(Token = "0x4001CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleCount;

			[Token(Token = "0x4001CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _OcclusionTexture1;

			[Token(Token = "0x4001CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _OcclusionTexture2;

			[Token(Token = "0x4001CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _OcclusionTexture;

			[Token(Token = "0x4001CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x2000426")]
		private enum OcclusionSource
		{
			[Token(Token = "0x4001CBC")]
			DepthTexture,
			[Token(Token = "0x4001CBD")]
			DepthNormalsTexture,
			[Token(Token = "0x4001CBE")]
			GBuffer
		}

		[Token(Token = "0x40015F9")]
		private const string k_BlitShaderString = "Hidden/Post FX/Blit";

		[Token(Token = "0x40015FA")]
		private const string k_ShaderString = "Hidden/Post FX/Ambient Occlusion";

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTargetIdentifier[] m_MRT;

		[Token(Token = "0x170000FF")]
		private OcclusionSource occlusionSource
		{
			[Token(Token = "0x60014DE")]
			[Address(RVA = "0xA9BF5C", Offset = "0xA9BF5C", VA = "0xA9BF5C")]
			get
			{
				return default(OcclusionSource);
			}
		}

		[Token(Token = "0x17000100")]
		private bool ambientOnlySupported
		{
			[Token(Token = "0x60014DF")]
			[Address(RVA = "0xA9C008", Offset = "0xA9C008", VA = "0xA9C008")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000101")]
		public override bool active
		{
			[Token(Token = "0x60014E0")]
			[Address(RVA = "0xA9C0A0", Offset = "0xA9C0A0", VA = "0xA9C0A0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xA9C11C", Offset = "0xA9C11C", VA = "0xA9C11C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xA9C158", Offset = "0xA9C158", VA = "0xA9C158", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xA9C1A0", Offset = "0xA9C1A0", VA = "0xA9C1A0", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xA9C20C", Offset = "0xA9C20C", VA = "0xA9C20C", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xA9D0D0", Offset = "0xA9D0D0", VA = "0xA9D0D0")]
		public AmbientOcclusionComponent()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public sealed class BloomComponent : PostProcessingComponentRenderTexture<BloomModel>
	{
		[Token(Token = "0x2000427")]
		private static class Uniforms
		{
			[Token(Token = "0x4001CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x4001CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Threshold;

			[Token(Token = "0x4001CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Curve;

			[Token(Token = "0x4001CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _PrefilterOffs;

			[Token(Token = "0x4001CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleScale;

			[Token(Token = "0x4001CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _BaseTex;

			[Token(Token = "0x4001CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _BloomTex;

			[Token(Token = "0x4001CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Bloom_Settings;

			[Token(Token = "0x4001CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _Bloom_DirtTex;

			[Token(Token = "0x4001CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Bloom_DirtIntensity;
		}

		[Token(Token = "0x40015FC")]
		private const int k_MaxPyramidBlurLevel = 16;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTexture[] m_BlurBuffer1;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly RenderTexture[] m_BlurBuffer2;

		[Token(Token = "0x17000102")]
		public override bool active
		{
			[Token(Token = "0x60014E6")]
			[Address(RVA = "0xA9D658", Offset = "0xA9D658", VA = "0xA9D658", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xA9D6D4", Offset = "0xA9D6D4", VA = "0xA9D6D4")]
		public void Prepare(RenderTexture source, Material uberMaterial, Texture autoExposure)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xA9E17C", Offset = "0xA9E17C", VA = "0xA9E17C")]
		public BloomComponent()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public sealed class BuiltinDebugViewsComponent : PostProcessingComponentCommandBuffer<BuiltinDebugViewsModel>
	{
		[Token(Token = "0x2000428")]
		private static class Uniforms
		{
			[Token(Token = "0x4001CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthScale;

			[Token(Token = "0x4001CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _TempRT;

			[Token(Token = "0x4001CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Opacity;

			[Token(Token = "0x4001CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT2;

			[Token(Token = "0x4001CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Amplitude;

			[Token(Token = "0x4001CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Scale;
		}

		[Token(Token = "0x2000429")]
		private enum Pass
		{
			[Token(Token = "0x4001CD1")]
			Depth,
			[Token(Token = "0x4001CD2")]
			Normals,
			[Token(Token = "0x4001CD3")]
			MovecOpacity,
			[Token(Token = "0x4001CD4")]
			MovecImaging,
			[Token(Token = "0x4001CD5")]
			MovecArrows
		}

		[Token(Token = "0x200042A")]
		private class ArrowArray
		{
			[Token(Token = "0x4001CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762450", Offset = "0x762450")]
			private Mesh <mesh>k__BackingField;

			[Token(Token = "0x4001CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762460", Offset = "0x762460")]
			private int <columnCount>k__BackingField;

			[Token(Token = "0x4001CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762470", Offset = "0x762470")]
			private int <rowCount>k__BackingField;

			[Token(Token = "0x17000227")]
			public Mesh mesh
			{
				[Token(Token = "0x6001B49")]
				[Address(RVA = "0xA9F5F8", Offset = "0xA9F5F8", VA = "0xA9F5F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768698", Offset = "0x768698")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001B4A")]
				[Address(RVA = "0xA9F600", Offset = "0xA9F600", VA = "0xA9F600")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7686A8", Offset = "0x7686A8")]
				private set
				{
				}
			}

			[Token(Token = "0x17000228")]
			public int columnCount
			{
				[Token(Token = "0x6001B4B")]
				[Address(RVA = "0xA9F608", Offset = "0xA9F608", VA = "0xA9F608")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7686B8", Offset = "0x7686B8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001B4C")]
				[Address(RVA = "0xA9F610", Offset = "0xA9F610", VA = "0xA9F610")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7686C8", Offset = "0x7686C8")]
				private set
				{
				}
			}

			[Token(Token = "0x17000229")]
			public int rowCount
			{
				[Token(Token = "0x6001B4D")]
				[Address(RVA = "0xA9F618", Offset = "0xA9F618", VA = "0xA9F618")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7686D8", Offset = "0x7686D8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001B4E")]
				[Address(RVA = "0xA9F620", Offset = "0xA9F620", VA = "0xA9F620")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7686E8", Offset = "0x7686E8")]
				private set
				{
				}
			}

			[Token(Token = "0x6001B4F")]
			[Address(RVA = "0xA9F104", Offset = "0xA9F104", VA = "0xA9F104")]
			public void BuildMesh(int columns, int rows)
			{
			}

			[Token(Token = "0x6001B50")]
			[Address(RVA = "0xA9F0D4", Offset = "0xA9F0D4", VA = "0xA9F0D4")]
			public void Release()
			{
			}

			[Token(Token = "0x6001B51")]
			[Address(RVA = "0xA9F0CC", Offset = "0xA9F0CC", VA = "0xA9F0CC")]
			public ArrowArray()
			{
			}
		}

		[Token(Token = "0x40015FF")]
		private const string k_ShaderString = "Hidden/Post FX/Builtin Debug Views";

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ArrowArray m_Arrows;

		[Token(Token = "0x17000103")]
		public override bool active
		{
			[Token(Token = "0x60014E9")]
			[Address(RVA = "0xA9E5C0", Offset = "0xA9E5C0", VA = "0xA9E5C0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xA9E62C", Offset = "0xA9E62C", VA = "0xA9E62C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xA9E69C", Offset = "0xA9E69C", VA = "0xA9E69C", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xA9E6FC", Offset = "0xA9E6FC", VA = "0xA9E6FC", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xA9E744", Offset = "0xA9E744", VA = "0xA9E744", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xA9E850", Offset = "0xA9E850", VA = "0xA9E850")]
		private void DepthPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xA9E964", Offset = "0xA9E964", VA = "0xA9E964")]
		private void DepthNormalsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xA9EA24", Offset = "0xA9EA24", VA = "0xA9EA24")]
		private void MotionVectorsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xA9EFBC", Offset = "0xA9EFBC", VA = "0xA9EFBC")]
		private void PrepareArrows()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xA9F560", Offset = "0xA9F560", VA = "0xA9F560", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xA9F5A8", Offset = "0xA9F5A8", VA = "0xA9F5A8")]
		public BuiltinDebugViewsComponent()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public sealed class ChromaticAberrationComponent : PostProcessingComponentRenderTexture<ChromaticAberrationModel>
	{
		[Token(Token = "0x200042B")]
		private static class Uniforms
		{
			[Token(Token = "0x4001CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _ChromaticAberration_Amount;

			[Token(Token = "0x4001CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ChromaticAberration_Spectrum;
		}

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_SpectrumLut;

		[Token(Token = "0x17000104")]
		public override bool active
		{
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0xA9F8D0", Offset = "0xA9F8D0", VA = "0xA9F8D0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xA9F94C", Offset = "0xA9F94C", VA = "0xA9F94C", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xA9F97C", Offset = "0xA9F97C", VA = "0xA9F97C", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xA9FC40", Offset = "0xA9FC40", VA = "0xA9FC40")]
		public ChromaticAberrationComponent()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public sealed class ColorGradingComponent : PostProcessingComponentRenderTexture<ColorGradingModel>
	{
		[Token(Token = "0x200042C")]
		private static class Uniforms
		{
			[Token(Token = "0x4001CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _LutParams;

			[Token(Token = "0x4001CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _NeutralTonemapperParams1;

			[Token(Token = "0x4001CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _NeutralTonemapperParams2;

			[Token(Token = "0x4001CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _HueShift;

			[Token(Token = "0x4001CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Saturation;

			[Token(Token = "0x4001CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Contrast;

			[Token(Token = "0x4001CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Balance;

			[Token(Token = "0x4001CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Lift;

			[Token(Token = "0x4001CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _InvGamma;

			[Token(Token = "0x4001CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Gain;

			[Token(Token = "0x4001CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _Slope;

			[Token(Token = "0x4001CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _Power;

			[Token(Token = "0x4001CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _Offset;

			[Token(Token = "0x4001CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _ChannelMixerRed;

			[Token(Token = "0x4001CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _ChannelMixerGreen;

			[Token(Token = "0x4001CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _ChannelMixerBlue;

			[Token(Token = "0x4001CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _Curves;

			[Token(Token = "0x4001CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _LogLut;

			[Token(Token = "0x4001CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _LogLut_Params;

			[Token(Token = "0x4001CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ExposureEV;
		}

		[Token(Token = "0x4001602")]
		private const int k_InternalLogLutSize = 32;

		[Token(Token = "0x4001603")]
		private const int k_CurvePrecision = 128;

		[Token(Token = "0x4001604")]
		private const float k_CurveStep = 1f / 128f;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_GradingCurves;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] m_pixels;

		[Token(Token = "0x17000105")]
		public override bool active
		{
			[Token(Token = "0x60014F8")]
			[Address(RVA = "0xA9FE24", Offset = "0xA9FE24", VA = "0xA9FE24", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xA9FE94", Offset = "0xA9FE94", VA = "0xA9FE94")]
		private float StandardIlluminantY(float x)
		{
			return default(float);
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xA9FEC0", Offset = "0xA9FEC0", VA = "0xA9FEC0")]
		private Vector3 CIExyToLMS(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xA9FF80", Offset = "0xA9FF80", VA = "0xA9FF80")]
		private Vector3 CalculateColorBalance(float temperature, float tint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xAA0074", Offset = "0xAA0074", VA = "0xAA0074")]
		private static Color NormalizeColor(Color c)
		{
			return default(Color);
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xAA0168", Offset = "0xAA0168", VA = "0xAA0168")]
		private static Vector3 ClampVector(Vector3 v, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xAA0264", Offset = "0xAA0264", VA = "0xAA0264")]
		public static Vector3 GetLiftValue(Color lift)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xAA02F0", Offset = "0xAA02F0", VA = "0xAA02F0")]
		public static Vector3 GetGammaValue(Color gamma)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xAA0470", Offset = "0xAA0470", VA = "0xAA0470")]
		public static Vector3 GetGainValue(Color gain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xAA05A0", Offset = "0xAA05A0", VA = "0xAA05A0")]
		public static void CalculateLiftGammaGain(Color lift, Color gamma, Color gain, out Vector3 outLift, out Vector3 outGamma, out Vector3 outGain)
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xAA0648", Offset = "0xAA0648", VA = "0xAA0648")]
		public static Vector3 GetSlopeValue(Color slope)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xAA06EC", Offset = "0xAA06EC", VA = "0xAA06EC")]
		public static Vector3 GetPowerValue(Color power)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xAA0854", Offset = "0xAA0854", VA = "0xAA0854")]
		public static Vector3 GetOffsetValue(Color offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xAA08F0", Offset = "0xAA08F0", VA = "0xAA08F0")]
		public static void CalculateSlopePowerOffset(Color slope, Color power, Color offset, out Vector3 outSlope, out Vector3 outPower, out Vector3 outOffset)
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xAA0998", Offset = "0xAA0998", VA = "0xAA0998")]
		private TextureFormat GetCurveFormat()
		{
			return default(TextureFormat);
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xAA09CC", Offset = "0xAA09CC", VA = "0xAA09CC")]
		private Texture2D GetCurveTexture()
		{
			return null;
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xAA0F98", Offset = "0xAA0F98", VA = "0xAA0F98")]
		private bool IsLogLutValid(RenderTexture lut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xAA1044", Offset = "0xAA1044", VA = "0xAA1044")]
		private RenderTextureFormat GetLutFormat()
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xAA1074", Offset = "0xAA1074", VA = "0xAA1074")]
		private void GenerateLut()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xAA18FC", Offset = "0xAA18FC", VA = "0xAA18FC", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xAA1B3C", Offset = "0xAA1B3C", VA = "0xAA1B3C")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xAA1C60", Offset = "0xAA1C60", VA = "0xAA1C60", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xAA1CE4", Offset = "0xAA1CE4", VA = "0xAA1CE4")]
		public ColorGradingComponent()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public sealed class DepthOfFieldComponent : PostProcessingComponentRenderTexture<DepthOfFieldModel>
	{
		[Token(Token = "0x200042D")]
		private static class Uniforms
		{
			[Token(Token = "0x4001CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthOfFieldTex;

			[Token(Token = "0x4001CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DepthOfFieldCoCTex;

			[Token(Token = "0x4001CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Distance;

			[Token(Token = "0x4001CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _LensCoeff;

			[Token(Token = "0x4001CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MaxCoC;

			[Token(Token = "0x4001CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _RcpMaxCoC;

			[Token(Token = "0x4001CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _RcpAspect;

			[Token(Token = "0x4001CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _CoCTex;

			[Token(Token = "0x4001CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TaaParams;

			[Token(Token = "0x4001CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _DepthOfFieldParams;
		}

		[Token(Token = "0x4001607")]
		private const string k_ShaderString = "Hidden/Post FX/Depth Of Field";

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_CoCHistory;

		[Token(Token = "0x4001609")]
		private const float k_FilmHeight = 0.024f;

		[Token(Token = "0x17000106")]
		public override bool active
		{
			[Token(Token = "0x600150F")]
			[Address(RVA = "0xAA2C6C", Offset = "0xAA2C6C", VA = "0xAA2C6C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xAA2CDC", Offset = "0xAA2CDC", VA = "0xAA2CDC", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xAA2CE4", Offset = "0xAA2CE4", VA = "0xAA2CE4")]
		private float CalculateFocalLength()
		{
			return default(float);
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xAA2DB0", Offset = "0xAA2DB0", VA = "0xAA2DB0")]
		private float CalculateMaxCoCRadius(int screenHeight)
		{
			return default(float);
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xAA2E5C", Offset = "0xAA2E5C", VA = "0xAA2E5C")]
		private bool CheckHistory(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xAA2F3C", Offset = "0xAA2F3C", VA = "0xAA2F3C")]
		private RenderTextureFormat SelectFormat(RenderTextureFormat primary, RenderTextureFormat secondary)
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xAA2F8C", Offset = "0xAA2F8C", VA = "0xAA2F8C")]
		public void Prepare(RenderTexture source, Material uberMaterial, bool antialiasCoC, Vector2 taaJitter, float taaBlending)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xAA3780", Offset = "0xAA3780", VA = "0xAA3780", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xAA3810", Offset = "0xAA3810", VA = "0xAA3810")]
		public DepthOfFieldComponent()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public sealed class DitheringComponent : PostProcessingComponentRenderTexture<DitheringModel>
	{
		[Token(Token = "0x200042E")]
		private static class Uniforms
		{
			[Token(Token = "0x4001CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DitheringTex;

			[Token(Token = "0x4001CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DitheringCoords;
		}

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D[] noiseTextures;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int textureIndex;

		[Token(Token = "0x400160C")]
		private const int k_TextureCount = 64;

		[Token(Token = "0x17000107")]
		public override bool active
		{
			[Token(Token = "0x6001518")]
			[Address(RVA = "0xAA3AB4", Offset = "0xAA3AB4", VA = "0xAA3AB4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xAA3B24", Offset = "0xAA3B24", VA = "0xAA3B24", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xAA3B30", Offset = "0xAA3B30", VA = "0xAA3B30")]
		private void LoadNoiseTextures()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xAA3C70", Offset = "0xAA3C70", VA = "0xAA3C70", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xAA3E40", Offset = "0xAA3E40", VA = "0xAA3E40")]
		public DitheringComponent()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public sealed class EyeAdaptationComponent : PostProcessingComponentRenderTexture<EyeAdaptationModel>
	{
		[Token(Token = "0x200042F")]
		private static class Uniforms
		{
			[Token(Token = "0x4001CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Params;

			[Token(Token = "0x4001CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Speed;

			[Token(Token = "0x4001CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _ScaleOffsetRes;

			[Token(Token = "0x4001CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _ExposureCompensation;

			[Token(Token = "0x4001D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x4001D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _DebugWidth;
		}

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ComputeShader m_EyeCompute;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ComputeBuffer m_HistogramBuffer;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly RenderTexture[] m_AutoExposurePool;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_AutoExposurePingPing;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_CurrentAutoExposure;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_DebugHistogram;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] s_EmptyHistogramBuffer;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_FirstFrame;

		[Token(Token = "0x4001615")]
		private const int k_HistogramBins = 64;

		[Token(Token = "0x4001616")]
		private const int k_HistogramThreadX = 16;

		[Token(Token = "0x4001617")]
		private const int k_HistogramThreadY = 16;

		[Token(Token = "0x17000108")]
		public override bool active
		{
			[Token(Token = "0x600151D")]
			[Address(RVA = "0xAA3F40", Offset = "0xAA3F40", VA = "0xAA3F40", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xAA3FBC", Offset = "0xAA3FBC", VA = "0xAA3FBC")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xAA3FC8", Offset = "0xAA3FC8", VA = "0xAA3FC8", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xAA3FD4", Offset = "0xAA3FD4", VA = "0xAA3FD4", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xAA40E4", Offset = "0xAA40E4", VA = "0xAA40E4")]
		private Vector4 GetHistogramScaleOffsetRes()
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xAA41F8", Offset = "0xAA41F8", VA = "0xAA41F8")]
		public Texture Prepare(RenderTexture source, Material uberMaterial)
		{
			return null;
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xAA4C08", Offset = "0xAA4C08", VA = "0xAA4C08")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xAA4D7C", Offset = "0xAA4D7C", VA = "0xAA4D7C")]
		public EyeAdaptationComponent()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public sealed class FogComponent : PostProcessingComponentCommandBuffer<FogModel>
	{
		[Token(Token = "0x2000430")]
		private static class Uniforms
		{
			[Token(Token = "0x4001D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _FogColor;

			[Token(Token = "0x4001D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Density;

			[Token(Token = "0x4001D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Start;

			[Token(Token = "0x4001D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _End;

			[Token(Token = "0x4001D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x4001618")]
		private const string k_ShaderString = "Hidden/Post FX/Fog";

		[Token(Token = "0x17000109")]
		public override bool active
		{
			[Token(Token = "0x6001525")]
			[Address(RVA = "0xAA4FFC", Offset = "0xAA4FFC", VA = "0xAA4FFC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xAA508C", Offset = "0xAA508C", VA = "0xAA508C", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xAA50D4", Offset = "0xAA50D4", VA = "0xAA50D4", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xAA50DC", Offset = "0xAA50DC", VA = "0xAA50DC", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xAA50E4", Offset = "0xAA50E4", VA = "0xAA50E4", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xAA5564", Offset = "0xAA5564", VA = "0xAA5564")]
		public FogComponent()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public sealed class FxaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x2000431")]
		private static class Uniforms
		{
			[Token(Token = "0x4001D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _QualitySettings;

			[Token(Token = "0x4001D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ConsoleSettings;
		}

		[Token(Token = "0x1700010A")]
		public override bool active
		{
			[Token(Token = "0x600152B")]
			[Address(RVA = "0xAA56CC", Offset = "0xAA56CC", VA = "0xAA56CC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xAA5744", Offset = "0xAA5744", VA = "0xAA5744")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xAA59A8", Offset = "0xAA59A8", VA = "0xAA59A8")]
		public FxaaComponent()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public sealed class GrainComponent : PostProcessingComponentRenderTexture<GrainModel>
	{
		[Token(Token = "0x2000432")]
		private static class Uniforms
		{
			[Token(Token = "0x4001D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Grain_Params1;

			[Token(Token = "0x4001D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Grain_Params2;

			[Token(Token = "0x4001D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _GrainTex;

			[Token(Token = "0x4001D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Phase;
		}

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_GrainLookupRT;

		[Token(Token = "0x1700010B")]
		public override bool active
		{
			[Token(Token = "0x600152E")]
			[Address(RVA = "0xAA5AB0", Offset = "0xAA5AB0", VA = "0xAA5AB0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xAA5B3C", Offset = "0xAA5B3C", VA = "0xAA5B3C", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xAA5B6C", Offset = "0xAA5B6C", VA = "0xAA5B6C", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xAA5F3C", Offset = "0xAA5F3C", VA = "0xAA5F3C")]
		public GrainComponent()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public sealed class MotionBlurComponent : PostProcessingComponentCommandBuffer<MotionBlurModel>
	{
		[Token(Token = "0x2000433")]
		private static class Uniforms
		{
			[Token(Token = "0x4001D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _VelocityScale;

			[Token(Token = "0x4001D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _MaxBlurRadius;

			[Token(Token = "0x4001D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _RcpMaxBlurRadius;

			[Token(Token = "0x4001D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _VelocityTex;

			[Token(Token = "0x4001D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Tile2RT;

			[Token(Token = "0x4001D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Tile4RT;

			[Token(Token = "0x4001D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Tile8RT;

			[Token(Token = "0x4001D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _TileMaxOffs;

			[Token(Token = "0x4001D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TileMaxLoop;

			[Token(Token = "0x4001D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _TileVRT;

			[Token(Token = "0x4001D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _NeighborMaxTex;

			[Token(Token = "0x4001D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _LoopCount;

			[Token(Token = "0x4001D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _TempRT;

			[Token(Token = "0x4001D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _History1LumaTex;

			[Token(Token = "0x4001D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _History2LumaTex;

			[Token(Token = "0x4001D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _History3LumaTex;

			[Token(Token = "0x4001D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _History4LumaTex;

			[Token(Token = "0x4001D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _History1ChromaTex;

			[Token(Token = "0x4001D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _History2ChromaTex;

			[Token(Token = "0x4001D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _History3ChromaTex;

			[Token(Token = "0x4001D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _History4ChromaTex;

			[Token(Token = "0x4001D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _History1Weight;

			[Token(Token = "0x4001D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _History2Weight;

			[Token(Token = "0x4001D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _History3Weight;

			[Token(Token = "0x4001D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _History4Weight;
		}

		[Token(Token = "0x2000434")]
		private enum Pass
		{
			[Token(Token = "0x4001D28")]
			VelocitySetup,
			[Token(Token = "0x4001D29")]
			TileMax1,
			[Token(Token = "0x4001D2A")]
			TileMax2,
			[Token(Token = "0x4001D2B")]
			TileMaxV,
			[Token(Token = "0x4001D2C")]
			NeighborMax,
			[Token(Token = "0x4001D2D")]
			Reconstruction,
			[Token(Token = "0x4001D2E")]
			FrameCompression,
			[Token(Token = "0x4001D2F")]
			FrameBlendingChroma,
			[Token(Token = "0x4001D30")]
			FrameBlendingRaw
		}

		[Token(Token = "0x2000435")]
		public class ReconstructionFilter
		{
			[Token(Token = "0x4001D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private RenderTextureFormat m_VectorRTFormat;

			[Token(Token = "0x4001D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_PackedRTFormat;

			[Token(Token = "0x6001B5B")]
			[Address(RVA = "0xAA66E0", Offset = "0xAA66E0", VA = "0xAA66E0")]
			public ReconstructionFilter()
			{
			}

			[Token(Token = "0x6001B5C")]
			[Address(RVA = "0xAA879C", Offset = "0xAA879C", VA = "0xAA879C")]
			private void CheckTextureFormatSupport()
			{
			}

			[Token(Token = "0x6001B5D")]
			[Address(RVA = "0xAA68DC", Offset = "0xAA68DC", VA = "0xAA68DC")]
			public bool IsSupported()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0xAA6FD4", Offset = "0xAA6FD4", VA = "0xAA6FD4")]
			public void ProcessImage(PostProcessingContext context, CommandBuffer cb, ref MotionBlurModel.Settings settings, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}
		}

		[Token(Token = "0x2000436")]
		public class FrameBlendingFilter
		{
			[Token(Token = "0x200049C")]
			private struct Frame
			{
				[Token(Token = "0x4001EBB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public RenderTexture lumaTexture;

				[Token(Token = "0x4001EBC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public RenderTexture chromaTexture;

				[Token(Token = "0x4001EBD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private float m_Time;

				[Token(Token = "0x4001EBE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private RenderTargetIdentifier[] m_MRT;

				[Token(Token = "0x6001BFE")]
				[Address(RVA = "0xAA86B8", Offset = "0xAA86B8", VA = "0xAA86B8")]
				public float CalculateWeight(float strength, float currentTime)
				{
					return default(float);
				}

				[Token(Token = "0x6001BFF")]
				[Address(RVA = "0xAA80F8", Offset = "0xAA80F8", VA = "0xAA80F8")]
				public void Release()
				{
				}

				[Token(Token = "0x6001C00")]
				[Address(RVA = "0xAA81E0", Offset = "0xAA81E0", VA = "0xAA81E0")]
				public void MakeRecord(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
				{
				}

				[Token(Token = "0x6001C01")]
				[Address(RVA = "0xAA84C0", Offset = "0xAA84C0", VA = "0xAA84C0")]
				public void MakeRecordRaw(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, RenderTextureFormat format)
				{
				}
			}

			[Token(Token = "0x4001D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool m_UseCompression;

			[Token(Token = "0x4001D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_RawTextureFormat;

			[Token(Token = "0x4001D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Frame[] m_FrameList;

			[Token(Token = "0x4001D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_LastFrameCount;

			[Token(Token = "0x6001B5F")]
			[Address(RVA = "0xAA6798", Offset = "0xAA6798", VA = "0xAA6798")]
			public FrameBlendingFilter()
			{
			}

			[Token(Token = "0x6001B60")]
			[Address(RVA = "0xAA6960", Offset = "0xAA6960", VA = "0xAA6960")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001B61")]
			[Address(RVA = "0xAA7E54", Offset = "0xAA7E54", VA = "0xAA7E54")]
			public void PushFrame(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
			{
			}

			[Token(Token = "0x6001B62")]
			[Address(RVA = "0xAA78F4", Offset = "0xAA78F4", VA = "0xAA78F4")]
			public void BlendFrames(CommandBuffer cb, float strength, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}

			[Token(Token = "0x6001B63")]
			[Address(RVA = "0xAA7FF0", Offset = "0xAA7FF0", VA = "0xAA7FF0")]
			private static bool CheckSupportCompression()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B64")]
			[Address(RVA = "0xAA8028", Offset = "0xAA8028", VA = "0xAA8028")]
			private static RenderTextureFormat GetPreferredRenderTextureFormat()
			{
				return default(RenderTextureFormat);
			}

			[Token(Token = "0x6001B65")]
			[Address(RVA = "0xAA8640", Offset = "0xAA8640", VA = "0xAA8640")]
			private Frame GetFrameRelative(int offset)
			{
				return default(Frame);
			}
		}

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReconstructionFilter m_ReconstructionFilter;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FrameBlendingFilter m_FrameBlendingFilter;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_FirstFrame;

		[Token(Token = "0x1700010C")]
		public ReconstructionFilter reconstructionFilter
		{
			[Token(Token = "0x6001532")]
			[Address(RVA = "0xAA666C", Offset = "0xAA666C", VA = "0xAA666C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010D")]
		public FrameBlendingFilter frameBlendingFilter
		{
			[Token(Token = "0x6001533")]
			[Address(RVA = "0xAA6724", Offset = "0xAA6724", VA = "0xAA6724")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		public override bool active
		{
			[Token(Token = "0x6001534")]
			[Address(RVA = "0xAA6818", Offset = "0xAA6818", VA = "0xAA6818", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0xAA68E4", Offset = "0xAA68E4", VA = "0xAA68E4", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0xAA692C", Offset = "0xAA692C", VA = "0xAA692C")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xAA69E8", Offset = "0xAA69E8", VA = "0xAA69E8", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xAA69F0", Offset = "0xAA69F0", VA = "0xAA69F0", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xAA69F8", Offset = "0xAA69F8", VA = "0xAA69F8", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xAA6A04", Offset = "0xAA6A04", VA = "0xAA6A04", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xAA7F88", Offset = "0xAA7F88", VA = "0xAA7F88", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xAA7F98", Offset = "0xAA7F98", VA = "0xAA7F98")]
		public MotionBlurComponent()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public sealed class ScreenSpaceReflectionComponent : PostProcessingComponentCommandBuffer<ScreenSpaceReflectionModel>
	{
		[Token(Token = "0x2000437")]
		private static class Uniforms
		{
			[Token(Token = "0x4001D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _RayStepSize;

			[Token(Token = "0x4001D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _AdditiveReflection;

			[Token(Token = "0x4001D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _BilateralUpsampling;

			[Token(Token = "0x4001D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _TreatBackfaceHitAsMiss;

			[Token(Token = "0x4001D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AllowBackwardsRays;

			[Token(Token = "0x4001D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _TraceBehindObjects;

			[Token(Token = "0x4001D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _MaxSteps;

			[Token(Token = "0x4001D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _FullResolutionFiltering;

			[Token(Token = "0x4001D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _HalfResolution;

			[Token(Token = "0x4001D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _HighlightSuppression;

			[Token(Token = "0x4001D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _PixelsPerMeterAtOneMeter;

			[Token(Token = "0x4001D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _ScreenEdgeFading;

			[Token(Token = "0x4001D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _ReflectionBlur;

			[Token(Token = "0x4001D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _MaxRayTraceDistance;

			[Token(Token = "0x4001D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _FadeDistance;

			[Token(Token = "0x4001D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _LayerThickness;

			[Token(Token = "0x4001D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _SSRMultiplier;

			[Token(Token = "0x4001D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _FresnelFade;

			[Token(Token = "0x4001D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _FresnelFadePower;

			[Token(Token = "0x4001D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ReflectionBufferSize;

			[Token(Token = "0x4001D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _ScreenSize;

			[Token(Token = "0x4001D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _InvScreenSize;

			[Token(Token = "0x4001D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _ProjInfo;

			[Token(Token = "0x4001D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _CameraClipInfo;

			[Token(Token = "0x4001D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _ProjectToPixelMatrix;

			[Token(Token = "0x4001D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _WorldToCameraMatrix;

			[Token(Token = "0x4001D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly int _CameraToWorldMatrix;

			[Token(Token = "0x4001D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			internal static readonly int _Axis;

			[Token(Token = "0x4001D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly int _CurrentMipLevel;

			[Token(Token = "0x4001D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			internal static readonly int _NormalAndRoughnessTexture;

			[Token(Token = "0x4001D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal static readonly int _HitPointTexture;

			[Token(Token = "0x4001D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			internal static readonly int _BlurTexture;

			[Token(Token = "0x4001D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal static readonly int _FilteredReflections;

			[Token(Token = "0x4001D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			internal static readonly int _FinalReflectionTexture;

			[Token(Token = "0x4001D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal static readonly int _TempTexture;
		}

		[Token(Token = "0x2000438")]
		private enum PassIndex
		{
			[Token(Token = "0x4001D5B")]
			RayTraceStep,
			[Token(Token = "0x4001D5C")]
			CompositeFinal,
			[Token(Token = "0x4001D5D")]
			Blur,
			[Token(Token = "0x4001D5E")]
			CompositeSSR,
			[Token(Token = "0x4001D5F")]
			MinMipGeneration,
			[Token(Token = "0x4001D60")]
			HitPointToReflections,
			[Token(Token = "0x4001D61")]
			BilateralKeyPack,
			[Token(Token = "0x4001D62")]
			BlitDepthAsCSZ,
			[Token(Token = "0x4001D63")]
			PoissonBlur
		}

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool k_HighlightSuppression;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool k_TraceBehindObjects;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool k_TreatBackfaceHitAsMiss;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private bool k_BilateralUpsample;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int[] m_ReflectionTextures;

		[Token(Token = "0x1700010F")]
		public override bool active
		{
			[Token(Token = "0x600153E")]
			[Address(RVA = "0xED7FC8", Offset = "0xED7FC8", VA = "0xED7FC8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xED7FC0", Offset = "0xED7FC0", VA = "0xED7FC0", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xED8048", Offset = "0xED8048", VA = "0xED8048", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xED8170", Offset = "0xED8170", VA = "0xED8170", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xED81B8", Offset = "0xED81B8", VA = "0xED81B8", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xED81C0", Offset = "0xED81C0", VA = "0xED81C0", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xED9488", Offset = "0xED9488", VA = "0xED9488")]
		public ScreenSpaceReflectionComponent()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public sealed class TaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x2000439")]
		private static class Uniforms
		{
			[Token(Token = "0x4001D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static int _Jitter;

			[Token(Token = "0x4001D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static int _SharpenParameters;

			[Token(Token = "0x4001D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static int _FinalBlendParameters;

			[Token(Token = "0x4001D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static int _HistoryTex;

			[Token(Token = "0x4001D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static int _MainTex;
		}

		[Token(Token = "0x4001622")]
		private const string k_ShaderString = "Hidden/Post FX/Temporal Anti-aliasing";

		[Token(Token = "0x4001623")]
		private const int k_SampleCount = 8;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderBuffer[] m_MRT;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_SampleIndex;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_ResetHistory;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture m_HistoryTexture;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761734", Offset = "0x761734")]
		private Vector2 <jitterVector>k__BackingField;

		[Token(Token = "0x17000110")]
		public override bool active
		{
			[Token(Token = "0x6001544")]
			[Address(RVA = "0xED9A90", Offset = "0xED9A90", VA = "0xED9A90", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000111")]
		public Vector2 jitterVector
		{
			[Token(Token = "0x6001546")]
			[Address(RVA = "0xED9B30", Offset = "0xED9B30", VA = "0xED9B30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766CC0", Offset = "0x766CC0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001547")]
			[Address(RVA = "0xED9B38", Offset = "0xED9B38", VA = "0xED9B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766CD0", Offset = "0x766CD0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xED9B28", Offset = "0xED9B28", VA = "0xED9B28", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xED9B40", Offset = "0xED9B40", VA = "0xED9B40")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xED9B4C", Offset = "0xED9B4C", VA = "0xED9B4C")]
		public void SetProjectionMatrix(Func<Vector2, Matrix4x4> jitteredFunc)
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xEDA538", Offset = "0xEDA538", VA = "0xEDA538")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xEDA9D4", Offset = "0xEDA9D4", VA = "0xEDA9D4")]
		private float GetHaltonValue(int index, int radix)
		{
			return default(float);
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xED9E18", Offset = "0xED9E18", VA = "0xED9E18")]
		private Vector2 GenerateRandomOffset()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xED9EE0", Offset = "0xED9EE0", VA = "0xED9EE0")]
		private Matrix4x4 GetPerspectiveProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xEDA3A4", Offset = "0xEDA3A4", VA = "0xEDA3A4")]
		private Matrix4x4 GetOrthographicProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xEDAA18", Offset = "0xEDAA18", VA = "0xEDAA18", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xEDAAC4", Offset = "0xEDAAC4", VA = "0xEDAAC4")]
		public TaaComponent()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public sealed class UserLutComponent : PostProcessingComponentRenderTexture<UserLutModel>
	{
		[Token(Token = "0x200043A")]
		private static class Uniforms
		{
			[Token(Token = "0x4001D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _UserLut;

			[Token(Token = "0x4001D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _UserLut_Params;
		}

		[Token(Token = "0x17000112")]
		public override bool active
		{
			[Token(Token = "0x6001551")]
			[Address(RVA = "0xEDAC60", Offset = "0xEDAC60", VA = "0xEDAC60", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xEDADA8", Offset = "0xEDADA8", VA = "0xEDADA8", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xEDAF00", Offset = "0xEDAF00", VA = "0xEDAF00")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xEDB02C", Offset = "0xEDB02C", VA = "0xEDB02C")]
		public UserLutComponent()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public sealed class VignetteComponent : PostProcessingComponentRenderTexture<VignetteModel>
	{
		[Token(Token = "0x200043B")]
		private static class Uniforms
		{
			[Token(Token = "0x4001D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Vignette_Color;

			[Token(Token = "0x4001D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Vignette_Center;

			[Token(Token = "0x4001D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Vignette_Settings;

			[Token(Token = "0x4001D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Vignette_Mask;

			[Token(Token = "0x4001D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Vignette_Opacity;
		}

		[Token(Token = "0x17000113")]
		public override bool active
		{
			[Token(Token = "0x6001555")]
			[Address(RVA = "0xEDB1A4", Offset = "0xEDB1A4", VA = "0xEDB1A4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xEDB214", Offset = "0xEDB214", VA = "0xEDB214", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xEDB4E0", Offset = "0xEDB4E0", VA = "0xEDB4E0")]
		public VignetteComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A3")]
	public class AmbientOcclusionModel : PostProcessingModel
	{
		[Token(Token = "0x200043C")]
		public enum SampleCount
		{
			[Token(Token = "0x4001D71")]
			Lowest = 3,
			[Token(Token = "0x4001D72")]
			Low = 6,
			[Token(Token = "0x4001D73")]
			Medium = 10,
			[Token(Token = "0x4001D74")]
			High = 16
		}

		[Serializable]
		[Token(Token = "0x200043D")]
		public struct Settings
		{
			[Token(Token = "0x4001D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762480", Offset = "0x762480")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762480", Offset = "0x762480")]
			public float intensity;

			[Token(Token = "0x4001D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x7624D4", Offset = "0x7624D4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7624D4", Offset = "0x7624D4")]
			public float radius;

			[Token(Token = "0x4001D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762528", Offset = "0x762528")]
			public SampleCount sampleCount;

			[Token(Token = "0x4001D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762560", Offset = "0x762560")]
			public bool downsampling;

			[Token(Token = "0x4001D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762598", Offset = "0x762598")]
			public bool forceForwardCompatibility;

			[Token(Token = "0x4001D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7625D0", Offset = "0x7625D0")]
			public bool ambientOnly;

			[Token(Token = "0x4001D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762608", Offset = "0x762608")]
			public bool highPrecision;

			[Token(Token = "0x1700022A")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001B6A")]
				[Address(RVA = "0xA9D398", Offset = "0xA9D398", VA = "0xA9D398")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000114")]
		public Settings settings
		{
			[Token(Token = "0x6001558")]
			[Address(RVA = "0xA9D36C", Offset = "0xA9D36C", VA = "0xA9D36C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001559")]
			[Address(RVA = "0xA9D37C", Offset = "0xA9D37C", VA = "0xA9D37C")]
			set
			{
			}
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xA9D388", Offset = "0xA9D388", VA = "0xA9D388", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xA9D3B0", Offset = "0xA9D3B0", VA = "0xA9D3B0")]
		public AmbientOcclusionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A4")]
	public class AntialiasingModel : PostProcessingModel
	{
		[Token(Token = "0x200043E")]
		public enum Method
		{
			[Token(Token = "0x4001D7D")]
			Fxaa,
			[Token(Token = "0x4001D7E")]
			Taa
		}

		[Token(Token = "0x200043F")]
		public enum FxaaPreset
		{
			[Token(Token = "0x4001D80")]
			ExtremePerformance,
			[Token(Token = "0x4001D81")]
			Performance,
			[Token(Token = "0x4001D82")]
			Default,
			[Token(Token = "0x4001D83")]
			Quality,
			[Token(Token = "0x4001D84")]
			ExtremeQuality
		}

		[Serializable]
		[Token(Token = "0x2000440")]
		public struct FxaaQualitySettings
		{
			[Token(Token = "0x4001D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762640", Offset = "0x762640")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762640", Offset = "0x762640")]
			public float subpixelAliasingRemovalAmount;

			[Token(Token = "0x4001D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762694", Offset = "0x762694")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762694", Offset = "0x762694")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4001D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7626F0", Offset = "0x7626F0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7626F0", Offset = "0x7626F0")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4001D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaQualitySettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x2000441")]
		public struct FxaaConsoleSettings
		{
			[Token(Token = "0x4001D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762748", Offset = "0x762748")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762748", Offset = "0x762748")]
			public float subpixelSpreadAmount;

			[Token(Token = "0x4001D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7627A0", Offset = "0x7627A0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7627A0", Offset = "0x7627A0")]
			public float edgeSharpnessAmount;

			[Token(Token = "0x4001D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7627F4", Offset = "0x7627F4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7627F4", Offset = "0x7627F4")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4001D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762848", Offset = "0x762848")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762848", Offset = "0x762848")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4001D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaConsoleSettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x2000442")]
		public struct FxaaSettings
		{
			[Token(Token = "0x4001D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FxaaPreset preset;

			[Token(Token = "0x1700022B")]
			public static FxaaSettings defaultSettings
			{
				[Token(Token = "0x6001B6D")]
				[Address(RVA = "0xA9D630", Offset = "0xA9D630", VA = "0xA9D630")]
				get
				{
					return default(FxaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000443")]
		public struct TaaSettings
		{
			[Token(Token = "0x4001D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7628A4", Offset = "0x7628A4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7628A4", Offset = "0x7628A4")]
			public float jitterSpread;

			[Token(Token = "0x4001D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7628FC", Offset = "0x7628FC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7628FC", Offset = "0x7628FC")]
			public float sharpen;

			[Token(Token = "0x4001D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762950", Offset = "0x762950")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762950", Offset = "0x762950")]
			public float stationaryBlending;

			[Token(Token = "0x4001D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7629A8", Offset = "0x7629A8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7629A8", Offset = "0x7629A8")]
			public float motionBlending;

			[Token(Token = "0x1700022C")]
			public static TaaSettings defaultSettings
			{
				[Token(Token = "0x6001B6E")]
				[Address(RVA = "0xA9D638", Offset = "0xA9D638", VA = "0xA9D638")]
				get
				{
					return default(TaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000444")]
		public struct Settings
		{
			[Token(Token = "0x4001D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Method method;

			[Token(Token = "0x4001D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public FxaaSettings fxaaSettings;

			[Token(Token = "0x4001D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TaaSettings taaSettings;

			[Token(Token = "0x1700022D")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001B6F")]
				[Address(RVA = "0xA9D408", Offset = "0xA9D408", VA = "0xA9D408")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000115")]
		public Settings settings
		{
			[Token(Token = "0x600155C")]
			[Address(RVA = "0xA9D3C4", Offset = "0xA9D3C4", VA = "0xA9D3C4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600155D")]
			[Address(RVA = "0xA9D3D8", Offset = "0xA9D3D8", VA = "0xA9D3D8")]
			set
			{
			}
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xA9D3EC", Offset = "0xA9D3EC", VA = "0xA9D3EC", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xA9D424", Offset = "0xA9D424", VA = "0xA9D424")]
		public AntialiasingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A5")]
	public class BloomModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000445")]
		public struct BloomSettings
		{
			[Token(Token = "0x4001D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x762A00", Offset = "0x762A00")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762A00", Offset = "0x762A00")]
			public float intensity;

			[Token(Token = "0x4001D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x762A50", Offset = "0x762A50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762A50", Offset = "0x762A50")]
			public float threshold;

			[Token(Token = "0x4001D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762AA0", Offset = "0x762AA0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762AA0", Offset = "0x762AA0")]
			public float softKnee;

			[Token(Token = "0x4001D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762AF4", Offset = "0x762AF4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762AF4", Offset = "0x762AF4")]
			public float radius;

			[Token(Token = "0x4001D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762B48", Offset = "0x762B48")]
			public bool antiFlicker;

			[Token(Token = "0x1700022E")]
			public float thresholdLinear
			{
				[Token(Token = "0x6001B71")]
				[Address(RVA = "0xA9E108", Offset = "0xA9E108", VA = "0xA9E108")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001B70")]
				[Address(RVA = "0xA9E4F4", Offset = "0xA9E4F4", VA = "0xA9E4F4")]
				set
				{
				}
			}

			[Token(Token = "0x1700022F")]
			public static BloomSettings defaultSettings
			{
				[Token(Token = "0x6001B72")]
				[Address(RVA = "0xA9E570", Offset = "0xA9E570", VA = "0xA9E570")]
				get
				{
					return default(BloomSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000446")]
		public struct LensDirtSettings
		{
			[Token(Token = "0x4001D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762B80", Offset = "0x762B80")]
			public Texture texture;

			[Token(Token = "0x4001D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x762BB8", Offset = "0x762BB8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762BB8", Offset = "0x762BB8")]
			public float intensity;

			[Token(Token = "0x17000230")]
			public static LensDirtSettings defaultSettings
			{
				[Token(Token = "0x6001B73")]
				[Address(RVA = "0xA9E58C", Offset = "0xA9E58C", VA = "0xA9E58C")]
				get
				{
					return default(LensDirtSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000447")]
		public struct Settings
		{
			[Token(Token = "0x4001D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BloomSettings bloom;

			[Token(Token = "0x4001D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LensDirtSettings lensDirt;

			[Token(Token = "0x17000231")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001B74")]
				[Address(RVA = "0xA9E418", Offset = "0xA9E418", VA = "0xA9E418")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000116")]
		public Settings settings
		{
			[Token(Token = "0x6001560")]
			[Address(RVA = "0xA9E390", Offset = "0xA9E390", VA = "0xA9E390")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001561")]
			[Address(RVA = "0xA9E3A8", Offset = "0xA9E3A8", VA = "0xA9E3A8")]
			set
			{
			}
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xA9E3CC", Offset = "0xA9E3CC", VA = "0xA9E3CC", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xA9E49C", Offset = "0xA9E49C", VA = "0xA9E49C")]
		public BloomModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A6")]
	public class BuiltinDebugViewsModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000448")]
		public struct DepthSettings
		{
			[Token(Token = "0x4001D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762C08", Offset = "0x762C08")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762C08", Offset = "0x762C08")]
			public float scale;

			[Token(Token = "0x17000232")]
			public static DepthSettings defaultSettings
			{
				[Token(Token = "0x6001B75")]
				[Address(RVA = "0xA9F8AC", Offset = "0xA9F8AC", VA = "0xA9F8AC")]
				get
				{
					return default(DepthSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000449")]
		public struct MotionVectorsSettings
		{
			[Token(Token = "0x4001DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762C5C", Offset = "0x762C5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762C5C", Offset = "0x762C5C")]
			public float sourceOpacity;

			[Token(Token = "0x4001DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762CB0", Offset = "0x762CB0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762CB0", Offset = "0x762CB0")]
			public float motionImageOpacity;

			[Token(Token = "0x4001DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x762D04", Offset = "0x762D04")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762D04", Offset = "0x762D04")]
			public float motionImageAmplitude;

			[Token(Token = "0x4001DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762D54", Offset = "0x762D54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762D54", Offset = "0x762D54")]
			public float motionVectorsOpacity;

			[Token(Token = "0x4001DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762DA8", Offset = "0x762DA8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762DA8", Offset = "0x762DA8")]
			public int motionVectorsResolution;

			[Token(Token = "0x4001DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x762E00", Offset = "0x762E00")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762E00", Offset = "0x762E00")]
			public float motionVectorsAmplitude;

			[Token(Token = "0x17000233")]
			public static MotionVectorsSettings defaultSettings
			{
				[Token(Token = "0x6001B76")]
				[Address(RVA = "0xA9F8B4", Offset = "0xA9F8B4", VA = "0xA9F8B4")]
				get
				{
					return default(MotionVectorsSettings);
				}
			}
		}

		[Token(Token = "0x200044A")]
		public enum Mode
		{
			[Token(Token = "0x4001DA7")]
			None,
			[Token(Token = "0x4001DA8")]
			Depth,
			[Token(Token = "0x4001DA9")]
			Normals,
			[Token(Token = "0x4001DAA")]
			MotionVectors,
			[Token(Token = "0x4001DAB")]
			AmbientOcclusion,
			[Token(Token = "0x4001DAC")]
			EyeAdaptation,
			[Token(Token = "0x4001DAD")]
			FocusPlane,
			[Token(Token = "0x4001DAE")]
			PreGradingLog,
			[Token(Token = "0x4001DAF")]
			LogLut,
			[Token(Token = "0x4001DB0")]
			UserLut
		}

		[Serializable]
		[Token(Token = "0x200044B")]
		public struct Settings
		{
			[Token(Token = "0x4001DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mode mode;

			[Token(Token = "0x4001DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public DepthSettings depth;

			[Token(Token = "0x4001DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MotionVectorsSettings motionVectors;

			[Token(Token = "0x17000234")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001B77")]
				[Address(RVA = "0xA9F858", Offset = "0xA9F858", VA = "0xA9F858")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000117")]
		public Settings settings
		{
			[Token(Token = "0x6001564")]
			[Address(RVA = "0xA9F7EC", Offset = "0xA9F7EC", VA = "0xA9F7EC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001565")]
			[Address(RVA = "0xA9F7FC", Offset = "0xA9F7FC", VA = "0xA9F7FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public bool willInterrupt
		{
			[Token(Token = "0x6001566")]
			[Address(RVA = "0xA9F80C", Offset = "0xA9F80C", VA = "0xA9F80C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xA9F830", Offset = "0xA9F830", VA = "0xA9F830", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xA9C1FC", Offset = "0xA9C1FC", VA = "0xA9C1FC")]
		public bool IsModeActive(Mode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xA9F880", Offset = "0xA9F880", VA = "0xA9F880")]
		public BuiltinDebugViewsModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A7")]
	public class ChromaticAberrationModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200044C")]
		public struct Settings
		{
			[Token(Token = "0x4001DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762E50", Offset = "0x762E50")]
			public Texture2D spectralTexture;

			[Token(Token = "0x4001DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762E88", Offset = "0x762E88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762E88", Offset = "0x762E88")]
			public float intensity;

			[Token(Token = "0x17000235")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001B78")]
				[Address(RVA = "0xA9FD88", Offset = "0xA9FD88", VA = "0xA9FD88")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000119")]
		public Settings settings
		{
			[Token(Token = "0x600156A")]
			[Address(RVA = "0xA9FD14", Offset = "0xA9FD14", VA = "0xA9FD14")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600156B")]
			[Address(RVA = "0xA9FD20", Offset = "0xA9FD20", VA = "0xA9FD20")]
			set
			{
			}
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xA9FD30", Offset = "0xA9FD30", VA = "0xA9FD30", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xA9FDC0", Offset = "0xA9FDC0", VA = "0xA9FDC0")]
		public ChromaticAberrationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A8")]
	public class ColorGradingModel : PostProcessingModel
	{
		[Token(Token = "0x200044D")]
		public enum Tonemapper
		{
			[Token(Token = "0x4001DB7")]
			None,
			[Token(Token = "0x4001DB8")]
			ACES,
			[Token(Token = "0x4001DB9")]
			Neutral
		}

		[Serializable]
		[Token(Token = "0x200044E")]
		public struct TonemappingSettings
		{
			[Token(Token = "0x4001DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762EDC", Offset = "0x762EDC")]
			public Tonemapper tonemapper;

			[Token(Token = "0x4001DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762F14", Offset = "0x762F14")]
			public float neutralBlackIn;

			[Token(Token = "0x4001DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762F34", Offset = "0x762F34")]
			public float neutralWhiteIn;

			[Token(Token = "0x4001DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762F4C", Offset = "0x762F4C")]
			public float neutralBlackOut;

			[Token(Token = "0x4001DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762F6C", Offset = "0x762F6C")]
			public float neutralWhiteOut;

			[Token(Token = "0x4001DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762F84", Offset = "0x762F84")]
			public float neutralWhiteLevel;

			[Token(Token = "0x4001DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762FA0", Offset = "0x762FA0")]
			public float neutralWhiteClip;

			[Token(Token = "0x17000236")]
			public static TonemappingSettings defaultSettings
			{
				[Token(Token = "0x6001B79")]
				[Address(RVA = "0xAA2C44", Offset = "0xAA2C44", VA = "0xAA2C44")]
				get
				{
					return default(TonemappingSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200044F")]
		public struct BasicSettings
		{
			[Token(Token = "0x4001DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762FB8", Offset = "0x762FB8")]
			public float postExposure;

			[Token(Token = "0x4001DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762FF0", Offset = "0x762FF0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762FF0", Offset = "0x762FF0")]
			public float temperature;

			[Token(Token = "0x4001DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x76304C", Offset = "0x76304C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x76304C", Offset = "0x76304C")]
			public float tint;

			[Token(Token = "0x4001DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7630A8", Offset = "0x7630A8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7630A8", Offset = "0x7630A8")]
			public float hueShift;

			[Token(Token = "0x4001DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x763104", Offset = "0x763104")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763104", Offset = "0x763104")]
			public float saturation;

			[Token(Token = "0x4001DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x763158", Offset = "0x763158")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763158", Offset = "0x763158")]
			public float contrast;

			[Token(Token = "0x17000237")]
			public static BasicSettings defaultSettings
			{
				[Token(Token = "0x6001B7A")]
				[Address(RVA = "0xAA2310", Offset = "0xAA2310", VA = "0xAA2310")]
				get
				{
					return default(BasicSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000450")]
		public struct ChannelMixerSettings
		{
			[Token(Token = "0x4001DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 red;

			[Token(Token = "0x4001DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 green;

			[Token(Token = "0x4001DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 blue;

			[Token(Token = "0x4001DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[HideInInspector]
			public int currentEditingChannel;

			[Token(Token = "0x17000238")]
			public static ChannelMixerSettings defaultSettings
			{
				[Token(Token = "0x6001B7B")]
				[Address(RVA = "0xAA2320", Offset = "0xAA2320", VA = "0xAA2320")]
				get
				{
					return default(ChannelMixerSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000451")]
		public struct LogWheelsSettings
		{
			[Token(Token = "0x4001DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x7631BC", Offset = "0x7631BC")]
			public Color slope;

			[Token(Token = "0x4001DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x7631F4", Offset = "0x7631F4")]
			public Color power;

			[Token(Token = "0x4001DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x76322C", Offset = "0x76322C")]
			public Color offset;

			[Token(Token = "0x17000239")]
			public static LogWheelsSettings defaultSettings
			{
				[Token(Token = "0x6001B7C")]
				[Address(RVA = "0xAA246C", Offset = "0xAA246C", VA = "0xAA246C")]
				get
				{
					return default(LogWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000452")]
		public struct LinearWheelsSettings
		{
			[Token(Token = "0x4001DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x763264", Offset = "0x763264")]
			public Color lift;

			[Token(Token = "0x4001DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x76329C", Offset = "0x76329C")]
			public Color gamma;

			[Token(Token = "0x4001DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x7632D4", Offset = "0x7632D4")]
			public Color gain;

			[Token(Token = "0x1700023A")]
			public static LinearWheelsSettings defaultSettings
			{
				[Token(Token = "0x6001B7D")]
				[Address(RVA = "0xAA24F8", Offset = "0xAA24F8", VA = "0xAA24F8")]
				get
				{
					return default(LinearWheelsSettings);
				}
			}
		}

		[Token(Token = "0x2000453")]
		public enum ColorWheelMode
		{
			[Token(Token = "0x4001DD2")]
			Linear,
			[Token(Token = "0x4001DD3")]
			Log
		}

		[Serializable]
		[Token(Token = "0x2000454")]
		public struct ColorWheelsSettings
		{
			[Token(Token = "0x4001DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorWheelMode mode;

			[Token(Token = "0x4001DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[TrackballGroup]
			public LogWheelsSettings log;

			[Token(Token = "0x4001DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[TrackballGroup]
			public LinearWheelsSettings linear;

			[Token(Token = "0x1700023B")]
			public static ColorWheelsSettings defaultSettings
			{
				[Token(Token = "0x6001B7E")]
				[Address(RVA = "0xAA23F0", Offset = "0xAA23F0", VA = "0xAA23F0")]
				get
				{
					return default(ColorWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000455")]
		public struct CurvesSettings
		{
			[Token(Token = "0x4001DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorGradingCurve master;

			[Token(Token = "0x4001DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ColorGradingCurve red;

			[Token(Token = "0x4001DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ColorGradingCurve green;

			[Token(Token = "0x4001DDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ColorGradingCurve blue;

			[Token(Token = "0x4001DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColorGradingCurve hueVShue;

			[Token(Token = "0x4001DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ColorGradingCurve hueVSsat;

			[Token(Token = "0x4001DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ColorGradingCurve satVSsat;

			[Token(Token = "0x4001DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ColorGradingCurve lumVSsat;

			[Token(Token = "0x4001DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[HideInInspector]
			public int e_CurrentEditingCurve;

			[Token(Token = "0x4001DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[HideInInspector]
			public bool e_CurveY;

			[Token(Token = "0x4001DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
			[HideInInspector]
			public bool e_CurveR;

			[Token(Token = "0x4001DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
			[HideInInspector]
			public bool e_CurveG;

			[Token(Token = "0x4001DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
			[HideInInspector]
			public bool e_CurveB;

			[Token(Token = "0x1700023C")]
			public static CurvesSettings defaultSettings
			{
				[Token(Token = "0x6001B7F")]
				[Address(RVA = "0xAA2584", Offset = "0xAA2584", VA = "0xAA2584")]
				get
				{
					return default(CurvesSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000456")]
		public struct Settings
		{
			[Token(Token = "0x4001DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TonemappingSettings tonemapping;

			[Token(Token = "0x4001DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public BasicSettings basic;

			[Token(Token = "0x4001DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public ChannelMixerSettings channelMixer;

			[Token(Token = "0x4001DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public ColorWheelsSettings colorWheels;

			[Token(Token = "0x4001DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public CurvesSettings curves;

			[Token(Token = "0x1700023D")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001B80")]
				[Address(RVA = "0xAA2164", Offset = "0xAA2164", VA = "0xAA2164")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7617A4", Offset = "0x7617A4")]
		private bool <isDirty>k__BackingField;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7617B4", Offset = "0x7617B4")]
		private RenderTexture <bakedLut>k__BackingField;

		[Token(Token = "0x1700011A")]
		public Settings settings
		{
			[Token(Token = "0x600156E")]
			[Address(RVA = "0xAA2094", Offset = "0xAA2094", VA = "0xAA2094")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600156F")]
			[Address(RVA = "0xAA20A4", Offset = "0xAA20A4", VA = "0xAA20A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public bool isDirty
		{
			[Token(Token = "0x6001570")]
			[Address(RVA = "0xAA20E4", Offset = "0xAA20E4", VA = "0xAA20E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766CE0", Offset = "0x766CE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001571")]
			[Address(RVA = "0xAA20EC", Offset = "0xAA20EC", VA = "0xAA20EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766CF0", Offset = "0x766CF0")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public RenderTexture bakedLut
		{
			[Token(Token = "0x6001572")]
			[Address(RVA = "0xAA20F8", Offset = "0xAA20F8", VA = "0xAA20F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766D00", Offset = "0x766D00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001573")]
			[Address(RVA = "0xAA2100", Offset = "0xAA2100", VA = "0xAA2100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766D10", Offset = "0x766D10")]
			internal set
			{
			}
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xAA2110", Offset = "0xAA2110", VA = "0xAA2110", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xAA22B4", Offset = "0xAA22B4", VA = "0xAA22B4", Slot = "5")]
		public override void OnValidate()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xAA22C0", Offset = "0xAA22C0", VA = "0xAA22C0")]
		public ColorGradingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A9")]
	public class DepthOfFieldModel : PostProcessingModel
	{
		[Token(Token = "0x2000457")]
		public enum KernelSize
		{
			[Token(Token = "0x4001DEA")]
			Small,
			[Token(Token = "0x4001DEB")]
			Medium,
			[Token(Token = "0x4001DEC")]
			Large,
			[Token(Token = "0x4001DED")]
			VeryLarge
		}

		[Serializable]
		[Token(Token = "0x2000458")]
		public struct Settings
		{
			[Token(Token = "0x4001DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x76337C", Offset = "0x76337C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x76337C", Offset = "0x76337C")]
			public float focusDistance;

			[Token(Token = "0x4001DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7633D0", Offset = "0x7633D0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7633D0", Offset = "0x7633D0")]
			public float aperture;

			[Token(Token = "0x4001DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x76342C", Offset = "0x76342C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x76342C", Offset = "0x76342C")]
			public float focalLength;

			[Token(Token = "0x4001DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763484", Offset = "0x763484")]
			public bool useCameraFov;

			[Token(Token = "0x4001DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7634BC", Offset = "0x7634BC")]
			public KernelSize kernelSize;

			[Token(Token = "0x1700023E")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001B81")]
				[Address(RVA = "0xAA3A58", Offset = "0xAA3A58", VA = "0xAA3A58")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700011D")]
		public Settings settings
		{
			[Token(Token = "0x6001577")]
			[Address(RVA = "0xAA3A04", Offset = "0xAA3A04", VA = "0xAA3A04")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001578")]
			[Address(RVA = "0xAA3A18", Offset = "0xAA3A18", VA = "0xAA3A18")]
			set
			{
			}
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xAA3A2C", Offset = "0xAA3A2C", VA = "0xAA3A2C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xAA3A84", Offset = "0xAA3A84", VA = "0xAA3A84")]
		public DepthOfFieldModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AA")]
	public class DitheringModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000459")]
		public struct Settings
		{
			[Token(Token = "0x1700023F")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001B82")]
				[Address(RVA = "0xAA3F2C", Offset = "0xAA3F2C", VA = "0xAA3F2C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700011E")]
		public Settings settings
		{
			[Token(Token = "0x600157B")]
			[Address(RVA = "0xAA3F14", Offset = "0xAA3F14", VA = "0xAA3F14")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600157C")]
			[Address(RVA = "0xAA3F1C", Offset = "0xAA3F1C", VA = "0xAA3F1C")]
			set
			{
			}
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xAA3F24", Offset = "0xAA3F24", VA = "0xAA3F24", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xAA3F34", Offset = "0xAA3F34", VA = "0xAA3F34")]
		public DitheringModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AB")]
	public class EyeAdaptationModel : PostProcessingModel
	{
		[Token(Token = "0x200045A")]
		public enum EyeAdaptationType
		{
			[Token(Token = "0x4001DF4")]
			Progressive,
			[Token(Token = "0x4001DF5")]
			Fixed
		}

		[Serializable]
		[Token(Token = "0x200045B")]
		public struct Settings
		{
			[Token(Token = "0x4001DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7634F4", Offset = "0x7634F4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7634F4", Offset = "0x7634F4")]
			public float lowPercent;

			[Token(Token = "0x4001DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x76354C", Offset = "0x76354C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x76354C", Offset = "0x76354C")]
			public float highPercent;

			[Token(Token = "0x4001DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7635A4", Offset = "0x7635A4")]
			public float minLuminance;

			[Token(Token = "0x4001DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7635DC", Offset = "0x7635DC")]
			public float maxLuminance;

			[Token(Token = "0x4001DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x763614", Offset = "0x763614")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763614", Offset = "0x763614")]
			public float keyValue;

			[Token(Token = "0x4001DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763664", Offset = "0x763664")]
			public bool dynamicKeyValue;

			[Token(Token = "0x4001DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x76369C", Offset = "0x76369C")]
			public EyeAdaptationType adaptationType;

			[Token(Token = "0x4001DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x7636D4", Offset = "0x7636D4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7636D4", Offset = "0x7636D4")]
			public float speedUp;

			[Token(Token = "0x4001DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x763724", Offset = "0x763724")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763724", Offset = "0x763724")]
			public float speedDown;

			[Token(Token = "0x4001DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x763774", Offset = "0x763774")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763774", Offset = "0x763774")]
			public int logMin;

			[Token(Token = "0x4001E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7637C8", Offset = "0x7637C8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7637C8", Offset = "0x7637C8")]
			public int logMax;

			[Token(Token = "0x17000240")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001B83")]
				[Address(RVA = "0xAA4F74", Offset = "0xAA4F74", VA = "0xAA4F74")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700011F")]
		public Settings settings
		{
			[Token(Token = "0x600157F")]
			[Address(RVA = "0xAA4EFC", Offset = "0xAA4EFC", VA = "0xAA4EFC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001580")]
			[Address(RVA = "0xAA4F14", Offset = "0xAA4F14", VA = "0xAA4F14")]
			set
			{
			}
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xAA4F34", Offset = "0xAA4F34", VA = "0xAA4F34", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xAA4FB8", Offset = "0xAA4FB8", VA = "0xAA4FB8")]
		public EyeAdaptationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AC")]
	public class FogModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200045C")]
		public struct Settings
		{
			[Token(Token = "0x4001E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x76381C", Offset = "0x76381C")]
			public bool excludeSkybox;

			[Token(Token = "0x17000241")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001B84")]
				[Address(RVA = "0xAA56B4", Offset = "0xAA56B4", VA = "0xAA56B4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000120")]
		public Settings settings
		{
			[Token(Token = "0x6001583")]
			[Address(RVA = "0xAA5698", Offset = "0xAA5698", VA = "0xAA5698")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001584")]
			[Address(RVA = "0xAA56A0", Offset = "0xAA56A0", VA = "0xAA56A0")]
			set
			{
			}
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xAA56A8", Offset = "0xAA56A8", VA = "0xAA56A8", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xAA56BC", Offset = "0xAA56BC", VA = "0xAA56BC")]
		public FogModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AD")]
	public class GrainModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200045D")]
		public struct Settings
		{
			[Token(Token = "0x4001E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763854", Offset = "0x763854")]
			public bool colored;

			[Token(Token = "0x4001E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x76388C", Offset = "0x76388C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x76388C", Offset = "0x76388C")]
			public float intensity;

			[Token(Token = "0x4001E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7638E0", Offset = "0x7638E0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7638E0", Offset = "0x7638E0")]
			public float size;

			[Token(Token = "0x4001E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x763938", Offset = "0x763938")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763938", Offset = "0x763938")]
			public float luminanceContribution;

			[Token(Token = "0x17000242")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001B85")]
				[Address(RVA = "0xAA607C", Offset = "0xAA607C", VA = "0xAA607C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000121")]
		public Settings settings
		{
			[Token(Token = "0x6001587")]
			[Address(RVA = "0xAA6050", Offset = "0xAA6050", VA = "0xAA6050")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001588")]
			[Address(RVA = "0xAA6060", Offset = "0xAA6060", VA = "0xAA6060")]
			set
			{
			}
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xAA606C", Offset = "0xAA606C", VA = "0xAA606C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xAA6094", Offset = "0xAA6094", VA = "0xAA6094")]
		public GrainModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AE")]
	public class MotionBlurModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200045E")]
		public struct Settings
		{
			[Token(Token = "0x4001E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x76398C", Offset = "0x76398C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x76398C", Offset = "0x76398C")]
			public float shutterAngle;

			[Token(Token = "0x4001E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7639E4", Offset = "0x7639E4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7639E4", Offset = "0x7639E4")]
			public int sampleCount;

			[Token(Token = "0x4001E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x763A3C", Offset = "0x763A3C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763A3C", Offset = "0x763A3C")]
			public float frameBlending;

			[Token(Token = "0x17000243")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001B86")]
				[Address(RVA = "0xAA8B80", Offset = "0xAA8B80", VA = "0xAA8B80")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000122")]
		public Settings settings
		{
			[Token(Token = "0x600158B")]
			[Address(RVA = "0xAA8B50", Offset = "0xAA8B50", VA = "0xAA8B50")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600158C")]
			[Address(RVA = "0xAA8B60", Offset = "0xAA8B60", VA = "0xAA8B60")]
			set
			{
			}
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xAA8B6C", Offset = "0xAA8B6C", VA = "0xAA8B6C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xAA8B90", Offset = "0xAA8B90", VA = "0xAA8B90")]
		public MotionBlurModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AF")]
	public class ScreenSpaceReflectionModel : PostProcessingModel
	{
		[Token(Token = "0x200045F")]
		public enum SSRResolution
		{
			[Token(Token = "0x4001E0A")]
			High = 0,
			[Token(Token = "0x4001E0B")]
			Low = 2
		}

		[Token(Token = "0x2000460")]
		public enum SSRReflectionBlendType
		{
			[Token(Token = "0x4001E0D")]
			PhysicallyBased,
			[Token(Token = "0x4001E0E")]
			Additive
		}

		[Serializable]
		[Token(Token = "0x2000461")]
		public struct IntensitySettings
		{
			[Token(Token = "0x4001E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763A90", Offset = "0x763A90")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x763A90", Offset = "0x763A90")]
			public float reflectionMultiplier;

			[Token(Token = "0x4001E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763AE4", Offset = "0x763AE4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x763AE4", Offset = "0x763AE4")]
			public float fadeDistance;

			[Token(Token = "0x4001E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763B3C", Offset = "0x763B3C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x763B3C", Offset = "0x763B3C")]
			public float fresnelFade;

			[Token(Token = "0x4001E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763B90", Offset = "0x763B90")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x763B90", Offset = "0x763B90")]
			public float fresnelFadePower;
		}

		[Serializable]
		[Token(Token = "0x2000462")]
		public struct ReflectionSettings
		{
			[Token(Token = "0x4001E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763BE8", Offset = "0x763BE8")]
			public SSRReflectionBlendType blendType;

			[Token(Token = "0x4001E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763C20", Offset = "0x763C20")]
			public SSRResolution reflectionQuality;

			[Token(Token = "0x4001E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763C58", Offset = "0x763C58")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x763C58", Offset = "0x763C58")]
			public float maxDistance;

			[Token(Token = "0x4001E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763CB4", Offset = "0x763CB4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x763CB4", Offset = "0x763CB4")]
			public int iterationCount;

			[Token(Token = "0x4001E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763D0C", Offset = "0x763D0C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x763D0C", Offset = "0x763D0C")]
			public int stepSize;

			[Token(Token = "0x4001E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763D60", Offset = "0x763D60")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x763D60", Offset = "0x763D60")]
			public float widthModifier;

			[Token(Token = "0x4001E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763DB8", Offset = "0x763DB8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x763DB8", Offset = "0x763DB8")]
			public float reflectionBlur;

			[Token(Token = "0x4001E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763E10", Offset = "0x763E10")]
			public bool reflectBackfaces;
		}

		[Serializable]
		[Token(Token = "0x2000463")]
		public struct ScreenEdgeMask
		{
			[Token(Token = "0x4001E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763E48", Offset = "0x763E48")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x763E48", Offset = "0x763E48")]
			public float intensity;
		}

		[Serializable]
		[Token(Token = "0x2000464")]
		public struct Settings
		{
			[Token(Token = "0x4001E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectionSettings reflection;

			[Token(Token = "0x4001E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntensitySettings intensity;

			[Token(Token = "0x4001E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ScreenEdgeMask screenEdgeMask;

			[Token(Token = "0x17000244")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001B87")]
				[Address(RVA = "0xED9A3C", Offset = "0xED9A3C", VA = "0xED9A3C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000123")]
		public Settings settings
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0xED99AC", Offset = "0xED99AC", VA = "0xED99AC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001590")]
			[Address(RVA = "0xED99CC", Offset = "0xED99CC", VA = "0xED99CC")]
			set
			{
			}
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xED99EC", Offset = "0xED99EC", VA = "0xED99EC", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xED7A3C", Offset = "0xED7A3C", VA = "0xED7A3C")]
		public ScreenSpaceReflectionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B0")]
	public class UserLutModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000465")]
		public struct Settings
		{
			[Token(Token = "0x4001E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763E9C", Offset = "0x763E9C")]
			public Texture2D lut;

			[Token(Token = "0x4001E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x763ED4", Offset = "0x763ED4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763ED4", Offset = "0x763ED4")]
			public float contribution;

			[Token(Token = "0x17000245")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001B88")]
				[Address(RVA = "0xEDB170", Offset = "0xEDB170", VA = "0xEDB170")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000124")]
		public Settings settings
		{
			[Token(Token = "0x6001593")]
			[Address(RVA = "0xEDB100", Offset = "0xEDB100", VA = "0xEDB100")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001594")]
			[Address(RVA = "0xEDB10C", Offset = "0xEDB10C", VA = "0xEDB10C")]
			set
			{
			}
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xEDB11C", Offset = "0xEDB11C", VA = "0xEDB11C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xED7A90", Offset = "0xED7A90", VA = "0xED7A90")]
		public UserLutModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B1")]
	public class VignetteModel : PostProcessingModel
	{
		[Token(Token = "0x2000466")]
		public enum Mode
		{
			[Token(Token = "0x4001E22")]
			Classic,
			[Token(Token = "0x4001E23")]
			Masked
		}

		[Serializable]
		[Token(Token = "0x2000467")]
		public struct Settings
		{
			[Token(Token = "0x4001E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763F28", Offset = "0x763F28")]
			public Mode mode;

			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x763F60", Offset = "0x763F60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763F60", Offset = "0x763F60")]
			public Color color;

			[Token(Token = "0x4001E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763FB0", Offset = "0x763FB0")]
			public Vector2 center;

			[Token(Token = "0x4001E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x763FE8", Offset = "0x763FE8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x763FE8", Offset = "0x763FE8")]
			public float intensity;

			[Token(Token = "0x4001E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x76403C", Offset = "0x76403C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x76403C", Offset = "0x76403C")]
			public float smoothness;

			[Token(Token = "0x4001E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x764094", Offset = "0x764094")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x764094", Offset = "0x764094")]
			public float roundness;

			[Token(Token = "0x4001E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7640E8", Offset = "0x7640E8")]
			public Texture mask;

			[Token(Token = "0x4001E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x764120", Offset = "0x764120")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x764120", Offset = "0x764120")]
			public float opacity;

			[Token(Token = "0x4001E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x764174", Offset = "0x764174")]
			public bool rounded;

			[Token(Token = "0x17000246")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001B89")]
				[Address(RVA = "0xEDB6B4", Offset = "0xEDB6B4", VA = "0xEDB6B4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000125")]
		public Settings settings
		{
			[Token(Token = "0x6001597")]
			[Address(RVA = "0xEDB614", Offset = "0xEDB614", VA = "0xEDB614")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001598")]
			[Address(RVA = "0xEDB634", Offset = "0xEDB634", VA = "0xEDB634")]
			set
			{
			}
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xEDB660", Offset = "0xEDB660", VA = "0xEDB660", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xED7AF0", Offset = "0xED7AF0", VA = "0xED7AF0")]
		public VignetteModel()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x75B4F4", Offset = "0x75B4F4")]
	[DisallowMultipleComponent]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x75B4F4", Offset = "0x75B4F4")]
	public class PostProcessingBehaviour : MonoBehaviour
	{
		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PostProcessingProfile profile;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<Vector2, Matrix4x4> jitteredMatrixFunc;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Type, KeyValuePair<CameraEvent, CommandBuffer>> m_CommandBuffers;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PostProcessingComponentBase> m_Components;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<PostProcessingComponentBase, bool> m_ComponentStates;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialFactory m_MaterialFactory;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTextureFactory m_RenderTextureFactory;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PostProcessingContext m_Context;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Camera m_Camera;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PostProcessingProfile m_PreviousProfile;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_RenderingInSceneView;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BuiltinDebugViewsComponent m_DebugViews;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AmbientOcclusionComponent m_AmbientOcclusion;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ScreenSpaceReflectionComponent m_ScreenSpaceReflection;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FogComponent m_FogComponent;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MotionBlurComponent m_MotionBlur;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TaaComponent m_Taa;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EyeAdaptationComponent m_EyeAdaptation;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DepthOfFieldComponent m_DepthOfField;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BloomComponent m_Bloom;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ChromaticAberrationComponent m_ChromaticAberration;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ColorGradingComponent m_ColorGrading;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private UserLutComponent m_UserLut;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GrainComponent m_Grain;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private VignetteComponent m_Vignette;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private DitheringComponent m_Dithering;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private FxaaComponent m_Fxaa;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<PostProcessingComponentBase> m_ComponentsToEnable;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<PostProcessingComponentBase> m_ComponentsToDisable;

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xAA8BA8", Offset = "0xAA8BA8", VA = "0xAA8BA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xAA91F8", Offset = "0xAA91F8", VA = "0xAA91F8")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xAA9B1C", Offset = "0xAA9B1C", VA = "0xAA9B1C")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xAA9C1C", Offset = "0xAA9C1C", VA = "0xAA9C1C")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xAA9D44", Offset = "0xAA9D44", VA = "0xAA9D44")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xAAA260", Offset = "0xAAA260", VA = "0xAAA260")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xAAA418", Offset = "0xAAA418", VA = "0xAAA418")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xAAA5EC", Offset = "0xAAA5EC", VA = "0xAAA5EC")]
		public void ResetTemporalEffects()
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xAA986C", Offset = "0xAA986C", VA = "0xAA986C")]
		private void CheckObservers()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xAA974C", Offset = "0xAA974C", VA = "0xAA974C")]
		private void DisableComponents()
		{
		}

		[Token(Token = "0x60015A5")]
		private CommandBuffer AddCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x60015A6")]
		private void RemoveCommandBuffer<T>() where T : PostProcessingModel
		{
		}

		[Token(Token = "0x60015A7")]
		private CommandBuffer GetCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x60015A8")]
		private void TryExecuteCommandBuffer<T>(PostProcessingComponentCommandBuffer<T> component) where T : PostProcessingModel
		{
		}

		[Token(Token = "0x60015A9")]
		private bool TryPrepareUberImageEffect<T>(PostProcessingComponentRenderTexture<T> component, Material material) where T : PostProcessingModel
		{
			return default(bool);
		}

		[Token(Token = "0x60015AA")]
		private T AddComponent<T>(T component) where T : PostProcessingComponentBase
		{
			return null;
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xAAA638", Offset = "0xAAA638", VA = "0xAAA638")]
		public PostProcessingBehaviour()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public abstract class PostProcessingComponentBase
	{
		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingContext context;

		[Token(Token = "0x17000126")]
		public abstract bool active
		{
			[Token(Token = "0x60015AD")]
			get;
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xED75B0", Offset = "0xED75B0", VA = "0xED75B0", Slot = "4")]
		public virtual DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xED75B8", Offset = "0xED75B8", VA = "0xED75B8", Slot = "6")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xED75BC", Offset = "0xED75BC", VA = "0xED75BC", Slot = "7")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x60015B0")]
		public abstract PostProcessingModel GetModel();

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xED75C0", Offset = "0xED75C0", VA = "0xED75C0")]
		protected PostProcessingComponentBase()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public abstract class PostProcessingComponent<T> : PostProcessingComponentBase where T : PostProcessingModel
	{
		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761854", Offset = "0x761854")]
		private T <model>k__BackingField;

		[Token(Token = "0x17000127")]
		public T model
		{
			[Token(Token = "0x60015B2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766D20", Offset = "0x766D20")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766D30", Offset = "0x766D30")]
			internal set
			{
			}
		}

		[Token(Token = "0x60015B4")]
		public virtual void Init(PostProcessingContext pcontext, T pmodel)
		{
		}

		[Token(Token = "0x60015B5")]
		public override PostProcessingModel GetModel()
		{
			return null;
		}

		[Token(Token = "0x60015B6")]
		protected PostProcessingComponent()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public abstract class PostProcessingComponentCommandBuffer<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x60015B7")]
		public abstract CameraEvent GetCameraEvent();

		[Token(Token = "0x60015B8")]
		public abstract string GetName();

		[Token(Token = "0x60015B9")]
		public abstract void PopulateCommandBuffer(CommandBuffer cb);

		[Token(Token = "0x60015BA")]
		protected PostProcessingComponentCommandBuffer()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public abstract class PostProcessingComponentRenderTexture<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x60015BB")]
		public virtual void Prepare(Material material)
		{
		}

		[Token(Token = "0x60015BC")]
		protected PostProcessingComponentRenderTexture()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class PostProcessingContext
	{
		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingProfile profile;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialFactory materialFactory;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTextureFactory renderTextureFactory;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761864", Offset = "0x761864")]
		private bool <interrupted>k__BackingField;

		[Token(Token = "0x17000128")]
		public bool interrupted
		{
			[Token(Token = "0x60015BD")]
			[Address(RVA = "0xED75C8", Offset = "0xED75C8", VA = "0xED75C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766D40", Offset = "0x766D40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015BE")]
			[Address(RVA = "0xED75D0", Offset = "0xED75D0", VA = "0xED75D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766D50", Offset = "0x766D50")]
			private set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public bool isGBufferAvailable
		{
			[Token(Token = "0x60015C1")]
			[Address(RVA = "0xED7648", Offset = "0xED7648", VA = "0xED7648")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012A")]
		public bool isHdr
		{
			[Token(Token = "0x60015C2")]
			[Address(RVA = "0xED7674", Offset = "0xED7674", VA = "0xED7674")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012B")]
		public int width
		{
			[Token(Token = "0x60015C3")]
			[Address(RVA = "0xED7690", Offset = "0xED7690", VA = "0xED7690")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700012C")]
		public int height
		{
			[Token(Token = "0x60015C4")]
			[Address(RVA = "0xED76AC", Offset = "0xED76AC", VA = "0xED76AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700012D")]
		public Rect viewport
		{
			[Token(Token = "0x60015C5")]
			[Address(RVA = "0xED76C8", Offset = "0xED76C8", VA = "0xED76C8")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xED75DC", Offset = "0xED75DC", VA = "0xED75DC")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xED75E8", Offset = "0xED75E8", VA = "0xED75E8")]
		public PostProcessingContext Reset()
		{
			return null;
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xED76E4", Offset = "0xED76E4", VA = "0xED76E4")]
		public PostProcessingContext()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B8")]
	public abstract class PostProcessingModel
	{
		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "GetSetAttribute", RVA = "0x761874", Offset = "0x761874")]
		private bool m_Enabled;

		[Token(Token = "0x1700012E")]
		public bool enabled
		{
			[Token(Token = "0x60015C7")]
			[Address(RVA = "0xED76EC", Offset = "0xED76EC", VA = "0xED76EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015C8")]
			[Address(RVA = "0xED76F4", Offset = "0xED76F4", VA = "0xED76F4")]
			set
			{
			}
		}

		[Token(Token = "0x60015C9")]
		public abstract void Reset();

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xED7710", Offset = "0xED7710", VA = "0xED7710", Slot = "5")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xED7714", Offset = "0xED7714", VA = "0xED7714")]
		protected PostProcessingModel()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class PostProcessingProfile : ScriptableObject
	{
		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuiltinDebugViewsModel debugViews;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FogModel fog;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AntialiasingModel antialiasing;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AmbientOcclusionModel ambientOcclusion;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ScreenSpaceReflectionModel screenSpaceReflection;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DepthOfFieldModel depthOfField;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MotionBlurModel motionBlur;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EyeAdaptationModel eyeAdaptation;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BloomModel bloom;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ColorGradingModel colorGrading;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UserLutModel userLut;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChromaticAberrationModel chromaticAberration;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GrainModel grain;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public VignetteModel vignette;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public DitheringModel dithering;

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xED771C", Offset = "0xED771C", VA = "0xED771C")]
		public PostProcessingProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BA")]
	public sealed class ColorGradingCurve
	{
		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_Loop;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ZeroValue;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Range;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationCurve m_InternalLoopingCurve;

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xAA201C", Offset = "0xAA201C", VA = "0xAA201C")]
		public ColorGradingCurve(AnimationCurve curve, float zeroValue, bool loop, Vector2 bounds)
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xAA0D18", Offset = "0xAA0D18", VA = "0xAA0D18")]
		public void Cache()
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xAA0F0C", Offset = "0xAA0F0C", VA = "0xAA0F0C")]
		public float Evaluate(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20002BB")]
	public static class GraphicsUtils
	{
		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D s_WhiteTexture;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Mesh s_Quad;

		[Token(Token = "0x1700012F")]
		public static bool isLinearColorSpace
		{
			[Token(Token = "0x60015D0")]
			[Address(RVA = "0xAA5544", Offset = "0xAA5544", VA = "0xAA5544")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000130")]
		public static bool supportsDX11
		{
			[Token(Token = "0x60015D1")]
			[Address(RVA = "0xAA60A8", Offset = "0xAA60A8", VA = "0xAA60A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000131")]
		public static Texture2D whiteTexture
		{
			[Token(Token = "0x60015D2")]
			[Address(RVA = "0xAA60D8", Offset = "0xAA60D8", VA = "0xAA60D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		public static Mesh quad
		{
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0xA9CD88", Offset = "0xA9CD88", VA = "0xA9CD88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xAA6218", Offset = "0xAA6218", VA = "0xAA6218")]
		public static void Blit(Material material, int pass)
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xAA631C", Offset = "0xAA631C", VA = "0xAA631C")]
		public static void ClearAndBlit(Texture source, RenderTexture destination, Material material, int pass, bool clearColor = true, bool clearDepth = false)
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xA9F628", Offset = "0xA9F628", VA = "0xA9F628")]
		public static void Destroy(Object obj)
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xAA64B8", Offset = "0xAA64B8", VA = "0xAA64B8")]
		public static void Dispose()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public sealed class MaterialFactory : IDisposable
	{
		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, Material> m_Materials;

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xAA6508", Offset = "0xAA6508", VA = "0xAA6508")]
		public MaterialFactory()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xA9CBB8", Offset = "0xA9CBB8", VA = "0xA9CBB8")]
		public Material Get(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xAA6584", Offset = "0xAA6584", VA = "0xAA6584", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public sealed class RenderTextureFactory : IDisposable
	{
		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xED7B50", Offset = "0xED7B50", VA = "0xED7B50")]
		public RenderTextureFactory()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xED7BCC", Offset = "0xED7BCC", VA = "0xED7BCC")]
		public RenderTexture Get(RenderTexture baseRenderTexture)
		{
			return null;
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xED7CEC", Offset = "0xED7CEC", VA = "0xED7CEC")]
		public RenderTexture Get(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, RenderTextureReadWrite rw = RenderTextureReadWrite.Default, FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, string name = "FactoryTempTexture")
		{
			return null;
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xED7DE0", Offset = "0xED7DE0", VA = "0xED7DE0")]
		public void Release(RenderTexture rt)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xED7F0C", Offset = "0xED7F0C", VA = "0xED7F0C")]
		public void ReleaseAll()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xED7FBC", Offset = "0xED7FBC", VA = "0xED7FBC", Slot = "4")]
		public void Dispose()
		{
		}
	}
}
namespace UnityEngine.AI
{
	[Token(Token = "0x20002BE")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x75B5B0", Offset = "0x75B5B0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x75B5B0", Offset = "0x75B5B0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x75B5B0", Offset = "0x75B5B0")]
	public class NavMeshLink : MonoBehaviour
	{
		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_AgentTypeID;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 m_StartPoint;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 m_EndPoint;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_Width;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int m_CostModifier;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool m_Bidirectional;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool m_AutoUpdatePosition;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int m_Area;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private NavMeshLinkInstance m_LinkInstance;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_LastPosition;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion m_LastRotation;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<NavMeshLink> s_Tracked;

		[Token(Token = "0x17000133")]
		public int agentTypeID
		{
			[Token(Token = "0x60015E1")]
			[Address(RVA = "0xA980F0", Offset = "0xA980F0", VA = "0xA980F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015E2")]
			[Address(RVA = "0xA980F8", Offset = "0xA980F8", VA = "0xA980F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public Vector3 startPoint
		{
			[Token(Token = "0x60015E3")]
			[Address(RVA = "0xA98154", Offset = "0xA98154", VA = "0xA98154")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60015E4")]
			[Address(RVA = "0xA98160", Offset = "0xA98160", VA = "0xA98160")]
			set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public Vector3 endPoint
		{
			[Token(Token = "0x60015E5")]
			[Address(RVA = "0xA98194", Offset = "0xA98194", VA = "0xA98194")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60015E6")]
			[Address(RVA = "0xA981A0", Offset = "0xA981A0", VA = "0xA981A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public float width
		{
			[Token(Token = "0x60015E7")]
			[Address(RVA = "0xA981D4", Offset = "0xA981D4", VA = "0xA981D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015E8")]
			[Address(RVA = "0xA981DC", Offset = "0xA981DC", VA = "0xA981DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public int costModifier
		{
			[Token(Token = "0x60015E9")]
			[Address(RVA = "0xA9820C", Offset = "0xA9820C", VA = "0xA9820C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015EA")]
			[Address(RVA = "0xA98214", Offset = "0xA98214", VA = "0xA98214")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public bool bidirectional
		{
			[Token(Token = "0x60015EB")]
			[Address(RVA = "0xA98244", Offset = "0xA98244", VA = "0xA98244")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015EC")]
			[Address(RVA = "0xA9824C", Offset = "0xA9824C", VA = "0xA9824C")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public bool autoUpdate
		{
			[Token(Token = "0x60015ED")]
			[Address(RVA = "0xA98280", Offset = "0xA98280", VA = "0xA98280")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015EE")]
			[Address(RVA = "0xA98288", Offset = "0xA98288", VA = "0xA98288")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public int area
		{
			[Token(Token = "0x60015EF")]
			[Address(RVA = "0xA98354", Offset = "0xA98354", VA = "0xA98354")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015F0")]
			[Address(RVA = "0xA9835C", Offset = "0xA9835C", VA = "0xA9835C")]
			set
			{
			}
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xA9838C", Offset = "0xA9838C", VA = "0xA9838C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xA98728", Offset = "0xA98728", VA = "0xA98728")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xA98128", Offset = "0xA98128", VA = "0xA98128")]
		public void UpdateLink()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xA985DC", Offset = "0xA985DC", VA = "0xA985DC")]
		private static void AddTracking(NavMeshLink link)
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xA98798", Offset = "0xA98798", VA = "0xA98798")]
		private static void RemoveTracking(NavMeshLink link)
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xA98290", Offset = "0xA98290", VA = "0xA98290")]
		private void SetAutoUpdate(bool value)
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xA9841C", Offset = "0xA9841C", VA = "0xA9841C")]
		private void AddLink()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xA988D4", Offset = "0xA988D4", VA = "0xA988D4")]
		private bool HasTransformChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xA98A3C", Offset = "0xA98A3C", VA = "0xA98A3C")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xA98A68", Offset = "0xA98A68", VA = "0xA98A68")]
		private static void UpdateTrackedInstances()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xA98BA0", Offset = "0xA98BA0", VA = "0xA98BA0")]
		public NavMeshLink()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x75B638", Offset = "0x75B638")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x75B638", Offset = "0x75B638")]
	public class NavMeshModifier : MonoBehaviour
	{
		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_OverrideArea;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int m_Area;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_IgnoreFromBuild;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<int> m_AffectedAgents;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<NavMeshModifier> s_NavMeshModifiers;

		[Token(Token = "0x1700013B")]
		public bool overrideArea
		{
			[Token(Token = "0x60015FD")]
			[Address(RVA = "0xA98D3C", Offset = "0xA98D3C", VA = "0xA98D3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015FE")]
			[Address(RVA = "0xA98D44", Offset = "0xA98D44", VA = "0xA98D44")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public int area
		{
			[Token(Token = "0x60015FF")]
			[Address(RVA = "0xA98D50", Offset = "0xA98D50", VA = "0xA98D50")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001600")]
			[Address(RVA = "0xA98D58", Offset = "0xA98D58", VA = "0xA98D58")]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public bool ignoreFromBuild
		{
			[Token(Token = "0x6001601")]
			[Address(RVA = "0xA98D60", Offset = "0xA98D60", VA = "0xA98D60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001602")]
			[Address(RVA = "0xA98D68", Offset = "0xA98D68", VA = "0xA98D68")]
			set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public static List<NavMeshModifier> activeModifiers
		{
			[Token(Token = "0x6001603")]
			[Address(RVA = "0xA98D74", Offset = "0xA98D74", VA = "0xA98D74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xA98DDC", Offset = "0xA98DDC", VA = "0xA98DDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xA98EAC", Offset = "0xA98EAC", VA = "0xA98EAC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xA98F30", Offset = "0xA98F30", VA = "0xA98F30")]
		public bool AffectsAgentType(int agentTypeID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xA98FCC", Offset = "0xA98FCC", VA = "0xA98FCC")]
		public NavMeshModifier()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x75B6AC", Offset = "0x75B6AC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x75B6AC", Offset = "0x75B6AC")]
	public class NavMeshModifierVolume : MonoBehaviour
	{
		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 m_Size;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 m_Center;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int m_Area;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<int> m_AffectedAgents;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<NavMeshModifierVolume> s_NavMeshModifiers;

		[Token(Token = "0x1700013F")]
		public Vector3 size
		{
			[Token(Token = "0x6001609")]
			[Address(RVA = "0xA99108", Offset = "0xA99108", VA = "0xA99108")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600160A")]
			[Address(RVA = "0xA99114", Offset = "0xA99114", VA = "0xA99114")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public Vector3 center
		{
			[Token(Token = "0x600160B")]
			[Address(RVA = "0xA99120", Offset = "0xA99120", VA = "0xA99120")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600160C")]
			[Address(RVA = "0xA9912C", Offset = "0xA9912C", VA = "0xA9912C")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public int area
		{
			[Token(Token = "0x600160D")]
			[Address(RVA = "0xA99138", Offset = "0xA99138", VA = "0xA99138")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600160E")]
			[Address(RVA = "0xA99140", Offset = "0xA99140", VA = "0xA99140")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public static List<NavMeshModifierVolume> activeModifiers
		{
			[Token(Token = "0x600160F")]
			[Address(RVA = "0xA99148", Offset = "0xA99148", VA = "0xA99148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xA991B0", Offset = "0xA991B0", VA = "0xA991B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xA99280", Offset = "0xA99280", VA = "0xA99280")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xA99304", Offset = "0xA99304", VA = "0xA99304")]
		public bool AffectsAgentType(int agentTypeID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xA993A0", Offset = "0xA993A0", VA = "0xA993A0")]
		public NavMeshModifierVolume()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public enum CollectObjects
	{
		[Token(Token = "0x400168E")]
		All,
		[Token(Token = "0x400168F")]
		Volume,
		[Token(Token = "0x4001690")]
		Children
	}
	[Token(Token = "0x20002C2")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x75B720", Offset = "0x75B720")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x75B720", Offset = "0x75B720")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x75B720", Offset = "0x75B720")]
	public class NavMeshSurface : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BD28", Offset = "0x75BD28")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<NavMeshModifierVolume> <>9__76_0;

			[Token(Token = "0x4001E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<NavMeshModifier> <>9__77_0;

			[Token(Token = "0x4001E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<NavMeshBuildSource> <>9__77_1;

			[Token(Token = "0x4001E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Predicate<NavMeshBuildSource> <>9__77_2;

			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0xA9BCFC", Offset = "0xA9BCFC", VA = "0xA9BCFC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B8C")]
			[Address(RVA = "0xA9BD04", Offset = "0xA9BD04", VA = "0xA9BD04")]
			internal bool <AppendModifierVolumes>b__76_0(NavMeshModifierVolume x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0xA9BD30", Offset = "0xA9BD30", VA = "0xA9BD30")]
			internal bool <CollectSources>b__77_0(NavMeshModifier x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0xA9BD5C", Offset = "0xA9BD5C", VA = "0xA9BD5C")]
			internal bool <CollectSources>b__77_1(NavMeshBuildSource x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0xA9BE5C", Offset = "0xA9BE5C", VA = "0xA9BE5C")]
			internal bool <CollectSources>b__77_2(NavMeshBuildSource x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_AgentTypeID;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private CollectObjects m_CollectObjects;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 m_Size;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 m_Center;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LayerMask m_LayerMask;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private NavMeshCollectGeometry m_UseGeometry;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int m_DefaultArea;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool m_IgnoreNavMeshAgent;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[SerializeField]
		private bool m_IgnoreNavMeshObstacle;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[SerializeField]
		private bool m_OverrideTileSize;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int m_TileSize;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool m_OverrideVoxelSize;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_VoxelSize;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private bool m_BuildHeightMesh;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x761AD0", Offset = "0x761AD0")]
		[SerializeField]
		private NavMeshData m_NavMeshData;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshDataInstance m_NavMeshDataInstance;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_LastPosition;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion m_LastRotation;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<NavMeshSurface> s_NavMeshSurfaces;

		[Token(Token = "0x17000143")]
		public int agentTypeID
		{
			[Token(Token = "0x6001615")]
			[Address(RVA = "0xA99548", Offset = "0xA99548", VA = "0xA99548")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001616")]
			[Address(RVA = "0xA99550", Offset = "0xA99550", VA = "0xA99550")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public CollectObjects collectObjects
		{
			[Token(Token = "0x6001617")]
			[Address(RVA = "0xA99558", Offset = "0xA99558", VA = "0xA99558")]
			get
			{
				return default(CollectObjects);
			}
			[Token(Token = "0x6001618")]
			[Address(RVA = "0xA99560", Offset = "0xA99560", VA = "0xA99560")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public Vector3 size
		{
			[Token(Token = "0x6001619")]
			[Address(RVA = "0xA99568", Offset = "0xA99568", VA = "0xA99568")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600161A")]
			[Address(RVA = "0xA99574", Offset = "0xA99574", VA = "0xA99574")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public Vector3 center
		{
			[Token(Token = "0x600161B")]
			[Address(RVA = "0xA99580", Offset = "0xA99580", VA = "0xA99580")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600161C")]
			[Address(RVA = "0xA9958C", Offset = "0xA9958C", VA = "0xA9958C")]
			set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public LayerMask layerMask
		{
			[Token(Token = "0x600161D")]
			[Address(RVA = "0xA99598", Offset = "0xA99598", VA = "0xA99598")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x600161E")]
			[Address(RVA = "0xA995A0", Offset = "0xA995A0", VA = "0xA995A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public NavMeshCollectGeometry useGeometry
		{
			[Token(Token = "0x600161F")]
			[Address(RVA = "0xA995A8", Offset = "0xA995A8", VA = "0xA995A8")]
			get
			{
				return default(NavMeshCollectGeometry);
			}
			[Token(Token = "0x6001620")]
			[Address(RVA = "0xA995B0", Offset = "0xA995B0", VA = "0xA995B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public int defaultArea
		{
			[Token(Token = "0x6001621")]
			[Address(RVA = "0xA995B8", Offset = "0xA995B8", VA = "0xA995B8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001622")]
			[Address(RVA = "0xA995C0", Offset = "0xA995C0", VA = "0xA995C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public bool ignoreNavMeshAgent
		{
			[Token(Token = "0x6001623")]
			[Address(RVA = "0xA995C8", Offset = "0xA995C8", VA = "0xA995C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001624")]
			[Address(RVA = "0xA995D0", Offset = "0xA995D0", VA = "0xA995D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public bool ignoreNavMeshObstacle
		{
			[Token(Token = "0x6001625")]
			[Address(RVA = "0xA995DC", Offset = "0xA995DC", VA = "0xA995DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001626")]
			[Address(RVA = "0xA995E4", Offset = "0xA995E4", VA = "0xA995E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public bool overrideTileSize
		{
			[Token(Token = "0x6001627")]
			[Address(RVA = "0xA995F0", Offset = "0xA995F0", VA = "0xA995F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001628")]
			[Address(RVA = "0xA995F8", Offset = "0xA995F8", VA = "0xA995F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public int tileSize
		{
			[Token(Token = "0x6001629")]
			[Address(RVA = "0xA99604", Offset = "0xA99604", VA = "0xA99604")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600162A")]
			[Address(RVA = "0xA9960C", Offset = "0xA9960C", VA = "0xA9960C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public bool overrideVoxelSize
		{
			[Token(Token = "0x600162B")]
			[Address(RVA = "0xA99614", Offset = "0xA99614", VA = "0xA99614")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600162C")]
			[Address(RVA = "0xA9961C", Offset = "0xA9961C", VA = "0xA9961C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public float voxelSize
		{
			[Token(Token = "0x600162D")]
			[Address(RVA = "0xA99628", Offset = "0xA99628", VA = "0xA99628")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600162E")]
			[Address(RVA = "0xA99630", Offset = "0xA99630", VA = "0xA99630")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public bool buildHeightMesh
		{
			[Token(Token = "0x600162F")]
			[Address(RVA = "0xA99638", Offset = "0xA99638", VA = "0xA99638")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001630")]
			[Address(RVA = "0xA99640", Offset = "0xA99640", VA = "0xA99640")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public NavMeshData navMeshData
		{
			[Token(Token = "0x6001631")]
			[Address(RVA = "0xA9964C", Offset = "0xA9964C", VA = "0xA9964C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001632")]
			[Address(RVA = "0xA99654", Offset = "0xA99654", VA = "0xA99654")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public static List<NavMeshSurface> activeSurfaces
		{
			[Token(Token = "0x6001633")]
			[Address(RVA = "0xA9965C", Offset = "0xA9965C", VA = "0xA9965C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xA996C4", Offset = "0xA996C4", VA = "0xA996C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xA99A44", Offset = "0xA99A44", VA = "0xA99A44")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xA998D0", Offset = "0xA998D0", VA = "0xA998D0")]
		public void AddData()
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xA99AB8", Offset = "0xA99AB8", VA = "0xA99AB8")]
		public void RemoveData()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xA99C20", Offset = "0xA99C20", VA = "0xA99C20")]
		public NavMeshBuildSettings GetBuildSettings()
		{
			return default(NavMeshBuildSettings);
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xA99DAC", Offset = "0xA99DAC", VA = "0xA99DAC")]
		public void BuildNavMesh()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xA9AF54", Offset = "0xA9AF54", VA = "0xA9AF54")]
		public AsyncOperation UpdateNavMesh(NavMeshData data)
		{
			return null;
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xA99730", Offset = "0xA99730", VA = "0xA99730")]
		private static void Register(NavMeshSurface surface)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xA99AE4", Offset = "0xA99AE4", VA = "0xA99AE4")]
		private static void Unregister(NavMeshSurface surface)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xA9B09C", Offset = "0xA9B09C", VA = "0xA9B09C")]
		private static void UpdateActive()
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xA9B1BC", Offset = "0xA9B1BC", VA = "0xA9B1BC")]
		private void AppendModifierVolumes(ref List<NavMeshBuildSource> sources)
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xA9A024", Offset = "0xA9A024", VA = "0xA9A024")]
		private List<NavMeshBuildSource> CollectSources()
		{
			return null;
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xA9A780", Offset = "0xA9A780", VA = "0xA9A780")]
		private static Vector3 Abs(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xA9B73C", Offset = "0xA9B73C", VA = "0xA9B73C")]
		private static Bounds GetWorldBounds(Matrix4x4 mat, Bounds bounds)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xA9A828", Offset = "0xA9A828", VA = "0xA9A828")]
		private Bounds CalculateWorldBounds(List<NavMeshBuildSource> sources)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xA9B980", Offset = "0xA9B980", VA = "0xA9B980")]
		private bool HasTransformChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xA9B178", Offset = "0xA9B178", VA = "0xA9B178")]
		private void UpdateDataIfTransformChanged()
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xA9BAE8", Offset = "0xA9BAE8", VA = "0xA9BAE8")]
		public NavMeshSurface()
		{
		}
	}
}
namespace Metaballs
{
	[Token(Token = "0x20002C3")]
	public static class Utils
	{
		[Token(Token = "0x6001647")]
		[Address(RVA = "0xB8D3F8", Offset = "0xB8D3F8", VA = "0xB8D3F8")]
		public static void DestroyChildren(Transform parent)
		{
		}

		[Token(Token = "0x6001648")]
		public static T StringToEnumType<T>(string value, T defaultValue)
		{
			return (T)null;
		}

		[Token(Token = "0x6001649")]
		public static List<T> GetComponentsRecursive<T>(Transform t) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600164A")]
		public static T FindComponentInParents<T>(Transform t) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xB8D5A4", Offset = "0xB8D5A4", VA = "0xB8D5A4")]
		public static void ConvertMeshIntoWireFrame(Mesh mesh)
		{
		}
	}
}
namespace AmplifyColor
{
	[Token(Token = "0x20002C4")]
	public enum Quality
	{
		[Token(Token = "0x40016A5")]
		Mobile,
		[Token(Token = "0x40016A6")]
		Standard
	}
	[Token(Token = "0x20002C5")]
	public enum Tonemapping
	{
		[Token(Token = "0x40016A8")]
		Disabled,
		[Token(Token = "0x40016A9")]
		Photographic,
		[Token(Token = "0x40016AA")]
		FilmicHable,
		[Token(Token = "0x40016AB")]
		FilmicACES
	}
	[Serializable]
	[Token(Token = "0x20002C6")]
	public class VersionInfo
	{
		[Token(Token = "0x40016AC")]
		public const byte Major = 1;

		[Token(Token = "0x40016AD")]
		public const byte Minor = 6;

		[Token(Token = "0x40016AE")]
		public const byte Release = 3;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string StageSuffix;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string TrialSuffix;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int m_major;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int m_minor;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_release;

		[Token(Token = "0x17000153")]
		public int Number
		{
			[Token(Token = "0x600164E")]
			[Address(RVA = "0xB613E4", Offset = "0xB613E4", VA = "0xB613E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xB611E8", Offset = "0xB611E8", VA = "0xB611E8")]
		public static string StaticToString()
		{
			return null;
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xB612E4", Offset = "0xB612E4", VA = "0xB612E4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xB61404", Offset = "0xB61404", VA = "0xB61404")]
		private VersionInfo()
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xB6143C", Offset = "0xB6143C", VA = "0xB6143C")]
		private VersionInfo(byte major, byte minor, byte release)
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xB61488", Offset = "0xB61488", VA = "0xB61488")]
		public static VersionInfo Current()
		{
			return null;
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xB614F8", Offset = "0xB614F8", VA = "0xB614F8")]
		public static bool Matches(VersionInfo version)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20002C7")]
	public class VolumeEffectField
	{
		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fieldName;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string fieldType;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float valueSingle;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color valueColor;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool valueBoolean;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 valueVector2;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 valueVector3;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector4 valueVector4;

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xB61FAC", Offset = "0xB61FAC", VA = "0xB61FAC")]
		public VolumeEffectField(string fieldName, string fieldType)
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xB63930", Offset = "0xB63930", VA = "0xB63930")]
		public VolumeEffectField(FieldInfo pi, Component c)
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xB63840", Offset = "0xB63840", VA = "0xB63840")]
		public static bool IsValidType(string type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xB64E5C", Offset = "0xB64E5C", VA = "0xB64E5C")]
		public void UpdateValue(object val)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C8")]
	public class VolumeEffectComponent
	{
		[Token(Token = "0x2000469")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BD38", Offset = "0x75BD38")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VolumeEffectFieldFlags fieldFlags;

			[Token(Token = "0x6001B90")]
			[Address(RVA = "0xB63A38", Offset = "0xB63A38", VA = "0xB63A38")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001B91")]
			[Address(RVA = "0xB63D90", Offset = "0xB63D90", VA = "0xB63D90")]
			internal bool <UpdateComponent>b__0(VolumeEffectField s)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200046A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BD48", Offset = "0x75BD48")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<FieldInfo, bool> <>9__9_0;

			[Token(Token = "0x4001E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectField, string> <>9__10_0;

			[Token(Token = "0x6001B93")]
			[Address(RVA = "0xB63D30", Offset = "0xB63D30", VA = "0xB63D30")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B94")]
			[Address(RVA = "0xB63D38", Offset = "0xB63D38", VA = "0xB63D38")]
			internal bool <ListAcceptableFields>b__9_0(FieldInfo f)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B95")]
			[Address(RVA = "0xB63D78", Offset = "0xB63D78", VA = "0xB63D78")]
			internal string <GetFieldNames>b__10_0(VolumeEffectField r)
			{
				return null;
			}
		}

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string componentName;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<VolumeEffectField> fields;

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xB61E34", Offset = "0xB61E34", VA = "0xB61E34")]
		public VolumeEffectComponent(string name)
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xB63728", Offset = "0xB63728", VA = "0xB63728")]
		public VolumeEffectField AddField(FieldInfo pi, Component c)
		{
			return null;
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xB63730", Offset = "0xB63730", VA = "0xB63730")]
		public VolumeEffectField AddField(FieldInfo pi, Component c, int position)
		{
			return null;
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xB639D0", Offset = "0xB639D0", VA = "0xB639D0")]
		public void RemoveEffectField(VolumeEffectField field)
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xB623C4", Offset = "0xB623C4", VA = "0xB623C4")]
		public VolumeEffectComponent(Component c, VolumeEffectComponentFlags compFlags)
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xB620FC", Offset = "0xB620FC", VA = "0xB620FC")]
		public void UpdateComponent(Component c, VolumeEffectComponentFlags compFlags)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xB61ECC", Offset = "0xB61ECC", VA = "0xB61ECC")]
		public VolumeEffectField FindEffectField(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xB63A40", Offset = "0xB63A40", VA = "0xB63A40")]
		public static FieldInfo[] ListAcceptableFields(Component c)
		{
			return null;
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xB63BC0", Offset = "0xB63BC0", VA = "0xB63BC0")]
		public string[] GetFieldNames()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20002C9")]
	public class VolumeEffect
	{
		[Serializable]
		[Token(Token = "0x200046B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BD58", Offset = "0x75BD58")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Component, bool> <>9__10_0;

			[Token(Token = "0x4001E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectComponent, string> <>9__11_0;

			[Token(Token = "0x6001B97")]
			[Address(RVA = "0xB635F0", Offset = "0xB635F0", VA = "0xB635F0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B98")]
			[Address(RVA = "0xB635F8", Offset = "0xB635F8", VA = "0xB635F8")]
			internal bool <ListAcceptableComponents>b__10_0(Component comp)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B99")]
			[Address(RVA = "0xB63710", Offset = "0xB63710", VA = "0xB63710")]
			internal string <GetComponentNames>b__11_0(VolumeEffectComponent r)
			{
				return null;
			}
		}

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AmplifyColorBase gameObject;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<VolumeEffectComponent> components;

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xB615B0", Offset = "0xB615B0", VA = "0xB615B0")]
		public VolumeEffect(AmplifyColorBase effect)
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xB61648", Offset = "0xB61648", VA = "0xB61648")]
		public static VolumeEffect BlendValuesToVolumeEffect(VolumeEffectFlags flags, VolumeEffect volume1, VolumeEffect volume2, float blend)
		{
			return null;
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xB61FFC", Offset = "0xB61FFC", VA = "0xB61FFC")]
		public VolumeEffectComponent AddComponent(Component c, VolumeEffectComponentFlags compFlags)
		{
			return null;
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xB625D4", Offset = "0xB625D4", VA = "0xB625D4")]
		public void RemoveEffectComponent(VolumeEffectComponent comp)
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xB6263C", Offset = "0xB6263C", VA = "0xB6263C")]
		public void UpdateVolume()
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xB627F4", Offset = "0xB627F4", VA = "0xB627F4")]
		public void SetValues(AmplifyColorBase targetColor)
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xB62DD8", Offset = "0xB62DD8", VA = "0xB62DD8")]
		public void BlendValues(AmplifyColorBase targetColor, VolumeEffect other, float blendAmount)
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xB61D54", Offset = "0xB61D54", VA = "0xB61D54")]
		public VolumeEffectComponent FindEffectComponent(string compName)
		{
			return null;
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xB632D0", Offset = "0xB632D0", VA = "0xB632D0")]
		public static Component[] ListAcceptableComponents(AmplifyColorBase go)
		{
			return null;
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xB63480", Offset = "0xB63480", VA = "0xB63480")]
		public string[] GetComponentNames()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20002CA")]
	public class VolumeEffectContainer
	{
		[Serializable]
		[Token(Token = "0x200046C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BD68", Offset = "0x75BD68")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VolumeEffect, AmplifyColorBase> <>9__6_0;

			[Token(Token = "0x6001B9B")]
			[Address(RVA = "0xB64E3C", Offset = "0xB64E3C", VA = "0xB64E3C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B9C")]
			[Address(RVA = "0xB64E44", Offset = "0xB64E44", VA = "0xB64E44")]
			internal AmplifyColorBase <GetStoredEffects>b__6_0(VolumeEffect r)
			{
				return null;
			}
		}

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<VolumeEffect> volumes;

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xB648C8", Offset = "0xB648C8", VA = "0xB648C8")]
		public VolumeEffectContainer()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xB64944", Offset = "0xB64944", VA = "0xB64944")]
		public void AddColorEffect(AmplifyColorBase colorEffect)
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xB64BD8", Offset = "0xB64BD8", VA = "0xB64BD8")]
		public VolumeEffect AddJustColorEffect(AmplifyColorBase colorEffect)
		{
			return null;
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xB649E4", Offset = "0xB649E4", VA = "0xB649E4")]
		public VolumeEffect FindVolumeEffect(AmplifyColorBase colorEffect)
		{
			return null;
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xB64C64", Offset = "0xB64C64", VA = "0xB64C64")]
		public void RemoveVolumeEffect(VolumeEffect volume)
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xB64CCC", Offset = "0xB64CCC", VA = "0xB64CCC")]
		public AmplifyColorBase[] GetStoredEffects()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20002CB")]
	public class VolumeEffectFieldFlags
	{
		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fieldName;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string fieldType;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool blendFlag;

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xB64174", Offset = "0xB64174", VA = "0xB64174")]
		public VolumeEffectFieldFlags(FieldInfo pi)
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xB63FCC", Offset = "0xB63FCC", VA = "0xB63FCC")]
		public VolumeEffectFieldFlags(VolumeEffectField field)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CC")]
	public class VolumeEffectComponentFlags
	{
		[Token(Token = "0x200046D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BD78", Offset = "0x75BD78")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VolumeEffectField field;

			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0xB64424", Offset = "0xB64424", VA = "0xB64424")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0xB64858", Offset = "0xB64858", VA = "0xB64858")]
			internal bool <UpdateComponentFlags>b__0(VolumeEffectFieldFlags s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200046E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BD88", Offset = "0x75BD88")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FieldInfo pi;

			[Token(Token = "0x6001B9F")]
			[Address(RVA = "0xB645F4", Offset = "0xB645F4", VA = "0xB645F4")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001BA0")]
			[Address(RVA = "0xB64884", Offset = "0xB64884", VA = "0xB64884")]
			internal bool <UpdateComponentFlags>b__0(VolumeEffectFieldFlags s)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200046F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BD98", Offset = "0x75BD98")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VolumeEffectFieldFlags, bool> <>9__8_0;

			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectFieldFlags, string> <>9__8_1;

			[Token(Token = "0x6001BA2")]
			[Address(RVA = "0xB64820", Offset = "0xB64820", VA = "0xB64820")]
			public <>c()
			{
			}

			[Token(Token = "0x6001BA3")]
			[Address(RVA = "0xB64828", Offset = "0xB64828", VA = "0xB64828")]
			internal bool <GetFieldNames>b__8_0(VolumeEffectFieldFlags r)
			{
				return default(bool);
			}

			[Token(Token = "0x6001BA4")]
			[Address(RVA = "0xB64840", Offset = "0xB64840", VA = "0xB64840")]
			internal string <GetFieldNames>b__8_1(VolumeEffectFieldFlags r)
			{
				return null;
			}
		}

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string componentName;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<VolumeEffectFieldFlags> componentFields;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool blendFlag;

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xB63DBC", Offset = "0xB63DBC", VA = "0xB63DBC")]
		public VolumeEffectComponentFlags(string name)
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xB63E54", Offset = "0xB63E54", VA = "0xB63E54")]
		public VolumeEffectComponentFlags(VolumeEffectComponent comp)
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xB64024", Offset = "0xB64024", VA = "0xB64024")]
		public VolumeEffectComponentFlags(Component c)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xB641F8", Offset = "0xB641F8", VA = "0xB641F8")]
		public void UpdateComponentFlags(VolumeEffectComponent comp)
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xB6442C", Offset = "0xB6442C", VA = "0xB6442C")]
		public void UpdateComponentFlags(Component c)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xB645FC", Offset = "0xB645FC", VA = "0xB645FC")]
		public string[] GetFieldNames()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20002CD")]
	public class VolumeEffectFlags
	{
		[Token(Token = "0x2000470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BDA8", Offset = "0x75BDA8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Component c;

			[Token(Token = "0x6001BA5")]
			[Address(RVA = "0xB65268", Offset = "0xB65268", VA = "0xB65268")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001BA6")]
			[Address(RVA = "0xB65AB4", Offset = "0xB65AB4", VA = "0xB65AB4")]
			internal bool <AddComponent>b__0(VolumeEffectComponentFlags s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000471")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BDB8", Offset = "0x75BDB8")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VolumeEffectComponent comp;

			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0xB6548C", Offset = "0xB6548C", VA = "0xB6548C")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001BA8")]
			[Address(RVA = "0xB65AFC", Offset = "0xB65AFC", VA = "0xB65AFC")]
			internal bool <UpdateFlags>b__0(VolumeEffectComponentFlags s)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000472")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BDC8", Offset = "0x75BDC8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VolumeEffectComponentFlags, bool> <>9__7_0;

			[Token(Token = "0x4001E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectComponentFlags, string> <>9__7_1;

			[Token(Token = "0x6001BAA")]
			[Address(RVA = "0xB65A7C", Offset = "0xB65A7C", VA = "0xB65A7C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001BAB")]
			[Address(RVA = "0xB65A84", Offset = "0xB65A84", VA = "0xB65A84")]
			internal bool <GetComponentNames>b__7_0(VolumeEffectComponentFlags r)
			{
				return default(bool);
			}

			[Token(Token = "0x6001BAC")]
			[Address(RVA = "0xB65A9C", Offset = "0xB65A9C", VA = "0xB65A9C")]
			internal string <GetComponentNames>b__7_1(VolumeEffectComponentFlags r)
			{
				return null;
			}
		}

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<VolumeEffectComponentFlags> components;

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xB650B4", Offset = "0xB650B4", VA = "0xB650B4")]
		public VolumeEffectFlags()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xB65130", Offset = "0xB65130", VA = "0xB65130")]
		public void AddComponent(Component c)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xB65270", Offset = "0xB65270", VA = "0xB65270")]
		public void UpdateFlags(VolumeEffect effectVol)
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xB65494", Offset = "0xB65494", VA = "0xB65494")]
		public static void UpdateCamFlags(AmplifyColorBase[] effects, AmplifyColorVolumeBase[] volumes)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xB655C0", Offset = "0xB655C0", VA = "0xB655C0")]
		public VolumeEffect GenerateEffectData(AmplifyColorBase go)
		{
			return null;
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xB65778", Offset = "0xB65778", VA = "0xB65778")]
		public VolumeEffectComponentFlags FindComponentFlags(string compName)
		{
			return null;
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xB65858", Offset = "0xB65858", VA = "0xB65858")]
		public string[] GetComponentNames()
		{
			return null;
		}
	}
}
namespace Bhaptics.Tact.Unity
{
	[Token(Token = "0x20002CE")]
	public class AndroidHaptic : IHaptic
	{
		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject androidJavaObject;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<HapticDevice> deviceList;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> registeredCache;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly object[] SubmitRegisteredParams;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int[] Empty;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly object[] EmptyParams;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly RotationOption DefaultRotationOption;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly object syncLock;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<PositionType, int[]> updatedList;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IntPtr AndroidJavaObjectPtr;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IntPtr SubmitRegisteredPtr;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IntPtr SubmitRegisteredWithTimePtr;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IntPtr RegisterPtr;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected IntPtr RegisterReflectedPtr;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected IntPtr PingPtr;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected IntPtr PingAllPtr;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected IntPtr IsRegisteredPtr;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected IntPtr IsPlayingPtr;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected IntPtr IsPlayingAnythingPtr;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected IntPtr ToggleStreamPtr;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected IntPtr IsStreamingEnablePtr;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected IntPtr GetStreamingHostsPtr;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected IntPtr ShowBluetoothPtr;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected IntPtr RefreshPairingInfoPtr;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected IntPtr EnableDevicePtr;

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xACBB58", Offset = "0xACBB58", VA = "0xACBB58")]
		public AndroidHaptic()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xACC440", Offset = "0xACC440", VA = "0xACC440")]
		public List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xACC7E0", Offset = "0xACC7E0", VA = "0xACC7E0")]
		public bool IsStreamingEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xACC900", Offset = "0xACC900", VA = "0xACC900")]
		public void ToggleStreaming()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xACCA50", Offset = "0xACCA50", VA = "0xACCA50", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xACCB68", Offset = "0xACCB68", VA = "0xACCB68", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xACCD90", Offset = "0xACCD90", VA = "0xACCD90", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xACCE98", Offset = "0xACCE98", VA = "0xACCE98", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xACCFDC", Offset = "0xACCFDC", VA = "0xACCFDC", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xACD094", Offset = "0xACD094", VA = "0xACD094", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xACD1DC", Offset = "0xACD1DC", VA = "0xACD1DC", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xACD324", Offset = "0xACD324", VA = "0xACD324", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xACD860", Offset = "0xACD860", VA = "0xACD860", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xACDE78", Offset = "0xACDE78", VA = "0xACDE78", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xACDF10", Offset = "0xACDF10", VA = "0xACDF10", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xACE218", Offset = "0xACE218", VA = "0xACE218", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xACE230", Offset = "0xACE230", VA = "0xACE230", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xACE34C", Offset = "0xACE34C", VA = "0xACE34C", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xACE5A8", Offset = "0xACE5A8", VA = "0xACE5A8", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xACE81C", Offset = "0xACE81C", VA = "0xACE81C", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xACDF34", Offset = "0xACDF34", VA = "0xACDF34")]
		private void SubmitRequest(string key, string altKey, float intensity, float duration, float offsetAngleX, float offsetY)
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xACE97C", Offset = "0xACE97C", VA = "0xACE97C", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xACC300", Offset = "0xACC300", VA = "0xACC300")]
		public List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xACED10", Offset = "0xACED10", VA = "0xACED10")]
		public void TogglePosition(string address)
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xACEE60", Offset = "0xACEE60", VA = "0xACEE60")]
		public void PingAll()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xACEF14", Offset = "0xACEF14", VA = "0xACEF14")]
		public void Ping(string address)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xACF018", Offset = "0xACF018", VA = "0xACF018")]
		public void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xACF0B8", Offset = "0xACF0B8", VA = "0xACF0B8")]
		public void EnableDevice(string address, bool boo)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xACF210", Offset = "0xACF210", VA = "0xACF210")]
		public void RefreshPairingInfo()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xACC9B4", Offset = "0xACC9B4", VA = "0xACC9B4")]
		private void CallNativeVoidMethod(IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xACC860", Offset = "0xACC860", VA = "0xACC860")]
		private bool CallNativeBoolMethod(IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20002CF")]
	public class HapticDevice
	{
		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsPaired;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsConnected;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceName;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionType Position;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Address;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositionType[] Candidates;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsEnable;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool IsAudioJack;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int Battery;

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xACFAD0", Offset = "0xACFAD0", VA = "0xACFAD0")]
		public HapticDevice()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public static class AndroidUtils
	{
		[Serializable]
		[Token(Token = "0x2000473")]
		private class Wrapper<T>
		{
			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] array;

			[Token(Token = "0x6001BAD")]
			public Wrapper()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000474")]
		private class Device
		{
			[Token(Token = "0x4001E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool paired;

			[Token(Token = "0x4001E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string deviceName;

			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int position;

			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool connected;

			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string address;

			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int battery;

			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool enable;

			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			public bool audioJackIn;

			[Token(Token = "0x6001BAE")]
			[Address(RVA = "0xACFAD8", Offset = "0xACFAD8", VA = "0xACFAD8")]
			public Device()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000475")]
		public class StreamHost
		{
			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x4001E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool connected;

			[Token(Token = "0x6001BAF")]
			[Address(RVA = "0xACFAE0", Offset = "0xACFAE0", VA = "0xACFAE0")]
			public StreamHost()
			{
			}
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xACF7CC", Offset = "0xACF7CC", VA = "0xACF7CC")]
		private static PositionType ToDeviceType(int type)
		{
			return default(PositionType);
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xACF7F0", Offset = "0xACF7F0", VA = "0xACF7F0")]
		private static PositionType[] ToCandidates(int type)
		{
			return null;
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xACF99C", Offset = "0xACF99C", VA = "0xACF99C")]
		public static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xACF9C4", Offset = "0xACF9C4", VA = "0xACF9C4")]
		public static bool CanChangePosition(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A5")]
		public static T[] GetJsonArray<T>(string json)
		{
			return null;
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xACF9D4", Offset = "0xACF9D4", VA = "0xACF9D4")]
		private static HapticDevice Convert(Device d)
		{
			return null;
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xACEC20", Offset = "0xACEC20", VA = "0xACEC20")]
		public static List<HapticDevice> ConvertToBhapticsDevices(string[] deviceJson)
		{
			return null;
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xACF2B0", Offset = "0xACF2B0", VA = "0xACF2B0")]
		public static void CallNativeVoidMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xACF4C4", Offset = "0xACF4C4", VA = "0xACF4C4")]
		public static bool CallNativeBoolMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002D1")]
	public class AndroidWidget_ControlButton : MonoBehaviour
	{
		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PositionType DeviceType;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x761B5C", Offset = "0x761B5C")]
		[SerializeField]
		private Sprite defaultImage;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite pairImage;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite defaultHoverImage;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite pairHoverImage;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform pairDeviceCount;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button button;

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xACFAE8", Offset = "0xACFAE8", VA = "0xACFAE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xACFBA0", Offset = "0xACFBA0", VA = "0xACFBA0")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xAD0320", Offset = "0xAD0320", VA = "0xAD0320")]
		public void OnPingDevice()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xAD057C", Offset = "0xAD057C", VA = "0xAD057C")]
		public void OnClickDevice()
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xAD060C", Offset = "0xAD060C", VA = "0xAD060C")]
		public AndroidWidget_ControlButton()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class AndroidWidget_ObjectPool : MonoBehaviour
	{
		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScrollRect pariedDeviceScrollrect;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AndroidWidget_PairedDeviceUI pairedDeviceUIGameObject;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int objectCount;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AndroidWidget_PairedDeviceUI> pairedUIList;

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xAD0614", Offset = "0xAD0614", VA = "0xAD0614")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xAD077C", Offset = "0xAD077C", VA = "0xAD077C")]
		public AndroidWidget_PairedDeviceUI GetPairedDeviceUI()
		{
			return null;
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xAD0854", Offset = "0xAD0854", VA = "0xAD0854")]
		public void DisableAll()
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xAD08FC", Offset = "0xAD08FC", VA = "0xAD08FC")]
		public AndroidWidget_ObjectPool()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class AndroidWidget_PairedDeviceUI : MonoBehaviour
	{
		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x761C18", Offset = "0x761C18")]
		[SerializeField]
		private Image deviceImage;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text deviceName;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button toggleButton;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x761C94", Offset = "0x761C94")]
		[SerializeField]
		private Sprite leftSide;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite rightSide;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HapticDevice device;

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xAD0904", Offset = "0xAD0904", VA = "0xAD0904")]
		private void Start()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xAD09DC", Offset = "0xAD09DC", VA = "0xAD09DC")]
		public void Refresh(HapticDevice tactDevice, Bhaptics_Widget_Setting setting)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xAD0CCC", Offset = "0xAD0CCC", VA = "0xAD0CCC")]
		private void OnPing()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xAD0F04", Offset = "0xAD0F04", VA = "0xAD0F04")]
		private void OnSwap()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xAD1090", Offset = "0xAD1090", VA = "0xAD1090")]
		public AndroidWidget_PairedDeviceUI()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class AndroidWidget_SettingUIAnimation : MonoBehaviour
	{
		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject SettingUI;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool settingPanelEnable;

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xAD1098", Offset = "0xAD1098", VA = "0xAD1098")]
		private void Start()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xAD1110", Offset = "0xAD1110", VA = "0xAD1110")]
		public void Hide()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xAD1130", Offset = "0xAD1130", VA = "0xAD1130")]
		public void Show()
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xAD1150", Offset = "0xAD1150", VA = "0xAD1150")]
		public void ToggleSettingButton()
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xAD1260", Offset = "0xAD1260", VA = "0xAD1260")]
		public AndroidWidget_SettingUIAnimation()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class AndroidWidget_UI : MonoBehaviour
	{
		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject uiContainer;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button pingAllButton;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x761D20", Offset = "0x761D20")]
		[SerializeField]
		private Bhaptics_Widget_Setting WidgetSetting;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AndroidWidget_ObjectPool settingObjectPool;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource buttonClickAudio;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool widgetActive;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AndroidWidget_ControlButton[] controllButtons;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidWidget_UI Instance;

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xAD1268", Offset = "0xAD1268", VA = "0xAD1268")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xAD16F8", Offset = "0xAD16F8", VA = "0xAD16F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xAD13E8", Offset = "0xAD13E8", VA = "0xAD13E8")]
		private void InitializeButtons()
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xAD1954", Offset = "0xAD1954", VA = "0xAD1954")]
		public void ToggleWidgetButton()
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xAD19EC", Offset = "0xAD19EC", VA = "0xAD19EC")]
		public void ShowWidget()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xAD1A0C", Offset = "0xAD1A0C", VA = "0xAD1A0C")]
		public void HideWidget()
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xAD1A2C", Offset = "0xAD1A2C", VA = "0xAD1A2C")]
		public void ButtonClickSound()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xAD1A48", Offset = "0xAD1A48", VA = "0xAD1A48")]
		private void RefreshPairedDevices(List<HapticDevice> devices)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xAD1840", Offset = "0xAD1840", VA = "0xAD1840")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xAD1CFC", Offset = "0xAD1CFC", VA = "0xAD1CFC")]
		public AndroidWidget_UI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D6")]
	public class PositonIconSetting
	{
		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite connect;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite disconnect;

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xADB8E4", Offset = "0xADB8E4", VA = "0xADB8E4")]
		public PositonIconSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D7")]
	public class IconSetting
	{
		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x761D6C", Offset = "0x761D6C")]
		public PositonIconSetting Vest;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PositonIconSetting Head;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositonIconSetting Arm;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PositonIconSetting Foot;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositonIconSetting Hand;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PositonIconSetting GloveL;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PositonIconSetting GloveR;

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xADAF08", Offset = "0xADAF08", VA = "0xADAF08")]
		public IconSetting()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class Android_DeviceController : MonoBehaviour
	{
		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x761DA4", Offset = "0x761DA4")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IconSetting widgetSetting;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite TactsuitWiredIcon;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image batteryLowImage;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x761E20", Offset = "0x761E20")]
		[SerializeField]
		private GameObject ConnectMenu;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button lButton;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button rButton;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject wiredNotification;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x761EAC", Offset = "0x761EAC")]
		[SerializeField]
		private GameObject DisconnectMenu;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string SelectHexColor;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string SelectHoverHexColor;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string DisableHexColor;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string DisableHoverHexColor;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HapticDevice device;

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xAD1D0C", Offset = "0xAD1D0C", VA = "0xAD1D0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xAD1EE0", Offset = "0xAD1EE0", VA = "0xAD1EE0")]
		public void RefreshDevice(HapticDevice d)
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xAD20E4", Offset = "0xAD20E4", VA = "0xAD20E4")]
		private void RenderConnectMenu()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xAD2178", Offset = "0xAD2178", VA = "0xAD2178")]
		private void RenderDisconnectMenu()
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xAD21F4", Offset = "0xAD21F4", VA = "0xAD21F4")]
		private void UpdateButtons()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xAD1FA4", Offset = "0xAD1FA4", VA = "0xAD1FA4")]
		private void UpdateIcon(HapticDevice d)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xAD263C", Offset = "0xAD263C", VA = "0xAD263C")]
		private Sprite GetSprite(PositonIconSetting icon, bool connected)
		{
			return null;
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xAD2660", Offset = "0xAD2660", VA = "0xAD2660")]
		private void Ping()
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xAD26D8", Offset = "0xAD26D8", VA = "0xAD26D8")]
		private void ToLeft()
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xAD27B0", Offset = "0xAD27B0", VA = "0xAD27B0")]
		private void ToRight()
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xAD2888", Offset = "0xAD2888", VA = "0xAD2888")]
		private Color ToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xAD24D0", Offset = "0xAD24D0", VA = "0xAD24D0")]
		private void ChangeButtonColor(Button targetButton, bool isSelect)
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xAD2488", Offset = "0xAD2488", VA = "0xAD2488")]
		private static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xAD24AC", Offset = "0xAD24AC", VA = "0xAD24AC")]
		private static bool IsRight(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xAD28D4", Offset = "0xAD28D4", VA = "0xAD28D4")]
		public Android_DeviceController()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class Android_UIController : MonoBehaviour
	{
		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform mainPanel;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform devicesContainer;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform deviceListPageUi;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button deviceListNextPageButton;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button deviceListBackPageButton;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text deviceListPageText;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Android_DeviceController devicePrefab;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x761F68", Offset = "0x761F68")]
		[SerializeField]
		private GameObject noPairedDeviceUi;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button helpButton;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button bHpaticsLinkButton;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject helpUi;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button helpCloseButton;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Android_DeviceController> controllers;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BoxCollider mainPanelCollider;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 defaultMainPanelSize;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 defaultDeviceContainerSize;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int deviceListSize;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int deviceListPageIndex;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int expandHeight;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int expandDeviceCount;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int pageActivateDeviceCount;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int pageExpandHeight;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int maxPageIndex;

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xAD298C", Offset = "0xAD298C", VA = "0xAD298C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xAD2DDC", Offset = "0xAD2DDC", VA = "0xAD2DDC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xAD2F3C", Offset = "0xAD2F3C", VA = "0xAD2F3C")]
		private void Refresh()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xAD3630", Offset = "0xAD3630", VA = "0xAD3630")]
		private void OnHelp()
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xAD36C8", Offset = "0xAD36C8", VA = "0xAD36C8")]
		private void CloseHelpNotification()
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xAD3760", Offset = "0xAD3760", VA = "0xAD3760")]
		private void OpenLink()
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xAD37AC", Offset = "0xAD37AC", VA = "0xAD37AC")]
		private void NextPage()
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xAD3834", Offset = "0xAD3834", VA = "0xAD3834")]
		private void BackPage()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xAD38BC", Offset = "0xAD38BC", VA = "0xAD38BC")]
		public Android_UIController()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class BhapticsAndroidManager : MonoBehaviour
	{
		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BhapticsAndroidManager Instance;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool pcAndoidTestMode;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<HapticDevice> Devices;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<UnityAction> refreshActions;

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xAD3D94", Offset = "0xAD3D94", VA = "0xAD3D94")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xAD3EB0", Offset = "0xAD3EB0", VA = "0xAD3EB0")]
		private void Start()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xAD3F4C", Offset = "0xAD3F4C", VA = "0xAD3F4C")]
		private void RefreshDevices()
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xAD0388", Offset = "0xAD0388", VA = "0xAD0388")]
		public static void Ping(PositionType pos)
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xAD0FE0", Offset = "0xAD0FE0", VA = "0xAD0FE0")]
		public static void TogglePosition(string address)
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xAD0D50", Offset = "0xAD0D50", VA = "0xAD0D50")]
		public static void Ping(HapticDevice device)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xAD4454", Offset = "0xAD4454", VA = "0xAD4454")]
		public static void PingAll()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xAD1C00", Offset = "0xAD1C00", VA = "0xAD1C00")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xAD01A0", Offset = "0xAD01A0", VA = "0xAD01A0")]
		public static List<HapticDevice> GetConnectedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xAD4508", Offset = "0xAD4508", VA = "0xAD4508")]
		public static List<HapticDevice> GetPairedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xAD1628", Offset = "0xAD1628", VA = "0xAD1628")]
		public static void AddRefreshAction(UnityAction action)
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xAD2E6C", Offset = "0xAD2E6C", VA = "0xAD2E6C")]
		public static void RemoveRefreshAction(UnityAction action)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xAD4680", Offset = "0xAD4680", VA = "0xAD4680")]
		public static void ClearRefreshAction()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xAD46FC", Offset = "0xAD46FC", VA = "0xAD46FC")]
		public static bool IsStreaming()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xAD47B4", Offset = "0xAD47B4", VA = "0xAD47B4")]
		public static void ToggleStreaming()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xAD4868", Offset = "0xAD4868", VA = "0xAD4868")]
		public static List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xAD4938", Offset = "0xAD4938", VA = "0xAD4938")]
		public static void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xAD49EC", Offset = "0xAD49EC", VA = "0xAD49EC")]
		public static void ToggleEnableDevice(HapticDevice device)
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xAD4AB8", Offset = "0xAD4AB8", VA = "0xAD4AB8")]
		private void OnApplicationFocus(bool pauseStatus)
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xAD4B74", Offset = "0xAD4B74", VA = "0xAD4B74")]
		public BhapticsAndroidManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002DB")]
	public class SettingDeviceIcon
	{
		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite pairImage;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite unpairImage;

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xADB8EC", Offset = "0xADB8EC", VA = "0xADB8EC")]
		public SettingDeviceIcon()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class Bhaptics_Widget_Setting : ScriptableObject
	{
		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x761FF4", Offset = "0x761FF4")]
		public SettingDeviceIcon SettingTactot;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SettingDeviceIcon SettingTactal;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SettingDeviceIcon SettingTactosyArm;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SettingDeviceIcon SettingTactosyFoot;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SettingDeviceIcon SettingTactosyHand;

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xAD0B90", Offset = "0xAD0B90", VA = "0xAD0B90")]
		public Sprite GetPairedDeviceSprite(HapticDevice device)
		{
			return null;
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xAD69F0", Offset = "0xAD69F0", VA = "0xAD69F0")]
		public Bhaptics_Widget_Setting()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class HapticApi
	{
		[Token(Token = "0x2000476")]
		public struct point
		{
			[Token(Token = "0x4001E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4001E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4001E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int intensity;

			[Token(Token = "0x4001E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int motorCount;
		}

		[Token(Token = "0x2000477")]
		public struct status
		{
			[Token(Token = "0x4001E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] values;
		}

		[PreserveSig]
		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xAD7E7C", Offset = "0xAD7E7C", VA = "0xAD7E7C")]
		public static extern bool TryGetExePath(byte[] buf, ref int size);

		[PreserveSig]
		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xAD4CB0", Offset = "0xAD4CB0", VA = "0xAD4CB0")]
		public static extern void Initialise(string appId, string appName);

		[PreserveSig]
		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xAD59E4", Offset = "0xAD59E4", VA = "0xAD59E4")]
		public static extern void Destroy();

		[PreserveSig]
		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xAD7F1C", Offset = "0xAD7F1C", VA = "0xAD7F1C")]
		public static extern void RegisterFeedback(string str, string projectJson);

		[PreserveSig]
		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xAD5094", Offset = "0xAD5094", VA = "0xAD5094")]
		public static extern void RegisterFeedbackFromTactFile(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xAD5158", Offset = "0xAD5158", VA = "0xAD5158")]
		public static extern void RegisterFeedbackFromTactFileReflected(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x6001700")]
		[Address(RVA = "0xAD5798", Offset = "0xAD5798", VA = "0xAD5798")]
		public static extern void SubmitRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x6001701")]
		[Address(RVA = "0xAD5834", Offset = "0xAD5834", VA = "0xAD5834")]
		public static extern void SubmitRegisteredStartMillis(string key, int startTimeMillis);

		[PreserveSig]
		[Token(Token = "0x6001702")]
		[Address(RVA = "0xAD567C", Offset = "0xAD567C", VA = "0xAD567C")]
		public static extern void SubmitRegisteredWithOption(string key, string altKey, float intensity, float duration, float offsetX, float offsetY);

		[PreserveSig]
		[Token(Token = "0x6001703")]
		[Address(RVA = "0xAD530C", Offset = "0xAD530C", VA = "0xAD530C")]
		public static extern void SubmitByteArray(string key, PositionType pos, byte[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x6001704")]
		[Address(RVA = "0xAD558C", Offset = "0xAD558C", VA = "0xAD558C")]
		public static extern void SubmitPathArray(string key, PositionType pos, point[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x6001705")]
		[Address(RVA = "0xAD4F6C", Offset = "0xAD4F6C", VA = "0xAD4F6C")]
		public static extern bool IsFeedbackRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x6001706")]
		[Address(RVA = "0xAD500C", Offset = "0xAD500C", VA = "0xAD500C")]
		public static extern bool IsPlaying();

		[PreserveSig]
		[Token(Token = "0x6001707")]
		[Address(RVA = "0xAD4EC8", Offset = "0xAD4EC8", VA = "0xAD4EC8")]
		public static extern bool IsPlayingKey(string key);

		[PreserveSig]
		[Token(Token = "0x6001708")]
		[Address(RVA = "0xAD5970", Offset = "0xAD5970", VA = "0xAD5970")]
		public static extern void TurnOff();

		[PreserveSig]
		[Token(Token = "0x6001709")]
		[Address(RVA = "0xAD58DC", Offset = "0xAD58DC", VA = "0xAD58DC")]
		public static extern void TurnOffKey(string key);

		[PreserveSig]
		[Token(Token = "0x600170A")]
		[Address(RVA = "0xAD7FD0", Offset = "0xAD7FD0", VA = "0xAD7FD0")]
		public static extern void EnableFeedback();

		[PreserveSig]
		[Token(Token = "0x600170B")]
		[Address(RVA = "0xAD803C", Offset = "0xAD803C", VA = "0xAD803C")]
		public static extern void DisableFeedback();

		[PreserveSig]
		[Token(Token = "0x600170C")]
		[Address(RVA = "0xAD80AC", Offset = "0xAD80AC", VA = "0xAD80AC")]
		public static extern void ToggleFeedback();

		[PreserveSig]
		[Token(Token = "0x600170D")]
		[Address(RVA = "0xAD4D70", Offset = "0xAD4D70", VA = "0xAD4D70")]
		public static extern bool IsDevicePlaying(PositionType pos);

		[PreserveSig]
		[Token(Token = "0x600170E")]
		[Address(RVA = "0xAD5A80", Offset = "0xAD5A80", VA = "0xAD5A80")]
		public static extern bool TryGetResponseForPosition(PositionType pos, out status status);

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xAD8118", Offset = "0xAD8118", VA = "0xAD8118")]
		public HapticApi()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class ArmsHapticClip : FileHapticClip
	{
		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IsReflect;

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xAD394C", Offset = "0xAD394C", VA = "0xAD394C", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xAD3D50", Offset = "0xAD3D50", VA = "0xAD3D50", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xAD3D6C", Offset = "0xAD3D6C", VA = "0xAD3D6C")]
		public ArmsHapticClip()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public class BhapticsHaptic : IHaptic
	{
		[Token(Token = "0x6001713")]
		[Address(RVA = "0xAD4C74", Offset = "0xAD4C74", VA = "0xAD4C74")]
		public BhapticsHaptic()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xAD4D68", Offset = "0xAD4D68", VA = "0xAD4D68", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xAD4DF8", Offset = "0xAD4DF8", VA = "0xAD4DF8", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xAD4EC0", Offset = "0xAD4EC0", VA = "0xAD4EC0", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xAD4F64", Offset = "0xAD4F64", VA = "0xAD4F64", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xAD5008", Offset = "0xAD5008", VA = "0xAD5008", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xAD5088", Offset = "0xAD5088", VA = "0xAD5088", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xAD514C", Offset = "0xAD514C", VA = "0xAD514C", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xAD5210", Offset = "0xAD5210", VA = "0xAD5210", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xAD53D4", Offset = "0xAD53D4", VA = "0xAD53D4", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xAD5654", Offset = "0xAD5654", VA = "0xAD5654", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xAD5764", Offset = "0xAD5764", VA = "0xAD5764", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xAD5790", Offset = "0xAD5790", VA = "0xAD5790", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xAD5828", Offset = "0xAD5828", VA = "0xAD5828", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xAD58D4", Offset = "0xAD58D4", VA = "0xAD58D4", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xAD596C", Offset = "0xAD596C", VA = "0xAD596C", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xAD59E0", Offset = "0xAD59E0", VA = "0xAD59E0", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xAD5A54", Offset = "0xAD5A54", VA = "0xAD5A54", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E0")]
	public class BhapticsProject
	{
		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76202C", Offset = "0x76202C")]
		private Track[] <Tracks>k__BackingField;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76203C", Offset = "0x76203C")]
		private Layout <Layout>k__BackingField;

		[Token(Token = "0x17000154")]
		public Track[] Tracks
		{
			[Token(Token = "0x6001725")]
			[Address(RVA = "0xAD5B50", Offset = "0xAD5B50", VA = "0xAD5B50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766D60", Offset = "0x766D60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001726")]
			[Address(RVA = "0xAD5B58", Offset = "0xAD5B58", VA = "0xAD5B58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766D70", Offset = "0x766D70")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public Layout Layout
		{
			[Token(Token = "0x6001727")]
			[Address(RVA = "0xAD5B60", Offset = "0xAD5B60", VA = "0xAD5B60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766D80", Offset = "0x766D80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001728")]
			[Address(RVA = "0xAD5B68", Offset = "0xAD5B68", VA = "0xAD5B68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766D90", Offset = "0x766D90")]
			set
			{
			}
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xAD5B70", Offset = "0xAD5B70", VA = "0xAD5B70")]
		public static BhapticsProject ToProject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xAD6210", Offset = "0xAD6210", VA = "0xAD6210")]
		public JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xAD5D38", Offset = "0xAD5D38", VA = "0xAD5D38")]
		public BhapticsProject()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class HapticFeedbackFile
	{
		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BhapticsProject Project;

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xAD764C", Offset = "0xAD764C", VA = "0xAD764C")]
		public static HapticFeedbackFile ToHapticFeedbackFile(string jsonStr)
		{
			return null;
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xAD9618", Offset = "0xAD9618", VA = "0xAD9618")]
		public HapticFeedbackFile()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class Track
	{
		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76204C", Offset = "0x76204C")]
		private HapticEffect[] <Effects>k__BackingField;

		[Token(Token = "0x17000156")]
		public HapticEffect[] Effects
		{
			[Token(Token = "0x600172E")]
			[Address(RVA = "0xADC074", Offset = "0xADC074", VA = "0xADC074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766DA0", Offset = "0x766DA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600172F")]
			[Address(RVA = "0xADC07C", Offset = "0xADC07C", VA = "0xADC07C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766DB0", Offset = "0x766DB0")]
			set
			{
			}
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xADC084", Offset = "0xADC084", VA = "0xADC084", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xAD5D40", Offset = "0xAD5D40", VA = "0xAD5D40")]
		internal static Track ToTrack(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xAD6354", Offset = "0xAD6354", VA = "0xAD6354")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xADC0E4", Offset = "0xADC0E4", VA = "0xADC0E4")]
		public Track()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class HapticEffect
	{
		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76205C", Offset = "0x76205C")]
		private int <StartTime>k__BackingField;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76206C", Offset = "0x76206C")]
		private int <OffsetTime>k__BackingField;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76207C", Offset = "0x76207C")]
		private Dictionary<string, HapticEffectMode> <Modes>k__BackingField;

		[Token(Token = "0x17000157")]
		public int StartTime
		{
			[Token(Token = "0x6001734")]
			[Address(RVA = "0xAD8998", Offset = "0xAD8998", VA = "0xAD8998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766DC0", Offset = "0x766DC0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001735")]
			[Address(RVA = "0xAD89A0", Offset = "0xAD89A0", VA = "0xAD89A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766DD0", Offset = "0x766DD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public int OffsetTime
		{
			[Token(Token = "0x6001736")]
			[Address(RVA = "0xAD89A8", Offset = "0xAD89A8", VA = "0xAD89A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766DE0", Offset = "0x766DE0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001737")]
			[Address(RVA = "0xAD89B0", Offset = "0xAD89B0", VA = "0xAD89B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766DF0", Offset = "0x766DF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public Dictionary<string, HapticEffectMode> Modes
		{
			[Token(Token = "0x6001738")]
			[Address(RVA = "0xAD89B8", Offset = "0xAD89B8", VA = "0xAD89B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766E00", Offset = "0x766E00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001739")]
			[Address(RVA = "0xAD89C0", Offset = "0xAD89C0", VA = "0xAD89C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766E10", Offset = "0x766E10")]
			set
			{
			}
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xAD89C8", Offset = "0xAD89C8", VA = "0xAD89C8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xAD8C40", Offset = "0xAD8C40", VA = "0xAD8C40")]
		internal static HapticEffect ToEffect(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xAD8FD4", Offset = "0xAD8FD4", VA = "0xAD8FD4")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xAD8E74", Offset = "0xAD8E74", VA = "0xAD8E74")]
		public HapticEffect()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class Layout
	{
		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76208C", Offset = "0x76208C")]
		private string <Type>k__BackingField;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76209C", Offset = "0x76209C")]
		private Dictionary<string, LayoutObject[]> <Layouts>k__BackingField;

		[Token(Token = "0x1700015A")]
		public string Type
		{
			[Token(Token = "0x600173E")]
			[Address(RVA = "0xADAF10", Offset = "0xADAF10", VA = "0xADAF10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766E20", Offset = "0x766E20")]
			get
			{
				return null;
			}
			[Token(Token = "0x600173F")]
			[Address(RVA = "0xADAF18", Offset = "0xADAF18", VA = "0xADAF18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766E30", Offset = "0x766E30")]
			set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public Dictionary<string, LayoutObject[]> Layouts
		{
			[Token(Token = "0x6001740")]
			[Address(RVA = "0xADAF20", Offset = "0xADAF20", VA = "0xADAF20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766E40", Offset = "0x766E40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001741")]
			[Address(RVA = "0xADAF28", Offset = "0xADAF28", VA = "0xADAF28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766E50", Offset = "0x766E50")]
			set
			{
			}
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xAD5EE8", Offset = "0xAD5EE8", VA = "0xAD5EE8")]
		internal static Layout ToLayout(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xAD6464", Offset = "0xAD6464", VA = "0xAD6464")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xADAF30", Offset = "0xADAF30", VA = "0xADAF30")]
		public Layout()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class LayoutObject
	{
		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7620AC", Offset = "0x7620AC")]
		private int <Index>k__BackingField;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7620BC", Offset = "0x7620BC")]
		private float <X>k__BackingField;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7620CC", Offset = "0x7620CC")]
		private float <Y>k__BackingField;

		[Token(Token = "0x1700015C")]
		public int Index
		{
			[Token(Token = "0x6001745")]
			[Address(RVA = "0xADB168", Offset = "0xADB168", VA = "0xADB168")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766E60", Offset = "0x766E60")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001746")]
			[Address(RVA = "0xADB170", Offset = "0xADB170", VA = "0xADB170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766E70", Offset = "0x766E70")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public float X
		{
			[Token(Token = "0x6001747")]
			[Address(RVA = "0xADB178", Offset = "0xADB178", VA = "0xADB178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766E80", Offset = "0x766E80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001748")]
			[Address(RVA = "0xADB180", Offset = "0xADB180", VA = "0xADB180")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766E90", Offset = "0x766E90")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public float Y
		{
			[Token(Token = "0x6001749")]
			[Address(RVA = "0xADB188", Offset = "0xADB188", VA = "0xADB188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766EA0", Offset = "0x766EA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600174A")]
			[Address(RVA = "0xADB190", Offset = "0xADB190", VA = "0xADB190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766EB0", Offset = "0x766EB0")]
			set
			{
			}
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xADAF38", Offset = "0xADAF38", VA = "0xADAF38")]
		internal static LayoutObject ToLayoutObject(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xADB050", Offset = "0xADB050", VA = "0xADB050")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xADB198", Offset = "0xADB198", VA = "0xADB198")]
		public LayoutObject()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class HapticEffectMode
	{
		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7620DC", Offset = "0x7620DC")]
		private FeedbackMode <Mode>k__BackingField;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7620EC", Offset = "0x7620EC")]
		private DotMode <DotMode>k__BackingField;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7620FC", Offset = "0x7620FC")]
		private PathMode <PathMode>k__BackingField;

		[Token(Token = "0x1700015F")]
		public FeedbackMode Mode
		{
			[Token(Token = "0x600174E")]
			[Address(RVA = "0xAD9334", Offset = "0xAD9334", VA = "0xAD9334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766EC0", Offset = "0x766EC0")]
			get
			{
				return default(FeedbackMode);
			}
			[Token(Token = "0x600174F")]
			[Address(RVA = "0xAD933C", Offset = "0xAD933C", VA = "0xAD933C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766ED0", Offset = "0x766ED0")]
			set
			{
			}
		}

		[Token(Token = "0x17000160")]
		public DotMode DotMode
		{
			[Token(Token = "0x6001750")]
			[Address(RVA = "0xAD9344", Offset = "0xAD9344", VA = "0xAD9344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766EE0", Offset = "0x766EE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001751")]
			[Address(RVA = "0xAD934C", Offset = "0xAD934C", VA = "0xAD934C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766EF0", Offset = "0x766EF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public PathMode PathMode
		{
			[Token(Token = "0x6001752")]
			[Address(RVA = "0xAD9354", Offset = "0xAD9354", VA = "0xAD9354")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766F00", Offset = "0x766F00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001753")]
			[Address(RVA = "0xAD935C", Offset = "0xAD935C", VA = "0xAD935C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766F10", Offset = "0x766F10")]
			set
			{
			}
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xAD8E7C", Offset = "0xAD8E7C", VA = "0xAD8E7C")]
		internal static HapticEffectMode ToMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xAD91D4", Offset = "0xAD91D4", VA = "0xAD91D4")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xAD9364", Offset = "0xAD9364", VA = "0xAD9364")]
		public HapticEffectMode()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class DotMode
	{
		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76210C", Offset = "0x76210C")]
		private bool <DotConnected>k__BackingField;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76211C", Offset = "0x76211C")]
		private DotModeObjectCollection[] <Feedback>k__BackingField;

		[Token(Token = "0x17000162")]
		public bool DotConnected
		{
			[Token(Token = "0x6001757")]
			[Address(RVA = "0xAD69F8", Offset = "0xAD69F8", VA = "0xAD69F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766F20", Offset = "0x766F20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001758")]
			[Address(RVA = "0xAD6A00", Offset = "0xAD6A00", VA = "0xAD6A00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766F30", Offset = "0x766F30")]
			set
			{
			}
		}

		[Token(Token = "0x17000163")]
		public DotModeObjectCollection[] Feedback
		{
			[Token(Token = "0x6001759")]
			[Address(RVA = "0xAD6A0C", Offset = "0xAD6A0C", VA = "0xAD6A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766F40", Offset = "0x766F40")]
			get
			{
				return null;
			}
			[Token(Token = "0x600175A")]
			[Address(RVA = "0xAD6A14", Offset = "0xAD6A14", VA = "0xAD6A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766F50", Offset = "0x766F50")]
			set
			{
			}
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xAD6A1C", Offset = "0xAD6A1C", VA = "0xAD6A1C")]
		internal static DotMode ToDotMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xAD6E2C", Offset = "0xAD6E2C", VA = "0xAD6E2C")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xAD6BFC", Offset = "0xAD6BFC", VA = "0xAD6BFC")]
		public DotMode()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class DotModeObjectCollection
	{
		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76212C", Offset = "0x76212C")]
		private int <StartTime>k__BackingField;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76213C", Offset = "0x76213C")]
		private int <EndTime>k__BackingField;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76214C", Offset = "0x76214C")]
		private DotModeObject[] <PointList>k__BackingField;

		[Token(Token = "0x17000164")]
		public int StartTime
		{
			[Token(Token = "0x600175E")]
			[Address(RVA = "0xAD7600", Offset = "0xAD7600", VA = "0xAD7600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766F60", Offset = "0x766F60")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600175F")]
			[Address(RVA = "0xAD7608", Offset = "0xAD7608", VA = "0xAD7608")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766F70", Offset = "0x766F70")]
			set
			{
			}
		}

		[Token(Token = "0x17000165")]
		public int EndTime
		{
			[Token(Token = "0x6001760")]
			[Address(RVA = "0xAD7610", Offset = "0xAD7610", VA = "0xAD7610")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766F80", Offset = "0x766F80")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001761")]
			[Address(RVA = "0xAD7618", Offset = "0xAD7618", VA = "0xAD7618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766F90", Offset = "0x766F90")]
			set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public DotModeObject[] PointList
		{
			[Token(Token = "0x6001762")]
			[Address(RVA = "0xAD7620", Offset = "0xAD7620", VA = "0xAD7620")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766FA0", Offset = "0x766FA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001763")]
			[Address(RVA = "0xAD7628", Offset = "0xAD7628", VA = "0xAD7628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766FB0", Offset = "0x766FB0")]
			set
			{
			}
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xAD6C04", Offset = "0xAD6C04", VA = "0xAD6C04")]
		internal static DotModeObjectCollection ToObject(JSONObject val)
		{
			return null;
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xAD6F90", Offset = "0xAD6F90", VA = "0xAD6F90")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xAD7630", Offset = "0xAD7630", VA = "0xAD7630")]
		public DotModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class DotModeObject
	{
		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76215C", Offset = "0x76215C")]
		private int <Index>k__BackingField;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76216C", Offset = "0x76216C")]
		private float <Intensity>k__BackingField;

		[Token(Token = "0x17000167")]
		public int Index
		{
			[Token(Token = "0x6001767")]
			[Address(RVA = "0xAD7184", Offset = "0xAD7184", VA = "0xAD7184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766FC0", Offset = "0x766FC0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001768")]
			[Address(RVA = "0xAD718C", Offset = "0xAD718C", VA = "0xAD718C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766FD0", Offset = "0x766FD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public float Intensity
		{
			[Token(Token = "0x6001769")]
			[Address(RVA = "0xAD7194", Offset = "0xAD7194", VA = "0xAD7194")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766FE0", Offset = "0x766FE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600176A")]
			[Address(RVA = "0xAD719C", Offset = "0xAD719C", VA = "0xAD719C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766FF0", Offset = "0x766FF0")]
			set
			{
			}
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xAD71A4", Offset = "0xAD71A4", VA = "0xAD71A4")]
		internal static DotModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xAD7514", Offset = "0xAD7514", VA = "0xAD7514")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xAD7244", Offset = "0xAD7244", VA = "0xAD7244")]
		public DotModeObject()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class PathMode
	{
		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76217C", Offset = "0x76217C")]
		private PathModeObjectCollection[] <Feedback>k__BackingField;

		[Token(Token = "0x17000169")]
		public PathModeObjectCollection[] Feedback
		{
			[Token(Token = "0x600176E")]
			[Address(RVA = "0xADB1A8", Offset = "0xADB1A8", VA = "0xADB1A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x767000", Offset = "0x767000")]
			get
			{
				return null;
			}
			[Token(Token = "0x600176F")]
			[Address(RVA = "0xADB1B0", Offset = "0xADB1B0", VA = "0xADB1B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x767010", Offset = "0x767010")]
			set
			{
			}
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xAD936C", Offset = "0xAD936C", VA = "0xAD936C")]
		internal static PathMode ToPathMode(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xAD9508", Offset = "0xAD9508", VA = "0xAD9508")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xADB1B8", Offset = "0xADB1B8", VA = "0xADB1B8")]
		public PathMode()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class PathModeObjectCollection
	{
		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PathMovingPattern MovingPattern;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76218C", Offset = "0x76218C")]
		private PathModeObject[] <PointList>k__BackingField;

		[Token(Token = "0x1700016A")]
		public PathModeObject[] PointList
		{
			[Token(Token = "0x6001773")]
			[Address(RVA = "0xADB884", Offset = "0xADB884", VA = "0xADB884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x767020", Offset = "0x767020")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001774")]
			[Address(RVA = "0xADB88C", Offset = "0xADB88C", VA = "0xADB88C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x767030", Offset = "0x767030")]
			set
			{
			}
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xADB1C0", Offset = "0xADB1C0", VA = "0xADB1C0")]
		internal static PathModeObjectCollection ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xADB408", Offset = "0xADB408", VA = "0xADB408")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xADB894", Offset = "0xADB894", VA = "0xADB894")]
		public PathModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class PathModeObject
	{
		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76219C", Offset = "0x76219C")]
		private float <X>k__BackingField;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7621AC", Offset = "0x7621AC")]
		private float <Y>k__BackingField;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7621BC", Offset = "0x7621BC")]
		private float <Intensity>k__BackingField;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7621CC", Offset = "0x7621CC")]
		private int <Time>k__BackingField;

		[Token(Token = "0x1700016B")]
		public float X
		{
			[Token(Token = "0x6001778")]
			[Address(RVA = "0xADB614", Offset = "0xADB614", VA = "0xADB614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x767040", Offset = "0x767040")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001779")]
			[Address(RVA = "0xADB61C", Offset = "0xADB61C", VA = "0xADB61C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x767050", Offset = "0x767050")]
			set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public float Y
		{
			[Token(Token = "0x600177A")]
			[Address(RVA = "0xADB624", Offset = "0xADB624", VA = "0xADB624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x767060", Offset = "0x767060")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600177B")]
			[Address(RVA = "0xADB62C", Offset = "0xADB62C", VA = "0xADB62C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x767070", Offset = "0x767070")]
			set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public float Intensity
		{
			[Token(Token = "0x600177C")]
			[Address(RVA = "0xADB634", Offset = "0xADB634", VA = "0xADB634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x767080", Offset = "0x767080")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600177D")]
			[Address(RVA = "0xADB63C", Offset = "0xADB63C", VA = "0xADB63C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x767090", Offset = "0x767090")]
			set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public int Time
		{
			[Token(Token = "0x600177E")]
			[Address(RVA = "0xADB644", Offset = "0xADB644", VA = "0xADB644")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7670A0", Offset = "0x7670A0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600177F")]
			[Address(RVA = "0xADB64C", Offset = "0xADB64C", VA = "0xADB64C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7670B0", Offset = "0x7670B0")]
			set
			{
			}
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xADB654", Offset = "0xADB654", VA = "0xADB654")]
		internal static PathModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xADB740", Offset = "0xADB740", VA = "0xADB740")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xADB738", Offset = "0xADB738", VA = "0xADB738")]
		public PathModeObject()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	internal class ParseUtil
	{
		[Token(Token = "0x6001783")]
		[Address(RVA = "0xAD73B0", Offset = "0xAD73B0", VA = "0xAD73B0")]
		internal static float GetFloat(JSONObject obj, string key, float defaultValue = -1f)
		{
			return default(float);
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xAD724C", Offset = "0xAD724C", VA = "0xAD724C")]
		internal static int GetInt(JSONObject obj, string key, int defaultValue = -1)
		{
			return default(int);
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xADB1A0", Offset = "0xADB1A0", VA = "0xADB1A0")]
		public ParseUtil()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class BhapticsUtils
	{
		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isInit;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string exeFilePath;

		[Token(Token = "0x4001764")]
		public const string TypeHead = "Head";

		[Token(Token = "0x4001765")]
		public const string TypeTactal = "Tactal";

		[Token(Token = "0x4001766")]
		public const string TypeVest = "Vest";

		[Token(Token = "0x4001767")]
		public const string TypeTactot = "Tactot";

		[Token(Token = "0x4001768")]
		public const string TypeTactosy = "Tactosy";

		[Token(Token = "0x4001769")]
		public const string TypeTactosy2 = "Tactosy2";

		[Token(Token = "0x400176A")]
		public const string TypeHand = "Hand";

		[Token(Token = "0x400176B")]
		public const string TypeFoot = "Foot";

		[Token(Token = "0x400176C")]
		public const string TypeGlove = "Glove";

		[Token(Token = "0x6001786")]
		private static T[] SubArray<T>(T[] data, int index, int length)
		{
			return null;
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xAD66E4", Offset = "0xAD66E4", VA = "0xAD66E4")]
		public static string GetExePath()
		{
			return null;
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xAC80A0", Offset = "0xAC80A0", VA = "0xAC80A0")]
		public static bool IsPlayerInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xAC7FF0", Offset = "0xAC7FF0", VA = "0xAC7FF0")]
		public static bool IsPlayerRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xAD672C", Offset = "0xAD672C", VA = "0xAD672C")]
		private static bool Is64BitBuild()
		{
			return default(bool);
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xAD674C", Offset = "0xAD674C", VA = "0xAD674C")]
		public static void LaunchPlayer(bool tryLaunch)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xAD6750", Offset = "0xAD6750", VA = "0xAD6750")]
		public static float Angle(Vector3 fwd, Vector3 targetDir)
		{
			return default(float);
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xAD68D8", Offset = "0xAD68D8", VA = "0xAD68D8")]
		private static int AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
		{
			return default(int);
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xAD69C4", Offset = "0xAD69C4", VA = "0xAD69C4")]
		public static PositionType ToPositionType(HapticClipPositionType pos)
		{
			return default(PositionType);
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xACCD2C", Offset = "0xACCD2C", VA = "0xACCD2C")]
		public static PositionType ToPositionType(HapticDeviceType pos, bool isLeft = true)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xAD69E4", Offset = "0xAD69E4", VA = "0xAD69E4")]
		public BhapticsUtils()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class FeetHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x6001792")]
		[Address(RVA = "0xAD7638", Offset = "0xAD7638", VA = "0xAD7638")]
		public FeetHapticClip()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class FileHapticClip : HapticClip
	{
		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7621DC", Offset = "0x7621DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7621DC", Offset = "0x7621DC")]
		public float Intensity;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762234", Offset = "0x762234")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762234", Offset = "0x762234")]
		public float Duration;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HapticDeviceType ClipType;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string JsonValue;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected int _clipDurationTime;

		[Token(Token = "0x1700016F")]
		public int ClipDurationTime
		{
			[Token(Token = "0x6001793")]
			[Address(RVA = "0xAC8674", Offset = "0xAC8674", VA = "0xAC8674")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xAD77D0", Offset = "0xAD77D0", VA = "0xAD77D0", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xAD7834", Offset = "0xAD7834", VA = "0xAD7834", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xAD784C", Offset = "0xAD784C", VA = "0xAD784C", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xAD7864", Offset = "0xAD7864", VA = "0xAD7864", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xAD7878", Offset = "0xAD7878", VA = "0xAD7878", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xAD7888", Offset = "0xAD7888", VA = "0xAD7888", Slot = "9")]
		public override void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xAD79B8", Offset = "0xAD79B8", VA = "0xAD79B8", Slot = "10")]
		public override void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xAD7B04", Offset = "0xAD7B04", VA = "0xAD7B04", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xAD3D60", Offset = "0xAD3D60", VA = "0xAD3D60", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xAD7718", Offset = "0xAD7718", VA = "0xAD7718")]
		private int CalculateClipDutationTime(HapticFeedbackFile hapticFeedbackFile)
		{
			return default(int);
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xAD3D80", Offset = "0xAD3D80", VA = "0xAD3D80")]
		public FileHapticClip()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class GloveHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x600179F")]
		[Address(RVA = "0xAD7E54", Offset = "0xAD7E54", VA = "0xAD7E54")]
		public GloveHapticClip()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class HandsHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xAD7E68", Offset = "0xAD7E68", VA = "0xAD7E68")]
		public HandsHapticClip()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public enum HapticDeviceType
	{
		[Token(Token = "0x4001773")]
		None,
		[Token(Token = "0x4001774")]
		Tactal,
		[Token(Token = "0x4001775")]
		TactSuit,
		[Token(Token = "0x4001776")]
		Tactosy_arms,
		[Token(Token = "0x4001777")]
		Tactosy_hands,
		[Token(Token = "0x4001778")]
		Tactosy_feet,
		[Token(Token = "0x4001779")]
		TactGlove
	}
	[Serializable]
	[Token(Token = "0x20002F4")]
	public enum HapticClipPositionType
	{
		[Token(Token = "0x400177B")]
		VestFront,
		[Token(Token = "0x400177C")]
		VestBack,
		[Token(Token = "0x400177D")]
		Head,
		[Token(Token = "0x400177E")]
		RightForearm,
		[Token(Token = "0x400177F")]
		LeftForearm,
		[Token(Token = "0x4001780")]
		LeftHand,
		[Token(Token = "0x4001781")]
		RightHand,
		[Token(Token = "0x4001782")]
		LeftFoot,
		[Token(Token = "0x4001783")]
		RightFoot,
		[Token(Token = "0x4001784")]
		LeftGlove,
		[Token(Token = "0x4001785")]
		RightGlove
	}
	[Token(Token = "0x20002F5")]
	public class HapticClip : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string assetId;

		[NonSerialized]
		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string keyId;

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xAD8120", Offset = "0xAD8120", VA = "0xAD8120", Slot = "4")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xAD8188", Offset = "0xAD8188", VA = "0xAD8188", Slot = "5")]
		public virtual void Play(string identifier)
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xAD81A4", Offset = "0xAD81A4", VA = "0xAD81A4", Slot = "6")]
		public virtual void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xAD81BC", Offset = "0xAD81BC", VA = "0xAD81BC", Slot = "7")]
		public virtual void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xAD81D0", Offset = "0xAD81D0", VA = "0xAD81D0", Slot = "8")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xAD81E0", Offset = "0xAD81E0", VA = "0xAD81E0", Slot = "9")]
		public virtual void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xAD8310", Offset = "0xAD8310", VA = "0xAD8310", Slot = "10")]
		public virtual void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xAD8458", Offset = "0xAD8458", VA = "0xAD8458", Slot = "11")]
		public virtual void Play(float intensity, float duration, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xAD85A8", Offset = "0xAD85A8", VA = "0xAD85A8", Slot = "12")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xAD85AC", Offset = "0xAD85AC", VA = "0xAD85AC", Slot = "13")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xAD868C", Offset = "0xAD868C", VA = "0xAD868C", Slot = "14")]
		public virtual void Stop(string identifier)
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xAD8798", Offset = "0xAD8798", VA = "0xAD8798", Slot = "15")]
		public virtual bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xAD8884", Offset = "0xAD8884", VA = "0xAD8884", Slot = "16")]
		public virtual bool IsPlaying(string identifier)
		{
			return default(bool);
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xAD7D88", Offset = "0xAD7D88", VA = "0xAD7D88", Slot = "17")]
		public virtual void ResetValues()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xAD8990", Offset = "0xAD8990", VA = "0xAD8990")]
		public string GetAssetID()
		{
			return null;
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xAD7D8C", Offset = "0xAD7D8C", VA = "0xAD7D8C")]
		public HapticClip()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class HapticReceiver : MonoBehaviour
	{
		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsActive;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PositionTag PositionTag;

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xAD9620", Offset = "0xAD9620", VA = "0xAD9620")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xAD977C", Offset = "0xAD977C", VA = "0xAD977C")]
		private void OnTriggerEnter(Collider bullet)
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xAD9934", Offset = "0xAD9934", VA = "0xAD9934")]
		private void OnCollisionEnter(Collision bullet)
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xAD984C", Offset = "0xAD984C", VA = "0xAD984C")]
		private void Handle(Vector3 contactPoint, HapticSender tactSender)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xAD9B40", Offset = "0xAD9B40", VA = "0xAD9B40")]
		public HapticReceiver()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class HapticSender : MonoBehaviour
	{
		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip[] DefaultClips;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadHapticClip[] HeadClips;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VestHapticClip[] BodyClips;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ArmsHapticClip[] LeftArmClips;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ArmsHapticClip[] RightArmClips;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float yOffsetMultiplier;

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xAD9B50", Offset = "0xAD9B50", VA = "0xAD9B50")]
		public void Play(PositionTag posTag = PositionTag.Default)
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xAD9A28", Offset = "0xAD9A28", VA = "0xAD9A28")]
		public void Play(PositionTag posTag, Vector3 contactPos, Collider targetCollider)
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xAD9DA4", Offset = "0xAD9DA4", VA = "0xAD9DA4")]
		private void Play(PositionTag posTag, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight)
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xAD9EE4", Offset = "0xAD9EE4", VA = "0xAD9EE4")]
		public void Play(PositionTag posTag, RaycastHit hit)
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xADA018", Offset = "0xADA018", VA = "0xADA018")]
		private HapticClip GetClip(PositionTag posTag)
		{
			return null;
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xADA140", Offset = "0xADA140", VA = "0xADA140")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xAD9B5C", Offset = "0xAD9B5C", VA = "0xAD9B5C")]
		public void Play(PositionTag posTag, float angleX, float offsetY)
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xADA148", Offset = "0xADA148", VA = "0xADA148")]
		public HapticSender()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public enum PositionTag
	{
		[Token(Token = "0x4001791")]
		Body,
		[Token(Token = "0x4001792")]
		Head,
		[Token(Token = "0x4001793")]
		LeftArm,
		[Token(Token = "0x4001794")]
		RightArm,
		[Token(Token = "0x4001795")]
		Default
	}
	[Token(Token = "0x20002F9")]
	public class HapticSource : MonoBehaviour
	{
		[Token(Token = "0x2000478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BDD8", Offset = "0x75BDD8")]
		private sealed class <PlayCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecond;

			[Token(Token = "0x4001E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HapticSource <>4__this;

			[Token(Token = "0x17000247")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BB3")]
				[Address(RVA = "0xADAC3C", Offset = "0xADAC3C", VA = "0xADAC3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000248")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BB5")]
				[Address(RVA = "0xADACA4", Offset = "0xADACA4", VA = "0xADACA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BB0")]
			[Address(RVA = "0xADAAF0", Offset = "0xADAAF0", VA = "0xADAAF0")]
			[DebuggerHidden]
			public <PlayCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001BB1")]
			[Address(RVA = "0xADAB50", Offset = "0xADAB50", VA = "0xADAB50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BB2")]
			[Address(RVA = "0xADAB54", Offset = "0xADAB54", VA = "0xADAB54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BB4")]
			[Address(RVA = "0xADAC44", Offset = "0xADAC44", VA = "0xADAC44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000479")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x75BDE8", Offset = "0x75BDE8")]
		private sealed class <PlayLoopCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HapticSource <>4__this;

			[Token(Token = "0x4001E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <duration>5__2;

			[Token(Token = "0x17000249")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BB9")]
				[Address(RVA = "0xADAE84", Offset = "0xADAE84", VA = "0xADAE84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BBB")]
				[Address(RVA = "0xADAEEC", Offset = "0xADAEEC", VA = "0xADAEEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BB6")]
			[Address(RVA = "0xADAB1C", Offset = "0xADAB1C", VA = "0xADAB1C")]
			[DebuggerHidden]
			public <PlayLoopCoroutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001BB7")]
			[Address(RVA = "0xADACAC", Offset = "0xADACAC", VA = "0xADACAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BB8")]
			[Address(RVA = "0xADACB0", Offset = "0xADACB0", VA = "0xADACB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BBA")]
			[Address(RVA = "0xADAE8C", Offset = "0xADAE8C", VA = "0xADAE8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip clip;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool playOnAwake;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float loopDelaySeconds;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine currentCoroutine;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine loopCoroutine;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isLooping;

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xADA158", Offset = "0xADA158", VA = "0xADA158")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xADA3F0", Offset = "0xADA3F0", VA = "0xADA3F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xADA6D4", Offset = "0xADA6D4", VA = "0xADA6D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xADA7C8", Offset = "0xADA7C8", VA = "0xADA7C8")]
		public void Play()
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xADA40C", Offset = "0xADA40C", VA = "0xADA40C")]
		public void PlayLoop()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xADA848", Offset = "0xADA848", VA = "0xADA848")]
		public void PlayDelayed(float delaySecond = 0f)
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xADA6D8", Offset = "0xADA6D8", VA = "0xADA6D8")]
		public void Stop()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xADAA50", Offset = "0xADAA50", VA = "0xADAA50")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xADA9C4", Offset = "0xADA9C4", VA = "0xADA9C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7670C0", Offset = "0x7670C0")]
		private IEnumerator PlayCoroutine(float delaySecond)
		{
			return null;
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xADA57C", Offset = "0xADA57C", VA = "0xADA57C")]
		private void PlayHapticClip()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xADA7CC", Offset = "0xADA7CC", VA = "0xADA7CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x767124", Offset = "0x767124")]
		private IEnumerator PlayLoopCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xADAB48", Offset = "0xADAB48", VA = "0xADAB48")]
		public HapticSource()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class HeadHapticClip : FileHapticClip
	{
		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xADAEF4", Offset = "0xADAEF4", VA = "0xADAEF4")]
		public HeadHapticClip()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public interface IHaptic
	{
		[Token(Token = "0x60017CB")]
		bool IsConnect(PositionType type);

		[Token(Token = "0x60017CC")]
		bool IsConnect(HapticDeviceType type, bool isLeft = true);

		[Token(Token = "0x60017CD")]
		bool IsPlaying(string key);

		[Token(Token = "0x60017CE")]
		bool IsFeedbackRegistered(string key);

		[Token(Token = "0x60017CF")]
		bool IsPlaying();

		[Token(Token = "0x60017D0")]
		void RegisterTactFileStr(string key, string tactFileStr);

		[Token(Token = "0x60017D1")]
		void RegisterTactFileStrReflected(string key, string tactFileStr);

		[Token(Token = "0x60017D2")]
		void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis);

		[Token(Token = "0x60017D3")]
		void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis);

		[Token(Token = "0x60017D4")]
		void SubmitRegistered(string key, string altKey, ScaleOption option);

		[Token(Token = "0x60017D5")]
		void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption);

		[Token(Token = "0x60017D6")]
		void SubmitRegistered(string key);

		[Token(Token = "0x60017D7")]
		void SubmitRegistered(string key, int startTimeMillis);

		[Token(Token = "0x60017D8")]
		void TurnOff(string key);

		[Token(Token = "0x60017D9")]
		void TurnOff();

		[Token(Token = "0x60017DA")]
		void Dispose();

		[Token(Token = "0x60017DB")]
		int[] GetCurrentFeedback(PositionType pos);
	}
	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x75B7A8", Offset = "0x75B7A8")]
	public class SimpleHapticClip : HapticClip
	{
		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Point[] DefaultPoints;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HapticClipPositionType Position;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private SimpleHapticType Mode;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int[] DotPoints;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Point[] Points;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7622DC", Offset = "0x7622DC")]
		public int TimeMillis;

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xADB8F4", Offset = "0xADB8F4", VA = "0xADB8F4", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xADBDC8", Offset = "0xADBDC8", VA = "0xADBDC8", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xADBB98", Offset = "0xADBB98", VA = "0xADBB98")]
		private static List<DotPoint> Convert(int[] points)
		{
			return null;
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xADBCA8", Offset = "0xADBCA8", VA = "0xADBCA8")]
		private static List<PathPoint> Convert(Point[] points)
		{
			return null;
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xADBE60", Offset = "0xADBE60", VA = "0xADBE60")]
		public SimpleHapticClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002FD")]
	public class Point
	{
		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7622F8", Offset = "0x7622F8")]
		public float X;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762310", Offset = "0x762310")]
		public float Y;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762328", Offset = "0x762328")]
		public int Intensity;

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xADB8A4", Offset = "0xADB8A4", VA = "0xADB8A4")]
		public Point(float x, float y, int intensity)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002FE")]
	public enum SimpleHapticType
	{
		[Token(Token = "0x40017A7")]
		DotMode = 1,
		[Token(Token = "0x40017A8")]
		PathMode
	}
	[Token(Token = "0x20002FF")]
	public class VestHapticClip : FileHapticClip
	{
		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762344", Offset = "0x762344")]
		protected float TactFileAngleX;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762388", Offset = "0x762388")]
		protected float TactFileOffsetY;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RotationOption _rotationOption;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ScaleOption _scaleOption;

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xADC0EC", Offset = "0xADC0EC", VA = "0xADC0EC", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xADC150", Offset = "0xADC150", VA = "0xADC150", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xADC168", Offset = "0xADC168", VA = "0xADC168", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xADC180", Offset = "0xADC180", VA = "0xADC180", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xADC194", Offset = "0xADC194", VA = "0xADC194", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xADC1A4", Offset = "0xADC1A4", VA = "0xADC1A4", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xADC460", Offset = "0xADC460", VA = "0xADC460", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xADC470", Offset = "0xADC470", VA = "0xADC470")]
		public VestHapticClip()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class VisualFeedback : MonoBehaviour
	{
		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClipPositionType devicePos;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform motorContainer;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient motorFeedbackGradient;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform[] motors;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float motorScaleOffset;

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xADC52C", Offset = "0xADC52C", VA = "0xADC52C")]
		private void Start()
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xADC84C", Offset = "0xADC84C", VA = "0xADC84C")]
		public void UpdateFeedback(HapticFeedback feedback)
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xADC8F8", Offset = "0xADC8F8", VA = "0xADC8F8")]
		public void UpdateFeedback(int[] feedbackValues)
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xADCAE4", Offset = "0xADCAE4", VA = "0xADCAE4")]
		public VisualFeedback()
		{
		}
	}
}
