using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityEngine.Video;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public enum ButtonTypes
{
	[Token(Token = "0x4000002")]
	NotDefined,
	[Token(Token = "0x4000003")]
	Previous,
	[Token(Token = "0x4000004")]
	Next
}
[Token(Token = "0x2000003")]
public class PEButtonScript : MonoBehaviour, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button myButton;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ButtonTypes ButtonType;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xD9ABEC", Offset = "0xD9ABEC", VA = "0xD9ABEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xD9AC5C", Offset = "0xD9AC5C", VA = "0xD9AC5C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xD9ACD4", Offset = "0xD9ACD4", VA = "0xD9ACD4", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xD9AD40", Offset = "0xD9AD40", VA = "0xD9AD40")]
	public void OnButtonClicked()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xD9ADA4", Offset = "0xD9ADA4", VA = "0xD9ADA4")]
	public PEButtonScript()
	{
	}
}
[Token(Token = "0x2000004")]
public class PEDestoryTimed : MonoBehaviour
{
	[Token(Token = "0x6000006")]
	[Address(RVA = "0xD9ADAC", Offset = "0xD9ADAC", VA = "0xD9ADAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xD9ADB0", Offset = "0xD9ADB0", VA = "0xD9ADB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xD9ADB4", Offset = "0xD9ADB4", VA = "0xD9ADB4")]
	public PEDestoryTimed()
	{
	}
}
[Token(Token = "0x2000005")]
public class ParticleEffectsLibrary : MonoBehaviour
{
	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ParticleEffectsLibrary GlobalAccess;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int TotalEffects;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int CurrentParticleEffectIndex;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int CurrentParticleEffectNum;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3[] ParticleEffectSpawnOffsets;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float[] ParticleEffectLifetimes;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] ParticleEffectPrefabs;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string effectNameString;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Transform> currentActivePEList;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 spawnPosition;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xD9ADD0", Offset = "0xD9ADD0", VA = "0xD9ADD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xD9B128", Offset = "0xD9B128", VA = "0xD9B128")]
	private void Start()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xD9B12C", Offset = "0xD9B12C", VA = "0xD9B12C")]
	public string GetCurrentPENameString()
	{
		return null;
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xD9B368", Offset = "0xD9B368", VA = "0xD9B368")]
	public void PreviousParticleEffect()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xD9B6FC", Offset = "0xD9B6FC", VA = "0xD9B6FC")]
	public void NextParticleEffect()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xD9BA94", Offset = "0xD9BA94", VA = "0xD9BA94")]
	public void SpawnParticleEffect(Vector3 positionInWorldToSpawn)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xD9BD68", Offset = "0xD9BD68", VA = "0xD9BD68")]
	public ParticleEffectsLibrary()
	{
	}
}
[Token(Token = "0x2000006")]
public class UICanvasManager : MonoBehaviour
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UICanvasManager GlobalAccess;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool MouseOverButton;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text PENameText;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text ToolTipText;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RaycastHit rayHit;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x180D100", Offset = "0x180D100", VA = "0x180D100")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x180D158", Offset = "0x180D158", VA = "0x180D158")]
	private void Start()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x180D21C", Offset = "0x180D21C", VA = "0x180D21C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x180D52C", Offset = "0x180D52C", VA = "0x180D52C")]
	public void UpdateToolTip(ButtonTypes toolTipType)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x180D60C", Offset = "0x180D60C", VA = "0x180D60C")]
	public void ClearToolTip()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x180D35C", Offset = "0x180D35C", VA = "0x180D35C")]
	private void SelectPreviousPE()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x180D444", Offset = "0x180D444", VA = "0x180D444")]
	private void SelectNextPE()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x180D290", Offset = "0x180D290", VA = "0x180D290")]
	private void SpawnCurrentParticleEffect()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x180D6B4", Offset = "0x180D6B4", VA = "0x180D6B4")]
	public void UIButtonClick(ButtonTypes buttonTypeClicked)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x180D6D0", Offset = "0x180D6D0", VA = "0x180D6D0")]
	public UICanvasManager()
	{
	}
}
[Token(Token = "0x2000007")]
public class ETFXProjectileScript : MonoBehaviour
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject impactParticle;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject projectileParticle;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject muzzleParticle;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA88AAC", Offset = "0xA88AAC")]
	public float colliderRadius;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA88AE4", Offset = "0xA88AE4")]
	public float collideOffset;

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xDC2374", Offset = "0xDC2374", VA = "0xDC2374")]
	private void Start()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xDC25B4", Offset = "0xDC25B4", VA = "0xDC25B4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xDC2BE0", Offset = "0xDC2BE0", VA = "0xDC2BE0")]
	public ETFXProjectileScript()
	{
	}
}
[Token(Token = "0x2000008")]
public class ETFXSceneManager : MonoBehaviour
{
	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool GUIHide;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool GUIHide2;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool GUIHide3;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xDC2BF4", Offset = "0xDC2BF4", VA = "0xDC2BF4")]
	public void LoadScene1()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xDC2C60", Offset = "0xDC2C60", VA = "0xDC2C60")]
	public void LoadScene2()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xDC2CCC", Offset = "0xDC2CCC", VA = "0xDC2CCC")]
	public void LoadScene3()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xDC2D38", Offset = "0xDC2D38", VA = "0xDC2D38")]
	public void LoadScene4()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xDC2DA4", Offset = "0xDC2DA4", VA = "0xDC2DA4")]
	public void LoadScene5()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xDC2E10", Offset = "0xDC2E10", VA = "0xDC2E10")]
	public void LoadScene6()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xDC2E7C", Offset = "0xDC2E7C", VA = "0xDC2E7C")]
	public void LoadScene7()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xDC2EE8", Offset = "0xDC2EE8", VA = "0xDC2EE8")]
	public void LoadScene8()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xDC2F54", Offset = "0xDC2F54", VA = "0xDC2F54")]
	public void LoadScene9()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xDC2FC0", Offset = "0xDC2FC0", VA = "0xDC2FC0")]
	public void LoadScene10()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xDC302C", Offset = "0xDC302C", VA = "0xDC302C")]
	public void LoadScene11()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xDC3098", Offset = "0xDC3098", VA = "0xDC3098")]
	public void LoadScene12()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xDC3104", Offset = "0xDC3104", VA = "0xDC3104")]
	public void LoadScene13()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xDC3170", Offset = "0xDC3170", VA = "0xDC3170")]
	private void Update()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xDC32DC", Offset = "0xDC32DC", VA = "0xDC32DC")]
	public ETFXSceneManager()
	{
	}
}
[Token(Token = "0x2000009")]
public class MapDrawer : MonoBehaviour
{
	[Token(Token = "0x2000246")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88508", Offset = "0xA88508")]
	private sealed class <drawQuill>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MapDrawer <>4__this;

		[Token(Token = "0x170000F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0xDCB660", Offset = "0xDCB660", VA = "0xDCB660", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0xDCB6C8", Offset = "0xDCB6C8", VA = "0xDCB6C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xDCB484", Offset = "0xDCB484", VA = "0xDCB484")]
		[DebuggerHidden]
		public <drawQuill>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xDCB510", Offset = "0xDCB510", VA = "0xDCB510", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xDCB514", Offset = "0xDCB514", VA = "0xDCB514", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xDCB668", Offset = "0xDCB668", VA = "0xDCB668", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000247")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88518", Offset = "0xA88518")]
	private sealed class <reseter>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] objects;

		[Token(Token = "0x170000F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0xDCB9BC", Offset = "0xDCB9BC", VA = "0xDCB9BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0xDCBA24", Offset = "0xDCBA24", VA = "0xDCBA24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xDCB4B0", Offset = "0xDCB4B0", VA = "0xDCB4B0")]
		[DebuggerHidden]
		public <reseter>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xDCB908", Offset = "0xDCB908", VA = "0xDCB908", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xDCB90C", Offset = "0xDCB90C", VA = "0xDCB90C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xDCB9C4", Offset = "0xDCB9C4", VA = "0xDCB9C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88528", Offset = "0xA88528")]
	private sealed class <drawer>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Coroutine cor;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MapDrawer <>4__this;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float delay;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] objects;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <interval>5__2;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <i>5__3;

		[Token(Token = "0x170000F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0xDCB898", Offset = "0xDCB898", VA = "0xDCB898", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0xDCB900", Offset = "0xDCB900", VA = "0xDCB900", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xDCB4DC", Offset = "0xDCB4DC", VA = "0xDCB4DC")]
		[DebuggerHidden]
		public <drawer>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xDCB6D0", Offset = "0xDCB6D0", VA = "0xDCB6D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xDCB6D4", Offset = "0xDCB6D4", VA = "0xDCB6D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xDCB8A0", Offset = "0xDCB8A0", VA = "0xDCB8A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] walls;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] interactables;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ObjectLeveable quill;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject wallOff;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine wallRoutine;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xDCB114", Offset = "0xDCB114", VA = "0xDCB114")]
	private void Start()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xDCB200", Offset = "0xDCB200", VA = "0xDCB200")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xDCB480", Offset = "0xDCB480", VA = "0xDCB480")]
	private void Update()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xDCB3F4", Offset = "0xDCB3F4", VA = "0xDCB3F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8E4B4", Offset = "0xA8E4B4")]
	private IEnumerator drawQuill(float delay = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xDCB2BC", Offset = "0xDCB2BC", VA = "0xDCB2BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8E518", Offset = "0xA8E518")]
	private IEnumerator reseter(GameObject[] objects, float delay = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xDCB338", Offset = "0xDCB338", VA = "0xDCB338")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8E57C", Offset = "0xA8E57C")]
	private IEnumerator drawer(GameObject[] objects, float delay = 1f, [Optional] Coroutine cor)
	{
		return null;
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xDCB508", Offset = "0xDCB508", VA = "0xDCB508")]
	public MapDrawer()
	{
	}
}
[Token(Token = "0x200000A")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA880FC", Offset = "0xA880FC")]
public class FastList<T>
{
	[Token(Token = "0x2000249")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88538", Offset = "0xA88538")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170000F6")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000EEF")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170000F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EF1")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EEC")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000EED")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EEE")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF0")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000001")]
	public int Count
	{
		[Token(Token = "0x6000035")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000036")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public T Item
	{
		[Token(Token = "0x6000037")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000038")]
		set
		{
		}
	}

	[Token(Token = "0x6000033")]
	public FastList()
	{
	}

	[Token(Token = "0x6000034")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000039")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x600003A")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x600003B")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x600003C")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x600003D")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600003E")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600003F")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000040")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000041")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000042")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000043")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000044")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000045")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000046")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000047")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8E5E0", Offset = "0xA8E5E0")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000048")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000049")]
	private void Allocate()
	{
	}

	[Token(Token = "0x600004A")]
	private void Trim()
	{
	}

	[Token(Token = "0x600004B")]
	public void Clear()
	{
	}

	[Token(Token = "0x600004C")]
	public void Release()
	{
	}
}
[Token(Token = "0x200000B")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string header;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly string message;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xDC6C74", Offset = "0xDC6C74", VA = "0xDC6C74")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x200000C")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xDC6C40", Offset = "0xDC6C40", VA = "0xDC6C40")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x200000D")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xD98304", Offset = "0xD98304", VA = "0xD98304")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xD98470", Offset = "0xD98470", VA = "0xD98470")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xD98814", Offset = "0xD98814", VA = "0xD98814")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xD98A6C", Offset = "0xD98A6C", VA = "0xD98A6C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xD98A98", Offset = "0xD98A98", VA = "0xD98A98")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x200000E")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xDA2204", Offset = "0xDA2204", VA = "0xDA2204")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xDA2290", Offset = "0xDA2290", VA = "0xDA2290")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xDA23FC", Offset = "0xDA23FC", VA = "0xDA23FC")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x200000F")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000003")]
	public bool IsVisible
	{
		[Token(Token = "0x6000057")]
		[Address(RVA = "0xDC58D0", Offset = "0xDC58D0", VA = "0xDC58D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000058")]
		[Address(RVA = "0xDC58D8", Offset = "0xDC58D8", VA = "0xDC58D8")]
		set
		{
		}
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xDC5A00", Offset = "0xDC5A00", VA = "0xDC5A00")]
	private void Start()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xDC5C1C", Offset = "0xDC5C1C", VA = "0xDC5C1C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xDC5C24", Offset = "0xDC5C24", VA = "0xDC5C24")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000010")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200024B")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xDA3020", Offset = "0xDA3020", VA = "0xDA3020")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200024C")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8E444", Offset = "0xA8E444")]
		public float FakeLatencyMax;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8E45C", Offset = "0xA8E45C")]
		public float FakeLatencyMin;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8E474", Offset = "0xA8E474")]
		public float LatencyWeight;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8E48C", Offset = "0xA8E48C")]
		public int MaxSamples;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xDA3028", Offset = "0xDA3028", VA = "0xDA3028")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xDA31D8", Offset = "0xDA31D8", VA = "0xDA31D8")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xDA26B0", Offset = "0xDA26B0", VA = "0xDA26B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xDA27E8", Offset = "0xDA27E8", VA = "0xDA27E8")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xDA2B54", Offset = "0xDA2B54", VA = "0xDA2B54")]
	private void Update()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xDA2AAC", Offset = "0xDA2AAC", VA = "0xDA2AAC")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xDA2DB0", Offset = "0xDA2DB0", VA = "0xDA2DB0")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xDA3134", Offset = "0xDA3134", VA = "0xDA3134")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000011")]
public class P2PManager
{
	[Token(Token = "0x200024D")]
	private enum MessageType : byte
	{
		[Token(Token = "0x40009C3")]
		Update = 1
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xD99BB8", Offset = "0xD99BB8", VA = "0xD99BB8")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xD99C78", Offset = "0xD99C78", VA = "0xD99C78")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xD99D5C", Offset = "0xD99D5C", VA = "0xD99D5C")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xD99DE0", Offset = "0xD99DE0", VA = "0xD99DE0")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xD99F3C", Offset = "0xD99F3C", VA = "0xD99F3C")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xD9A224", Offset = "0xD9A224", VA = "0xD9A224")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xD9A618", Offset = "0xD9A618", VA = "0xD9A618")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xD9A8BC", Offset = "0xD9A8BC", VA = "0xD9A8BC")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xD9A3E8", Offset = "0xD9A3E8", VA = "0xD9A3E8")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xD9A7EC", Offset = "0xD9A7EC", VA = "0xD9A7EC")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xD9A4D0", Offset = "0xD9A4D0", VA = "0xD9A4D0")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xD9AAD4", Offset = "0xD9AAD4", VA = "0xD9AAD4")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xD9A430", Offset = "0xD9A430", VA = "0xD9A430")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xD9A830", Offset = "0xD9A830", VA = "0xD9A830")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xD9A578", Offset = "0xD9A578", VA = "0xD9A578")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xD9AB60", Offset = "0xD9AB60", VA = "0xD9AB60")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000012")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xDA1C58", Offset = "0xDA1C58", VA = "0xDA1C58", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xDA1C9C", Offset = "0xDA1C9C", VA = "0xDA1C9C", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xDA1CD4", Offset = "0xDA1CD4", VA = "0xDA1CD4", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xDA1CFC", Offset = "0xDA1CFC", VA = "0xDA1CFC")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xDA1E9C", Offset = "0xDA1E9C", VA = "0xDA1E9C")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xDA1F1C", Offset = "0xDA1F1C", VA = "0xDA1F1C")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xDA1F70", Offset = "0xDA1F70", VA = "0xDA1F70")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000013")]
public class RemotePlayer
{
	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xDA326C", Offset = "0xDA326C", VA = "0xDA326C")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000014")]
public class RoomManager
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xDA3274", Offset = "0xDA3274", VA = "0xDA3274")]
	public RoomManager()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xDA3340", Offset = "0xDA3340", VA = "0xDA3340")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xDA34A0", Offset = "0xDA34A0", VA = "0xDA34A0")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xDA35B0", Offset = "0xDA35B0", VA = "0xDA35B0")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xDA3664", Offset = "0xDA3664", VA = "0xDA3664")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xDA3798", Offset = "0xDA3798", VA = "0xDA3798")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xDA34D0", Offset = "0xDA34D0", VA = "0xDA34D0")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xDA3824", Offset = "0xDA3824", VA = "0xDA3824")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xDA3F14", Offset = "0xDA3F14", VA = "0xDA3F14")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xDA4238", Offset = "0xDA4238", VA = "0xDA4238")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xDA3B18", Offset = "0xDA3B18", VA = "0xDA3B18")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000015")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x200024E")]
	public enum State
	{
		[Token(Token = "0x40009C5")]
		INITIALIZING,
		[Token(Token = "0x40009C6")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x40009C7")]
		CREATING_A_ROOM,
		[Token(Token = "0x40009C8")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x40009C9")]
		JOINING_A_ROOM,
		[Token(Token = "0x40009CA")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x40009CB")]
		LEAVING_A_ROOM,
		[Token(Token = "0x40009CC")]
		SHUTDOWN
	}

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000004")]
	public static State CurrentState
	{
		[Token(Token = "0x6000091")]
		[Address(RVA = "0x18070A0", Offset = "0x18070A0", VA = "0x18070A0")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000005")]
	public static ulong MyID
	{
		[Token(Token = "0x6000092")]
		[Address(RVA = "0x1807114", Offset = "0x1807114", VA = "0x1807114")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000006")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000093")]
		[Address(RVA = "0x18071EC", Offset = "0x18071EC", VA = "0x18071EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x18050BC", Offset = "0x18050BC", VA = "0x18050BC", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1805464", Offset = "0x1805464", VA = "0x1805464", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1805C98", Offset = "0x1805C98", VA = "0x1805C98")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1805F60", Offset = "0x1805F60", VA = "0x1805F60", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1805F64", Offset = "0x1805F64", VA = "0x1805F64")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x1806058", Offset = "0x1806058", VA = "0x1806058")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x18067A0", Offset = "0x18067A0", VA = "0x18067A0")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1806C98", Offset = "0x1806C98", VA = "0x1806C98")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x1806E64", Offset = "0x1806E64", VA = "0x1806E64")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x1807030", Offset = "0x1807030", VA = "0x1807030")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x18057C4", Offset = "0x18057C4", VA = "0x18057C4")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x1805DF4", Offset = "0x1805DF4", VA = "0x1805DF4")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x1805878", Offset = "0x1805878", VA = "0x1805878")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x1807300", Offset = "0x1807300", VA = "0x1807300")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x1807480", Offset = "0x1807480", VA = "0x1807480")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x1807568", Offset = "0x1807568", VA = "0x1807568")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x180768C", Offset = "0x180768C", VA = "0x180768C")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x180775C", Offset = "0x180775C", VA = "0x180775C")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x1805EA4", Offset = "0x1805EA4", VA = "0x1805EA4")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x1807B88", Offset = "0x1807B88", VA = "0x1807B88")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1807C14", Offset = "0x1807C14", VA = "0x1807C14")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x18079AC", Offset = "0x18079AC", VA = "0x18079AC")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x1807EDC", Offset = "0x1807EDC", VA = "0x1807EDC")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1805034", Offset = "0x1805034", VA = "0x1805034")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xA8E644", Offset = "0xA8E644")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1808018", Offset = "0x1808018", VA = "0x1808018")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x18080E0", Offset = "0x18080E0", VA = "0x18080E0")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000016")]
public class VoipManager
{
	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x1805BD8", Offset = "0x1805BD8", VA = "0x1805BD8")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1807E00", Offset = "0x1807E00", VA = "0x1807E00")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1806FB0", Offset = "0x1806FB0", VA = "0x1806FB0")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x180DEC8", Offset = "0x180DEC8", VA = "0x180DEC8")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x180E018", Offset = "0x180E018", VA = "0x180E018")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000017")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xDC554C", Offset = "0xDC554C", VA = "0xDC554C")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xDC55CC", Offset = "0xDC55CC", VA = "0xDC55CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xDC5748", Offset = "0xDC5748", VA = "0xDC5748")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xDC57AC", Offset = "0xDC57AC", VA = "0xDC57AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xDC5608", Offset = "0xDC5608", VA = "0xDC5608")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xDC5868", Offset = "0xDC5868", VA = "0xDC5868")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xDC58C8", Offset = "0xDC58C8", VA = "0xDC58C8")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000018")]
public class AvatarLayer
{
	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xDBA9CC", Offset = "0xDBA9CC", VA = "0xDBA9CC")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000019")]
public class PacketRecordSettings
{
	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xD9ADBC", Offset = "0xD9ADBC", VA = "0xD9ADBC")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200001A")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x200024F")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xDE9B74", Offset = "0xDE9B74", VA = "0xDE9B74")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000250")]
	public enum HandType
	{
		[Token(Token = "0x40009CF")]
		Right,
		[Token(Token = "0x40009D0")]
		Left,
		[Token(Token = "0x40009D1")]
		Max
	}

	[Token(Token = "0x2000251")]
	public enum HandJoint
	{
		[Token(Token = "0x40009D3")]
		HandBase,
		[Token(Token = "0x40009D4")]
		IndexBase,
		[Token(Token = "0x40009D5")]
		IndexTip,
		[Token(Token = "0x40009D6")]
		ThumbBase,
		[Token(Token = "0x40009D7")]
		ThumbTip,
		[Token(Token = "0x40009D8")]
		Max
	}

	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88548", Offset = "0xA88548")]
	private sealed class <WaitForMouthAudioSource>d__135 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x170000F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0xDEB8B0", Offset = "0xDEB8B0", VA = "0xDEB8B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0xDEB918", Offset = "0xDEB918", VA = "0xDEB918", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xDEB498", Offset = "0xDEB498", VA = "0xDEB498")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__135(int <>1__state)
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xDEB714", Offset = "0xDEB714", VA = "0xDEB714", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xDEB718", Offset = "0xDEB718", VA = "0xDEB718", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xDEB8B8", Offset = "0xDEB8B8", VA = "0xDEB8B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA88B0C", Offset = "0xA88B0C")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA88B44", Offset = "0xA88B44")]
	public bool EnableBody;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA88B7C", Offset = "0xA88B7C")]
	public bool RecordPackets;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA88BB4", Offset = "0xA88BB4")]
	public bool StartWithControllers;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA88BEC", Offset = "0xA88BEC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA88BEC", Offset = "0xA88BEC")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA88C5C", Offset = "0xA88C5C")]
	private bool CombineMeshes;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA88C94", Offset = "0xA88C94")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA88CCC", Offset = "0xA88CCC")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA88D04", Offset = "0xA88D04")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA88D3C", Offset = "0xA88D3C")]
	public bool EnableLaughter;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int renderPartCount;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float[] visemes;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private AudioSource audioSource;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool showLeftController;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	private bool showRightController;

	[Token(Token = "0x40000AA")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40000AC")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40000AD")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40000AE")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40000AF")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40000B0")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public float VoiceAmplitude;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xDE69C0", Offset = "0xDE69C0", VA = "0xDE69C0")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xDE6DD8", Offset = "0xDE6DD8", VA = "0xDE6DD8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xDE6E64", Offset = "0xDE6E64", VA = "0xDE6E64")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xDE6ED0", Offset = "0xDE6ED0", VA = "0xDE6ED0")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xDE6FF8", Offset = "0xDE6FF8", VA = "0xDE6FF8")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xDE70DC", Offset = "0xDE70DC", VA = "0xDE70DC")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xDE71BC", Offset = "0xDE71BC", VA = "0xDE71BC")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xDE73A4", Offset = "0xDE73A4", VA = "0xDE73A4")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xDE746C", Offset = "0xDE746C", VA = "0xDE746C")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xDE74F0", Offset = "0xDE74F0", VA = "0xDE74F0")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xDE75D8", Offset = "0xDE75D8", VA = "0xDE75D8")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xDE7664", Offset = "0xDE7664", VA = "0xDE7664")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xDE7780", Offset = "0xDE7780", VA = "0xDE7780")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xDE77E0", Offset = "0xDE77E0", VA = "0xDE77E0")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60000BF")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xDE7C64", Offset = "0xDE7C64", VA = "0xDE7C64")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xDE7FC4", Offset = "0xDE7FC4", VA = "0xDE7FC4")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xDE816C", Offset = "0xDE816C", VA = "0xDE816C")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xDE8434", Offset = "0xDE8434", VA = "0xDE8434")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xDE8520", Offset = "0xDE8520", VA = "0xDE8520")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xDE88D4", Offset = "0xDE88D4", VA = "0xDE88D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xDE8C54", Offset = "0xDE8C54", VA = "0xDE8C54")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xDE95EC", Offset = "0xDE95EC", VA = "0xDE95EC")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xDE9640", Offset = "0xDE9640", VA = "0xDE9640")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xDE879C", Offset = "0xDE879C", VA = "0xDE879C")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xDE8838", Offset = "0xDE8838", VA = "0xDE8838")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xDE9670", Offset = "0xDE9670", VA = "0xDE9670")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xDE8FC8", Offset = "0xDE8FC8", VA = "0xDE8FC8")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xDE98B8", Offset = "0xDE98B8", VA = "0xDE98B8")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xDE96D8", Offset = "0xDE96D8", VA = "0xDE96D8")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xDE9BF8", Offset = "0xDE9BF8", VA = "0xDE9BF8")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xDE9FFC", Offset = "0xDE9FFC", VA = "0xDE9FFC")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xDEA22C", Offset = "0xDEA22C", VA = "0xDEA22C")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xDEA36C", Offset = "0xDEA36C", VA = "0xDEA36C")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xDEA524", Offset = "0xDEA524", VA = "0xDEA524")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xDE90F0", Offset = "0xDE90F0", VA = "0xDE90F0")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xDEA5FC", Offset = "0xDEA5FC", VA = "0xDEA5FC")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xDE8FD8", Offset = "0xDE8FD8", VA = "0xDE8FD8")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xDEA6F0", Offset = "0xDEA6F0", VA = "0xDEA6F0")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xDEAC38", Offset = "0xDEAC38", VA = "0xDEAC38")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xDEB0F8", Offset = "0xDEB0F8", VA = "0xDEB0F8")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xDEB170", Offset = "0xDEB170", VA = "0xDEB170")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xDEB1EC", Offset = "0xDEB1EC", VA = "0xDEB1EC")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xDE9488", Offset = "0xDE9488", VA = "0xDE9488")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xDEA7B8", Offset = "0xDEA7B8", VA = "0xDEA7B8")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xDEB41C", Offset = "0xDEB41C", VA = "0xDEB41C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8E6A8", Offset = "0xA8E6A8")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xDEB4C4", Offset = "0xDEB4C4", VA = "0xDEB4C4")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xDEB2C0", Offset = "0xDEB2C0", VA = "0xDEB2C0")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xDEB58C", Offset = "0xDEB58C", VA = "0xDEB58C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xDEB590", Offset = "0xDEB590", VA = "0xDEB590")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xDEB2BC", Offset = "0xDEB2BC", VA = "0xDEB2BC")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xDEB594", Offset = "0xDEB594", VA = "0xDEB594")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200001B")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xDEB920", Offset = "0xDEB920", VA = "0xDEB920")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200001C")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xDEB9DC", Offset = "0xDEB9DC", VA = "0xDEB9DC")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xDECCE4", Offset = "0xDECCE4", VA = "0xDECCE4")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xDEC888", Offset = "0xDEC888", VA = "0xDEC888")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xDEC620", Offset = "0xDEC620", VA = "0xDEC620")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xDEC6FC", Offset = "0xDEC6FC", VA = "0xDEC6FC")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xDECF48", Offset = "0xDECF48", VA = "0xDECF48")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200001D")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40000CD")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xD8CA00", Offset = "0xD8CA00", VA = "0xD8CA00")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200001E")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xD8CC78", Offset = "0xD8CC78", VA = "0xD8CC78")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xD8D084", Offset = "0xD8D084", VA = "0xD8D084")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200001F")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xD8D198", Offset = "0xD8D198", VA = "0xD8D198")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xD8D2F4", Offset = "0xD8D2F4", VA = "0xD8D2F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xD8D41C", Offset = "0xD8D41C", VA = "0xD8D41C")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000020")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xD8D480", Offset = "0xD8D480", VA = "0xD8D480")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xD8CDA0", Offset = "0xD8CDA0", VA = "0xD8CDA0")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xD8DA64", Offset = "0xD8DA64", VA = "0xD8DA64")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xD8DAC4", Offset = "0xD8DAC4", VA = "0xD8DAC4")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xD8E2A8", Offset = "0xD8E2A8", VA = "0xD8E2A8")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xD8D0E8", Offset = "0xD8D0E8", VA = "0xD8D0E8")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000021")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000253")]
	public enum PacketMode
	{
		[Token(Token = "0x40009DD")]
		SDK,
		[Token(Token = "0x40009DE")]
		Unity
	}

	[Token(Token = "0x2000254")]
	public struct ControllerPose
	{
		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xD8FE70", Offset = "0xD8FE70", VA = "0xD8FE70")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000255")]
	public struct PoseFrame
	{
		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xD8FFCC", Offset = "0xD8FFCC", VA = "0xD8FFCC")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xD8FA9C", Offset = "0xD8FA9C", VA = "0xD8FA9C")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60000FA")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xD8FAAC", Offset = "0xD8FAAC", VA = "0xD8FAAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xD8FB4C", Offset = "0xD8FB4C", VA = "0xD8FB4C")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xD8FDC4", Offset = "0xD8FDC4", VA = "0xD8FDC4")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xD8FE60", Offset = "0xD8FE60", VA = "0xD8FE60")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000022")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xD90384", Offset = "0xD90384", VA = "0xD90384")]
	private void Update()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xD904EC", Offset = "0xD904EC", VA = "0xD904EC")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000023")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xD90558", Offset = "0xD90558", VA = "0xD90558")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xD906C4", Offset = "0xD906C4", VA = "0xD906C4")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xD90A68", Offset = "0xD90A68", VA = "0xD90A68")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xD90D34", Offset = "0xD90D34", VA = "0xD90D34", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xD90D60", Offset = "0xD90D60", VA = "0xD90D60")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000024")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000256")]
	public enum TextureType
	{
		[Token(Token = "0x40009EF")]
		DiffuseTextures,
		[Token(Token = "0x40009F0")]
		NormalMaps,
		[Token(Token = "0x40009F1")]
		RoughnessMaps,
		[Token(Token = "0x40009F2")]
		Count
	}

	[Token(Token = "0x2000257")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000258")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000259")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200025A")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xD931D8", Offset = "0xD931D8", VA = "0xD931D8")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200025B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88558", Offset = "0xA88558")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x170000FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0xD93BD4", Offset = "0xD93BD4", VA = "0xD93BD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0xD93C3C", Offset = "0xD93C3C", VA = "0xD93C3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xD92FEC", Offset = "0xD92FEC", VA = "0xD92FEC")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xD93514", Offset = "0xD93514", VA = "0xD93514", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xD93518", Offset = "0xD93518", VA = "0xD93518", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xD93BDC", Offset = "0xD93BDC", VA = "0xD93BDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000101")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000102")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000103")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000104")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xD90E10", Offset = "0xD90E10", VA = "0xD90E10")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xD90FC4", Offset = "0xD90FC4", VA = "0xD90FC4")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xD91004", Offset = "0xD91004", VA = "0xD91004")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xD91754", Offset = "0xD91754", VA = "0xD91754")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xD919F0", Offset = "0xD919F0", VA = "0xD919F0")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xD91098", Offset = "0xD91098", VA = "0xD91098")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xD91AE0", Offset = "0xD91AE0", VA = "0xD91AE0")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xD914B4", Offset = "0xD914B4", VA = "0xD914B4")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xD91D74", Offset = "0xD91D74", VA = "0xD91D74")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xD91FEC", Offset = "0xD91FEC", VA = "0xD91FEC")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xD920E8", Offset = "0xD920E8", VA = "0xD920E8")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xD92120", Offset = "0xD92120", VA = "0xD92120")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xD916BC", Offset = "0xD916BC", VA = "0xD916BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8E70C", Offset = "0xA8E70C")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xD93018", Offset = "0xD93018", VA = "0xD93018")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000025")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000007")]
	public float Duration
	{
		[Token(Token = "0x6000115")]
		[Address(RVA = "0xD93C44", Offset = "0xD93C44", VA = "0xD93C44")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000008")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000116")]
		[Address(RVA = "0xD93CB0", Offset = "0xD93CB0", VA = "0xD93CB0")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xD93D34", Offset = "0xD93D34", VA = "0xD93D34")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xD93E1C", Offset = "0xD93E1C", VA = "0xD93E1C")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xD93F8C", Offset = "0xD93F8C", VA = "0xD93F8C")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xD940B4", Offset = "0xD940B4", VA = "0xD940B4")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xD94184", Offset = "0xD94184", VA = "0xD94184")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xD9438C", Offset = "0xD9438C", VA = "0xD9438C")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xD945E4", Offset = "0xD945E4", VA = "0xD945E4")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000026")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x600011E")]
	[Address(RVA = "0xDBADD4", Offset = "0xDBADD4", VA = "0xDBADD4")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xDBAEE8", Offset = "0xDBAEE8", VA = "0xDBAEE8")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xDBB094", Offset = "0xDBB094", VA = "0xDBB094")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xDBAF58", Offset = "0xDBAF58", VA = "0xDBAF58")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xDBAFEC", Offset = "0xDBAFEC", VA = "0xDBAFEC")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000027")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000123")]
	[Address(RVA = "0xDBA9D4", Offset = "0xDBA9D4", VA = "0xDBA9D4")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xDBAD78", Offset = "0xDBAD78", VA = "0xDBAD78")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xDBAB74", Offset = "0xDBAB74", VA = "0xDBAB74")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xDBABEC", Offset = "0xDBABEC", VA = "0xDBABEC")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xDBAC88", Offset = "0xDBAC88", VA = "0xDBAC88")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000028")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400010C")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400010D")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xD947D4", Offset = "0xD947D4", VA = "0xD947D4")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xD94860", Offset = "0xD94860", VA = "0xD94860", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xD9487C", Offset = "0xD9487C", VA = "0xD9487C")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xD94A28", Offset = "0xD94A28", VA = "0xD94A28")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xD94C0C", Offset = "0xD94C0C", VA = "0xD94C0C")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000029")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xD94C9C", Offset = "0xD94C9C", VA = "0xD94C9C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xD94D80", Offset = "0xD94D80", VA = "0xD94D80")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xD94F78", Offset = "0xD94F78", VA = "0xD94F78")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xD9530C", Offset = "0xD9530C", VA = "0xD9530C")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xD95404", Offset = "0xD95404", VA = "0xD95404")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x200002A")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000116")]
	Body = 1,
	[Token(Token = "0x4000117")]
	Hands = 2,
	[Token(Token = "0x4000118")]
	Base = 4,
	[Token(Token = "0x4000119")]
	BodyTilt = 0x10,
	[Token(Token = "0x400011A")]
	Expressive = 0x20,
	[Token(Token = "0x400011B")]
	All = -1
}
[Token(Token = "0x200002B")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400011D")]
	AvatarSpecification,
	[Token(Token = "0x400011E")]
	AssetLoaded,
	[Token(Token = "0x400011F")]
	Count
}
[Token(Token = "0x200002C")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x200002D")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x200002E")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000125")]
	Mesh,
	[Token(Token = "0x4000126")]
	Texture,
	[Token(Token = "0x4000127")]
	Pose,
	[Token(Token = "0x4000128")]
	Material,
	[Token(Token = "0x4000129")]
	CombinedMesh,
	[Token(Token = "0x400012A")]
	PBSMaterial,
	[Token(Token = "0x400012B")]
	FailedLoad,
	[Token(Token = "0x400012C")]
	Count
}
[Token(Token = "0x200002F")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000030")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000031")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000032")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000033")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000034")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000161")]
	RGB24,
	[Token(Token = "0x4000162")]
	DXT1,
	[Token(Token = "0x4000163")]
	DXT5,
	[Token(Token = "0x4000164")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000165")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000166")]
	Count
}
[Token(Token = "0x2000035")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000036")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x400016E")]
	SkinnedMeshRender,
	[Token(Token = "0x400016F")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000170")]
	ProjectorRender,
	[Token(Token = "0x4000171")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000172")]
	Count
}
[Token(Token = "0x2000037")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000174")]
	Unknown,
	[Token(Token = "0x4000175")]
	Default,
	[Token(Token = "0x4000176")]
	Verbose,
	[Token(Token = "0x4000177")]
	Debug,
	[Token(Token = "0x4000178")]
	Info,
	[Token(Token = "0x4000179")]
	Warn,
	[Token(Token = "0x400017A")]
	Error,
	[Token(Token = "0x400017B")]
	Fatal,
	[Token(Token = "0x400017C")]
	Silent
}
[Token(Token = "0x2000038")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000039")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000181")]
	One = 1,
	[Token(Token = "0x4000182")]
	Two = 2,
	[Token(Token = "0x4000183")]
	Three = 4,
	[Token(Token = "0x4000184")]
	Joystick = 8
}
[Token(Token = "0x200003A")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000186")]
	One = 1,
	[Token(Token = "0x4000187")]
	Two = 2,
	[Token(Token = "0x4000188")]
	Joystick = 4,
	[Token(Token = "0x4000189")]
	ThumbRest = 8,
	[Token(Token = "0x400018A")]
	Index = 0x10,
	[Token(Token = "0x400018B")]
	Pointing = 0x40,
	[Token(Token = "0x400018C")]
	ThumbUp = 0x80
}
[Token(Token = "0x200003B")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x200003C")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x200003D")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x200003E")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200003F")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000040")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000041")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000042")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000043")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40001AC")]
	Add,
	[Token(Token = "0x40001AD")]
	Multiply,
	[Token(Token = "0x40001AE")]
	Count
}
[Token(Token = "0x2000044")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40001B0")]
	Color,
	[Token(Token = "0x40001B1")]
	Texture,
	[Token(Token = "0x40001B2")]
	TextureSingleChannel,
	[Token(Token = "0x40001B3")]
	Parallax,
	[Token(Token = "0x40001B4")]
	Count
}
[Token(Token = "0x2000045")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40001B6")]
	None,
	[Token(Token = "0x40001B7")]
	Positional,
	[Token(Token = "0x40001B8")]
	ViewReflection,
	[Token(Token = "0x40001B9")]
	Fresnel,
	[Token(Token = "0x40001BA")]
	Pulse,
	[Token(Token = "0x40001BB")]
	Count
}
[Token(Token = "0x2000046")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40001BD")]
	Touch,
	[Token(Token = "0x40001BE")]
	Malibu,
	[Token(Token = "0x40001BF")]
	Go,
	[Token(Token = "0x40001C0")]
	Quest,
	[Token(Token = "0x40001C1")]
	Count
}
[Token(Token = "0x2000047")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40001C3")]
	Lowest = 1,
	[Token(Token = "0x40001C4")]
	Medium = 3,
	[Token(Token = "0x40001C5")]
	Highest = 5
}
[Token(Token = "0x2000048")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40001C7")]
	Unknown = -1,
	[Token(Token = "0x40001C8")]
	One,
	[Token(Token = "0x40001C9")]
	Two
}
[Token(Token = "0x2000049")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x180F760", Offset = "0x180F760", VA = "0x180F760")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x180F790", Offset = "0x180F790", VA = "0x180F790", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x180F9B0", Offset = "0x180F9B0", VA = "0x180F9B0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200004A")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x180FA94", Offset = "0x180FA94", VA = "0x180FA94")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x180FAC4", Offset = "0x180FAC4", VA = "0x180FAC4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x180FE58", Offset = "0x180FE58", VA = "0x180FE58", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200004B")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x180EE08", Offset = "0x180EE08", VA = "0x180EE08")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x180EE38", Offset = "0x180EE38", VA = "0x180EE38", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x180F0CC", Offset = "0x180F0CC", VA = "0x180F0CC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200004C")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x180FFC0", Offset = "0x180FFC0", VA = "0x180FFC0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x180FFF0", Offset = "0x180FFF0", VA = "0x180FFF0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x18101E4", Offset = "0x18101E4", VA = "0x18101E4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200004D")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xDEB928", Offset = "0xDEB928", VA = "0xDEB928")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x200004E")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x200004F")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40001FE")]
	FirstPerson = 1,
	[Token(Token = "0x40001FF")]
	ThirdPerson = 2,
	[Token(Token = "0x4000200")]
	SelfOccluding = 4
}
[Token(Token = "0x2000050")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000051")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000052")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000053")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000054")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000216")]
	Default,
	[Token(Token = "0x4000217")]
	GripSphere,
	[Token(Token = "0x4000218")]
	GripCube,
	[Token(Token = "0x4000219")]
	Count
}
[Token(Token = "0x2000055")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400021B")]
	Body,
	[Token(Token = "0x400021C")]
	Clothing,
	[Token(Token = "0x400021D")]
	Eyewear,
	[Token(Token = "0x400021E")]
	Hair,
	[Token(Token = "0x400021F")]
	Beard,
	[Token(Token = "0x4000220")]
	Count
}
[Token(Token = "0x2000056")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000057")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000058")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000059")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x200005A")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x400022A")]
	AvatarHead,
	[Token(Token = "0x400022B")]
	AvatarHand,
	[Token(Token = "0x400022C")]
	Object,
	[Token(Token = "0x400022D")]
	ObjectStatic,
	[Token(Token = "0x400022E")]
	Count
}
[Token(Token = "0x200005B")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x200005C")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x200005D")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x200005E")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x200005F")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x400023A")]
	Point,
	[Token(Token = "0x400023B")]
	Direction,
	[Token(Token = "0x400023C")]
	Spot,
	[Token(Token = "0x400023D")]
	Count
}
[Token(Token = "0x2000060")]
public struct ovrAvatarLight
{
	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000061")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000062")]
public struct ovrAvatarLights
{
	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000063")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000064")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000253")]
	None = 0u,
	[Token(Token = "0x4000254")]
	GazeTarget = 1u,
	[Token(Token = "0x4000255")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000065")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000066")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000067")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000068")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000069")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x200006A")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x200025C")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xD964AC", Offset = "0xD964AC", VA = "0xD964AC")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x400026A")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ovrAvatarDebugContext debugContext;

	[Token(Token = "0x17000009")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000153")]
		[Address(RVA = "0xD8E33C", Offset = "0xD8E33C", VA = "0xD8E33C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xD95414", Offset = "0xD95414", VA = "0xD95414")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xD9569C", Offset = "0xD9569C", VA = "0xD9569C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xD95710", Offset = "0xD95710", VA = "0xD95710")]
	private void Update()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xD95F60", Offset = "0xD95F60", VA = "0xD95F60")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xD95FB8", Offset = "0xD95FB8", VA = "0xD95FB8")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xD96010", Offset = "0xD96010", VA = "0xD96010")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xD96078", Offset = "0xD96078", VA = "0xD96078")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xD960E0", Offset = "0xD960E0", VA = "0xD960E0")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xD95D98", Offset = "0xD95D98", VA = "0xD95D98")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xD961C0", Offset = "0xD961C0", VA = "0xD961C0")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xD962DC", Offset = "0xD962DC", VA = "0xD962DC")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xD8E4F0", Offset = "0xD8E4F0", VA = "0xD8E4F0")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xD963BC", Offset = "0xD963BC", VA = "0xD963BC")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xD95650", Offset = "0xD95650", VA = "0xD95650")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xD917B4", Offset = "0xD917B4", VA = "0xD917B4")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xD96494", Offset = "0xD96494", VA = "0xD96494")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x200006B")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700000A")]
	public static string AppID
	{
		[Token(Token = "0x6000164")]
		[Address(RVA = "0xD96454", Offset = "0xD96454", VA = "0xD96454")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000165")]
		[Address(RVA = "0xD96654", Offset = "0xD96654", VA = "0xD96654")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000166")]
		[Address(RVA = "0xD96474", Offset = "0xD96474", VA = "0xD96474")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000167")]
		[Address(RVA = "0xD96684", Offset = "0xD96684", VA = "0xD96684")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000168")]
		[Address(RVA = "0xD96528", Offset = "0xD96528", VA = "0xD96528")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000169")]
		[Address(RVA = "0xD966B4", Offset = "0xD966B4", VA = "0xD966B4")]
		set
		{
		}
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xD9670C", Offset = "0xD9670C", VA = "0xD9670C")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x200006C")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xD97EC4", Offset = "0xD97EC4", VA = "0xD97EC4")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xD8D488", Offset = "0xD8D488", VA = "0xD8D488")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xD9803C", Offset = "0xD9803C", VA = "0xD9803C")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xD9819C", Offset = "0xD9819C", VA = "0xD9819C")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x200006D")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xD981AC", Offset = "0xD981AC", VA = "0xD981AC")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xD8D6B0", Offset = "0xD8D6B0", VA = "0xD8D6B0")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xD982F4", Offset = "0xD982F4", VA = "0xD982F4")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x200006E")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x400027A")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x400027B")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x400027C")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xD9677C", Offset = "0xD9677C", VA = "0xD9677C")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xD8D848", Offset = "0xD8D848", VA = "0xD8D848")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xD97680", Offset = "0xD97680", VA = "0xD97680")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xD96DB8", Offset = "0xD96DB8", VA = "0xD96DB8")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xD96B88", Offset = "0xD96B88", VA = "0xD96B88")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xD96C9C", Offset = "0xD96C9C", VA = "0xD96C9C")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xD97EB4", Offset = "0xD97EB4", VA = "0xD97EB4")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x200006F")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200025D")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x200025E")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xD991A4", Offset = "0xD991A4", VA = "0xD991A4")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x200025F")]
	public struct TextureSet
	{
		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xD99200", Offset = "0xD99200", VA = "0xD99200")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88568", Offset = "0xA88568")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x170000FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0xD99974", Offset = "0xD99974", VA = "0xD99974", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0xD999DC", Offset = "0xD999DC", VA = "0xD999DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xD992E0", Offset = "0xD992E0", VA = "0xD992E0")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xD99488", Offset = "0xD99488", VA = "0xD99488", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xD9948C", Offset = "0xD9948C", VA = "0xD9948C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xD9997C", Offset = "0xD9997C", VA = "0xD9997C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000280")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000281")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000284")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000285")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000286")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000287")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000288")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000289")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x400028A")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xD98B58", Offset = "0xD98B58", VA = "0xD98B58")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xD98FAC", Offset = "0xD98FAC", VA = "0xD98FAC")]
	public void Update()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xD93B84", Offset = "0xD93B84", VA = "0xD93B84")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xD91BC4", Offset = "0xD91BC4", VA = "0xD91BC4")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xD99114", Offset = "0xD99114", VA = "0xD99114")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xD91838", Offset = "0xD91838", VA = "0xD91838")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xD91A38", Offset = "0xD91A38", VA = "0xD91A38")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xD99230", Offset = "0xD99230", VA = "0xD99230")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8E810", Offset = "0xA8E810")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xD96174", Offset = "0xD96174", VA = "0xD96174")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xD9930C", Offset = "0xD9930C", VA = "0xD9930C")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000070")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xD999E4", Offset = "0xD999E4", VA = "0xD999E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xD99B4C", Offset = "0xD99B4C", VA = "0xD99B4C")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000071")]
public class UnbinaryEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool exitAppOnFailure;

	[Token(Token = "0x14000001")]
	public static event Action UserFailedEntitlementCheck
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0x180D6D8", Offset = "0x180D6D8", VA = "0x180D6D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8E874", Offset = "0xA8E874")]
		add
		{
		}
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x180D78C", Offset = "0x180D78C", VA = "0x180D78C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8E884", Offset = "0xA8E884")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event Action UserPassedEntitlementCheck
	{
		[Token(Token = "0x6000187")]
		[Address(RVA = "0x180D840", Offset = "0x180D840", VA = "0x180D840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8E894", Offset = "0xA8E894")]
		add
		{
		}
		[Token(Token = "0x6000188")]
		[Address(RVA = "0x180D8F8", Offset = "0x180D8F8", VA = "0x180D8F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8E8A4", Offset = "0xA8E8A4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x180D9B0", Offset = "0x180D9B0", VA = "0x180D9B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x180DDE8", Offset = "0x180DDE8", VA = "0x180DDE8")]
	private void EntitlementCheckCallback(Message msg)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x180DB6C", Offset = "0x180DB6C", VA = "0x180DB6C")]
	private void HandleEntitlementCheckResult(bool result)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x180DE24", Offset = "0x180DE24", VA = "0x180DE24")]
	public UnbinaryEntitlementCheck()
	{
	}
}
[Token(Token = "0x2000072")]
public class BufferedAudioStream
{
	[Token(Token = "0x4000290")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource audio;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] audioBuffer;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int writePos;

	[Token(Token = "0x4000294")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x4000295")]
	private const int sampleRate = 48000;

	[Token(Token = "0x4000296")]
	private const int bufferSize = 12000;

	[Token(Token = "0x4000297")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float playbackDelayRemaining;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float remainingBufferTime;

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xDBC9D4", Offset = "0xDBC9D4", VA = "0xDBC9D4")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xDBCB00", Offset = "0xDBCB00", VA = "0xDBCB00")]
	public void Update()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xDBCAB0", Offset = "0xDBCAB0", VA = "0xDBCAB0")]
	private void Stop()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xDBCCD8", Offset = "0xDBCCD8", VA = "0xDBCCD8")]
	public void AddData(float[] samples)
	{
	}
}
[Token(Token = "0x2000073")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000261")]
	public delegate void OnClick();

	[Token(Token = "0x2000262")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000263")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000264")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000265")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88578", Offset = "0xA88578")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xDBEFA0", Offset = "0xDBEFA0", VA = "0xDBEFA0")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xDBF9B4", Offset = "0xDBF9B4", VA = "0xDBF9B4")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000266")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88588", Offset = "0xA88588")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xDBF220", Offset = "0xDBF220", VA = "0xDBF220")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xDBFBD8", Offset = "0xDBFBD8", VA = "0xDBFBD8")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000267")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88598", Offset = "0xA88598")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0xDBF458", Offset = "0xDBF458", VA = "0xDBF458")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xDBFE50", Offset = "0xDBFE50", VA = "0xDBFE50")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA885A8", Offset = "0xA885A8")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xDBF60C", Offset = "0xDBF60C", VA = "0xDBF60C")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0xDC0204", Offset = "0xDC0204", VA = "0xDC0204")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA885B8", Offset = "0xA885B8")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xDBF880", Offset = "0xDBF880", VA = "0xDBF880")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xDC0224", Offset = "0xDC0224", VA = "0xDC0224")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x400029A")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x400029B")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x400029C")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40002A9")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40002AA")]
	private const float marginH = 16f;

	[Token(Token = "0x40002AB")]
	private const float marginV = 16f;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xDBDE2C", Offset = "0xDBDE2C", VA = "0xDBDE2C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xDBE2EC", Offset = "0xDBE2EC", VA = "0xDBE2EC")]
	public void Show()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xDBE8CC", Offset = "0xDBE8CC", VA = "0xDBE8CC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xDBE678", Offset = "0xDBE678", VA = "0xDBE678")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xDBEA74", Offset = "0xDBEA74", VA = "0xDBEA74")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xDBED6C", Offset = "0xDBED6C", VA = "0xDBED6C")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xDBEFA8", Offset = "0xDBEFA8", VA = "0xDBEFA8")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xDBF08C", Offset = "0xDBF08C", VA = "0xDBF08C")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xDBF228", Offset = "0xDBF228", VA = "0xDBF228")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xDBF2C4", Offset = "0xDBF2C4", VA = "0xDBF2C4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xDBF460", Offset = "0xDBF460", VA = "0xDBF460")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xDBF614", Offset = "0xDBF614", VA = "0xDBF614")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xDBF888", Offset = "0xDBF888", VA = "0xDBF888")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xDBF938", Offset = "0xDBF938", VA = "0xDBF938")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000074")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xDC62B4", Offset = "0xDC62B4", VA = "0xDC62B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xDC6350", Offset = "0xDC6350", VA = "0xDC6350")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xDC6418", Offset = "0xDC6418", VA = "0xDC6418")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xDC6454", Offset = "0xDC6454", VA = "0xDC6454")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000075")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x200026A")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000A2D")]
		On,
		[Token(Token = "0x4000A2E")]
		Off,
		[Token(Token = "0x4000A2F")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _startPoint;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _forward;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _endPoint;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _hitTarget;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700000D")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xDC6CD8", Offset = "0xDC6CD8", VA = "0xDC6CD8")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0xDBE2A8", Offset = "0xDBE2A8", VA = "0xDBE2A8")]
		set
		{
		}
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xDC6CE0", Offset = "0xDC6CE0", VA = "0xDC6CE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xDC6D40", Offset = "0xDC6D40", VA = "0xDC6D40")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xDC6DD4", Offset = "0xDC6DD4", VA = "0xDC6DD4", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xDC6DF0", Offset = "0xDC6DF0", VA = "0xDC6DF0", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xDC6E44", Offset = "0xDC6E44", VA = "0xDC6E44")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xDC70A0", Offset = "0xDC70A0", VA = "0xDC70A0")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xDC71B4", Offset = "0xDC71B4", VA = "0xDC71B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xDC7248", Offset = "0xDC7248", VA = "0xDC7248")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000076")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xDBC280", Offset = "0xDBC280", VA = "0xDBC280")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xDBC52C", Offset = "0xDBC52C", VA = "0xDBC52C")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xDBC9CC", Offset = "0xDBC9CC", VA = "0xDBC9CC")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x2000077")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xDC5C38", Offset = "0xDC5C38", VA = "0xDC5C38")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xDC5CC8", Offset = "0xDC5CC8", VA = "0xDC5CC8")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xDC5F18", Offset = "0xDC5F18", VA = "0xDC5F18")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x2000078")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x1700000E")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0xDC5FC4", Offset = "0xDC5FC4", VA = "0xDC5FC4")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000003")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0xDBC488", Offset = "0xDBC488", VA = "0xDBC488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8E8B4", Offset = "0xA8E8B4")]
		add
		{
		}
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0xDC5F20", Offset = "0xDC5F20", VA = "0xDC5F20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8E8C4", Offset = "0xA8E8C4")]
		remove
		{
		}
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xDC5FD0", Offset = "0xDC5FD0", VA = "0xDC5FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xDC6128", Offset = "0xDC6128", VA = "0xDC6128")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xDC629C", Offset = "0xDC629C", VA = "0xDC629C")]
	private void Recentered()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xDC62A4", Offset = "0xDC62A4", VA = "0xDC62A4")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x2000079")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA88E64", Offset = "0xA88E64")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA88E9C", Offset = "0xA88E9C")]
	public bool EnableCollision;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA88ED4", Offset = "0xA88ED4")]
	public float MaxFade;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA88F0C", Offset = "0xA88F0C")]
	public float FadeMinDistance;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA88F44", Offset = "0xA88F44")]
	public float FadeMaxDistance;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xDBCE14", Offset = "0xDBCE14", VA = "0xDBCE14")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xDBCEA4", Offset = "0xDBCEA4", VA = "0xDBCEA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xDBCF28", Offset = "0xDBCF28", VA = "0xDBCF28")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xDBCF2C", Offset = "0xDBCF2C", VA = "0xDBCF2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xDBCF50", Offset = "0xDBCF50", VA = "0xDBCF50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xDBCF74", Offset = "0xDBCF74", VA = "0xDBCF74")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x200007A")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xDC7460", Offset = "0xDC7460", VA = "0xDC7460")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xDC7524", Offset = "0xDC7524", VA = "0xDC7524")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200007B")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x200026B")]
	public enum States
	{
		[Token(Token = "0x4000A31")]
		Ready,
		[Token(Token = "0x4000A32")]
		Aim,
		[Token(Token = "0x4000A33")]
		CancelAim,
		[Token(Token = "0x4000A34")]
		PreTeleport,
		[Token(Token = "0x4000A35")]
		CancelTeleport,
		[Token(Token = "0x4000A36")]
		Teleporting,
		[Token(Token = "0x4000A37")]
		PostTeleport
	}

	[Token(Token = "0x200026C")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000A39")]
		None,
		[Token(Token = "0x4000A3A")]
		Aim,
		[Token(Token = "0x4000A3B")]
		PreTeleport,
		[Token(Token = "0x4000A3C")]
		Teleport
	}

	[Token(Token = "0x200026D")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000A3E")]
		Point,
		[Token(Token = "0x4000A3F")]
		Sphere,
		[Token(Token = "0x4000A40")]
		Capsule
	}

	[Token(Token = "0x200026E")]
	public class AimData
	{
		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8E4A4", Offset = "0xA8E4A4")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170000FE")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000F29")]
			[Address(RVA = "0xDCA81C", Offset = "0xDCA81C", VA = "0xDCA81C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA91054", Offset = "0xA91054")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0xDCA824", Offset = "0xDCA824", VA = "0xDCA824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA91064", Offset = "0xA91064")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xDCA7A0", Offset = "0xDCA7A0", VA = "0xDCA7A0")]
		public AimData()
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xDCA82C", Offset = "0xDCA82C", VA = "0xDCA82C")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200026F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA885C8", Offset = "0xA885C8")]
	private sealed class <ReadyStateCoroutine>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0xDCA5E0", Offset = "0xDCA5E0", VA = "0xDCA5E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000100")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F31")]
			[Address(RVA = "0xDCA648", Offset = "0xDCA648", VA = "0xDCA648", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xDC8A28", Offset = "0xDC8A28", VA = "0xDC8A28")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xDCA4D8", Offset = "0xDCA4D8", VA = "0xDCA4D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xDCA4DC", Offset = "0xDCA4DC", VA = "0xDCA4DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xDCA5E8", Offset = "0xDCA5E8", VA = "0xDCA5E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000270")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA885D8", Offset = "0xA885D8")]
	private sealed class <AimStateCoroutine>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000101")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F35")]
			[Address(RVA = "0xDC9F64", Offset = "0xDC9F64", VA = "0xDC9F64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F37")]
			[Address(RVA = "0xDC9FCC", Offset = "0xDC9FCC", VA = "0xDC9FCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xDC8F1C", Offset = "0xDC8F1C", VA = "0xDC8F1C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xDC9E14", Offset = "0xDC9E14", VA = "0xDC9E14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xDC9E18", Offset = "0xDC9E18", VA = "0xDC9E18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xDC9F6C", Offset = "0xDC9F6C", VA = "0xDC9F6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000271")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA885E8", Offset = "0xA885E8")]
	private sealed class <CancelAimStateCoroutine>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000103")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0xDCA084", Offset = "0xDCA084", VA = "0xDCA084", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0xDCA0EC", Offset = "0xDCA0EC", VA = "0xDCA0EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xDC910C", Offset = "0xDC910C", VA = "0xDC910C")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xDC9FD4", Offset = "0xDC9FD4", VA = "0xDC9FD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xDC9FD8", Offset = "0xDC9FD8", VA = "0xDC9FD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xDCA08C", Offset = "0xDCA08C", VA = "0xDCA08C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000272")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA885F8", Offset = "0xA885F8")]
	private sealed class <PreTeleportStateCoroutine>d__71 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F41")]
			[Address(RVA = "0xDCA468", Offset = "0xDCA468", VA = "0xDCA468", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F43")]
			[Address(RVA = "0xDCA4D0", Offset = "0xDCA4D0", VA = "0xDCA4D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xDC92FC", Offset = "0xDC92FC", VA = "0xDC92FC")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__71(int <>1__state)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xDCA384", Offset = "0xDCA384", VA = "0xDCA384", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xDCA388", Offset = "0xDCA388", VA = "0xDCA388", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xDCA470", Offset = "0xDCA470", VA = "0xDCA470", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000273")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88608", Offset = "0xA88608")]
	private sealed class <CancelTeleportStateCoroutine>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F47")]
			[Address(RVA = "0xDCA1A4", Offset = "0xDCA1A4", VA = "0xDCA1A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F49")]
			[Address(RVA = "0xDCA20C", Offset = "0xDCA20C", VA = "0xDCA20C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xDC94EC", Offset = "0xDC94EC", VA = "0xDC94EC")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xDCA0F4", Offset = "0xDCA0F4", VA = "0xDCA0F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xDCA0F8", Offset = "0xDCA0F8", VA = "0xDCA0F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xDCA1AC", Offset = "0xDCA1AC", VA = "0xDCA1AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000274")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88618", Offset = "0xA88618")]
	private sealed class <TeleportingStateCoroutine>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0xDCA730", Offset = "0xDCA730", VA = "0xDCA730", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0xDCA798", Offset = "0xDCA798", VA = "0xDCA798", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xDC96DC", Offset = "0xDC96DC", VA = "0xDC96DC")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xDCA650", Offset = "0xDCA650", VA = "0xDCA650", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xDCA654", Offset = "0xDCA654", VA = "0xDCA654", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xDCA738", Offset = "0xDCA738", VA = "0xDCA738", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000275")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88628", Offset = "0xA88628")]
	private sealed class <PostTeleportStateCoroutine>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F53")]
			[Address(RVA = "0xDCA314", Offset = "0xDCA314", VA = "0xDCA314", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F55")]
			[Address(RVA = "0xDCA37C", Offset = "0xDCA37C", VA = "0xDCA37C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xDC98CC", Offset = "0xDC98CC", VA = "0xDC98CC")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xDCA214", Offset = "0xDCA214", VA = "0xDCA214", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xDCA218", Offset = "0xDCA218", VA = "0xDCA218", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xDCA31C", Offset = "0xDCA31C", VA = "0xDCA31C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA88F7C", Offset = "0xA88F7C")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA88FB4", Offset = "0xA88FB4")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA88FEC", Offset = "0xA88FEC")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89024", Offset = "0xA89024")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8905C", Offset = "0xA8905C")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89094", Offset = "0xA89094")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA890CC", Offset = "0xA890CC")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89104", Offset = "0xA89104")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8913C", Offset = "0xA8913C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8914C", Offset = "0xA8914C")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89184", Offset = "0xA89184")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA891CC", Offset = "0xA891CC")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA891DC", Offset = "0xA891DC")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89214", Offset = "0xA89214")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8924C", Offset = "0xA8924C")]
	public float AimCollisionRadius;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89284", Offset = "0xA89284")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700000F")]
	public States CurrentState
	{
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0xDC7F2C", Offset = "0xDC7F2C", VA = "0xDC7F2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8E8D4", Offset = "0xA8E8D4")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0xDC7F34", Offset = "0xDC7F34", VA = "0xDC7F34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8E8E4", Offset = "0xA8E8E4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0xDC8164", Offset = "0xDC8164", VA = "0xDC8164")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000011")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0xDC818C", Offset = "0xDC818C", VA = "0xDC818C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8E914", Offset = "0xA8E914")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001CB")]
		[Address(RVA = "0xDC8194", Offset = "0xDC8194", VA = "0xDC8194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8E924", Offset = "0xA8E924")]
		private set
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xDC7F3C", Offset = "0xDC7F3C", VA = "0xDC7F3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8E8F4", Offset = "0xA8E8F4")]
		add
		{
		}
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0xDC7FE0", Offset = "0xDC7FE0", VA = "0xDC7FE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8E904", Offset = "0xA8E904")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0xDC88E0", Offset = "0xDC88E0", VA = "0xDC88E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8E96C", Offset = "0xA8E96C")]
		add
		{
		}
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0xDC8984", Offset = "0xDC8984", VA = "0xDC8984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8E97C", Offset = "0xA8E97C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0xDC8A54", Offset = "0xDC8A54", VA = "0xDC8A54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8E9F0", Offset = "0xA8E9F0")]
		add
		{
		}
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0xDC8AF8", Offset = "0xDC8AF8", VA = "0xDC8AF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EA00", Offset = "0xA8EA00")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0xDC8B9C", Offset = "0xDC8B9C", VA = "0xDC8B9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EA10", Offset = "0xA8EA10")]
		add
		{
		}
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xDC8C40", Offset = "0xDC8C40", VA = "0xDC8C40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EA20", Offset = "0xA8EA20")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xDC8D58", Offset = "0xDC8D58", VA = "0xDC8D58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EA30", Offset = "0xA8EA30")]
		add
		{
		}
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xDC8DFC", Offset = "0xDC8DFC", VA = "0xDC8DFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EA40", Offset = "0xA8EA40")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0xDC8F48", Offset = "0xDC8F48", VA = "0xDC8F48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EAB4", Offset = "0xA8EAB4")]
		add
		{
		}
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xDC8FEC", Offset = "0xDC8FEC", VA = "0xDC8FEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EAC4", Offset = "0xA8EAC4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xDC9138", Offset = "0xDC9138", VA = "0xDC9138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EB38", Offset = "0xA8EB38")]
		add
		{
		}
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xDC91DC", Offset = "0xDC91DC", VA = "0xDC91DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EB48", Offset = "0xA8EB48")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0xDC9328", Offset = "0xDC9328", VA = "0xDC9328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EBBC", Offset = "0xA8EBBC")]
		add
		{
		}
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0xDC93CC", Offset = "0xDC93CC", VA = "0xDC93CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EBCC", Offset = "0xA8EBCC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xDC9518", Offset = "0xDC9518", VA = "0xDC9518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EC40", Offset = "0xA8EC40")]
		add
		{
		}
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0xDC95BC", Offset = "0xDC95BC", VA = "0xDC95BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EC50", Offset = "0xA8EC50")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xDC9708", Offset = "0xDC9708", VA = "0xDC9708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8ECC4", Offset = "0xA8ECC4")]
		add
		{
		}
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xDC97AC", Offset = "0xDC97AC", VA = "0xDC97AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8ECD4", Offset = "0xA8ECD4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0xDC98F8", Offset = "0xDC98F8", VA = "0xDC98F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8ED48", Offset = "0xA8ED48")]
		add
		{
		}
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0xDC999C", Offset = "0xDC999C", VA = "0xDC999C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8ED58", Offset = "0xA8ED58")]
		remove
		{
		}
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xDC7BFC", Offset = "0xDC7BFC", VA = "0xDC7BFC")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xDC7C20", Offset = "0xDC7C20", VA = "0xDC7C20")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xDC8084", Offset = "0xDC8084", VA = "0xDC8084")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xDC819C", Offset = "0xDC819C", VA = "0xDC819C")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xDC84F4", Offset = "0xDC84F4", VA = "0xDC84F4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA8E934", Offset = "0xA8E934")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xDC85AC", Offset = "0xDC85AC", VA = "0xDC85AC")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xDC86A4", Offset = "0xDC86A4", VA = "0xDC86A4")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xDC86C0", Offset = "0xDC86C0", VA = "0xDC86C0")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xDC8788", Offset = "0xDC8788", VA = "0xDC8788")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xDC87CC", Offset = "0xDC87CC", VA = "0xDC87CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xDC8834", Offset = "0xDC8834", VA = "0xDC8834", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xDC8864", Offset = "0xDC8864", VA = "0xDC8864")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8E98C", Offset = "0xA8E98C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xDC8CE4", Offset = "0xDC8CE4", VA = "0xDC8CE4")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xDC8EA0", Offset = "0xDC8EA0", VA = "0xDC8EA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8EA50", Offset = "0xA8EA50")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xDC9090", Offset = "0xDC9090", VA = "0xDC9090")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8EAD4", Offset = "0xA8EAD4")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xDC9280", Offset = "0xDC9280", VA = "0xDC9280")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8EB58", Offset = "0xA8EB58")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xDC9470", Offset = "0xDC9470", VA = "0xDC9470")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8EBDC", Offset = "0xA8EBDC")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xDC9660", Offset = "0xDC9660", VA = "0xDC9660")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8EC60", Offset = "0xA8EC60")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xDC9850", Offset = "0xDC9850", VA = "0xDC9850")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8ECE4", Offset = "0xA8ECE4")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xDC9A40", Offset = "0xDC9A40", VA = "0xDC9A40")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xDC9B84", Offset = "0xDC9B84", VA = "0xDC9B84")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xDC9BB8", Offset = "0xDC9BB8", VA = "0xDC9BB8")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xDC9CD8", Offset = "0xDC9CD8", VA = "0xDC9CD8")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xDC9E04", Offset = "0xDC9E04", VA = "0xDC9E04")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200007C")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000F")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x18045E8", Offset = "0x18045E8", VA = "0x18045E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8ED68", Offset = "0xA8ED68")]
		add
		{
		}
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x180468C", Offset = "0x180468C", VA = "0x180468C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8ED78", Offset = "0xA8ED78")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x1804730", Offset = "0x1804730", VA = "0x1804730")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8ED88", Offset = "0xA8ED88")]
		add
		{
		}
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x18047D4", Offset = "0x18047D4", VA = "0x18047D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8ED98", Offset = "0xA8ED98")]
		remove
		{
		}
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x1804878", Offset = "0x1804878", VA = "0x1804878")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x1804950", Offset = "0x1804950", VA = "0x1804950")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x1804954", Offset = "0x1804954", VA = "0x1804954")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x18049C8", Offset = "0x18049C8", VA = "0x18049C8")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x1804B38", Offset = "0x1804B38", VA = "0x1804B38")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x1804E1C", Offset = "0x1804E1C", VA = "0x1804E1C")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x180500C", Offset = "0x180500C", VA = "0x180500C")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200007D")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000200")]
	[Address(RVA = "0x18087EC", Offset = "0x18087EC", VA = "0x18087EC", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x1808890", Offset = "0x1808890", VA = "0x1808890", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000202")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x1808984", Offset = "0x1808984", VA = "0x1808984")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200007E")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8937C", Offset = "0xA8937C")]
	public float Range;

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x1808994", Offset = "0x1808994", VA = "0x1808994", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x1808AF0", Offset = "0x1808AF0", VA = "0x1808AF0")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200007F")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA893B4", Offset = "0xA893B4")]
	public float Range;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA893EC", Offset = "0xA893EC")]
	public float MinimumElevation;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89424", Offset = "0xA89424")]
	public float Gravity;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8945C", Offset = "0xA8945C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8945C", Offset = "0xA8945C")]
	public float AimVelocity;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA894B8", Offset = "0xA894B8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA894B8", Offset = "0xA894B8")]
	public float AimStep;

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x1808B00", Offset = "0x1808B00", VA = "0x1808B00", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x1808D4C", Offset = "0x1808D4C", VA = "0x1808D4C")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000080")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89510", Offset = "0xA89510")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x1808D60", Offset = "0x1808D60", VA = "0x1808D60")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x1808E64", Offset = "0x1808E64", VA = "0x1808E64")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x1808E94", Offset = "0x1808E94", VA = "0x1808E94")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x1808EC4", Offset = "0x1808EC4", VA = "0x1808EC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x1808F6C", Offset = "0x1808F6C", VA = "0x1808F6C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1808FD8", Offset = "0x1808FD8", VA = "0x1808FD8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x1809040", Offset = "0x1809040", VA = "0x1809040")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000081")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA89548", Offset = "0xA89548")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89558", Offset = "0xA89558")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89590", Offset = "0xA89590")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA895C8", Offset = "0xA895C8")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000012")]
	public bool IsValidDestination
	{
		[Token(Token = "0x600020F")]
		[Address(RVA = "0x180915C", Offset = "0x180915C", VA = "0x180915C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EDA8", Offset = "0xA8EDA8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000210")]
		[Address(RVA = "0x1809164", Offset = "0x1809164", VA = "0x1809164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EDB8", Offset = "0xA8EDB8")]
		private set
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000215")]
		[Address(RVA = "0x180931C", Offset = "0x180931C", VA = "0x180931C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EDC8", Offset = "0xA8EDC8")]
		add
		{
		}
		[Token(Token = "0x6000216")]
		[Address(RVA = "0x18093C0", Offset = "0x18093C0", VA = "0x18093C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EDD8", Offset = "0xA8EDD8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1809170", Offset = "0x1809170", VA = "0x1809170")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1809200", Offset = "0x1809200", VA = "0x1809200")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x18092D8", Offset = "0x18092D8", VA = "0x18092D8")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x1809318", Offset = "0x1809318", VA = "0x1809318")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x1809464", Offset = "0x1809464", VA = "0x1809464")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x18094CC", Offset = "0x18094CC", VA = "0x18094CC")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x18094EC", Offset = "0x18094EC", VA = "0x18094EC", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000082")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000276")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88638", Offset = "0xA88638")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700010D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F59")]
			[Address(RVA = "0x1809C04", Offset = "0x1809C04", VA = "0x1809C04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x1809C6C", Offset = "0x1809C6C", VA = "0x1809C6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x180992C", Offset = "0x180992C", VA = "0x180992C")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x1809B68", Offset = "0x1809B68", VA = "0x1809B68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x1809B6C", Offset = "0x1809B6C", VA = "0x1809B6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x1809C0C", Offset = "0x1809C0C", VA = "0x1809C0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88648", Offset = "0xA88648")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700010F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x1809AF8", Offset = "0x1809AF8", VA = "0x1809AF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x1809B60", Offset = "0x1809B60", VA = "0x1809B60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x18099D4", Offset = "0x18099D4", VA = "0x18099D4")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x1809A58", Offset = "0x1809A58", VA = "0x1809A58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x1809A5C", Offset = "0x1809A5C", VA = "0x1809A5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x1809B00", Offset = "0x1809B00", VA = "0x1809B00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x18096CC", Offset = "0x18096CC", VA = "0x18096CC")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x180978C", Offset = "0x180978C", VA = "0x180978C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x18097EC", Offset = "0x18097EC", VA = "0x18097EC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x18098B0", Offset = "0x18098B0", VA = "0x18098B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8EDE8", Offset = "0xA8EDE8")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x1809958", Offset = "0x1809958", VA = "0x1809958")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8EE4C", Offset = "0xA8EE4C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600021F")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000220")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x1809A00", Offset = "0x1809A00", VA = "0x1809A00")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EEB0", Offset = "0xA8EEB0")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x1809A2C", Offset = "0x1809A2C", VA = "0x1809A2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EEC0", Offset = "0xA8EEC0")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000083")]
public class TeleportInputHandlerAvatarTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000278")]
	public enum InputModes
	{
		[Token(Token = "0x4000A62")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000A63")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000A64")]
		ThumbstickTeleport,
		[Token(Token = "0x4000A65")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000279")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000A67")]
		A,
		[Token(Token = "0x4000A68")]
		B,
		[Token(Token = "0x4000A69")]
		LeftTrigger,
		[Token(Token = "0x4000A6A")]
		LeftThumbstick,
		[Token(Token = "0x4000A6B")]
		RightTrigger,
		[Token(Token = "0x4000A6C")]
		RightThumbstick,
		[Token(Token = "0x4000A6D")]
		X,
		[Token(Token = "0x4000A6E")]
		Y
	}

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89610", Offset = "0xA89610")]
	public OvrAvatar Avatar;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89648", Offset = "0xA89648")]
	public InputModes InputMode;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89680", Offset = "0xA89680")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA896B8", Offset = "0xA896B8")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA896F0", Offset = "0xA896F0")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x1809C74", Offset = "0x1809C74", VA = "0x1809C74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x1809D6C", Offset = "0x1809D6C", VA = "0x1809D6C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x180A310", Offset = "0x180A310", VA = "0x180A310", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x180A3E8", Offset = "0x180A3E8", VA = "0x180A3E8")]
	public TeleportInputHandlerAvatarTouch()
	{
	}
}
[Token(Token = "0x2000084")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA89728", Offset = "0xA89728")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89738", Offset = "0xA89738")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89770", Offset = "0xA89770")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA897A8", Offset = "0xA897A8")]
	public bool FastTeleport;

	[Token(Token = "0x17000013")]
	public Transform Pointer
	{
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x180A4B0", Offset = "0x180A4B0", VA = "0x180A4B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EED0", Offset = "0xA8EED0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x180A4B8", Offset = "0x180A4B8", VA = "0x180A4B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EEE0", Offset = "0xA8EEE0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x180A1B4", Offset = "0x180A1B4", VA = "0x180A1B4", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x180A4C0", Offset = "0x180A4C0", VA = "0x180A4C0", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x180A4AC", Offset = "0x180A4AC", VA = "0x180A4AC")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000085")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200027A")]
	public enum InputModes
	{
		[Token(Token = "0x4000A70")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000A71")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000A72")]
		ThumbstickTeleport,
		[Token(Token = "0x4000A73")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200027B")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000A75")]
		A,
		[Token(Token = "0x4000A76")]
		B,
		[Token(Token = "0x4000A77")]
		LeftTrigger,
		[Token(Token = "0x4000A78")]
		LeftThumbstick,
		[Token(Token = "0x4000A79")]
		RightTrigger,
		[Token(Token = "0x4000A7A")]
		RightThumbstick,
		[Token(Token = "0x4000A7B")]
		X,
		[Token(Token = "0x4000A7C")]
		Y
	}

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA897E0", Offset = "0xA897E0")]
	public InputModes InputMode;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89818", Offset = "0xA89818")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89850", Offset = "0xA89850")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89888", Offset = "0xA89888")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x180A578", Offset = "0x180A578", VA = "0x180A578")]
	private void Start()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x180A57C", Offset = "0x180A57C", VA = "0x180A57C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x180A9C4", Offset = "0x180A9C4", VA = "0x180A9C4", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x180AA84", Offset = "0x180AA84", VA = "0x180AA84")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000086")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x200027C")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000A7E")]
		HeadRelative,
		[Token(Token = "0x4000A7F")]
		ForwardFacing
	}

	[Token(Token = "0x200027D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88658", Offset = "0xA88658")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000111")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F65")]
			[Address(RVA = "0x180AF58", Offset = "0x180AF58", VA = "0x180AF58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F67")]
			[Address(RVA = "0x180AFC0", Offset = "0x180AFC0", VA = "0x180AFC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x180AD28", Offset = "0x180AD28", VA = "0x180AD28")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x180AEA4", Offset = "0x180AEA4", VA = "0x180AEA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x180AEA8", Offset = "0x180AEA8", VA = "0x180AEA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x180AF60", Offset = "0x180AF60", VA = "0x180AF60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x180AB48", Offset = "0x180AB48", VA = "0x180AB48")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x180AC10", Offset = "0x180AC10", VA = "0x180AC10")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x180AC18", Offset = "0x180AC18", VA = "0x180AC18", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x180AC64", Offset = "0x180AC64", VA = "0x180AC64", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x180ACAC", Offset = "0x180ACAC", VA = "0x180ACAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8EEF0", Offset = "0xA8EEF0")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000235")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000236")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x180AD54", Offset = "0x180AD54", VA = "0x180AD54")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x180AE78", Offset = "0x180AE78", VA = "0x180AE78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EF54", Offset = "0xA8EF54")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000087")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000239")]
	[Address(RVA = "0x180AFC8", Offset = "0x180AFC8", VA = "0x180AFC8", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x180AFCC", Offset = "0x180AFCC", VA = "0x180AFCC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x180B048", Offset = "0x180B048", VA = "0x180B048")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000088")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA898C0", Offset = "0xA898C0")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA898F8", Offset = "0xA898F8")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89930", Offset = "0xA89930")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89968", Offset = "0xA89968")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x180B04C", Offset = "0x180B04C", VA = "0x180B04C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x180B0BC", Offset = "0x180B0BC", VA = "0x180B0BC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x180B534", Offset = "0x180B534", VA = "0x180B534")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000089")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA899A0", Offset = "0xA899A0")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA899D8", Offset = "0xA899D8")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89A10", Offset = "0xA89A10")]
	public float RotateStickThreshold;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x180B538", Offset = "0x180B538", VA = "0x180B538", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x180B57C", Offset = "0x180B57C", VA = "0x180B57C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x180B9EC", Offset = "0x180B9EC", VA = "0x180B9EC")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200008A")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x180B9FC", Offset = "0x180B9FC", VA = "0x180B9FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x180BA00", Offset = "0x180BA00", VA = "0x180BA00")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x180BA08", Offset = "0x180BA08", VA = "0x180BA08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x180BAF0", Offset = "0x180BAF0", VA = "0x180BAF0")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x180BB18", Offset = "0x180BB18", VA = "0x180BB18")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200008B")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA89A48", Offset = "0xA89A48")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000014")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000247")]
		[Address(RVA = "0x180BB30", Offset = "0x180BB30", VA = "0x180BB30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EF64", Offset = "0xA8EF64")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000248")]
		[Address(RVA = "0x180BB38", Offset = "0x180BB38", VA = "0x180BB38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8EF74", Offset = "0xA8EF74")]
		private set
		{
		}
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1808820", Offset = "0x1808820", VA = "0x1808820", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1808950", Offset = "0x1808950", VA = "0x1808950", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x180BB40", Offset = "0x180BB40", VA = "0x180BB40")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA8EF84", Offset = "0xA8EF84")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x1808FCC", Offset = "0x1808FCC", VA = "0x1808FCC", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x1809038", Offset = "0x1809038", VA = "0x1809038", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x180898C", Offset = "0x180898C", VA = "0x180898C")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x200008C")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x200027E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88668", Offset = "0xA88668")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000113")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0x180C1BC", Offset = "0x180C1BC", VA = "0x180C1BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0x180C224", Offset = "0x180C224", VA = "0x180C224", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x180BDBC", Offset = "0x180BDBC", VA = "0x180BDBC")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x180BF44", Offset = "0x180BF44", VA = "0x180BF44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x180BF48", Offset = "0x180BF48", VA = "0x180BF48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x180C1C4", Offset = "0x180C1C4", VA = "0x180C1C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89A58", Offset = "0xA89A58")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x180BC08", Offset = "0x180BC08", VA = "0x180BC08")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x180BCEC", Offset = "0x180BCEC", VA = "0x180BCEC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x180BD18", Offset = "0x180BD18", VA = "0x180BD18", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x180BD40", Offset = "0x180BD40", VA = "0x180BD40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8EFBC", Offset = "0xA8EFBC")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x180BDE8", Offset = "0x180BDE8", VA = "0x180BDE8", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000254")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x180BE04", Offset = "0x180BE04", VA = "0x180BE04", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x180BF18", Offset = "0x180BF18", VA = "0x180BF18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8F020", Offset = "0xA8F020")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200008D")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x180C22C", Offset = "0x180C22C", VA = "0x180C22C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x180C294", Offset = "0x180C294", VA = "0x180C294", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x180C418", Offset = "0x180C418", VA = "0x180C418", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x180C508", Offset = "0x180C508", VA = "0x180C508")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA8F030", Offset = "0xA8F030")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x180C50C", Offset = "0x180C50C", VA = "0x180C50C")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x200008E")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89A90", Offset = "0xA89A90")]
	public float LOSOffset;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89AC8", Offset = "0xA89AC8")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x180C518", Offset = "0x180C518", VA = "0x180C518", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x180C748", Offset = "0x180C748", VA = "0x180C748")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x200008F")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600025E")]
	[Address(RVA = "0x180C754", Offset = "0x180C754", VA = "0x180C754", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x180C8D8", Offset = "0x180C8D8", VA = "0x180C8D8")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000090")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000260")]
	[Address(RVA = "0x180C8DC", Offset = "0x180C8DC", VA = "0x180C8DC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x180C974", Offset = "0x180C974", VA = "0x180C974", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000262")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x180CA08", Offset = "0x180CA08", VA = "0x180CA08")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000091")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88678", Offset = "0xA88678")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000115")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F71")]
			[Address(RVA = "0x180CD94", Offset = "0x180CD94", VA = "0x180CD94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F73")]
			[Address(RVA = "0x180CDFC", Offset = "0x180CDFC", VA = "0x180CDFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x180CAB8", Offset = "0x180CAB8", VA = "0x180CAB8")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x180CC88", Offset = "0x180CC88", VA = "0x180CC88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x180CC8C", Offset = "0x180CC8C", VA = "0x180CC8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x180CD9C", Offset = "0x180CD9C", VA = "0x180CD9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89B00", Offset = "0xA89B00")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA89B00", Offset = "0xA89B00")]
	public float TransitionDuration;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89B58", Offset = "0xA89B58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA89B58", Offset = "0xA89B58")]
	public float TeleportDelay;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89BAC", Offset = "0xA89BAC")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x180CA10", Offset = "0x180CA10", VA = "0x180CA10", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x180CA3C", Offset = "0x180CA3C", VA = "0x180CA3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F068", Offset = "0xA8F068")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x180CAE4", Offset = "0x180CAE4", VA = "0x180CAE4")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000092")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000267")]
	[Address(RVA = "0x180CE04", Offset = "0x180CE04", VA = "0x180CE04", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x180CE20", Offset = "0x180CE20", VA = "0x180CE20")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000093")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000280")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88688", Offset = "0xA88688")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000117")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F77")]
			[Address(RVA = "0x180D090", Offset = "0x180D090", VA = "0x180D090", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0x180D0F8", Offset = "0x180D0F8", VA = "0x180D0F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x180CED0", Offset = "0x180CED0", VA = "0x180CED0")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x180CF50", Offset = "0x180CF50", VA = "0x180CF50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x180CF54", Offset = "0x180CF54", VA = "0x180CF54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x180D098", Offset = "0x180D098", VA = "0x180D098", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89BE4", Offset = "0xA89BE4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA89BE4", Offset = "0xA89BE4")]
	public float TransitionDuration;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x180CE28", Offset = "0x180CE28", VA = "0x180CE28", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x180CE54", Offset = "0x180CE54", VA = "0x180CE54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F0CC", Offset = "0xA8F0CC")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x180CEFC", Offset = "0x180CEFC", VA = "0x180CEFC")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000094")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000015")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x600026C")]
		[Address(RVA = "0xDCE0EC", Offset = "0xDCE0EC", VA = "0xDCE0EC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000016")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600026D")]
		[Address(RVA = "0xDCE3A8", Offset = "0xDCE3A8", VA = "0xDCE3A8")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000017")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600026E")]
		[Address(RVA = "0xDCC9D0", Offset = "0xDCC9D0", VA = "0xDCC9D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000018")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600026F")]
		[Address(RVA = "0xDCD588", Offset = "0xDCD588", VA = "0xDCD588")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xDCDBA0", Offset = "0xDCDBA0", VA = "0xDCDBA0")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xDCD8EC", Offset = "0xDCD8EC", VA = "0xDCD8EC")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xDCCE60", Offset = "0xDCCE60", VA = "0xDCCE60")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xDCCFE4", Offset = "0xDCCFE4", VA = "0xDCCFE4")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xDCD70C", Offset = "0xDCD70C", VA = "0xDCD70C")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xDCDDA0", Offset = "0xDCDDA0", VA = "0xDCDDA0")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xDCD3C4", Offset = "0xDCD3C4", VA = "0xDCD3C4")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000095")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000281")]
	public enum VideoShape
	{
		[Token(Token = "0x4000A92")]
		_360,
		[Token(Token = "0x4000A93")]
		_180,
		[Token(Token = "0x4000A94")]
		Quad
	}

	[Token(Token = "0x2000282")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000A96")]
		Mono,
		[Token(Token = "0x4000A97")]
		TopBottom,
		[Token(Token = "0x4000A98")]
		LeftRight
	}

	[Token(Token = "0x2000283")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88698", Offset = "0xA88698")]
	private sealed class <Start>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000119")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0xDCE07C", Offset = "0xDCE07C", VA = "0xDCE07C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0xDCE0E4", Offset = "0xDCE0E4", VA = "0xDCE0E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xDCCB1C", Offset = "0xDCCB1C", VA = "0xDCCB1C")]
		[DebuggerHidden]
		public <Start>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xDCDEEC", Offset = "0xDCDEEC", VA = "0xDCDEEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xDCDEF0", Offset = "0xDCDEF0", VA = "0xDCDEF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xDCE084", Offset = "0xDCE084", VA = "0xDCE084", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000284")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA886A8", Offset = "0xA886A8")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xDCCDC4", Offset = "0xDCCDC4", VA = "0xDCCDC4")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xDCDACC", Offset = "0xDCDACC", VA = "0xDCDACC")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA89C4C", Offset = "0xA89C4C")]
	private bool <isPlaying>k__BackingField;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string MovieName;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string DrmLicenseUrl;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool LoopVideo;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public VideoShape Shape;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VideoStereo Stereo;

	[Token(Token = "0x17000019")]
	public bool isPlaying
	{
		[Token(Token = "0x6000278")]
		[Address(RVA = "0xDCC5C4", Offset = "0xDCC5C4", VA = "0xDCC5C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8F130", Offset = "0xA8F130")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000279")]
		[Address(RVA = "0xDCC5CC", Offset = "0xDCC5CC", VA = "0xDCC5CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8F140", Offset = "0xA8F140")]
		private set
		{
		}
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xDCC5D8", Offset = "0xDCC5D8", VA = "0xDCC5D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xDCCA38", Offset = "0xDCCA38", VA = "0xDCCA38")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xDCCAA0", Offset = "0xDCCAA0", VA = "0xDCCAA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F150", Offset = "0xA8F150")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xDCCB48", Offset = "0xDCCB48", VA = "0xDCCB48")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xDCCDCC", Offset = "0xDCCDCC", VA = "0xDCCDCC")]
	public void Play()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xDCCF54", Offset = "0xDCCF54", VA = "0xDCCF54")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xDCD0D8", Offset = "0xDCD0D8", VA = "0xDCD0D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xDCD678", Offset = "0xDCD678", VA = "0xDCD678")]
	public void Rewind()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xDCD85C", Offset = "0xDCD85C", VA = "0xDCD85C")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xDCD9E0", Offset = "0xDCD9E0", VA = "0xDCD9E0")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xDCDAC4", Offset = "0xDCDAC4", VA = "0xDCDAC4")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000096")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA881A4", Offset = "0xA881A4")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x2000285")]
	private enum CubeFace
	{
		[Token(Token = "0x4000AA0")]
		Right,
		[Token(Token = "0x4000AA1")]
		Left,
		[Token(Token = "0x4000AA2")]
		Top,
		[Token(Token = "0x4000AA3")]
		Bottom,
		[Token(Token = "0x4000AA4")]
		Front,
		[Token(Token = "0x4000AA5")]
		Back,
		[Token(Token = "0x4000AA6")]
		COUNT
	}

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x1168064", Offset = "0x1168064", VA = "0x1168064")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x1168200", Offset = "0x1168200", VA = "0x1168200")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x11683BC", Offset = "0x11683BC", VA = "0x11683BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x1168894", Offset = "0x1168894", VA = "0x1168894")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x1168B88", Offset = "0x1168B88", VA = "0x1168B88")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1169DE4", Offset = "0x1169DE4", VA = "0x1169DE4")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x1169E44", Offset = "0x1169E44", VA = "0x1169E44")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x1168F08", Offset = "0x1168F08", VA = "0x1168F08")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x1169F2C", Offset = "0x1169F2C", VA = "0x1169F2C")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x116A118", Offset = "0x116A118", VA = "0x116A118")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x11693C0", Offset = "0x11693C0", VA = "0x11693C0")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x11696E8", Offset = "0x11696E8", VA = "0x11696E8")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x1169A40", Offset = "0x1169A40", VA = "0x1169A40")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x116A2CC", Offset = "0x116A2CC", VA = "0x116A2CC")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x2000097")]
public static class VectorUtil
{
	[Token(Token = "0x6000294")]
	[Address(RVA = "0x180DE34", Offset = "0x180DE34", VA = "0x180DE34")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000098")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xDC0604", Offset = "0xDC0604", VA = "0xDC0604")]
	private void Start()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xDC0A5C", Offset = "0xDC0A5C", VA = "0xDC0A5C")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xDC0B14", Offset = "0xDC0B14", VA = "0xDC0B14")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xDC0D68", Offset = "0xDC0D68", VA = "0xDC0D68")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xDC0E50", Offset = "0xDC0E50", VA = "0xDC0E50")]
	private void Update()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xDC0F2C", Offset = "0xDC0F2C", VA = "0xDC0F2C")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xDC0F98", Offset = "0xDC0F98", VA = "0xDC0F98")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xDC0FA0", Offset = "0xDC0FA0", VA = "0xDC0FA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8F1C4", Offset = "0xA8F1C4")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xDC0FFC", Offset = "0xDC0FFC", VA = "0xDC0FFC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8F1D4", Offset = "0xA8F1D4")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xDC1058", Offset = "0xDC1058", VA = "0xDC1058")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8F1E4", Offset = "0xA8F1E4")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xDC10B4", Offset = "0xDC10B4", VA = "0xDC10B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8F1F4", Offset = "0xA8F1F4")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000099")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA89C5C", Offset = "0xA89C5C")]
	public int SubdivisionsU;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA89C78", Offset = "0xA89C78")]
	public int SubdivisionsV;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xDBD220", Offset = "0xDBD220", VA = "0xDBD220")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xDBDD14", Offset = "0xDBDD14", VA = "0xDBDD14")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x200009A")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700001A")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xDC752C", Offset = "0xDC752C", VA = "0xDC752C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xDC7584", Offset = "0xDC7584", VA = "0xDC7584")]
	public void Start()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xDC78F4", Offset = "0xDC78F4", VA = "0xDC78F4")]
	public void Update()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xDC79D0", Offset = "0xDC79D0", VA = "0xDC79D0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA8F204", Offset = "0xA8F204")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60002A6")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60002A7")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60002A8")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60002A9")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60002AA")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60002AB")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60002AC")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60002AD")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xDC7A38", Offset = "0xDC7A38", VA = "0xDC7A38")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xDC7A74", Offset = "0xDC7A74", VA = "0xDC7A74")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xDC7AE8", Offset = "0xDC7AE8", VA = "0xDC7AE8")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xDC7C44", Offset = "0xDC7C44", VA = "0xDC7C44")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xDC7D18", Offset = "0xDC7D18", VA = "0xDC7D18")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xDC7800", Offset = "0xDC7800", VA = "0xDC7800")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xDC7DD8", Offset = "0xDC7DD8", VA = "0xDC7DD8")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xDC7E40", Offset = "0xDC7E40", VA = "0xDC7E40")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xDC7F24", Offset = "0xDC7F24", VA = "0xDC7F24")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x200009B")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA886B8", Offset = "0xA886B8")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x1808660", Offset = "0x1808660", VA = "0x1808660")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x1808770", Offset = "0x1808770", VA = "0x1808770")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x1808490", Offset = "0x1808490", VA = "0x1808490")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x1808668", Offset = "0x1808668", VA = "0x1808668")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x1808768", Offset = "0x1808768", VA = "0x1808768")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x200009C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA88238", Offset = "0xA88238")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000287")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000AAA")]
		MouseXAndY,
		[Token(Token = "0x4000AAB")]
		MouseX,
		[Token(Token = "0x4000AAC")]
		MouseY
	}

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xDCC284", Offset = "0xDCC284", VA = "0xDCC284")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xDCC4E4", Offset = "0xDCC4E4", VA = "0xDCC4E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xDCC5A4", Offset = "0xDCC5A4", VA = "0xDCC5A4")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x200009D")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x2000288")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000AAE")]
		Uninitialized = -1,
		[Token(Token = "0x4000AAF")]
		NotEnabled,
		[Token(Token = "0x4000AB0")]
		Success,
		[Token(Token = "0x4000AB1")]
		StreamError,
		[Token(Token = "0x4000AB2")]
		ProcessError,
		[Token(Token = "0x4000AB3")]
		MaxStatValue
	}

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x1700001B")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xDCE658", Offset = "0xDCE658", VA = "0xDCE658")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xDCE660", Offset = "0xDCE660", VA = "0xDCE660")]
		set
		{
		}
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xDCE66C", Offset = "0xDCE66C", VA = "0xDCE66C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xDCE888", Offset = "0xDCE888", VA = "0xDCE888")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xDCEAFC", Offset = "0xDCEAFC", VA = "0xDCEAFC")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x200009E")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000289")]
	private enum Parameters
	{
		[Token(Token = "0x4000AB5")]
		P_GAIN,
		[Token(Token = "0x4000AB6")]
		P_USEINVSQR,
		[Token(Token = "0x4000AB7")]
		P_NEAR,
		[Token(Token = "0x4000AB8")]
		P_FAR,
		[Token(Token = "0x4000AB9")]
		P_RADIUS,
		[Token(Token = "0x4000ABA")]
		P_DISABLE_RFL,
		[Token(Token = "0x4000ABB")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4000ABC")]
		P_AMBISTAT,
		[Token(Token = "0x4000ABD")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000ABE")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4000ABF")]
		P_SENDLEVEL,
		[Token(Token = "0x4000AC0")]
		P_NUM
	}

	[Token(Token = "0x40003A0")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x1700001C")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0xDCED58", Offset = "0xDCED58", VA = "0xDCED58")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xDCED60", Offset = "0xDCED60", VA = "0xDCED60")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public float Gain
	{
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0xDCED6C", Offset = "0xDCED6C", VA = "0xDCED6C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xDCED74", Offset = "0xDCED74", VA = "0xDCED74")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xDCEDF8", Offset = "0xDCEDF8", VA = "0xDCEDF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0xDCEE00", Offset = "0xDCEE00", VA = "0xDCEE00")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public float Near
	{
		[Token(Token = "0x60002CB")]
		[Address(RVA = "0xDCEE0C", Offset = "0xDCEE0C", VA = "0xDCEE0C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0xDCEE14", Offset = "0xDCEE14", VA = "0xDCEE14")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public float Far
	{
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0xDCEE9C", Offset = "0xDCEE9C", VA = "0xDCEE9C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xDCEEA4", Offset = "0xDCEEA4", VA = "0xDCEEA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xDCEF2C", Offset = "0xDCEF2C", VA = "0xDCEF2C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xDCEF34", Offset = "0xDCEF34", VA = "0xDCEF34")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public float ReverbSend
	{
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0xDCEFBC", Offset = "0xDCEFBC", VA = "0xDCEFBC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xDCEFC4", Offset = "0xDCEFC4", VA = "0xDCEFC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public bool EnableRfl
	{
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xDCF04C", Offset = "0xDCF04C", VA = "0xDCF04C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002D4")]
		[Address(RVA = "0xDCF054", Offset = "0xDCF054", VA = "0xDCF054")]
		set
		{
		}
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xDCEB80", Offset = "0xDCEB80", VA = "0xDCEB80")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA8F23C", Offset = "0xA8F23C")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xDCEC78", Offset = "0xDCEC78", VA = "0xDCEC78")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xDCF060", Offset = "0xDCF060", VA = "0xDCF060")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xDCF1D4", Offset = "0xDCF1D4", VA = "0xDCF1D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xDCF1D8", Offset = "0xDCF1D8", VA = "0xDCF1D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xDCF0CC", Offset = "0xDCF0CC", VA = "0xDCF0CC")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xDCF2A0", Offset = "0xDCF2A0", VA = "0xDCF2A0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xDCF708", Offset = "0xDCF708", VA = "0xDCF708")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xDCEBF8", Offset = "0xDCEBF8", VA = "0xDCEBF8")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xDCF7EC", Offset = "0xDCF7EC", VA = "0xDCF7EC")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x200009F")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x40003AB")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x40003AD")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xDCF80C", Offset = "0xDCF80C", VA = "0xDCF80C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xDCF818", Offset = "0xDCF818", VA = "0xDCF818")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xDCF8D0", Offset = "0xDCF8D0", VA = "0xDCF8D0")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xDCF850", Offset = "0xDCF850", VA = "0xDCF850")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xDCF950", Offset = "0xDCF950", VA = "0xDCF950")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000A0")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x200028A")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x200028B")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x40003B4")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000024")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x11522EC", Offset = "0x11522EC", VA = "0x11522EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000025")]
	public string filePath
	{
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x1152378", Offset = "0x1152378", VA = "0x1152378")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x11523F0", Offset = "0x11523F0", VA = "0x11523F0")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x1152538", Offset = "0x1152538", VA = "0x1152538")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x115253C", Offset = "0x115253C", VA = "0x115253C")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x1152AA4", Offset = "0x1152AA4", VA = "0x1152AA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x1152E40", Offset = "0x1152E40", VA = "0x1152E40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x1152FA0", Offset = "0x1152FA0", VA = "0x1152FA0")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x11536E4", Offset = "0x11536E4", VA = "0x11536E4")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x1153720", Offset = "0x1153720", VA = "0x1153720")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x1154F14", Offset = "0x1154F14", VA = "0x1154F14")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x1154DEC", Offset = "0x1154DEC", VA = "0x1154DEC")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x11528DC", Offset = "0x11528DC", VA = "0x11528DC")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x115270C", Offset = "0x115270C", VA = "0x115270C")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x115552C", Offset = "0x115552C", VA = "0x115552C")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x1155974", Offset = "0x1155974", VA = "0x1155974")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000A1")]
internal class ONSPPropagation
{
	[Token(Token = "0x200028C")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000AC7")]
		Int8,
		[Token(Token = "0x4000AC8")]
		UInt8,
		[Token(Token = "0x4000AC9")]
		Int16,
		[Token(Token = "0x4000ACA")]
		UInt16,
		[Token(Token = "0x4000ACB")]
		Int32,
		[Token(Token = "0x4000ACC")]
		UInt32,
		[Token(Token = "0x4000ACD")]
		Int64,
		[Token(Token = "0x4000ACE")]
		UInt64,
		[Token(Token = "0x4000ACF")]
		Float16,
		[Token(Token = "0x4000AD0")]
		Float32,
		[Token(Token = "0x4000AD1")]
		Float64
	}

	[Token(Token = "0x200028D")]
	public class ClientType
	{
		[Token(Token = "0x4000AD2")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000AD3")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4000AD4")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000AD5")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4000AD6")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000AD7")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000AD8")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000AD9")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000ADA")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000ADB")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000ADC")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000ADD")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000ADE")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xDCFE10", Offset = "0xDCFE10", VA = "0xDCFE10")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x200028E")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6000F85")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6000F86")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6000F87")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6000F88")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000F89")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000F8A")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000F8B")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000F8C")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F8D")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F8E")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F8F")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000F90")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6000F91")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000F92")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000F93")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x200028F")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000ADF")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700011B")]
		private IntPtr context
		{
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0xDD0A88", Offset = "0xDD0A88", VA = "0xDD0A88")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xDD0AEC", Offset = "0xDD0AEC", VA = "0xDD0AEC")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xDD0B7C", Offset = "0xDD0B7C", VA = "0xDD0B7C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xDD0C0C", Offset = "0xDD0C0C", VA = "0xDD0C0C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xDD0C30", Offset = "0xDD0C30", VA = "0xDD0C30")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xDD0CC0", Offset = "0xDD0CC0", VA = "0xDD0CC0", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xDD0CE4", Offset = "0xDD0CE4", VA = "0xDD0CE4")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xDD0D70", Offset = "0xDD0D70", VA = "0xDD0D70", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xDD0D94", Offset = "0xDD0D94", VA = "0xDD0D94")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xDD0E14", Offset = "0xDD0E14", VA = "0xDD0E14", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xDD0E1C", Offset = "0xDD0E1C", VA = "0xDD0E1C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xDD0F3C", Offset = "0xDD0F3C", VA = "0xDD0F3C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xDD1034", Offset = "0xDD1034", VA = "0xDD1034")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xDD10CC", Offset = "0xDD10CC", VA = "0xDD10CC", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xDD10D8", Offset = "0xDD10D8", VA = "0xDD10D8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xDD120C", Offset = "0xDD120C", VA = "0xDD120C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xDD1218", Offset = "0xDD1218", VA = "0xDD1218")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xDD12C4", Offset = "0xDD12C4", VA = "0xDD12C4", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xDD12D0", Offset = "0xDD12D0", VA = "0xDD12D0")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xDD137C", Offset = "0xDD137C", VA = "0xDD137C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xDD1388", Offset = "0xDD1388", VA = "0xDD1388")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xDD1434", Offset = "0xDD1434", VA = "0xDD1434", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xDD1440", Offset = "0xDD1440", VA = "0xDD1440")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xDD14CC", Offset = "0xDD14CC", VA = "0xDD14CC", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xDD14F0", Offset = "0xDD14F0", VA = "0xDD14F0")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xDD1570", Offset = "0xDD1570", VA = "0xDD1570", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xDD1578", Offset = "0xDD1578", VA = "0xDD1578")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xDD1620", Offset = "0xDD1620", VA = "0xDD1620", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xDD162C", Offset = "0xDD162C", VA = "0xDD162C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xDD16D4", Offset = "0xDD16D4", VA = "0xDD16D4", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xDD16E4", Offset = "0xDD16E4", VA = "0xDD16E4")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xDD1774", Offset = "0xDD1774", VA = "0xDD1774", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xDCFDBC", Offset = "0xDCFDBC", VA = "0xDCFDBC")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000290")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000AE1")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700011C")]
		private IntPtr context
		{
			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0xDD1780", Offset = "0xDD1780", VA = "0xDD1780")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xDCFC04", Offset = "0xDCFC04", VA = "0xDCFC04")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xDD17E4", Offset = "0xDD17E4", VA = "0xDD17E4")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xDD1874", Offset = "0xDD1874", VA = "0xDD1874", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xDD1898", Offset = "0xDD1898", VA = "0xDD1898")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xDD1928", Offset = "0xDD1928", VA = "0xDD1928", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xDD194C", Offset = "0xDD194C", VA = "0xDD194C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xDD19DC", Offset = "0xDD19DC", VA = "0xDD19DC", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xDD1A00", Offset = "0xDD1A00", VA = "0xDD1A00")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xDD1A80", Offset = "0xDD1A80", VA = "0xDD1A80", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xDD1A88", Offset = "0xDD1A88", VA = "0xDD1A88")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xDD1BA8", Offset = "0xDD1BA8", VA = "0xDD1BA8", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xDD1CA0", Offset = "0xDD1CA0", VA = "0xDD1CA0")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xDD1D38", Offset = "0xDD1D38", VA = "0xDD1D38", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xDD1D44", Offset = "0xDD1D44", VA = "0xDD1D44")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xDD1E78", Offset = "0xDD1E78", VA = "0xDD1E78", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xDD1E84", Offset = "0xDD1E84", VA = "0xDD1E84")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xDD1F30", Offset = "0xDD1F30", VA = "0xDD1F30", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xDD1F3C", Offset = "0xDD1F3C", VA = "0xDD1F3C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xDD1FE8", Offset = "0xDD1FE8", VA = "0xDD1FE8", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xDD1FF4", Offset = "0xDD1FF4", VA = "0xDD1FF4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xDD20A0", Offset = "0xDD20A0", VA = "0xDD20A0", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xDD20AC", Offset = "0xDD20AC", VA = "0xDD20AC")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xDD213C", Offset = "0xDD213C", VA = "0xDD213C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xDD2160", Offset = "0xDD2160", VA = "0xDD2160")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xDD21E0", Offset = "0xDD21E0", VA = "0xDD21E0", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xDD21E8", Offset = "0xDD21E8", VA = "0xDD21E8")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xDD2290", Offset = "0xDD2290", VA = "0xDD2290", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xDD229C", Offset = "0xDD229C", VA = "0xDD229C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xDD2344", Offset = "0xDD2344", VA = "0xDD2344", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0xDD2354", Offset = "0xDD2354", VA = "0xDD2354")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xDD23E4", Offset = "0xDD23E4", VA = "0xDD23E4", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xDCFC94", Offset = "0xDCFC94", VA = "0xDCFC94")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000291")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000AE3")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700011D")]
		private IntPtr context
		{
			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0xDCFE18", Offset = "0xDCFE18", VA = "0xDCFE18")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xDCFCE0", Offset = "0xDCFCE0", VA = "0xDCFCE0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xDCFE7C", Offset = "0xDCFE7C", VA = "0xDCFE7C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xDCFF0C", Offset = "0xDCFF0C", VA = "0xDCFF0C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xDCFF30", Offset = "0xDCFF30", VA = "0xDCFF30")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xDCFFC0", Offset = "0xDCFFC0", VA = "0xDCFFC0", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xDCFFE4", Offset = "0xDCFFE4", VA = "0xDCFFE4")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xDD0074", Offset = "0xDD0074", VA = "0xDD0074", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xDD0098", Offset = "0xDD0098", VA = "0xDD0098")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xDD0118", Offset = "0xDD0118", VA = "0xDD0118", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xDD0120", Offset = "0xDD0120", VA = "0xDD0120")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xDD0240", Offset = "0xDD0240", VA = "0xDD0240", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xDD0338", Offset = "0xDD0338", VA = "0xDD0338")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xDD03D0", Offset = "0xDD03D0", VA = "0xDD03D0", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xDD03DC", Offset = "0xDD03DC", VA = "0xDD03DC")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xDD0510", Offset = "0xDD0510", VA = "0xDD0510", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xDD051C", Offset = "0xDD051C", VA = "0xDD051C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xDD05C8", Offset = "0xDD05C8", VA = "0xDD05C8", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xDD05D4", Offset = "0xDD05D4", VA = "0xDD05D4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xDD0680", Offset = "0xDD0680", VA = "0xDD0680", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xDD068C", Offset = "0xDD068C", VA = "0xDD068C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xDD0738", Offset = "0xDD0738", VA = "0xDD0738", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xDD0744", Offset = "0xDD0744", VA = "0xDD0744")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xDD07D4", Offset = "0xDD07D4", VA = "0xDD07D4", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xDD07F8", Offset = "0xDD07F8", VA = "0xDD07F8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xDD0878", Offset = "0xDD0878", VA = "0xDD0878", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xDD0880", Offset = "0xDD0880", VA = "0xDD0880")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xDD0928", Offset = "0xDD0928", VA = "0xDD0928", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xDD0934", Offset = "0xDD0934", VA = "0xDD0934")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xDD09DC", Offset = "0xDD09DC", VA = "0xDD09DC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xDD09EC", Offset = "0xDD09EC", VA = "0xDD09EC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xDD0A7C", Offset = "0xDD0A7C", VA = "0xDD0A7C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xDCFD70", Offset = "0xDCFD70", VA = "0xDCFD70")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000026")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0xDCF960", Offset = "0xDCF960", VA = "0xDCF960")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xDCF9DC", Offset = "0xDCF9DC", VA = "0xDCF9DC")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xDCFE08", Offset = "0xDCFE08", VA = "0xDCFE08")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000A2")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000292")]
	public enum Preset
	{
		[Token(Token = "0x4000AE6")]
		Custom,
		[Token(Token = "0x4000AE7")]
		AcousticTile,
		[Token(Token = "0x4000AE8")]
		Brick,
		[Token(Token = "0x4000AE9")]
		BrickPainted,
		[Token(Token = "0x4000AEA")]
		Carpet,
		[Token(Token = "0x4000AEB")]
		CarpetHeavy,
		[Token(Token = "0x4000AEC")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000AED")]
		CeramicTile,
		[Token(Token = "0x4000AEE")]
		Concrete,
		[Token(Token = "0x4000AEF")]
		ConcreteRough,
		[Token(Token = "0x4000AF0")]
		ConcreteBlock,
		[Token(Token = "0x4000AF1")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000AF2")]
		Curtain,
		[Token(Token = "0x4000AF3")]
		Foliage,
		[Token(Token = "0x4000AF4")]
		Glass,
		[Token(Token = "0x4000AF5")]
		GlassHeavy,
		[Token(Token = "0x4000AF6")]
		Grass,
		[Token(Token = "0x4000AF7")]
		Gravel,
		[Token(Token = "0x4000AF8")]
		GypsumBoard,
		[Token(Token = "0x4000AF9")]
		PlasterOnBrick,
		[Token(Token = "0x4000AFA")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000AFB")]
		Soil,
		[Token(Token = "0x4000AFC")]
		SoundProof,
		[Token(Token = "0x4000AFD")]
		Snow,
		[Token(Token = "0x4000AFE")]
		Steel,
		[Token(Token = "0x4000AFF")]
		Water,
		[Token(Token = "0x4000B00")]
		WoodThin,
		[Token(Token = "0x4000B01")]
		WoodThick,
		[Token(Token = "0x4000B02")]
		WoodFloor,
		[Token(Token = "0x4000B03")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000293")]
	public sealed class Point
	{
		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x115DC10", Offset = "0x115DC10", VA = "0x115DC10")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x115DD88", Offset = "0x115DD88", VA = "0x115DD88")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x115DDF8", Offset = "0x115DDF8", VA = "0x115DDF8")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000294")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA886C8", Offset = "0xA886C8")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000307")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88A9C", Offset = "0xA88A9C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4000D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6001184")]
			[Address(RVA = "0x115E264", Offset = "0x115E264", VA = "0x115E264")]
			public <>c()
			{
			}

			[Token(Token = "0x6001185")]
			[Address(RVA = "0x115E26C", Offset = "0x115E26C", VA = "0x115E26C")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6001186")]
			[Address(RVA = "0x115E284", Offset = "0x115E284", VA = "0x115E284")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x1700011E")]
		public float Item
		{
			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0x115DE30", Offset = "0x115DE30", VA = "0x115DE30")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x115DD04", Offset = "0x115DD04", VA = "0x115DD04")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89D24", Offset = "0xA89D24")]
	public Spectrum absorption;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89D5C", Offset = "0xA89D5C")]
	public Spectrum transmission;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89D94", Offset = "0xA89D94")]
	public Spectrum scattering;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000027")]
	public Preset preset
	{
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x1155A58", Offset = "0x1155A58", VA = "0x1155A58")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x1155A60", Offset = "0x1155A60", VA = "0x1155A60")]
		set
		{
		}
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x1155A88", Offset = "0x1155A88", VA = "0x1155A88")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x11553BC", Offset = "0x11553BC", VA = "0x11553BC")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x1156050", Offset = "0x1156050", VA = "0x1156050")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x1156054", Offset = "0x1156054", VA = "0x1156054")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1155A8C", Offset = "0x1155A8C", VA = "0x1155A8C")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1154C58", Offset = "0x1154C58", VA = "0x1154C58")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x115613C", Offset = "0x115613C", VA = "0x115613C")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x11565BC", Offset = "0x11565BC", VA = "0x11565BC")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x1156A3C", Offset = "0x1156A3C", VA = "0x1156A3C")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x1156EBC", Offset = "0x1156EBC", VA = "0x1156EBC")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x115733C", Offset = "0x115733C", VA = "0x115733C")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x11577BC", Offset = "0x11577BC", VA = "0x11577BC")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x1157C3C", Offset = "0x1157C3C", VA = "0x1157C3C")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x11580BC", Offset = "0x11580BC", VA = "0x11580BC")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x115853C", Offset = "0x115853C", VA = "0x115853C")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x11589BC", Offset = "0x11589BC", VA = "0x11589BC")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1158E3C", Offset = "0x1158E3C", VA = "0x1158E3C")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x11592BC", Offset = "0x11592BC", VA = "0x11592BC")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x115973C", Offset = "0x115973C", VA = "0x115973C")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x1159BBC", Offset = "0x1159BBC", VA = "0x1159BBC")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x115A034", Offset = "0x115A034", VA = "0x115A034")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x115A4B4", Offset = "0x115A4B4", VA = "0x115A4B4")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x115A810", Offset = "0x115A810", VA = "0x115A810")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x115AB6C", Offset = "0x115AB6C", VA = "0x115AB6C")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x115AFEC", Offset = "0x115AFEC", VA = "0x115AFEC")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x115B46C", Offset = "0x115B46C", VA = "0x115B46C")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x115B8EC", Offset = "0x115B8EC", VA = "0x115B8EC")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x115BC48", Offset = "0x115BC48", VA = "0x115BC48")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x115BDC4", Offset = "0x115BDC4", VA = "0x115BDC4")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x115C120", Offset = "0x115C120", VA = "0x115C120")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x115C598", Offset = "0x115C598", VA = "0x115C598")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x115CA18", Offset = "0x115CA18", VA = "0x115CA18")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x115CE90", Offset = "0x115CE90", VA = "0x115CE90")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x115D310", Offset = "0x115D310", VA = "0x115D310")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x115D790", Offset = "0x115D790", VA = "0x115D790")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x115DC48", Offset = "0x115DC48", VA = "0x115DC48")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000A3")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x115E29C", Offset = "0x115E29C", VA = "0x115E29C")]
	private void Update()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x115E370", Offset = "0x115E370", VA = "0x115E370")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000A4")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000028")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x600031F")]
		[Address(RVA = "0x115E944", Offset = "0x115E944", VA = "0x115E944")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x115EA70", Offset = "0x115EA70", VA = "0x115EA70")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000A5")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x40003BF")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000321")]
	[Address(RVA = "0x115EA80", Offset = "0x115EA80", VA = "0x115EA80")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x115EB18", Offset = "0x115EB18", VA = "0x115EB18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x115EC24", Offset = "0x115EC24", VA = "0x115EC24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x115EC28", Offset = "0x115EC28", VA = "0x115EC28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x115EC2C", Offset = "0x115EC2C", VA = "0x115EC2C")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000A6")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000295")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x40003CF")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40003D5")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xDE467C", Offset = "0xDE467C", VA = "0xDE467C")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xDE46B4", Offset = "0xDE46B4", VA = "0xDE46B4")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xDE4884", Offset = "0xDE4884", VA = "0xDE4884")]
	private void Start()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xDE4954", Offset = "0xDE4954", VA = "0xDE4954")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xDE4A48", Offset = "0xDE4A48", VA = "0xDE4A48")]
	private void Update()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xDE53B0", Offset = "0xDE53B0", VA = "0xDE53B0")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600032C")]
	[Address(RVA = "0xDE4938", Offset = "0xDE4938", VA = "0xDE4938")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600032D")]
	[Address(RVA = "0xDE49B8", Offset = "0xDE49B8", VA = "0xDE49B8")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600032E")]
	[Address(RVA = "0xDE5118", Offset = "0xDE5118", VA = "0xDE5118")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x600032F")]
	[Address(RVA = "0xDE5198", Offset = "0xDE5198", VA = "0xDE5198")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000330")]
	[Address(RVA = "0xDE5220", Offset = "0xDE5220", VA = "0xDE5220")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000331")]
	[Address(RVA = "0xDE52A8", Offset = "0xDE52A8", VA = "0xDE52A8")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000332")]
	[Address(RVA = "0xDE5328", Offset = "0xDE5328", VA = "0xDE5328")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000333")]
	[Address(RVA = "0xDE6224", Offset = "0xDE6224", VA = "0xDE6224")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000334")]
	[Address(RVA = "0xDE62CC", Offset = "0xDE62CC", VA = "0xDE62CC")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xDE6374", Offset = "0xDE6374", VA = "0xDE6374")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000A7")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000A8")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x115E380", Offset = "0x115E380", VA = "0x115E380")]
	private void Start()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x115E384", Offset = "0x115E384", VA = "0x115E384")]
	private void Update()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x115E388", Offset = "0x115E388", VA = "0x115E388")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x115E4F0", Offset = "0x115E4F0", VA = "0x115E4F0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x115E3D4", Offset = "0x115E3D4", VA = "0x115E3D4")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x115E464", Offset = "0x115E464", VA = "0x115E464")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x115E53C", Offset = "0x115E53C", VA = "0x115E53C")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x115E5D4", Offset = "0x115E5D4", VA = "0x115E5D4")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x115E744", Offset = "0x115E744", VA = "0x115E744")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x115E8B4", Offset = "0x115E8B4", VA = "0x115E8B4")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000A9")]
public class PlayerPressButton : MonoBehaviour
{
	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent callback;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool oneShot;

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xDA1FE0", Offset = "0xDA1FE0", VA = "0xDA1FE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xDA209C", Offset = "0xDA209C", VA = "0xDA209C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xDA21FC", Offset = "0xDA21FC", VA = "0xDA21FC")]
	public PlayerPressButton()
	{
	}
}
[Token(Token = "0x20000AA")]
public class SceneDebug : MonoBehaviour
{
	[Token(Token = "0x2000296")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88700", Offset = "0xA88700")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneContainer container;

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x18031B4", Offset = "0x18031B4", VA = "0x18031B4")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x18031BC", Offset = "0x18031BC", VA = "0x18031BC")]
		internal bool <PreloadRoutine>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88710", Offset = "0xA88710")]
	private sealed class <PreloadRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneContainer container;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneDebug <>4__this;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass11_0 <>8__1;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Stopwatch <watch>5__2;

		[Token(Token = "0x1700011F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001005")]
			[Address(RVA = "0x18037A0", Offset = "0x18037A0", VA = "0x18037A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001007")]
			[Address(RVA = "0x1803808", Offset = "0x1803808", VA = "0x1803808", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x18033E4", Offset = "0x18033E4", VA = "0x18033E4")]
		[DebuggerHidden]
		public <PreloadRoutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x1803410", Offset = "0x1803410", VA = "0x1803410", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x1803414", Offset = "0x1803414", VA = "0x1803414", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x18037A8", Offset = "0x18037A8", VA = "0x18037A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88720", Offset = "0xA88720")]
	private sealed class <LoadRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneContainer container;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneDebug <>4__this;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Stopwatch <watch>5__2;

		[Token(Token = "0x17000121")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0x1803374", Offset = "0x1803374", VA = "0x1803374", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600100D")]
			[Address(RVA = "0x18033DC", Offset = "0x18033DC", VA = "0x18033DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x18031E8", Offset = "0x18031E8", VA = "0x18031E8")]
		[DebuggerHidden]
		public <LoadRoutine>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x1803214", Offset = "0x1803214", VA = "0x1803214", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x1803218", Offset = "0x1803218", VA = "0x1803218", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x180337C", Offset = "0x180337C", VA = "0x180337C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000299")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88730", Offset = "0xA88730")]
	private sealed class <UnloadRoutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneContainer container;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneDebug <>4__this;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Stopwatch <watch>5__2;

		[Token(Token = "0x17000123")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001011")]
			[Address(RVA = "0x180399C", Offset = "0x180399C", VA = "0x180399C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001013")]
			[Address(RVA = "0x1803A04", Offset = "0x1803A04", VA = "0x1803A04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x1803810", Offset = "0x1803810", VA = "0x1803810")]
		[DebuggerHidden]
		public <UnloadRoutine>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x180383C", Offset = "0x180383C", VA = "0x180383C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x1803840", Offset = "0x1803840", VA = "0x1803840", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x18039A4", Offset = "0x18039A4", VA = "0x18039A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GamepadDebugMenu menu;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SceneController controller;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int sceneNumber;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DebugMenuItem selectedSceneItem;

	[Token(Token = "0x40003E2")]
	private const int SCENE_COUNT = 4;

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xDA4424", Offset = "0xDA4424", VA = "0xDA4424")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xDA44A0", Offset = "0xDA44A0", VA = "0xDA44A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xDA44A4", Offset = "0xDA44A4", VA = "0xDA44A4")]
	private void CreateAllItems()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xDA4694", Offset = "0xDA4694", VA = "0xDA4694")]
	private SceneContainer GetSelectedSceneByIndex()
	{
		return null;
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xDA469C", Offset = "0xDA469C", VA = "0xDA469C")]
	private SceneContainer GetSelectedScene(int number)
	{
		return null;
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xDA4718", Offset = "0xDA4718", VA = "0xDA4718")]
	public void Quit()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xDA4720", Offset = "0xDA4720", VA = "0xDA4720")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F250", Offset = "0xA8F250")]
	private IEnumerator PreloadRoutine(SceneContainer container)
	{
		return null;
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xDA47B8", Offset = "0xDA47B8", VA = "0xDA47B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F2B4", Offset = "0xA8F2B4")]
	private IEnumerator LoadRoutine(SceneContainer container)
	{
		return null;
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xDA4850", Offset = "0xDA4850", VA = "0xDA4850")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F318", Offset = "0xA8F318")]
	private IEnumerator UnloadRoutine(SceneContainer container)
	{
		return null;
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xDA48E8", Offset = "0xDA48E8", VA = "0xDA48E8")]
	public SceneDebug()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xDA48F0", Offset = "0xDA48F0", VA = "0xDA48F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8F37C", Offset = "0xA8F37C")]
	private void <CreateAllItems>b__7_0()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xDA49B8", Offset = "0xDA49B8", VA = "0xDA49B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8F38C", Offset = "0xA8F38C")]
	private void <CreateAllItems>b__7_1()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xDA49F4", Offset = "0xDA49F4", VA = "0xDA49F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8F39C", Offset = "0xA8F39C")]
	private void <CreateAllItems>b__7_2()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xDA4A30", Offset = "0xDA4A30", VA = "0xDA4A30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8F3AC", Offset = "0xA8F3AC")]
	private void <CreateAllItems>b__7_3()
	{
	}
}
[Token(Token = "0x20000AB")]
public class GMTestScenery : MonoBehaviour
{
	[Token(Token = "0x200029A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88740", Offset = "0xA88740")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GMTestScenery <>4__this;

		[Token(Token = "0x17000125")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001017")]
			[Address(RVA = "0xDC4EC8", Offset = "0xDC4EC8", VA = "0xDC4EC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001019")]
			[Address(RVA = "0xDC4F30", Offset = "0xDC4F30", VA = "0xDC4F30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xDC4D44", Offset = "0xDC4D44", VA = "0xDC4D44")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xDC4D78", Offset = "0xDC4D78", VA = "0xDC4D78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xDC4D7C", Offset = "0xDC4D7C", VA = "0xDC4D7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xDC4ED0", Offset = "0xDC4ED0", VA = "0xDC4ED0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneContainer container;

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xDC4CC8", Offset = "0xDC4CC8", VA = "0xDC4CC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F3BC", Offset = "0xA8F3BC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xDC4D70", Offset = "0xDC4D70", VA = "0xDC4D70")]
	public GMTestScenery()
	{
	}
}
[Token(Token = "0x20000AC")]
public class MTest : MonoBehaviour
{
	[Token(Token = "0x200029B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88750", Offset = "0xA88750")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MTest <>4__this;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stopwatch <watch>5__2;

		[Token(Token = "0x17000127")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600101D")]
			[Address(RVA = "0xDCAEBC", Offset = "0xDCAEBC", VA = "0xDCAEBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600101F")]
			[Address(RVA = "0xDCAF24", Offset = "0xDCAF24", VA = "0xDCAF24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xDCA90C", Offset = "0xDCA90C", VA = "0xDCA90C")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xDCA9F8", Offset = "0xDCA9F8", VA = "0xDCA9F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xDCA9FC", Offset = "0xDCA9FC", VA = "0xDCA9FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xDCAEC4", Offset = "0xDCAEC4", VA = "0xDCAEC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200029C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88760", Offset = "0xA88760")]
	private sealed class <TimeCount>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stopwatch <watch>5__2;

		[Token(Token = "0x17000129")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001023")]
			[Address(RVA = "0xDCB0A4", Offset = "0xDCB0A4", VA = "0xDCB0A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001025")]
			[Address(RVA = "0xDCB10C", Offset = "0xDCB10C", VA = "0xDCB10C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xDCA998", Offset = "0xDCA998", VA = "0xDCA998")]
		[DebuggerHidden]
		public <TimeCount>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xDCAF2C", Offset = "0xDCAF2C", VA = "0xDCAF2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xDCAF30", Offset = "0xDCAF30", VA = "0xDCAF30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xDCB0AC", Offset = "0xDCB0AC", VA = "0xDCB0AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneContainer container;

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xDCA890", Offset = "0xDCA890", VA = "0xDCA890")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F420", Offset = "0xA8F420")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xDCA938", Offset = "0xDCA938", VA = "0xDCA938")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F484", Offset = "0xA8F484")]
	private IEnumerator TimeCount()
	{
		return null;
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xDCA9C4", Offset = "0xDCA9C4", VA = "0xDCA9C4")]
	public MTest()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xDCA9CC", Offset = "0xDCA9CC", VA = "0xDCA9CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8F4E8", Offset = "0xA8F4E8")]
	private bool <Start>b__1_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000AD")]
public class StreamingAssetContainer : MonoBehaviour
{
	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int i1;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private StreamingAsset<AudioClip> sa;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int i2;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClipStreamingAsset acsa;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int i3;

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x180878C", Offset = "0x180878C", VA = "0x180878C")]
	private void Start()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x18087E4", Offset = "0x18087E4", VA = "0x18087E4")]
	public StreamingAssetContainer()
	{
	}
}
[Token(Token = "0x20000AE")]
public class AudioHelper : MonoBehaviour
{
	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource[] audioSource;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool oneShot;

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xDBA8B4", Offset = "0xDBA8B4", VA = "0xDBA8B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xDBA8B8", Offset = "0xDBA8B8", VA = "0xDBA8B8")]
	public void Play()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xDBA9C4", Offset = "0xDBA9C4", VA = "0xDBA9C4")]
	public AudioHelper()
	{
	}
}
[Token(Token = "0x20000AF")]
public class DebugMenuItem
{
	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Text label;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action callback;

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xDBDD1C", Offset = "0xDBDD1C", VA = "0xDBDD1C")]
	public DebugMenuItem(string name, Action pCallback, GameObject prefab, Transform parent)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xDBDE10", Offset = "0xDBDE10", VA = "0xDBDE10")]
	public void Trigger()
	{
	}
}
[Token(Token = "0x20000B0")]
public class GamepadDebugMenu : MonoBehaviour
{
	[Token(Token = "0x200029D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88770", Offset = "0xA88770")]
	private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GamepadDebugMenu <>4__this;

		[Token(Token = "0x1700012B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001029")]
			[Address(RVA = "0xDC54DC", Offset = "0xDC54DC", VA = "0xDC54DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600102B")]
			[Address(RVA = "0xDC5544", Offset = "0xDC5544", VA = "0xDC5544", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0xDC5020", Offset = "0xDC5020", VA = "0xDC5020")]
		[DebuggerHidden]
		public <Start>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0xDC546C", Offset = "0xDC546C", VA = "0xDC546C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0xDC5470", Offset = "0xDC5470", VA = "0xDC5470", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0xDC54E4", Offset = "0xDC54E4", VA = "0xDC54E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject textPrefab;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform cursor;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform optionParent;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text logText;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal int index;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<DebugMenuItem> optionList;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AxisPressCheck axisPressCheck;

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xDC4F38", Offset = "0xDC4F38", VA = "0xDC4F38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xDC4FA4", Offset = "0xDC4FA4", VA = "0xDC4FA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F4F8", Offset = "0xA8F4F8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xDC504C", Offset = "0xDC504C", VA = "0xDC504C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xDC5160", Offset = "0xDC5160", VA = "0xDC5160")]
	public void RefreshCursor()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xDC526C", Offset = "0xDC526C", VA = "0xDC526C")]
	public DebugMenuItem CreateItem(string name, Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xDC5318", Offset = "0xDC5318", VA = "0xDC5318")]
	public void Log(string log)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xDC53B0", Offset = "0xDC53B0", VA = "0xDC53B0")]
	public GamepadDebugMenu()
	{
	}
}
[Token(Token = "0x20000B1")]
public class LoadSceneDestiny : MonoBehaviour
{
	[Token(Token = "0x200029E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88780", Offset = "0xA88780")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadSceneDestiny <>4__this;

		[Token(Token = "0x1700012D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600102F")]
			[Address(RVA = "0xDC73F0", Offset = "0xDC73F0", VA = "0xDC73F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001031")]
			[Address(RVA = "0xDC7458", Offset = "0xDC7458", VA = "0xDC7458", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0xDC72D4", Offset = "0xDC72D4", VA = "0xDC72D4")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0xDC7308", Offset = "0xDC7308", VA = "0xDC7308", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xDC730C", Offset = "0xDC730C", VA = "0xDC730C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xDC73F8", Offset = "0xDC73F8", VA = "0xDC73F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string levelName;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xDC7258", Offset = "0xDC7258", VA = "0xDC7258")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F55C", Offset = "0xA8F55C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xDC7300", Offset = "0xDC7300", VA = "0xDC7300")]
	public LoadSceneDestiny()
	{
	}
}
[Token(Token = "0x20000B2")]
public class SceneController : MonoBehaviour
{
	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneContainer sceneA;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SceneContainer sceneB;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SceneContainer sceneC;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SceneContainer sceneD;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal SceneContainer[] sceneArray;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xDA42B4", Offset = "0xDA42B4", VA = "0xDA42B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xDA441C", Offset = "0xDA441C", VA = "0xDA441C")]
	public SceneController()
	{
	}
}
[Token(Token = "0x20000B3")]
public class Debuggable : MonoBehaviour
{
	[Token(Token = "0x600036B")]
	[Address(RVA = "0xDC1110", Offset = "0xDC1110", VA = "0xDC1110")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xDC117C", Offset = "0xDC117C", VA = "0xDC117C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xDC11E8", Offset = "0xDC11E8", VA = "0xDC11E8")]
	public Debuggable()
	{
	}
}
[Token(Token = "0x20000B4")]
public class Lagger : MonoBehaviour
{
	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lagPerFrame;

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xDC6CC4", Offset = "0xDC6CC4", VA = "0xDC6CC4")]
	public Lagger()
	{
	}
}
[Token(Token = "0x20000B5")]
public class MaterialFader : MonoBehaviour
{
	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88790", Offset = "0xA88790")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialFader <>4__this;

		[Token(Token = "0x1700012F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001035")]
			[Address(RVA = "0xDCC214", Offset = "0xDCC214", VA = "0xDCC214", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001037")]
			[Address(RVA = "0xDCC27C", Offset = "0xDCC27C", VA = "0xDCC27C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xDCBE24", Offset = "0xDCBE24", VA = "0xDCBE24")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xDCC0F4", Offset = "0xDCC0F4", VA = "0xDCC0F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0xDCC0F8", Offset = "0xDCC0F8", VA = "0xDCC0F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xDCC21C", Offset = "0xDCC21C", VA = "0xDCC21C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Renderer> renderList;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool executeOnStart;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool initialized;

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xDCBA2C", Offset = "0xDCBA2C", VA = "0xDCBA2C")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xDCBDA8", Offset = "0xDCBDA8", VA = "0xDCBDA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F5C0", Offset = "0xA8F5C0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xDCBCDC", Offset = "0xDCBCDC", VA = "0xDCBCDC")]
	private Material CreateNewMaterial(Renderer renderer, Material fillMat)
	{
		return null;
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xDCBE50", Offset = "0xDCBE50", VA = "0xDCBE50")]
	public void ApplyEffectOnMaterial(float time, bool fade)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xDCBFF0", Offset = "0xDCBFF0", VA = "0xDCBFF0")]
	private void ApplyEffectOnMaterial(Material material, float time, bool fade)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xDCC078", Offset = "0xDCC078", VA = "0xDCC078")]
	public MaterialFader()
	{
	}
}
[Token(Token = "0x20000B6")]
public class QuickTest10 : MonoBehaviour
{
	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA887A0", Offset = "0xA887A0")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000131")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600103B")]
			[Address(RVA = "0xDA2640", Offset = "0xDA2640", VA = "0xDA2640", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600103D")]
			[Address(RVA = "0xDA26A8", Offset = "0xDA26A8", VA = "0xDA26A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xDA2464", Offset = "0xDA2464", VA = "0xDA2464")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xDA2498", Offset = "0xDA2498", VA = "0xDA2498", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xDA249C", Offset = "0xDA249C", VA = "0xDA249C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0xDA2648", Offset = "0xDA2648", VA = "0xDA2648", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xDA2404", Offset = "0xDA2404", VA = "0xDA2404")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F624", Offset = "0xA8F624")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xDA2490", Offset = "0xDA2490", VA = "0xDA2490")]
	public QuickTest10()
	{
	}
}
[Token(Token = "0x20000B7")]
public class SceneLoader : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002A1")]
	public class LoadFinishedCallback : UnityEvent
	{
		[Token(Token = "0x600103E")]
		[Address(RVA = "0x1804590", Offset = "0x1804590", VA = "0x1804590")]
		public LoadFinishedCallback()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002A2")]
	public class OnProgressChangeCallback : UnityEvent<float>
	{
		[Token(Token = "0x600103F")]
		[Address(RVA = "0x1804598", Offset = "0x1804598", VA = "0x1804598")]
		public OnProgressChangeCallback()
		{
		}
	}

	[Token(Token = "0x20002A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA887B0", Offset = "0xA887B0")]
	private sealed class <MainRoutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x17000133")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001043")]
			[Address(RVA = "0x1804520", Offset = "0x1804520", VA = "0x1804520", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001045")]
			[Address(RVA = "0x1804588", Offset = "0x1804588", VA = "0x1804588", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x1803B48", Offset = "0x1803B48", VA = "0x1803B48")]
		[DebuggerHidden]
		public <MainRoutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x18042EC", Offset = "0x18042EC", VA = "0x18042EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x18042F0", Offset = "0x18042F0", VA = "0x18042F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x1804528", Offset = "0x1804528", VA = "0x1804528", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA887C0", Offset = "0xA887C0")]
	private sealed class <ClearMemory>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float intervals;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<float> onProgressCallback;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action finishedCallback;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AsyncOperation <unloadUnusedAssets>5__2;

		[Token(Token = "0x17000135")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001049")]
			[Address(RVA = "0x1803FB4", Offset = "0x1803FB4", VA = "0x1803FB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600104B")]
			[Address(RVA = "0x180401C", Offset = "0x180401C", VA = "0x180401C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x1803C1C", Offset = "0x1803C1C", VA = "0x1803C1C")]
		[DebuggerHidden]
		public <ClearMemory>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x1803DB0", Offset = "0x1803DB0", VA = "0x1803DB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x1803DB4", Offset = "0x1803DB4", VA = "0x1803DB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x1803FBC", Offset = "0x1803FBC", VA = "0x1803FBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA887D0", Offset = "0xA887D0")]
	private sealed class <Load>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x17000137")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600104F")]
			[Address(RVA = "0x180427C", Offset = "0x180427C", VA = "0x180427C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000138")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001051")]
			[Address(RVA = "0x18042E4", Offset = "0x18042E4", VA = "0x18042E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x1803CC4", Offset = "0x1803CC4", VA = "0x1803CC4")]
		[DebuggerHidden]
		public <Load>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x1804024", Offset = "0x1804024", VA = "0x1804024", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x1804028", Offset = "0x1804028", VA = "0x1804028", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x1804284", Offset = "0x1804284", VA = "0x1804284", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string levelName;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minimumTimeForWait;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89E6C", Offset = "0xA89E6C")]
	private float ioIntervals;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89EB8", Offset = "0xA89EB8")]
	public bool callOnStart;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89EF0", Offset = "0xA89EF0")]
	public bool clearMemory;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89F28", Offset = "0xA89F28")]
	[SerializeField]
	private float clearMemoryWeight;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89F74", Offset = "0xA89F74")]
	public LoadFinishedCallback loadFinishedCallback;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA89FAC", Offset = "0xA89FAC")]
	public OnProgressChangeCallback onProgressChangeCallback;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AsyncOperation loadSceneOperation;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int originalSleepTimeout;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float beforeLoadTime;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool loadingDone;

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x1803A0C", Offset = "0x1803A0C", VA = "0x1803A0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x1803A1C", Offset = "0x1803A1C", VA = "0x1803A1C")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x1803ACC", Offset = "0x1803ACC", VA = "0x1803ACC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F688", Offset = "0xA8F688")]
	private IEnumerator MainRoutine()
	{
		return null;
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1803B74", Offset = "0x1803B74", VA = "0x1803B74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F6EC", Offset = "0xA8F6EC")]
	public static IEnumerator ClearMemory(float intervals = 0.1f, [Optional] Action<float> onProgressCallback, [Optional] Action finishedCallback)
	{
		return null;
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1803C48", Offset = "0x1803C48", VA = "0x1803C48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F750", Offset = "0xA8F750")]
	private IEnumerator Load()
	{
		return null;
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x1803CF0", Offset = "0x1803CF0", VA = "0x1803CF0")]
	public void AllowSceneActivation()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x1803D1C", Offset = "0x1803D1C", VA = "0x1803D1C")]
	public SceneLoader()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1803D44", Offset = "0x1803D44", VA = "0x1803D44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8F7B4", Offset = "0xA8F7B4")]
	private void <MainRoutine>b__16_0(float progress)
	{
	}
}
[Token(Token = "0x20000B8")]
public class SnapCube : MonoBehaviour
{
	[Token(Token = "0x600037F")]
	[Address(RVA = "0x180502C", Offset = "0x180502C", VA = "0x180502C")]
	public SnapCube()
	{
	}
}
[Token(Token = "0x20000B9")]
public class BotEndingBehavior : MonoBehaviour
{
	[Token(Token = "0x20002A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA887E0", Offset = "0xA887E0")]
	private sealed class <FreezePushBotAndDisappearRoutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BotEndingBehavior <>4__this;

		[Token(Token = "0x17000139")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001055")]
			[Address(RVA = "0xDBC0B4", Offset = "0xDBC0B4", VA = "0xDBC0B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001057")]
			[Address(RVA = "0xDBC11C", Offset = "0xDBC11C", VA = "0xDBC11C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xDBB788", Offset = "0xDBB788", VA = "0xDBB788")]
		[DebuggerHidden]
		public <FreezePushBotAndDisappearRoutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xDBBF68", Offset = "0xDBBF68", VA = "0xDBBF68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xDBBF6C", Offset = "0xDBBF6C", VA = "0xDBBF6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xDBC0BC", Offset = "0xDBC0BC", VA = "0xDBC0BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA887F0", Offset = "0xA887F0")]
	private sealed class <BotRemovalRoutineWihtoutDialog>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotEndingBehavior <>4__this;

		[Token(Token = "0x1700013B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0xDBBEF8", Offset = "0xDBBEF8", VA = "0xDBBEF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600105D")]
			[Address(RVA = "0xDBBF60", Offset = "0xDBBF60", VA = "0xDBBF60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xDBB7EC", Offset = "0xDBB7EC", VA = "0xDBB7EC")]
		[DebuggerHidden]
		public <BotRemovalRoutineWihtoutDialog>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xDBBE30", Offset = "0xDBBE30", VA = "0xDBBE30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0xDBBE34", Offset = "0xDBBE34", VA = "0xDBBE34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xDBBF00", Offset = "0xDBBF00", VA = "0xDBBF00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88800", Offset = "0xA88800")]
	private sealed class <SecondPushRoutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotEndingBehavior <>4__this;

		[Token(Token = "0x1700013D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001061")]
			[Address(RVA = "0xDBC210", Offset = "0xDBC210", VA = "0xDBC210", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001063")]
			[Address(RVA = "0xDBC278", Offset = "0xDBC278", VA = "0xDBC278", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xDBB818", Offset = "0xDBB818", VA = "0xDBB818")]
		[DebuggerHidden]
		public <SecondPushRoutine>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xDBC124", Offset = "0xDBC124", VA = "0xDBC124", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xDBC128", Offset = "0xDBC128", VA = "0xDBC128", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xDBC218", Offset = "0xDBC218", VA = "0xDBC218", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88810", Offset = "0xA88810")]
	private sealed class <BotRemovalRoutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotEndingBehavior <>4__this;

		[Token(Token = "0x1700013F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001067")]
			[Address(RVA = "0xDBBDC0", Offset = "0xDBBDC0", VA = "0xDBBDC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000140")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0xDBBE28", Offset = "0xDBBE28", VA = "0xDBBE28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xDBB844", Offset = "0xDBB844", VA = "0xDBB844")]
		[DebuggerHidden]
		public <BotRemovalRoutine>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xDBBCF4", Offset = "0xDBBCF4", VA = "0xDBBCF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0xDBBCF8", Offset = "0xDBBCF8", VA = "0xDBBCF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xDBBDC8", Offset = "0xDBBDC8", VA = "0xDBBDC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hasPushedplayer;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int pushCounter;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool frozenBot;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string firstDialogue;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string secondDialogue;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool waitForCallBack;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public StrengthBotState strengthState;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Renderer> renderList;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool requireDialogs;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DialogController dialogueController;

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xDBB0E8", Offset = "0xDBB0E8", VA = "0xDBB0E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xDBB484", Offset = "0xDBB484", VA = "0xDBB484")]
	public void PushPlayer()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xDBB4D0", Offset = "0xDBB4D0", VA = "0xDBB4D0")]
	public void TriggeredPushPlayer()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xDBB494", Offset = "0xDBB494", VA = "0xDBB494")]
	public void OnFirstPush()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xDBB4EC", Offset = "0xDBB4EC", VA = "0xDBB4EC")]
	public void OnSecondPush()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xDBB6D0", Offset = "0xDBB6D0", VA = "0xDBB6D0")]
	public void FreezePushBotAndDisappear(float delay)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xDBB6FC", Offset = "0xDBB6FC", VA = "0xDBB6FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F7C4", Offset = "0xA8F7C4")]
	private IEnumerator FreezePushBotAndDisappearRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xDBB7B4", Offset = "0xDBB7B4", VA = "0xDBB7B4")]
	public void DisapearSequence()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xDBB654", Offset = "0xDBB654", VA = "0xDBB654")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F828", Offset = "0xA8F828")]
	private IEnumerator BotRemovalRoutineWihtoutDialog()
	{
		return null;
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xDBB55C", Offset = "0xDBB55C", VA = "0xDBB55C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F88C", Offset = "0xA8F88C")]
	private IEnumerator SecondPushRoutine()
	{
		return null;
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xDBB5D8", Offset = "0xDBB5D8", VA = "0xDBB5D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F8F0", Offset = "0xA8F8F0")]
	private IEnumerator BotRemovalRoutine()
	{
		return null;
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xDBB870", Offset = "0xDBB870", VA = "0xDBB870")]
	private void ExecuteDisappearsEffect()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xDBB0EC", Offset = "0xDBB0EC", VA = "0xDBB0EC")]
	private void InitializeAllMaterials()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xDBBAF8", Offset = "0xDBBAF8", VA = "0xDBBAF8")]
	private Material CreateNewMaterial(Renderer renderer, Material fillMat)
	{
		return null;
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xDBBAEC", Offset = "0xDBBAEC", VA = "0xDBBAEC")]
	private float GetStartAnimationDistance(Renderer renderer)
	{
		return default(float);
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xDBBC3C", Offset = "0xDBBC3C", VA = "0xDBBC3C")]
	private float GetEndAnimationDistance(Renderer renderer)
	{
		return default(float);
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xDBBC48", Offset = "0xDBBC48", VA = "0xDBBC48")]
	public BotEndingBehavior()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xDBBCCC", Offset = "0xDBBCCC", VA = "0xDBBCCC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8F954", Offset = "0xA8F954")]
	private void <ExecuteDisappearsEffect>b__21_0()
	{
	}
}
[Token(Token = "0x20000BA")]
public class FlyingDroneAnim : MonoBehaviour
{
	[Token(Token = "0x20002AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88820", Offset = "0xA88820")]
	private sealed class <ShowDrones>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlyingDroneAnim <>4__this;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000141")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600106D")]
			[Address(RVA = "0xDC4C58", Offset = "0xDC4C58", VA = "0xDC4C58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600106F")]
			[Address(RVA = "0xDC4CC0", Offset = "0xDC4CC0", VA = "0xDC4CC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xDC4A98", Offset = "0xDC4A98", VA = "0xDC4A98")]
		[DebuggerHidden]
		public <ShowDrones>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xDC4AFC", Offset = "0xDC4AFC", VA = "0xDC4AFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0xDC4B00", Offset = "0xDC4B00", VA = "0xDC4B00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xDC4C60", Offset = "0xDC4C60", VA = "0xDC4C60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation animations;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] drones;

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xDC4A1C", Offset = "0xDC4A1C", VA = "0xDC4A1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8F964", Offset = "0xA8F964")]
	private IEnumerator ShowDrones()
	{
		return null;
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xDC4AC4", Offset = "0xDC4AC4", VA = "0xDC4AC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xDC4AF0", Offset = "0xDC4AF0", VA = "0xDC4AF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xDC4AF4", Offset = "0xDC4AF4", VA = "0xDC4AF4")]
	public FlyingDroneAnim()
	{
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20000BB")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000029")]
		public bool Highlight
		{
			[Token(Token = "0x6000396")]
			[Address(RVA = "0xEDB418", Offset = "0xEDB418", VA = "0xEDB418")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000397")]
			[Address(RVA = "0xEDB420", Offset = "0xEDB420", VA = "0xEDB420")]
			set
			{
			}
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0xEDB42C", Offset = "0xEDB42C", VA = "0xEDB42C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0xEDB5F8", Offset = "0xEDB5F8", VA = "0xEDB5F8", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0xEDB620", Offset = "0xEDB620", VA = "0xEDB620", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0xEDB648", Offset = "0xEDB648", VA = "0xEDB648")]
		private void Awake()
		{
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0xEDB4F8", Offset = "0xEDB4F8", VA = "0xEDB4F8")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x600039D")]
		[Address(RVA = "0xEDB8D8", Offset = "0xEDB8D8", VA = "0xEDB8D8")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20000BC")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700002A")]
		public bool InRange
		{
			[Token(Token = "0x600039F")]
			[Address(RVA = "0xEDBC54", Offset = "0xEDBC54", VA = "0xEDBC54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003A0")]
			[Address(RVA = "0xEDBC5C", Offset = "0xEDBC5C", VA = "0xEDBC5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700002B")]
		public bool Targeted
		{
			[Token(Token = "0x60003A1")]
			[Address(RVA = "0xEDBDE8", Offset = "0xEDBDE8", VA = "0xEDBDE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003A2")]
			[Address(RVA = "0xEDBDF0", Offset = "0xEDBDF0", VA = "0xEDBDF0")]
			set
			{
			}
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0xEDBDFC", Offset = "0xEDBDFC", VA = "0xEDBDFC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0xEDBC68", Offset = "0xEDBC68", VA = "0xEDBC68")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0xEDBF64", Offset = "0xEDBF64", VA = "0xEDBF64")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0xEDBFA8", Offset = "0xEDBFA8", VA = "0xEDBFA8")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0xEDC004", Offset = "0xEDC004", VA = "0xEDC004")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20000BD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA88270", Offset = "0xA88270")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700002C")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60003A8")]
			[Address(RVA = "0xEDC00C", Offset = "0xEDC00C", VA = "0xEDC00C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003A9")]
			[Address(RVA = "0xEDC014", Offset = "0xEDC014", VA = "0xEDC014")]
			set
			{
			}
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0xEDC030", Offset = "0xEDC030", VA = "0xEDC030", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0xEDC1CC", Offset = "0xEDC1CC", VA = "0xEDC1CC", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0xEDCBBC", Offset = "0xEDCBBC", VA = "0xEDCBBC", Slot = "8")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0xEDD194", Offset = "0xEDD194", VA = "0xEDD194", Slot = "9")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0xEDD574", Offset = "0xEDD574", VA = "0xEDD574")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0xEDC4B8", Offset = "0xEDC4B8", VA = "0xEDC4B8")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0xEDD650", Offset = "0xEDD650", VA = "0xEDD650")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0xEDDAE8", Offset = "0xEDDAE8", VA = "0xEDDAE8", Slot = "10")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xEDDB00", Offset = "0xEDDB00", VA = "0xEDDB00", Slot = "11")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0xEDDB08", Offset = "0xEDDB08", VA = "0xEDDB08")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20000BE")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xDD3A90", Offset = "0xDD3A90", VA = "0xDD3A90")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0xDD3B40", Offset = "0xDD3B40", VA = "0xDD3B40")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xDD3BF0", Offset = "0xDD3BF0", VA = "0xDD3BF0")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20000BF")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20002AB")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000B4C")]
			Disabled,
			[Token(Token = "0x4000B4D")]
			Enabled,
			[Token(Token = "0x4000B4E")]
			Targeted
		}

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0xDD3BF8", Offset = "0xDD3BF8", VA = "0xDD3BF8")]
		private void Start()
		{
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0xDD3C68", Offset = "0xDD3C68", VA = "0xDD3C68")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0xDD3D04", Offset = "0xDD3D04", VA = "0xDD3D04")]
		private void Update()
		{
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0xDD3D4C", Offset = "0xDD3D4C", VA = "0xDD3D4C")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20000C0")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0xDDBFA8", Offset = "0xDDBFA8", VA = "0xDDBFA8")]
		private void Start()
		{
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0xDDC074", Offset = "0xDDC074", VA = "0xDDC074")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0xDDC080", Offset = "0xDDC080", VA = "0xDDC080")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0xDDC08C", Offset = "0xDDC08C", VA = "0xDDC08C")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20000C1")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xED9B1C", Offset = "0xED9B1C", VA = "0xED9B1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xED9B74", Offset = "0xED9B74", VA = "0xED9B74")]
		private void Update()
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0xED9E18", Offset = "0xED9E18", VA = "0xED9E18")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0xED9F08", Offset = "0xED9F08", VA = "0xED9F08")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0xED9B78", Offset = "0xED9B78", VA = "0xED9B78")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0xED9FF8", Offset = "0xED9FF8", VA = "0xED9FF8")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20000C2")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20002AC")]
		public enum ContactTest
		{
			[Token(Token = "0x4000B50")]
			PerpenTest,
			[Token(Token = "0x4000B51")]
			BackwardsPress
		}

		[Token(Token = "0x400043B")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x400043C")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700002D")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60003C5")]
			[Address(RVA = "0xEDA0A8", Offset = "0xEDA0A8", VA = "0xEDA0A8", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700002E")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60003C6")]
			[Address(RVA = "0xEDA0B0", Offset = "0xEDA0B0", VA = "0xEDA0B0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0xEDA0BC", Offset = "0xEDA0BC", VA = "0xEDA0BC", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0xEDA1D4", Offset = "0xEDA1D4", VA = "0xEDA1D4")]
		private void CallEventsOnOldDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0xEDA3F0", Offset = "0xEDA3F0", VA = "0xEDA3F0")]
		private void CallEventsOnNewDepth(InteractableCollisionDepth newDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0xEDA550", Offset = "0xEDA550", VA = "0xEDA550")]
		private void SustainEventsOnDepth(InteractableCollisionDepth depth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0xEDA6B0", Offset = "0xEDA6B0", VA = "0xEDA6B0", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0xEDACD8", Offset = "0xEDACD8", VA = "0xEDACD8")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0xEDAE40", Offset = "0xEDAE40", VA = "0xEDAE40")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0xEDAF98", Offset = "0xEDAF98", VA = "0xEDAF98")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0xEDB178", Offset = "0xEDB178", VA = "0xEDB178")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20000C3")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A124", Offset = "0xA8A124")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A134", Offset = "0xA8A134")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700002F")]
		public Collider Collider
		{
			[Token(Token = "0x60003D0")]
			[Address(RVA = "0xEDB274", Offset = "0xEDB274", VA = "0xEDB274", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8F9C8", Offset = "0xA8F9C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003D1")]
			[Address(RVA = "0xEDB27C", Offset = "0xEDB27C", VA = "0xEDB27C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8F9D8", Offset = "0xA8F9D8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000030")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60003D2")]
			[Address(RVA = "0xEDB284", Offset = "0xEDB284", VA = "0xEDB284", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8F9E8", Offset = "0xA8F9E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003D3")]
			[Address(RVA = "0xEDB28C", Offset = "0xEDB28C", VA = "0xEDB28C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8F9F8", Offset = "0xA8F9F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000031")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60003D4")]
			[Address(RVA = "0xEDB294", Offset = "0xEDB294", VA = "0xEDB294", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0xEDB2E4", Offset = "0xEDB2E4", VA = "0xEDB2E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xEDB370", Offset = "0xEDB370", VA = "0xEDB370")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	public class CapsuleInfo : MonoBehaviour
	{
		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A144", Offset = "0xA8A144")]
		private Hand <Hand>k__BackingField;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A154", Offset = "0xA8A154")]
		private OVRPlugin.BoneId <BoneIndex>k__BackingField;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A164", Offset = "0xA8A164")]
		private Rigidbody <CapsuleRigidBBody>k__BackingField;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A174", Offset = "0xA8A174")]
		private CapsuleCollider <CapsuleCollider>k__BackingField;

		[Token(Token = "0x17000032")]
		public Hand Hand
		{
			[Token(Token = "0x60003D7")]
			[Address(RVA = "0xEDB378", Offset = "0xEDB378", VA = "0xEDB378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FA08", Offset = "0xA8FA08")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003D8")]
			[Address(RVA = "0xEDB380", Offset = "0xEDB380", VA = "0xEDB380")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FA18", Offset = "0xA8FA18")]
			private set
			{
			}
		}

		[Token(Token = "0x17000033")]
		public OVRPlugin.BoneId BoneIndex
		{
			[Token(Token = "0x60003D9")]
			[Address(RVA = "0xEDB388", Offset = "0xEDB388", VA = "0xEDB388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FA28", Offset = "0xA8FA28")]
			get
			{
				return default(OVRPlugin.BoneId);
			}
			[Token(Token = "0x60003DA")]
			[Address(RVA = "0xEDB390", Offset = "0xEDB390", VA = "0xEDB390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FA38", Offset = "0xA8FA38")]
			private set
			{
			}
		}

		[Token(Token = "0x17000034")]
		public Rigidbody CapsuleRigidBBody
		{
			[Token(Token = "0x60003DB")]
			[Address(RVA = "0xEDB398", Offset = "0xEDB398", VA = "0xEDB398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FA48", Offset = "0xA8FA48")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003DC")]
			[Address(RVA = "0xEDB3A0", Offset = "0xEDB3A0", VA = "0xEDB3A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FA58", Offset = "0xA8FA58")]
			private set
			{
			}
		}

		[Token(Token = "0x17000035")]
		public CapsuleCollider CapsuleCollider
		{
			[Token(Token = "0x60003DD")]
			[Address(RVA = "0xEDB3A8", Offset = "0xEDB3A8", VA = "0xEDB3A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FA68", Offset = "0xA8FA68")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003DE")]
			[Address(RVA = "0xEDB3B0", Offset = "0xEDB3B0", VA = "0xEDB3B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FA78", Offset = "0xA8FA78")]
			private set
			{
			}
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0xEDB3B8", Offset = "0xEDB3B8", VA = "0xEDB3B8")]
		public void Init(Hand hand, OVRPlugin.BoneId bone, Rigidbody rigidBody, CapsuleCollider capsuleCollider)
		{
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xEDB410", Offset = "0xEDB410", VA = "0xEDB410")]
		public CapsuleInfo()
		{
		}
	}
	[Token(Token = "0x20000C5")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000036")]
		Collider Collider
		{
			[Token(Token = "0x60003E1")]
			get;
		}

		[Token(Token = "0x17000037")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60003E2")]
			get;
		}

		[Token(Token = "0x17000038")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60003E3")]
			get;
		}
	}
	[Token(Token = "0x20000C6")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xEDA334", Offset = "0xEDA334", VA = "0xEDA334")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20000C7")]
	public enum InteractionType
	{
		[Token(Token = "0x4000454")]
		Enter,
		[Token(Token = "0x4000455")]
		Stay,
		[Token(Token = "0x4000456")]
		Exit
	}
	[Token(Token = "0x20000C8")]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x20002AD")]
		public enum HandTrackingConfidence
		{
			[Token(Token = "0x4000B53")]
			Low,
			[Token(Token = "0x4000B54")]
			High,
			[Token(Token = "0x4000B55")]
			None
		}

		[Token(Token = "0x20002AE")]
		public struct PointerState
		{
			[Token(Token = "0x4000B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 PointerPosition;

			[Token(Token = "0x4000B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion PointerOrientation;

			[Token(Token = "0x4000B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool PointerStatusValid;
		}

		[Token(Token = "0x20002AF")]
		private class HandConfidenceFader
		{
			[Token(Token = "0x4000B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static float MAX_ALPHA;

			[Token(Token = "0x4000B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _numberOfFrames;

			[Token(Token = "0x4000B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float _minTrackedAlpha;

			[Token(Token = "0x4000B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float _maxTrackedAlpha;

			[Token(Token = "0x4000B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int _currentCount;

			[Token(Token = "0x6001070")]
			[Address(RVA = "0xDD4124", Offset = "0xDD4124", VA = "0xDD4124")]
			public HandConfidenceFader(int numberOfFramse)
			{
			}

			[Token(Token = "0x6001071")]
			[Address(RVA = "0xDD4678", Offset = "0xDD4678", VA = "0xDD4678")]
			public float NextAlphaValue(HandTrackingConfidence confidence)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A184", Offset = "0xA8A184")]
		private HandSkeleton <Skeleton>k__BackingField;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A194", Offset = "0xA8A194")]
		private HandPhysics <Physics>k__BackingField;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A1A4", Offset = "0xA8A1A4")]
		private SkeletonVisualizer <SkeletonVis>k__BackingField;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A1B4", Offset = "0xA8A1B4")]
		private HandMesh <HandMesh>k__BackingField;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public OVRPlugin.Hand HandType;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRPlugin.HandState _currentState;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool _isTracked;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private PointerState _pointer;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private HandConfidenceFader _confidenceFader;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private HandTrackingConfidence _handConfidence;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _scaledAlpha;

		[Token(Token = "0x17000039")]
		public HandSkeleton Skeleton
		{
			[Token(Token = "0x60003E5")]
			[Address(RVA = "0xDD3D54", Offset = "0xDD3D54", VA = "0xDD3D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FA88", Offset = "0xA8FA88")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003E6")]
			[Address(RVA = "0xDD3D5C", Offset = "0xDD3D5C", VA = "0xDD3D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FA98", Offset = "0xA8FA98")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003A")]
		public HandPhysics Physics
		{
			[Token(Token = "0x60003E7")]
			[Address(RVA = "0xDD3D64", Offset = "0xDD3D64", VA = "0xDD3D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FAA8", Offset = "0xA8FAA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003E8")]
			[Address(RVA = "0xDD3D6C", Offset = "0xDD3D6C", VA = "0xDD3D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FAB8", Offset = "0xA8FAB8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003B")]
		public SkeletonVisualizer SkeletonVis
		{
			[Token(Token = "0x60003E9")]
			[Address(RVA = "0xDD3D74", Offset = "0xDD3D74", VA = "0xDD3D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FAC8", Offset = "0xA8FAC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003EA")]
			[Address(RVA = "0xDD3D7C", Offset = "0xDD3D7C", VA = "0xDD3D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FAD8", Offset = "0xA8FAD8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public HandMesh HandMesh
		{
			[Token(Token = "0x60003EB")]
			[Address(RVA = "0xDD3D84", Offset = "0xDD3D84", VA = "0xDD3D84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FAE8", Offset = "0xA8FAE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003EC")]
			[Address(RVA = "0xDD3D8C", Offset = "0xDD3D8C", VA = "0xDD3D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FAF8", Offset = "0xA8FAF8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003D")]
		public bool IsInitialized
		{
			[Token(Token = "0x60003ED")]
			[Address(RVA = "0xDD3D94", Offset = "0xDD3D94", VA = "0xDD3D94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700003E")]
		public bool IsTracked
		{
			[Token(Token = "0x60003EE")]
			[Address(RVA = "0xDD3EB0", Offset = "0xDD3EB0", VA = "0xDD3EB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003EF")]
			[Address(RVA = "0xDD3EB8", Offset = "0xDD3EB8", VA = "0xDD3EB8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003F")]
		public SkinnedMeshRenderer HandSkinedMeshRenderer
		{
			[Token(Token = "0x60003F0")]
			[Address(RVA = "0xDD3EC4", Offset = "0xDD3EC4", VA = "0xDD3EC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		public Mesh Mesh
		{
			[Token(Token = "0x60003F1")]
			[Address(RVA = "0xDD3F50", Offset = "0xDD3F50", VA = "0xDD3F50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		public float ScaledAlpha
		{
			[Token(Token = "0x60003F2")]
			[Address(RVA = "0xDD3FDC", Offset = "0xDD3FDC", VA = "0xDD3FDC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60003F3")]
			[Address(RVA = "0xDD3FE4", Offset = "0xDD3FE4", VA = "0xDD3FE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000042")]
		public HandTrackingConfidence HandConfidence
		{
			[Token(Token = "0x60003F4")]
			[Address(RVA = "0xDD3FEC", Offset = "0xDD3FEC", VA = "0xDD3FEC")]
			get
			{
				return default(HandTrackingConfidence);
			}
			[Token(Token = "0x60003F5")]
			[Address(RVA = "0xDD3FF4", Offset = "0xDD3FF4", VA = "0xDD3FF4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000043")]
		public PointerState Pointer
		{
			[Token(Token = "0x60003F6")]
			[Address(RVA = "0xDD3FFC", Offset = "0xDD3FFC", VA = "0xDD3FFC")]
			get
			{
				return default(PointerState);
			}
		}

		[Token(Token = "0x17000044")]
		public OVRPlugin.HandState State
		{
			[Token(Token = "0x60003F7")]
			[Address(RVA = "0xDD400C", Offset = "0xDD400C", VA = "0xDD400C")]
			get
			{
				return default(OVRPlugin.HandState);
			}
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0xDD401C", Offset = "0xDD401C", VA = "0xDD401C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0xDD41B0", Offset = "0xDD41B0", VA = "0xDD41B0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0xDD4640", Offset = "0xDD4640", VA = "0xDD4640")]
		private void Update()
		{
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0xDD4254", Offset = "0xDD4254", VA = "0xDD4254")]
		private void UpdatePose(OVRPlugin.Step renderStep)
		{
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xDD4A84", Offset = "0xDD4A84", VA = "0xDD4A84")]
		public float PinchStrength(OVRPlugin.HandFinger finger)
		{
			return default(float);
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xDD4AC8", Offset = "0xDD4AC8", VA = "0xDD4AC8")]
		public void ShowSkeleton(Hands.HandsVisualMode mode)
		{
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xDD4774", Offset = "0xDD4774", VA = "0xDD4774")]
		public static HandTrackingConfidence OVRPluginConfidenceToHand(OVRPlugin.TrackingConfidence confidence)
		{
			return default(HandTrackingConfidence);
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xDD4BD8", Offset = "0xDD4BD8", VA = "0xDD4BD8")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20000C9")]
	public class HandMaterialModifier
	{
		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int HAND_COLOR_ID;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Color SYSTEM_GESTURE_COLOR;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Color _oldColor;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _setSystemGestureColor;

		[Token(Token = "0x6000400")]
		[Address(RVA = "0xDD4C3C", Offset = "0xDD4C3C", VA = "0xDD4C3C")]
		public HandMaterialModifier(Material materialToAdjust)
		{
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0xDD4CDC", Offset = "0xDD4CDC", VA = "0xDD4CDC")]
		public void UpdateHandMaterial(Hand hand, Material materialToAdjust)
		{
		}
	}
	[Token(Token = "0x20000CA")]
	public class HandMesh : MonoBehaviour
	{
		[Token(Token = "0x20002B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88830", Offset = "0xA88830")]
		private sealed class <InitializeHandMesh>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandMesh <>4__this;

			[Token(Token = "0x4000B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <success>5__2;

			[Token(Token = "0x17000143")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001076")]
				[Address(RVA = "0xDD59B8", Offset = "0xDD59B8", VA = "0xDD59B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000144")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001078")]
				[Address(RVA = "0xDD5A20", Offset = "0xDD5A20", VA = "0xDD5A20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001073")]
			[Address(RVA = "0xDD52B8", Offset = "0xDD52B8", VA = "0xDD52B8")]
			[DebuggerHidden]
			public <InitializeHandMesh>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001074")]
			[Address(RVA = "0xDD5864", Offset = "0xDD5864", VA = "0xDD5864", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001075")]
			[Address(RVA = "0xDD5868", Offset = "0xDD5868", VA = "0xDD5868", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001077")]
			[Address(RVA = "0xDD59C0", Offset = "0xDD59C0", VA = "0xDD59C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _handAlphaId;

		[Token(Token = "0x4000467")]
		private const float MAX_ALPHA = 1f;

		[Token(Token = "0x4000468")]
		private const float TRANSLUCENT_ALPHA = 0.75f;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A1C4", Offset = "0xA8A1C4")]
		private Mesh <Mesh>k__BackingField;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SkinnedMeshRenderer _skinnedMeshRenderer;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshFilter _meshFilter;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material _material;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Hand _hand;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isInitialized;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _currentAlphaMax;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HandMaterialModifier _handMaterialModifier;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _enableMeshVisual;

		[Token(Token = "0x17000045")]
		public Mesh Mesh
		{
			[Token(Token = "0x6000403")]
			[Address(RVA = "0xDD4E80", Offset = "0xDD4E80", VA = "0xDD4E80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FB08", Offset = "0xA8FB08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000404")]
			[Address(RVA = "0xDD4E88", Offset = "0xDD4E88", VA = "0xDD4E88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FB18", Offset = "0xA8FB18")]
			private set
			{
			}
		}

		[Token(Token = "0x17000046")]
		public bool IsInitialized
		{
			[Token(Token = "0x6000405")]
			[Address(RVA = "0xDD4E90", Offset = "0xDD4E90", VA = "0xDD4E90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000406")]
			[Address(RVA = "0xDD4E98", Offset = "0xDD4E98", VA = "0xDD4E98")]
			private set
			{
			}
		}

		[Token(Token = "0x17000047")]
		public SkinnedMeshRenderer HandSkinedMeshRenderer
		{
			[Token(Token = "0x6000407")]
			[Address(RVA = "0xDD4EA4", Offset = "0xDD4EA4", VA = "0xDD4EA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000408")]
			[Address(RVA = "0xDD4EAC", Offset = "0xDD4EAC", VA = "0xDD4EAC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0xDD4EB4", Offset = "0xDD4EB4", VA = "0xDD4EB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0xDD50C4", Offset = "0xDD50C4", VA = "0xDD50C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0xDD5210", Offset = "0xDD5210", VA = "0xDD5210")]
		private void Start()
		{
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0xDD523C", Offset = "0xDD523C", VA = "0xDD523C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8FB28", Offset = "0xA8FB28")]
		private IEnumerator InitializeHandMesh()
		{
			return null;
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0xDD52E4", Offset = "0xDD52E4", VA = "0xDD52E4")]
		private bool InitializeMesh(ref OVRPlugin.Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0xDD55F4", Offset = "0xDD55F4", VA = "0xDD55F4")]
		private static BoneWeight[] GetMeshBoneWeights(ref OVRPlugin.Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0xDD4784", Offset = "0xDD4784", VA = "0xDD4784")]
		public void UpdatePose()
		{
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0xDD4B7C", Offset = "0xDD4B7C", VA = "0xDD4B7C")]
		public void EnableMeshRenderer(Hands.HandsVisualMode mode)
		{
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0xDD57D8", Offset = "0xDD57D8", VA = "0xDD57D8")]
		public static OVRPlugin.MeshType GetHandMeshTypeFromOVRHandType(OVRPlugin.Hand hand)
		{
			return default(OVRPlugin.MeshType);
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0xDD57E8", Offset = "0xDD57E8", VA = "0xDD57E8")]
		public HandMesh()
		{
		}
	}
	[Token(Token = "0x20000CB")]
	public class HandPhysics : MonoBehaviour
	{
		[Token(Token = "0x20002B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88840", Offset = "0xA88840")]
		private sealed class <InitializeSkeleton>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandPhysics <>4__this;

			[Token(Token = "0x4000B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <success>5__2;

			[Token(Token = "0x17000145")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600107C")]
				[Address(RVA = "0xDD62CC", Offset = "0xDD62CC", VA = "0xDD62CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000146")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600107E")]
				[Address(RVA = "0xDD6334", Offset = "0xDD6334", VA = "0xDD6334", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001079")]
			[Address(RVA = "0xDD5C80", Offset = "0xDD5C80", VA = "0xDD5C80")]
			[DebuggerHidden]
			public <InitializeSkeleton>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x600107A")]
			[Address(RVA = "0xDD617C", Offset = "0xDD617C", VA = "0xDD617C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600107B")]
			[Address(RVA = "0xDD6180", Offset = "0xDD6180", VA = "0xDD6180", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600107D")]
			[Address(RVA = "0xDD62D4", Offset = "0xDD62D4", VA = "0xDD62D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CapsuleInfo[] _capsules;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HandSkeleton _handSkeleton;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Hand _hand;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _capsulesParent;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isInitialized;

		[Token(Token = "0x17000048")]
		public bool IsInitialized
		{
			[Token(Token = "0x6000414")]
			[Address(RVA = "0xDD5A28", Offset = "0xDD5A28", VA = "0xDD5A28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000415")]
			[Address(RVA = "0xDD5A30", Offset = "0xDD5A30", VA = "0xDD5A30")]
			private set
			{
			}
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0xDD5A3C", Offset = "0xDD5A3C", VA = "0xDD5A3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0xDD5B6C", Offset = "0xDD5B6C", VA = "0xDD5B6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0xDD5C14", Offset = "0xDD5C14", VA = "0xDD5C14")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0xDD5B98", Offset = "0xDD5B98", VA = "0xDD5B98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8FB8C", Offset = "0xA8FB8C")]
		private IEnumerator InitializeSkeleton()
		{
			return null;
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0xDD3870", Offset = "0xDD3870", VA = "0xDD3870")]
		public List<CapsuleInfo> GetCapsulesPerBone(OVRPlugin.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0xDD5CAC", Offset = "0xDD5CAC", VA = "0xDD5CAC")]
		public bool InitializePhysics(ref OVRPlugin.Skeleton skeleton)
		{
			return default(bool);
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0xDD4440", Offset = "0xDD4440", VA = "0xDD4440")]
		public void UpdatePose()
		{
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0xDD6174", Offset = "0xDD6174", VA = "0xDD6174")]
		public HandPhysics()
		{
		}
	}
	[Token(Token = "0x20000CC")]
	public class HandSkeleton : MonoBehaviour
	{
		[Token(Token = "0x20002B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88850", Offset = "0xA88850")]
		private sealed class <InitializeSkeleton>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandSkeleton <>4__this;

			[Token(Token = "0x4000B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <success>5__2;

			[Token(Token = "0x17000147")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001082")]
				[Address(RVA = "0xDD6F78", Offset = "0xDD6F78", VA = "0xDD6F78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000148")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001084")]
				[Address(RVA = "0xDD6FE0", Offset = "0xDD6FE0", VA = "0xDD6FE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600107F")]
			[Address(RVA = "0xDD65C0", Offset = "0xDD65C0", VA = "0xDD65C0")]
			[DebuggerHidden]
			public <InitializeSkeleton>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001080")]
			[Address(RVA = "0xDD6DA4", Offset = "0xDD6DA4", VA = "0xDD6DA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001081")]
			[Address(RVA = "0xDD6DA8", Offset = "0xDD6DA8", VA = "0xDD6DA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001083")]
			[Address(RVA = "0xDD6F80", Offset = "0xDD6F80", VA = "0xDD6F80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Transform> _bones;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Hand _hand;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _skeleton;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IList<Transform> _readOnlyBones;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isInitialized;

		[Token(Token = "0x17000049")]
		public bool IsInitialized
		{
			[Token(Token = "0x600041E")]
			[Address(RVA = "0xDD633C", Offset = "0xDD633C", VA = "0xDD633C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600041F")]
			[Address(RVA = "0xDD6344", Offset = "0xDD6344", VA = "0xDD6344")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004A")]
		public IList<Transform> Bones
		{
			[Token(Token = "0x6000420")]
			[Address(RVA = "0xDD6350", Offset = "0xDD6350", VA = "0xDD6350")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0xDD6358", Offset = "0xDD6358", VA = "0xDD6358")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0xDD6518", Offset = "0xDD6518", VA = "0xDD6518")]
		private void Start()
		{
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0xDD6544", Offset = "0xDD6544", VA = "0xDD6544")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8FBF0", Offset = "0xA8FBF0")]
		private IEnumerator InitializeSkeleton()
		{
			return null;
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0xDD65EC", Offset = "0xDD65EC", VA = "0xDD65EC")]
		public bool InitializeSkeleton(ref OVRPlugin.Skeleton skeleton)
		{
			return default(bool);
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0xDD69CC", Offset = "0xDD69CC", VA = "0xDD69CC")]
		private bool AttacheBonesToMesh()
		{
			return default(bool);
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0xDD48C0", Offset = "0xDD48C0", VA = "0xDD48C0")]
		public bool UpdatePose(OVRPlugin.HandState pose)
		{
			return default(bool);
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0xDD6C9C", Offset = "0xDD6C9C", VA = "0xDD6C9C")]
		public static OVRPlugin.BoneId GetDistalBone(OVRPlugin.BoneId bi)
		{
			return default(OVRPlugin.BoneId);
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0xDD6CC4", Offset = "0xDD6CC4", VA = "0xDD6CC4")]
		public static bool IsDistalBone(OVRPlugin.BoneId bi)
		{
			return default(bool);
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0xDD6D00", Offset = "0xDD6D00", VA = "0xDD6D00")]
		public static OVRPlugin.BoneId GetTip(OVRPlugin.BoneId bi)
		{
			return default(OVRPlugin.BoneId);
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0xDD6D24", Offset = "0xDD6D24", VA = "0xDD6D24")]
		public static int GetTipParentIndex(OVRPlugin.BoneId tip)
		{
			return default(int);
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0xDD6D4C", Offset = "0xDD6D4C", VA = "0xDD6D4C")]
		public static bool IsDistal(OVRPlugin.BoneId bone)
		{
			return default(bool);
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0xDD6D7C", Offset = "0xDD6D7C", VA = "0xDD6D7C")]
		public static OVRPlugin.SkeletonType GetSkeletonTypeFromMeshType(OVRPlugin.MeshType meshType)
		{
			return default(OVRPlugin.SkeletonType);
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0xDD62BC", Offset = "0xDD62BC", VA = "0xDD62BC")]
		public static OVRPlugin.SkeletonType GetSkeletonTypeFromHandType(OVRPlugin.Hand hand)
		{
			return default(OVRPlugin.SkeletonType);
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0xDD6D8C", Offset = "0xDD6D8C", VA = "0xDD6D8C")]
		public static OVRPlugin.Hand GetHandFromMeshType(OVRPlugin.MeshType meshType)
		{
			return default(OVRPlugin.Hand);
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0xDD6D9C", Offset = "0xDD6D9C", VA = "0xDD6D9C")]
		public HandSkeleton()
		{
		}
	}
	[Token(Token = "0x20000CD")]
	public class Hands : MonoBehaviour
	{
		[Token(Token = "0x20002B3")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000B6B")]
			Mesh,
			[Token(Token = "0x4000B6C")]
			Skeleton,
			[Token(Token = "0x4000B6D")]
			Both,
			[Token(Token = "0x4000B6E")]
			Max
		}

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Hand _handPrefab;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Hand _leftHand;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Hand _rightHand;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A204", Offset = "0xA8A204")]
		private static Hands <Instance>k__BackingField;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x1700004B")]
		public static Hands Instance
		{
			[Token(Token = "0x6000430")]
			[Address(RVA = "0xDD6FE8", Offset = "0xDD6FE8", VA = "0xDD6FE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FC54", Offset = "0xA8FC54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000431")]
			[Address(RVA = "0xDD7038", Offset = "0xDD7038", VA = "0xDD7038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FC64", Offset = "0xA8FC64")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public Hand LeftHand
		{
			[Token(Token = "0x6000432")]
			[Address(RVA = "0xDD7090", Offset = "0xDD7090", VA = "0xDD7090")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000433")]
			[Address(RVA = "0xDD7098", Offset = "0xDD7098", VA = "0xDD7098")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004D")]
		public Hand RightHand
		{
			[Token(Token = "0x6000434")]
			[Address(RVA = "0xDD70A0", Offset = "0xDD70A0", VA = "0xDD70A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000435")]
			[Address(RVA = "0xDD70A8", Offset = "0xDD70A8", VA = "0xDD70A8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0xDD3798", Offset = "0xDD3798", VA = "0xDD3798")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0xDD70B0", Offset = "0xDD70B0", VA = "0xDD70B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0xDD7480", Offset = "0xDD7480", VA = "0xDD7480")]
		private void Update()
		{
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0xDD7230", Offset = "0xDD7230", VA = "0xDD7230")]
		private void InitHands()
		{
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0xDD74D0", Offset = "0xDD74D0", VA = "0xDD74D0")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0xDD7500", Offset = "0xDD7500", VA = "0xDD7500")]
		public Hands()
		{
		}
	}
	[Token(Token = "0x20000CE")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002B4")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001085")]
			[Address(RVA = "0xDD7CBC", Offset = "0xDD7CBC", VA = "0xDD7CBC")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700004E")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x600043C")]
			[Address(RVA = "0xDD7508", Offset = "0xDD7508", VA = "0xDD7508")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x600043D")]
			[Address(RVA = "0xDD7510", Offset = "0xDD7510", VA = "0xDD7510")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x600043E")]
			[Address(RVA = "0xDD7518", Offset = "0xDD7518", VA = "0xDD7518")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x600043F")]
			[Address(RVA = "0xDD7520", Offset = "0xDD7520", VA = "0xDD7520", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000440")]
			[Address(RVA = "0xDD7528", Offset = "0xDD7528", VA = "0xDD7528")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FC74", Offset = "0xA8FC74")]
			add
			{
			}
			[Token(Token = "0x6000441")]
			[Address(RVA = "0xDD75CC", Offset = "0xDD75CC", VA = "0xDD75CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FC84", Offset = "0xA8FC84")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000443")]
			[Address(RVA = "0xDD76E4", Offset = "0xDD76E4", VA = "0xDD76E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FC94", Offset = "0xA8FC94")]
			add
			{
			}
			[Token(Token = "0x6000444")]
			[Address(RVA = "0xDD7788", Offset = "0xDD7788", VA = "0xDD7788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FCA4", Offset = "0xA8FCA4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000446")]
			[Address(RVA = "0xDD78A0", Offset = "0xDD78A0", VA = "0xDD78A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FCB4", Offset = "0xA8FCB4")]
			add
			{
			}
			[Token(Token = "0x6000447")]
			[Address(RVA = "0xDD7944", Offset = "0xDD7944", VA = "0xDD7944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FCC4", Offset = "0xA8FCC4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0xDD7670", Offset = "0xDD7670", VA = "0xDD7670", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0xDD782C", Offset = "0xDD782C", VA = "0xDD782C", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0xDD79E8", Offset = "0xDD79E8", VA = "0xDD79E8", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000449")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool);

		[Token(Token = "0x600044A")]
		[Address(RVA = "0xDD7A5C", Offset = "0xDD7A5C", VA = "0xDD7A5C", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0xDD7B88", Offset = "0xDD7B88", VA = "0xDD7B88", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0xDD7CB4", Offset = "0xDD7CB4", VA = "0xDD7CB4")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20000CF")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000489")]
		None,
		[Token(Token = "0x400048A")]
		Proximity,
		[Token(Token = "0x400048B")]
		Contact,
		[Token(Token = "0x400048C")]
		Action
	}
	[Token(Token = "0x20000D0")]
	public enum InteractableState
	{
		[Token(Token = "0x400048E")]
		Default,
		[Token(Token = "0x400048F")]
		ProximityState,
		[Token(Token = "0x4000490")]
		ContactState,
		[Token(Token = "0x4000491")]
		ActionState
	}
	[Token(Token = "0x20000D1")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x600044D")]
		[Address(RVA = "0xDD7E4C", Offset = "0xDD7E4C", VA = "0xDD7E4C")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20000D2")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000052")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x600044E")]
			[Address(RVA = "0xDD7D64", Offset = "0xDD7D64", VA = "0xDD7D64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0xDD7AC0", Offset = "0xDD7AC0", VA = "0xDD7AC0")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0xDD7BEC", Offset = "0xDD7BEC", VA = "0xDD7BEC")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0xDD7DCC", Offset = "0xDD7DCC", VA = "0xDD7DCC")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20000D3")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20002B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88860", Offset = "0xA88860")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Hands <handsObj>5__2;

			[Token(Token = "0x4000B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Hand <handToAttachTo>5__5;

			[Token(Token = "0x17000149")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600108A")]
				[Address(RVA = "0xDD86C0", Offset = "0xDD86C0", VA = "0xDD86C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600108C")]
				[Address(RVA = "0xDD8728", Offset = "0xDD8728", VA = "0xDD8728", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001086")]
			[Address(RVA = "0xDD8034", Offset = "0xDD8034", VA = "0xDD8034")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001087")]
			[Address(RVA = "0xDD8224", Offset = "0xDD8224", VA = "0xDD8224", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001088")]
			[Address(RVA = "0xDD8298", Offset = "0xDD8298", VA = "0xDD8298", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001089")]
			[Address(RVA = "0xDD8240", Offset = "0xDD8240", VA = "0xDD8240")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600108B")]
			[Address(RVA = "0xDD86C8", Offset = "0xDD86C8", VA = "0xDD86C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000453")]
		[Address(RVA = "0xDD7F14", Offset = "0xDD7F14", VA = "0xDD7F14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0xDD7F90", Offset = "0xDD7F90", VA = "0xDD7F90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8FCD4", Offset = "0xA8FCD4")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0xDD8060", Offset = "0xDD8060", VA = "0xDD8060")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0xDD821C", Offset = "0xDD821C", VA = "0xDD821C")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20000D4")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x17000053")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000457")]
			[Address(RVA = "0xDD8730", Offset = "0xDD8730", VA = "0xDD8730")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0xDD889C", Offset = "0xDD889C", VA = "0xDD889C")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0xDD8A08", Offset = "0xDD8A08", VA = "0xDD8A08")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600045A")]
		[Address(RVA = "0xDD8B74", Offset = "0xDD8B74", VA = "0xDD8B74")]
		private void Update()
		{
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0xDD8D20", Offset = "0xDD8D20", VA = "0xDD8D20")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0xDD8D68", Offset = "0xDD8D68", VA = "0xDD8D68")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0xDD94A8", Offset = "0xDD94A8", VA = "0xDD94A8")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0xDD9694", Offset = "0xDD9694", VA = "0xDD9694")]
		private void UpdateInteractableDeepestCollisionMap(List<InteractableCollisionInfo> allCollisions, Dictionary<Interactable, InteractableCollisionInfo> interactableToCollisionInfo)
		{
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0xDD98E0", Offset = "0xDD98E0", VA = "0xDD98E0")]
		private void UpdateUsingOldNewCollisionData(InteractableTool interactableTool, Dictionary<Interactable, InteractableCollisionInfo> oldCollisionMap, Dictionary<Interactable, InteractableCollisionInfo> newCollisionMap)
		{
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0xDD9F64", Offset = "0xDD9F64", VA = "0xDD9F64")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	public class SkeletonVisualizer : MonoBehaviour
	{
		[Token(Token = "0x20002B6")]
		private class BoneBounds
		{
			[Token(Token = "0x4000B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject StartBone;

			[Token(Token = "0x4000B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject BoneVisual;

			[Token(Token = "0x4000B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject EndSphere;

			[Token(Token = "0x4000B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LineRenderer Line;

			[Token(Token = "0x600108D")]
			[Address(RVA = "0xDDF410", Offset = "0xDDF410", VA = "0xDDF410")]
			public BoneBounds(GameObject parent1, GameObject bone, GameObject parent2, LineRenderer line)
			{
			}
		}

		[Token(Token = "0x20002B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88870", Offset = "0xA88870")]
		private sealed class <BuildSkeletonVis>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkeletonVisualizer <>4__this;

			[Token(Token = "0x1700014B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001091")]
				[Address(RVA = "0xDDF718", Offset = "0xDDF718", VA = "0xDDF718", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001093")]
				[Address(RVA = "0xDDF780", Offset = "0xDDF780", VA = "0xDDF780", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600108E")]
			[Address(RVA = "0xDDF18C", Offset = "0xDDF18C", VA = "0xDDF18C")]
			[DebuggerHidden]
			public <BuildSkeletonVis>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x600108F")]
			[Address(RVA = "0xDDF4FC", Offset = "0xDDF4FC", VA = "0xDDF4FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001090")]
			[Address(RVA = "0xDDF500", Offset = "0xDDF500", VA = "0xDDF500", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001092")]
			[Address(RVA = "0xDDF720", Offset = "0xDDF720", VA = "0xDDF720", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int HAND_ALPHA_ID;

		[Token(Token = "0x40004A5")]
		private const float BONE_WIDTH = 0.01f;

		[Token(Token = "0x40004A6")]
		private const float BONE_HEIGHT = 0.001f;

		[Token(Token = "0x40004A7")]
		private const float LINE_RENDERER_WIDTH = 0.005f;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material _skeletonMaterial;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool EnableVisualization;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<BoneBounds> _boneConnectorsVisualizers;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Hand _hand;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _skeleton;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isInitialized;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HandMaterialModifier _handMaterialModifier;

		[Token(Token = "0x17000054")]
		public bool IsInitialized
		{
			[Token(Token = "0x6000461")]
			[Address(RVA = "0xDDE94C", Offset = "0xDDE94C", VA = "0xDDE94C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000462")]
			[Address(RVA = "0xDDE954", Offset = "0xDDE954", VA = "0xDDE954")]
			private set
			{
			}
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0xDDE960", Offset = "0xDDE960", VA = "0xDDE960")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0xDDEB80", Offset = "0xDDEB80", VA = "0xDDEB80")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0xDDEC84", Offset = "0xDDEC84", VA = "0xDDEC84")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0xDDEFB8", Offset = "0xDDEFB8", VA = "0xDDEFB8")]
		private int GetBoneParentIndex(Transform bone)
		{
			return default(int);
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0xDDEB04", Offset = "0xDDEB04", VA = "0xDDEB04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8FD38", Offset = "0xA8FD38")]
		private IEnumerator BuildSkeletonVis()
		{
			return null;
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0xDDF1B8", Offset = "0xDDF1B8", VA = "0xDDF1B8")]
		private void BuildBone(GameObject boneVis, GameObject parent)
		{
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0xDDF324", Offset = "0xDDF324", VA = "0xDDF324")]
		private LineRenderer CreateLineRenderer(GameObject addToGameObject, bool useWorldSpace)
		{
			return null;
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0xDDF490", Offset = "0xDDF490", VA = "0xDDF490")]
		public SkeletonVisualizer()
		{
		}
	}
	[Token(Token = "0x20000D6")]
	public class FingerTipPokeTool : MonoBehaviour, InteractableTool
	{
		[Token(Token = "0x20002B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88880", Offset = "0xA88880")]
		private sealed class <AttachTriggerLogic>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x4000B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private HandPhysics <handPhysics>5__2;

			[Token(Token = "0x1700014D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001097")]
				[Address(RVA = "0xDD395C", Offset = "0xDD395C", VA = "0xDD395C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001099")]
				[Address(RVA = "0xDD39C4", Offset = "0xDD39C4", VA = "0xDD39C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001094")]
			[Address(RVA = "0xDD33F0", Offset = "0xDD33F0", VA = "0xDD33F0")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6001095")]
			[Address(RVA = "0xDD341C", Offset = "0xDD341C", VA = "0xDD341C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001096")]
			[Address(RVA = "0xDD3420", Offset = "0xDD3420", VA = "0xDD3420", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001098")]
			[Address(RVA = "0xDD3964", Offset = "0xDD3964", VA = "0xDD3964", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004AF")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A294", Offset = "0xA8A294")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A2A4", Offset = "0xA8A2A4")]
		private Dictionary<Interactable, InteractableCollisionInfo> <CurrInteractableToCollisionInfos>k__BackingField;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A2B4", Offset = "0xA8A2B4")]
		private Dictionary<Interactable, InteractableCollisionInfo> <PrevInteractableToCollisionInfos>k__BackingField;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A2C4", Offset = "0xA8A2C4")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A2D4", Offset = "0xA8A2D4")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _currVelocityFrame;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _position;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<InteractableCollisionInfo> _intersectingObjects;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _lastScale;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _isInitialized;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CapsuleInfo _capsuleToTrack;

		[Token(Token = "0x17000055")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x600046C")]
			[Address(RVA = "0xEDDDA4", Offset = "0xEDDDA4", VA = "0xEDDDA4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FD9C", Offset = "0xA8FD9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600046D")]
			[Address(RVA = "0xEDDDAC", Offset = "0xEDDDAC", VA = "0xEDDDAC", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FDAC", Offset = "0xA8FDAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000056")]
		public Dictionary<Interactable, InteractableCollisionInfo> CurrInteractableToCollisionInfos
		{
			[Token(Token = "0x600046E")]
			[Address(RVA = "0xEDDDB8", Offset = "0xEDDDB8", VA = "0xEDDDB8", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FDBC", Offset = "0xA8FDBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600046F")]
			[Address(RVA = "0xEDDDC0", Offset = "0xEDDDC0", VA = "0xEDDDC0", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FDCC", Offset = "0xA8FDCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000057")]
		public Dictionary<Interactable, InteractableCollisionInfo> PrevInteractableToCollisionInfos
		{
			[Token(Token = "0x6000470")]
			[Address(RVA = "0xEDDDC8", Offset = "0xEDDDC8", VA = "0xEDDDC8", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FDDC", Offset = "0xA8FDDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000471")]
			[Address(RVA = "0xEDDDD0", Offset = "0xEDDDD0", VA = "0xEDDDD0", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FDEC", Offset = "0xA8FDEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000058")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000472")]
			[Address(RVA = "0xEDDDD8", Offset = "0xEDDDD8", VA = "0xEDDDD8", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FDFC", Offset = "0xA8FDFC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000473")]
			[Address(RVA = "0xEDDDE4", Offset = "0xEDDDE4", VA = "0xEDDDE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FE0C", Offset = "0xA8FE0C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000059")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000474")]
			[Address(RVA = "0xEDDDF0", Offset = "0xEDDDF0", VA = "0xEDDDF0", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FE1C", Offset = "0xA8FE1C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000475")]
			[Address(RVA = "0xEDDDFC", Offset = "0xEDDDFC", VA = "0xEDDDFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FE2C", Offset = "0xA8FE2C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005A")]
		public InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000476")]
			[Address(RVA = "0xEDDE08", Offset = "0xEDDE08", VA = "0xEDDE08", Slot = "11")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700005B")]
		public ToolInputState ToolInputState
		{
			[Token(Token = "0x6000477")]
			[Address(RVA = "0xEDDE10", Offset = "0xEDDE10", VA = "0xEDDE10", Slot = "12")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700005C")]
		public bool IsFarFieldTool
		{
			[Token(Token = "0x6000478")]
			[Address(RVA = "0xEDDE18", Offset = "0xEDDE18", VA = "0xEDDE18", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005D")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000479")]
			[Address(RVA = "0xEDDE20", Offset = "0xEDDE20", VA = "0xEDDE20", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005E")]
		public bool EnableState
		{
			[Token(Token = "0x600047A")]
			[Address(RVA = "0xEDDE28", Offset = "0xEDDE28", VA = "0xEDDE28", Slot = "20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600047B")]
			[Address(RVA = "0xEDDE54", Offset = "0xEDDE54", VA = "0xEDDE54", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0xEDDE90", Offset = "0xEDDE90", VA = "0xEDDE90", Slot = "18")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0xEDDFB8", Offset = "0xEDDFB8", VA = "0xEDDFB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8FE3C", Offset = "0xA8FE3C")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0xEDE034", Offset = "0xEDE034", VA = "0xEDE034")]
		private void Update()
		{
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0xEDE3A4", Offset = "0xEDE3A4", VA = "0xEDE3A4")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0xEDE61C", Offset = "0xEDE61C", VA = "0xEDE61C")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0xEDE75C", Offset = "0xEDE75C", VA = "0xEDE75C", Slot = "16")]
		public List<InteractableCollisionInfo> GetIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0xEDE9E0", Offset = "0xEDE9E0", VA = "0xEDE9E0", Slot = "17")]
		public void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0xEDE9E4", Offset = "0xEDE9E4", VA = "0xEDE9E4", Slot = "19")]
		public void DeFocus()
		{
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0xEDE9E8", Offset = "0xEDE9E8", VA = "0xEDE9E8")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A2F4", Offset = "0xA8A2F4")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A304", Offset = "0xA8A304")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A314", Offset = "0xA8A314")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700005F")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000485")]
			[Address(RVA = "0xDD39CC", Offset = "0xDD39CC", VA = "0xDD39CC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FEA0", Offset = "0xA8FEA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000486")]
			[Address(RVA = "0xDD39D4", Offset = "0xDD39D4", VA = "0xDD39D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FEB0", Offset = "0xA8FEB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000060")]
		public bool EnableState
		{
			[Token(Token = "0x6000487")]
			[Address(RVA = "0xDD39DC", Offset = "0xDD39DC", VA = "0xDD39DC", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000488")]
			[Address(RVA = "0xDD39F8", Offset = "0xDD39F8", VA = "0xDD39F8", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000061")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000489")]
			[Address(RVA = "0xDD3A18", Offset = "0xDD3A18", VA = "0xDD3A18", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FEC0", Offset = "0xA8FEC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600048A")]
			[Address(RVA = "0xDD3A20", Offset = "0xDD3A20", VA = "0xDD3A20", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FED0", Offset = "0xA8FED0")]
			set
			{
			}
		}

		[Token(Token = "0x17000062")]
		public float SphereRadius
		{
			[Token(Token = "0x600048B")]
			[Address(RVA = "0xDD3A2C", Offset = "0xDD3A2C", VA = "0xDD3A2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FEE0", Offset = "0xA8FEE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600048C")]
			[Address(RVA = "0xDD3A34", Offset = "0xDD3A34", VA = "0xDD3A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FEF0", Offset = "0xA8FEF0")]
			private set
			{
			}
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0xDD3A3C", Offset = "0xDD3A3C", VA = "0xDD3A3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0xDD3A84", Offset = "0xDD3A84", VA = "0xDD3A84", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0xDD3A88", Offset = "0xDD3A88", VA = "0xDD3A88")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x40004C5")]
		None = 0,
		[Token(Token = "0x40004C6")]
		Ray = 1,
		[Token(Token = "0x40004C7")]
		Poke = 4,
		[Token(Token = "0x40004C8")]
		Pinch = 8,
		[Token(Token = "0x40004C9")]
		All = -1
	}
	[Token(Token = "0x20000D9")]
	public enum ToolInputState
	{
		[Token(Token = "0x40004CB")]
		Inactive,
		[Token(Token = "0x40004CC")]
		PrimaryInputDown,
		[Token(Token = "0x40004CD")]
		PrimaryInputDownStay,
		[Token(Token = "0x40004CE")]
		PrimaryInputUp
	}
	[Token(Token = "0x20000DA")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000490")]
		[Address(RVA = "0xDD7D0C", Offset = "0xDD7D0C", VA = "0xDD7D0C")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public interface InteractableTool
	{
		[Token(Token = "0x17000063")]
		Transform ToolTransform
		{
			[Token(Token = "0x6000491")]
			get;
		}

		[Token(Token = "0x17000064")]
		bool IsRightHandedTool
		{
			[Token(Token = "0x6000492")]
			get;
			[Token(Token = "0x6000493")]
			set;
		}

		[Token(Token = "0x17000065")]
		Dictionary<Interactable, InteractableCollisionInfo> CurrInteractableToCollisionInfos
		{
			[Token(Token = "0x6000494")]
			get;
			[Token(Token = "0x6000495")]
			set;
		}

		[Token(Token = "0x17000066")]
		Dictionary<Interactable, InteractableCollisionInfo> PrevInteractableToCollisionInfos
		{
			[Token(Token = "0x6000496")]
			get;
			[Token(Token = "0x6000497")]
			set;
		}

		[Token(Token = "0x17000067")]
		InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000498")]
			get;
		}

		[Token(Token = "0x17000068")]
		ToolInputState ToolInputState
		{
			[Token(Token = "0x6000499")]
			get;
		}

		[Token(Token = "0x17000069")]
		bool IsFarFieldTool
		{
			[Token(Token = "0x600049A")]
			get;
		}

		[Token(Token = "0x1700006A")]
		Vector3 Velocity
		{
			[Token(Token = "0x600049B")]
			get;
		}

		[Token(Token = "0x1700006B")]
		Vector3 InteractionPosition
		{
			[Token(Token = "0x600049C")]
			get;
		}

		[Token(Token = "0x1700006C")]
		bool EnableState
		{
			[Token(Token = "0x60004A1")]
			get;
			[Token(Token = "0x60004A2")]
			set;
		}

		[Token(Token = "0x600049D")]
		List<InteractableCollisionInfo> GetIntersectingObjects();

		[Token(Token = "0x600049E")]
		void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x600049F")]
		void Initialize();

		[Token(Token = "0x60004A0")]
		void DeFocus();
	}
	[Token(Token = "0x20000DC")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700006D")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x60004A3")]
			get;
		}

		[Token(Token = "0x1700006E")]
		bool EnableState
		{
			[Token(Token = "0x60004A5")]
			get;
			[Token(Token = "0x60004A6")]
			set;
		}

		[Token(Token = "0x1700006F")]
		bool ToolActivateState
		{
			[Token(Token = "0x60004A7")]
			get;
			[Token(Token = "0x60004A8")]
			set;
		}

		[Token(Token = "0x60004A4")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20000DD")]
	public class PinchStateModule
	{
		[Token(Token = "0x20002B9")]
		private enum PinchState
		{
			[Token(Token = "0x4000B84")]
			None,
			[Token(Token = "0x4000B85")]
			PinchDown,
			[Token(Token = "0x4000B86")]
			PinchStay,
			[Token(Token = "0x4000B87")]
			PinchUp
		}

		[Token(Token = "0x40004D2")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000070")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60004A9")]
			[Address(RVA = "0xDDC094", Offset = "0xDDC094", VA = "0xDDC094")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000071")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60004AA")]
			[Address(RVA = "0xDDC120", Offset = "0xDDC120", VA = "0xDDC120")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000072")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60004AB")]
			[Address(RVA = "0xDDC1AC", Offset = "0xDDC1AC", VA = "0xDDC1AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0xDDC238", Offset = "0xDDC238", VA = "0xDDC238")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xDDC26C", Offset = "0xDDC26C", VA = "0xDDC26C")]
		public void UpdateState(Hand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20000DE")]
	public class RayTool : MonoBehaviour, InteractableTool
	{
		[Token(Token = "0x40004D5")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40004D6")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40004D7")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40004D8")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40004D9")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8A334", Offset = "0xA8A334")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A388", Offset = "0xA8A388")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A398", Offset = "0xA8A398")]
		private Dictionary<Interactable, InteractableCollisionInfo> <CurrInteractableToCollisionInfos>k__BackingField;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A3A8", Offset = "0xA8A3A8")]
		private Dictionary<Interactable, InteractableCollisionInfo> <PrevInteractableToCollisionInfos>k__BackingField;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A3B8", Offset = "0xA8A3B8")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A3C8", Offset = "0xA8A3C8")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<InteractableCollisionInfo> _intersectingObjects;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _initialized;

		[Token(Token = "0x17000073")]
		public Transform ToolTransform
		{
			[Token(Token = "0x60004AE")]
			[Address(RVA = "0xDDC538", Offset = "0xDDC538", VA = "0xDDC538", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60004AF")]
			[Address(RVA = "0xDDC540", Offset = "0xDDC540", VA = "0xDDC540", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FF00", Offset = "0xA8FF00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004B0")]
			[Address(RVA = "0xDDC548", Offset = "0xDDC548", VA = "0xDDC548", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FF10", Offset = "0xA8FF10")]
			set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public Dictionary<Interactable, InteractableCollisionInfo> CurrInteractableToCollisionInfos
		{
			[Token(Token = "0x60004B1")]
			[Address(RVA = "0xDDC554", Offset = "0xDDC554", VA = "0xDDC554", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FF20", Offset = "0xA8FF20")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004B2")]
			[Address(RVA = "0xDDC55C", Offset = "0xDDC55C", VA = "0xDDC55C", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FF30", Offset = "0xA8FF30")]
			set
			{
			}
		}

		[Token(Token = "0x17000076")]
		public Dictionary<Interactable, InteractableCollisionInfo> PrevInteractableToCollisionInfos
		{
			[Token(Token = "0x60004B3")]
			[Address(RVA = "0xDDC564", Offset = "0xDDC564", VA = "0xDDC564", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FF40", Offset = "0xA8FF40")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004B4")]
			[Address(RVA = "0xDDC56C", Offset = "0xDDC56C", VA = "0xDDC56C", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FF50", Offset = "0xA8FF50")]
			set
			{
			}
		}

		[Token(Token = "0x17000077")]
		public InteractableToolTags ToolTags
		{
			[Token(Token = "0x60004B5")]
			[Address(RVA = "0xDDC574", Offset = "0xDDC574", VA = "0xDDC574", Slot = "11")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000078")]
		public ToolInputState ToolInputState
		{
			[Token(Token = "0x60004B6")]
			[Address(RVA = "0xDDC57C", Offset = "0xDDC57C", VA = "0xDDC57C", Slot = "12")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000079")]
		public bool IsFarFieldTool
		{
			[Token(Token = "0x60004B7")]
			[Address(RVA = "0xDDC5E4", Offset = "0xDDC5E4", VA = "0xDDC5E4", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007A")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60004B8")]
			[Address(RVA = "0xDDC5EC", Offset = "0xDDC5EC", VA = "0xDDC5EC", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FF60", Offset = "0xA8FF60")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60004B9")]
			[Address(RVA = "0xDDC5F8", Offset = "0xDDC5F8", VA = "0xDDC5F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FF70", Offset = "0xA8FF70")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007B")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60004BA")]
			[Address(RVA = "0xDDC604", Offset = "0xDDC604", VA = "0xDDC604", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FF80", Offset = "0xA8FF80")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60004BB")]
			[Address(RVA = "0xDDC610", Offset = "0xDDC610", VA = "0xDDC610")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FF90", Offset = "0xA8FF90")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public bool EnableState
		{
			[Token(Token = "0x60004BC")]
			[Address(RVA = "0xDDC61C", Offset = "0xDDC61C", VA = "0xDDC61C", Slot = "20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004BD")]
			[Address(RVA = "0xDDC660", Offset = "0xDDC660", VA = "0xDDC660", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xDDC6D4", Offset = "0xDDC6D4", VA = "0xDDC6D4", Slot = "18")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0xDDC7C4", Offset = "0xDDC7C4", VA = "0xDDC7C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0xDDC860", Offset = "0xDDC860", VA = "0xDDC860")]
		private void Update()
		{
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xDDCB0C", Offset = "0xDDCB0C", VA = "0xDDCB0C")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xDDCC08", Offset = "0xDDCC08", VA = "0xDDCC08", Slot = "16")]
		public List<InteractableCollisionInfo> GetIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xDDCF90", Offset = "0xDDCF90", VA = "0xDDCF90")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xDDD134", Offset = "0xDDD134", VA = "0xDDD134")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xDDD25C", Offset = "0xDDD25C", VA = "0xDDD25C")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xDDD57C", Offset = "0xDDD57C", VA = "0xDDD57C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xDDD974", Offset = "0xDDD974", VA = "0xDDD974", Slot = "17")]
		public void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xDDDA60", Offset = "0xDDDA60", VA = "0xDDDA60", Slot = "19")]
		public void DeFocus()
		{
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xDDDA9C", Offset = "0xDDDA9C", VA = "0xDDDA9C")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20000DF")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40004EB")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40004EC")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A3F8", Offset = "0xA8A3F8")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x1700007D")]
		public bool EnableState
		{
			[Token(Token = "0x60004CA")]
			[Address(RVA = "0xDDC644", Offset = "0xDDC644", VA = "0xDDC644", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004CB")]
			[Address(RVA = "0xDDC67C", Offset = "0xDDC67C", VA = "0xDDC67C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60004CC")]
			[Address(RVA = "0xDDDBC8", Offset = "0xDDDBC8", VA = "0xDDDBC8", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004CD")]
			[Address(RVA = "0xDDCAD0", Offset = "0xDDCAD0", VA = "0xDDCAD0", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60004CF")]
			[Address(RVA = "0xDDDE14", Offset = "0xDDDE14", VA = "0xDDDE14", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FFA0", Offset = "0xA8FFA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004D0")]
			[Address(RVA = "0xDDDE1C", Offset = "0xDDDE1C", VA = "0xDDDE1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8FFB0", Offset = "0xA8FFB0")]
			set
			{
			}
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xDDDBD0", Offset = "0xDDDBD0", VA = "0xDDDBD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xDDD9B0", Offset = "0xDDD9B0", VA = "0xDDD9B0", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xDDDE24", Offset = "0xDDDE24", VA = "0xDDDE24")]
		private void Update()
		{
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0xDDE208", Offset = "0xDDE208", VA = "0xDDE208")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xDDE3F8", Offset = "0xDDE3F8", VA = "0xDDE3F8")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20000E0")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000080")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60004D5")]
			[Address(RVA = "0xEDDB28", Offset = "0xEDDB28", VA = "0xEDDB28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004D6")]
			[Address(RVA = "0xEDDB30", Offset = "0xEDDB30", VA = "0xEDDB30")]
			set
			{
			}
		}

		[Token(Token = "0x17000081")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60004D7")]
			[Address(RVA = "0xEDDBB8", Offset = "0xEDDBB8", VA = "0xEDDBB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004D8")]
			[Address(RVA = "0xEDDBC0", Offset = "0xEDDBC0", VA = "0xEDDBC0")]
			set
			{
			}
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xEDDC2C", Offset = "0xEDDC2C", VA = "0xEDDC2C")]
		private void Start()
		{
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xEDDD7C", Offset = "0xEDDD7C", VA = "0xEDDD7C")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xEDDD8C", Offset = "0xEDDD8C", VA = "0xEDDD8C")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xEDDD9C", Offset = "0xEDDD9C", VA = "0xEDDD9C")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20000E1")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xEDB9C4", Offset = "0xEDB9C4", VA = "0xEDB9C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0xEDB9C8", Offset = "0xEDB9C8", VA = "0xEDB9C8")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0xEDBA00", Offset = "0xEDBA00", VA = "0xEDBA00")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0xEDBA38", Offset = "0xEDBA38", VA = "0xEDBA38")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xEDBA70", Offset = "0xEDBA70", VA = "0xEDBA70")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xEDBAA8", Offset = "0xEDBAA8", VA = "0xEDBAA8")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xEDBAE0", Offset = "0xEDBAE0", VA = "0xEDBAE0")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xEDBB18", Offset = "0xEDBB18", VA = "0xEDBB18")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xEDBB90", Offset = "0xEDBB90", VA = "0xEDBB90")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xEDBC00", Offset = "0xEDBC00", VA = "0xEDBC00")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20000E2")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xEDBC08", Offset = "0xEDBC08", VA = "0xEDBC08")]
		private void Start()
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xEDBC0C", Offset = "0xEDBC0C", VA = "0xEDBC0C")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xEDBBC4", Offset = "0xEDBBC4", VA = "0xEDBBC4")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xEDBC4C", Offset = "0xEDBC4C", VA = "0xEDBC4C")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20000E3")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20002BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88890", Offset = "0xA88890")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x1700014F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600109D")]
				[Address(RVA = "0xDDBF38", Offset = "0xDDBF38", VA = "0xDDBF38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000150")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600109F")]
				[Address(RVA = "0xDDBFA0", Offset = "0xDDBFA0", VA = "0xDDBFA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600109A")]
			[Address(RVA = "0xDDBC5C", Offset = "0xDDBC5C", VA = "0xDDBC5C")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600109B")]
			[Address(RVA = "0xDDBD38", Offset = "0xDDBD38", VA = "0xDDBD38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600109C")]
			[Address(RVA = "0xDDBD3C", Offset = "0xDDBD3C", VA = "0xDDBD3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600109E")]
			[Address(RVA = "0xDDBF40", Offset = "0xDDBF40", VA = "0xDDBF40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004FC")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x40004FD")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0xDDB84C", Offset = "0xDDB84C", VA = "0xDDB84C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xDDB8F0", Offset = "0xDDB8F0", VA = "0xDDB8F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xDDBB98", Offset = "0xDDBB98", VA = "0xDDBB98")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0xDDBB1C", Offset = "0xDDBB1C", VA = "0xDDBB1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA8FFC0", Offset = "0xA8FFC0")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0xDDBC88", Offset = "0xDDBC88", VA = "0xDDBC88")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20000E4")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20002BB")]
		public enum SelectionState
		{
			[Token(Token = "0x4000B8F")]
			Off,
			[Token(Token = "0x4000B90")]
			Selected,
			[Token(Token = "0x4000B91")]
			Highlighted
		}

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000082")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60004F0")]
			[Address(RVA = "0xDDE464", Offset = "0xDDE464", VA = "0xDDE464")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60004F1")]
			[Address(RVA = "0xDDE46C", Offset = "0xDDE46C", VA = "0xDDE46C")]
			set
			{
			}
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0xDDE5F4", Offset = "0xDDE5F4", VA = "0xDDE5F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xDDE7F0", Offset = "0xDDE7F0", VA = "0xDDE7F0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xDDE4F4", Offset = "0xDDE4F4", VA = "0xDDE4F4")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xDDE8E0", Offset = "0xDDE8E0", VA = "0xDDE8E0")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20000E5")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20002BC")]
		public enum SegmentType
		{
			[Token(Token = "0x4000B93")]
			Straight,
			[Token(Token = "0x4000B94")]
			LeftTurn,
			[Token(Token = "0x4000B95")]
			RightTurn,
			[Token(Token = "0x4000B96")]
			Switch
		}

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000512")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000513")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A4D8", Offset = "0xA8A4D8")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000083")]
		public float StartDistance
		{
			[Token(Token = "0x60004F7")]
			[Address(RVA = "0xDDF788", Offset = "0xDDF788", VA = "0xDDF788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA90024", Offset = "0xA90024")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60004F8")]
			[Address(RVA = "0xDDF790", Offset = "0xDDF790", VA = "0xDDF790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA90034", Offset = "0xA90034")]
			set
			{
			}
		}

		[Token(Token = "0x17000084")]
		public float GridSize
		{
			[Token(Token = "0x60004F9")]
			[Address(RVA = "0xDDF798", Offset = "0xDDF798", VA = "0xDDF798")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60004FA")]
			[Address(RVA = "0xDDF7A0", Offset = "0xDDF7A0", VA = "0xDDF7A0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public int SubDivCount
		{
			[Token(Token = "0x60004FB")]
			[Address(RVA = "0xDDF7A8", Offset = "0xDDF7A8", VA = "0xDDF7A8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004FC")]
			[Address(RVA = "0xDDF7B0", Offset = "0xDDF7B0", VA = "0xDDF7B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public SegmentType Type
		{
			[Token(Token = "0x60004FD")]
			[Address(RVA = "0xDDF7B8", Offset = "0xDDF7B8", VA = "0xDDF7B8")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000087")]
		public Pose EndPose
		{
			[Token(Token = "0x60004FE")]
			[Address(RVA = "0xDDF7C0", Offset = "0xDDF7C0", VA = "0xDDF7C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		public float Radius
		{
			[Token(Token = "0x60004FF")]
			[Address(RVA = "0xDDFC54", Offset = "0xDDFC54", VA = "0xDDFC54")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000089")]
		public float SegmentLength
		{
			[Token(Token = "0x6000501")]
			[Address(RVA = "0xDDF828", Offset = "0xDDF828", VA = "0xDDF828")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0xDDFC64", Offset = "0xDDFC64", VA = "0xDDFC64")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0xDDFC7C", Offset = "0xDDFC7C", VA = "0xDDFC7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0xDDF868", Offset = "0xDDF868", VA = "0xDDF868")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0xDDFC80", Offset = "0xDDFC80", VA = "0xDDFC80")]
		private void Update()
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0xDDFC84", Offset = "0xDDFC84", VA = "0xDDFC84")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0xDDFCF0", Offset = "0xDDFCF0", VA = "0xDDFCF0")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0xDE0878", Offset = "0xDE0878", VA = "0xDE0878")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0xDE0BA4", Offset = "0xDE0BA4", VA = "0xDE0BA4")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20000E6")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20002BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA888A0", Offset = "0xA888A0")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4000B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000151")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010A3")]
				[Address(RVA = "0xDE18CC", Offset = "0xDE18CC", VA = "0xDE18CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000152")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010A5")]
				[Address(RVA = "0xDE1934", Offset = "0xDE1934", VA = "0xDE1934", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010A0")]
			[Address(RVA = "0xDE1634", Offset = "0xDE1634", VA = "0xDE1634")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60010A1")]
			[Address(RVA = "0xDE1710", Offset = "0xDE1710", VA = "0xDE1710", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010A2")]
			[Address(RVA = "0xDE1714", Offset = "0xDE1714", VA = "0xDE1714", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010A4")]
			[Address(RVA = "0xDE18D4", Offset = "0xDE18D4", VA = "0xDE18D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000519")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x400051A")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000509")]
		[Address(RVA = "0xDE0C6C", Offset = "0xDE0C6C", VA = "0xDE0C6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0xDE0D2C", Offset = "0xDE0D2C", VA = "0xDE0D2C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0xDE0DE0", Offset = "0xDE0DE0", VA = "0xDE0DE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0xDE0F0C", Offset = "0xDE0F0C", VA = "0xDE0F0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0xDE107C", Offset = "0xDE107C", VA = "0xDE107C")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0xDE12D4", Offset = "0xDE12D4", VA = "0xDE12D4")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0xDE1560", Offset = "0xDE1560", VA = "0xDE1560")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0xDE13E8", Offset = "0xDE13E8", VA = "0xDE13E8")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0xDE13FC", Offset = "0xDE13FC", VA = "0xDE13FC")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0xDE15B8", Offset = "0xDE15B8", VA = "0xDE15B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA90044", Offset = "0xA90044")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0xDE1660", Offset = "0xDE1660", VA = "0xDE1660")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700008A")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6000514")]
			[Address(RVA = "0xDE193C", Offset = "0xDE193C", VA = "0xDE193C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0xDE194C", Offset = "0xDE194C", VA = "0xDE194C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0xDE1954", Offset = "0xDE1954", VA = "0xDE1954", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0xDE1DC0", Offset = "0xDE1DC0", VA = "0xDE1DC0")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x400052D")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x400052E")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A5D8", Offset = "0xA8A5D8")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700008B")]
		public float Distance
		{
			[Token(Token = "0x6000518")]
			[Address(RVA = "0xDE1ED0", Offset = "0xDE1ED0", VA = "0xDE1ED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA900A8", Offset = "0xA900A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000519")]
			[Address(RVA = "0xDE1ED8", Offset = "0xDE1ED8", VA = "0xDE1ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA900B8", Offset = "0xA900B8")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700008C")]
		public float Scale
		{
			[Token(Token = "0x600051A")]
			[Address(RVA = "0xDE1EE0", Offset = "0xDE1EE0", VA = "0xDE1EE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600051B")]
			[Address(RVA = "0xDE1EE8", Offset = "0xDE1EE8", VA = "0xDE1EE8")]
			set
			{
			}
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0xDE1950", Offset = "0xDE1950", VA = "0xDE1950", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0xDE1EF0", Offset = "0xDE1EF0", VA = "0xDE1EF0")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0xDE199C", Offset = "0xDE199C", VA = "0xDE199C")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0xDE1C74", Offset = "0xDE1C74", VA = "0xDE1C74")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000520")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000521")]
		[Address(RVA = "0xDE1E30", Offset = "0xDE1E30", VA = "0xDE1E30")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20002BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA888B0", Offset = "0xA888B0")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4000B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4000BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4000BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4000BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4000BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4000BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4000BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4000BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4000BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000153")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010A9")]
				[Address(RVA = "0xDE2988", Offset = "0xDE2988", VA = "0xDE2988", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000154")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010AB")]
				[Address(RVA = "0xDE29F0", Offset = "0xDE29F0", VA = "0xDE29F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010A6")]
			[Address(RVA = "0xDE258C", Offset = "0xDE258C", VA = "0xDE258C")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60010A7")]
			[Address(RVA = "0xDE2724", Offset = "0xDE2724", VA = "0xDE2724", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010A8")]
			[Address(RVA = "0xDE2728", Offset = "0xDE2728", VA = "0xDE2728", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010AA")]
			[Address(RVA = "0xDE2990", Offset = "0xDE2990", VA = "0xDE2990", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000523")]
		[Address(RVA = "0xDE20C0", Offset = "0xDE20C0", VA = "0xDE20C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0xDE2120", Offset = "0xDE2120", VA = "0xDE2120")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0xDE222C", Offset = "0xDE222C", VA = "0xDE222C")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0xDE239C", Offset = "0xDE239C", VA = "0xDE239C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0xDE228C", Offset = "0xDE228C", VA = "0xDE228C")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0xDE2500", Offset = "0xDE2500", VA = "0xDE2500")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA900C8", Offset = "0xA900C8")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0xDE25B8", Offset = "0xDE25B8", VA = "0xDE25B8")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0xDE2664", Offset = "0xDE2664", VA = "0xDE2664")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0xDE26C4", Offset = "0xDE26C4", VA = "0xDE26C4")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20000EA")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20002BF")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4000BA9")]
			Start,
			[Token(Token = "0x4000BAA")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4000BAB")]
			Stop
		}

		[Token(Token = "0x20002C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA888C0", Offset = "0xA888C0")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4000BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4000BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4000BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4000BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4000BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000155")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010AF")]
				[Address(RVA = "0xDE36A8", Offset = "0xDE36A8", VA = "0xDE36A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000156")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010B1")]
				[Address(RVA = "0xDE3710", Offset = "0xDE3710", VA = "0xDE3710", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010AC")]
			[Address(RVA = "0xDE2D28", Offset = "0xDE2D28", VA = "0xDE2D28")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60010AD")]
			[Address(RVA = "0xDE346C", Offset = "0xDE346C", VA = "0xDE346C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010AE")]
			[Address(RVA = "0xDE3470", Offset = "0xDE3470", VA = "0xDE3470", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010B0")]
			[Address(RVA = "0xDE36B0", Offset = "0xDE36B0", VA = "0xDE36B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000541")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000542")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000543")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000544")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8A638", Offset = "0xA8A638")]
		protected float _initialSpeed;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x600052C")]
		[Address(RVA = "0xDE29F8", Offset = "0xDE29F8", VA = "0xDE29F8")]
		private void Start()
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0xDE2B68", Offset = "0xDE2B68", VA = "0xDE2B68")]
		private void Update()
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0xDE2B74", Offset = "0xDE2B74", VA = "0xDE2B74", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0xDE2CC8", Offset = "0xDE2CC8", VA = "0xDE2CC8")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0xDE2AD8", Offset = "0xDE2AD8", VA = "0xDE2AD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA9012C", Offset = "0xA9012C")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0xDE2D54", Offset = "0xDE2D54", VA = "0xDE2D54")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0xDE2C64", Offset = "0xDE2C64", VA = "0xDE2C64")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0xDE2FA0", Offset = "0xDE2FA0", VA = "0xDE2FA0")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0xDE3164", Offset = "0xDE3164", VA = "0xDE3164")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0xDE305C", Offset = "0xDE305C", VA = "0xDE305C")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0xDE3220", Offset = "0xDE3220", VA = "0xDE3220")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0xDE32A8", Offset = "0xDE32A8", VA = "0xDE32A8")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0xDE3334", Offset = "0xDE3334", VA = "0xDE3334")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0xDE33F0", Offset = "0xDE33F0", VA = "0xDE33F0")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0xDE3400", Offset = "0xDE3400", VA = "0xDE3400")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20000EB")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700008D")]
		public float TrackLength
		{
			[Token(Token = "0x600053B")]
			[Address(RVA = "0xDE3718", Offset = "0xDE3718", VA = "0xDE3718")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600053C")]
			[Address(RVA = "0xDE3720", Offset = "0xDE3720", VA = "0xDE3720")]
			private set
			{
			}
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0xDE3728", Offset = "0xDE3728", VA = "0xDE3728")]
		private void Awake()
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0xDE1F70", Offset = "0xDE1F70", VA = "0xDE1F70")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0xDE372C", Offset = "0xDE372C", VA = "0xDE372C")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0xDE3938", Offset = "0xDE3938", VA = "0xDE3938")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0xDE3A54", Offset = "0xDE3A54", VA = "0xDE3A54")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20000EC")]
	public class Pose
	{
		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000542")]
		[Address(RVA = "0xDDC41C", Offset = "0xDDC41C", VA = "0xDDC41C")]
		public Pose()
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0xDDC4C8", Offset = "0xDDC4C8", VA = "0xDDC4C8")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20000ED")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20002C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA888D0", Offset = "0xA888D0")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4000BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4000BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000157")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010B5")]
				[Address(RVA = "0xDE40A0", Offset = "0xDE40A0", VA = "0xDE40A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000158")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010B7")]
				[Address(RVA = "0xDE4108", Offset = "0xDE4108", VA = "0xDE4108", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010B2")]
			[Address(RVA = "0xDE3D14", Offset = "0xDE3D14", VA = "0xDE3D14")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60010B3")]
			[Address(RVA = "0xDE3E9C", Offset = "0xDE3E9C", VA = "0xDE3E9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010B4")]
			[Address(RVA = "0xDE3EA0", Offset = "0xDE3EA0", VA = "0xDE3EA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010B6")]
			[Address(RVA = "0xDE40A8", Offset = "0xDE40A8", VA = "0xDE40A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA888E0", Offset = "0xA888E0")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4000BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4000BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000159")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010BB")]
				[Address(RVA = "0xDE41E8", Offset = "0xDE41E8", VA = "0xDE41E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010BD")]
				[Address(RVA = "0xDE4250", Offset = "0xDE4250", VA = "0xDE4250", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010B8")]
			[Address(RVA = "0xDE3DFC", Offset = "0xDE3DFC", VA = "0xDE3DFC")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60010B9")]
			[Address(RVA = "0xDE4110", Offset = "0xDE4110", VA = "0xDE4110", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010BA")]
			[Address(RVA = "0xDE4114", Offset = "0xDE4114", VA = "0xDE4114", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010BC")]
			[Address(RVA = "0xDE41F0", Offset = "0xDE41F0", VA = "0xDE41F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000567")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8A820", Offset = "0xA8A820")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x1700008E")]
		public bool IsMoving
		{
			[Token(Token = "0x6000544")]
			[Address(RVA = "0xDE3A70", Offset = "0xDE3A70", VA = "0xDE3A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA90190", Offset = "0xA90190")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000545")]
			[Address(RVA = "0xDE3A78", Offset = "0xDE3A78", VA = "0xDE3A78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA901A0", Offset = "0xA901A0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0xDE3A84", Offset = "0xDE3A84", VA = "0xDE3A84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0xDE3AC0", Offset = "0xDE3AC0", VA = "0xDE3AC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0xDE3C14", Offset = "0xDE3C14", VA = "0xDE3C14")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0xDE3C88", Offset = "0xDE3C88", VA = "0xDE3C88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA901B0", Offset = "0xA901B0")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0xDE3D40", Offset = "0xDE3D40", VA = "0xDE3D40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA90214", Offset = "0xA90214")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0xDE3E28", Offset = "0xDE3E28", VA = "0xDE3E28")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0xDE3E94", Offset = "0xDE3E94", VA = "0xDE3E94")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600054D")]
		[Address(RVA = "0xDE4258", Offset = "0xDE4258", VA = "0xDE4258")]
		private void Awake()
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0xDE42D0", Offset = "0xDE42D0", VA = "0xDE42D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0xDE4388", Offset = "0xDE4388", VA = "0xDE4388")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xDE4488", Offset = "0xDE4488", VA = "0xDE4488")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0xDE4508", Offset = "0xDE4508", VA = "0xDE4508")]
		private void Update()
		{
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0xDE466C", Offset = "0xDE466C", VA = "0xDE466C")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000578")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000579")]
		EUDT_OverlayQuad,
		[Token(Token = "0x400057A")]
		EUDT_None,
		[Token(Token = "0x400057B")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20000F0")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20002C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA888F0", Offset = "0xA888F0")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x1700015B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010C1")]
				[Address(RVA = "0xDDB7DC", Offset = "0xDDB7DC", VA = "0xDDB7DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010C3")]
				[Address(RVA = "0xDDB844", Offset = "0xDDB844", VA = "0xDDB844", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010BE")]
			[Address(RVA = "0xDDAE30", Offset = "0xDDAE30", VA = "0xDDAE30")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60010BF")]
			[Address(RVA = "0xDDB574", Offset = "0xDDB574", VA = "0xDDB574", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010C0")]
			[Address(RVA = "0xDDB578", Offset = "0xDDB578", VA = "0xDDB578", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010C2")]
			[Address(RVA = "0xDDB7E4", Offset = "0xDDB7E4", VA = "0xDDB7E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x400057D")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x400057E")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x400057F")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA8A860", Offset = "0xA8A860")]
		public GameObject mainCamera;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA8A898", Offset = "0xA8A898")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000553")]
		[Address(RVA = "0xDDA0D0", Offset = "0xDDA0D0", VA = "0xDDA0D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0xDDA934", Offset = "0xDDA934", VA = "0xDDA934")]
		private void Update()
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0xDDAA74", Offset = "0xDDAA74", VA = "0xDDAA74")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0xDDABA8", Offset = "0xDDABA8", VA = "0xDDABA8")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0xDDACDC", Offset = "0xDDACDC", VA = "0xDDACDC")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0xDDAA48", Offset = "0xDDAA48", VA = "0xDDAA48")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0xDDADB4", Offset = "0xDDADB4", VA = "0xDDADB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA90278", Offset = "0xA90278")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0xDDAE5C", Offset = "0xDDAE5C", VA = "0xDDAE5C")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xDDA454", Offset = "0xDDA454", VA = "0xDDA454")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0xDDAF84", Offset = "0xDDAF84", VA = "0xDDAF84")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0xDDAE90", Offset = "0xDDAE90", VA = "0xDDAE90")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0xDDB320", Offset = "0xDDB320", VA = "0xDDB320")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0xDDB3FC", Offset = "0xDDB3FC", VA = "0xDDB3FC")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0xDDB484", Offset = "0xDDB484", VA = "0xDDB484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA902DC", Offset = "0xA902DC")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0xDDB4D4", Offset = "0xDDB4D4", VA = "0xDDB4D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA902EC", Offset = "0xA902EC")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0xDDB524", Offset = "0xDDB524", VA = "0xDDB524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA902FC", Offset = "0xA902FC")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20000F1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA882E4", Offset = "0xA882E4")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88900", Offset = "0xA88900")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x116B480", Offset = "0x116B480", VA = "0x116B480")]
			public <>c()
			{
			}

			[Token(Token = "0x60010C6")]
			[Address(RVA = "0x116B488", Offset = "0x116B488", VA = "0x116B488")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000594")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000595")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000596")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000597")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000598")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000599")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x400059A")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x400059B")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x400059C")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x400059D")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x400059E")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x116A764", Offset = "0x116A764", VA = "0x116A764")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x116A7C4", Offset = "0x116A7C4", VA = "0x116A7C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x116ABEC", Offset = "0x116ABEC", VA = "0x116ABEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x116ACF8", Offset = "0x116ACF8", VA = "0x116ACF8")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x116B030", Offset = "0x116B030", VA = "0x116B030")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0x116B198", Offset = "0x116B198", VA = "0x116B198")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x116B2E4", Offset = "0x116B2E4", VA = "0x116B2E4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x116AD94", Offset = "0x116AD94", VA = "0x116AD94")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x116AE34", Offset = "0x116AE34", VA = "0x116AE34")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x116AA40", Offset = "0x116AA40", VA = "0x116AA40")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x116B400", Offset = "0x116B400", VA = "0x116B400")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20000F2")]
	public enum HandPoseId
	{
		[Token(Token = "0x40005B1")]
		Default,
		[Token(Token = "0x40005B2")]
		Generic,
		[Token(Token = "0x40005B3")]
		PingPongBall,
		[Token(Token = "0x40005B4")]
		Controller
	}
	[Token(Token = "0x20000F3")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700008F")]
		public bool AllowPointing
		{
			[Token(Token = "0x600056E")]
			[Address(RVA = "0x116B4B4", Offset = "0x116B4B4", VA = "0x116B4B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000090")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x600056F")]
			[Address(RVA = "0x116B4BC", Offset = "0x116B4BC", VA = "0x116B4BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000091")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000570")]
			[Address(RVA = "0x116B4C4", Offset = "0x116B4C4", VA = "0x116B4C4")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x116B4CC", Offset = "0x116B4CC", VA = "0x116B4CC")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x116B4D4", Offset = "0x116B4D4", VA = "0x116B4D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x116B748", Offset = "0x116B748", VA = "0x116B748")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x116B7A4", Offset = "0x116B7A4", VA = "0x116B7A4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0x116B7E8", Offset = "0x116B7E8", VA = "0x116B7E8")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20000F5")]
	public enum FaceType : uint
	{
		[Token(Token = "0x40005BC")]
		TRIANGLES,
		[Token(Token = "0x40005BD")]
		QUADS
	}
	[Token(Token = "0x20000F6")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x40005BF")]
		ABSORPTION,
		[Token(Token = "0x40005C0")]
		TRANSMISSION,
		[Token(Token = "0x40005C1")]
		SCATTERING
	}
	[Token(Token = "0x20000F7")]
	public struct MeshGroup
	{
		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x20000F8")]
	public class AbuseReportOptions
	{
		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x1ABF128", Offset = "0x1ABF128", VA = "0x1ABF128")]
		public AbuseReportOptions()
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x1ABF210", Offset = "0x1ABF210", VA = "0x1ABF210")]
		public void SetPreventPeopleChooser(bool value)
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x1ABF318", Offset = "0x1ABF318", VA = "0x1ABF318")]
		public void SetReportType(AbuseReportType value)
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x1ABF420", Offset = "0x1ABF420", VA = "0x1ABF420")]
		public static explicit operator IntPtr(AbuseReportOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x1ABF470", Offset = "0x1ABF470", VA = "0x1ABF470", Slot = "1")]
		~AbuseReportOptions()
		{
		}
	}
	[Token(Token = "0x20000F9")]
	public enum AbuseReportType
	{
		[Token(Token = "0x40005C8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8A950", Offset = "0xA8A950")]
		Unknown,
		[Token(Token = "0x40005C9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8A988", Offset = "0xA8A988")]
		Object,
		[Token(Token = "0x40005CA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8A9C0", Offset = "0xA8A9C0")]
		User
	}
	[Token(Token = "0x20000FA")]
	public enum AchievementType
	{
		[Token(Token = "0x40005CC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8A9F8", Offset = "0xA8A9F8")]
		Unknown,
		[Token(Token = "0x40005CD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AA30", Offset = "0xA8AA30")]
		Simple,
		[Token(Token = "0x40005CE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AA68", Offset = "0xA8AA68")]
		Bitfield,
		[Token(Token = "0x40005CF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AAA0", Offset = "0xA8AAA0")]
		Count
	}
	[Token(Token = "0x20000FB")]
	public class AndroidPlatform
	{
		[Token(Token = "0x600057B")]
		[Address(RVA = "0x1AC06C0", Offset = "0x1AC06C0", VA = "0x1AC06C0")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x1AC080C", Offset = "0x1AC080C", VA = "0x1AC080C")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x1AC098C", Offset = "0x1AC098C", VA = "0x1AC098C")]
		public AndroidPlatform()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	public class ApplicationOptions
	{
		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x1AC0EB4", Offset = "0x1AC0EB4", VA = "0x1AC0EB4")]
		public ApplicationOptions()
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0x1AC0F9C", Offset = "0x1AC0F9C", VA = "0x1AC0F9C")]
		public void SetDeeplinkMessage(string value)
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x1AC0C5C", Offset = "0x1AC0C5C", VA = "0x1AC0C5C")]
		public static explicit operator IntPtr(ApplicationOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x1AC10C0", Offset = "0x1AC10C0", VA = "0x1AC10C0", Slot = "1")]
		~ApplicationOptions()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public class CAPI
	{
		[Token(Token = "0x20002C5")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x4000BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4000BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x4000BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stringValue_;

			[Token(Token = "0x4000BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int intValue_;

			[Token(Token = "0x4000BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double doubleValue_;

			[Token(Token = "0x60010C7")]
			[Address(RVA = "0xF71B60", Offset = "0xF71B60", VA = "0xF71B60")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x60010C8")]
			[Address(RVA = "0xF71BA4", Offset = "0xF71BA4", VA = "0xF71BA4")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x60010C9")]
			[Address(RVA = "0xF71BEC", Offset = "0xF71BEC", VA = "0xF71BEC")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x20002C6")]
		public struct ovrNetSyncVec3
		{
			[Token(Token = "0x4000BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4000BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4000BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float z;
		}

		[Token(Token = "0x20002C7")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x4000BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4000BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x4000BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr parameterArray;

			[Token(Token = "0x4000BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint parameterArrayCount;

			[Token(Token = "0x60010CA")]
			[Address(RVA = "0xF71C3C", Offset = "0xF71C3C", VA = "0xF71C3C")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x20002C8")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x4000BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x4000BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint dataArrayCount;

			[Token(Token = "0x4000BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr criterionArray;

			[Token(Token = "0x4000BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x20002C9")]
		public struct OculusInitParams
		{
			[Token(Token = "0x4000BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int sType;

			[Token(Token = "0x4000BD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string email;

			[Token(Token = "0x4000BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string password;

			[Token(Token = "0x4000BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong appId;

			[Token(Token = "0x4000BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uriPrefixOverride;
		}

		[Token(Token = "0x20002CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA88910", Offset = "0xA88910")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x40005D1")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x40005D3")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x1AC27A8", Offset = "0x1AC27A8", VA = "0x1AC27A8")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x1AC2968", Offset = "0x1AC2968", VA = "0x1AC2968")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x1AC2E58", Offset = "0x1AC2E58", VA = "0x1AC2E58")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x1AC2F14", Offset = "0x1AC2F14", VA = "0x1AC2F14")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x1AC321C", Offset = "0x1AC321C", VA = "0x1AC321C")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x1AC3334", Offset = "0x1AC3334", VA = "0x1AC3334")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x1AC33C0", Offset = "0x1AC33C0", VA = "0x1AC33C0")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x1AC3430", Offset = "0x1AC3430", VA = "0x1AC3430")]
		public static ulong DateTimeToNative(DateTime dt)
		{
			return default(ulong);
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x1AC352C", Offset = "0x1AC352C", VA = "0x1AC352C")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x1AC3610", Offset = "0x1AC3610", VA = "0x1AC3610")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x1AC36B4", Offset = "0x1AC36B4", VA = "0x1AC36B4")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x600058D")]
		[Address(RVA = "0x1AC0770", Offset = "0x1AC0770", VA = "0x1AC0770")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x600058E")]
		[Address(RVA = "0x1AC3824", Offset = "0x1AC3824", VA = "0x1AC3824")]
		public static extern void ovr_UnityInitGlobals(IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x600058F")]
		[Address(RVA = "0x1AC08F4", Offset = "0x1AC08F4", VA = "0x1AC08F4")]
		public static extern ulong ovr_UnityInitWrapperAsynchronous(string appId);

		[PreserveSig]
		[Token(Token = "0x6000590")]
		[Address(RVA = "0x1AC38A4", Offset = "0x1AC38A4", VA = "0x1AC38A4")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000591")]
		[Address(RVA = "0x1AC3950", Offset = "0x1AC3950", VA = "0x1AC3950")]
		public static extern ulong ovr_Platform_InitializeStandaloneOculus(ref OculusInitParams init);

		[PreserveSig]
		[Token(Token = "0x6000592")]
		[Address(RVA = "0x1AC3A34", Offset = "0x1AC3A34", VA = "0x1AC3A34")]
		public static extern ulong ovr_PlatformInitializeWithAccessToken(ulong appId, string accessToken);

		[PreserveSig]
		[Token(Token = "0x6000593")]
		[Address(RVA = "0x1AC3AE0", Offset = "0x1AC3AE0", VA = "0x1AC3AE0")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000594")]
		[Address(RVA = "0x1AC3B8C", Offset = "0x1AC3B8C", VA = "0x1AC3B8C")]
		public static extern ulong ovr_UnityInitWrapperWindowsAsynchronous(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000595")]
		[Address(RVA = "0x1AC3C34", Offset = "0x1AC3C34", VA = "0x1AC3C34")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x1AC3CD0", Offset = "0x1AC3CD0", VA = "0x1AC3CD0")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000597")]
		[Address(RVA = "0x1AC3D30", Offset = "0x1AC3D30", VA = "0x1AC3D30")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x6000598")]
		[Address(RVA = "0x1AC3DA4", Offset = "0x1AC3DA4", VA = "0x1AC3DA4")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x6000599")]
		[Address(RVA = "0x1AC3E18", Offset = "0x1AC3E18", VA = "0x1AC3E18")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x600059A")]
		[Address(RVA = "0x1AC3E98", Offset = "0x1AC3E98", VA = "0x1AC3E98")]
		public static extern uint ovr_NetworkingPeer_GetSendPolicy(IntPtr networkingPeer);

		[PreserveSig]
		[Token(Token = "0x600059B")]
		[Address(RVA = "0x1AC3F18", Offset = "0x1AC3F18", VA = "0x1AC3F18")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x600059C")]
		[Address(RVA = "0x1AC3F8C", Offset = "0x1AC3F8C", VA = "0x1AC3F8C")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x600059D")]
		[Address(RVA = "0x1AC400C", Offset = "0x1AC400C", VA = "0x1AC400C")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x600059E")]
		[Address(RVA = "0x1AC4080", Offset = "0x1AC4080", VA = "0x1AC4080")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x600059F")]
		[Address(RVA = "0x1AC4100", Offset = "0x1AC4100", VA = "0x1AC4100")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x1AC41A0", Offset = "0x1AC41A0", VA = "0x1AC41A0")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x1AC4214", Offset = "0x1AC4214", VA = "0x1AC4214")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x1AC4294", Offset = "0x1AC4294", VA = "0x1AC4294")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x1AC4314", Offset = "0x1AC4314", VA = "0x1AC4314")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x1AC4394", Offset = "0x1AC4394", VA = "0x1AC4394")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x1AC04A0", Offset = "0x1AC04A0", VA = "0x1AC04A0")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x1AC4404", Offset = "0x1AC4404", VA = "0x1AC4404")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x1AC4474", Offset = "0x1AC4474", VA = "0x1AC4474")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x1AC44F8", Offset = "0x1AC44F8", VA = "0x1AC44F8")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x1AC458C", Offset = "0x1AC458C", VA = "0x1AC458C")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x1AC4890", Offset = "0x1AC4890", VA = "0x1AC4890")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x1AC0DC8", Offset = "0x1AC0DC8", VA = "0x1AC0DC8")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x1AC4930", Offset = "0x1AC4930", VA = "0x1AC4930")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x1AC4A24", Offset = "0x1AC4A24", VA = "0x1AC4A24")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x1AC4B80", Offset = "0x1AC4B80", VA = "0x1AC4B80")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x1AC4C28", Offset = "0x1AC4C28", VA = "0x1AC4C28")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x1AC4CA4", Offset = "0x1AC4CA4", VA = "0x1AC4CA4")]
		public static string ovr_Message_GetStringForJavascript(IntPtr message)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x1AC4D0C", Offset = "0x1AC4D0C", VA = "0x1AC4D0C")]
		private static extern IntPtr ovr_Message_GetStringForJavascript_Native(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x1AC4D8C", Offset = "0x1AC4D8C", VA = "0x1AC4D8C")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicFloatPCM(long connection_id, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x1AC4E2C", Offset = "0x1AC4E2C", VA = "0x1AC4E2C")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInt16PCM(long connection_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x1AC4ECC", Offset = "0x1AC4ECC", VA = "0x1AC4ECC")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInterleavedFloatPCM(long connection_id, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x1AC4F6C", Offset = "0x1AC4F6C", VA = "0x1AC4F6C")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInterleavedInt16PCM(long connection_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x1AC500C", Offset = "0x1AC500C", VA = "0x1AC500C")]
		public static extern bool ovr_NetSync_GetListenerPosition(long connection_id, ulong sessionId, ref ovrNetSyncVec3 position);

		[PreserveSig]
		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x1AC50AC", Offset = "0x1AC50AC", VA = "0x1AC50AC")]
		public static extern UIntPtr ovr_NetSync_GetMonostreamFloatPCM(long connection_id, ulong sessionId, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x1AC515C", Offset = "0x1AC515C", VA = "0x1AC515C")]
		public static extern UIntPtr ovr_NetSync_GetMonostreamInt16PCM(long connection_id, ulong session_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x1AC520C", Offset = "0x1AC520C", VA = "0x1AC520C")]
		public static extern UIntPtr ovr_NetSync_GetPcmBufferMaxSamples();

		[PreserveSig]
		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x1AC5280", Offset = "0x1AC5280", VA = "0x1AC5280")]
		public static extern void ovr_NetSync_SetListenerPosition(long connection_id, ovrNetSyncVec3 position);

		[PreserveSig]
		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x1AC5328", Offset = "0x1AC5328", VA = "0x1AC5328")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x1AC53A8", Offset = "0x1AC53A8", VA = "0x1AC53A8")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x1AC5424", Offset = "0x1AC5424", VA = "0x1AC5424")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x1AC54A4", Offset = "0x1AC54A4", VA = "0x1AC54A4")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x1AC5514", Offset = "0x1AC5514", VA = "0x1AC5514")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x1AC5594", Offset = "0x1AC5594", VA = "0x1AC5594")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x1AC561C", Offset = "0x1AC561C", VA = "0x1AC561C")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x1AC569C", Offset = "0x1AC569C", VA = "0x1AC569C")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x1AC5710", Offset = "0x1AC5710", VA = "0x1AC5710")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x1AC57C8", Offset = "0x1AC57C8", VA = "0x1AC57C8")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x1AC5870", Offset = "0x1AC5870", VA = "0x1AC5870")]
		public static extern int ovr_Party_PluginGetSharedMemHandle();

		[PreserveSig]
		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x1AC58E4", Offset = "0x1AC58E4", VA = "0x1AC58E4")]
		public static extern VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x1AC5958", Offset = "0x1AC5958", VA = "0x1AC5958")]
		public static extern bool ovr_Party_PluginGetVoipPassthrough();

		[PreserveSig]
		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x1AC59D4", Offset = "0x1AC59D4", VA = "0x1AC59D4")]
		public static extern SystemVoipStatus ovr_Party_PluginGetVoipStatus();

		[PreserveSig]
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x1AC5A48", Offset = "0x1AC5A48", VA = "0x1AC5A48")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x1AC5AC8", Offset = "0x1AC5AC8", VA = "0x1AC5AC8")]
		public static extern VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x1AC5B48", Offset = "0x1AC5B48", VA = "0x1AC5B48")]
		public static extern VoipBitrate ovr_Voip_GetLocalBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x1AC5BC8", Offset = "0x1AC5BC8", VA = "0x1AC5BC8")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x1AC5C3C", Offset = "0x1AC5C3C", VA = "0x1AC5C3C")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x1AC5CDC", Offset = "0x1AC5CDC", VA = "0x1AC5CDC")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x1AC5D7C", Offset = "0x1AC5D7C", VA = "0x1AC5D7C")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x1AC5DFC", Offset = "0x1AC5DFC", VA = "0x1AC5DFC")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestamp(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x1AC5EB4", Offset = "0x1AC5EB4", VA = "0x1AC5EB4")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestampFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x1AC5F6C", Offset = "0x1AC5F6C", VA = "0x1AC5F6C")]
		public static extern VoipBitrate ovr_Voip_GetRemoteBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x1AC5FEC", Offset = "0x1AC5FEC", VA = "0x1AC5FEC")]
		public static extern uint ovr_Voip_GetSyncTimestamp(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x1AC606C", Offset = "0x1AC606C", VA = "0x1AC606C")]
		public static extern long ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);

		[PreserveSig]
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x1AC60FC", Offset = "0x1AC60FC", VA = "0x1AC60FC")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x1AC6170", Offset = "0x1AC6170", VA = "0x1AC6170")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x1AC61E4", Offset = "0x1AC61E4", VA = "0x1AC61E4")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x1AC6264", Offset = "0x1AC6264", VA = "0x1AC6264")]
		public static extern void ovr_Voip_SetNewConnectionOptions(IntPtr voipOptions);

		[PreserveSig]
		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x1AC62E4", Offset = "0x1AC62E4", VA = "0x1AC62E4")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x1AC6364", Offset = "0x1AC6364", VA = "0x1AC6364")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x1AC63E4", Offset = "0x1AC63E4", VA = "0x1AC63E4")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x1ABF6C4", Offset = "0x1ABF6C4", VA = "0x1ABF6C4")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x1AC6464", Offset = "0x1AC6464", VA = "0x1AC6464")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x1ABF89C", Offset = "0x1ABF89C", VA = "0x1ABF89C")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x1AC64F4", Offset = "0x1AC64F4", VA = "0x1AC64F4")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x1ABFA78", Offset = "0x1ABFA78", VA = "0x1ABFA78")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x1ABFBF4", Offset = "0x1ABFBF4", VA = "0x1ABFBF4")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x1ABFD94", Offset = "0x1ABFD94", VA = "0x1ABFD94")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x1AC0014", Offset = "0x1AC0014", VA = "0x1AC0014")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x1AC0280", Offset = "0x1AC0280", VA = "0x1AC0280")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x1AC6584", Offset = "0x1AC6584", VA = "0x1AC6584")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x1AC6604", Offset = "0x1AC6604", VA = "0x1AC6604")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x1AC6694", Offset = "0x1AC6694", VA = "0x1AC6694")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x1AC0A9C", Offset = "0x1AC0A9C", VA = "0x1AC0A9C")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x1AC0CAC", Offset = "0x1AC0CAC", VA = "0x1AC0CAC")]
		public static extern ulong ovr_Application_LaunchOtherApp(ulong appID, IntPtr deeplink_options);

		[PreserveSig]
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x1AC6708", Offset = "0x1AC6708", VA = "0x1AC6708")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x1AC677C", Offset = "0x1AC677C", VA = "0x1AC677C")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x1AC67F0", Offset = "0x1AC67F0", VA = "0x1AC67F0")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x1AC6898", Offset = "0x1AC6898", VA = "0x1AC6898")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[PreserveSig]
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x1AC130C", Offset = "0x1AC130C", VA = "0x1AC130C")]
		public static extern ulong ovr_AssetFile_Delete(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x1AC14A4", Offset = "0x1AC14A4", VA = "0x1AC14A4")]
		public static extern ulong ovr_AssetFile_DeleteById(ulong assetFileID);

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x1AC163C", Offset = "0x1AC163C", VA = "0x1AC163C")]
		public static ulong ovr_AssetFile_DeleteByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x1AC6918", Offset = "0x1AC6918", VA = "0x1AC6918")]
		private static extern ulong ovr_AssetFile_DeleteByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x1AC17FC", Offset = "0x1AC17FC", VA = "0x1AC17FC")]
		public static extern ulong ovr_AssetFile_Download(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x1AC1994", Offset = "0x1AC1994", VA = "0x1AC1994")]
		public static extern ulong ovr_AssetFile_DownloadById(ulong assetFileID);

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x1AC1B2C", Offset = "0x1AC1B2C", VA = "0x1AC1B2C")]
		public static ulong ovr_AssetFile_DownloadByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x1AC6998", Offset = "0x1AC6998", VA = "0x1AC6998")]
		private static extern ulong ovr_AssetFile_DownloadByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x1AC1CEC", Offset = "0x1AC1CEC", VA = "0x1AC1CEC")]
		public static extern ulong ovr_AssetFile_DownloadCancel(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x1AC1E84", Offset = "0x1AC1E84", VA = "0x1AC1E84")]
		public static extern ulong ovr_AssetFile_DownloadCancelById(ulong assetFileID);

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x1AC201C", Offset = "0x1AC201C", VA = "0x1AC201C")]
		public static ulong ovr_AssetFile_DownloadCancelByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x1AC6A18", Offset = "0x1AC6A18", VA = "0x1AC6A18")]
		private static extern ulong ovr_AssetFile_DownloadCancelByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x1AC21CC", Offset = "0x1AC21CC", VA = "0x1AC21CC")]
		public static extern ulong ovr_AssetFile_GetList();

		[PreserveSig]
		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x1AC2358", Offset = "0x1AC2358", VA = "0x1AC2358")]
		public static extern ulong ovr_AssetFile_Status(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x1AC24F0", Offset = "0x1AC24F0", VA = "0x1AC24F0")]
		public static extern ulong ovr_AssetFile_StatusById(ulong assetFileID);

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x1AC2688", Offset = "0x1AC2688", VA = "0x1AC2688")]
		public static ulong ovr_AssetFile_StatusByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x1AC6A98", Offset = "0x1AC6A98", VA = "0x1AC6A98")]
		private static extern ulong ovr_AssetFile_StatusByName_Native(IntPtr assetFileName);

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x1AC6B18", Offset = "0x1AC6B18", VA = "0x1AC6B18")]
		public static ulong ovr_Avatar_UpdateMetaData(string avatarMetaData, string imageFilePath)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000600")]
		[Address(RVA = "0x1AC6BEC", Offset = "0x1AC6BEC", VA = "0x1AC6BEC")]
		private static extern ulong ovr_Avatar_UpdateMetaData_Native(IntPtr avatarMetaData, IntPtr imageFilePath);

		[PreserveSig]
		[Token(Token = "0x6000601")]
		[Address(RVA = "0x1AC6C7C", Offset = "0x1AC6C7C", VA = "0x1AC6C7C")]
		public static extern ulong ovr_Cal_FinalizeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong finalized_application_ID);

		[PreserveSig]
		[Token(Token = "0x6000602")]
		[Address(RVA = "0x1AC6D2C", Offset = "0x1AC6D2C", VA = "0x1AC6D2C")]
		public static extern ulong ovr_Cal_GetSuggestedApplications(ulong groupingObject, ulong[] userIDs, int numUserIDs);

		[PreserveSig]
		[Token(Token = "0x6000603")]
		[Address(RVA = "0x1AC6DCC", Offset = "0x1AC6DCC", VA = "0x1AC6DCC")]
		public static extern ulong ovr_Cal_ProposeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong proposed_application_ID);

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x1AC6E7C", Offset = "0x1AC6E7C", VA = "0x1AC6E7C")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000605")]
		[Address(RVA = "0x1AC6F50", Offset = "0x1AC6F50", VA = "0x1AC6F50")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x1AC6FE0", Offset = "0x1AC6FE0", VA = "0x1AC6FE0")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000607")]
		[Address(RVA = "0x1AC70B4", Offset = "0x1AC70B4", VA = "0x1AC70B4")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x1AC7144", Offset = "0x1AC7144", VA = "0x1AC7144")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000609")]
		[Address(RVA = "0x1AC71EC", Offset = "0x1AC71EC", VA = "0x1AC71EC")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x1AC726C", Offset = "0x1AC726C", VA = "0x1AC726C")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600060B")]
		[Address(RVA = "0x1AC7340", Offset = "0x1AC7340", VA = "0x1AC7340")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x1AC73D0", Offset = "0x1AC73D0", VA = "0x1AC73D0")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600060D")]
		[Address(RVA = "0x1AC7478", Offset = "0x1AC7478", VA = "0x1AC7478")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x1AC74F8", Offset = "0x1AC74F8", VA = "0x1AC74F8")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600060F")]
		[Address(RVA = "0x1AC75CC", Offset = "0x1AC75CC", VA = "0x1AC75CC")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x1AC765C", Offset = "0x1AC765C", VA = "0x1AC765C")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000611")]
		[Address(RVA = "0x1AC7750", Offset = "0x1AC7750", VA = "0x1AC7750")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x1AC77E8", Offset = "0x1AC77E8", VA = "0x1AC77E8")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000613")]
		[Address(RVA = "0x1AC78DC", Offset = "0x1AC78DC", VA = "0x1AC78DC")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x1AC7974", Offset = "0x1AC7974", VA = "0x1AC7974")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000615")]
		[Address(RVA = "0x1AC7A90", Offset = "0x1AC7A90", VA = "0x1AC7A90")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x6000616")]
		[Address(RVA = "0x1AC7B58", Offset = "0x1AC7B58", VA = "0x1AC7B58")]
		public static extern ulong ovr_CloudStorage2_GetUserDirectoryPath();

		[PreserveSig]
		[Token(Token = "0x6000617")]
		[Address(RVA = "0x1AC7BCC", Offset = "0x1AC7BCC", VA = "0x1AC7BCC")]
		public static extern ulong ovr_Colocation_GetCurrentMapUuid();

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x1AC7C40", Offset = "0x1AC7C40", VA = "0x1AC7C40")]
		public static ulong ovr_Colocation_RequestMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000619")]
		[Address(RVA = "0x1AC7CE8", Offset = "0x1AC7CE8", VA = "0x1AC7CE8")]
		private static extern ulong ovr_Colocation_RequestMap_Native(IntPtr uuid);

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x1AC7D68", Offset = "0x1AC7D68", VA = "0x1AC7D68")]
		public static ulong ovr_Colocation_ShareMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600061B")]
		[Address(RVA = "0x1AC7E10", Offset = "0x1AC7E10", VA = "0x1AC7E10")]
		private static extern ulong ovr_Colocation_ShareMap_Native(IntPtr uuid);

		[PreserveSig]
		[Token(Token = "0x600061C")]
		[Address(RVA = "0x1AC7E90", Offset = "0x1AC7E90", VA = "0x1AC7E90")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x1AC7F04", Offset = "0x1AC7F04", VA = "0x1AC7F04")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600061E")]
		[Address(RVA = "0x1AC7FAC", Offset = "0x1AC7FAC", VA = "0x1AC7FAC")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x1AC802C", Offset = "0x1AC802C", VA = "0x1AC802C")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000620")]
		[Address(RVA = "0x1AC80D4", Offset = "0x1AC80D4", VA = "0x1AC80D4")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x1AC8150", Offset = "0x1AC8150", VA = "0x1AC8150")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000622")]
		[Address(RVA = "0x1AC81F8", Offset = "0x1AC81F8", VA = "0x1AC81F8")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x1AC8278", Offset = "0x1AC8278", VA = "0x1AC8278")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000624")]
		[Address(RVA = "0x1AC834C", Offset = "0x1AC834C", VA = "0x1AC834C")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x1AC83DC", Offset = "0x1AC83DC", VA = "0x1AC83DC")]
		public static ulong ovr_HTTP_MultiPartPost(string url, string filepath_param_name, string filepath, string access_token, ovrKeyValuePair[] post_params)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000626")]
		[Address(RVA = "0x1AC8538", Offset = "0x1AC8538", VA = "0x1AC8538")]
		private static extern ulong ovr_HTTP_MultiPartPost_Native(IntPtr url, IntPtr filepath_param_name, IntPtr filepath, IntPtr access_token, ovrKeyValuePair[] post_params, UIntPtr numItems);

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x1AC86C4", Offset = "0x1AC86C4", VA = "0x1AC86C4")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000628")]
		[Address(RVA = "0x1AC876C", Offset = "0x1AC876C", VA = "0x1AC876C")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x6000629")]
		[Address(RVA = "0x1AC87EC", Offset = "0x1AC87EC", VA = "0x1AC87EC")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600062A")]
		[Address(RVA = "0x1AC8894", Offset = "0x1AC8894", VA = "0x1AC8894")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x600062B")]
		[Address(RVA = "0x1AC8914", Offset = "0x1AC8914", VA = "0x1AC8914")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x600062C")]
		[Address(RVA = "0x1AC8A68", Offset = "0x1AC8A68", VA = "0x1AC8A68")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[PreserveSig]
		[Token(Token = "0x600062D")]
		[Address(RVA = "0x1AC8ADC", Offset = "0x1AC8ADC", VA = "0x1AC8ADC")]
		public static extern ulong ovr_IAP_GetViewerPurchasesDurableCache();

		[Token(Token = "0x600062E")]
		[Address(RVA = "0x1AC8B50", Offset = "0x1AC8B50", VA = "0x1AC8B50")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600062F")]
		[Address(RVA = "0x1AC8BF8", Offset = "0x1AC8BF8", VA = "0x1AC8BF8")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000630")]
		[Address(RVA = "0x1AC8C78", Offset = "0x1AC8C78", VA = "0x1AC8C78")]
		public static extern ulong ovr_LanguagePack_GetCurrent();

		[Token(Token = "0x6000631")]
		[Address(RVA = "0x1AC8CEC", Offset = "0x1AC8CEC", VA = "0x1AC8CEC")]
		public static ulong ovr_LanguagePack_SetCurrent(string tag)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000632")]
		[Address(RVA = "0x1AC8D94", Offset = "0x1AC8D94", VA = "0x1AC8D94")]
		private static extern ulong ovr_LanguagePack_SetCurrent_Native(IntPtr tag);

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x1AC8E14", Offset = "0x1AC8E14", VA = "0x1AC8E14")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000634")]
		[Address(RVA = "0x1AC8EE4", Offset = "0x1AC8EE4", VA = "0x1AC8EE4")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x6000635")]
		[Address(RVA = "0x1AC8F8C", Offset = "0x1AC8F8C", VA = "0x1AC8F8C")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000636")]
		[Address(RVA = "0x1AC904C", Offset = "0x1AC904C", VA = "0x1AC904C")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x6000637")]
		[Address(RVA = "0x1AC90E4", Offset = "0x1AC90E4", VA = "0x1AC90E4")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000638")]
		[Address(RVA = "0x1AC9164", Offset = "0x1AC9164", VA = "0x1AC9164")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x6000639")]
		[Address(RVA = "0x1AC91E4", Offset = "0x1AC91E4", VA = "0x1AC91E4")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600063A")]
		[Address(RVA = "0x1AC92BC", Offset = "0x1AC92BC", VA = "0x1AC92BC")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x600063B")]
		[Address(RVA = "0x1AC9374", Offset = "0x1AC9374", VA = "0x1AC9374")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[Token(Token = "0x600063C")]
		[Address(RVA = "0x1AC93E8", Offset = "0x1AC93E8", VA = "0x1AC93E8")]
		public static ulong ovr_Livestreaming_IsAllowedForApplication(string packageName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600063D")]
		[Address(RVA = "0x1AC9490", Offset = "0x1AC9490", VA = "0x1AC9490")]
		private static extern ulong ovr_Livestreaming_IsAllowedForApplication_Native(IntPtr packageName);

		[PreserveSig]
		[Token(Token = "0x600063E")]
		[Address(RVA = "0x1AC9510", Offset = "0x1AC9510", VA = "0x1AC9510")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x600063F")]
		[Address(RVA = "0x1AC9584", Offset = "0x1AC9584", VA = "0x1AC9584")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[PreserveSig]
		[Token(Token = "0x6000640")]
		[Address(RVA = "0x1AC95F8", Offset = "0x1AC95F8", VA = "0x1AC95F8")]
		public static extern ulong ovr_Livestreaming_StartPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000641")]
		[Address(RVA = "0x1AC966C", Offset = "0x1AC966C", VA = "0x1AC966C")]
		public static extern ulong ovr_Livestreaming_StopPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000642")]
		[Address(RVA = "0x1AC96E0", Offset = "0x1AC96E0", VA = "0x1AC96E0")]
		public static extern ulong ovr_Livestreaming_StopStream();

		[PreserveSig]
		[Token(Token = "0x6000643")]
		[Address(RVA = "0x1AC9754", Offset = "0x1AC9754", VA = "0x1AC9754")]
		public static extern ulong ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x1AC97D4", Offset = "0x1AC97D4", VA = "0x1AC97D4")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000645")]
		[Address(RVA = "0x1AC988C", Offset = "0x1AC988C", VA = "0x1AC988C")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x1AC991C", Offset = "0x1AC991C", VA = "0x1AC991C")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000647")]
		[Address(RVA = "0x1AC99D4", Offset = "0x1AC99D4", VA = "0x1AC99D4")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x1AC9A64", Offset = "0x1AC9A64", VA = "0x1AC9A64")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000649")]
		[Address(RVA = "0x1AC9B38", Offset = "0x1AC9B38", VA = "0x1AC9B38")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x600064A")]
		[Address(RVA = "0x1AC9BC8", Offset = "0x1AC9BC8", VA = "0x1AC9BC8")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x1AC9C3C", Offset = "0x1AC9C3C", VA = "0x1AC9C3C")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600064C")]
		[Address(RVA = "0x1AC9D0C", Offset = "0x1AC9D0C", VA = "0x1AC9D0C")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x1AC9DB4", Offset = "0x1AC9DB4", VA = "0x1AC9DB4")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600064E")]
		[Address(RVA = "0x1AC9E6C", Offset = "0x1AC9E6C", VA = "0x1AC9E6C")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x1AC9EFC", Offset = "0x1AC9EFC", VA = "0x1AC9EFC")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000650")]
		[Address(RVA = "0x1AC9FBC", Offset = "0x1AC9FBC", VA = "0x1AC9FBC")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x1ACA054", Offset = "0x1ACA054", VA = "0x1ACA054")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000652")]
		[Address(RVA = "0x1ACA10C", Offset = "0x1ACA10C", VA = "0x1ACA10C")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x1ACA19C", Offset = "0x1ACA19C", VA = "0x1ACA19C")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000654")]
		[Address(RVA = "0x1ACA254", Offset = "0x1ACA254", VA = "0x1ACA254")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x1ACA2E4", Offset = "0x1ACA2E4", VA = "0x1ACA2E4")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000656")]
		[Address(RVA = "0x1ACA39C", Offset = "0x1ACA39C", VA = "0x1ACA39C")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000657")]
		[Address(RVA = "0x1ACA42C", Offset = "0x1ACA42C", VA = "0x1ACA42C")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x6000658")]
		[Address(RVA = "0x1ACA4BC", Offset = "0x1ACA4BC", VA = "0x1ACA4BC")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000659")]
		[Address(RVA = "0x1ACA54C", Offset = "0x1ACA54C", VA = "0x1ACA54C")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x1ACA5C0", Offset = "0x1ACA5C0", VA = "0x1ACA5C0")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600065B")]
		[Address(RVA = "0x1ACA680", Offset = "0x1ACA680", VA = "0x1ACA680")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x600065C")]
		[Address(RVA = "0x1ACA718", Offset = "0x1ACA718", VA = "0x1ACA718")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x1ACA7A8", Offset = "0x1ACA7A8", VA = "0x1ACA7A8")]
		public static ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600065E")]
		[Address(RVA = "0x1ACA85C", Offset = "0x1ACA85C", VA = "0x1ACA85C")]
		private static extern ulong ovr_Matchmaking_ReportResultInsecure_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x600065F")]
		[Address(RVA = "0x1ACA9B8", Offset = "0x1ACA9B8", VA = "0x1ACA9B8")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x1ACAA38", Offset = "0x1ACAA38", VA = "0x1ACAA38")]
		public static ulong ovr_Media_ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000661")]
		[Address(RVA = "0x1ACAB14", Offset = "0x1ACAB14", VA = "0x1ACAB14")]
		private static extern ulong ovr_Media_ShareToFacebook_Native(IntPtr postTextSuggestion, IntPtr filePath, MediaContentType contentType);

		[PreserveSig]
		[Token(Token = "0x6000662")]
		[Address(RVA = "0x1ACABAC", Offset = "0x1ACABAC", VA = "0x1ACABAC")]
		public static extern ulong ovr_NetSync_Connect(IntPtr connect_options);

		[PreserveSig]
		[Token(Token = "0x6000663")]
		[Address(RVA = "0x1ACAC2C", Offset = "0x1ACAC2C", VA = "0x1ACAC2C")]
		public static extern ulong ovr_NetSync_Disconnect(long connection_id);

		[PreserveSig]
		[Token(Token = "0x6000664")]
		[Address(RVA = "0x1ACACAC", Offset = "0x1ACACAC", VA = "0x1ACACAC")]
		public static extern ulong ovr_NetSync_GetSessions(long connection_id);

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x1ACAD2C", Offset = "0x1ACAD2C", VA = "0x1ACAD2C")]
		public static ulong ovr_NetSync_SetVoipGroup(long connection_id, string group_id)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000666")]
		[Address(RVA = "0x1ACADE8", Offset = "0x1ACADE8", VA = "0x1ACADE8")]
		private static extern ulong ovr_NetSync_SetVoipGroup_Native(long connection_id, IntPtr group_id);

		[PreserveSig]
		[Token(Token = "0x6000667")]
		[Address(RVA = "0x1ACAE78", Offset = "0x1ACAE78", VA = "0x1ACAE78")]
		public static extern ulong ovr_NetSync_SetVoipSessionMuted(long connection_id, ulong session_id, bool muted);

		[PreserveSig]
		[Token(Token = "0x6000668")]
		[Address(RVA = "0x1ACAF10", Offset = "0x1ACAF10", VA = "0x1ACAF10")]
		public static extern ulong ovr_NetSync_SetVoipStreamMode(long connection_id, ulong sessionId, NetSyncVoipStreamMode streamMode);

		[PreserveSig]
		[Token(Token = "0x6000669")]
		[Address(RVA = "0x1ACAFA8", Offset = "0x1ACAFA8", VA = "0x1ACAFA8")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x600066A")]
		[Address(RVA = "0x1ACB01C", Offset = "0x1ACB01C", VA = "0x1ACB01C")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x600066B")]
		[Address(RVA = "0x1ACB09C", Offset = "0x1ACB09C", VA = "0x1ACB09C")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x600066C")]
		[Address(RVA = "0x1ACB110", Offset = "0x1ACB110", VA = "0x1ACB110")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x600066D")]
		[Address(RVA = "0x1ACB1A0", Offset = "0x1ACB1A0", VA = "0x1ACB1A0")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x600066E")]
		[Address(RVA = "0x1ACB220", Offset = "0x1ACB220", VA = "0x1ACB220")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x600066F")]
		[Address(RVA = "0x1ACB294", Offset = "0x1ACB294", VA = "0x1ACB294")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000670")]
		[Address(RVA = "0x1ACB314", Offset = "0x1ACB314", VA = "0x1ACB314")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000671")]
		[Address(RVA = "0x1ACB3A0", Offset = "0x1ACB3A0", VA = "0x1ACB3A0")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000672")]
		[Address(RVA = "0x1ACB420", Offset = "0x1ACB420", VA = "0x1ACB420")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000673")]
		[Address(RVA = "0x1ACB4A0", Offset = "0x1ACB4A0", VA = "0x1ACB4A0")]
		public static extern ulong ovr_RichPresence_Clear();

		[PreserveSig]
		[Token(Token = "0x6000674")]
		[Address(RVA = "0x1ACB514", Offset = "0x1ACB514", VA = "0x1ACB514")]
		public static extern ulong ovr_RichPresence_GetDestinations();

		[PreserveSig]
		[Token(Token = "0x6000675")]
		[Address(RVA = "0x1ACB588", Offset = "0x1ACB588", VA = "0x1ACB588")]
		public static extern ulong ovr_RichPresence_Set(IntPtr richPresenceOptions);

		[PreserveSig]
		[Token(Token = "0x6000676")]
		[Address(RVA = "0x1ACB608", Offset = "0x1ACB608", VA = "0x1ACB608")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6000677")]
		[Address(RVA = "0x1ACB6A0", Offset = "0x1ACB6A0", VA = "0x1ACB6A0")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000678")]
		[Address(RVA = "0x1ACB738", Offset = "0x1ACB738", VA = "0x1ACB738")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000679")]
		[Address(RVA = "0x1ACB7B8", Offset = "0x1ACB7B8", VA = "0x1ACB7B8")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x600067A")]
		[Address(RVA = "0x1ACB82C", Offset = "0x1ACB82C", VA = "0x1ACB82C")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600067B")]
		[Address(RVA = "0x1ACB8AC", Offset = "0x1ACB8AC", VA = "0x1ACB8AC")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x600067C")]
		[Address(RVA = "0x1ACB920", Offset = "0x1ACB920", VA = "0x1ACB920")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x600067D")]
		[Address(RVA = "0x1ACB9A0", Offset = "0x1ACB9A0", VA = "0x1ACB9A0")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x600067E")]
		[Address(RVA = "0x1ACBA14", Offset = "0x1ACBA14", VA = "0x1ACBA14")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x1ACBA94", Offset = "0x1ACBA94", VA = "0x1ACBA94")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000680")]
		[Address(RVA = "0x1ACBB50", Offset = "0x1ACBB50", VA = "0x1ACBB50")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x6000681")]
		[Address(RVA = "0x1ACBBE0", Offset = "0x1ACBBE0", VA = "0x1ACBBE0")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6000682")]
		[Address(RVA = "0x1ACBC70", Offset = "0x1ACBC70", VA = "0x1ACBC70")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000683")]
		[Address(RVA = "0x1ACBD00", Offset = "0x1ACBD00", VA = "0x1ACBD00")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x6000684")]
		[Address(RVA = "0x1ACBD94", Offset = "0x1ACBD94", VA = "0x1ACBD94")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000685")]
		[Address(RVA = "0x1ACBE14", Offset = "0x1ACBE14", VA = "0x1ACBE14")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x1ACBE94", Offset = "0x1ACBE94", VA = "0x1ACBE94")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000687")]
		[Address(RVA = "0x1ACBF50", Offset = "0x1ACBF50", VA = "0x1ACBF50")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x1ACBFE0", Offset = "0x1ACBFE0", VA = "0x1ACBFE0")]
		public static ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000689")]
		[Address(RVA = "0x1ACC094", Offset = "0x1ACC094", VA = "0x1ACC094")]
		private static extern ulong ovr_Room_UpdateDataStore_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x600068A")]
		[Address(RVA = "0x1ACC1EC", Offset = "0x1ACC1EC", VA = "0x1ACC1EC")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x600068B")]
		[Address(RVA = "0x1ACC27C", Offset = "0x1ACC27C", VA = "0x1ACC27C")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x600068C")]
		[Address(RVA = "0x1ACC30C", Offset = "0x1ACC30C", VA = "0x1ACC30C")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x600068D")]
		[Address(RVA = "0x1ACC39C", Offset = "0x1ACC39C", VA = "0x1ACC39C")]
		public static extern ulong ovr_SystemPermissions_GetStatus(PermissionType permType);

		[PreserveSig]
		[Token(Token = "0x600068E")]
		[Address(RVA = "0x1ACC41C", Offset = "0x1ACC41C", VA = "0x1ACC41C")]
		public static extern ulong ovr_SystemPermissions_LaunchDeeplink(PermissionType permType);

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x1ACC49C", Offset = "0x1ACC49C", VA = "0x1ACC49C")]
		public static ulong ovr_User_CancelRecordingForReportFlow(string recordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000690")]
		[Address(RVA = "0x1ACC544", Offset = "0x1ACC544", VA = "0x1ACC544")]
		private static extern ulong ovr_User_CancelRecordingForReportFlow_Native(IntPtr recordingUUID);

		[PreserveSig]
		[Token(Token = "0x6000691")]
		[Address(RVA = "0x1ACC5C4", Offset = "0x1ACC5C4", VA = "0x1ACC5C4")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000692")]
		[Address(RVA = "0x1ACC644", Offset = "0x1ACC644", VA = "0x1ACC644")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x6000693")]
		[Address(RVA = "0x1ACC6B8", Offset = "0x1ACC6B8", VA = "0x1ACC6B8")]
		public static extern ulong ovr_User_GetLinkedAccounts(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6000694")]
		[Address(RVA = "0x1ACC738", Offset = "0x1ACC738", VA = "0x1ACC738")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x6000695")]
		[Address(RVA = "0x1ACC7AC", Offset = "0x1ACC7AC", VA = "0x1ACC7AC")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x6000696")]
		[Address(RVA = "0x1ACC820", Offset = "0x1ACC820", VA = "0x1ACC820")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x6000697")]
		[Address(RVA = "0x1ACC894", Offset = "0x1ACC894", VA = "0x1ACC894")]
		public static extern ulong ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6000698")]
		[Address(RVA = "0x1ACC914", Offset = "0x1ACC914", VA = "0x1ACC914")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000699")]
		[Address(RVA = "0x1ACC994", Offset = "0x1ACC994", VA = "0x1ACC994")]
		public static extern ulong ovr_User_GetSdkAccounts();

		[PreserveSig]
		[Token(Token = "0x600069A")]
		[Address(RVA = "0x1ACCA08", Offset = "0x1ACCA08", VA = "0x1ACCA08")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x600069B")]
		[Address(RVA = "0x1ACCA7C", Offset = "0x1ACCA7C", VA = "0x1ACCA7C")]
		public static extern ulong ovr_User_LaunchBlockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600069C")]
		[Address(RVA = "0x1ACCAFC", Offset = "0x1ACCAFC", VA = "0x1ACCAFC")]
		public static extern ulong ovr_User_LaunchFriendRequestFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600069D")]
		[Address(RVA = "0x1ACCB7C", Offset = "0x1ACCB7C", VA = "0x1ACCB7C")]
		public static extern ulong ovr_User_LaunchProfile(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600069E")]
		[Address(RVA = "0x1ACCBFC", Offset = "0x1ACCBFC", VA = "0x1ACCBFC")]
		public static extern ulong ovr_User_LaunchReportFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600069F")]
		[Address(RVA = "0x1ACCC7C", Offset = "0x1ACCC7C", VA = "0x1ACCC7C")]
		public static extern ulong ovr_User_LaunchReportFlow2(ulong optionalUserID, IntPtr abuseReportOptions);

		[PreserveSig]
		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x1ACCD0C", Offset = "0x1ACCD0C", VA = "0x1ACCD0C")]
		public static extern ulong ovr_User_LaunchUnblockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x1ACCD8C", Offset = "0x1ACCD8C", VA = "0x1ACCD8C")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x1ACCE00", Offset = "0x1ACCE00", VA = "0x1ACCE00")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x1ACCE74", Offset = "0x1ACCE74", VA = "0x1ACCE74")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x1ACCEE8", Offset = "0x1ACCEE8", VA = "0x1ACCEE8")]
		public static extern ulong ovr_User_StartRecordingForReportFlow();

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x1ACCF5C", Offset = "0x1ACCF5C", VA = "0x1ACCF5C")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow(ulong optionalUserID, string optionalRecordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x1ACD018", Offset = "0x1ACD018", VA = "0x1ACD018")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow_Native(ulong optionalUserID, IntPtr optionalRecordingUUID);

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x1ACD0A8", Offset = "0x1ACD0A8", VA = "0x1ACD0A8")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow2(ulong optionalUserID, string optionalRecordingUUID, IntPtr abuseReportOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x1ACD16C", Offset = "0x1ACD16C", VA = "0x1ACD16C")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow2_Native(ulong optionalUserID, IntPtr optionalRecordingUUID, IntPtr abuseReportOptions);

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x1ACD204", Offset = "0x1ACD204", VA = "0x1ACD204")]
		public static ulong ovr_User_TestUserCreateDeviceManifest(string deviceID, ulong[] appIDs, int numAppIDs)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x1ACD2C4", Offset = "0x1ACD2C4", VA = "0x1ACD2C4")]
		private static extern ulong ovr_User_TestUserCreateDeviceManifest_Native(IntPtr deviceID, ulong[] appIDs, int numAppIDs);

		[PreserveSig]
		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x1ACD364", Offset = "0x1ACD364", VA = "0x1ACD364")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x1ACD3E4", Offset = "0x1ACD3E4", VA = "0x1ACD3E4")]
		public static string ovr_AbuseReportRecording_GetRecordingUuid(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x1ACD44C", Offset = "0x1ACD44C", VA = "0x1ACD44C")]
		private static extern IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x1ACD4CC", Offset = "0x1ACD4CC", VA = "0x1ACD4CC")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x1ACD54C", Offset = "0x1ACD54C", VA = "0x1ACD54C")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x1ACD5B4", Offset = "0x1ACD5B4", VA = "0x1ACD5B4")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x1ACD634", Offset = "0x1ACD634", VA = "0x1ACD634")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x1ACD6B4", Offset = "0x1ACD6B4", VA = "0x1ACD6B4")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x1ACD734", Offset = "0x1ACD734", VA = "0x1ACD734")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x1ACD7C4", Offset = "0x1ACD7C4", VA = "0x1ACD7C4")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x1ACD82C", Offset = "0x1ACD82C", VA = "0x1ACD82C")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x1ACD8AC", Offset = "0x1ACD8AC", VA = "0x1ACD8AC")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x1ACD92C", Offset = "0x1ACD92C", VA = "0x1ACD92C")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x1ACD9B4", Offset = "0x1ACD9B4", VA = "0x1ACD9B4")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x1ACDA1C", Offset = "0x1ACDA1C", VA = "0x1ACDA1C")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x1ACDA9C", Offset = "0x1ACDA9C", VA = "0x1ACDA9C")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x1ACDB1C", Offset = "0x1ACDB1C", VA = "0x1ACDB1C")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x1ACDBA4", Offset = "0x1ACDBA4", VA = "0x1ACDBA4")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x1ACDC0C", Offset = "0x1ACDC0C", VA = "0x1ACDC0C")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x1ACDC8C", Offset = "0x1ACDC8C", VA = "0x1ACDC8C")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x1ACDCF4", Offset = "0x1ACDCF4", VA = "0x1ACDCF4")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x1ACDD74", Offset = "0x1ACDD74", VA = "0x1ACDD74")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x1ACDE04", Offset = "0x1ACDE04", VA = "0x1ACDE04")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x1ACDE6C", Offset = "0x1ACDE6C", VA = "0x1ACDE6C")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x1ACDEEC", Offset = "0x1ACDEEC", VA = "0x1ACDEEC")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x1ACDF6C", Offset = "0x1ACDF6C", VA = "0x1ACDF6C")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x1ACDFF4", Offset = "0x1ACDFF4", VA = "0x1ACDFF4")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x1ACE07C", Offset = "0x1ACE07C", VA = "0x1ACE07C")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x1ACE0E4", Offset = "0x1ACE0E4", VA = "0x1ACE0E4")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x1ACE164", Offset = "0x1ACE164", VA = "0x1ACE164")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x1ACE1E4", Offset = "0x1ACE1E4", VA = "0x1ACE1E4")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x1ACE264", Offset = "0x1ACE264", VA = "0x1ACE264")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x1ACE2CC", Offset = "0x1ACE2CC", VA = "0x1ACE2CC")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x1ACE34C", Offset = "0x1ACE34C", VA = "0x1ACE34C")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x1ACE3CC", Offset = "0x1ACE3CC", VA = "0x1ACE3CC")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x1ACE434", Offset = "0x1ACE434", VA = "0x1ACE434")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x1ACE4B4", Offset = "0x1ACE4B4", VA = "0x1ACE4B4")]
		public static extern ulong ovr_AssetDetails_GetAssetId(IntPtr obj);

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x1ACE534", Offset = "0x1ACE534", VA = "0x1ACE534")]
		public static string ovr_AssetDetails_GetAssetType(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x1ACE59C", Offset = "0x1ACE59C", VA = "0x1ACE59C")]
		private static extern IntPtr ovr_AssetDetails_GetAssetType_Native(IntPtr obj);

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x1ACE61C", Offset = "0x1ACE61C", VA = "0x1ACE61C")]
		public static string ovr_AssetDetails_GetDownloadStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x1ACE684", Offset = "0x1ACE684", VA = "0x1ACE684")]
		private static extern IntPtr ovr_AssetDetails_GetDownloadStatus_Native(IntPtr obj);

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x1ACE704", Offset = "0x1ACE704", VA = "0x1ACE704")]
		public static string ovr_AssetDetails_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x1ACE76C", Offset = "0x1ACE76C", VA = "0x1ACE76C")]
		private static extern IntPtr ovr_AssetDetails_GetFilepath_Native(IntPtr obj);

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x1ACE7EC", Offset = "0x1ACE7EC", VA = "0x1ACE7EC")]
		public static string ovr_AssetDetails_GetIapStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x1ACE854", Offset = "0x1ACE854", VA = "0x1ACE854")]
		private static extern IntPtr ovr_AssetDetails_GetIapStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x1ACE8D4", Offset = "0x1ACE8D4", VA = "0x1ACE8D4")]
		public static extern IntPtr ovr_AssetDetails_GetLanguage(IntPtr obj);

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x1ACE954", Offset = "0x1ACE954", VA = "0x1ACE954")]
		public static string ovr_AssetDetails_GetMetadata(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x1ACE9BC", Offset = "0x1ACE9BC", VA = "0x1ACE9BC")]
		private static extern IntPtr ovr_AssetDetails_GetMetadata_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x1ACEA3C", Offset = "0x1ACEA3C", VA = "0x1ACEA3C")]
		public static extern IntPtr ovr_AssetDetailsArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x1ACEACC", Offset = "0x1ACEACC", VA = "0x1ACEACC")]
		public static extern UIntPtr ovr_AssetDetailsArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x1ACEB4C", Offset = "0x1ACEB4C", VA = "0x1ACEB4C")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x1ACEBCC", Offset = "0x1ACEBCC", VA = "0x1ACEBCC")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x1ACEC4C", Offset = "0x1ACEC4C", VA = "0x1ACEC4C")]
		public static string ovr_AssetFileDeleteResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x1ACECB4", Offset = "0x1ACECB4", VA = "0x1ACECB4")]
		private static extern IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x1ACED34", Offset = "0x1ACED34", VA = "0x1ACED34")]
		public static extern bool ovr_AssetFileDeleteResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x1ACEDBC", Offset = "0x1ACEDBC", VA = "0x1ACEDBC")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x1ACEE3C", Offset = "0x1ACEE3C", VA = "0x1ACEE3C")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x1ACEEBC", Offset = "0x1ACEEBC", VA = "0x1ACEEBC")]
		public static string ovr_AssetFileDownloadCancelResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x1ACEF24", Offset = "0x1ACEF24", VA = "0x1ACEF24")]
		private static extern IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x1ACEFA4", Offset = "0x1ACEFA4", VA = "0x1ACEFA4")]
		public static extern bool ovr_AssetFileDownloadCancelResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x1ACF02C", Offset = "0x1ACF02C", VA = "0x1ACF02C")]
		public static extern ulong ovr_AssetFileDownloadResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x1ACF0AC", Offset = "0x1ACF0AC", VA = "0x1ACF0AC")]
		public static string ovr_AssetFileDownloadResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x1ACF114", Offset = "0x1ACF114", VA = "0x1ACF114")]
		private static extern IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x1ACF194", Offset = "0x1ACF194", VA = "0x1ACF194")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x1ACF214", Offset = "0x1ACF214", VA = "0x1ACF214")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x1ACF294", Offset = "0x1ACF294", VA = "0x1ACF294")]
		public static extern uint ovr_AssetFileDownloadUpdate_GetBytesTotal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x1ACF314", Offset = "0x1ACF314", VA = "0x1ACF314")]
		public static extern int ovr_AssetFileDownloadUpdate_GetBytesTransferred(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x1ACF394", Offset = "0x1ACF394", VA = "0x1ACF394")]
		public static extern bool ovr_AssetFileDownloadUpdate_GetCompleted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x1ACF41C", Offset = "0x1ACF41C", VA = "0x1ACF41C")]
		public static extern int ovr_CalApplicationFinalized_GetCountdownMS(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x1ACF49C", Offset = "0x1ACF49C", VA = "0x1ACF49C")]
		public static extern ulong ovr_CalApplicationFinalized_GetID(IntPtr obj);

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x1ACF51C", Offset = "0x1ACF51C", VA = "0x1ACF51C")]
		public static string ovr_CalApplicationFinalized_GetLaunchDetails(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x1ACF584", Offset = "0x1ACF584", VA = "0x1ACF584")]
		private static extern IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x1ACF604", Offset = "0x1ACF604", VA = "0x1ACF604")]
		public static extern ulong ovr_CalApplicationProposed_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x1ACF684", Offset = "0x1ACF684", VA = "0x1ACF684")]
		public static extern ulong ovr_CalApplicationSuggestion_GetID(IntPtr obj);

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x1ACF704", Offset = "0x1ACF704", VA = "0x1ACF704")]
		public static string ovr_CalApplicationSuggestion_GetSocialContext(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x1ACF76C", Offset = "0x1ACF76C", VA = "0x1ACF76C")]
		private static extern IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x1ACF7EC", Offset = "0x1ACF7EC", VA = "0x1ACF7EC")]
		public static extern IntPtr ovr_CalApplicationSuggestionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x1ACF87C", Offset = "0x1ACF87C", VA = "0x1ACF87C")]
		public static extern UIntPtr ovr_CalApplicationSuggestionArray_GetSize(IntPtr obj);

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x1ACF8FC", Offset = "0x1ACF8FC", VA = "0x1ACF8FC")]
		public static string ovr_CloudStorage2UserDirectoryPathResponse_GetPath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x1ACF964", Offset = "0x1ACF964", VA = "0x1ACF964")]
		private static extern IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x1ACF9E4", Offset = "0x1ACF9E4", VA = "0x1ACF9E4")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x1ACFA64", Offset = "0x1ACFA64", VA = "0x1ACFA64")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x1ACFAE4", Offset = "0x1ACFAE4", VA = "0x1ACFAE4")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x1ACFB4C", Offset = "0x1ACFB4C", VA = "0x1ACFB4C")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x1ACFBCC", Offset = "0x1ACFBCC", VA = "0x1ACFBCC")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000700")]
		[Address(RVA = "0x1ACFCC8", Offset = "0x1ACFCC8", VA = "0x1ACFCC8")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000701")]
		[Address(RVA = "0x1ACFC48", Offset = "0x1ACFC48", VA = "0x1ACFC48")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x1ACFD48", Offset = "0x1ACFD48", VA = "0x1ACFD48")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000703")]
		[Address(RVA = "0x1ACFDB0", Offset = "0x1ACFDB0", VA = "0x1ACFDB0")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x1ACFE30", Offset = "0x1ACFE30", VA = "0x1ACFE30")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000705")]
		[Address(RVA = "0x1ACFE98", Offset = "0x1ACFE98", VA = "0x1ACFE98")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000706")]
		[Address(RVA = "0x1ACFF18", Offset = "0x1ACFF18", VA = "0x1ACFF18")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000707")]
		[Address(RVA = "0x1ACFF98", Offset = "0x1ACFF98", VA = "0x1ACFF98")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x6000708")]
		[Address(RVA = "0x1AD0018", Offset = "0x1AD0018", VA = "0x1AD0018")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000709")]
		[Address(RVA = "0x1AD0080", Offset = "0x1AD0080", VA = "0x1AD0080")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x600070A")]
		[Address(RVA = "0x1AD0100", Offset = "0x1AD0100", VA = "0x1AD0100")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600070B")]
		[Address(RVA = "0x1AD0168", Offset = "0x1AD0168", VA = "0x1AD0168")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600070C")]
		[Address(RVA = "0x1AD01E8", Offset = "0x1AD01E8", VA = "0x1AD01E8")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600070D")]
		[Address(RVA = "0x1AD0268", Offset = "0x1AD0268", VA = "0x1AD0268")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x1AD02E8", Offset = "0x1AD02E8", VA = "0x1AD02E8")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600070F")]
		[Address(RVA = "0x1AD0350", Offset = "0x1AD0350", VA = "0x1AD0350")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000710")]
		[Address(RVA = "0x1AD03D0", Offset = "0x1AD03D0", VA = "0x1AD03D0")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x1AD0460", Offset = "0x1AD0460", VA = "0x1AD0460")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000712")]
		[Address(RVA = "0x1AD04C8", Offset = "0x1AD04C8", VA = "0x1AD04C8")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000713")]
		[Address(RVA = "0x1AD0548", Offset = "0x1AD0548", VA = "0x1AD0548")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000714")]
		[Address(RVA = "0x1AD05C8", Offset = "0x1AD05C8", VA = "0x1AD05C8")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x1AD0650", Offset = "0x1AD0650", VA = "0x1AD0650")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000716")]
		[Address(RVA = "0x1AD06B8", Offset = "0x1AD06B8", VA = "0x1AD06B8")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x1AD0738", Offset = "0x1AD0738", VA = "0x1AD0738")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000718")]
		[Address(RVA = "0x1AD07A0", Offset = "0x1AD07A0", VA = "0x1AD07A0")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000719")]
		[Address(RVA = "0x1AD0820", Offset = "0x1AD0820", VA = "0x1AD0820")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x1AD08A0", Offset = "0x1AD08A0", VA = "0x1AD08A0")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600071B")]
		[Address(RVA = "0x1AD0908", Offset = "0x1AD0908", VA = "0x1AD0908")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x1AD0988", Offset = "0x1AD0988", VA = "0x1AD0988")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x600071D")]
		[Address(RVA = "0x1AD0A44", Offset = "0x1AD0A44", VA = "0x1AD0A44")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x1AC30E4", Offset = "0x1AC30E4", VA = "0x1AC30E4")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600071F")]
		[Address(RVA = "0x1AD0AD4", Offset = "0x1AD0AD4", VA = "0x1AD0AD4")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x6000720")]
		[Address(RVA = "0x1AC3064", Offset = "0x1AC3064", VA = "0x1AC3064")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x1AC315C", Offset = "0x1AC315C", VA = "0x1AC315C")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000722")]
		[Address(RVA = "0x1AD0B64", Offset = "0x1AD0B64", VA = "0x1AD0B64")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x1AD0BF4", Offset = "0x1AD0BF4", VA = "0x1AD0BF4")]
		public static string ovr_Destination_GetApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000724")]
		[Address(RVA = "0x1AD0C5C", Offset = "0x1AD0C5C", VA = "0x1AD0C5C")]
		private static extern IntPtr ovr_Destination_GetApiName_Native(IntPtr obj);

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x1AD0CDC", Offset = "0x1AD0CDC", VA = "0x1AD0CDC")]
		public static string ovr_Destination_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000726")]
		[Address(RVA = "0x1AD0D44", Offset = "0x1AD0D44", VA = "0x1AD0D44")]
		private static extern IntPtr ovr_Destination_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x1AD0DC4", Offset = "0x1AD0DC4", VA = "0x1AD0DC4")]
		public static string ovr_Destination_GetDisplayName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000728")]
		[Address(RVA = "0x1AD0E2C", Offset = "0x1AD0E2C", VA = "0x1AD0E2C")]
		private static extern IntPtr ovr_Destination_GetDisplayName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000729")]
		[Address(RVA = "0x1AD0EAC", Offset = "0x1AD0EAC", VA = "0x1AD0EAC")]
		public static extern IntPtr ovr_DestinationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x1AD0F3C", Offset = "0x1AD0F3C", VA = "0x1AD0F3C")]
		public static string ovr_DestinationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600072B")]
		[Address(RVA = "0x1AD0FA4", Offset = "0x1AD0FA4", VA = "0x1AD0FA4")]
		private static extern IntPtr ovr_DestinationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600072C")]
		[Address(RVA = "0x1AD1024", Offset = "0x1AD1024", VA = "0x1AD1024")]
		public static extern UIntPtr ovr_DestinationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600072D")]
		[Address(RVA = "0x1AD10A4", Offset = "0x1AD10A4", VA = "0x1AD10A4")]
		public static extern bool ovr_DestinationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600072E")]
		[Address(RVA = "0x1AD112C", Offset = "0x1AD112C", VA = "0x1AD112C")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x1AD11A8", Offset = "0x1AD11A8", VA = "0x1AD11A8")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000730")]
		[Address(RVA = "0x1AD1210", Offset = "0x1AD1210", VA = "0x1AD1210")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000731")]
		[Address(RVA = "0x1AD1290", Offset = "0x1AD1290", VA = "0x1AD1290")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x1AD1310", Offset = "0x1AD1310", VA = "0x1AD1310")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000733")]
		[Address(RVA = "0x1AD1378", Offset = "0x1AD1378", VA = "0x1AD1378")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000734")]
		[Address(RVA = "0x1AD13F8", Offset = "0x1AD13F8", VA = "0x1AD13F8")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000735")]
		[Address(RVA = "0x1AD1478", Offset = "0x1AD1478", VA = "0x1AD1478")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000736")]
		[Address(RVA = "0x1AD14F8", Offset = "0x1AD14F8", VA = "0x1AD14F8")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000737")]
		[Address(RVA = "0x1AD1578", Offset = "0x1AD1578", VA = "0x1AD1578")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x1AD1600", Offset = "0x1AD1600", VA = "0x1AD1600")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000739")]
		[Address(RVA = "0x1AD1668", Offset = "0x1AD1668", VA = "0x1AD1668")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x1AD16E8", Offset = "0x1AD16E8", VA = "0x1AD16E8")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600073B")]
		[Address(RVA = "0x1AD1750", Offset = "0x1AD1750", VA = "0x1AD1750")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x1AD17D0", Offset = "0x1AD17D0", VA = "0x1AD17D0")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600073D")]
		[Address(RVA = "0x1AD1838", Offset = "0x1AD1838", VA = "0x1AD1838")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600073E")]
		[Address(RVA = "0x1AD18B8", Offset = "0x1AD18B8", VA = "0x1AD18B8")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x1AD1938", Offset = "0x1AD1938", VA = "0x1AD1938")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000740")]
		[Address(RVA = "0x1AD19A0", Offset = "0x1AD19A0", VA = "0x1AD19A0")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000741")]
		[Address(RVA = "0x1AD1A20", Offset = "0x1AD1A20", VA = "0x1AD1A20")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000742")]
		[Address(RVA = "0x1AD1AB0", Offset = "0x1AD1AB0", VA = "0x1AD1AB0")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x1AD1B30", Offset = "0x1AD1B30", VA = "0x1AD1B30")]
		public static string ovr_LanguagePackInfo_GetEnglishName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000744")]
		[Address(RVA = "0x1AD1B98", Offset = "0x1AD1B98", VA = "0x1AD1B98")]
		private static extern IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(IntPtr obj);

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x1AD1C18", Offset = "0x1AD1C18", VA = "0x1AD1C18")]
		public static string ovr_LanguagePackInfo_GetNativeName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000746")]
		[Address(RVA = "0x1AD1C80", Offset = "0x1AD1C80", VA = "0x1AD1C80")]
		private static extern IntPtr ovr_LanguagePackInfo_GetNativeName_Native(IntPtr obj);

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x1AD1D00", Offset = "0x1AD1D00", VA = "0x1AD1D00")]
		public static string ovr_LanguagePackInfo_GetTag(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000748")]
		[Address(RVA = "0x1AD1D68", Offset = "0x1AD1D68", VA = "0x1AD1D68")]
		private static extern IntPtr ovr_LanguagePackInfo_GetTag_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000749")]
		[Address(RVA = "0x1AD1DE8", Offset = "0x1AD1DE8", VA = "0x1AD1DE8")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidBlock(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600074A")]
		[Address(RVA = "0x1AD1E70", Offset = "0x1AD1E70", VA = "0x1AD1E70")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidCancel(IntPtr obj);

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x1AD1EF8", Offset = "0x1AD1EF8", VA = "0x1AD1EF8")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600074C")]
		[Address(RVA = "0x1AD1F60", Offset = "0x1AD1F60", VA = "0x1AD1F60")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x1AD1FE0", Offset = "0x1AD1FE0", VA = "0x1AD1FE0")]
		public static string ovr_LaunchDetails_GetDestinationApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600074E")]
		[Address(RVA = "0x1AD2048", Offset = "0x1AD2048", VA = "0x1AD2048")]
		private static extern IntPtr ovr_LaunchDetails_GetDestinationApiName_Native(IntPtr obj);

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x1AD20C8", Offset = "0x1AD20C8", VA = "0x1AD20C8")]
		public static string ovr_LaunchDetails_GetLaunchSource(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000750")]
		[Address(RVA = "0x1AD2130", Offset = "0x1AD2130", VA = "0x1AD2130")]
		private static extern IntPtr ovr_LaunchDetails_GetLaunchSource_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000751")]
		[Address(RVA = "0x1AD21B0", Offset = "0x1AD21B0", VA = "0x1AD21B0")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000752")]
		[Address(RVA = "0x1AD2230", Offset = "0x1AD2230", VA = "0x1AD2230")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000753")]
		[Address(RVA = "0x1AD22B0", Offset = "0x1AD22B0", VA = "0x1AD22B0")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000754")]
		[Address(RVA = "0x1AD2330", Offset = "0x1AD2330", VA = "0x1AD2330")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000755")]
		[Address(RVA = "0x1AD23B8", Offset = "0x1AD23B8", VA = "0x1AD23B8")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000756")]
		[Address(RVA = "0x1AD2440", Offset = "0x1AD2440", VA = "0x1AD2440")]
		public static extern bool ovr_LaunchReportFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000757")]
		[Address(RVA = "0x1AD24C8", Offset = "0x1AD24C8", VA = "0x1AD24C8")]
		public static extern ulong ovr_LaunchReportFlowResult_GetUserReportId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000758")]
		[Address(RVA = "0x1AD2548", Offset = "0x1AD2548", VA = "0x1AD2548")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000759")]
		[Address(RVA = "0x1AD25D0", Offset = "0x1AD25D0", VA = "0x1AD25D0")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidUnblock(IntPtr obj);

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x1AD2658", Offset = "0x1AD2658", VA = "0x1AD2658")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600075B")]
		[Address(RVA = "0x1AD2754", Offset = "0x1AD2754", VA = "0x1AD2754")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600075C")]
		[Address(RVA = "0x1AD26D4", Offset = "0x1AD26D4", VA = "0x1AD26D4")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600075D")]
		[Address(RVA = "0x1AD27D4", Offset = "0x1AD27D4", VA = "0x1AD27D4")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600075E")]
		[Address(RVA = "0x1AD2854", Offset = "0x1AD2854", VA = "0x1AD2854")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x1AD28D4", Offset = "0x1AD28D4", VA = "0x1AD28D4")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000760")]
		[Address(RVA = "0x1AD293C", Offset = "0x1AD293C", VA = "0x1AD293C")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000761")]
		[Address(RVA = "0x1AD29BC", Offset = "0x1AD29BC", VA = "0x1AD29BC")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000762")]
		[Address(RVA = "0x1AD2A3C", Offset = "0x1AD2A3C", VA = "0x1AD2A3C")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x1AD2ACC", Offset = "0x1AD2ACC", VA = "0x1AD2ACC")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000764")]
		[Address(RVA = "0x1AD2B34", Offset = "0x1AD2B34", VA = "0x1AD2B34")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x1AD2BB4", Offset = "0x1AD2BB4", VA = "0x1AD2BB4")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000766")]
		[Address(RVA = "0x1AD2C1C", Offset = "0x1AD2C1C", VA = "0x1AD2C1C")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000767")]
		[Address(RVA = "0x1AD2C9C", Offset = "0x1AD2C9C", VA = "0x1AD2C9C")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000768")]
		[Address(RVA = "0x1AD2D1C", Offset = "0x1AD2D1C", VA = "0x1AD2D1C")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000769")]
		[Address(RVA = "0x1AD2D9C", Offset = "0x1AD2D9C", VA = "0x1AD2D9C")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600076A")]
		[Address(RVA = "0x1AD2E24", Offset = "0x1AD2E24", VA = "0x1AD2E24")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600076B")]
		[Address(RVA = "0x1AD2EAC", Offset = "0x1AD2EAC", VA = "0x1AD2EAC")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x1AD2F34", Offset = "0x1AD2F34", VA = "0x1AD2F34")]
		public static string ovr_LinkedAccount_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600076D")]
		[Address(RVA = "0x1AD2F9C", Offset = "0x1AD2F9C", VA = "0x1AD2F9C")]
		private static extern IntPtr ovr_LinkedAccount_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600076E")]
		[Address(RVA = "0x1AD301C", Offset = "0x1AD301C", VA = "0x1AD301C")]
		public static extern ServiceProvider ovr_LinkedAccount_GetServiceProvider(IntPtr obj);

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x1AD309C", Offset = "0x1AD309C", VA = "0x1AD309C")]
		public static string ovr_LinkedAccount_GetUserId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000770")]
		[Address(RVA = "0x1AD3104", Offset = "0x1AD3104", VA = "0x1AD3104")]
		private static extern IntPtr ovr_LinkedAccount_GetUserId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000771")]
		[Address(RVA = "0x1AD3184", Offset = "0x1AD3184", VA = "0x1AD3184")]
		public static extern IntPtr ovr_LinkedAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000772")]
		[Address(RVA = "0x1AD3214", Offset = "0x1AD3214", VA = "0x1AD3214")]
		public static extern UIntPtr ovr_LinkedAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000773")]
		[Address(RVA = "0x1AD3294", Offset = "0x1AD3294", VA = "0x1AD3294")]
		public static extern bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000774")]
		[Address(RVA = "0x1AD331C", Offset = "0x1AD331C", VA = "0x1AD331C")]
		public static extern LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000775")]
		[Address(RVA = "0x1AD339C", Offset = "0x1AD339C", VA = "0x1AD339C")]
		public static extern bool ovr_LivestreamingStatus_GetCommentsVisible(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000776")]
		[Address(RVA = "0x1AD3424", Offset = "0x1AD3424", VA = "0x1AD3424")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000777")]
		[Address(RVA = "0x1AD34AC", Offset = "0x1AD34AC", VA = "0x1AD34AC")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000778")]
		[Address(RVA = "0x1AD3534", Offset = "0x1AD3534", VA = "0x1AD3534")]
		public static extern int ovr_LivestreamingStatus_GetLivestreamingType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000779")]
		[Address(RVA = "0x1AD35B4", Offset = "0x1AD35B4", VA = "0x1AD35B4")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600077A")]
		[Address(RVA = "0x1AD363C", Offset = "0x1AD363C", VA = "0x1AD363C")]
		public static extern int ovr_LivestreamingVideoStats_GetCommentCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600077B")]
		[Address(RVA = "0x1AD36BC", Offset = "0x1AD36BC", VA = "0x1AD36BC")]
		public static extern int ovr_LivestreamingVideoStats_GetReactionCount(IntPtr obj);

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x1AD373C", Offset = "0x1AD373C", VA = "0x1AD373C")]
		public static string ovr_LivestreamingVideoStats_GetTotalViews(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600077D")]
		[Address(RVA = "0x1AD37A4", Offset = "0x1AD37A4", VA = "0x1AD37A4")]
		private static extern IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600077E")]
		[Address(RVA = "0x1AD3824", Offset = "0x1AD3824", VA = "0x1AD3824")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600077F")]
		[Address(RVA = "0x1AD38A4", Offset = "0x1AD38A4", VA = "0x1AD38A4")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000780")]
		[Address(RVA = "0x1AD3924", Offset = "0x1AD3924", VA = "0x1AD3924")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000781")]
		[Address(RVA = "0x1AD39AC", Offset = "0x1AD39AC", VA = "0x1AD39AC")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000782")]
		[Address(RVA = "0x1AD3A2C", Offset = "0x1AD3A2C", VA = "0x1AD3A2C")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000783")]
		[Address(RVA = "0x1AD3AAC", Offset = "0x1AD3AAC", VA = "0x1AD3AAC")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x1AD3B2C", Offset = "0x1AD3B2C", VA = "0x1AD3B2C")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000785")]
		[Address(RVA = "0x1AD3B94", Offset = "0x1AD3B94", VA = "0x1AD3B94")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000786")]
		[Address(RVA = "0x1AD3C14", Offset = "0x1AD3C14", VA = "0x1AD3C14")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000787")]
		[Address(RVA = "0x1AD3CA4", Offset = "0x1AD3CA4", VA = "0x1AD3CA4")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000788")]
		[Address(RVA = "0x1AD3D24", Offset = "0x1AD3D24", VA = "0x1AD3D24")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000789")]
		[Address(RVA = "0x1AD3DA4", Offset = "0x1AD3DA4", VA = "0x1AD3DA4")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x1AD3E24", Offset = "0x1AD3E24", VA = "0x1AD3E24")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600078B")]
		[Address(RVA = "0x1AD3E8C", Offset = "0x1AD3E8C", VA = "0x1AD3E8C")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600078C")]
		[Address(RVA = "0x1AD3F0C", Offset = "0x1AD3F0C", VA = "0x1AD3F0C")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600078D")]
		[Address(RVA = "0x1AD3F8C", Offset = "0x1AD3F8C", VA = "0x1AD3F8C")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x1AD401C", Offset = "0x1AD401C", VA = "0x1AD401C")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600078F")]
		[Address(RVA = "0x1AD4084", Offset = "0x1AD4084", VA = "0x1AD4084")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000790")]
		[Address(RVA = "0x1AD4104", Offset = "0x1AD4104", VA = "0x1AD4104")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000791")]
		[Address(RVA = "0x1AD4184", Offset = "0x1AD4184", VA = "0x1AD4184")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000792")]
		[Address(RVA = "0x1AD420C", Offset = "0x1AD420C", VA = "0x1AD420C")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000793")]
		[Address(RVA = "0x1AD428C", Offset = "0x1AD428C", VA = "0x1AD428C")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000794")]
		[Address(RVA = "0x1AD430C", Offset = "0x1AD430C", VA = "0x1AD430C")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000795")]
		[Address(RVA = "0x1AD438C", Offset = "0x1AD438C", VA = "0x1AD438C")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x1AD440C", Offset = "0x1AD440C", VA = "0x1AD440C")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000797")]
		[Address(RVA = "0x1AD4474", Offset = "0x1AD4474", VA = "0x1AD4474")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000798")]
		[Address(RVA = "0x1AD44F4", Offset = "0x1AD44F4", VA = "0x1AD44F4")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x1AD4574", Offset = "0x1AD4574", VA = "0x1AD4574")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600079A")]
		[Address(RVA = "0x1AD45DC", Offset = "0x1AD45DC", VA = "0x1AD45DC")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600079B")]
		[Address(RVA = "0x1AD465C", Offset = "0x1AD465C", VA = "0x1AD465C")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600079C")]
		[Address(RVA = "0x1AD46DC", Offset = "0x1AD46DC", VA = "0x1AD46DC")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600079D")]
		[Address(RVA = "0x1AD475C", Offset = "0x1AD475C", VA = "0x1AD475C")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x600079E")]
		[Address(RVA = "0x1AD47EC", Offset = "0x1AD47EC", VA = "0x1AD47EC")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600079F")]
		[Address(RVA = "0x1AD486C", Offset = "0x1AD486C", VA = "0x1AD486C")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x1AD48EC", Offset = "0x1AD48EC", VA = "0x1AD48EC")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x1AD496C", Offset = "0x1AD496C", VA = "0x1AD496C")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x1AD49FC", Offset = "0x1AD49FC", VA = "0x1AD49FC")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x1AD4A7C", Offset = "0x1AD4A7C", VA = "0x1AD4A7C")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x1AD4AFC", Offset = "0x1AD4AFC", VA = "0x1AD4AFC")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x1AD4B7C", Offset = "0x1AD4B7C", VA = "0x1AD4B7C")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x1AD4BE4", Offset = "0x1AD4BE4", VA = "0x1AD4BE4")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x1AD4C64", Offset = "0x1AD4C64", VA = "0x1AD4C64")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x1AD4CE4", Offset = "0x1AD4CE4", VA = "0x1AD4CE4")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x1AD4D64", Offset = "0x1AD4D64", VA = "0x1AD4D64")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x1AD4DEC", Offset = "0x1AD4DEC", VA = "0x1AD4DEC")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x1AD4E7C", Offset = "0x1AD4E7C", VA = "0x1AD4E7C")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x1AD4EFC", Offset = "0x1AD4EFC", VA = "0x1AD4EFC")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x1AD4F7C", Offset = "0x1AD4F7C", VA = "0x1AD4F7C")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x1AD4FFC", Offset = "0x1AD4FFC", VA = "0x1AD4FFC")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x1AD507C", Offset = "0x1AD507C", VA = "0x1AD507C")]
		public static extern double ovr_MatchmakingStats_GetSkillMean(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x1AD50FC", Offset = "0x1AD50FC", VA = "0x1AD50FC")]
		public static extern double ovr_MatchmakingStats_GetSkillStandardDeviation(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x1AD517C", Offset = "0x1AD517C", VA = "0x1AD517C")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x1AD51FC", Offset = "0x1AD51FC", VA = "0x1AD51FC")]
		public static extern IntPtr ovr_Message_GetAbuseReportRecording(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x1AD527C", Offset = "0x1AD527C", VA = "0x1AD527C")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x1AD52FC", Offset = "0x1AD52FC", VA = "0x1AD52FC")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x1AD537C", Offset = "0x1AD537C", VA = "0x1AD537C")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x1AD53FC", Offset = "0x1AD53FC", VA = "0x1AD53FC")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x1AD547C", Offset = "0x1AD547C", VA = "0x1AD547C")]
		public static extern IntPtr ovr_Message_GetAssetDetails(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x1AD54FC", Offset = "0x1AD54FC", VA = "0x1AD54FC")]
		public static extern IntPtr ovr_Message_GetAssetDetailsArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x1AD557C", Offset = "0x1AD557C", VA = "0x1AD557C")]
		public static extern IntPtr ovr_Message_GetAssetFileDeleteResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x1AD55FC", Offset = "0x1AD55FC", VA = "0x1AD55FC")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadCancelResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x1AD567C", Offset = "0x1AD567C", VA = "0x1AD567C")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x1AD56FC", Offset = "0x1AD56FC", VA = "0x1AD56FC")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x1AD577C", Offset = "0x1AD577C", VA = "0x1AD577C")]
		public static extern IntPtr ovr_Message_GetCalApplicationFinalized(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x1AD57FC", Offset = "0x1AD57FC", VA = "0x1AD57FC")]
		public static extern IntPtr ovr_Message_GetCalApplicationProposed(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x1AD587C", Offset = "0x1AD587C", VA = "0x1AD587C")]
		public static extern IntPtr ovr_Message_GetCalApplicationSuggestionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x1AD58FC", Offset = "0x1AD58FC", VA = "0x1AD58FC")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x1AD597C", Offset = "0x1AD597C", VA = "0x1AD597C")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x1AD59FC", Offset = "0x1AD59FC", VA = "0x1AD59FC")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x1AD5A7C", Offset = "0x1AD5A7C", VA = "0x1AD5A7C")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x1AD5AFC", Offset = "0x1AD5AFC", VA = "0x1AD5AFC")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x1AD5B7C", Offset = "0x1AD5B7C", VA = "0x1AD5B7C")]
		public static extern IntPtr ovr_Message_GetDestinationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x1AD5BFC", Offset = "0x1AD5BFC", VA = "0x1AD5BFC")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x1AD5C7C", Offset = "0x1AD5C7C", VA = "0x1AD5C7C")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x1AD5CFC", Offset = "0x1AD5CFC", VA = "0x1AD5CFC")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x1AD5D7C", Offset = "0x1AD5D7C", VA = "0x1AD5D7C")]
		public static extern IntPtr ovr_Message_GetLaunchBlockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x1AD5DFC", Offset = "0x1AD5DFC", VA = "0x1AD5DFC")]
		public static extern IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x1AD5E7C", Offset = "0x1AD5E7C", VA = "0x1AD5E7C")]
		public static extern IntPtr ovr_Message_GetLaunchReportFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x1AD5EFC", Offset = "0x1AD5EFC", VA = "0x1AD5EFC")]
		public static extern IntPtr ovr_Message_GetLaunchUnblockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x1AD5F7C", Offset = "0x1AD5F7C", VA = "0x1AD5F7C")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x1AD5FFC", Offset = "0x1AD5FFC", VA = "0x1AD5FFC")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x1AD607C", Offset = "0x1AD607C", VA = "0x1AD607C")]
		public static extern IntPtr ovr_Message_GetLinkedAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x1AD60FC", Offset = "0x1AD60FC", VA = "0x1AD60FC")]
		public static extern IntPtr ovr_Message_GetLivestreamingApplicationStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x1AD617C", Offset = "0x1AD617C", VA = "0x1AD617C")]
		public static extern IntPtr ovr_Message_GetLivestreamingStartResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x1AD61FC", Offset = "0x1AD61FC", VA = "0x1AD61FC")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x1AD627C", Offset = "0x1AD627C", VA = "0x1AD627C")]
		public static extern IntPtr ovr_Message_GetLivestreamingVideoStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x1AD62FC", Offset = "0x1AD62FC", VA = "0x1AD62FC")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x1AD637C", Offset = "0x1AD637C", VA = "0x1AD637C")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x1AD63FC", Offset = "0x1AD63FC", VA = "0x1AD63FC")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x1AD647C", Offset = "0x1AD647C", VA = "0x1AD647C")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x1AD64FC", Offset = "0x1AD64FC", VA = "0x1AD64FC")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x1AD657C", Offset = "0x1AD657C", VA = "0x1AD657C")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x1AD65FC", Offset = "0x1AD65FC", VA = "0x1AD65FC")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x1AD667C", Offset = "0x1AD667C", VA = "0x1AD667C")]
		public static extern IntPtr ovr_Message_GetNetSyncConnection(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x1AD66FC", Offset = "0x1AD66FC", VA = "0x1AD66FC")]
		public static extern IntPtr ovr_Message_GetNetSyncSessionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x1AD677C", Offset = "0x1AD677C", VA = "0x1AD677C")]
		public static extern IntPtr ovr_Message_GetNetSyncSessionsChangedNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x1AD67FC", Offset = "0x1AD67FC", VA = "0x1AD67FC")]
		public static extern IntPtr ovr_Message_GetNetSyncSetSessionPropertyResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x1AD687C", Offset = "0x1AD687C", VA = "0x1AD687C")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x1AD68FC", Offset = "0x1AD68FC", VA = "0x1AD68FC")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x1AD697C", Offset = "0x1AD697C", VA = "0x1AD697C")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x1AD69FC", Offset = "0x1AD69FC", VA = "0x1AD69FC")]
		public static extern IntPtr ovr_Message_GetPartyID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x1AD6A7C", Offset = "0x1AD6A7C", VA = "0x1AD6A7C")]
		public static extern IntPtr ovr_Message_GetPartyUpdateNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x1AD6AFC", Offset = "0x1AD6AFC", VA = "0x1AD6AFC")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x1AD6B7C", Offset = "0x1AD6B7C", VA = "0x1AD6B7C")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x1AD6BFC", Offset = "0x1AD6BFC", VA = "0x1AD6BFC")]
		public static extern IntPtr ovr_Message_GetPlatformInitialize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x1AD6C7C", Offset = "0x1AD6C7C", VA = "0x1AD6C7C")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x1AD6CFC", Offset = "0x1AD6CFC", VA = "0x1AD6CFC")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x1AD6D7C", Offset = "0x1AD6D7C", VA = "0x1AD6D7C")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x1AD6DFC", Offset = "0x1AD6DFC", VA = "0x1AD6DFC")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x1AD6E7C", Offset = "0x1AD6E7C", VA = "0x1AD6E7C")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x1AD6EFC", Offset = "0x1AD6EFC", VA = "0x1AD6EFC")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x1AD6F7C", Offset = "0x1AD6F7C", VA = "0x1AD6F7C")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x1AD6FFC", Offset = "0x1AD6FFC", VA = "0x1AD6FFC")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x1AD707C", Offset = "0x1AD707C", VA = "0x1AD707C")]
		public static extern IntPtr ovr_Message_GetSdkAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x1AD70FC", Offset = "0x1AD70FC", VA = "0x1AD70FC")]
		public static extern IntPtr ovr_Message_GetShareMediaResult(IntPtr obj);

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x1AD717C", Offset = "0x1AD717C", VA = "0x1AD717C")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x1AD71E4", Offset = "0x1AD71E4", VA = "0x1AD71E4")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x1AD7264", Offset = "0x1AD7264", VA = "0x1AD7264")]
		public static extern IntPtr ovr_Message_GetSystemPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x1AD72E4", Offset = "0x1AD72E4", VA = "0x1AD72E4")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x1AD7364", Offset = "0x1AD7364", VA = "0x1AD7364")]
		public static extern Message.MessageType ovr_Message_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x1AD73E4", Offset = "0x1AD73E4", VA = "0x1AD73E4")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x1AD7464", Offset = "0x1AD7464", VA = "0x1AD7464")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x1AD74E4", Offset = "0x1AD74E4", VA = "0x1AD74E4")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x1AD7564", Offset = "0x1AD7564", VA = "0x1AD7564")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x1AD75E4", Offset = "0x1AD75E4", VA = "0x1AD75E4")]
		public static extern IntPtr ovr_Message_GetUserReportID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x1AD7664", Offset = "0x1AD7664", VA = "0x1AD7664")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x1AD76EC", Offset = "0x1AD76EC", VA = "0x1AD76EC")]
		public static extern UIntPtr ovr_Microphone_GetNumSamplesAvailable(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x1AD776C", Offset = "0x1AD776C", VA = "0x1AD776C")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x1AD77EC", Offset = "0x1AD77EC", VA = "0x1AD77EC")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x1AD788C", Offset = "0x1AD788C", VA = "0x1AD788C")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000800")]
		[Address(RVA = "0x1AD792C", Offset = "0x1AD792C", VA = "0x1AD792C")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6000801")]
		[Address(RVA = "0x1AD79CC", Offset = "0x1AD79CC", VA = "0x1AD79CC")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x6000802")]
		[Address(RVA = "0x1AD7A5C", Offset = "0x1AD7A5C", VA = "0x1AD7A5C")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000803")]
		[Address(RVA = "0x1AD7ADC", Offset = "0x1AD7ADC", VA = "0x1AD7ADC")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000804")]
		[Address(RVA = "0x1AD7B5C", Offset = "0x1AD7B5C", VA = "0x1AD7B5C")]
		public static extern long ovr_NetSyncConnection_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000805")]
		[Address(RVA = "0x1AD7BDC", Offset = "0x1AD7BDC", VA = "0x1AD7BDC")]
		public static extern NetSyncDisconnectReason ovr_NetSyncConnection_GetDisconnectReason(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000806")]
		[Address(RVA = "0x1AD7C5C", Offset = "0x1AD7C5C", VA = "0x1AD7C5C")]
		public static extern ulong ovr_NetSyncConnection_GetSessionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000807")]
		[Address(RVA = "0x1AD7CDC", Offset = "0x1AD7CDC", VA = "0x1AD7CDC")]
		public static extern NetSyncConnectionStatus ovr_NetSyncConnection_GetStatus(IntPtr obj);

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x1AD7D5C", Offset = "0x1AD7D5C", VA = "0x1AD7D5C")]
		public static string ovr_NetSyncConnection_GetZoneId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000809")]
		[Address(RVA = "0x1AD7DC4", Offset = "0x1AD7DC4", VA = "0x1AD7DC4")]
		private static extern IntPtr ovr_NetSyncConnection_GetZoneId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600080A")]
		[Address(RVA = "0x1AD7E44", Offset = "0x1AD7E44", VA = "0x1AD7E44")]
		public static extern long ovr_NetSyncSession_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600080B")]
		[Address(RVA = "0x1AD7EC4", Offset = "0x1AD7EC4", VA = "0x1AD7EC4")]
		public static extern bool ovr_NetSyncSession_GetMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600080C")]
		[Address(RVA = "0x1AD7F4C", Offset = "0x1AD7F4C", VA = "0x1AD7F4C")]
		public static extern ulong ovr_NetSyncSession_GetSessionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600080D")]
		[Address(RVA = "0x1AD7FCC", Offset = "0x1AD7FCC", VA = "0x1AD7FCC")]
		public static extern ulong ovr_NetSyncSession_GetUserId(IntPtr obj);

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x1AD804C", Offset = "0x1AD804C", VA = "0x1AD804C")]
		public static string ovr_NetSyncSession_GetVoipGroup(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600080F")]
		[Address(RVA = "0x1AD80B4", Offset = "0x1AD80B4", VA = "0x1AD80B4")]
		private static extern IntPtr ovr_NetSyncSession_GetVoipGroup_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000810")]
		[Address(RVA = "0x1AD8134", Offset = "0x1AD8134", VA = "0x1AD8134")]
		public static extern IntPtr ovr_NetSyncSessionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000811")]
		[Address(RVA = "0x1AD81C4", Offset = "0x1AD81C4", VA = "0x1AD81C4")]
		public static extern UIntPtr ovr_NetSyncSessionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000812")]
		[Address(RVA = "0x1AD8244", Offset = "0x1AD8244", VA = "0x1AD8244")]
		public static extern long ovr_NetSyncSessionsChangedNotification_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000813")]
		[Address(RVA = "0x1AD82C4", Offset = "0x1AD82C4", VA = "0x1AD82C4")]
		public static extern IntPtr ovr_NetSyncSessionsChangedNotification_GetSessions(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000814")]
		[Address(RVA = "0x1AD8344", Offset = "0x1AD8344", VA = "0x1AD8344")]
		public static extern IntPtr ovr_NetSyncSetSessionPropertyResult_GetSession(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000815")]
		[Address(RVA = "0x1AD83C4", Offset = "0x1AD83C4", VA = "0x1AD83C4")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000816")]
		[Address(RVA = "0x1AD8444", Offset = "0x1AD8444", VA = "0x1AD8444")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000817")]
		[Address(RVA = "0x1AD84C4", Offset = "0x1AD84C4", VA = "0x1AD84C4")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000818")]
		[Address(RVA = "0x1AD8544", Offset = "0x1AD8544", VA = "0x1AD8544")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000819")]
		[Address(RVA = "0x1AD85C4", Offset = "0x1AD85C4", VA = "0x1AD85C4")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600081A")]
		[Address(RVA = "0x1AD8644", Offset = "0x1AD8644", VA = "0x1AD8644")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600081B")]
		[Address(RVA = "0x1AD86C4", Offset = "0x1AD86C4", VA = "0x1AD86C4")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600081C")]
		[Address(RVA = "0x1AD8744", Offset = "0x1AD8744", VA = "0x1AD8744")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600081D")]
		[Address(RVA = "0x1AD87C4", Offset = "0x1AD87C4", VA = "0x1AD87C4")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600081E")]
		[Address(RVA = "0x1AD8844", Offset = "0x1AD8844", VA = "0x1AD8844")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600081F")]
		[Address(RVA = "0x1AD88C4", Offset = "0x1AD88C4", VA = "0x1AD88C4")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000820")]
		[Address(RVA = "0x1AD8944", Offset = "0x1AD8944", VA = "0x1AD8944")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000821")]
		[Address(RVA = "0x1AD89C0", Offset = "0x1AD89C0", VA = "0x1AD89C0")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000822")]
		[Address(RVA = "0x1AD8A40", Offset = "0x1AD8A40", VA = "0x1AD8A40")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000823")]
		[Address(RVA = "0x1AD8ABC", Offset = "0x1AD8ABC", VA = "0x1AD8ABC")]
		public static extern PartyUpdateAction ovr_PartyUpdateNotification_GetAction(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000824")]
		[Address(RVA = "0x1AD8B3C", Offset = "0x1AD8B3C", VA = "0x1AD8B3C")]
		public static extern ulong ovr_PartyUpdateNotification_GetPartyId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000825")]
		[Address(RVA = "0x1AD8BBC", Offset = "0x1AD8BBC", VA = "0x1AD8BBC")]
		public static extern ulong ovr_PartyUpdateNotification_GetSenderId(IntPtr obj);

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x1AD8C3C", Offset = "0x1AD8C3C", VA = "0x1AD8C3C")]
		public static string ovr_PartyUpdateNotification_GetUpdateTimestamp(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000827")]
		[Address(RVA = "0x1AD8CA4", Offset = "0x1AD8CA4", VA = "0x1AD8CA4")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(IntPtr obj);

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x1AD8D24", Offset = "0x1AD8D24", VA = "0x1AD8D24")]
		public static string ovr_PartyUpdateNotification_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000829")]
		[Address(RVA = "0x1AD8D8C", Offset = "0x1AD8D8C", VA = "0x1AD8D8C")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600082A")]
		[Address(RVA = "0x1AD8E0C", Offset = "0x1AD8E0C", VA = "0x1AD8E0C")]
		public static extern ulong ovr_PartyUpdateNotification_GetUserId(IntPtr obj);

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x1AD8E8C", Offset = "0x1AD8E8C", VA = "0x1AD8E8C")]
		public static string ovr_PartyUpdateNotification_GetUserName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600082C")]
		[Address(RVA = "0x1AD8EF4", Offset = "0x1AD8EF4", VA = "0x1AD8EF4")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserName_Native(IntPtr obj);

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x1AD8F74", Offset = "0x1AD8F74", VA = "0x1AD8F74")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600082E")]
		[Address(RVA = "0x1AD8FDC", Offset = "0x1AD8FDC", VA = "0x1AD8FDC")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600082F")]
		[Address(RVA = "0x1AD905C", Offset = "0x1AD905C", VA = "0x1AD905C")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000830")]
		[Address(RVA = "0x1AD90EC", Offset = "0x1AD90EC", VA = "0x1AD90EC")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000831")]
		[Address(RVA = "0x1AD916C", Offset = "0x1AD916C", VA = "0x1AD916C")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000832")]
		[Address(RVA = "0x1AD91EC", Offset = "0x1AD91EC", VA = "0x1AD91EC")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000833")]
		[Address(RVA = "0x1AD926C", Offset = "0x1AD926C", VA = "0x1AD926C")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000834")]
		[Address(RVA = "0x1AD92F4", Offset = "0x1AD92F4", VA = "0x1AD92F4")]
		public static extern PlatformInitializeResult ovr_PlatformInitialize_GetResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000835")]
		[Address(RVA = "0x1AD9374", Offset = "0x1AD9374", VA = "0x1AD9374")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x1AD93F4", Offset = "0x1AD93F4", VA = "0x1AD93F4")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000837")]
		[Address(RVA = "0x1AD945C", Offset = "0x1AD945C", VA = "0x1AD945C")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x1AD94DC", Offset = "0x1AD94DC", VA = "0x1AD94DC")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000839")]
		[Address(RVA = "0x1AD9544", Offset = "0x1AD9544", VA = "0x1AD9544")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x1AD95C4", Offset = "0x1AD95C4", VA = "0x1AD95C4")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600083B")]
		[Address(RVA = "0x1AD962C", Offset = "0x1AD962C", VA = "0x1AD962C")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x1AD96AC", Offset = "0x1AD96AC", VA = "0x1AD96AC")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600083D")]
		[Address(RVA = "0x1AD9714", Offset = "0x1AD9714", VA = "0x1AD9714")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x1AD9794", Offset = "0x1AD9794", VA = "0x1AD9794")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600083F")]
		[Address(RVA = "0x1AD97FC", Offset = "0x1AD97FC", VA = "0x1AD97FC")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x1AD987C", Offset = "0x1AD987C", VA = "0x1AD987C")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000841")]
		[Address(RVA = "0x1AD98E4", Offset = "0x1AD98E4", VA = "0x1AD98E4")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000842")]
		[Address(RVA = "0x1AD9964", Offset = "0x1AD9964", VA = "0x1AD9964")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x1AD99F4", Offset = "0x1AD99F4", VA = "0x1AD99F4")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000844")]
		[Address(RVA = "0x1AD9A5C", Offset = "0x1AD9A5C", VA = "0x1AD9A5C")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000845")]
		[Address(RVA = "0x1AD9ADC", Offset = "0x1AD9ADC", VA = "0x1AD9ADC")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000846")]
		[Address(RVA = "0x1AD9B5C", Offset = "0x1AD9B5C", VA = "0x1AD9B5C")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x1AD9BE4", Offset = "0x1AD9BE4", VA = "0x1AD9BE4")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000848")]
		[Address(RVA = "0x1AD9C4C", Offset = "0x1AD9C4C", VA = "0x1AD9C4C")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x1AD9CCC", Offset = "0x1AD9CCC", VA = "0x1AD9CCC")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x600084A")]
		[Address(RVA = "0x1AD9D34", Offset = "0x1AD9D34", VA = "0x1AD9D34")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600084B")]
		[Address(RVA = "0x1AD9DB4", Offset = "0x1AD9DB4", VA = "0x1AD9DB4")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x1AD9E34", Offset = "0x1AD9E34", VA = "0x1AD9E34")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600084D")]
		[Address(RVA = "0x1AD9E9C", Offset = "0x1AD9E9C", VA = "0x1AD9E9C")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600084E")]
		[Address(RVA = "0x1AD9F1C", Offset = "0x1AD9F1C", VA = "0x1AD9F1C")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x1AD9FAC", Offset = "0x1AD9FAC", VA = "0x1AD9FAC")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000850")]
		[Address(RVA = "0x1ADA014", Offset = "0x1ADA014", VA = "0x1ADA014")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000851")]
		[Address(RVA = "0x1ADA094", Offset = "0x1ADA094", VA = "0x1ADA094")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000852")]
		[Address(RVA = "0x1ADA114", Offset = "0x1ADA114", VA = "0x1ADA114")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000853")]
		[Address(RVA = "0x1ADA19C", Offset = "0x1ADA19C", VA = "0x1ADA19C")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000854")]
		[Address(RVA = "0x1ADA21C", Offset = "0x1ADA21C", VA = "0x1ADA21C")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x1ADA29C", Offset = "0x1ADA29C", VA = "0x1ADA29C")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000856")]
		[Address(RVA = "0x1ADA304", Offset = "0x1ADA304", VA = "0x1ADA304")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000857")]
		[Address(RVA = "0x1ADA384", Offset = "0x1ADA384", VA = "0x1ADA384")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000858")]
		[Address(RVA = "0x1ADA404", Offset = "0x1ADA404", VA = "0x1ADA404")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000859")]
		[Address(RVA = "0x1ADA484", Offset = "0x1ADA484", VA = "0x1ADA484")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600085A")]
		[Address(RVA = "0x1ADA50C", Offset = "0x1ADA50C", VA = "0x1ADA50C")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600085B")]
		[Address(RVA = "0x1ADA58C", Offset = "0x1ADA58C", VA = "0x1ADA58C")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600085C")]
		[Address(RVA = "0x1ADA60C", Offset = "0x1ADA60C", VA = "0x1ADA60C")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600085D")]
		[Address(RVA = "0x1ADA68C", Offset = "0x1ADA68C", VA = "0x1ADA68C")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x1ADA70C", Offset = "0x1ADA70C", VA = "0x1ADA70C")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600085F")]
		[Address(RVA = "0x1ADA774", Offset = "0x1ADA774", VA = "0x1ADA774")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000860")]
		[Address(RVA = "0x1ADA7F4", Offset = "0x1ADA7F4", VA = "0x1ADA7F4")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000861")]
		[Address(RVA = "0x1ADA870", Offset = "0x1ADA870", VA = "0x1ADA870")]
		public static extern IntPtr ovr_Room_GetTeams(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000862")]
		[Address(RVA = "0x1ADA8EC", Offset = "0x1ADA8EC", VA = "0x1ADA8EC")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000863")]
		[Address(RVA = "0x1ADA96C", Offset = "0x1ADA96C", VA = "0x1ADA96C")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000864")]
		[Address(RVA = "0x1ADA9E8", Offset = "0x1ADA9E8", VA = "0x1ADA9E8")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000865")]
		[Address(RVA = "0x1ADAA68", Offset = "0x1ADAA68", VA = "0x1ADAA68")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x1ADAAF8", Offset = "0x1ADAAF8", VA = "0x1ADAAF8")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000867")]
		[Address(RVA = "0x1ADAB60", Offset = "0x1ADAB60", VA = "0x1ADAB60")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000868")]
		[Address(RVA = "0x1ADABE0", Offset = "0x1ADABE0", VA = "0x1ADABE0")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000869")]
		[Address(RVA = "0x1ADAC60", Offset = "0x1ADAC60", VA = "0x1ADAC60")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600086A")]
		[Address(RVA = "0x1ADACE8", Offset = "0x1ADACE8", VA = "0x1ADACE8")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600086B")]
		[Address(RVA = "0x1ADAD68", Offset = "0x1ADAD68", VA = "0x1ADAD68")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600086C")]
		[Address(RVA = "0x1ADADE8", Offset = "0x1ADADE8", VA = "0x1ADADE8")]
		public static extern ulong ovr_RoomInviteNotification_GetSenderID(IntPtr obj);

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x1ADAE68", Offset = "0x1ADAE68", VA = "0x1ADAE68")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x600086E")]
		[Address(RVA = "0x1ADAED0", Offset = "0x1ADAED0", VA = "0x1ADAED0")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600086F")]
		[Address(RVA = "0x1ADAF50", Offset = "0x1ADAF50", VA = "0x1ADAF50")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x1ADAFE0", Offset = "0x1ADAFE0", VA = "0x1ADAFE0")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000871")]
		[Address(RVA = "0x1ADB048", Offset = "0x1ADB048", VA = "0x1ADB048")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000872")]
		[Address(RVA = "0x1ADB0C8", Offset = "0x1ADB0C8", VA = "0x1ADB0C8")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000873")]
		[Address(RVA = "0x1ADB148", Offset = "0x1ADB148", VA = "0x1ADB148")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000874")]
		[Address(RVA = "0x1ADB1D0", Offset = "0x1ADB1D0", VA = "0x1ADB1D0")]
		public static extern SdkAccountType ovr_SdkAccount_GetAccountType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000875")]
		[Address(RVA = "0x1ADB250", Offset = "0x1ADB250", VA = "0x1ADB250")]
		public static extern ulong ovr_SdkAccount_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000876")]
		[Address(RVA = "0x1ADB2D0", Offset = "0x1ADB2D0", VA = "0x1ADB2D0")]
		public static extern IntPtr ovr_SdkAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000877")]
		[Address(RVA = "0x1ADB360", Offset = "0x1ADB360", VA = "0x1ADB360")]
		public static extern UIntPtr ovr_SdkAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000878")]
		[Address(RVA = "0x1ADB3E0", Offset = "0x1ADB3E0", VA = "0x1ADB3E0")]
		public static extern ShareMediaStatus ovr_ShareMediaResult_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000879")]
		[Address(RVA = "0x1ADB460", Offset = "0x1ADB460", VA = "0x1ADB460")]
		public static extern bool ovr_SystemPermission_GetHasPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600087A")]
		[Address(RVA = "0x1ADB4E8", Offset = "0x1ADB4E8", VA = "0x1ADB4E8")]
		public static extern PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600087B")]
		[Address(RVA = "0x1ADB568", Offset = "0x1ADB568", VA = "0x1ADB568")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600087C")]
		[Address(RVA = "0x1ADB5E8", Offset = "0x1ADB5E8", VA = "0x1ADB5E8")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600087D")]
		[Address(RVA = "0x1ADB668", Offset = "0x1ADB668", VA = "0x1ADB668")]
		public static extern IntPtr ovr_Team_GetAssignedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600087E")]
		[Address(RVA = "0x1ADB6E8", Offset = "0x1ADB6E8", VA = "0x1ADB6E8")]
		public static extern int ovr_Team_GetMaxUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600087F")]
		[Address(RVA = "0x1ADB768", Offset = "0x1ADB768", VA = "0x1ADB768")]
		public static extern int ovr_Team_GetMinUsers(IntPtr obj);

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x1ADB7E8", Offset = "0x1ADB7E8", VA = "0x1ADB7E8")]
		public static string ovr_Team_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000881")]
		[Address(RVA = "0x1ADB850", Offset = "0x1ADB850", VA = "0x1ADB850")]
		private static extern IntPtr ovr_Team_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000882")]
		[Address(RVA = "0x1ADB8D0", Offset = "0x1ADB8D0", VA = "0x1ADB8D0")]
		public static extern IntPtr ovr_TeamArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000883")]
		[Address(RVA = "0x1ADB960", Offset = "0x1ADB960", VA = "0x1ADB960")]
		public static extern UIntPtr ovr_TeamArray_GetSize(IntPtr obj);

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x1ADB9E0", Offset = "0x1ADB9E0", VA = "0x1ADB9E0")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000885")]
		[Address(RVA = "0x1ADBA48", Offset = "0x1ADBA48", VA = "0x1ADBA48")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000886")]
		[Address(RVA = "0x1ADBAC8", Offset = "0x1ADBAC8", VA = "0x1ADBAC8")]
		public static extern IntPtr ovr_TestUser_GetAppAccessArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000887")]
		[Address(RVA = "0x1ADBB48", Offset = "0x1ADBB48", VA = "0x1ADBB48")]
		public static extern IntPtr ovr_TestUser_GetFbAppAccessArray(IntPtr obj);

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x1ADBBC8", Offset = "0x1ADBBC8", VA = "0x1ADBBC8")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000889")]
		[Address(RVA = "0x1ADBC30", Offset = "0x1ADBC30", VA = "0x1ADBC30")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600088A")]
		[Address(RVA = "0x1ADBCB0", Offset = "0x1ADBCB0", VA = "0x1ADBCB0")]
		public static extern IntPtr ovr_TestUser_GetFriendAppAccessArray(IntPtr obj);

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x1ADBD30", Offset = "0x1ADBD30", VA = "0x1ADBD30")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600088C")]
		[Address(RVA = "0x1ADBD98", Offset = "0x1ADBD98", VA = "0x1ADBD98")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600088D")]
		[Address(RVA = "0x1ADBE18", Offset = "0x1ADBE18", VA = "0x1ADBE18")]
		public static extern ulong ovr_TestUser_GetUserFbid(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600088E")]
		[Address(RVA = "0x1ADBE98", Offset = "0x1ADBE98", VA = "0x1ADBE98")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x1ADBF18", Offset = "0x1ADBF18", VA = "0x1ADBF18")]
		public static string ovr_TestUserAppAccess_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000890")]
		[Address(RVA = "0x1ADBF80", Offset = "0x1ADBF80", VA = "0x1ADBF80")]
		private static extern IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000891")]
		[Address(RVA = "0x1ADC000", Offset = "0x1ADC000", VA = "0x1ADC000")]
		public static extern ulong ovr_TestUserAppAccess_GetAppId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000892")]
		[Address(RVA = "0x1ADC080", Offset = "0x1ADC080", VA = "0x1ADC080")]
		public static extern ulong ovr_TestUserAppAccess_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000893")]
		[Address(RVA = "0x1ADC100", Offset = "0x1ADC100", VA = "0x1ADC100")]
		public static extern IntPtr ovr_TestUserAppAccessArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000894")]
		[Address(RVA = "0x1ADC190", Offset = "0x1ADC190", VA = "0x1ADC190")]
		public static extern UIntPtr ovr_TestUserAppAccessArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000895")]
		[Address(RVA = "0x1ADC210", Offset = "0x1ADC210", VA = "0x1ADC210")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x1ADC290", Offset = "0x1ADC290", VA = "0x1ADC290")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000897")]
		[Address(RVA = "0x1ADC2F8", Offset = "0x1ADC2F8", VA = "0x1ADC2F8")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x1ADC378", Offset = "0x1ADC378", VA = "0x1ADC378")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000899")]
		[Address(RVA = "0x1ADC3E0", Offset = "0x1ADC3E0", VA = "0x1ADC3E0")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x1ADC460", Offset = "0x1ADC460", VA = "0x1ADC460")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600089B")]
		[Address(RVA = "0x1ADC4C8", Offset = "0x1ADC4C8", VA = "0x1ADC4C8")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x1ADC548", Offset = "0x1ADC548", VA = "0x1ADC548")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600089D")]
		[Address(RVA = "0x1ADC5B0", Offset = "0x1ADC5B0", VA = "0x1ADC5B0")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x1ADC630", Offset = "0x1ADC630", VA = "0x1ADC630")]
		public static string ovr_User_GetPresenceDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600089F")]
		[Address(RVA = "0x1ADC698", Offset = "0x1ADC698", VA = "0x1ADC698")]
		private static extern IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x1ADC718", Offset = "0x1ADC718", VA = "0x1ADC718")]
		public static string ovr_User_GetPresenceDestinationApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x1ADC780", Offset = "0x1ADC780", VA = "0x1ADC780")]
		private static extern IntPtr ovr_User_GetPresenceDestinationApiName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x1ADC800", Offset = "0x1ADC800", VA = "0x1ADC800")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x1ADC880", Offset = "0x1ADC880", VA = "0x1ADC880")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x1ADC8E8", Offset = "0x1ADC8E8", VA = "0x1ADC8E8")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x1ADC968", Offset = "0x1ADC968", VA = "0x1ADC968")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x1ADC9E8", Offset = "0x1ADC9E8", VA = "0x1ADC9E8")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x1ADCA68", Offset = "0x1ADCA68", VA = "0x1ADCA68")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x1ADCAF8", Offset = "0x1ADCAF8", VA = "0x1ADCAF8")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x1ADCB60", Offset = "0x1ADCB60", VA = "0x1ADCB60")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x1ADCBE0", Offset = "0x1ADCBE0", VA = "0x1ADCBE0")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x1ADCC60", Offset = "0x1ADCC60", VA = "0x1ADCC60")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x1ADCCE8", Offset = "0x1ADCCE8", VA = "0x1ADCCE8")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x1ADCD78", Offset = "0x1ADCD78", VA = "0x1ADCD78")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x1ADCDE0", Offset = "0x1ADCDE0", VA = "0x1ADCDE0")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x1ADCE60", Offset = "0x1ADCE60", VA = "0x1ADCE60")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x1ADCEE0", Offset = "0x1ADCEE0", VA = "0x1ADCEE0")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x1ADCF68", Offset = "0x1ADCF68", VA = "0x1ADCF68")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x1ADCFD0", Offset = "0x1ADCFD0", VA = "0x1ADCFD0")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x1ADD050", Offset = "0x1ADD050", VA = "0x1ADD050")]
		public static extern bool ovr_UserReportID_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1ADD0D8", Offset = "0x1ADD0D8", VA = "0x1ADD0D8")]
		public static extern ulong ovr_UserReportID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x1ADD158", Offset = "0x1ADD158", VA = "0x1ADD158")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x1ADD1F8", Offset = "0x1ADD1F8", VA = "0x1ADD1F8")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x1ADD298", Offset = "0x1ADD298", VA = "0x1ADD298")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x1ADD338", Offset = "0x1ADD338", VA = "0x1ADD338")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x1ADD3D8", Offset = "0x1ADD3D8", VA = "0x1ADD3D8")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x1ABF19C", Offset = "0x1ABF19C", VA = "0x1ABF19C")]
		public static extern IntPtr ovr_AbuseReportOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x1ABF524", Offset = "0x1ABF524", VA = "0x1ABF524")]
		public static extern void ovr_AbuseReportOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x1ABF288", Offset = "0x1ABF288", VA = "0x1ABF288")]
		public static extern void ovr_AbuseReportOptions_SetPreventPeopleChooser(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x1ABF390", Offset = "0x1ABF390", VA = "0x1ABF390")]
		public static extern void ovr_AbuseReportOptions_SetReportType(IntPtr handle, AbuseReportType value);

		[PreserveSig]
		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x1AC0F28", Offset = "0x1AC0F28", VA = "0x1AC0F28")]
		public static extern IntPtr ovr_ApplicationOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x1AC1174", Offset = "0x1AC1174", VA = "0x1AC1174")]
		public static extern void ovr_ApplicationOptions_Destroy(IntPtr handle);

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x1AC1014", Offset = "0x1AC1014", VA = "0x1AC1014")]
		public static void ovr_ApplicationOptions_SetDeeplinkMessage(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x1ADD458", Offset = "0x1ADD458", VA = "0x1ADD458")]
		private static extern void ovr_ApplicationOptions_SetDeeplinkMessage_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x1ADD4E8", Offset = "0x1ADD4E8", VA = "0x1ADD4E8")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x1ADD55C", Offset = "0x1ADD55C", VA = "0x1ADD55C")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x1ADD5DC", Offset = "0x1ADD5DC", VA = "0x1ADD5DC")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x1ADD6A8", Offset = "0x1ADD6A8", VA = "0x1ADD6A8")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x1ADD740", Offset = "0x1ADD740", VA = "0x1ADD740")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x1ADD7C0", Offset = "0x1ADD7C0", VA = "0x1ADD7C0")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x1ADD850", Offset = "0x1ADD850", VA = "0x1ADD850")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x1ADD8E0", Offset = "0x1ADD8E0", VA = "0x1ADD8E0")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x1ADD970", Offset = "0x1ADD970", VA = "0x1ADD970")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x1ADD9F0", Offset = "0x1ADD9F0", VA = "0x1ADD9F0")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x1ADDAA4", Offset = "0x1ADDAA4", VA = "0x1ADDAA4")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x1ADDB3C", Offset = "0x1ADDB3C", VA = "0x1ADDB3C")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x1ADDBF8", Offset = "0x1ADDBF8", VA = "0x1ADDBF8")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x1ADDC98", Offset = "0x1ADDC98", VA = "0x1ADDC98")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x1ADDD64", Offset = "0x1ADDD64", VA = "0x1ADDD64")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x1ADDDFC", Offset = "0x1ADDDFC", VA = "0x1ADDDFC")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x1ADDE7C", Offset = "0x1ADDE7C", VA = "0x1ADDE7C")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x1ADDF0C", Offset = "0x1ADDF0C", VA = "0x1ADDF0C")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x1ADDFB8", Offset = "0x1ADDFB8", VA = "0x1ADDFB8")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x1ADE048", Offset = "0x1ADE048", VA = "0x1ADE048")]
		public static extern IntPtr ovr_NetSyncOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x1ADE0BC", Offset = "0x1ADE0BC", VA = "0x1ADE0BC")]
		public static extern void ovr_NetSyncOptions_Destroy(IntPtr handle);

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x1ADE13C", Offset = "0x1ADE13C", VA = "0x1ADE13C")]
		public static void ovr_NetSyncOptions_SetVoipGroup(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x1ADE1E8", Offset = "0x1ADE1E8", VA = "0x1ADE1E8")]
		private static extern void ovr_NetSyncOptions_SetVoipGroup_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x1ADE278", Offset = "0x1ADE278", VA = "0x1ADE278")]
		public static extern void ovr_NetSyncOptions_SetVoipStreamDefault(IntPtr handle, NetSyncVoipStreamMode value);

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x1ADE308", Offset = "0x1ADE308", VA = "0x1ADE308")]
		public static void ovr_NetSyncOptions_SetZoneId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x1ADE3B4", Offset = "0x1ADE3B4", VA = "0x1ADE3B4")]
		private static extern void ovr_NetSyncOptions_SetZoneId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x1ADE444", Offset = "0x1ADE444", VA = "0x1ADE444")]
		public static extern IntPtr ovr_RichPresenceOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x1ADE4B8", Offset = "0x1ADE4B8", VA = "0x1ADE4B8")]
		public static extern void ovr_RichPresenceOptions_Destroy(IntPtr handle);

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x1ADE538", Offset = "0x1ADE538", VA = "0x1ADE538")]
		public static void ovr_RichPresenceOptions_SetApiName(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x1ADE5E4", Offset = "0x1ADE5E4", VA = "0x1ADE5E4")]
		private static extern void ovr_RichPresenceOptions_SetApiName_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x1ADE674", Offset = "0x1ADE674", VA = "0x1ADE674")]
		public static void ovr_RichPresenceOptions_SetArgsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x1ADE740", Offset = "0x1ADE740", VA = "0x1ADE740")]
		private static extern void ovr_RichPresenceOptions_SetArgsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x1ADE7D8", Offset = "0x1ADE7D8", VA = "0x1ADE7D8")]
		public static extern void ovr_RichPresenceOptions_ClearArgs(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x1ADE858", Offset = "0x1ADE858", VA = "0x1ADE858")]
		public static extern void ovr_RichPresenceOptions_SetCurrentCapacity(IntPtr handle, uint value);

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x1ADE8E8", Offset = "0x1ADE8E8", VA = "0x1ADE8E8")]
		public static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x1ADE994", Offset = "0x1ADE994", VA = "0x1ADE994")]
		private static extern void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x1ADEA24", Offset = "0x1ADEA24", VA = "0x1ADEA24")]
		public static void ovr_RichPresenceOptions_SetEndTime(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x1ADEAA0", Offset = "0x1ADEAA0", VA = "0x1ADEAA0")]
		private static extern void ovr_RichPresenceOptions_SetEndTime_Native(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x1ADEB30", Offset = "0x1ADEB30", VA = "0x1ADEB30")]
		public static extern void ovr_RichPresenceOptions_SetExtraContext(IntPtr handle, RichPresenceExtraContext value);

		[PreserveSig]
		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x1ADEBC0", Offset = "0x1ADEBC0", VA = "0x1ADEBC0")]
		public static extern void ovr_RichPresenceOptions_SetIsIdle(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x1ADEC50", Offset = "0x1ADEC50", VA = "0x1ADEC50")]
		public static extern void ovr_RichPresenceOptions_SetIsJoinable(IntPtr handle, bool value);

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x1ADECE0", Offset = "0x1ADECE0", VA = "0x1ADECE0")]
		public static void ovr_RichPresenceOptions_SetJoinableId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x1ADED8C", Offset = "0x1ADED8C", VA = "0x1ADED8C")]
		private static extern void ovr_RichPresenceOptions_SetJoinableId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x1ADEE1C", Offset = "0x1ADEE1C", VA = "0x1ADEE1C")]
		public static extern void ovr_RichPresenceOptions_SetMaxCapacity(IntPtr handle, uint value);

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x1ADEEAC", Offset = "0x1ADEEAC", VA = "0x1ADEEAC")]
		public static void ovr_RichPresenceOptions_SetStartTime(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x1ADEF28", Offset = "0x1ADEF28", VA = "0x1ADEF28")]
		private static extern void ovr_RichPresenceOptions_SetStartTime_Native(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x1ADEFB8", Offset = "0x1ADEFB8", VA = "0x1ADEFB8")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x1ADF02C", Offset = "0x1ADF02C", VA = "0x1ADF02C")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x1ADF0AC", Offset = "0x1ADF0AC", VA = "0x1ADF0AC")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x1ADF178", Offset = "0x1ADF178", VA = "0x1ADF178")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x1ADF210", Offset = "0x1ADF210", VA = "0x1ADF210")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x1ADF290", Offset = "0x1ADF290", VA = "0x1ADF290")]
		public static extern void ovr_RoomOptions_SetExcludeRecentlyMet(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x1ADF320", Offset = "0x1ADF320", VA = "0x1ADF320")]
		public static extern void ovr_RoomOptions_SetMaxUserResults(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x1ADF3B0", Offset = "0x1ADF3B0", VA = "0x1ADF3B0")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x1ADF440", Offset = "0x1ADF440", VA = "0x1ADF440")]
		public static extern void ovr_RoomOptions_SetRecentlyMetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x1ADF4D0", Offset = "0x1ADF4D0", VA = "0x1ADF4D0")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x1ADF560", Offset = "0x1ADF560", VA = "0x1ADF560")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x1ADF5F0", Offset = "0x1ADF5F0", VA = "0x1ADF5F0")]
		public static extern IntPtr ovr_UserOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x1ADF664", Offset = "0x1ADF664", VA = "0x1ADF664")]
		public static extern void ovr_UserOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x1ADF6E4", Offset = "0x1ADF6E4", VA = "0x1ADF6E4")]
		public static extern void ovr_UserOptions_SetMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x1ADF774", Offset = "0x1ADF774", VA = "0x1ADF774")]
		public static extern void ovr_UserOptions_AddServiceProvider(IntPtr handle, ServiceProvider value);

		[PreserveSig]
		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x1ADF804", Offset = "0x1ADF804", VA = "0x1ADF804")]
		public static extern void ovr_UserOptions_ClearServiceProviders(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000900")]
		[Address(RVA = "0x1ADF884", Offset = "0x1ADF884", VA = "0x1ADF884")]
		public static extern void ovr_UserOptions_SetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6000901")]
		[Address(RVA = "0x1ADF914", Offset = "0x1ADF914", VA = "0x1ADF914")]
		public static extern IntPtr ovr_VoipOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000902")]
		[Address(RVA = "0x1ADF988", Offset = "0x1ADF988", VA = "0x1ADF988")]
		public static extern void ovr_VoipOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000903")]
		[Address(RVA = "0x1ADFA08", Offset = "0x1ADFA08", VA = "0x1ADFA08")]
		public static extern void ovr_VoipOptions_SetBitrateForNewConnections(IntPtr handle, VoipBitrate value);

		[PreserveSig]
		[Token(Token = "0x6000904")]
		[Address(RVA = "0x1ADFA98", Offset = "0x1ADFA98", VA = "0x1ADFA98")]
		public static extern void ovr_VoipOptions_SetCreateNewConnectionUseDtx(IntPtr handle, VoipDtxState value);

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x1ADFB28", Offset = "0x1ADFB28", VA = "0x1ADFB28")]
		public CAPI()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public static class Callback
	{
		[Token(Token = "0x20002CB")]
		private class RequestCallback
		{
			[Token(Token = "0x4000BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Message.Callback messageCallback;

			[Token(Token = "0x60010CF")]
			[Address(RVA = "0xF7255C", Offset = "0xF7255C", VA = "0xF7255C")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x60010D0")]
			[Address(RVA = "0xF71DAC", Offset = "0xF71DAC", VA = "0xF71DAC")]
			public RequestCallback(Message.Callback callback)
			{
			}

			[Token(Token = "0x60010D1")]
			[Address(RVA = "0xF72564", Offset = "0xF72564", VA = "0xF72564", Slot = "4")]
			public virtual void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x20002CC")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4000BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Message<T>.Callback callback;

			[Token(Token = "0x60010D2")]
			public RequestCallback(Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x60010D3")]
			public override void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, Request> requestIDsToRequests;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool hasRegisteredRoomInviteNotificationHandler;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<Message> pendingRoomInviteNotifications;

		[Token(Token = "0x6000907")]
		internal static void SetNotificationCallback<T>(Message.MessageType type, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0xF71CA8", Offset = "0xF71CA8", VA = "0xF71CA8")]
		internal static void SetNotificationCallback(Message.MessageType type, Message.Callback callback)
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0xF71DE0", Offset = "0xF71DE0", VA = "0xF71DE0")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0xF71EB0", Offset = "0xF71EB0", VA = "0xF71EB0")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0xF721C0", Offset = "0xF721C0", VA = "0xF721C0")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0xF72258", Offset = "0xF72258", VA = "0xF72258")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0xF722F4", Offset = "0xF722F4", VA = "0xF722F4")]
		private static void FlushRoomInviteNotificationQueue()
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0xF72020", Offset = "0xF72020", VA = "0xF72020")]
		internal static void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public class CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[PreserveSig]
		[Token(Token = "0x6000910")]
		[Address(RVA = "0xF72908", Offset = "0xF72908", VA = "0xF72908")]
		private static extern void ovr_UnityResetTestPlatform();

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xF72978", Offset = "0xF72978", VA = "0xF72978")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xF72A74", Offset = "0xF72A74", VA = "0xF72A74")]
		private void Update()
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xF72B00", Offset = "0xF72B00", VA = "0xF72B00")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xF72B04", Offset = "0xF72B04", VA = "0xF72B04")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xF72B60", Offset = "0xF72B60", VA = "0xF72B60")]
		public CallbackRunner()
		{
		}
	}
	[Token(Token = "0x2000100")]
	public enum CloudStorageDataStatus
	{
		[Token(Token = "0x40005DA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AAD8", Offset = "0xA8AAD8")]
		Unknown,
		[Token(Token = "0x40005DB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AB10", Offset = "0xA8AB10")]
		InSync,
		[Token(Token = "0x40005DC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AB48", Offset = "0xA8AB48")]
		NeedsDownload,
		[Token(Token = "0x40005DD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AB80", Offset = "0xA8AB80")]
		RemoteDownloading,
		[Token(Token = "0x40005DE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8ABB8", Offset = "0xA8ABB8")]
		NeedsUpload,
		[Token(Token = "0x40005DF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8ABF0", Offset = "0xA8ABF0")]
		LocalUploading,
		[Token(Token = "0x40005E0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AC28", Offset = "0xA8AC28")]
		InConflict
	}
	[Token(Token = "0x2000101")]
	public enum CloudStorageUpdateStatus
	{
		[Token(Token = "0x40005E2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AC60", Offset = "0xA8AC60")]
		Unknown,
		[Token(Token = "0x40005E3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AC98", Offset = "0xA8AC98")]
		Ok,
		[Token(Token = "0x40005E4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8ACD0", Offset = "0xA8ACD0")]
		BetterVersionStored,
		[Token(Token = "0x40005E5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AD08", Offset = "0xA8AD08")]
		ManualMergeRequired
	}
	[Token(Token = "0x2000102")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x6000916")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x6000917")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x6000918")]
		void Update();

		[Token(Token = "0x6000919")]
		int PeekSizeElements();
	}
	[Token(Token = "0x2000103")]
	public enum KeyValuePairType
	{
		[Token(Token = "0x40005E7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AD40", Offset = "0xA8AD40")]
		String,
		[Token(Token = "0x40005E8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AD78", Offset = "0xA8AD78")]
		Int,
		[Token(Token = "0x40005E9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8ADB0", Offset = "0xA8ADB0")]
		Double,
		[Token(Token = "0x40005EA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8ADE8", Offset = "0xA8ADE8")]
		Unknown
	}
	[Token(Token = "0x2000104")]
	public enum LaunchType
	{
		[Token(Token = "0x40005EC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AE20", Offset = "0xA8AE20")]
		Unknown,
		[Token(Token = "0x40005ED")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AE58", Offset = "0xA8AE58")]
		Normal,
		[Token(Token = "0x40005EE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AE90", Offset = "0xA8AE90")]
		Invite,
		[Token(Token = "0x40005EF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AEC8", Offset = "0xA8AEC8")]
		Coordinated,
		[Token(Token = "0x40005F0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AF00", Offset = "0xA8AF00")]
		Deeplink
	}
	[Token(Token = "0x2000105")]
	public enum LeaderboardFilterType
	{
		[Token(Token = "0x40005F2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AF38", Offset = "0xA8AF38")]
		None,
		[Token(Token = "0x40005F3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AF70", Offset = "0xA8AF70")]
		Friends,
		[Token(Token = "0x40005F4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AFA8", Offset = "0xA8AFA8")]
		Unknown
	}
	[Token(Token = "0x2000106")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x40005F6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8AFE0", Offset = "0xA8AFE0")]
		Top,
		[Token(Token = "0x40005F7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B018", Offset = "0xA8B018")]
		CenteredOnViewer,
		[Token(Token = "0x40005F8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B050", Offset = "0xA8B050")]
		CenteredOnViewerOrTop,
		[Token(Token = "0x40005F9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B088", Offset = "0xA8B088")]
		Unknown
	}
	[Token(Token = "0x2000107")]
	public enum LivestreamingAudience
	{
		[Token(Token = "0x40005FB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B0C0", Offset = "0xA8B0C0")]
		Unknown,
		[Token(Token = "0x40005FC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B0F8", Offset = "0xA8B0F8")]
		Public,
		[Token(Token = "0x40005FD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B130", Offset = "0xA8B130")]
		Friends,
		[Token(Token = "0x40005FE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B168", Offset = "0xA8B168")]
		OnlyMe
	}
	[Token(Token = "0x2000108")]
	public enum LivestreamingStartStatus
	{
		[Token(Token = "0x4000600")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B1A0", Offset = "0xA8B1A0")]
		Success = 1,
		[Token(Token = "0x4000601")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B1D8", Offset = "0xA8B1D8")]
		Unknown = 0,
		[Token(Token = "0x4000602")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B210", Offset = "0xA8B210")]
		NoPackageSet = -1,
		[Token(Token = "0x4000603")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B248", Offset = "0xA8B248")]
		NoFbConnect = -2,
		[Token(Token = "0x4000604")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B280", Offset = "0xA8B280")]
		NoSessionId = -3,
		[Token(Token = "0x4000605")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B2B8", Offset = "0xA8B2B8")]
		MissingParameters = -4
	}
	[Token(Token = "0x2000109")]
	public enum MatchmakingCriterionImportance
	{
		[Token(Token = "0x4000607")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B2F0", Offset = "0xA8B2F0")]
		Required,
		[Token(Token = "0x4000608")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B328", Offset = "0xA8B328")]
		High,
		[Token(Token = "0x4000609")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B360", Offset = "0xA8B360")]
		Medium,
		[Token(Token = "0x400060A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B398", Offset = "0xA8B398")]
		Low,
		[Token(Token = "0x400060B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B3D0", Offset = "0xA8B3D0")]
		Unknown
	}
	[Token(Token = "0x200010A")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x600091A")]
		[Address(RVA = "0xF77140", Offset = "0xF77140", VA = "0xF77140")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xF771B8", Offset = "0xF771B8", VA = "0xF771B8")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xF7723C", Offset = "0xF7723C", VA = "0xF7723C")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0xF772A8", Offset = "0xF772A8", VA = "0xF772A8")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0xF77324", Offset = "0xF77324", VA = "0xF77324")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0xF773A0", Offset = "0xF773A0", VA = "0xF773A0")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0xF7741C", Offset = "0xF7741C", VA = "0xF7741C")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0xF77488", Offset = "0xF77488", VA = "0xF77488")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0xF7750C", Offset = "0xF7750C", VA = "0xF7750C")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0xF77598", Offset = "0xF77598", VA = "0xF77598")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0xF7761C", Offset = "0xF7761C", VA = "0xF7761C")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0xF77688", Offset = "0xF77688", VA = "0xF77688")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0xF77704", Offset = "0xF77704", VA = "0xF77704")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0xF760AC", Offset = "0xF760AC", VA = "0xF760AC")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0xF77780", Offset = "0xF77780", VA = "0xF77780", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x200010B")]
	public enum MatchmakingStatApproach
	{
		[Token(Token = "0x400060E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B408", Offset = "0xA8B408")]
		Unknown,
		[Token(Token = "0x400060F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B440", Offset = "0xA8B440")]
		Trailing,
		[Token(Token = "0x4000610")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B478", Offset = "0xA8B478")]
		Swingy
	}
	[Token(Token = "0x200010C")]
	public enum MediaContentType
	{
		[Token(Token = "0x4000612")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B4B0", Offset = "0xA8B4B0")]
		Unknown,
		[Token(Token = "0x4000613")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B4E8", Offset = "0xA8B4E8")]
		Photo
	}
	[Token(Token = "0x200010D")]
	public abstract class Message<T> : Message
	{
		[Token(Token = "0x20002CD")]
		public new delegate void Callback(Message<T> message);

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x17000092")]
		public T Data
		{
			[Token(Token = "0x600092A")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6000929")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x600092B")]
		protected abstract T GetDataFromMessage(IntPtr c_message);
	}
	[Token(Token = "0x200010E")]
	public class Message
	{
		[Token(Token = "0x20002CE")]
		public delegate void Callback(Message message);

		[Token(Token = "0x20002CF")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4000BDE")]
			Unknown = 0u,
			[Token(Token = "0x4000BDF")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4000BE0")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4000BE1")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4000BE2")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x4000BE3")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x4000BE4")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x4000BE5")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x4000BE6")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x4000BE7")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x4000BE8")]
			ApplicationLifecycle_GetRegisteredPIDs = 82169698u,
			[Token(Token = "0x4000BE9")]
			ApplicationLifecycle_GetSessionKey = 984570141u,
			[Token(Token = "0x4000BEA")]
			ApplicationLifecycle_RegisterSessionKey = 1303818232u,
			[Token(Token = "0x4000BEB")]
			Application_GetVersion = 1751583246u,
			[Token(Token = "0x4000BEC")]
			Application_LaunchOtherApp = 1424151032u,
			[Token(Token = "0x4000BED")]
			AssetFile_Delete = 1834842246u,
			[Token(Token = "0x4000BEE")]
			AssetFile_DeleteById = 1525206354u,
			[Token(Token = "0x4000BEF")]
			AssetFile_DeleteByName = 1108001231u,
			[Token(Token = "0x4000BF0")]
			AssetFile_Download = 289710021u,
			[Token(Token = "0x4000BF1")]
			AssetFile_DownloadById = 755009938u,
			[Token(Token = "0x4000BF2")]
			AssetFile_DownloadByName = 1664536314u,
			[Token(Token = "0x4000BF3")]
			AssetFile_DownloadCancel = 134927303u,
			[Token(Token = "0x4000BF4")]
			AssetFile_DownloadCancelById = 1365611796u,
			[Token(Token = "0x4000BF5")]
			AssetFile_DownloadCancelByName = 1147858170u,
			[Token(Token = "0x4000BF6")]
			AssetFile_GetList = 1258057588u,
			[Token(Token = "0x4000BF7")]
			AssetFile_Status = 47394656u,
			[Token(Token = "0x4000BF8")]
			AssetFile_StatusById = 1570069816u,
			[Token(Token = "0x4000BF9")]
			AssetFile_StatusByName = 1104140880u,
			[Token(Token = "0x4000BFA")]
			CloudStorage2_GetUserDirectoryPath = 1990471406u,
			[Token(Token = "0x4000BFB")]
			CloudStorage_Delete = 685393261u,
			[Token(Token = "0x4000BFC")]
			CloudStorage_GetNextCloudStorageMetadataArrayPage = 1544004335u,
			[Token(Token = "0x4000BFD")]
			CloudStorage_Load = 1082420033u,
			[Token(Token = "0x4000BFE")]
			CloudStorage_LoadBucketMetadata = 1931977997u,
			[Token(Token = "0x4000BFF")]
			CloudStorage_LoadConflictMetadata = 1146770162u,
			[Token(Token = "0x4000C00")]
			CloudStorage_LoadHandle = 845863478u,
			[Token(Token = "0x4000C01")]
			CloudStorage_LoadMetadata = 65446546u,
			[Token(Token = "0x4000C02")]
			CloudStorage_ResolveKeepLocal = 811109637u,
			[Token(Token = "0x4000C03")]
			CloudStorage_ResolveKeepRemote = 1965400838u,
			[Token(Token = "0x4000C04")]
			CloudStorage_Save = 1270570030u,
			[Token(Token = "0x4000C05")]
			Entitlement_GetIsViewerEntitled = 409688241u,
			[Token(Token = "0x4000C06")]
			IAP_ConsumePurchase = 532378329u,
			[Token(Token = "0x4000C07")]
			IAP_GetNextProductArrayPage = 467225263u,
			[Token(Token = "0x4000C08")]
			IAP_GetNextPurchaseArrayPage = 1196886677u,
			[Token(Token = "0x4000C09")]
			IAP_GetProductsBySKU = 2124073717u,
			[Token(Token = "0x4000C0A")]
			IAP_GetViewerPurchases = 974095385u,
			[Token(Token = "0x4000C0B")]
			IAP_GetViewerPurchasesDurableCache = 1666817579u,
			[Token(Token = "0x4000C0C")]
			IAP_LaunchCheckoutFlow = 1067126029u,
			[Token(Token = "0x4000C0D")]
			LanguagePack_GetCurrent = 529592533u,
			[Token(Token = "0x4000C0E")]
			LanguagePack_SetCurrent = 1531952096u,
			[Token(Token = "0x4000C0F")]
			Leaderboard_GetEntries = 1572030284u,
			[Token(Token = "0x4000C10")]
			Leaderboard_GetEntriesAfterRank = 406293487u,
			[Token(Token = "0x4000C11")]
			Leaderboard_GetNextEntries = 1310751961u,
			[Token(Token = "0x4000C12")]
			Leaderboard_GetPreviousEntries = 1224858304u,
			[Token(Token = "0x4000C13")]
			Leaderboard_WriteEntry = 293587198u,
			[Token(Token = "0x4000C14")]
			Livestreaming_GetStatus = 1218079125u,
			[Token(Token = "0x4000C15")]
			Livestreaming_PauseStream = 916223619u,
			[Token(Token = "0x4000C16")]
			Livestreaming_ResumeStream = 575827343u,
			[Token(Token = "0x4000C17")]
			Matchmaking_Browse = 509948616u,
			[Token(Token = "0x4000C18")]
			Matchmaking_Browse2 = 1715641947u,
			[Token(Token = "0x4000C19")]
			Matchmaking_Cancel = 543705519u,
			[Token(Token = "0x4000C1A")]
			Matchmaking_Cancel2 = 285117908u,
			[Token(Token = "0x4000C1B")]
			Matchmaking_CreateAndEnqueueRoom = 1615617480u,
			[Token(Token = "0x4000C1C")]
			Matchmaking_CreateAndEnqueueRoom2 = 693889755u,
			[Token(Token = "0x4000C1D")]
			Matchmaking_CreateRoom = 54203178u,
			[Token(Token = "0x4000C1E")]
			Matchmaking_CreateRoom2 = 1231922052u,
			[Token(Token = "0x4000C1F")]
			Matchmaking_Enqueue = 1086418033u,
			[Token(Token = "0x4000C20")]
			Matchmaking_Enqueue2 = 303174325u,
			[Token(Token = "0x4000C21")]
			Matchmaking_EnqueueRoom = 1888108644u,
			[Token(Token = "0x4000C22")]
			Matchmaking_EnqueueRoom2 = 1428741028u,
			[Token(Token = "0x4000C23")]
			Matchmaking_GetAdminSnapshot = 1008820116u,
			[Token(Token = "0x4000C24")]
			Matchmaking_GetStats = 1123849272u,
			[Token(Token = "0x4000C25")]
			Matchmaking_JoinRoom = 1295177725u,
			[Token(Token = "0x4000C26")]
			Matchmaking_ReportResultInsecure = 439800205u,
			[Token(Token = "0x4000C27")]
			Matchmaking_StartMatch = 1154746693u,
			[Token(Token = "0x4000C28")]
			Media_ShareToFacebook = 14912239u,
			[Token(Token = "0x4000C29")]
			Notification_GetNextRoomInviteNotificationArrayPage = 102890359u,
			[Token(Token = "0x4000C2A")]
			Notification_GetRoomInvites = 1871801234u,
			[Token(Token = "0x4000C2B")]
			Notification_MarkAsRead = 1903319523u,
			[Token(Token = "0x4000C2C")]
			Party_GetCurrent = 1200830304u,
			[Token(Token = "0x4000C2D")]
			RichPresence_Clear = 1471632051u,
			[Token(Token = "0x4000C2E")]
			RichPresence_GetDestinations = 1483681044u,
			[Token(Token = "0x4000C2F")]
			RichPresence_GetNextDestinationArrayPage = 1731624773u,
			[Token(Token = "0x4000C30")]
			RichPresence_Set = 1007973641u,
			[Token(Token = "0x4000C31")]
			Room_CreateAndJoinPrivate = 1977017207u,
			[Token(Token = "0x4000C32")]
			Room_CreateAndJoinPrivate2 = 1513775683u,
			[Token(Token = "0x4000C33")]
			Room_Get = 1704628152u,
			[Token(Token = "0x4000C34")]
			Room_GetCurrent = 161916164u,
			[Token(Token = "0x4000C35")]
			Room_GetCurrentForUser = 234887141u,
			[Token(Token = "0x4000C36")]
			Room_GetInvitableUsers = 506615698u,
			[Token(Token = "0x4000C37")]
			Room_GetInvitableUsers2 = 1330899120u,
			[Token(Token = "0x4000C38")]
			Room_GetModeratedRooms = 159645047u,
			[Token(Token = "0x4000C39")]
			Room_GetNextRoomArrayPage = 1317239238u,
			[Token(Token = "0x4000C3A")]
			Room_InviteUser = 1093266451u,
			[Token(Token = "0x4000C3B")]
			Room_Join = 382373641u,
			[Token(Token = "0x4000C3C")]
			Room_Join2 = 1303059522u,
			[Token(Token = "0x4000C3D")]
			Room_KickUser = 1233344310u,
			[Token(Token = "0x4000C3E")]
			Room_LaunchInvitableUserFlow = 843047539u,
			[Token(Token = "0x4000C3F")]
			Room_Leave = 1916281973u,
			[Token(Token = "0x4000C40")]
			Room_SetDescription = 809796911u,
			[Token(Token = "0x4000C41")]
			Room_UpdateDataStore = 40779816u,
			[Token(Token = "0x4000C42")]
			Room_UpdateMembershipLockStatus = 923514796u,
			[Token(Token = "0x4000C43")]
			Room_UpdateOwner = 850803997u,
			[Token(Token = "0x4000C44")]
			Room_UpdatePrivateRoomJoinPolicy = 289473179u,
			[Token(Token = "0x4000C45")]
			User_Get = 1808768583u,
			[Token(Token = "0x4000C46")]
			User_GetAccessToken = 111696574u,
			[Token(Token = "0x4000C47")]
			User_GetLoggedInUser = 1131361373u,
			[Token(Token = "0x4000C48")]
			User_GetLoggedInUserFriends = 1484532365u,
			[Token(Token = "0x4000C49")]
			User_GetLoggedInUserFriendsAndRooms = 1585908615u,
			[Token(Token = "0x4000C4A")]
			User_GetLoggedInUserRecentlyMetUsersAndRooms = 694139440u,
			[Token(Token = "0x4000C4B")]
			User_GetNextUserAndRoomArrayPage = 2143146719u,
			[Token(Token = "0x4000C4C")]
			User_GetNextUserArrayPage = 645723971u,
			[Token(Token = "0x4000C4D")]
			User_GetOrgScopedID = 418426907u,
			[Token(Token = "0x4000C4E")]
			User_GetSdkAccounts = 1733454467u,
			[Token(Token = "0x4000C4F")]
			User_GetUserProof = 578880643u,
			[Token(Token = "0x4000C50")]
			User_LaunchFriendRequestFlow = 151303576u,
			[Token(Token = "0x4000C51")]
			User_LaunchProfile = 171537047u,
			[Token(Token = "0x4000C52")]
			Voip_SetSystemVoipSuppressed = 1161808298u,
			[Token(Token = "0x4000C53")]
			Notification_ApplicationLifecycle_LaunchIntentChanged = 78859427u,
			[Token(Token = "0x4000C54")]
			Notification_AssetFile_DownloadUpdate = 803015885u,
			[Token(Token = "0x4000C55")]
			Notification_Cal_FinalizeApplication = 1963741337u,
			[Token(Token = "0x4000C56")]
			Notification_Cal_ProposeApplication = 779375093u,
			[Token(Token = "0x4000C57")]
			Notification_HTTP_Transfer = 2111073839u,
			[Token(Token = "0x4000C58")]
			Notification_Livestreaming_StatusChange = 575101294u,
			[Token(Token = "0x4000C59")]
			Notification_Matchmaking_MatchFound = 197393623u,
			[Token(Token = "0x4000C5A")]
			Notification_NetSync_ConnectionStatusChanged = 120882378u,
			[Token(Token = "0x4000C5B")]
			Notification_NetSync_SessionsChanged = 947814198u,
			[Token(Token = "0x4000C5C")]
			Notification_Networking_ConnectionStateChange = 1577243802u,
			[Token(Token = "0x4000C5D")]
			Notification_Networking_PeerConnectRequest = 1295114959u,
			[Token(Token = "0x4000C5E")]
			Notification_Networking_PingResult = 1360343058u,
			[Token(Token = "0x4000C5F")]
			Notification_Party_PartyUpdate = 487688882u,
			[Token(Token = "0x4000C60")]
			Notification_Room_InviteAccepted = 1829794225u,
			[Token(Token = "0x4000C61")]
			Notification_Room_InviteReceived = 1783209300u,
			[Token(Token = "0x4000C62")]
			Notification_Room_RoomUpdate = 1626094639u,
			[Token(Token = "0x4000C63")]
			Notification_Voip_ConnectRequest = 908343318u,
			[Token(Token = "0x4000C64")]
			Notification_Voip_StateChange = 888120928u,
			[Token(Token = "0x4000C65")]
			Notification_Voip_SystemVoipState = 1490179237u,
			[Token(Token = "0x4000C66")]
			Platform_InitializeWithAccessToken = 896085803u,
			[Token(Token = "0x4000C67")]
			Platform_InitializeStandaloneOculus = 1375260172u,
			[Token(Token = "0x4000C68")]
			Platform_InitializeAndroidAsynchronous = 450037684u,
			[Token(Token = "0x4000C69")]
			Platform_InitializeWindowsAsynchronous = 1839708815u
		}

		[Token(Token = "0x20002D0")]
		internal delegate Message ExtraMessageTypesHandler(IntPtr messageHandle, MessageType message_type);

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong requestID;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8B520", Offset = "0xA8B520")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x17000093")]
		public MessageType Type
		{
			[Token(Token = "0x600092E")]
			[Address(RVA = "0xF77C1C", Offset = "0xF77C1C", VA = "0xF77C1C")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x17000094")]
		public bool IsError
		{
			[Token(Token = "0x600092F")]
			[Address(RVA = "0xF77C24", Offset = "0xF77C24", VA = "0xF77C24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000095")]
		public ulong RequestID
		{
			[Token(Token = "0x6000930")]
			[Address(RVA = "0xF77C34", Offset = "0xF77C34", VA = "0xF77C34")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000096")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6000978")]
			[Address(RVA = "0xF7B098", Offset = "0xF7B098", VA = "0xF7B098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA9031C", Offset = "0xA9031C")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000977")]
			[Address(RVA = "0xF7B040", Offset = "0xF7B040", VA = "0xF7B040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA9030C", Offset = "0xA9030C")]
			set
			{
			}
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0xF7796C", Offset = "0xF7796C", VA = "0xF7796C")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xF77C14", Offset = "0xF77C14", VA = "0xF77C14", Slot = "1")]
		~Message()
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xF77C3C", Offset = "0xF77C3C", VA = "0xF77C3C", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0xF77C44", Offset = "0xF77C44", VA = "0xF77C44", Slot = "5")]
		public virtual PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0xF77C4C", Offset = "0xF77C4C", VA = "0xF77C4C", Slot = "6")]
		public virtual NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0xF77C54", Offset = "0xF77C54", VA = "0xF77C54", Slot = "7")]
		public virtual HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0xF77C5C", Offset = "0xF77C5C", VA = "0xF77C5C", Slot = "8")]
		public virtual PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0xF77C64", Offset = "0xF77C64", VA = "0xF77C64", Slot = "9")]
		public virtual AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0xF77C6C", Offset = "0xF77C6C", VA = "0xF77C6C", Slot = "10")]
		public virtual AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0xF77C74", Offset = "0xF77C74", VA = "0xF77C74", Slot = "11")]
		public virtual AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0xF77C7C", Offset = "0xF77C7C", VA = "0xF77C7C", Slot = "12")]
		public virtual AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0xF77C84", Offset = "0xF77C84", VA = "0xF77C84", Slot = "13")]
		public virtual ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0xF77C8C", Offset = "0xF77C8C", VA = "0xF77C8C", Slot = "14")]
		public virtual AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0xF77C94", Offset = "0xF77C94", VA = "0xF77C94", Slot = "15")]
		public virtual AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0xF77C9C", Offset = "0xF77C9C", VA = "0xF77C9C", Slot = "16")]
		public virtual AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0xF77CA4", Offset = "0xF77CA4", VA = "0xF77CA4", Slot = "17")]
		public virtual AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0xF77CAC", Offset = "0xF77CAC", VA = "0xF77CAC", Slot = "18")]
		public virtual AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0xF77CB4", Offset = "0xF77CB4", VA = "0xF77CB4", Slot = "19")]
		public virtual AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0xF77CBC", Offset = "0xF77CBC", VA = "0xF77CBC", Slot = "20")]
		public virtual CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0xF77CC4", Offset = "0xF77CC4", VA = "0xF77CC4", Slot = "21")]
		public virtual CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0xF77CCC", Offset = "0xF77CCC", VA = "0xF77CCC", Slot = "22")]
		public virtual CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0xF77CD4", Offset = "0xF77CD4", VA = "0xF77CD4", Slot = "23")]
		public virtual CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0xF77CDC", Offset = "0xF77CDC", VA = "0xF77CDC", Slot = "24")]
		public virtual CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0xF77CE4", Offset = "0xF77CE4", VA = "0xF77CE4", Slot = "25")]
		public virtual CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0xF77CEC", Offset = "0xF77CEC", VA = "0xF77CEC", Slot = "26")]
		public virtual CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0xF77CF4", Offset = "0xF77CF4", VA = "0xF77CF4", Slot = "27")]
		public virtual CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0xF77CFC", Offset = "0xF77CFC", VA = "0xF77CFC", Slot = "28")]
		public virtual DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0xF77D04", Offset = "0xF77D04", VA = "0xF77D04", Slot = "29")]
		public virtual InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0xF77D0C", Offset = "0xF77D0C", VA = "0xF77D0C", Slot = "30")]
		public virtual LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0xF77D14", Offset = "0xF77D14", VA = "0xF77D14", Slot = "31")]
		public virtual LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0xF77D1C", Offset = "0xF77D1C", VA = "0xF77D1C", Slot = "32")]
		public virtual LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0xF77D24", Offset = "0xF77D24", VA = "0xF77D24", Slot = "33")]
		public virtual LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0xF77D2C", Offset = "0xF77D2C", VA = "0xF77D2C", Slot = "34")]
		public virtual bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0xF77D34", Offset = "0xF77D34", VA = "0xF77D34", Slot = "35")]
		public virtual LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0xF77D3C", Offset = "0xF77D3C", VA = "0xF77D3C", Slot = "36")]
		public virtual LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0xF77D44", Offset = "0xF77D44", VA = "0xF77D44", Slot = "37")]
		public virtual LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0xF77D4C", Offset = "0xF77D4C", VA = "0xF77D4C", Slot = "38")]
		public virtual LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0xF77D54", Offset = "0xF77D54", VA = "0xF77D54", Slot = "39")]
		public virtual LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0xF77D5C", Offset = "0xF77D5C", VA = "0xF77D5C", Slot = "40")]
		public virtual LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0xF77D64", Offset = "0xF77D64", VA = "0xF77D64", Slot = "41")]
		public virtual MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0xF77D6C", Offset = "0xF77D6C", VA = "0xF77D6C", Slot = "42")]
		public virtual MatchmakingBrowseResult GetMatchmakingBrowseResult()
		{
			return null;
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0xF77D74", Offset = "0xF77D74", VA = "0xF77D74", Slot = "43")]
		public virtual MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0xF77D7C", Offset = "0xF77D7C", VA = "0xF77D7C", Slot = "44")]
		public virtual MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xF77D84", Offset = "0xF77D84", VA = "0xF77D84", Slot = "45")]
		public virtual MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xF77D8C", Offset = "0xF77D8C", VA = "0xF77D8C", Slot = "46")]
		public virtual NetSyncConnection GetNetSyncConnection()
		{
			return null;
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0xF77D94", Offset = "0xF77D94", VA = "0xF77D94", Slot = "47")]
		public virtual NetSyncSessionList GetNetSyncSessionList()
		{
			return null;
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0xF77D9C", Offset = "0xF77D9C", VA = "0xF77D9C", Slot = "48")]
		public virtual NetSyncSessionsChangedNotification GetNetSyncSessionsChangedNotification()
		{
			return null;
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xF77DA4", Offset = "0xF77DA4", VA = "0xF77DA4", Slot = "49")]
		public virtual NetSyncSetSessionPropertyResult GetNetSyncSetSessionPropertyResult()
		{
			return null;
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0xF77DAC", Offset = "0xF77DAC", VA = "0xF77DAC", Slot = "50")]
		public virtual OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0xF77DB4", Offset = "0xF77DB4", VA = "0xF77DB4", Slot = "51")]
		public virtual Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xF77DBC", Offset = "0xF77DBC", VA = "0xF77DBC", Slot = "52")]
		public virtual PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0xF77DC4", Offset = "0xF77DC4", VA = "0xF77DC4", Slot = "53")]
		public virtual PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0xF77DCC", Offset = "0xF77DCC", VA = "0xF77DCC", Slot = "54")]
		public virtual PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0xF77DD4", Offset = "0xF77DD4", VA = "0xF77DD4", Slot = "55")]
		public virtual ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0xF77DDC", Offset = "0xF77DDC", VA = "0xF77DDC", Slot = "56")]
		public virtual Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0xF77DE4", Offset = "0xF77DE4", VA = "0xF77DE4", Slot = "57")]
		public virtual PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0xF77DEC", Offset = "0xF77DEC", VA = "0xF77DEC", Slot = "58")]
		public virtual Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0xF77DF4", Offset = "0xF77DF4", VA = "0xF77DF4", Slot = "59")]
		public virtual RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0xF77DFC", Offset = "0xF77DFC", VA = "0xF77DFC", Slot = "60")]
		public virtual RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0xF77E04", Offset = "0xF77E04", VA = "0xF77E04", Slot = "61")]
		public virtual RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0xF77E0C", Offset = "0xF77E0C", VA = "0xF77E0C", Slot = "62")]
		public virtual SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0xF77E14", Offset = "0xF77E14", VA = "0xF77E14", Slot = "63")]
		public virtual ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0xF77E1C", Offset = "0xF77E1C", VA = "0xF77E1C", Slot = "64")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0xF77E24", Offset = "0xF77E24", VA = "0xF77E24", Slot = "65")]
		public virtual SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0xF77E2C", Offset = "0xF77E2C", VA = "0xF77E2C", Slot = "66")]
		public virtual SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0xF77E34", Offset = "0xF77E34", VA = "0xF77E34", Slot = "67")]
		public virtual User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0xF77E3C", Offset = "0xF77E3C", VA = "0xF77E3C", Slot = "68")]
		public virtual UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0xF77E44", Offset = "0xF77E44", VA = "0xF77E44", Slot = "69")]
		public virtual UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xF77E4C", Offset = "0xF77E4C", VA = "0xF77E4C", Slot = "70")]
		public virtual UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0xF77E54", Offset = "0xF77E54", VA = "0xF77E54", Slot = "71")]
		public virtual UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0xF77E5C", Offset = "0xF77E5C", VA = "0xF77E5C")]
		internal static Message ParseMessageHandle(IntPtr messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0xF71F2C", Offset = "0xF71F2C", VA = "0xF71F2C")]
		public static Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x200010F")]
	public class MessageWithAbuseReportRecording : Message<AbuseReportRecording>
	{
		[Token(Token = "0x6000979")]
		[Address(RVA = "0xF7B47C", Offset = "0xF7B47C", VA = "0xF7B47C")]
		public MessageWithAbuseReportRecording(IntPtr c_message)
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0xF7B4DC", Offset = "0xF7B4DC", VA = "0xF7B4DC", Slot = "9")]
		public override AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xF7B520", Offset = "0xF7B520", VA = "0xF7B520", Slot = "72")]
		protected override AbuseReportRecording GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000110")]
	public class MessageWithAchievementDefinitions : Message<AchievementDefinitionList>
	{
		[Token(Token = "0x600097C")]
		[Address(RVA = "0xF793B0", Offset = "0xF793B0", VA = "0xF793B0")]
		public MessageWithAchievementDefinitions(IntPtr c_message)
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xF7B64C", Offset = "0xF7B64C", VA = "0xF7B64C", Slot = "10")]
		public override AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xF7B690", Offset = "0xF7B690", VA = "0xF7B690", Slot = "72")]
		protected override AchievementDefinitionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000111")]
	public class MessageWithAchievementProgressList : Message<AchievementProgressList>
	{
		[Token(Token = "0x600097F")]
		[Address(RVA = "0xF79410", Offset = "0xF79410", VA = "0xF79410")]
		public MessageWithAchievementProgressList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xF7B94C", Offset = "0xF7B94C", VA = "0xF7B94C", Slot = "11")]
		public override AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0xF7B990", Offset = "0xF7B990", VA = "0xF7B990", Slot = "72")]
		protected override AchievementProgressList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000112")]
	public class MessageWithAchievementUpdate : Message<AchievementUpdate>
	{
		[Token(Token = "0x6000982")]
		[Address(RVA = "0xF79470", Offset = "0xF79470", VA = "0xF79470")]
		public MessageWithAchievementUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0xF7BC4C", Offset = "0xF7BC4C", VA = "0xF7BC4C", Slot = "12")]
		public override AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0xF7BC90", Offset = "0xF7BC90", VA = "0xF7BC90", Slot = "72")]
		protected override AchievementUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000113")]
	public class MessageWithApplicationVersion : Message<ApplicationVersion>
	{
		[Token(Token = "0x6000985")]
		[Address(RVA = "0xF794D0", Offset = "0xF794D0", VA = "0xF794D0")]
		public MessageWithApplicationVersion(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0xF7BDD0", Offset = "0xF7BDD0", VA = "0xF7BDD0", Slot = "13")]
		public override ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0xF7BE14", Offset = "0xF7BE14", VA = "0xF7BE14", Slot = "72")]
		protected override ApplicationVersion GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000114")]
	public class MessageWithAssetDetails : Message<AssetDetails>
	{
		[Token(Token = "0x6000988")]
		[Address(RVA = "0xF79530", Offset = "0xF79530", VA = "0xF79530")]
		public MessageWithAssetDetails(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0xF7BF7C", Offset = "0xF7BF7C", VA = "0xF7BF7C", Slot = "14")]
		public override AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0xF7BFC0", Offset = "0xF7BFC0", VA = "0xF7BFC0", Slot = "72")]
		protected override AssetDetails GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000115")]
	public class MessageWithAssetDetailsList : Message<AssetDetailsList>
	{
		[Token(Token = "0x600098B")]
		[Address(RVA = "0xF79590", Offset = "0xF79590", VA = "0xF79590")]
		public MessageWithAssetDetailsList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xF7C200", Offset = "0xF7C200", VA = "0xF7C200", Slot = "15")]
		public override AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0xF7C244", Offset = "0xF7C244", VA = "0xF7C244", Slot = "72")]
		protected override AssetDetailsList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000116")]
	public class MessageWithAssetFileDeleteResult : Message<AssetFileDeleteResult>
	{
		[Token(Token = "0x600098E")]
		[Address(RVA = "0xF795F0", Offset = "0xF795F0", VA = "0xF795F0")]
		public MessageWithAssetFileDeleteResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0xF7C4B8", Offset = "0xF7C4B8", VA = "0xF7C4B8", Slot = "16")]
		public override AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0xF7C4FC", Offset = "0xF7C4FC", VA = "0xF7C4FC", Slot = "72")]
		protected override AssetFileDeleteResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000117")]
	public class MessageWithAssetFileDownloadCancelResult : Message<AssetFileDownloadCancelResult>
	{
		[Token(Token = "0x6000991")]
		[Address(RVA = "0xF79650", Offset = "0xF79650", VA = "0xF79650")]
		public MessageWithAssetFileDownloadCancelResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0xF7C660", Offset = "0xF7C660", VA = "0xF7C660", Slot = "17")]
		public override AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0xF7C6A4", Offset = "0xF7C6A4", VA = "0xF7C6A4", Slot = "72")]
		protected override AssetFileDownloadCancelResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000118")]
	public class MessageWithAssetFileDownloadResult : Message<AssetFileDownloadResult>
	{
		[Token(Token = "0x6000994")]
		[Address(RVA = "0xF796B0", Offset = "0xF796B0", VA = "0xF796B0")]
		public MessageWithAssetFileDownloadResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0xF7C808", Offset = "0xF7C808", VA = "0xF7C808", Slot = "18")]
		public override AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0xF7C84C", Offset = "0xF7C84C", VA = "0xF7C84C", Slot = "72")]
		protected override AssetFileDownloadResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000119")]
	public class MessageWithAssetFileDownloadUpdate : Message<AssetFileDownloadUpdate>
	{
		[Token(Token = "0x6000997")]
		[Address(RVA = "0xF79710", Offset = "0xF79710", VA = "0xF79710")]
		public MessageWithAssetFileDownloadUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0xF7C988", Offset = "0xF7C988", VA = "0xF7C988", Slot = "19")]
		public override AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0xF7C9CC", Offset = "0xF7C9CC", VA = "0xF7C9CC", Slot = "72")]
		protected override AssetFileDownloadUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011A")]
	public class MessageWithCalApplicationFinalized : Message<CalApplicationFinalized>
	{
		[Token(Token = "0x600099A")]
		[Address(RVA = "0xF79770", Offset = "0xF79770", VA = "0xF79770")]
		public MessageWithCalApplicationFinalized(IntPtr c_message)
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0xF7CB34", Offset = "0xF7CB34", VA = "0xF7CB34", Slot = "20")]
		public override CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0xF7CB78", Offset = "0xF7CB78", VA = "0xF7CB78", Slot = "72")]
		protected override CalApplicationFinalized GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011B")]
	public class MessageWithCalApplicationProposed : Message<CalApplicationProposed>
	{
		[Token(Token = "0x600099D")]
		[Address(RVA = "0xF797D0", Offset = "0xF797D0", VA = "0xF797D0")]
		public MessageWithCalApplicationProposed(IntPtr c_message)
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0xF7CCC4", Offset = "0xF7CCC4", VA = "0xF7CCC4", Slot = "21")]
		public override CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0xF7CD08", Offset = "0xF7CD08", VA = "0xF7CD08", Slot = "72")]
		protected override CalApplicationProposed GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011C")]
	public class MessageWithCalApplicationSuggestionList : Message<CalApplicationSuggestionList>
	{
		[Token(Token = "0x60009A0")]
		[Address(RVA = "0xF7CE2C", Offset = "0xF7CE2C", VA = "0xF7CE2C")]
		public MessageWithCalApplicationSuggestionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0xF7CE8C", Offset = "0xF7CE8C", VA = "0xF7CE8C", Slot = "22")]
		public override CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0xF7CED0", Offset = "0xF7CED0", VA = "0xF7CED0", Slot = "72")]
		protected override CalApplicationSuggestionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011D")]
	public class MessageWithCloudStorageConflictMetadata : Message<CloudStorageConflictMetadata>
	{
		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xF79830", Offset = "0xF79830", VA = "0xF79830")]
		public MessageWithCloudStorageConflictMetadata(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xF7D144", Offset = "0xF7D144", VA = "0xF7D144", Slot = "23")]
		public override CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0xF7D188", Offset = "0xF7D188", VA = "0xF7D188", Slot = "72")]
		protected override CloudStorageConflictMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011E")]
	public class MessageWithCloudStorageData : Message<CloudStorageData>
	{
		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xF79890", Offset = "0xF79890", VA = "0xF79890")]
		public MessageWithCloudStorageData(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0xF7D318", Offset = "0xF7D318", VA = "0xF7D318", Slot = "24")]
		public override CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0xF7D35C", Offset = "0xF7D35C", VA = "0xF7D35C", Slot = "72")]
		protected override CloudStorageData GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011F")]
	public class MessageWithCloudStorageMetadataUnderLocal : Message<CloudStorageMetadata>
	{
		[Token(Token = "0x60009A9")]
		[Address(RVA = "0xF798F0", Offset = "0xF798F0", VA = "0xF798F0")]
		public MessageWithCloudStorageMetadataUnderLocal(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0xF7D7D0", Offset = "0xF7D7D0", VA = "0xF7D7D0", Slot = "25")]
		public override CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xF7D814", Offset = "0xF7D814", VA = "0xF7D814", Slot = "72")]
		protected override CloudStorageMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000120")]
	public class MessageWithCloudStorageMetadataList : Message<CloudStorageMetadataList>
	{
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0xF79950", Offset = "0xF79950", VA = "0xF79950")]
		public MessageWithCloudStorageMetadataList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0xF7D4D0", Offset = "0xF7D4D0", VA = "0xF7D4D0", Slot = "26")]
		public override CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xF7D514", Offset = "0xF7D514", VA = "0xF7D514", Slot = "72")]
		protected override CloudStorageMetadataList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000121")]
	public class MessageWithCloudStorageUpdateResponse : Message<CloudStorageUpdateResponse>
	{
		[Token(Token = "0x60009AF")]
		[Address(RVA = "0xF799B0", Offset = "0xF799B0", VA = "0xF799B0")]
		public MessageWithCloudStorageUpdateResponse(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0xF7D9D4", Offset = "0xF7D9D4", VA = "0xF7D9D4", Slot = "27")]
		public override CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0xF7DA18", Offset = "0xF7DA18", VA = "0xF7DA18", Slot = "72")]
		protected override CloudStorageUpdateResponse GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000122")]
	public class MessageWithDestinationList : Message<DestinationList>
	{
		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xF79A10", Offset = "0xF79A10", VA = "0xF79A10")]
		public MessageWithDestinationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xF7DB8C", Offset = "0xF7DB8C", VA = "0xF7DB8C", Slot = "28")]
		public override DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xF7DBD0", Offset = "0xF7DBD0", VA = "0xF7DBD0", Slot = "72")]
		protected override DestinationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000123")]
	public class MessageWithInstalledApplicationList : Message<InstalledApplicationList>
	{
		[Token(Token = "0x60009B5")]
		[Address(RVA = "0xF7E0C0", Offset = "0xF7E0C0", VA = "0xF7E0C0")]
		public MessageWithInstalledApplicationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xF7E120", Offset = "0xF7E120", VA = "0xF7E120", Slot = "29")]
		public override InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0xF7E164", Offset = "0xF7E164", VA = "0xF7E164", Slot = "72")]
		protected override InstalledApplicationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000124")]
	public class MessageWithLaunchBlockFlowResult : Message<LaunchBlockFlowResult>
	{
		[Token(Token = "0x60009B8")]
		[Address(RVA = "0xF7E3D8", Offset = "0xF7E3D8", VA = "0xF7E3D8")]
		public MessageWithLaunchBlockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0xF7E438", Offset = "0xF7E438", VA = "0xF7E438", Slot = "30")]
		public override LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0xF7E47C", Offset = "0xF7E47C", VA = "0xF7E47C", Slot = "72")]
		protected override LaunchBlockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000125")]
	public class MessageWithLaunchFriendRequestFlowResult : Message<LaunchFriendRequestFlowResult>
	{
		[Token(Token = "0x60009BB")]
		[Address(RVA = "0xF79A70", Offset = "0xF79A70", VA = "0xF79A70")]
		public MessageWithLaunchFriendRequestFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0xF7E5B8", Offset = "0xF7E5B8", VA = "0xF7E5B8", Slot = "31")]
		public override LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xF7E5FC", Offset = "0xF7E5FC", VA = "0xF7E5FC", Slot = "72")]
		protected override LaunchFriendRequestFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000126")]
	public class MessageWithLaunchReportFlowResult : Message<LaunchReportFlowResult>
	{
		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xF7E738", Offset = "0xF7E738", VA = "0xF7E738")]
		public MessageWithLaunchReportFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xF7E798", Offset = "0xF7E798", VA = "0xF7E798", Slot = "32")]
		public override LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xF7E7DC", Offset = "0xF7E7DC", VA = "0xF7E7DC", Slot = "72")]
		protected override LaunchReportFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000127")]
	public class MessageWithLaunchUnblockFlowResult : Message<LaunchUnblockFlowResult>
	{
		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xF7E914", Offset = "0xF7E914", VA = "0xF7E914")]
		public MessageWithLaunchUnblockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0xF7E974", Offset = "0xF7E974", VA = "0xF7E974", Slot = "33")]
		public override LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0xF7E9B8", Offset = "0xF7E9B8", VA = "0xF7E9B8", Slot = "72")]
		protected override LaunchUnblockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000128")]
	public class MessageWithLeaderboardEntryList : Message<LeaderboardEntryList>
	{
		[Token(Token = "0x60009C4")]
		[Address(RVA = "0xF79AD0", Offset = "0xF79AD0", VA = "0xF79AD0")]
		public MessageWithLeaderboardEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0xF7EBB0", Offset = "0xF7EBB0", VA = "0xF7EBB0", Slot = "35")]
		public override LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0xF7EBF4", Offset = "0xF7EBF4", VA = "0xF7EBF4", Slot = "72")]
		protected override LeaderboardEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000129")]
	public class MessageWithLinkedAccountList : Message<LinkedAccountList>
	{
		[Token(Token = "0x60009C7")]
		[Address(RVA = "0xF7EEE0", Offset = "0xF7EEE0", VA = "0xF7EEE0")]
		public MessageWithLinkedAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0xF7EF40", Offset = "0xF7EF40", VA = "0xF7EF40", Slot = "36")]
		public override LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0xF7EF84", Offset = "0xF7EF84", VA = "0xF7EF84", Slot = "72")]
		protected override LinkedAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012A")]
	public class MessageWithLivestreamingApplicationStatus : Message<LivestreamingApplicationStatus>
	{
		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xF7F1F8", Offset = "0xF7F1F8", VA = "0xF7F1F8")]
		public MessageWithLivestreamingApplicationStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0xF7F258", Offset = "0xF7F258", VA = "0xF7F258", Slot = "37")]
		public override LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0xF7F29C", Offset = "0xF7F29C", VA = "0xF7F29C", Slot = "72")]
		protected override LivestreamingApplicationStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012B")]
	public class MessageWithLivestreamingStartResult : Message<LivestreamingStartResult>
	{
		[Token(Token = "0x60009CD")]
		[Address(RVA = "0xF7F3C4", Offset = "0xF7F3C4", VA = "0xF7F3C4")]
		public MessageWithLivestreamingStartResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xF7F424", Offset = "0xF7F424", VA = "0xF7F424", Slot = "38")]
		public override LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0xF7F468", Offset = "0xF7F468", VA = "0xF7F468", Slot = "72")]
		protected override LivestreamingStartResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012C")]
	public class MessageWithLivestreamingStatus : Message<LivestreamingStatus>
	{
		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xF79B90", Offset = "0xF79B90", VA = "0xF79B90")]
		public MessageWithLivestreamingStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xF7F58C", Offset = "0xF7F58C", VA = "0xF7F58C", Slot = "39")]
		public override LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xF7F5D0", Offset = "0xF7F5D0", VA = "0xF7F5D0", Slot = "72")]
		protected override LivestreamingStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012D")]
	public class MessageWithLivestreamingVideoStats : Message<LivestreamingVideoStats>
	{
		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xF7F744", Offset = "0xF7F744", VA = "0xF7F744")]
		public MessageWithLivestreamingVideoStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xF7F7A4", Offset = "0xF7F7A4", VA = "0xF7F7A4", Slot = "40")]
		public override LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xF7F7E8", Offset = "0xF7F7E8", VA = "0xF7F7E8", Slot = "72")]
		protected override LivestreamingVideoStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012E")]
	public class MessageWithMatchmakingAdminSnapshot : Message<MatchmakingAdminSnapshot>
	{
		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xF79BF0", Offset = "0xF79BF0", VA = "0xF79BF0")]
		public MessageWithMatchmakingAdminSnapshot(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xF7F934", Offset = "0xF7F934", VA = "0xF7F934", Slot = "41")]
		public override MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xF7F978", Offset = "0xF7F978", VA = "0xF7F978", Slot = "72")]
		protected override MatchmakingAdminSnapshot GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012F")]
	public class MessageWithMatchmakingEnqueueResult : Message<MatchmakingEnqueueResult>
	{
		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xF79CB0", Offset = "0xF79CB0", VA = "0xF79CB0")]
		public MessageWithMatchmakingEnqueueResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xF7FD0C", Offset = "0xF7FD0C", VA = "0xF7FD0C", Slot = "43")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xF7FD50", Offset = "0xF7FD50", VA = "0xF7FD50", Slot = "72")]
		protected override MatchmakingEnqueueResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000130")]
	public class MessageWithMatchmakingEnqueueResultAndRoom : Message<MatchmakingEnqueueResultAndRoom>
	{
		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xF79D10", Offset = "0xF79D10", VA = "0xF79D10")]
		public MessageWithMatchmakingEnqueueResultAndRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xF7FF6C", Offset = "0xF7FF6C", VA = "0xF7FF6C", Slot = "44")]
		public override MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xF7FFB0", Offset = "0xF7FFB0", VA = "0xF7FFB0", Slot = "72")]
		protected override MatchmakingEnqueueResultAndRoom GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000131")]
	public class MessageWithMatchmakingStatsUnderMatchmakingStats : Message<MatchmakingStats>
	{
		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xF79D70", Offset = "0xF79D70", VA = "0xF79D70")]
		public MessageWithMatchmakingStatsUnderMatchmakingStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xF80634", Offset = "0xF80634", VA = "0xF80634", Slot = "45")]
		public override MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0xF80678", Offset = "0xF80678", VA = "0xF80678", Slot = "72")]
		protected override MatchmakingStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000132")]
	public class MessageWithNetSyncConnection : Message<NetSyncConnection>
	{
		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xF79DD0", Offset = "0xF79DD0", VA = "0xF79DD0")]
		public MessageWithNetSyncConnection(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xF807EC", Offset = "0xF807EC", VA = "0xF807EC", Slot = "46")]
		public override NetSyncConnection GetNetSyncConnection()
		{
			return null;
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xF80830", Offset = "0xF80830", VA = "0xF80830", Slot = "72")]
		protected override NetSyncConnection GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000133")]
	public class MessageWithNetSyncSessionList : Message<NetSyncSessionList>
	{
		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xF8099C", Offset = "0xF8099C", VA = "0xF8099C")]
		public MessageWithNetSyncSessionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xF809FC", Offset = "0xF809FC", VA = "0xF809FC", Slot = "47")]
		public override NetSyncSessionList GetNetSyncSessionList()
		{
			return null;
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xF80A40", Offset = "0xF80A40", VA = "0xF80A40", Slot = "72")]
		protected override NetSyncSessionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000134")]
	public class MessageWithNetSyncSessionsChangedNotification : Message<NetSyncSessionsChangedNotification>
	{
		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xF79E30", Offset = "0xF79E30", VA = "0xF79E30")]
		public MessageWithNetSyncSessionsChangedNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xF80CB4", Offset = "0xF80CB4", VA = "0xF80CB4", Slot = "48")]
		public override NetSyncSessionsChangedNotification GetNetSyncSessionsChangedNotification()
		{
			return null;
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xF80CF8", Offset = "0xF80CF8", VA = "0xF80CF8", Slot = "72")]
		protected override NetSyncSessionsChangedNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000135")]
	public class MessageWithNetSyncSetSessionPropertyResult : Message<NetSyncSetSessionPropertyResult>
	{
		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xF80E58", Offset = "0xF80E58", VA = "0xF80E58")]
		public MessageWithNetSyncSetSessionPropertyResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xF80EB8", Offset = "0xF80EB8", VA = "0xF80EB8", Slot = "49")]
		public override NetSyncSetSessionPropertyResult GetNetSyncSetSessionPropertyResult()
		{
			return null;
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xF80EFC", Offset = "0xF80EFC", VA = "0xF80EFC", Slot = "72")]
		protected override NetSyncSetSessionPropertyResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000136")]
	public class MessageWithOrgScopedID : Message<OrgScopedID>
	{
		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xF79E90", Offset = "0xF79E90", VA = "0xF79E90")]
		public MessageWithOrgScopedID(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xF8118C", Offset = "0xF8118C", VA = "0xF8118C", Slot = "50")]
		public override OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xF811D0", Offset = "0xF811D0", VA = "0xF811D0", Slot = "72")]
		protected override OrgScopedID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000137")]
	public class MessageWithParty : Message<Party>
	{
		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xF812F4", Offset = "0xF812F4", VA = "0xF812F4")]
		public MessageWithParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xF81354", Offset = "0xF81354", VA = "0xF81354", Slot = "51")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xF81398", Offset = "0xF81398", VA = "0xF81398", Slot = "72")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000138")]
	public class MessageWithPartyUnderCurrentParty : Message<Party>
	{
		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xF79EF0", Offset = "0xF79EF0", VA = "0xF79EF0")]
		public MessageWithPartyUnderCurrentParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0xF81898", Offset = "0xF81898", VA = "0xF81898", Slot = "51")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xF818DC", Offset = "0xF818DC", VA = "0xF818DC", Slot = "72")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000139")]
	public class MessageWithPartyID : Message<PartyID>
	{
		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xF816D0", Offset = "0xF816D0", VA = "0xF816D0")]
		public MessageWithPartyID(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xF81730", Offset = "0xF81730", VA = "0xF81730", Slot = "52")]
		public override PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0xF81774", Offset = "0xF81774", VA = "0xF81774", Slot = "72")]
		protected override PartyID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200013A")]
	public class MessageWithPartyUpdateNotification : Message<PartyUpdateNotification>
	{
		[Token(Token = "0x60009FA")]
		[Address(RVA = "0xF79F50", Offset = "0xF79F50", VA = "0xF79F50")]
		public MessageWithPartyUpdateNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xF81978", Offset = "0xF81978", VA = "0xF81978", Slot = "53")]
		public override PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xF819BC", Offset = "0xF819BC", VA = "0xF819BC", Slot = "72")]
		protected override PartyUpdateNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200013B")]
	public class MessageWithPidList : Message<PidList>
	{
		[Token(Token = "0x60009FD")]
		[Address(RVA = "0xF79FB0", Offset = "0xF79FB0", VA = "0xF79FB0")]
		public MessageWithPidList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xF81B60", Offset = "0xF81B60", VA = "0xF81B60", Slot = "54")]
		public override PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xF81BA4", Offset = "0xF81BA4", VA = "0xF81BA4", Slot = "72")]
		protected override PidList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200013C")]
	public class MessageWithProductList : Message<ProductList>
	{
		[Token(Token = "0x6000A00")]
		[Address(RVA = "0xF7A010", Offset = "0xF7A010", VA = "0xF7A010")]
		public MessageWithProductList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xF82120", Offset = "0xF82120", VA = "0xF82120", Slot = "55")]
		public override ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xF82164", Offset = "0xF82164", VA = "0xF82164", Slot = "72")]
		protected override ProductList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200013D")]
	public class MessageWithPurchase : Message<Purchase>
	{
		[Token(Token = "0x6000A03")]
		[Address(RVA = "0xF7A070", Offset = "0xF7A070", VA = "0xF7A070")]
		public MessageWithPurchase(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xF82420", Offset = "0xF82420", VA = "0xF82420", Slot = "56")]
		public override Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xF82464", Offset = "0xF82464", VA = "0xF82464", Slot = "72")]
		protected override Purchase GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200013E")]
	public class MessageWithPurchaseList : Message<PurchaseList>
	{
		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xF7A0D0", Offset = "0xF7A0D0", VA = "0xF7A0D0")]
		public MessageWithPurchaseList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0xF825C0", Offset = "0xF825C0", VA = "0xF825C0", Slot = "57")]
		public override PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xF82604", Offset = "0xF82604", VA = "0xF82604", Slot = "72")]
		protected override PurchaseList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200013F")]
	public class MessageWithRoom : Message<Room>
	{
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0xF7A130", Offset = "0xF7A130", VA = "0xF7A130")]
		public MessageWithRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xF828C0", Offset = "0xF828C0", VA = "0xF828C0", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0xF82904", Offset = "0xF82904", VA = "0xF82904", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000140")]
	public class MessageWithRoomUnderCurrentRoom : Message<Room>
	{
		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0xF7A190", Offset = "0xF7A190", VA = "0xF7A190")]
		public MessageWithRoomUnderCurrentRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xF83138", Offset = "0xF83138", VA = "0xF83138", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xF8317C", Offset = "0xF8317C", VA = "0xF8317C", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000141")]
	public class MessageWithRoomUnderViewerRoom : Message<Room>
	{
		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xF7A1F0", Offset = "0xF7A1F0", VA = "0xF7A1F0")]
		public MessageWithRoomUnderViewerRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xF83218", Offset = "0xF83218", VA = "0xF83218", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xF8325C", Offset = "0xF8325C", VA = "0xF8325C", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000142")]
	public class MessageWithRoomList : Message<RoomList>
	{
		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xF7A250", Offset = "0xF7A250", VA = "0xF7A250")]
		public MessageWithRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xF82E38", Offset = "0xF82E38", VA = "0xF82E38", Slot = "61")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xF82E7C", Offset = "0xF82E7C", VA = "0xF82E7C", Slot = "72")]
		protected override RoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000143")]
	public class MessageWithRoomInviteNotification : Message<RoomInviteNotification>
	{
		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xF7A2B0", Offset = "0xF7A2B0", VA = "0xF7A2B0")]
		public MessageWithRoomInviteNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xF829A0", Offset = "0xF829A0", VA = "0xF829A0", Slot = "59")]
		public override RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xF829E4", Offset = "0xF829E4", VA = "0xF829E4", Slot = "72")]
		protected override RoomInviteNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000144")]
	public class MessageWithRoomInviteNotificationList : Message<RoomInviteNotificationList>
	{
		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xF7A310", Offset = "0xF7A310", VA = "0xF7A310")]
		public MessageWithRoomInviteNotificationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xF82B38", Offset = "0xF82B38", VA = "0xF82B38", Slot = "60")]
		public override RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xF82B7C", Offset = "0xF82B7C", VA = "0xF82B7C", Slot = "72")]
		protected override RoomInviteNotificationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000145")]
	public class MessageWithSdkAccountList : Message<SdkAccountList>
	{
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xF7A370", Offset = "0xF7A370", VA = "0xF7A370")]
		public MessageWithSdkAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xF832F8", Offset = "0xF832F8", VA = "0xF832F8", Slot = "62")]
		public override SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xF8333C", Offset = "0xF8333C", VA = "0xF8333C", Slot = "72")]
		protected override SdkAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000146")]
	public class MessageWithShareMediaResult : Message<ShareMediaResult>
	{
		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xF7A3D0", Offset = "0xF7A3D0", VA = "0xF7A3D0")]
		public MessageWithShareMediaResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xF835B0", Offset = "0xF835B0", VA = "0xF835B0", Slot = "63")]
		public override ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xF835F4", Offset = "0xF835F4", VA = "0xF835F4", Slot = "72")]
		protected override ShareMediaResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000147")]
	public class MessageWithString : Message<string>
	{
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xF7A430", Offset = "0xF7A430", VA = "0xF7A430")]
		public MessageWithString(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xF83718", Offset = "0xF83718", VA = "0xF83718", Slot = "64")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xF8375C", Offset = "0xF8375C", VA = "0xF8375C", Slot = "72")]
		protected override string GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000148")]
	public class MessageWithSystemPermission : Message<SystemPermission>
	{
		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xF837C4", Offset = "0xF837C4", VA = "0xF837C4")]
		public MessageWithSystemPermission(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xF83824", Offset = "0xF83824", VA = "0xF83824", Slot = "65")]
		public override SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xF83868", Offset = "0xF83868", VA = "0xF83868", Slot = "72")]
		protected override SystemPermission GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000149")]
	public class MessageWithSystemVoipState : Message<SystemVoipState>
	{
		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xF7A490", Offset = "0xF7A490", VA = "0xF7A490")]
		public MessageWithSystemVoipState(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xF839A0", Offset = "0xF839A0", VA = "0xF839A0", Slot = "66")]
		public override SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xF839E4", Offset = "0xF839E4", VA = "0xF839E4", Slot = "72")]
		protected override SystemVoipState GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200014A")]
	public class MessageWithUser : Message<User>
	{
		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xF7A4F0", Offset = "0xF7A4F0", VA = "0xF7A4F0")]
		public MessageWithUser(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xF83B18", Offset = "0xF83B18", VA = "0xF83B18", Slot = "67")]
		public override User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xF83B5C", Offset = "0xF83B5C", VA = "0xF83B5C", Slot = "72")]
		protected override User GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200014B")]
	public class MessageWithUserAndRoomList : Message<UserAndRoomList>
	{
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xF7A550", Offset = "0xF7A550", VA = "0xF7A550")]
		public MessageWithUserAndRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xF83D50", Offset = "0xF83D50", VA = "0xF83D50", Slot = "68")]
		public override UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xF83D94", Offset = "0xF83D94", VA = "0xF83D94", Slot = "72")]
		protected override UserAndRoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200014C")]
	public class MessageWithUserList : Message<UserList>
	{
		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xF7A5B0", Offset = "0xF7A5B0", VA = "0xF7A5B0")]
		public MessageWithUserList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xF84050", Offset = "0xF84050", VA = "0xF84050", Slot = "69")]
		public override UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xF84094", Offset = "0xF84094", VA = "0xF84094", Slot = "72")]
		protected override UserList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200014D")]
	public class MessageWithUserProof : Message<UserProof>
	{
		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xF7A610", Offset = "0xF7A610", VA = "0xF7A610")]
		public MessageWithUserProof(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xF84350", Offset = "0xF84350", VA = "0xF84350", Slot = "70")]
		public override UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xF84394", Offset = "0xF84394", VA = "0xF84394", Slot = "72")]
		protected override UserProof GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200014E")]
	public class MessageWithUserReportID : Message<UserReportID>
	{
		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xF844C0", Offset = "0xF844C0", VA = "0xF844C0")]
		public MessageWithUserReportID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xF84520", Offset = "0xF84520", VA = "0xF84520", Slot = "71")]
		public override UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xF84564", Offset = "0xF84564", VA = "0xF84564", Slot = "72")]
		protected override UserReportID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200014F")]
	public class MessageWithNetworkingPeer : Message<NetworkingPeer>
	{
		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xF7A670", Offset = "0xF7A670", VA = "0xF7A670")]
		public MessageWithNetworkingPeer(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xF8104C", Offset = "0xF8104C", VA = "0xF8104C", Slot = "6")]
		public override NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xF81090", Offset = "0xF81090", VA = "0xF81090", Slot = "72")]
		protected override NetworkingPeer GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000150")]
	public class MessageWithPingResult : Message<PingResult>
	{
		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xF7A6D0", Offset = "0xF7A6D0", VA = "0xF7A6D0")]
		public MessageWithPingResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xF81E18", Offset = "0xF81E18", VA = "0xF81E18", Slot = "5")]
		public override PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xF81E5C", Offset = "0xF81E5C", VA = "0xF81E5C", Slot = "72")]
		protected override PingResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000151")]
	public class MessageWithLeaderboardDidUpdate : Message<bool>
	{
		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xF79B30", Offset = "0xF79B30", VA = "0xF79B30")]
		public MessageWithLeaderboardDidUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xF7EAF4", Offset = "0xF7EAF4", VA = "0xF7EAF4", Slot = "34")]
		public override bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xF7EB38", Offset = "0xF7EB38", VA = "0xF7EB38", Slot = "72")]
		protected override bool GetDataFromMessage(IntPtr c_message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000152")]
	public class MessageWithMatchmakingNotification : Message<Room>
	{
		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xF7A730", Offset = "0xF7A730", VA = "0xF7A730")]
		public MessageWithMatchmakingNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xF80140", Offset = "0xF80140", VA = "0xF80140", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xF80184", Offset = "0xF80184", VA = "0xF80184", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000153")]
	public class MessageWithMatchmakingBrowseResult : Message<MatchmakingBrowseResult>
	{
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xF79C50", Offset = "0xF79C50", VA = "0xF79C50")]
		public MessageWithMatchmakingBrowseResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xF7FADC", Offset = "0xF7FADC", VA = "0xF7FADC", Slot = "43")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xF7FB2C", Offset = "0xF7FB2C", VA = "0xF7FB2C", Slot = "61")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xF7FB7C", Offset = "0xF7FB7C", VA = "0xF7FB7C", Slot = "72")]
		protected override MatchmakingBrowseResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000154")]
	public class MessageWithHttpTransferUpdate : Message<HttpTransferUpdate>
	{
		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xF7A790", Offset = "0xF7A790", VA = "0xF7A790")]
		public MessageWithHttpTransferUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xF7DE8C", Offset = "0xF7DE8C", VA = "0xF7DE8C", Slot = "7")]
		public override HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xF7DED0", Offset = "0xF7DED0", VA = "0xF7DED0", Slot = "72")]
		protected override HttpTransferUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000155")]
	public class MessageWithPlatformInitialize : Message<PlatformInitialize>
	{
		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xF7A7F0", Offset = "0xF7A7F0", VA = "0xF7A7F0")]
		public MessageWithPlatformInitialize(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xF81FB8", Offset = "0xF81FB8", VA = "0xF81FB8", Slot = "8")]
		public override PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xF81FFC", Offset = "0xF81FFC", VA = "0xF81FFC", Slot = "72")]
		protected override PlatformInitialize GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000156")]
	public enum NetSyncConnectionStatus
	{
		[Token(Token = "0x400061A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B530", Offset = "0xA8B530")]
		Unknown,
		[Token(Token = "0x400061B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B568", Offset = "0xA8B568")]
		Connecting,
		[Token(Token = "0x400061C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B5A0", Offset = "0xA8B5A0")]
		Disconnected,
		[Token(Token = "0x400061D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B5D8", Offset = "0xA8B5D8")]
		Connected
	}
	[Token(Token = "0x2000157")]
	public enum NetSyncDisconnectReason
	{
		[Token(Token = "0x400061F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B610", Offset = "0xA8B610")]
		Unknown,
		[Token(Token = "0x4000620")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B648", Offset = "0xA8B648")]
		LocalTerminated,
		[Token(Token = "0x4000621")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B680", Offset = "0xA8B680")]
		ServerTerminated,
		[Token(Token = "0x4000622")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B6B8", Offset = "0xA8B6B8")]
		Failed,
		[Token(Token = "0x4000623")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B6F0", Offset = "0xA8B6F0")]
		Lost
	}
	[Token(Token = "0x2000158")]
	public class NetSyncOptions
	{
		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xF8691C", Offset = "0xF8691C", VA = "0xF8691C")]
		public NetSyncOptions()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xF86994", Offset = "0xF86994", VA = "0xF86994")]
		public void SetVoipGroup(string value)
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xF86A10", Offset = "0xF86A10", VA = "0xF86A10")]
		public void SetVoipStreamDefault(NetSyncVoipStreamMode value)
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xF86A8C", Offset = "0xF86A8C", VA = "0xF86A8C")]
		public void SetZoneId(string value)
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xF86B08", Offset = "0xF86B08", VA = "0xF86B08")]
		public static explicit operator IntPtr(NetSyncOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xF86B58", Offset = "0xF86B58", VA = "0xF86B58", Slot = "1")]
		~NetSyncOptions()
		{
		}
	}
	[Token(Token = "0x2000159")]
	public enum NetSyncVoipMicSource
	{
		[Token(Token = "0x4000626")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B728", Offset = "0xA8B728")]
		Unknown,
		[Token(Token = "0x4000627")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B760", Offset = "0xA8B760")]
		None,
		[Token(Token = "0x4000628")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B798", Offset = "0xA8B798")]
		Internal
	}
	[Token(Token = "0x200015A")]
	public enum NetSyncVoipStreamMode
	{
		[Token(Token = "0x400062A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B7D0", Offset = "0xA8B7D0")]
		Unknown,
		[Token(Token = "0x400062B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B808", Offset = "0xA8B808")]
		Ambisonic,
		[Token(Token = "0x400062C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B840", Offset = "0xA8B840")]
		Mono
	}
	[Token(Token = "0x200015B")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ulong size;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x17000097")]
		public ulong SenderID
		{
			[Token(Token = "0x6000A57")]
			[Address(RVA = "0xF87100", Offset = "0xF87100", VA = "0xF87100")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000098")]
		public ulong Size
		{
			[Token(Token = "0x6000A58")]
			[Address(RVA = "0xF8716C", Offset = "0xF8716C", VA = "0xF8716C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000099")]
		public SendPolicy Policy
		{
			[Token(Token = "0x6000A59")]
			[Address(RVA = "0xF87174", Offset = "0xF87174", VA = "0xF87174")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xF85CFC", Offset = "0xF85CFC", VA = "0xF85CFC")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xF86FAC", Offset = "0xF86FAC", VA = "0xF86FAC")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xF871E0", Offset = "0xF871E0", VA = "0xF871E0", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xF87248", Offset = "0xF87248", VA = "0xF87248", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200015C")]
	public enum PartyUpdateAction
	{
		[Token(Token = "0x4000630")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B878", Offset = "0xA8B878")]
		Unknown,
		[Token(Token = "0x4000631")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B8B0", Offset = "0xA8B8B0")]
		Join,
		[Token(Token = "0x4000632")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B8E8", Offset = "0xA8B8E8")]
		Leave,
		[Token(Token = "0x4000633")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B920", Offset = "0xA8B920")]
		Invite,
		[Token(Token = "0x4000634")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B958", Offset = "0xA8B958")]
		Uninvite
	}
	[Token(Token = "0x200015D")]
	public enum PeerConnectionState
	{
		[Token(Token = "0x4000636")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B990", Offset = "0xA8B990")]
		Unknown,
		[Token(Token = "0x4000637")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8B9C8", Offset = "0xA8B9C8")]
		Connected,
		[Token(Token = "0x4000638")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BA00", Offset = "0xA8BA00")]
		Timeout,
		[Token(Token = "0x4000639")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BA38", Offset = "0xA8BA38")]
		Closed
	}
	[Token(Token = "0x200015E")]
	public enum PermissionGrantStatus
	{
		[Token(Token = "0x400063B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BA70", Offset = "0xA8BA70")]
		Unknown,
		[Token(Token = "0x400063C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BAA8", Offset = "0xA8BAA8")]
		Granted,
		[Token(Token = "0x400063D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BAE0", Offset = "0xA8BAE0")]
		Denied,
		[Token(Token = "0x400063E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BB18", Offset = "0xA8BB18")]
		Blocked
	}
	[Token(Token = "0x200015F")]
	public enum PermissionType
	{
		[Token(Token = "0x4000640")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BB50", Offset = "0xA8BB50")]
		Unknown,
		[Token(Token = "0x4000641")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BB88", Offset = "0xA8BB88")]
		Microphone,
		[Token(Token = "0x4000642")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BBC0", Offset = "0xA8BBC0")]
		WriteExternalStorage
	}
	[Token(Token = "0x2000160")]
	public sealed class Core
	{
		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xF73888", Offset = "0xF73888", VA = "0xF73888")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xF738F0", Offset = "0xF738F0", VA = "0xF738F0")]
		internal static void ForceInitialized()
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xF7395C", Offset = "0xF7395C", VA = "0xF7395C")]
		private static string getAppID([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xF73B58", Offset = "0xF73B58", VA = "0xF73B58")]
		public static Request<PlatformInitialize> AsyncInitialize([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0xF73E0C", Offset = "0xF73E0C", VA = "0xF73E0C")]
		public static void Initialize([Optional] string appId)
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xF73B0C", Offset = "0xF73B0C", VA = "0xF73B0C")]
		private static string GetAppIDFromConfig()
		{
			return null;
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xF74124", Offset = "0xF74124", VA = "0xF74124")]
		public Core()
		{
		}
	}
	[Token(Token = "0x2000161")]
	public static class ApplicationLifecycle
	{
		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x1AC0D3C", Offset = "0x1AC0D3C", VA = "0x1AC0D3C")]
		public static LaunchDetails GetLaunchDetails()
		{
			return null;
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x1AC0E3C", Offset = "0x1AC0E3C", VA = "0x1AC0E3C")]
		public static void SetLaunchIntentChangedNotificationCallback(Message<string>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000162")]
	public static class Rooms
	{
		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xF88D34", Offset = "0xF88D34", VA = "0xF88D34")]
		public static Request<Room> UpdateDataStore(ulong roomID, Dictionary<string, string> data)
		{
			return null;
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xF88FEC", Offset = "0xF88FEC", VA = "0xF88FEC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA9032C", Offset = "0xA9032C")]
		public static void SetRoomInviteNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xF89068", Offset = "0xF89068", VA = "0xF89068")]
		public static Request<Room> CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xF8919C", Offset = "0xF8919C", VA = "0xF8919C")]
		public static Request<Room> CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xF892FC", Offset = "0xF892FC", VA = "0xF892FC")]
		public static Request<Room> Get(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xF89418", Offset = "0xF89418", VA = "0xF89418")]
		public static Request<Room> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xF89524", Offset = "0xF89524", VA = "0xF89524")]
		public static Request<Room> GetCurrentForUser(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0xF89640", Offset = "0xF89640", VA = "0xF89640")]
		public static Request<UserList> GetInvitableUsers()
		{
			return null;
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xF8974C", Offset = "0xF8974C", VA = "0xF8974C")]
		public static Request<UserList> GetInvitableUsers2([Optional] RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xF89894", Offset = "0xF89894", VA = "0xF89894")]
		public static Request<RoomList> GetModeratedRooms()
		{
			return null;
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xF899A0", Offset = "0xF899A0", VA = "0xF899A0")]
		public static Request<Room> InviteUser(ulong roomID, string inviteToken)
		{
			return null;
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xF89AC4", Offset = "0xF89AC4", VA = "0xF89AC4")]
		public static Request<Room> Join(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xF89BE8", Offset = "0xF89BE8", VA = "0xF89BE8")]
		public static Request<Room> Join2(ulong roomID, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xF89D38", Offset = "0xF89D38", VA = "0xF89D38")]
		public static Request<Room> KickUser(ulong roomID, ulong userID, int kickDurationSeconds)
		{
			return null;
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xF89E6C", Offset = "0xF89E6C", VA = "0xF89E6C")]
		public static Request LaunchInvitableUserFlow(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xF89F80", Offset = "0xF89F80", VA = "0xF89F80")]
		public static Request<Room> Leave(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xF8A09C", Offset = "0xF8A09C", VA = "0xF8A09C")]
		public static Request<Room> SetDescription(ulong roomID, string description)
		{
			return null;
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xF8A1C0", Offset = "0xF8A1C0", VA = "0xF8A1C0")]
		public static Request<Room> UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus)
		{
			return null;
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xF8A2E4", Offset = "0xF8A2E4", VA = "0xF8A2E4")]
		public static Request UpdateOwner(ulong roomID, ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xF8A400", Offset = "0xF8A400", VA = "0xF8A400")]
		public static Request<Room> UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy)
		{
			return null;
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xF88FF0", Offset = "0xF88FF0", VA = "0xF88FF0")]
		public static void SetRoomInviteAcceptedNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0xF8A524", Offset = "0xF8A524", VA = "0xF8A524")]
		public static void SetRoomInviteReceivedNotificationCallback(Message<RoomInviteNotification>.Callback callback)
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xF8A59C", Offset = "0xF8A59C", VA = "0xF8A59C")]
		public static void SetUpdateNotificationCallback(Message<Room>.Callback callback)
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0xF8A614", Offset = "0xF8A614", VA = "0xF8A614")]
		public static Request<RoomList> GetNextRoomListPage(RoomList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000163")]
	public static class Matchmaking
	{
		[Token(Token = "0x20002D1")]
		public class CustomQuery
		{
			[Token(Token = "0x2000308")]
			public struct Criterion
			{
				[Token(Token = "0x4000D51")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string key;

				[Token(Token = "0x4000D52")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public MatchmakingCriterionImportance importance;

				[Token(Token = "0x4000D53")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Dictionary<string, object> parameters;

				[Token(Token = "0x6001187")]
				[Address(RVA = "0xF77108", Offset = "0xF77108", VA = "0xF77108")]
				public Criterion(string key_, MatchmakingCriterionImportance importance_)
				{
				}
			}

			[Token(Token = "0x4000C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> data;

			[Token(Token = "0x4000C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Criterion[] criteria;

			[Token(Token = "0x60010E0")]
			[Address(RVA = "0xF75C20", Offset = "0xF75C20", VA = "0xF75C20")]
			public IntPtr ToUnmanaged()
			{
				return default(IntPtr);
			}

			[Token(Token = "0x60010E1")]
			[Address(RVA = "0xF77100", Offset = "0xF77100", VA = "0xF77100")]
			public CustomQuery()
			{
			}
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xF756FC", Offset = "0xF756FC", VA = "0xF756FC")]
		public static Request ReportResultsInsecure(ulong roomID, Dictionary<string, int> data)
		{
			return null;
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0xF759B8", Offset = "0xF759B8", VA = "0xF759B8")]
		public static Request<MatchmakingStats> GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach = MatchmakingStatApproach.Trailing)
		{
			return null;
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0xF75AEC", Offset = "0xF75AEC", VA = "0xF75AEC")]
		public static Request<MatchmakingBrowseResult> Browse(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0xF75F5C", Offset = "0xF75F5C", VA = "0xF75F5C")]
		public static Request<MatchmakingBrowseResult> Browse2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xF760FC", Offset = "0xF760FC", VA = "0xF760FC")]
		public static Request Cancel(string pool, string requestHash)
		{
			return null;
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0xF76218", Offset = "0xF76218", VA = "0xF76218")]
		public static Request Cancel()
		{
			return null;
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xF7631C", Offset = "0xF7631C", VA = "0xF7631C")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates = false, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xF76468", Offset = "0xF76468", VA = "0xF76468")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0xF765B8", Offset = "0xF765B8", VA = "0xF765B8")]
		public static Request<Room> CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0xF766EC", Offset = "0xF766EC", VA = "0xF766EC")]
		public static Request<Room> CreateRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0xF7683C", Offset = "0xF7683C", VA = "0xF7683C")]
		public static Request<MatchmakingEnqueueResult> Enqueue(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xF76970", Offset = "0xF76970", VA = "0xF76970")]
		public static Request<MatchmakingEnqueueResult> Enqueue2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xF76AC0", Offset = "0xF76AC0", VA = "0xF76AC0")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom(ulong roomID, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xF76BF4", Offset = "0xF76BF4", VA = "0xF76BF4")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom2(ulong roomID, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xF76D44", Offset = "0xF76D44", VA = "0xF76D44")]
		public static Request<MatchmakingAdminSnapshot> GetAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xF76E50", Offset = "0xF76E50", VA = "0xF76E50")]
		public static Request<Room> JoinRoom(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xF76F74", Offset = "0xF76F74", VA = "0xF76F74")]
		public static Request StartMatch(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xF77088", Offset = "0xF77088", VA = "0xF77088")]
		public static void SetMatchFoundNotificationCallback(Message<Room>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000164")]
	public static class Net
	{
		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xF85BEC", Offset = "0xF85BEC", VA = "0xF85BEC")]
		public static Packet ReadPacket()
		{
			return null;
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xF85DBC", Offset = "0xF85DBC", VA = "0xF85DBC")]
		public static bool SendPacket(ulong userID, byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xF85F08", Offset = "0xF85F08", VA = "0xF85F08")]
		public static void Connect(ulong userID)
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0xF85FF4", Offset = "0xF85FF4", VA = "0xF85FF4")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xF860E0", Offset = "0xF860E0", VA = "0xF860E0")]
		public static void Close(ulong userID)
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xF861CC", Offset = "0xF861CC", VA = "0xF861CC")]
		public static bool IsConnected(ulong userID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xF862BC", Offset = "0xF862BC", VA = "0xF862BC")]
		public static bool SendPacketToCurrentRoom(byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xF863F4", Offset = "0xF863F4", VA = "0xF863F4")]
		public static bool AcceptForCurrentRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xF864D0", Offset = "0xF864D0", VA = "0xF864D0")]
		public static void CloseForCurrentRoom()
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0xF865A8", Offset = "0xF865A8", VA = "0xF865A8")]
		public static Request<PingResult> Ping(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xF866C4", Offset = "0xF866C4", VA = "0xF866C4")]
		public static void SetConnectionStateChangedCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xF8673C", Offset = "0xF8673C", VA = "0xF8673C")]
		public static void SetPeerConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xF867B4", Offset = "0xF867B4", VA = "0xF867B4")]
		public static void SetPingResultNotificationCallback(Message<PingResult>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000165")]
	public static class Leaderboards
	{
		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xF74D40", Offset = "0xF74D40", VA = "0xF74D40")]
		public static Request<LeaderboardEntryList> GetNextEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xF74E70", Offset = "0xF74E70", VA = "0xF74E70")]
		public static Request<LeaderboardEntryList> GetPreviousEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xF74FA0", Offset = "0xF74FA0", VA = "0xF74FA0")]
		public static Request<LeaderboardEntryList> GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xF750DC", Offset = "0xF750DC", VA = "0xF750DC")]
		public static Request<LeaderboardEntryList> GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xF75210", Offset = "0xF75210", VA = "0xF75210")]
		public static Request<bool> WriteEntry(string leaderboardName, long score, [Optional] byte[] extraData, bool forceUpdate = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000166")]
	public static class Voip
	{
		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xED7660", Offset = "0xED7660", VA = "0xED7660")]
		public static void Start(ulong userID)
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xED774C", Offset = "0xED774C", VA = "0xED774C")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xED7838", Offset = "0xED7838", VA = "0xED7838")]
		public static void Stop(ulong userID)
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xED7924", Offset = "0xED7924", VA = "0xED7924")]
		public static void SetMicrophoneFilterCallback(CAPI.FilterCallback callback)
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xED7A48", Offset = "0xED7A48", VA = "0xED7A48")]
		public static void SetMicrophoneMuted(VoipMuteState state)
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0xED7B34", Offset = "0xED7B34", VA = "0xED7B34")]
		public static VoipMuteState GetSystemVoipMicrophoneMuted()
		{
			return default(VoipMuteState);
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0xED7C10", Offset = "0xED7C10", VA = "0xED7C10")]
		public static SystemVoipStatus GetSystemVoipStatus()
		{
			return default(SystemVoipStatus);
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xED7CEC", Offset = "0xED7CEC", VA = "0xED7CEC")]
		public static VoipDtxState GetIsConnectionUsingDtx(ulong peerID)
		{
			return default(VoipDtxState);
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xED7DDC", Offset = "0xED7DDC", VA = "0xED7DDC")]
		public static VoipBitrate GetLocalBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xED7ECC", Offset = "0xED7ECC", VA = "0xED7ECC")]
		public static VoipBitrate GetRemoteBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xED7FBC", Offset = "0xED7FBC", VA = "0xED7FBC")]
		public static void SetNewConnectionOptions(VoipOptions voipOptions)
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xED8124", Offset = "0xED8124", VA = "0xED8124")]
		public static Request<SystemVoipState> SetSystemVoipSuppressed(bool suppressed)
		{
			return null;
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xED8240", Offset = "0xED8240", VA = "0xED8240")]
		public static void SetVoipConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xED82B8", Offset = "0xED82B8", VA = "0xED82B8")]
		public static void SetVoipStateChangeCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xED8330", Offset = "0xED8330", VA = "0xED8330")]
		public static void SetSystemVoipStateNotificationCallback(Message<SystemVoipState>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000167")]
	public static class Achievements
	{
		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x1ABF5A4", Offset = "0x1ABF5A4", VA = "0x1ABF5A4")]
		public static Request<AchievementUpdate> AddCount(string name, ulong count)
		{
			return null;
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x1ABF77C", Offset = "0x1ABF77C", VA = "0x1ABF77C")]
		public static Request<AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x1ABF970", Offset = "0x1ABF970", VA = "0x1ABF970")]
		public static Request<AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x1ABFAEC", Offset = "0x1ABFAEC", VA = "0x1ABFAEC")]
		public static Request<AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x1ABFC68", Offset = "0x1ABFC68", VA = "0x1ABFC68")]
		public static Request<AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x1ABFEE8", Offset = "0x1ABFEE8", VA = "0x1ABFEE8")]
		public static Request<AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x1AC0168", Offset = "0x1AC0168", VA = "0x1AC0168")]
		public static Request<AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x1AC0328", Offset = "0x1AC0328", VA = "0x1AC0328")]
		public static Request<AchievementDefinitionList> GetNextAchievementDefinitionListPage(AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x1AC0548", Offset = "0x1AC0548", VA = "0x1AC0548")]
		public static Request<AchievementProgressList> GetNextAchievementProgressListPage(AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000168")]
	public static class Application
	{
		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x1AC0994", Offset = "0x1AC0994", VA = "0x1AC0994")]
		public static Request<ApplicationVersion> GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x1AC0B10", Offset = "0x1AC0B10", VA = "0x1AC0B10")]
		public static Request<string> LaunchOtherApp(ulong appID, [Optional] ApplicationOptions deeplink_options)
		{
			return null;
		}
	}
	[Token(Token = "0x2000169")]
	public static class AssetFile
	{
		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x1AC11F4", Offset = "0x1AC11F4", VA = "0x1AC11F4")]
		public static Request<AssetFileDeleteResult> Delete(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x1AC138C", Offset = "0x1AC138C", VA = "0x1AC138C")]
		public static Request<AssetFileDeleteResult> DeleteById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x1AC1524", Offset = "0x1AC1524", VA = "0x1AC1524")]
		public static Request<AssetFileDeleteResult> DeleteByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x1AC16E4", Offset = "0x1AC16E4", VA = "0x1AC16E4")]
		public static Request<AssetFileDownloadResult> Download(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x1AC187C", Offset = "0x1AC187C", VA = "0x1AC187C")]
		public static Request<AssetFileDownloadResult> DownloadById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x1AC1A14", Offset = "0x1AC1A14", VA = "0x1AC1A14")]
		public static Request<AssetFileDownloadResult> DownloadByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x1AC1BD4", Offset = "0x1AC1BD4", VA = "0x1AC1BD4")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancel(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x1AC1D6C", Offset = "0x1AC1D6C", VA = "0x1AC1D6C")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x1AC1F04", Offset = "0x1AC1F04", VA = "0x1AC1F04")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x1AC20C4", Offset = "0x1AC20C4", VA = "0x1AC20C4")]
		public static Request<AssetDetailsList> GetList()
		{
			return null;
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x1AC2240", Offset = "0x1AC2240", VA = "0x1AC2240")]
		public static Request<AssetDetails> Status(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x1AC23D8", Offset = "0x1AC23D8", VA = "0x1AC23D8")]
		public static Request<AssetDetails> StatusById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x1AC2570", Offset = "0x1AC2570", VA = "0x1AC2570")]
		public static Request<AssetDetails> StatusByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x1AC2730", Offset = "0x1AC2730", VA = "0x1AC2730")]
		public static void SetDownloadUpdateNotificationCallback(Message<AssetFileDownloadUpdate>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200016A")]
	public static class Avatar
	{
	}
	[Token(Token = "0x200016B")]
	public static class Cal
	{
	}
	[Token(Token = "0x200016C")]
	public static class CloudStorage
	{
		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xF72B70", Offset = "0xF72B70", VA = "0xF72B70")]
		public static Request<CloudStorageUpdateResponse> Delete(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xF72C94", Offset = "0xF72C94", VA = "0xF72C94")]
		public static Request<CloudStorageData> Load(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xF72DB8", Offset = "0xF72DB8", VA = "0xF72DB8")]
		public static Request<CloudStorageMetadataList> LoadBucketMetadata(string bucket)
		{
			return null;
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xF72ED4", Offset = "0xF72ED4", VA = "0xF72ED4")]
		public static Request<CloudStorageConflictMetadata> LoadConflictMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xF72FF8", Offset = "0xF72FF8", VA = "0xF72FF8")]
		public static Request<CloudStorageData> LoadHandle(string handle)
		{
			return null;
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xF73114", Offset = "0xF73114", VA = "0xF73114")]
		public static Request<CloudStorageMetadata> LoadMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xF73238", Offset = "0xF73238", VA = "0xF73238")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xF7336C", Offset = "0xF7336C", VA = "0xF7336C")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xF734A0", Offset = "0xF734A0", VA = "0xF734A0")]
		public static Request<CloudStorageUpdateResponse> Save(string bucket, string key, byte[] data, long counter, string extraData)
		{
			return null;
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xF73600", Offset = "0xF73600", VA = "0xF73600")]
		public static Request<CloudStorageMetadataList> GetNextCloudStorageMetadataListPage(CloudStorageMetadataList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200016D")]
	public static class CloudStorage2
	{
		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xF7377C", Offset = "0xF7377C", VA = "0xF7377C")]
		public static Request<string> GetUserDirectoryPath()
		{
			return null;
		}
	}
	[Token(Token = "0x200016E")]
	public static class Colocation
	{
	}
	[Token(Token = "0x200016F")]
	public static class Entitlements
	{
		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xF74130", Offset = "0xF74130", VA = "0xF74130")]
		public static Request IsUserEntitledToApplication()
		{
			return null;
		}
	}
	[Token(Token = "0x2000170")]
	public static class GraphAPI
	{
	}
	[Token(Token = "0x2000171")]
	public static class HTTP
	{
	}
	[Token(Token = "0x2000172")]
	public static class IAP
	{
		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xF74260", Offset = "0xF74260", VA = "0xF74260")]
		public static Request ConsumePurchase(string sku)
		{
			return null;
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xF74374", Offset = "0xF74374", VA = "0xF74374")]
		public static Request<ProductList> GetProductsBySKU(string[] skus)
		{
			return null;
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xF744A4", Offset = "0xF744A4", VA = "0xF744A4")]
		public static Request<PurchaseList> GetViewerPurchases()
		{
			return null;
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xF745B0", Offset = "0xF745B0", VA = "0xF745B0")]
		public static Request<PurchaseList> GetViewerPurchasesDurableCache()
		{
			return null;
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xF746BC", Offset = "0xF746BC", VA = "0xF746BC")]
		public static Request<Purchase> LaunchCheckoutFlow(string sku)
		{
			return null;
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xF74820", Offset = "0xF74820", VA = "0xF74820")]
		public static Request<ProductList> GetNextProductListPage(ProductList list)
		{
			return null;
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xF7499C", Offset = "0xF7499C", VA = "0xF7499C")]
		public static Request<PurchaseList> GetNextPurchaseListPage(PurchaseList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000173")]
	public static class LanguagePack
	{
		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xF74B18", Offset = "0xF74B18", VA = "0xF74B18")]
		public static Request<AssetDetails> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xF74C24", Offset = "0xF74C24", VA = "0xF74C24")]
		public static Request<AssetFileDownloadResult> SetCurrent(string tag)
		{
			return null;
		}
	}
	[Token(Token = "0x2000174")]
	public static class Livestreaming
	{
		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xF75360", Offset = "0xF75360", VA = "0xF75360")]
		public static Request<LivestreamingStatus> GetStatus()
		{
			return null;
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xF7546C", Offset = "0xF7546C", VA = "0xF7546C")]
		public static Request<LivestreamingStatus> PauseStream()
		{
			return null;
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xF75578", Offset = "0xF75578", VA = "0xF75578")]
		public static Request<LivestreamingStatus> ResumeStream()
		{
			return null;
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xF75684", Offset = "0xF75684", VA = "0xF75684")]
		public static void SetStatusUpdateNotificationCallback(Message<LivestreamingStatus>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000175")]
	public static class Media
	{
		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xF77838", Offset = "0xF77838", VA = "0xF77838")]
		public static Request<ShareMediaResult> ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return null;
		}
	}
	[Token(Token = "0x2000176")]
	public static class NetSync
	{
		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xF8682C", Offset = "0xF8682C", VA = "0xF8682C")]
		public static void SetConnectionStatusChangedNotificationCallback(Message<NetSyncConnection>.Callback callback)
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xF868A4", Offset = "0xF868A4", VA = "0xF868A4")]
		public static void SetSessionsChangedNotificationCallback(Message<NetSyncSessionsChangedNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000177")]
	public static class Notifications
	{
		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xF86C10", Offset = "0xF86C10", VA = "0xF86C10")]
		public static Request<RoomInviteNotificationList> GetRoomInviteNotifications()
		{
			return null;
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xF86D1C", Offset = "0xF86D1C", VA = "0xF86D1C")]
		public static Request MarkAsRead(ulong notificationID)
		{
			return null;
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xF86E30", Offset = "0xF86E30", VA = "0xF86E30")]
		public static Request<RoomInviteNotificationList> GetNextRoomInviteNotificationListPage(RoomInviteNotificationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000178")]
	public static class Parties
	{
		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xF872E0", Offset = "0xF872E0", VA = "0xF872E0")]
		public static Request<Party> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xF873EC", Offset = "0xF873EC", VA = "0xF873EC")]
		public static void SetPartyUpdateNotificationCallback(Message<PartyUpdateNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000179")]
	public static class RichPresence
	{
		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xF87BC8", Offset = "0xF87BC8", VA = "0xF87BC8")]
		public static Request Clear()
		{
			return null;
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xF87CCC", Offset = "0xF87CCC", VA = "0xF87CCC")]
		public static Request<DestinationList> GetDestinations()
		{
			return null;
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xF87DD8", Offset = "0xF87DD8", VA = "0xF87DD8")]
		public static Request Set(RichPresenceOptions richPresenceOptions)
		{
			return null;
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xF87F68", Offset = "0xF87F68", VA = "0xF87F68")]
		public static Request<DestinationList> GetNextDestinationListPage(DestinationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200017A")]
	public static class Users
	{
		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xEC49A8", Offset = "0xEC49A8", VA = "0xEC49A8")]
		public static Request<User> Get(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xED6BB0", Offset = "0xED6BB0", VA = "0xED6BB0")]
		public static Request<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xEC489C", Offset = "0xEC489C", VA = "0xEC489C")]
		public static Request<User> GetLoggedInUser()
		{
			return null;
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xEC4AC4", Offset = "0xEC4AC4", VA = "0xEC4AC4")]
		public static Request<UserList> GetLoggedInUserFriends()
		{
			return null;
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xED6CBC", Offset = "0xED6CBC", VA = "0xED6CBC")]
		public static Request<UserAndRoomList> GetLoggedInUserFriendsAndRooms()
		{
			return null;
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xED6DC8", Offset = "0xED6DC8", VA = "0xED6DC8")]
		public static Request<UserAndRoomList> GetLoggedInUserRecentlyMetUsersAndRooms([Optional] UserOptions userOptions)
		{
			return null;
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xED6F10", Offset = "0xED6F10", VA = "0xED6F10")]
		public static Request<OrgScopedID> GetOrgScopedID(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xED702C", Offset = "0xED702C", VA = "0xED702C")]
		public static Request<SdkAccountList> GetSdkAccounts()
		{
			return null;
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xEC4790", Offset = "0xEC4790", VA = "0xEC4790")]
		public static Request<UserProof> GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xED7138", Offset = "0xED7138", VA = "0xED7138")]
		public static Request<LaunchFriendRequestFlowResult> LaunchFriendRequestFlow(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xED7254", Offset = "0xED7254", VA = "0xED7254")]
		public static Request LaunchProfile(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xED7368", Offset = "0xED7368", VA = "0xED7368")]
		public static Request<UserAndRoomList> GetNextUserAndRoomListPage(UserAndRoomList list)
		{
			return null;
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xED74E4", Offset = "0xED74E4", VA = "0xED74E4")]
		public static Request<UserList> GetNextUserListPage(UserList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200017B")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x4000646")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BBF8", Offset = "0xA8BBF8")]
		Success = 0,
		[Token(Token = "0x4000647")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BC30", Offset = "0xA8BC30")]
		Uninitialized = -1,
		[Token(Token = "0x4000648")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BC68", Offset = "0xA8BC68")]
		PreLoaded = -2,
		[Token(Token = "0x4000649")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BCA0", Offset = "0xA8BCA0")]
		FileInvalid = -3,
		[Token(Token = "0x400064A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BCD8", Offset = "0xA8BCD8")]
		SignatureInvalid = -4,
		[Token(Token = "0x400064B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BD10", Offset = "0xA8BD10")]
		UnableToVerify = -5,
		[Token(Token = "0x400064C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BD48", Offset = "0xA8BD48")]
		VersionMismatch = -6,
		[Token(Token = "0x400064D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BD80", Offset = "0xA8BD80")]
		Unknown = -7,
		[Token(Token = "0x400064E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BDB8", Offset = "0xA8BDB8")]
		InvalidCredentials = -8,
		[Token(Token = "0x400064F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BDF0", Offset = "0xA8BDF0")]
		NotEntitled = -9
	}
	[Token(Token = "0x200017C")]
	public static class PlatformInternal
	{
		[Token(Token = "0x20002D2")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x4000C6D")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x4000C6E")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x4000C6F")]
			Avatar_UpdateMetaData = 2077219214u,
			[Token(Token = "0x4000C70")]
			Cal_FinalizeApplication = 497667029u,
			[Token(Token = "0x4000C71")]
			Cal_GetSuggestedApplications = 1450209301u,
			[Token(Token = "0x4000C72")]
			Cal_ProposeApplication = 1317270237u,
			[Token(Token = "0x4000C73")]
			Colocation_GetCurrentMapUuid = 878018226u,
			[Token(Token = "0x4000C74")]
			Colocation_RequestMap = 840263277u,
			[Token(Token = "0x4000C75")]
			Colocation_ShareMap = 409847005u,
			[Token(Token = "0x4000C76")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x4000C77")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x4000C78")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x4000C79")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x4000C7A")]
			HTTP_MultiPartPost = 1480774160u,
			[Token(Token = "0x4000C7B")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x4000C7C")]
			Livestreaming_IsAllowedForApplication = 191729014u,
			[Token(Token = "0x4000C7D")]
			Livestreaming_StartPartyStream = 2066701532u,
			[Token(Token = "0x4000C7E")]
			Livestreaming_StartStream = 1343932350u,
			[Token(Token = "0x4000C7F")]
			Livestreaming_StopPartyStream = 661065560u,
			[Token(Token = "0x4000C80")]
			Livestreaming_StopStream = 1155796426u,
			[Token(Token = "0x4000C81")]
			Livestreaming_UpdateCommentsOverlayVisibility = 528318516u,
			[Token(Token = "0x4000C82")]
			Livestreaming_UpdateMicStatus = 475495815u,
			[Token(Token = "0x4000C83")]
			NetSync_Connect = 1684899167u,
			[Token(Token = "0x4000C84")]
			NetSync_Disconnect = 359268021u,
			[Token(Token = "0x4000C85")]
			NetSync_GetSessions = 1859521077u,
			[Token(Token = "0x4000C86")]
			NetSync_SetVoipGroup = 1477614734u,
			[Token(Token = "0x4000C87")]
			NetSync_SetVoipMicSource = 855832432u,
			[Token(Token = "0x4000C88")]
			NetSync_SetVoipSessionMuted = 1434844938u,
			[Token(Token = "0x4000C89")]
			NetSync_SetVoipStreamMode = 1742839095u,
			[Token(Token = "0x4000C8A")]
			Party_Create = 450042703u,
			[Token(Token = "0x4000C8B")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x4000C8C")]
			Party_Get = 1586058173u,
			[Token(Token = "0x4000C8D")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x4000C8E")]
			Party_Invite = 901104867u,
			[Token(Token = "0x4000C8F")]
			Party_Join = 1744993395u,
			[Token(Token = "0x4000C90")]
			Party_Leave = 848430801u,
			[Token(Token = "0x4000C91")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x4000C92")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x4000C93")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x4000C94")]
			SystemPermissions_GetStatus = 493497353u,
			[Token(Token = "0x4000C95")]
			SystemPermissions_LaunchDeeplink = 442139697u,
			[Token(Token = "0x4000C96")]
			User_CancelRecordingForReportFlow = 65065289u,
			[Token(Token = "0x4000C97")]
			User_GetLinkedAccounts = 1469314134u,
			[Token(Token = "0x4000C98")]
			User_LaunchBlockFlow = 1876305192u,
			[Token(Token = "0x4000C99")]
			User_LaunchReportFlow = 1449304081u,
			[Token(Token = "0x4000C9A")]
			User_LaunchReportFlow2 = 2139314275u,
			[Token(Token = "0x4000C9B")]
			User_LaunchUnblockFlow = 346172055u,
			[Token(Token = "0x4000C9C")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x4000C9D")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x4000C9E")]
			User_NewTestUserFriends = 517416647u,
			[Token(Token = "0x4000C9F")]
			User_StartRecordingForReportFlow = 1819161571u,
			[Token(Token = "0x4000CA0")]
			User_StopRecordingAndLaunchReportFlow = 1618513035u,
			[Token(Token = "0x4000CA1")]
			User_StopRecordingAndLaunchReportFlow2 = 432190251u,
			[Token(Token = "0x4000CA2")]
			User_TestUserCreateDeviceManifest = 1701884605u
		}

		[Token(Token = "0x20002D3")]
		public static class HTTP
		{
			[Token(Token = "0x60010E2")]
			[Address(RVA = "0xF875F4", Offset = "0xF875F4", VA = "0xF875F4")]
			public static void SetHttpTransferUpdateCallback(Message<HttpTransferUpdate>.Callback callback)
			{
			}
		}

		[Token(Token = "0x20002D4")]
		public static class Users
		{
			[Token(Token = "0x60010E3")]
			[Address(RVA = "0xF8766C", Offset = "0xF8766C", VA = "0xF8766C")]
			public static Request<LinkedAccountList> GetLinkedAccounts(ServiceProvider[] providers)
			{
				return null;
			}
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xF87464", Offset = "0xF87464", VA = "0xF87464")]
		public static void CrashApplication()
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xF7A850", Offset = "0xF7A850", VA = "0xF7A850")]
		internal static Message ParseMessageHandle(IntPtr messageHandle, Message.MessageType messageType)
		{
			return null;
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xF874C4", Offset = "0xF874C4", VA = "0xF874C4")]
		public static Request<PlatformInitialize> InitializeStandaloneAsync(ulong appID, string accessToken)
		{
			return null;
		}
	}
	[Token(Token = "0x200017D")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x1700009A")]
		public static string AppID
		{
			[Token(Token = "0x6000AFF")]
			[Address(RVA = "0xF74104", Offset = "0xF74104", VA = "0xF74104")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B00")]
			[Address(RVA = "0xF8793C", Offset = "0xF8793C", VA = "0xF8793C")]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public static string MobileAppID
		{
			[Token(Token = "0x6000B01")]
			[Address(RVA = "0xF740E4", Offset = "0xF740E4", VA = "0xF740E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B02")]
			[Address(RVA = "0xF8796C", Offset = "0xF8796C", VA = "0xF8796C")]
			set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0xF73DEC", Offset = "0xF73DEC", VA = "0xF73DEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0xF8799C", Offset = "0xF8799C", VA = "0xF8799C")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0xF87810", Offset = "0xF87810", VA = "0xF87810")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0xF879CC", Offset = "0xF879CC", VA = "0xF879CC")]
			set
			{
			}
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xF87A24", Offset = "0xF87A24", VA = "0xF87A24")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public sealed class Request<T> : Request
	{
		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Message<T>.Callback callback_;

		[Token(Token = "0x6000B08")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6000B09")]
		public Request<T> OnComplete(Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6000B0A")]
		public override void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class Request
	{
		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Message.Callback callback_;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8BE58", Offset = "0xA8BE58")]
		private ulong <RequestID>k__BackingField;

		[Token(Token = "0x1700009E")]
		public ulong RequestID
		{
			[Token(Token = "0x6000B0C")]
			[Address(RVA = "0xF87A9C", Offset = "0xF87A9C", VA = "0xF87A9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA90364", Offset = "0xA90364")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0xF87AA4", Offset = "0xF87AA4", VA = "0xF87AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA90374", Offset = "0xA90374")]
			set
			{
			}
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xF74234", Offset = "0xF74234", VA = "0xF74234")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xF87AAC", Offset = "0xF87AAC", VA = "0xF87AAC")]
		public Request OnComplete(Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xF87B34", Offset = "0xF87B34", VA = "0xF87B34", Slot = "4")]
		public virtual void HandleMessage(Message msg)
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xF72A7C", Offset = "0xF72A7C", VA = "0xF72A7C")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x2000180")]
	public enum RichPresenceExtraContext
	{
		[Token(Token = "0x4000658")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BE68", Offset = "0xA8BE68")]
		Unknown,
		[Token(Token = "0x4000659")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BEA0", Offset = "0xA8BEA0")]
		None,
		[Token(Token = "0x400065A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BED8", Offset = "0xA8BED8")]
		CurrentCapacity,
		[Token(Token = "0x400065B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BF10", Offset = "0xA8BF10")]
		StartedAgo,
		[Token(Token = "0x400065C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BF48", Offset = "0xA8BF48")]
		EndingIn,
		[Token(Token = "0x400065D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BF80", Offset = "0xA8BF80")]
		LookingForAMatch
	}
	[Token(Token = "0x2000181")]
	public class RichPresenceOptions
	{
		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xF880E4", Offset = "0xF880E4", VA = "0xF880E4")]
		public RichPresenceOptions()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xF8815C", Offset = "0xF8815C", VA = "0xF8815C")]
		public void SetApiName(string value)
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xF881D8", Offset = "0xF881D8", VA = "0xF881D8")]
		public void SetArgs(string key, string value)
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xF8825C", Offset = "0xF8825C", VA = "0xF8825C")]
		public void ClearArgs()
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xF882C8", Offset = "0xF882C8", VA = "0xF882C8")]
		public void SetCurrentCapacity(uint value)
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xF88344", Offset = "0xF88344", VA = "0xF88344")]
		public void SetDeeplinkMessageOverride(string value)
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xF883C0", Offset = "0xF883C0", VA = "0xF883C0")]
		public void SetEndTime(DateTime value)
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xF8843C", Offset = "0xF8843C", VA = "0xF8843C")]
		public void SetExtraContext(RichPresenceExtraContext value)
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xF884B8", Offset = "0xF884B8", VA = "0xF884B8")]
		public void SetIsIdle(bool value)
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xF88534", Offset = "0xF88534", VA = "0xF88534")]
		public void SetIsJoinable(bool value)
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xF885B0", Offset = "0xF885B0", VA = "0xF885B0")]
		public void SetJoinableId(string value)
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xF8862C", Offset = "0xF8862C", VA = "0xF8862C")]
		public void SetMaxCapacity(uint value)
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xF886A8", Offset = "0xF886A8", VA = "0xF886A8")]
		public void SetStartTime(DateTime value)
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xF87F18", Offset = "0xF87F18", VA = "0xF87F18")]
		public static explicit operator IntPtr(RichPresenceOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xF88724", Offset = "0xF88724", VA = "0xF88724", Slot = "1")]
		~RichPresenceOptions()
		{
		}
	}
	[Token(Token = "0x2000182")]
	public enum RoomJoinPolicy
	{
		[Token(Token = "0x4000660")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BFB8", Offset = "0xA8BFB8")]
		None,
		[Token(Token = "0x4000661")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8BFF0", Offset = "0xA8BFF0")]
		Everyone,
		[Token(Token = "0x4000662")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C028", Offset = "0xA8C028")]
		FriendsOfMembers,
		[Token(Token = "0x4000663")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C060", Offset = "0xA8C060")]
		FriendsOfOwner,
		[Token(Token = "0x4000664")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C098", Offset = "0xA8C098")]
		InvitedUsers,
		[Token(Token = "0x4000665")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C0D0", Offset = "0xA8C0D0")]
		Unknown
	}
	[Token(Token = "0x2000183")]
	public enum RoomJoinability
	{
		[Token(Token = "0x4000667")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C108", Offset = "0xA8C108")]
		Unknown,
		[Token(Token = "0x4000668")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C140", Offset = "0xA8C140")]
		AreIn,
		[Token(Token = "0x4000669")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C178", Offset = "0xA8C178")]
		AreKicked,
		[Token(Token = "0x400066A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C1B0", Offset = "0xA8C1B0")]
		CanJoin,
		[Token(Token = "0x400066B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C1E8", Offset = "0xA8C1E8")]
		IsFull,
		[Token(Token = "0x400066C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C220", Offset = "0xA8C220")]
		NoViewer,
		[Token(Token = "0x400066D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C258", Offset = "0xA8C258")]
		PolicyPrevents
	}
	[Token(Token = "0x2000184")]
	public enum RoomMembershipLockStatus
	{
		[Token(Token = "0x400066F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C290", Offset = "0xA8C290")]
		Unknown,
		[Token(Token = "0x4000670")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C2C8", Offset = "0xA8C2C8")]
		Lock,
		[Token(Token = "0x4000671")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C300", Offset = "0xA8C300")]
		Unlock
	}
	[Token(Token = "0x2000185")]
	public class RoomOptions
	{
		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xF887DC", Offset = "0xF887DC", VA = "0xF887DC")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xF88854", Offset = "0xF88854", VA = "0xF88854")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xF888D8", Offset = "0xF888D8", VA = "0xF888D8")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xF88944", Offset = "0xF88944", VA = "0xF88944")]
		public void SetExcludeRecentlyMet(bool value)
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xF889C0", Offset = "0xF889C0", VA = "0xF889C0")]
		public void SetMaxUserResults(uint value)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xF88A3C", Offset = "0xF88A3C", VA = "0xF88A3C")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xF88AB8", Offset = "0xF88AB8", VA = "0xF88AB8")]
		public void SetRecentlyMetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xF88B34", Offset = "0xF88B34", VA = "0xF88B34")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xF88BB0", Offset = "0xF88BB0", VA = "0xF88BB0")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xF88C2C", Offset = "0xF88C2C", VA = "0xF88C2C")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xF88C7C", Offset = "0xF88C7C", VA = "0xF88C7C", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public enum RoomType
	{
		[Token(Token = "0x4000674")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C338", Offset = "0xA8C338")]
		Unknown,
		[Token(Token = "0x4000675")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C370", Offset = "0xA8C370")]
		Matchmaking,
		[Token(Token = "0x4000676")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C3A8", Offset = "0xA8C3A8")]
		Moderated,
		[Token(Token = "0x4000677")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C3E0", Offset = "0xA8C3E0")]
		Private,
		[Token(Token = "0x4000678")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C418", Offset = "0xA8C418")]
		Solo
	}
	[Token(Token = "0x2000187")]
	public enum SdkAccountType
	{
		[Token(Token = "0x400067A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C450", Offset = "0xA8C450")]
		Unknown,
		[Token(Token = "0x400067B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C488", Offset = "0xA8C488")]
		Oculus,
		[Token(Token = "0x400067C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C4C0", Offset = "0xA8C4C0")]
		FacebookGameroom
	}
	[Token(Token = "0x2000188")]
	public enum SendPolicy
	{
		[Token(Token = "0x400067E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C4F8", Offset = "0xA8C4F8")]
		Unreliable,
		[Token(Token = "0x400067F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C530", Offset = "0xA8C530")]
		Reliable,
		[Token(Token = "0x4000680")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C568", Offset = "0xA8C568")]
		Unknown
	}
	[Token(Token = "0x2000189")]
	public enum ServiceProvider
	{
		[Token(Token = "0x4000682")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C5A0", Offset = "0xA8C5A0")]
		Unknown,
		[Token(Token = "0x4000683")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C5D8", Offset = "0xA8C5D8")]
		Dropbox,
		[Token(Token = "0x4000684")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C610", Offset = "0xA8C610")]
		Facebook,
		[Token(Token = "0x4000685")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C648", Offset = "0xA8C648")]
		Google,
		[Token(Token = "0x4000686")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C680", Offset = "0xA8C680")]
		Instagram,
		[Token(Token = "0x4000687")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C6B8", Offset = "0xA8C6B8")]
		RemoteMedia
	}
	[Token(Token = "0x200018A")]
	public enum ShareMediaStatus
	{
		[Token(Token = "0x4000689")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C6F0", Offset = "0xA8C6F0")]
		Unknown,
		[Token(Token = "0x400068A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C728", Offset = "0xA8C728")]
		Shared,
		[Token(Token = "0x400068B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C760", Offset = "0xA8C760")]
		Canceled
	}
	[Token(Token = "0x200018B")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x20002D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA88924", Offset = "0xA88924")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xED6204", Offset = "0xED6204", VA = "0xED6204")]
		public Request<PlatformInitialize> InitializeInEditor()
		{
			return null;
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xED6344", Offset = "0xED6344", VA = "0xED6344")]
		public Request<PlatformInitialize> AsyncInitialize(ulong appID, string accessToken)
		{
			return null;
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xED6408", Offset = "0xED6408", VA = "0xED6408")]
		public StandalonePlatform()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public sealed class StandalonePlatformSettings
	{
		[Token(Token = "0x1700009F")]
		public static string OculusPlatformTestUserEmail
		{
			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0xED674C", Offset = "0xED674C", VA = "0xED674C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B2F")]
			[Address(RVA = "0xED679C", Offset = "0xED679C", VA = "0xED679C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public static string OculusPlatformTestUserPassword
		{
			[Token(Token = "0x6000B30")]
			[Address(RVA = "0xED67A0", Offset = "0xED67A0", VA = "0xED67A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B31")]
			[Address(RVA = "0xED67F0", Offset = "0xED67F0", VA = "0xED67F0")]
			set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public static string OculusPlatformTestUserAccessToken
		{
			[Token(Token = "0x6000B32")]
			[Address(RVA = "0xED67F4", Offset = "0xED67F4", VA = "0xED67F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B33")]
			[Address(RVA = "0xED6844", Offset = "0xED6844", VA = "0xED6844")]
			set
			{
			}
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xED6848", Offset = "0xED6848", VA = "0xED6848")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public enum SystemVoipStatus
	{
		[Token(Token = "0x400068D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C798", Offset = "0xA8C798")]
		Unknown,
		[Token(Token = "0x400068E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C7D0", Offset = "0xA8C7D0")]
		Unavailable,
		[Token(Token = "0x400068F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C808", Offset = "0xA8C808")]
		Suppressed,
		[Token(Token = "0x4000690")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C840", Offset = "0xA8C840")]
		Active
	}
	[Token(Token = "0x200018E")]
	public enum TimeWindow
	{
		[Token(Token = "0x4000692")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C878", Offset = "0xA8C878")]
		Unknown,
		[Token(Token = "0x4000693")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C8B0", Offset = "0xA8C8B0")]
		OneHour,
		[Token(Token = "0x4000694")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C8E8", Offset = "0xA8C8E8")]
		OneDay,
		[Token(Token = "0x4000695")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C920", Offset = "0xA8C920")]
		OneWeek,
		[Token(Token = "0x4000696")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C958", Offset = "0xA8C958")]
		ThirtyDays,
		[Token(Token = "0x4000697")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C990", Offset = "0xA8C990")]
		NinetyDays
	}
	[Token(Token = "0x200018F")]
	public class UserOptions
	{
		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xED6850", Offset = "0xED6850", VA = "0xED6850")]
		public UserOptions()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xED68C8", Offset = "0xED68C8", VA = "0xED68C8")]
		public void SetMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xED6944", Offset = "0xED6944", VA = "0xED6944")]
		public void AddServiceProvider(ServiceProvider value)
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xED69C0", Offset = "0xED69C0", VA = "0xED69C0")]
		public void ClearServiceProviders()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xED6A2C", Offset = "0xED6A2C", VA = "0xED6A2C")]
		public void SetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xED6AA8", Offset = "0xED6AA8", VA = "0xED6AA8")]
		public static explicit operator IntPtr(UserOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xED6AF8", Offset = "0xED6AF8", VA = "0xED6AF8", Slot = "1")]
		~UserOptions()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public enum UserOrdering
	{
		[Token(Token = "0x400069A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8C9C8", Offset = "0xA8C9C8")]
		Unknown,
		[Token(Token = "0x400069B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CA00", Offset = "0xA8CA00")]
		None,
		[Token(Token = "0x400069C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CA38", Offset = "0xA8CA38")]
		PresenceAlphabetical
	}
	[Token(Token = "0x2000191")]
	public enum UserPresenceStatus
	{
		[Token(Token = "0x400069E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CA70", Offset = "0xA8CA70")]
		Unknown,
		[Token(Token = "0x400069F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CAA8", Offset = "0xA8CAA8")]
		Online,
		[Token(Token = "0x40006A0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CAE0", Offset = "0xA8CAE0")]
		Offline
	}
	[Token(Token = "0x2000192")]
	public class VoipAudioSourceHiLevel : MonoBehaviour
	{
		[Token(Token = "0x20002D6")]
		public class FilterReadDelegate : MonoBehaviour
		{
			[Token(Token = "0x4000CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x4000CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float[] scratchBuffer;

			[Token(Token = "0x60010E8")]
			[Address(RVA = "0xED8B74", Offset = "0xED8B74", VA = "0xED8B74")]
			private void Awake()
			{
			}

			[Token(Token = "0x60010E9")]
			[Address(RVA = "0xED8C34", Offset = "0xED8C34", VA = "0xED8C34")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}

			[Token(Token = "0x60010EA")]
			[Address(RVA = "0xED912C", Offset = "0xED912C", VA = "0xED912C")]
			public FilterReadDelegate()
			{
			}
		}

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float peakAmplitude;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x170000A2")]
		public ulong senderID
		{
			[Token(Token = "0x6000B3C")]
			[Address(RVA = "0xED83A8", Offset = "0xED83A8", VA = "0xED83A8")]
			set
			{
			}
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xED846C", Offset = "0xED846C", VA = "0xED846C")]
		protected void Stop()
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xED8470", Offset = "0xED8470", VA = "0xED8470")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xED84AC", Offset = "0xED84AC", VA = "0xED84AC")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xED8770", Offset = "0xED8770", VA = "0xED8770")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xED878C", Offset = "0xED878C", VA = "0xED878C", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xED87FC", Offset = "0xED87FC", VA = "0xED87FC")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xED8884", Offset = "0xED8884", VA = "0xED8884")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xED8B68", Offset = "0xED8B68", VA = "0xED8B68")]
		public VoipAudioSourceHiLevel()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public enum VoipBitrate
	{
		[Token(Token = "0x40006A8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CB18", Offset = "0xA8CB18")]
		Unknown,
		[Token(Token = "0x40006A9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CB50", Offset = "0xA8CB50")]
		B16000,
		[Token(Token = "0x40006AA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CB88", Offset = "0xA8CB88")]
		B24000,
		[Token(Token = "0x40006AB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CBC0", Offset = "0xA8CBC0")]
		B32000,
		[Token(Token = "0x40006AC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CBF8", Offset = "0xA8CBF8")]
		B64000,
		[Token(Token = "0x40006AD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CC30", Offset = "0xA8CC30")]
		B96000,
		[Token(Token = "0x40006AE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CC68", Offset = "0xA8CC68")]
		B128000
	}
	[Token(Token = "0x2000194")]
	public enum VoipDtxState
	{
		[Token(Token = "0x40006B0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CCA0", Offset = "0xA8CCA0")]
		Unknown,
		[Token(Token = "0x40006B1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CCD8", Offset = "0xA8CCD8")]
		Enabled,
		[Token(Token = "0x40006B2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CD10", Offset = "0xA8CD10")]
		Disabled
	}
	[Token(Token = "0x2000195")]
	public enum VoipMuteState
	{
		[Token(Token = "0x40006B4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CD48", Offset = "0xA8CD48")]
		Unknown,
		[Token(Token = "0x40006B5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CD80", Offset = "0xA8CD80")]
		Muted,
		[Token(Token = "0x40006B6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CDB8", Offset = "0xA8CDB8")]
		Unmuted
	}
	[Token(Token = "0x2000196")]
	public class VoipOptions
	{
		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xED9134", Offset = "0xED9134", VA = "0xED9134")]
		public VoipOptions()
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xED91AC", Offset = "0xED91AC", VA = "0xED91AC")]
		public void SetBitrateForNewConnections(VoipBitrate value)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xED9228", Offset = "0xED9228", VA = "0xED9228")]
		public void SetCreateNewConnectionUseDtx(VoipDtxState value)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xED80D4", Offset = "0xED80D4", VA = "0xED80D4")]
		public static explicit operator IntPtr(VoipOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xED92A4", Offset = "0xED92A4", VA = "0xED92A4", Slot = "1")]
		~VoipOptions()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong senderID;

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xED935C", Offset = "0xED935C", VA = "0xED935C", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xED941C", Offset = "0xED941C", VA = "0xED941C", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xED9424", Offset = "0xED9424", VA = "0xED9424", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xED94C4", Offset = "0xED94C4", VA = "0xED94C4", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xED87F4", Offset = "0xED87F4", VA = "0xED87F4")]
		public VoipPCMSourceNative()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public enum VoipSampleRate
	{
		[Token(Token = "0x40006BA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CDF0", Offset = "0xA8CDF0")]
		Unknown,
		[Token(Token = "0x40006BB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CE28", Offset = "0xA8CE28")]
		HZ24000,
		[Token(Token = "0x40006BC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CE60", Offset = "0xA8CE60")]
		HZ44100,
		[Token(Token = "0x40006BD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA8CE98", Offset = "0xA8CE98")]
		HZ48000
	}
	[Token(Token = "0x2000199")]
	public class WindowsPlatform
	{
		[Token(Token = "0x20002D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA88938", Offset = "0xA88938")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xED94C8", Offset = "0xED94C8", VA = "0xED94C8")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xED95A0", Offset = "0xED95A0", VA = "0xED95A0")]
		private IntPtr getCallbackPointer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xED95E0", Offset = "0xED95E0", VA = "0xED95E0")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xED96C4", Offset = "0xED96C4", VA = "0xED96C4")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xED97D8", Offset = "0xED97D8", VA = "0xED97D8")]
		public WindowsPlatform()
		{
		}
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x200019A")]
	public class AbuseReportRecording
	{
		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string RecordingUuid;

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xF7B5BC", Offset = "0xF7B5BC", VA = "0xF7B5BC")]
		public AbuseReportRecording(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class AchievementDefinition
	{
		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BitfieldLength;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong Target;

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xF8469C", Offset = "0xF8469C", VA = "0xF8469C")]
		public AchievementDefinition(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class AchievementDefinitionList : DeserializableList<AchievementDefinition>
	{
		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xF7B72C", Offset = "0xF7B72C", VA = "0xF7B72C")]
		public AchievementDefinitionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class AchievementProgress
	{
		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong Count;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xF84760", Offset = "0xF84760", VA = "0xF84760")]
		public AchievementProgress(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class AchievementProgressList : DeserializableList<AchievementProgress>
	{
		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xF7BA2C", Offset = "0xF7BA2C", VA = "0xF7BA2C")]
		public AchievementProgressList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class AchievementUpdate
	{
		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xF7BD2C", Offset = "0xF7BD2C", VA = "0xF7BD2C")]
		public AchievementUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class ApplicationVersion
	{
		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CurrentCode;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string CurrentName;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int LatestCode;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string LatestName;

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xF7BEB0", Offset = "0xF7BEB0", VA = "0xF7BEB0")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class AssetDetails
	{
		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string AssetType;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DownloadStatus;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Filepath;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string IapStatus;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly LanguagePackInfo LanguageOptional;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA8CED0", Offset = "0xA8CED0")]
		public readonly LanguagePackInfo Language;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string Metadata;

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xF7C05C", Offset = "0xF7C05C", VA = "0xF7C05C")]
		public AssetDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class AssetDetailsList : DeserializableList<AssetDetails>
	{
		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xF7C2E0", Offset = "0xF7C2E0", VA = "0xF7C2E0")]
		public AssetDetailsList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class AssetFileDeleteResult
	{
		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xF7C598", Offset = "0xF7C598", VA = "0xF7C598")]
		public AssetFileDeleteResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class AssetFileDownloadCancelResult
	{
		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xF7C740", Offset = "0xF7C740", VA = "0xF7C740")]
		public AssetFileDownloadCancelResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class AssetFileDownloadResult
	{
		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xF7C8E8", Offset = "0xF7C8E8", VA = "0xF7C8E8")]
		public AssetFileDownloadResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class AssetFileDownloadUpdate
	{
		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BytesTotal;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly int BytesTransferred;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Completed;

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xF7CA68", Offset = "0xF7CA68", VA = "0xF7CA68")]
		public AssetFileDownloadUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class CalApplicationFinalized
	{
		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CountdownMS;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchDetails;

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xF7CC14", Offset = "0xF7CC14", VA = "0xF7CC14")]
		public CalApplicationFinalized(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class CalApplicationProposed
	{
		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xF7CDA4", Offset = "0xF7CDA4", VA = "0xF7CDA4")]
		public CalApplicationProposed(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public class CalApplicationSuggestion
	{
		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string SocialContext;

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xF8490C", Offset = "0xF8490C", VA = "0xF8490C")]
		public CalApplicationSuggestion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class CalApplicationSuggestionList : DeserializableList<CalApplicationSuggestion>
	{
		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xF7CF6C", Offset = "0xF7CF6C", VA = "0xF7CF6C")]
		public CalApplicationSuggestionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xF7D224", Offset = "0xF7D224", VA = "0xF7D224")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class CloudStorageData
	{
		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Data;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Key;

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xF7D3F8", Offset = "0xF7D3F8", VA = "0xF7D3F8")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Counter;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string ExtraData;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Key;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong SaveTime;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string VersionHandle;

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xF7D8B0", Offset = "0xF7D8B0", VA = "0xF7D8B0")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class CloudStorageMetadataList : DeserializableList<CloudStorageMetadata>
	{
		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xF7D5B0", Offset = "0xF7D5B0", VA = "0xF7D5B0")]
		public CloudStorageMetadataList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Key;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string VersionHandle;

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xF7DAB4", Offset = "0xF7DAB4", VA = "0xF7DAB4")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001B0")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA88348", Offset = "0xA88348")]
	public class DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> _Data;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _NextUrl;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _PreviousUrl;

		[Token(Token = "0x170000A3")]
		public int Count
		{
			[Token(Token = "0x6000B6B")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000A4")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6000B6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A5")]
		public T Item
		{
			[Token(Token = "0x6000B6E")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000B6F")]
			set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA92474", Offset = "0xA92474")]
		public List<T> Data
		{
			[Token(Token = "0x6000B7A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A7")]
		public bool HasNextPage
		{
			[Token(Token = "0x6000B7B")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A8")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6000B7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A9")]
		public string NextUrl
		{
			[Token(Token = "0x6000B7D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		public string PreviousUrl
		{
			[Token(Token = "0x6000B7E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B6D")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6000B70")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6000B71")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000B72")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B73")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000B74")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000B75")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6000B76")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B77")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000B78")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6000B79")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000B7F")]
		public DeserializableList()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class Destination
	{
		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApiName;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DisplayName;

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xF849AC", Offset = "0xF849AC", VA = "0xF849AC")]
		public Destination(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public class DestinationList : DeserializableList<Destination>
	{
		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xF7DC6C", Offset = "0xF7DC6C", VA = "0xF7DC6C")]
		public DestinationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class Error
	{
		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xF77BC8", Offset = "0xF77BC8", VA = "0xF77BC8")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Payload;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsCompleted;

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xF7DF6C", Offset = "0xF7DF6C", VA = "0xF7DF6C")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class InstalledApplication
	{
		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApplicationId;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string PackageName;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Status;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int VersionCode;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VersionName;

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xF84A74", Offset = "0xF84A74", VA = "0xF84A74")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class InstalledApplicationList : DeserializableList<InstalledApplication>
	{
		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xF7E200", Offset = "0xF7E200", VA = "0xF7E200")]
		public InstalledApplicationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class LanguagePackInfo
	{
		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string EnglishName;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string NativeName;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Tag;

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xF84844", Offset = "0xF84844", VA = "0xF84844")]
		public LanguagePackInfo(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class LaunchBlockFlowResult
	{
		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidBlock;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidCancel;

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xF7E518", Offset = "0xF7E518", VA = "0xF7E518")]
		public LaunchBlockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class LaunchDetails
	{
		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string DestinationApiName;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchSource;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly ulong RoomID;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA8CF08", Offset = "0xA8CF08")]
		public readonly UserList Users;

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xF84B68", Offset = "0xF84B68", VA = "0xF84B68")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class LaunchFriendRequestFlowResult
	{
		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidSendRequest;

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xF7E698", Offset = "0xF7E698", VA = "0xF7E698")]
		public LaunchFriendRequestFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class LaunchReportFlowResult
	{
		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserReportId;

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xF7E878", Offset = "0xF7E878", VA = "0xF7E878")]
		public LaunchReportFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class LaunchUnblockFlowResult
	{
		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidUnblock;

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xF7EA54", Offset = "0xF7EA54", VA = "0xF7EA54")]
		public LaunchUnblockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int Rank;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly long Score;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly User User;

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xF84CC8", Offset = "0xF84CC8", VA = "0xF84CC8")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class LeaderboardEntryList : DeserializableList<LeaderboardEntry>
	{
		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong TotalCount;

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xF7EC90", Offset = "0xF7EC90", VA = "0xF7EC90")]
		public LeaderboardEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class LinkedAccount
	{
		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string AccessToken;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ServiceProvider ServiceProvider;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string UserId;

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xF84DC8", Offset = "0xF84DC8", VA = "0xF84DC8")]
		public LinkedAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class LinkedAccountList : DeserializableList<LinkedAccount>
	{
		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xF7F020", Offset = "0xF7F020", VA = "0xF7F020")]
		public LinkedAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class LivestreamingApplicationStatus
	{
		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool StreamingEnabled;

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xF7F338", Offset = "0xF7F338", VA = "0xF7F338")]
		public LivestreamingApplicationStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class LivestreamingStartResult
	{
		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LivestreamingStartStatus StreamingResult;

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xF7F504", Offset = "0xF7F504", VA = "0xF7F504")]
		public LivestreamingStartResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CommentsVisible;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool IsPaused;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int LivestreamingType;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool MicEnabled;

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xF7F66C", Offset = "0xF7F66C", VA = "0xF7F66C")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class LivestreamingVideoStats
	{
		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CommentCount;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int ReactionCount;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string TotalViews;

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xF7F884", Offset = "0xF7F884", VA = "0xF7F884")]
		public LivestreamingVideoStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshotCandidateList Candidates;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xF7FA14", Offset = "0xF7FA14", VA = "0xF7FA14")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CanMatch;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyTotalScore;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string TraceId;

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xF8505C", Offset = "0xF8505C", VA = "0xF8505C")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public class MatchmakingAdminSnapshotCandidateList : DeserializableList<MatchmakingAdminSnapshotCandidate>
	{
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xF84E84", Offset = "0xF84E84", VA = "0xF84E84")]
		public MatchmakingAdminSnapshotCandidateList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly RoomList Rooms;

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xF7FC18", Offset = "0xF7FC18", VA = "0xF7FC18")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshot AdminSnapshotOptional;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA8CF40", Offset = "0xA8CF40")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint AverageWait;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Pool;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string RequestHash;

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xF7FDEC", Offset = "0xF7FDEC", VA = "0xF7FDEC")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Room Room;

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xF8004C", Offset = "0xF8004C", VA = "0xF8004C")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly User UserOptional;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA8CF78", Offset = "0xA8CF78")]
		public readonly User User;

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xF85130", Offset = "0xF85130", VA = "0xF85130")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class MatchmakingEnqueuedUserList : DeserializableList<MatchmakingEnqueuedUser>
	{
		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xF85240", Offset = "0xF85240", VA = "0xF85240")]
		public MatchmakingEnqueuedUserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class MatchmakingStats
	{
		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DrawCount;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint LossCount;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint SkillLevel;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double SkillMean;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double SkillStandardDeviation;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly uint WinCount;

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xF80714", Offset = "0xF80714", VA = "0xF80714")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class NetSyncConnection
	{
		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly NetSyncDisconnectReason DisconnectReason;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SessionId;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly NetSyncConnectionStatus Status;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string ZoneId;

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xF808CC", Offset = "0xF808CC", VA = "0xF808CC")]
		public NetSyncConnection(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public class NetSyncSession
	{
		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool Muted;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SessionId;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong UserId;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VoipGroup;

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xF85418", Offset = "0xF85418", VA = "0xF85418")]
		public NetSyncSession(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class NetSyncSessionList : DeserializableList<NetSyncSession>
	{
		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xF80ADC", Offset = "0xF80ADC", VA = "0xF80ADC")]
		public NetSyncSessionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class NetSyncSessionsChangedNotification
	{
		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly NetSyncSessionList Sessions;

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xF80D94", Offset = "0xF80D94", VA = "0xF80D94")]
		public NetSyncSessionsChangedNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class NetSyncSetSessionPropertyResult
	{
		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly NetSyncSession Session;

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xF80F98", Offset = "0xF80F98", VA = "0xF80F98")]
		public NetSyncSetSessionPropertyResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class NetworkingPeer
	{
		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8CFB0", Offset = "0xA8CFB0")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8CFC0", Offset = "0xA8CFC0")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x170000AB")]
		public ulong ID
		{
			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0xF854EC", Offset = "0xF854EC", VA = "0xF854EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA90384", Offset = "0xA90384")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0xF854F4", Offset = "0xF854F4", VA = "0xF854F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA90394", Offset = "0xA90394")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AC")]
		public PeerConnectionState State
		{
			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0xF854FC", Offset = "0xF854FC", VA = "0xF854FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA903A4", Offset = "0xA903A4")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0xF85504", Offset = "0xF85504", VA = "0xF85504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA903B4", Offset = "0xA903B4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xF81150", Offset = "0xF81150", VA = "0xF81150")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class OrgScopedID
	{
		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xF8126C", Offset = "0xF8126C", VA = "0xF8126C")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class Party
	{
		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA8CFD0", Offset = "0xA8CFD0")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly User LeaderOptional;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA8D008", Offset = "0xA8D008")]
		public readonly User Leader;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA8D040", Offset = "0xA8D040")]
		public readonly Room Room;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA8D078", Offset = "0xA8D078")]
		public readonly UserList Users;

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xF81434", Offset = "0xF81434", VA = "0xF81434")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class PartyID
	{
		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xF81810", Offset = "0xF81810", VA = "0xF81810")]
		public PartyID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class PartyUpdateNotification
	{
		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PartyUpdateAction Action;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong PartyId;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderId;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string UpdateTimestamp;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string UserAlias;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong UserId;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UserName;

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xF81A58", Offset = "0xF81A58", VA = "0xF81A58")]
		public PartyUpdateNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public class Pid
	{
		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Id;

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xF8550C", Offset = "0xF8550C", VA = "0xF8550C")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class PidList : DeserializableList<Pid>
	{
		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xF81C40", Offset = "0xF81C40", VA = "0xF81C40")]
		public PidList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public class PingResult
	{
		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8D0B0", Offset = "0xA8D0B0")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x170000AD")]
		public ulong ID
		{
			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0xF8559C", Offset = "0xF8559C", VA = "0xF8559C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA903C4", Offset = "0xA903C4")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0xF855A4", Offset = "0xF855A4", VA = "0xF855A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA903D4", Offset = "0xA903D4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0xF855AC", Offset = "0xF855AC", VA = "0xF855AC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000AF")]
		public bool IsTimeout
		{
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0xF85614", Offset = "0xF85614", VA = "0xF85614")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xF81F78", Offset = "0xF81F78", VA = "0xF81F78")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class PlatformInitialize
	{
		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PlatformInitializeResult Result;

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xF82098", Offset = "0xF82098", VA = "0xF82098")]
		public PlatformInitialize(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class Product
	{
		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Description;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string FormattedPrice;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xF85660", Offset = "0xF85660", VA = "0xF85660")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class ProductList : DeserializableList<Product>
	{
		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xF82200", Offset = "0xF82200", VA = "0xF82200")]
		public ProductList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class Purchase
	{
		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong ID;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xF82500", Offset = "0xF82500", VA = "0xF82500")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class PurchaseList : DeserializableList<Purchase>
	{
		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xF826A0", Offset = "0xF826A0", VA = "0xF826A0")]
		public PurchaseList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class Room
	{
		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Description;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA8D0C0", Offset = "0xA8D0C0")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly MatchmakingEnqueuedUserList MatchedUsersOptional;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA8D0F8", Offset = "0xA8D0F8")]
		public readonly MatchmakingEnqueuedUserList MatchedUsers;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly uint MaxUsers;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public readonly string Name;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public readonly User OwnerOptional;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA8D130", Offset = "0xA8D130")]
		public readonly User Owner;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public readonly TeamList TeamsOptional;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA8D168", Offset = "0xA8D168")]
		public readonly TeamList Teams;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public readonly RoomType Type;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA8D1A0", Offset = "0xA8D1A0")]
		public readonly UserList Users;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public readonly uint Version;

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xF80220", Offset = "0xF80220", VA = "0xF80220")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class RoomList : DeserializableList<Room>
	{
		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xF82F18", Offset = "0xF82F18", VA = "0xF82F18")]
		public RoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong RoomID;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderID;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime SentTime;

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xF82A80", Offset = "0xF82A80", VA = "0xF82A80")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class RoomInviteNotificationList : DeserializableList<RoomInviteNotification>
	{
		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xF82C18", Offset = "0xF82C18", VA = "0xF82C18")]
		public RoomInviteNotificationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class SdkAccount
	{
		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly SdkAccountType AccountType;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserId;

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xF8591C", Offset = "0xF8591C", VA = "0xF8591C")]
		public SdkAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class SdkAccountList : DeserializableList<SdkAccount>
	{
		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xF833D8", Offset = "0xF833D8", VA = "0xF833D8")]
		public SdkAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class ShareMediaResult
	{
		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ShareMediaStatus Status;

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xF83690", Offset = "0xF83690", VA = "0xF83690")]
		public ShareMediaResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class SystemPermission
	{
		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool HasPermission;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly PermissionGrantStatus PermissionGrantStatus;

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xF83904", Offset = "0xF83904", VA = "0xF83904")]
		public SystemPermission(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class SystemVoipState
	{
		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xF83A80", Offset = "0xF83A80", VA = "0xF83A80")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class Team
	{
		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly UserList AssignedUsers;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int MaxUsers;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly int MinUsers;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xF859B4", Offset = "0xF859B4", VA = "0xF859B4")]
		public Team(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class TeamList : DeserializableList<Team>
	{
		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xF85744", Offset = "0xF85744", VA = "0xF85744")]
		public TeamList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class User
	{
		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string ImageURL;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string InviteToken;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string OculusID;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Presence;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string PresenceDeeplinkMessage;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string PresenceDestinationApiName;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xF83BF8", Offset = "0xF83BF8", VA = "0xF83BF8")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class UserList : DeserializableList<User>
	{
		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xF84130", Offset = "0xF84130", VA = "0xF84130")]
		public UserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class UserAndRoom
	{
		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Room RoomOptional;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA8D1D8", Offset = "0xA8D1D8")]
		public readonly Room Room;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly User User;

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xF85AA4", Offset = "0xF85AA4", VA = "0xF85AA4")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class UserAndRoomList : DeserializableList<UserAndRoom>
	{
		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xF83E30", Offset = "0xF83E30", VA = "0xF83E30")]
		public UserAndRoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class UserProof
	{
		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Value;

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xF84430", Offset = "0xF84430", VA = "0xF84430")]
		public UserProof(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class UserReportID
	{
		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xF84600", Offset = "0xF84600", VA = "0xF84600")]
		public UserReportID(IntPtr o)
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrHoops
{
	[Token(Token = "0x20001F1")]
	public class AIPlayer : Player
	{
		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xECC52C", Offset = "0xECC52C", VA = "0xECC52C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xECC824", Offset = "0xECC824", VA = "0xECC824")]
		public AIPlayer()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class AchievementsManager
	{
		[Token(Token = "0x40007AF")]
		private const string LIKES_TO_WIN = "LIKES_TO_WIN";

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_likesToWinUnlocked;

		[Token(Token = "0x170000B0")]
		public bool LikesToWin
		{
			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0xECC8A4", Offset = "0xECC8A4", VA = "0xECC8A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xECC8AC", Offset = "0xECC8AC", VA = "0xECC8AC")]
		public void CheckForAchievmentUpdates()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xECC9CC", Offset = "0xECC9CC", VA = "0xECC9CC")]
		public void RecordWinForLocalUser()
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xECCA28", Offset = "0xECCA28", VA = "0xECCA28")]
		public AchievementsManager()
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xECCA30", Offset = "0xECCA30", VA = "0xECCA30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA903E4", Offset = "0xA903E4")]
		private void <CheckForAchievmentUpdates>b__4_0(Message<AchievementProgressList> msg)
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class BallEjector : MonoBehaviour
	{
		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xECCC68", Offset = "0xECCC68", VA = "0xECCC68")]
		public BallEjector()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class Camera2DController : MonoBehaviour
	{
		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xECCC70", Offset = "0xECCC70", VA = "0xECCC70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xECCEE4", Offset = "0xECCEE4", VA = "0xECCEE4")]
		public Camera2DController()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class DetectBasket : MonoBehaviour
	{
		[Token(Token = "0x20002D8")]
		private enum BasketPhase
		{
			[Token(Token = "0x4000CA6")]
			NONE,
			[Token(Token = "0x4000CA7")]
			TOP,
			[Token(Token = "0x4000CA8")]
			BOTH,
			[Token(Token = "0x4000CA9")]
			BOTTOM
		}

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BasketPhase m_phase;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Player m_owningPlayer;

		[Token(Token = "0x170000B1")]
		public Player Player
		{
			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0xECCEEC", Offset = "0xECCEEC", VA = "0xECCEEC")]
			set
			{
			}
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xECCEF4", Offset = "0xECCEF4", VA = "0xECCEF4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xECCFD4", Offset = "0xECCFD4", VA = "0xECCFD4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xECD18C", Offset = "0xECD18C", VA = "0xECD18C")]
		public DetectBasket()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class FlyText : MonoBehaviour
	{
		[Token(Token = "0x40007B3")]
		private const float LIFESPAN = 3f;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 m_movePerFrame;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_eol;

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xECD194", Offset = "0xECD194", VA = "0xECD194")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xECD230", Offset = "0xECD230", VA = "0xECD230")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xECD36C", Offset = "0xECD36C", VA = "0xECD36C")]
		public FlyText()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class GoalMover : MonoBehaviour
	{
		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float MAX_OFFSET;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_speed;

		[Token(Token = "0x40007B8")]
		private const float MOVE_TOLERANCE = 0.1f;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_expectedPosition;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_moveDirection;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_nextMoveDirection;

		[Token(Token = "0x170000B2")]
		public Vector3 ExpectedPosition
		{
			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0xECD408", Offset = "0xECD408", VA = "0xECD408")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0xECD414", Offset = "0xECD414", VA = "0xECD414")]
			set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public Vector3 MoveDirection
		{
			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0xECD420", Offset = "0xECD420", VA = "0xECD420")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0xECD42C", Offset = "0xECD42C", VA = "0xECD42C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public Vector3 NextMoveDirection
		{
			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0xECD438", Offset = "0xECD438", VA = "0xECD438")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0xECD444", Offset = "0xECD444", VA = "0xECD444")]
			set
			{
			}
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xECD450", Offset = "0xECD450", VA = "0xECD450")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xECD5E0", Offset = "0xECD5E0", VA = "0xECD5E0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xECD90C", Offset = "0xECD90C", VA = "0xECD90C")]
		public GoalMover()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class LeaderboardManager
	{
		[Token(Token = "0x20002D9")]
		public delegate void OnMostWinsLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x20002DA")]
		public delegate void OnHighScoreLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x40007BC")]
		private const string MOST_MATCHES_WON = "MOST_MATCHES_WON";

		[Token(Token = "0x40007BD")]
		private const string HIGHEST_MATCH_SCORE = "HIGHEST_MATCH_SCORE";

		[Token(Token = "0x40007BE")]
		private const int TOP_N_COUNT = 5;

		[Token(Token = "0x40007BF")]
		private const float LEADERBOARD_POLL_FREQ = 30f;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_nextCheckTime;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SortedDictionary<int, LeaderboardEntry> m_mostWins;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_foundLocalUserMostWinsEntry;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private long m_numWins;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OnMostWinsLeaderboardUpdated m_mostWinsCallback;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SortedDictionary<int, LeaderboardEntry> m_highScores;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_foundLocalUserHighScore;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OnHighScoreLeaderboardUpdated m_highScoreCallback;

		[Token(Token = "0x170000B5")]
		public OnMostWinsLeaderboardUpdated MostWinsLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0xECDBC0", Offset = "0xECDBC0", VA = "0xECDBC0")]
			set
			{
			}
		}

		[Token(Token = "0x170000B6")]
		public OnHighScoreLeaderboardUpdated HighScoreLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0xECE390", Offset = "0xECE390", VA = "0xECE390")]
			set
			{
			}
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xECD920", Offset = "0xECD920", VA = "0xECD920")]
		public void CheckForUpdates()
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xECD988", Offset = "0xECD988", VA = "0xECD988")]
		private void QueryMostWinsLeaderboard()
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xECDBC8", Offset = "0xECDBC8", VA = "0xECDBC8")]
		private void MostWinsGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xECDAA4", Offset = "0xECDAA4", VA = "0xECDAA4")]
		private void QueryHighScoreLeaderboard()
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xECE398", Offset = "0xECE398", VA = "0xECE398")]
		private void HighestScoreGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xECEAB4", Offset = "0xECEAB4", VA = "0xECEAB4")]
		public void SubmitMatchScores(bool wonMatch, uint score)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xECEB68", Offset = "0xECEB68", VA = "0xECEB68")]
		public LeaderboardManager()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class LocalPlayer : Player
	{
		[Token(Token = "0x170000B7")]
		public override uint Score
		{
			[Token(Token = "0x6000BEB")]
			[Address(RVA = "0xECEBF8", Offset = "0xECEBF8", VA = "0xECEBF8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xECEED8", Offset = "0xECEED8", VA = "0xECEED8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xECF058", Offset = "0xECF058", VA = "0xECF058")]
		public LocalPlayer()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class MatchController : MonoBehaviour
	{
		[Token(Token = "0x20002DB")]
		private enum State
		{
			[Token(Token = "0x4000CAB")]
			UNKNOWN,
			[Token(Token = "0x4000CAC")]
			NONE,
			[Token(Token = "0x4000CAD")]
			WAITING_TO_START_PRACTICE,
			[Token(Token = "0x4000CAE")]
			PRACTICING,
			[Token(Token = "0x4000CAF")]
			VIEWING_RESULTS_PRACTICE,
			[Token(Token = "0x4000CB0")]
			WAITING_FOR_MATCH,
			[Token(Token = "0x4000CB1")]
			WAITING_TO_SETUP_MATCH,
			[Token(Token = "0x4000CB2")]
			PLAYING_MATCH,
			[Token(Token = "0x4000CB3")]
			VIEWING_MATCH_RESULTS
		}

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_timerText;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_idleCameraTransform;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_matchmakeButtonText;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerArea[] m_playerAreas;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private uint PRACTICE_WARMUP_TIME;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private uint MATCH_WARMUP_TIME;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private uint MATCH_TIME;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private uint MATCH_COOLDOWN_TIME;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_mostWinsLeaderboard;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_highestScoresLeaderboard;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_leaderboardEntryPrefab;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_flytext;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private State m_currentState;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_nextStateTransitionTime;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_localSlot;

		[Token(Token = "0x170000B8")]
		public float MatchStartTime
		{
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0xECF904", Offset = "0xECF904", VA = "0xECF904")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0xECF924", Offset = "0xECF924", VA = "0xECF924")]
			private set
			{
			}
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xECF05C", Offset = "0xECF05C", VA = "0xECF05C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xECF63C", Offset = "0xECF63C", VA = "0xECF63C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xECF35C", Offset = "0xECF35C", VA = "0xECF35C")]
		private void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xECF660", Offset = "0xECF660", VA = "0xECF660")]
		private void UpdateCheckForNextTimedTransition()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xECF704", Offset = "0xECF704", VA = "0xECF704")]
		private void UpdateMatchTimer()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xECF92C", Offset = "0xECF92C", VA = "0xECF92C")]
		private void SetupForIdle()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xECFBA0", Offset = "0xECFBA0", VA = "0xECFBA0")]
		private void SetupForPractice()
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xED0268", Offset = "0xED0268", VA = "0xED0268")]
		private Player MatchPlayerAddedCallback(int slot, User user)
		{
			return null;
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xECF9D8", Offset = "0xECF9D8", VA = "0xECF9D8")]
		private void MoveCameraToIdlePosition()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xECFCA0", Offset = "0xECFCA0", VA = "0xECFCA0")]
		private void MoveCameraToMatchPosition()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xED0514", Offset = "0xED0514", VA = "0xED0514")]
		public void StartPracticeMatch()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xED052C", Offset = "0xED052C", VA = "0xED052C")]
		public void PlayOnlineOrCancel()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xED06DC", Offset = "0xED06DC", VA = "0xED06DC")]
		private void OnMatchFoundCallback(bool success)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xED06F0", Offset = "0xED06F0", VA = "0xED06F0")]
		private float StartTimeOfferCallback(float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xED07F4", Offset = "0xED07F4", VA = "0xED07F4")]
		private void MostWinsLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xED0D44", Offset = "0xED0D44", VA = "0xED0D44")]
		private void HighestScoreLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xECFE24", Offset = "0xECFE24", VA = "0xECFE24")]
		private void CalculateMatchResults()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xED0378", Offset = "0xED0378", VA = "0xED0378")]
		private void DisplayAchievementFlytext()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xED1348", Offset = "0xED1348", VA = "0xED1348")]
		public MatchController()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class MatchmakingManager
	{
		[Token(Token = "0x20002DC")]
		public delegate void OnEnqueueResult(bool successful);

		[Token(Token = "0x20002DD")]
		public delegate Player OnMatchPlayerAdded(int slot, User user);

		[Token(Token = "0x40007D8")]
		private const string NORMAL_POOL = "NORMAL_QUICKMATCH";

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_matchRoom;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<ulong, User> m_remotePlayers;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OnEnqueueResult m_enqueueCallback;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OnMatchPlayerAdded m_playerCallback;

		[Token(Token = "0x170000B9")]
		public OnEnqueueResult EnqueueResultCallback
		{
			[Token(Token = "0x6000C04")]
			[Address(RVA = "0xED14B4", Offset = "0xED14B4", VA = "0xED14B4")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000C05")]
			[Address(RVA = "0xED14BC", Offset = "0xED14BC", VA = "0xED14BC")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public OnMatchPlayerAdded MatchPlayerAddedCallback
		{
			[Token(Token = "0x6000C06")]
			[Address(RVA = "0xED14C4", Offset = "0xED14C4", VA = "0xED14C4")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0xED14CC", Offset = "0xED14CC", VA = "0xED14CC")]
			set
			{
			}
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xED13C0", Offset = "0xED13C0", VA = "0xED13C0")]
		public MatchmakingManager()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xED05FC", Offset = "0xED05FC", VA = "0xED05FC")]
		public void QueueForMatch()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xED14D4", Offset = "0xED14D4", VA = "0xED14D4")]
		private void MatchmakingEnqueueCallback(Message msg)
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xED180C", Offset = "0xED180C", VA = "0xED180C")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xED18DC", Offset = "0xED18DC", VA = "0xED18DC")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xED2100", Offset = "0xED2100", VA = "0xED2100")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xED0138", Offset = "0xED0138", VA = "0xED0138")]
		public void EndMatch()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xED06B4", Offset = "0xED06B4", VA = "0xED06B4")]
		public void LeaveQueue()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class P2PManager
	{
		[Token(Token = "0x20002DE")]
		private class RemotePlayerData
		{
			[Token(Token = "0x4000CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PeerConnectionState state;

			[Token(Token = "0x4000CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RemotePlayer player;

			[Token(Token = "0x4000CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float remoteTimeOffset;

			[Token(Token = "0x4000CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float lastReceivedBallsTime;

			[Token(Token = "0x4000CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly Dictionary<int, P2PNetworkBall> activeBalls;

			[Token(Token = "0x60010FF")]
			[Address(RVA = "0xED39AC", Offset = "0xED39AC", VA = "0xED39AC")]
			public RemotePlayerData()
			{
			}
		}

		[Token(Token = "0x20002DF")]
		public delegate float StartTimeOffer(float remoteTime);

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<ulong, RemotePlayerData> m_remotePlayers;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_timeForNextBallUpdate;

		[Token(Token = "0x40007DF")]
		private const byte TIME_SYNC_MESSAGE = 1;

		[Token(Token = "0x40007E0")]
		private const uint TIME_SYNC_MESSAGE_SIZE = 5u;

		[Token(Token = "0x40007E1")]
		private const int TIME_SYNC_MESSAGE_COUNT = 7;

		[Token(Token = "0x40007E2")]
		private const byte START_TIME_MESSAGE = 2;

		[Token(Token = "0x40007E3")]
		private const uint START_TIME_MESSAGE_SIZE = 5u;

		[Token(Token = "0x40007E4")]
		private const byte BACKBOARD_UPDATE_MESSAGE = 3;

		[Token(Token = "0x40007E5")]
		private const uint BACKBOARD_UPDATE_MESSAGE_SIZE = 41u;

		[Token(Token = "0x40007E6")]
		private const byte LOCAL_BALLS_UPDATE_MESSAGE = 4;

		[Token(Token = "0x40007E7")]
		private const uint LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX = 353u;

		[Token(Token = "0x40007E8")]
		private const float LOCAL_BALLS_UPDATE_DELAY = 0.1f;

		[Token(Token = "0x40007E9")]
		private const byte SCORE_UPDATE_MESSAGE = 5;

		[Token(Token = "0x40007EA")]
		private const uint SCORE_UPDATE_MESSAGE_SIZE = 5u;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<int, P2PNetworkBall> m_localBalls;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] readBuffer;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<ulong, List<float>> m_remoteSyncTimeCache;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<ulong, float> m_remoteSentTimeCache;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StartTimeOffer m_startTimeOfferCallback;

		[Token(Token = "0x170000BB")]
		public StartTimeOffer StartTimeOfferCallback
		{
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0xED4354", Offset = "0xED4354", VA = "0xED4354")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0xED435C", Offset = "0xED435C", VA = "0xED435C")]
			set
			{
			}
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xED277C", Offset = "0xED277C", VA = "0xED277C")]
		public P2PManager()
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xED2930", Offset = "0xED2930", VA = "0xED2930")]
		public void UpdateNetwork()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xED1F48", Offset = "0xED1F48", VA = "0xED1F48")]
		public void AddRemotePlayer(RemotePlayer player)
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xED2524", Offset = "0xED2524", VA = "0xED2524")]
		public void DisconnectAll()
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xED3A28", Offset = "0xED3A28", VA = "0xED3A28")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xED3C08", Offset = "0xED3C08", VA = "0xED3C08")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xED3E70", Offset = "0xED3E70", VA = "0xED3E70")]
		private void SendTimeSyncMessage(ulong remoteID)
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xED2B2C", Offset = "0xED2B2C", VA = "0xED2B2C")]
		private void ReadTimeSyncMessage(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xED42AC", Offset = "0xED42AC", VA = "0xED42AC")]
		private float ShiftRemoteTime(ulong remoteID, float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xED40F0", Offset = "0xED40F0", VA = "0xED40F0")]
		private void OfferMatchStartTime()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xED30E8", Offset = "0xED30E8", VA = "0xED30E8")]
		private void ReceiveMatchStartTimeOffer(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xED4600", Offset = "0xED4600", VA = "0xED4600")]
		public void SendBackboardUpdate(float time, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xED3144", Offset = "0xED3144", VA = "0xED3144")]
		private void ReceiveBackboardUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xECEFC0", Offset = "0xECEFC0", VA = "0xECEFC0")]
		public void AddNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xED4A68", Offset = "0xED4A68", VA = "0xED4A68")]
		public void RemoveNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xED365C", Offset = "0xED365C", VA = "0xED365C")]
		private void SendLocalBallTransforms()
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xED3280", Offset = "0xED3280", VA = "0xED3280")]
		private void ReceiveBallTransforms(ulong remoteID, byte[] msg, ulong msgLength)
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xECED60", Offset = "0xECED60", VA = "0xECED60")]
		public void SendScoreUpdate(uint score)
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xED35B4", Offset = "0xED35B4", VA = "0xED35B4")]
		private void ReceiveScoredUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xED47F8", Offset = "0xED47F8", VA = "0xED47F8")]
		private void PackVector3(Vector3 vec, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xED4848", Offset = "0xED4848", VA = "0xED4848")]
		private Vector3 UnpackVector3(byte[] buf, ref int offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xED5170", Offset = "0xED5170", VA = "0xED5170")]
		private void PackQuaternion(Quaternion quat, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xED3FBC", Offset = "0xED3FBC", VA = "0xED3FBC")]
		private void PackFloat(float value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xED4064", Offset = "0xED4064", VA = "0xED4064")]
		private float UnpackFloat(byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xED45CC", Offset = "0xED45CC", VA = "0xED45CC")]
		private float UnpackTime(ulong remoteID, byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xED4B58", Offset = "0xED4B58", VA = "0xED4B58")]
		private void PackInt32(int value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xED4C60", Offset = "0xED4C60", VA = "0xED4C60")]
		private int UnpackInt32(byte[] buf, ref int offset)
		{
			return default(int);
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xED5040", Offset = "0xED5040", VA = "0xED5040")]
		private void PackUint32(uint value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xED50E0", Offset = "0xED50E0", VA = "0xED50E0")]
		private uint UnpackUint32(byte[] buf, ref int offset)
		{
			return default(uint);
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xED4B10", Offset = "0xED4B10", VA = "0xED4B10")]
		private void PackBool(bool value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xED4C14", Offset = "0xED4C14", VA = "0xED4C14")]
		private bool UnpackBool(byte[] buf, ref int offset)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001FD")]
	public class P2PNetworkBall : MonoBehaviour
	{
		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float lastCollisionTime;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigidBody;

		[Token(Token = "0x170000BC")]
		public Vector3 velocity
		{
			[Token(Token = "0x6000C31")]
			[Address(RVA = "0xED4BF8", Offset = "0xED4BF8", VA = "0xED4BF8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xED5294", Offset = "0xED5294", VA = "0xED5294")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xED4AE4", Offset = "0xED4AE4", VA = "0xED4AE4")]
		public bool IsHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xED4ED4", Offset = "0xED4ED4", VA = "0xED4ED4")]
		public void ProcessRemoteUpdate(float remoteTime, bool isHeld, Vector3 pos, Vector3 vel)
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xED5304", Offset = "0xED5304", VA = "0xED5304")]
		private Vector3 estimatePosition(Vector3 startPosition, Vector3 startVelocty, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xED5440", Offset = "0xED5440", VA = "0xED5440")]
		private Vector3 estimateVelocity(Vector3 startVelocity, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xED5588", Offset = "0xED5588", VA = "0xED5588")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xED55B0", Offset = "0xED55B0", VA = "0xED55B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xED55F0", Offset = "0xED55F0", VA = "0xED55F0")]
		public P2PNetworkBall()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class P2PNetworkGoal : MonoBehaviour
	{
		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GoalMover m_goal;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_lastSentMoveDirection;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_sendUpdates;

		[Token(Token = "0x170000BD")]
		public bool SendUpdates
		{
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0xED55F8", Offset = "0xED55F8", VA = "0xED55F8")]
			set
			{
			}
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xED5604", Offset = "0xED5604", VA = "0xED5604")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xED5674", Offset = "0xED5674", VA = "0xED5674")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xED5750", Offset = "0xED5750", VA = "0xED5750")]
		public void SendBackboardUpdate()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xED48A0", Offset = "0xED48A0", VA = "0xED48A0")]
		public void RemoteBackboardUpdate(float remoteTime, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xED580C", Offset = "0xED580C", VA = "0xED580C")]
		public P2PNetworkGoal()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x20002E0")]
		public enum State
		{
			[Token(Token = "0x4000CBA")]
			INITIALIZING,
			[Token(Token = "0x4000CBB")]
			WAITING_TO_PRACTICE_OR_MATCHMAKE,
			[Token(Token = "0x4000CBC")]
			MATCH_TRANSITION,
			[Token(Token = "0x4000CBD")]
			PLAYING_A_LOCAL_MATCH,
			[Token(Token = "0x4000CBE")]
			PLAYING_A_NETWORKED_MATCH
		}

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private P2PManager m_p2p;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LeaderboardManager m_leaderboards;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AchievementsManager m_achievements;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ulong m_myID;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_myOculusID;

		[Token(Token = "0x170000BE")]
		public static MatchmakingManager Matchmaking
		{
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0xECF268", Offset = "0xECF268", VA = "0xECF268")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		public static P2PManager P2P
		{
			[Token(Token = "0x6000C48")]
			[Address(RVA = "0xECED04", Offset = "0xECED04", VA = "0xECED04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		public static LeaderboardManager Leaderboards
		{
			[Token(Token = "0x6000C49")]
			[Address(RVA = "0xECF300", Offset = "0xECF300", VA = "0xECF300")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		public static AchievementsManager Achievements
		{
			[Token(Token = "0x6000C4A")]
			[Address(RVA = "0xED12EC", Offset = "0xED12EC", VA = "0xED12EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		public static State CurrentState
		{
			[Token(Token = "0x6000C4B")]
			[Address(RVA = "0xECD130", Offset = "0xECD130", VA = "0xECD130")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x170000C3")]
		public static ulong MyID
		{
			[Token(Token = "0x6000C4C")]
			[Address(RVA = "0xECDF58", Offset = "0xECDF58", VA = "0xECDF58")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000C4")]
		public static string MyOculusID
		{
			[Token(Token = "0x6000C4D")]
			[Address(RVA = "0xED01B4", Offset = "0xED01B4", VA = "0xED01B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xED5814", Offset = "0xED5814", VA = "0xED5814")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xED5848", Offset = "0xED5848", VA = "0xED5848")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xED5A38", Offset = "0xED5A38", VA = "0xED5A38")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xED5AD0", Offset = "0xED5AD0", VA = "0xED5AD0")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xED5BA0", Offset = "0xED5BA0", VA = "0xED5BA0")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xED2478", Offset = "0xED2478", VA = "0xED2478")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xED5C50", Offset = "0xED5C50", VA = "0xED5C50")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xED5C58", Offset = "0xED5C58", VA = "0xED5C58")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xECFAF0", Offset = "0xECFAF0", VA = "0xECFAF0")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xED5C8C", Offset = "0xED5C8C", VA = "0xED5C8C")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public abstract class Player : MonoBehaviour
	{
		[Token(Token = "0x40007FD")]
		public const uint MAX_BALLS = 6u;

		[Token(Token = "0x40007FE")]
		private const float INITIAL_FORCE = 870f;

		[Token(Token = "0x40007FF")]
		private const float RESPAWN_SECONDS = 2f;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint m_score;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_scoreUI;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BallEjector m_ballEjector;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue<GameObject> m_balls;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_heldBall;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_nextSpawnTime;

		[Token(Token = "0x170000C5")]
		public virtual uint Score
		{
			[Token(Token = "0x6000C50")]
			[Address(RVA = "0xED5C94", Offset = "0xED5C94", VA = "0xED5C94", Slot = "4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000C51")]
			[Address(RVA = "0xECEC40", Offset = "0xECEC40", VA = "0xECEC40", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		public GameObject BallPrefab
		{
			[Token(Token = "0x6000C52")]
			[Address(RVA = "0xED5C9C", Offset = "0xED5C9C", VA = "0xED5C9C")]
			set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		protected bool HasBall
		{
			[Token(Token = "0x6000C53")]
			[Address(RVA = "0xECC590", Offset = "0xECC590", VA = "0xECC590")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xED5CA4", Offset = "0xED5CA4", VA = "0xED5CA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xED4CEC", Offset = "0xED4CEC", VA = "0xED4CEC")]
		public GameObject CreateBall()
		{
			return null;
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xECC798", Offset = "0xECC798", VA = "0xECC798")]
		protected GameObject CheckSpawnBall()
		{
			return null;
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xECC600", Offset = "0xECC600", VA = "0xECC600")]
		protected GameObject ShootBall()
		{
			return null;
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xED5D74", Offset = "0xED5D74", VA = "0xED5D74")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xECC828", Offset = "0xECC828", VA = "0xECC828")]
		protected Player()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class PlayerArea : MonoBehaviour
	{
		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_playerHead;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_nameText;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private P2PNetworkGoal m_p2pGoal;

		[Token(Token = "0x170000C8")]
		public Player Player
		{
			[Token(Token = "0x6000C5A")]
			[Address(RVA = "0xED1294", Offset = "0xED1294", VA = "0xED1294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		public Text NameText
		{
			[Token(Token = "0x6000C5B")]
			[Address(RVA = "0xED5EA0", Offset = "0xED5EA0", VA = "0xED5EA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xED5EA8", Offset = "0xED5EA8", VA = "0xED5EA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C5D")]
		public T SetupForPlayer<T>(string name) where T : Player
		{
			return null;
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xED5FB0", Offset = "0xED5FB0", VA = "0xED5FB0")]
		public PlayerArea()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class RemotePlayer : Player
	{
		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private User m_user;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private P2PNetworkGoal m_goal;

		[Token(Token = "0x170000CA")]
		public User User
		{
			[Token(Token = "0x6000C5F")]
			[Address(RVA = "0xED5FB8", Offset = "0xED5FB8", VA = "0xED5FB8")]
			set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public ulong ID
		{
			[Token(Token = "0x6000C60")]
			[Address(RVA = "0xED3990", Offset = "0xED3990", VA = "0xED3990")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000CC")]
		public P2PNetworkGoal Goal
		{
			[Token(Token = "0x6000C61")]
			[Address(RVA = "0xED5FC0", Offset = "0xED5FC0", VA = "0xED5FC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0xED5FC8", Offset = "0xED5FC8", VA = "0xED5FC8")]
			set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public override uint Score
		{
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0xED5FD0", Offset = "0xED5FD0", VA = "0xED5FD0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xED516C", Offset = "0xED516C", VA = "0xED516C")]
		public void ReceiveRemoteScore(uint score)
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xED5FD4", Offset = "0xED5FD4", VA = "0xED5FD4")]
		public RemotePlayer()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xED5FD8", Offset = "0xED5FD8", VA = "0xED5FD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xED61FC", Offset = "0xED61FC", VA = "0xED61FC")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrBoardGame
{
	[Token(Token = "0x2000204")]
	public class BoardPosition : MonoBehaviour
	{
		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8D320", Offset = "0xA8D320")]
		public int x;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8D360", Offset = "0xA8D360")]
		public int y;

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xEC7214", Offset = "0xEC7214", VA = "0xEC7214")]
		public BoardPosition()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class EyeCamera : MonoBehaviour
	{
		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SphereCollider m_gazeTracker;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Button m_currentButton;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GamePiece m_currentPiece;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoardPosition m_boardPosition;

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xEC721C", Offset = "0xEC721C", VA = "0xEC721C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xEC7BCC", Offset = "0xEC7BCC", VA = "0xEC7BCC")]
		public EyeCamera()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class GameBoard : MonoBehaviour
	{
		[Token(Token = "0x20002E1")]
		private struct PositionInfo
		{
			[Token(Token = "0x4000CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject piece;

			[Token(Token = "0x4000CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pieceOwner;

			[Token(Token = "0x4000CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int powerPieceOwner;
		}

		[Token(Token = "0x4000817")]
		public const int LENGTH_X = 3;

		[Token(Token = "0x4000818")]
		public const int LENGTH_Y = 3;

		[Token(Token = "0x4000819")]
		public const int MAX_PLAYERS = 2;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color[] m_playerColors;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_proposedMoveColor;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] m_scores;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoardPosition[] m_positions;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly PositionInfo[,] m_pieces;

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xEC7BD4", Offset = "0xEC7BD4", VA = "0xEC7BD4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xEC7DB0", Offset = "0xEC7DB0", VA = "0xEC7DB0")]
		public bool IsFull()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xEC7EA4", Offset = "0xEC7EA4", VA = "0xEC7EA4")]
		public bool CanPlayerMoveToPostion(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xEC7F68", Offset = "0xEC7F68", VA = "0xEC7F68")]
		public bool CanPlayerPowerUpPosition(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xEC802C", Offset = "0xEC802C", VA = "0xEC802C")]
		public void AddPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xEC85F0", Offset = "0xEC85F0", VA = "0xEC85F0")]
		public GamePiece AddProposedPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xEC86D0", Offset = "0xEC86D0", VA = "0xEC86D0")]
		public void AddPowerPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xEC8890", Offset = "0xEC8890", VA = "0xEC8890")]
		public GamePiece AddProposedPowerPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xEC8224", Offset = "0xEC8224", VA = "0xEC8224")]
		private GamePiece Create(GameObject prefab, GameObject parent, BoardPosition pos, Vector3 off)
		{
			return null;
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xEC89CC", Offset = "0xEC89CC", VA = "0xEC89CC")]
		public int GetPlayerScore(int player)
		{
			return default(int);
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xEC83A0", Offset = "0xEC83A0", VA = "0xEC83A0")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xEC8A08", Offset = "0xEC8A08", VA = "0xEC8A08")]
		public GameBoard()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class GameController : MonoBehaviour
	{
		[Token(Token = "0x20002E2")]
		private enum GameState
		{
			[Token(Token = "0x4000CC3")]
			None,
			[Token(Token = "0x4000CC4")]
			PracticingMyTurn,
			[Token(Token = "0x4000CC5")]
			PracticingAiTurn,
			[Token(Token = "0x4000CC6")]
			OnlineMatchMyTurn,
			[Token(Token = "0x4000CC7")]
			OnlineMatchRemoteTurn
		}

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameBoard m_board;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GamePiece m_pieceA;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GamePiece m_pieceB;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GamePiece m_powerPiece;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color m_unusableColor;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_unselectedColor;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color m_selectedColor;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color m_highlightedColor;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Text m_ballCountText;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text m_player0Text;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Text m_player1Text;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameState m_state;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GamePiece m_interestedPiece;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GamePiece m_selectedPiece;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GamePiece m_proposedPiece;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private uint m_powerBallcount;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string m_opponentName;

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xEC8B0C", Offset = "0xEC8B0C", VA = "0xEC8B0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xEC8C68", Offset = "0xEC8C68", VA = "0xEC8C68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xEC8B34", Offset = "0xEC8B34", VA = "0xEC8B34")]
		private void TransitionToState(GameState state)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xEC9090", Offset = "0xEC9090", VA = "0xEC9090")]
		private void TransitionToNextState()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xEC8C6C", Offset = "0xEC8C6C", VA = "0xEC8C6C")]
		private void PerFrameStateUpdate()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xEC97D4", Offset = "0xEC97D4", VA = "0xEC97D4")]
		public void PracticeButtonPressed()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xEC9328", Offset = "0xEC9328", VA = "0xEC9328")]
		private void MakeAIMove(int player)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xEC9908", Offset = "0xEC9908", VA = "0xEC9908")]
		public void StartOnlineMatch(string opponentName, bool localUserGoesFirst)
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xEC9974", Offset = "0xEC9974", VA = "0xEC9974")]
		public void MakeRemoteMove(GamePiece.Piece piece, int x, int y)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xEC9A18", Offset = "0xEC9A18", VA = "0xEC9A18")]
		public void MarkRemoteTurnComplete()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xEC9A2C", Offset = "0xEC9A2C", VA = "0xEC9A2C")]
		public void RemoteMatchEnded()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xEC7840", Offset = "0xEC7840", VA = "0xEC7840")]
		public void StartedLookingAtPiece(GamePiece piece)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xEC7814", Offset = "0xEC7814", VA = "0xEC7814")]
		public void StoppedLookingAtPiece()
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xEC7868", Offset = "0xEC7868", VA = "0xEC7868")]
		public void StartedLookingAtPosition(BoardPosition position)
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xEC7B00", Offset = "0xEC7B00", VA = "0xEC7B00")]
		public void ClearProposedMove()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xEC9538", Offset = "0xEC9538", VA = "0xEC9538")]
		public void TrySelectPiece()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xEC964C", Offset = "0xEC964C", VA = "0xEC964C")]
		public void TryPlacePiece()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xEC9CAC", Offset = "0xEC9CAC", VA = "0xEC9CAC")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xEC9CB4", Offset = "0xEC9CB4", VA = "0xEC9CB4")]
		public void AddPowerballs(uint count)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xEC8B3C", Offset = "0xEC8B3C", VA = "0xEC8B3C")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xEC8D24", Offset = "0xEC8D24", VA = "0xEC8D24")]
		private void UpdateGamePieceColors()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xEC9E08", Offset = "0xEC9E08", VA = "0xEC9E08")]
		public GameController()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class GamePiece : MonoBehaviour
	{
		[Token(Token = "0x20002E3")]
		public enum Piece
		{
			[Token(Token = "0x4000CC9")]
			A,
			[Token(Token = "0x4000CCA")]
			B,
			[Token(Token = "0x4000CCB")]
			PowerBall
		}

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Piece m_type;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_prefabA;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_prefabB;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_prefabPower;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BoardPosition m_position;

		[Token(Token = "0x170000CE")]
		public Piece Type
		{
			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0xEC9E6C", Offset = "0xEC9E6C", VA = "0xEC9E6C")]
			get
			{
				return default(Piece);
			}
		}

		[Token(Token = "0x170000CF")]
		public BoardPosition Position
		{
			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0xEC9E74", Offset = "0xEC9E74", VA = "0xEC9E74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0xEC9E7C", Offset = "0xEC9E7C", VA = "0xEC9E7C")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public GameObject Prefab
		{
			[Token(Token = "0x6000C90")]
			[Address(RVA = "0xEC98DC", Offset = "0xEC98DC", VA = "0xEC98DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xEC99F0", Offset = "0xEC99F0", VA = "0xEC99F0")]
		public GameObject PrefabFor(Piece p)
		{
			return null;
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xEC9E84", Offset = "0xEC9E84", VA = "0xEC9E84")]
		public GamePiece()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class IAPManager : MonoBehaviour
	{
		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_priceText;

		[Token(Token = "0x4000838")]
		private const string CONSUMABLE_1 = "PowerballPack1";

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xEC9E8C", Offset = "0xEC9E8C", VA = "0xEC9E8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xEC9EB0", Offset = "0xEC9EB0", VA = "0xEC9EB0")]
		public void FetchProductPrices()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xECA078", Offset = "0xECA078", VA = "0xECA078")]
		private void GetProductsBySKUCallback(Message<ProductList> msg)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xEC9FD0", Offset = "0xEC9FD0", VA = "0xEC9FD0")]
		public void FetchPurchasedProducts()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xECA53C", Offset = "0xECA53C", VA = "0xECA53C")]
		private void GetViewerPurchasesCallback(Message<PurchaseList> msg)
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xECA944", Offset = "0xECA944", VA = "0xECA944")]
		public void BuyPowerBallsPressed()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xECA9F8", Offset = "0xECA9F8", VA = "0xECA9F8")]
		private void LaunchCheckoutFlowCallback(Message<Purchase> msg)
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xECAAE0", Offset = "0xECAAE0", VA = "0xECAAE0")]
		public IAPManager()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class MatchmakingManager : MonoBehaviour
	{
		[Token(Token = "0x20002E4")]
		private enum MatchRoomState
		{
			[Token(Token = "0x4000CCD")]
			None,
			[Token(Token = "0x4000CCE")]
			Queued,
			[Token(Token = "0x4000CCF")]
			Configuring,
			[Token(Token = "0x4000CD0")]
			MyTurn,
			[Token(Token = "0x4000CD1")]
			RemoteTurn
		}

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_matchButtonText;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_infoText;

		[Token(Token = "0x400083C")]
		private const string POOL = "VR_BOARD_GAME_POOL";

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ulong m_matchRoom;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private User m_remotePlayer;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_lastUpdateTime;

		[Token(Token = "0x4000840")]
		private const float POLL_FREQUENCY = 30f;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private MatchRoomState m_state;

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xECAAE8", Offset = "0xECAAE8", VA = "0xECAAE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xECAD40", Offset = "0xECAD40", VA = "0xECAD40")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xECAE68", Offset = "0xECAE68", VA = "0xECAE68")]
		public void MatchButtonPressed()
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xEC9174", Offset = "0xEC9174", VA = "0xEC9174")]
		public void EndMatch(int localScore, int remoteScore)
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xECAF24", Offset = "0xECAF24", VA = "0xECAF24")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xECABA8", Offset = "0xECABA8", VA = "0xECABA8")]
		private void TransitionToState(MatchRoomState state)
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xECAF60", Offset = "0xECAF60", VA = "0xECAF60")]
		private void MatchmakingEnqueueCallback(Message untyped_msg)
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xECB220", Offset = "0xECB220", VA = "0xECB220")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xECB370", Offset = "0xECB370", VA = "0xECB370")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xECBAFC", Offset = "0xECBAFC", VA = "0xECBAFC")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xECB660", Offset = "0xECB660", VA = "0xECB660")]
		private void ProcessRoomData(Room room)
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xECBEA4", Offset = "0xECBEA4", VA = "0xECBEA4")]
		private void ProcessRemoteMove(string moveString)
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xEC9A88", Offset = "0xEC9A88", VA = "0xEC9A88")]
		public void SendLocalMove(GamePiece.Piece piece, int boardX, int boardY)
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xECC08C", Offset = "0xECC08C", VA = "0xECC08C")]
		private void UpdateDataStoreCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xECBE5C", Offset = "0xECBE5C", VA = "0xECBE5C")]
		private bool DoesLocalUserGoFirst()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xECC0C0", Offset = "0xECC0C0", VA = "0xECC0C0")]
		private void GenericErrorCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xECC184", Offset = "0xECC184", VA = "0xECC184")]
		public MatchmakingManager()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong m_myID;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_myOculusID;

		[Token(Token = "0x170000D1")]
		public static ulong MyID
		{
			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0xECAE80", Offset = "0xECAE80", VA = "0xECAE80")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000D2")]
		public static string MyOculusID
		{
			[Token(Token = "0x6000CB2")]
			[Address(RVA = "0xEC9D54", Offset = "0xEC9D54", VA = "0xEC9D54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xECC18C", Offset = "0xECC18C", VA = "0xECC18C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xECC2D4", Offset = "0xECC2D4", VA = "0xECC2D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xECC36C", Offset = "0xECC36C", VA = "0xECC36C")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xECC43C", Offset = "0xECC43C", VA = "0xECC43C")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xECA490", Offset = "0xECA490", VA = "0xECA490")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xECC524", Offset = "0xECC524", VA = "0xECC524")]
		public PlatformManager()
		{
		}
	}
}
namespace Oculus.Platform.Samples.SimplePlatformSample
{
	[Token(Token = "0x200020C")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xEC281C", Offset = "0xEC281C", VA = "0xEC281C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xEC2924", Offset = "0xEC2924", VA = "0xEC2924")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xEC29E8", Offset = "0xEC29E8", VA = "0xEC29E8")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xEC461C", Offset = "0xEC461C", VA = "0xEC461C")]
		private void getLeaderboardEntries(string leaderboardName)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xEC4504", Offset = "0xEC4504", VA = "0xEC4504")]
		private void writeLeaderboardEntry(string leaderboardName, string value)
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xEC444C", Offset = "0xEC444C", VA = "0xEC444C")]
		private void addFieldsAchievement(string achievementName, string fields)
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xEC4368", Offset = "0xEC4368", VA = "0xEC4368")]
		private void addCountAchievement(string achievementName, string count)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xEC42B8", Offset = "0xEC42B8", VA = "0xEC42B8")]
		private void unlockAchievement(string achievementName)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xEC41A4", Offset = "0xEC41A4", VA = "0xEC41A4")]
		private void getAchievementProgress(string achievementName)
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xEC4090", Offset = "0xEC4090", VA = "0xEC4090")]
		private void getAchievementDefinition(string achievementName)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xEC288C", Offset = "0xEC288C", VA = "0xEC288C")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xEC3FD8", Offset = "0xEC3FD8", VA = "0xEC3FD8")]
		private void getUserNonce()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xEC31B8", Offset = "0xEC31B8", VA = "0xEC31B8")]
		private void createAndJoinPrivateRoom(string joinPolicy, string maxUsers)
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xEC32C4", Offset = "0xEC32C4", VA = "0xEC32C4")]
		private void getCurrentRoom()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xEC3380", Offset = "0xEC3380", VA = "0xEC3380")]
		private void getRoom(string roomID)
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xEC347C", Offset = "0xEC347C", VA = "0xEC347C")]
		private void joinRoom(string roomID)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xEC357C", Offset = "0xEC357C", VA = "0xEC357C")]
		private void leaveRoom(string roomID)
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xEC3678", Offset = "0xEC3678", VA = "0xEC3678")]
		private void kickUser(string roomID, string userID)
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xEC37A4", Offset = "0xEC37A4", VA = "0xEC37A4")]
		private void getLoggedInUser()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xEC385C", Offset = "0xEC385C", VA = "0xEC385C")]
		private void getUser(string userID)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xEC3954", Offset = "0xEC3954", VA = "0xEC3954")]
		private void getLoggedInFriends()
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xEC3A0C", Offset = "0xEC3A0C", VA = "0xEC3A0C")]
		private void getInvitableUsers()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xEC3AC8", Offset = "0xEC3AC8", VA = "0xEC3AC8")]
		private void inviteUser(string roomID, string inviteToken)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xEC3BDC", Offset = "0xEC3BDC", VA = "0xEC3BDC")]
		private void setRoomDescription(string roomID, string description)
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xEC3CF0", Offset = "0xEC3CF0", VA = "0xEC3CF0")]
		private void updateRoomDataStore(string roomID, string key, string value)
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xEC46D8", Offset = "0xEC46D8", VA = "0xEC46D8")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xEC4BD0", Offset = "0xEC4BD0", VA = "0xEC4BD0")]
		private void outputRoomDetails(Room room)
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xEC51C4", Offset = "0xEC51C4", VA = "0xEC51C4")]
		private void outputUserArray(UserList users)
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xEC5728", Offset = "0xEC5728", VA = "0xEC5728")]
		private void userProofCallback(Message<UserProof> msg)
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xEC5800", Offset = "0xEC5800", VA = "0xEC5800")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xEC5880", Offset = "0xEC5880", VA = "0xEC5880")]
		private void leaderboardGetCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xEC5E5C", Offset = "0xEC5E5C", VA = "0xEC5E5C")]
		private void leaderboardWriteCallback(Message msg)
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xEC5F7C", Offset = "0xEC5F7C", VA = "0xEC5F7C")]
		private void achievementFieldsCallback(Message msg)
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xEC6038", Offset = "0xEC6038", VA = "0xEC6038")]
		private void achievementCountCallback(Message msg)
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xEC60F4", Offset = "0xEC60F4", VA = "0xEC60F4")]
		private void achievementUnlockCallback(Message msg)
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xEC61B0", Offset = "0xEC61B0", VA = "0xEC61B0")]
		private void achievementProgressCallback(Message<AchievementProgressList> msg)
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xEC6528", Offset = "0xEC6528", VA = "0xEC6528")]
		private void achievementDefinitionCallback(Message<AchievementDefinitionList> msg)
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xEC6918", Offset = "0xEC6918", VA = "0xEC6918")]
		private void createAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xEC69F0", Offset = "0xEC69F0", VA = "0xEC69F0")]
		private void getCurrentRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xEC6AC8", Offset = "0xEC6AC8", VA = "0xEC6AC8")]
		private void joinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xEC6BA0", Offset = "0xEC6BA0", VA = "0xEC6BA0")]
		private void leaveRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xEC6C78", Offset = "0xEC6C78", VA = "0xEC6C78")]
		private void getUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xEC6FA0", Offset = "0xEC6FA0", VA = "0xEC6FA0")]
		private void getFriendsCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xEC7078", Offset = "0xEC7078", VA = "0xEC7078")]
		private void getInvitableUsersCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xEC7150", Offset = "0xEC7150", VA = "0xEC7150")]
		private void inviteUserCallback(Message msg)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xEC720C", Offset = "0xEC720C", VA = "0xEC720C")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.NetChat
{
	[Token(Token = "0x200020D")]
	internal enum states
	{
		[Token(Token = "0x4000847")]
		NOT_INIT,
		[Token(Token = "0x4000848")]
		IDLE,
		[Token(Token = "0x4000849")]
		REQUEST_FIND,
		[Token(Token = "0x400084A")]
		FINDING_ROOM,
		[Token(Token = "0x400084B")]
		REQUEST_CREATE,
		[Token(Token = "0x400084C")]
		REQUEST_JOIN,
		[Token(Token = "0x400084D")]
		REQUEST_LEAVE,
		[Token(Token = "0x400084E")]
		IN_EMPTY_ROOM,
		[Token(Token = "0x400084F")]
		IN_FULL_ROOM
	}
	[Token(Token = "0x200020E")]
	public static class Constants
	{
		[Token(Token = "0x4000850")]
		public const int BUFFER_SIZE = 512;

		[Token(Token = "0x4000851")]
		public const string BOUT_POOL = "bout_pool";

		[Token(Token = "0x4000852")]
		public const string FILTER_POOL = "filter_pool";
	}
	[Token(Token = "0x200020F")]
	public class chatPacket
	{
		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8D550", Offset = "0xA8D550")]
		private int <packetID>k__BackingField;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8D560", Offset = "0xA8D560")]
		private string <textString>k__BackingField;

		[Token(Token = "0x170000D3")]
		public int packetID
		{
			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0xF8D998", Offset = "0xF8D998", VA = "0xF8D998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA903F4", Offset = "0xA903F4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0xF8D9A0", Offset = "0xF8D9A0", VA = "0xF8D9A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA90404", Offset = "0xA90404")]
			set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public string textString
		{
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0xF8D9A8", Offset = "0xF8D9A8", VA = "0xF8D9A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA90414", Offset = "0xA90414")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0xF8D9B0", Offset = "0xF8D9B0", VA = "0xF8D9B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA90424", Offset = "0xA90424")]
			set
			{
			}
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xF8D198", Offset = "0xF8D198", VA = "0xF8D198")]
		public byte[] Serialize()
		{
			return null;
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xF8D49C", Offset = "0xF8D49C", VA = "0xF8D49C")]
		public static chatPacket Deserialize(byte[] data)
		{
			return null;
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xF8D190", Offset = "0xF8D190", VA = "0xF8D190")]
		public chatPacket()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private states currentState;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private User localUser;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private User remoteUser;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Room currentRoom;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastPacketID;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool ratedMatchStarted;

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xF8AED0", Offset = "0xF8AED0", VA = "0xF8AED0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xF8B088", Offset = "0xF8B088", VA = "0xF8B088")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xF8B150", Offset = "0xF8B150", VA = "0xF8B150")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xF8C4F0", Offset = "0xF8C4F0", VA = "0xF8C4F0")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xF8AFEC", Offset = "0xF8AFEC", VA = "0xF8AFEC")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xF8C5A8", Offset = "0xF8C5A8", VA = "0xF8C5A8")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xF8C694", Offset = "0xF8C694", VA = "0xF8C694")]
		private void init(Message<User> msg)
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xF8B634", Offset = "0xF8B634", VA = "0xF8B634")]
		private void requestCreateRoom()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xF8C7BC", Offset = "0xF8C7BC", VA = "0xF8C7BC")]
		private void createRoomResponse(Message<MatchmakingEnqueueResultAndRoom> msg)
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xF8B7B0", Offset = "0xF8B7B0", VA = "0xF8B7B0")]
		private void requestCreateFilterRoom()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xF8BB70", Offset = "0xF8BB70", VA = "0xF8BB70")]
		private void requestFindRoom()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xF8BCE4", Offset = "0xF8BCE4", VA = "0xF8BCE4")]
		private void requestFindFilteredRoom()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xF8C8FC", Offset = "0xF8C8FC", VA = "0xF8C8FC")]
		private void foundMatch(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xF8CA34", Offset = "0xF8CA34", VA = "0xF8CA34")]
		private void joinRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xF8B9FC", Offset = "0xF8B9FC", VA = "0xF8B9FC")]
		private void requestFindMatch()
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xF8CD44", Offset = "0xF8CD44", VA = "0xF8CD44")]
		private void searchingStarted(Message msg)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xF8CE14", Offset = "0xF8CE14", VA = "0xF8CE14")]
		private void updateRoom(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xF8BFF8", Offset = "0xF8BFF8", VA = "0xF8BFF8")]
		private void sendChat(string chatMessage)
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xF8B4AC", Offset = "0xF8B4AC", VA = "0xF8B4AC")]
		private void processNetPackets()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xF8C0FC", Offset = "0xF8C0FC", VA = "0xF8C0FC")]
		private void requestLeaveRoom()
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xF8D714", Offset = "0xF8D714", VA = "0xF8D714")]
		private void leaveRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xF8C224", Offset = "0xF8C224", VA = "0xF8C224")]
		private void requestStartRatedMatch()
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xF8D804", Offset = "0xF8D804", VA = "0xF8D804")]
		private void startRatedMatchResponse(Message msg)
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xF8C334", Offset = "0xF8C334", VA = "0xF8C334")]
		private void requestReportResults()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xF8D8D4", Offset = "0xF8D8D4", VA = "0xF8D8D4")]
		private void reportResultsResponse(Message msg)
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xF8D990", Offset = "0xF8D990", VA = "0xF8D990")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.EntitlementCheck
{
	[Token(Token = "0x2000211")]
	public class EntitlementCheck : MonoBehaviour
	{
		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool exitAppOnFailure;

		[Token(Token = "0x14000015")]
		public static event Action UserFailedEntitlementCheck
		{
			[Token(Token = "0x6000D03")]
			[Address(RVA = "0xF8A790", Offset = "0xF8A790", VA = "0xF8A790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA90434", Offset = "0xA90434")]
			add
			{
			}
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0xF8A844", Offset = "0xF8A844", VA = "0xF8A844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA90444", Offset = "0xA90444")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public static event Action UserPassedEntitlementCheck
		{
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0xF8A8F8", Offset = "0xF8A8F8", VA = "0xF8A8F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA90454", Offset = "0xA90454")]
			add
			{
			}
			[Token(Token = "0x6000D06")]
			[Address(RVA = "0xF8A9B0", Offset = "0xF8A9B0", VA = "0xF8A9B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA90464", Offset = "0xA90464")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xF8AA68", Offset = "0xF8AA68", VA = "0xF8AA68")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xF8AEA0", Offset = "0xF8AEA0", VA = "0xF8AEA0")]
		private void EntitlementCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xF8AC24", Offset = "0xF8AC24", VA = "0xF8AC24")]
		private void HandleEntitlementCheckResult(bool result)
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xF8AEC0", Offset = "0xF8AEC0", VA = "0xF8AEC0")]
		public EntitlementCheck()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000212")]
	public static class AvatarLogger
	{
		[Token(Token = "0x400085F")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000860")]
		public const string Tab = "    ";

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x116B7F0", Offset = "0x116B7F0", VA = "0x116B7F0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA90474", Offset = "0xA90474")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA90474", Offset = "0xA90474")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x116B878", Offset = "0x116B878", VA = "0x116B878")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA904D4", Offset = "0xA904D4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA904D4", Offset = "0xA904D4")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x116B910", Offset = "0x116B910", VA = "0x116B910")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA90534", Offset = "0xA90534")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA90534", Offset = "0xA90534")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x116B998", Offset = "0x116B998", VA = "0x116B998")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA90594", Offset = "0xA90594")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA90594", Offset = "0xA90594")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x116BA20", Offset = "0x116BA20", VA = "0x116BA20")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA905F4", Offset = "0xA905F4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA905F4", Offset = "0xA905F4")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class CAPI
	{
		[Token(Token = "0x20002E5")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20002E6")]
		public enum Result
		{
			[Token(Token = "0x4000CD3")]
			Success = 0,
			[Token(Token = "0x4000CD4")]
			Failure = -1000,
			[Token(Token = "0x4000CD5")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4000CD6")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4000CD7")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4000CD8")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4000CD9")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4000CDA")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4000CDB")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20002E7")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4000CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6001108")]
			[Address(RVA = "0x1ABEFD0", Offset = "0x1ABEFD0", VA = "0x1ABEFD0")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000861")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000869")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x116BB20", Offset = "0x116BB20", VA = "0x116BB20")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x116BBB0", Offset = "0x116BBB0", VA = "0x116BBB0")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x116BD78", Offset = "0x116BD78", VA = "0x116BD78")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x116BE5C", Offset = "0x116BE5C", VA = "0x116BE5C")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x116BECC", Offset = "0x116BECC", VA = "0x116BECC")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x116BF40", Offset = "0x116BF40", VA = "0x116BF40")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x116BFC0", Offset = "0x116BFC0", VA = "0x116BFC0")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x116C0D8", Offset = "0x116C0D8", VA = "0x116C0D8")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x116C158", Offset = "0x116C158", VA = "0x116C158")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x116C270", Offset = "0x116C270", VA = "0x116C270")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x116C2F0", Offset = "0x116C2F0", VA = "0x116C2F0")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x116C370", Offset = "0x116C370", VA = "0x116C370")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x116C3F0", Offset = "0x116C3F0", VA = "0x116C3F0")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x116C470", Offset = "0x116C470", VA = "0x116C470")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x116C500", Offset = "0x116C500", VA = "0x116C500")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x116C590", Offset = "0x116C590", VA = "0x116C590")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x116C620", Offset = "0x116C620", VA = "0x116C620")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x116C6A0", Offset = "0x116C6A0", VA = "0x116C6A0")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x116C720", Offset = "0x116C720", VA = "0x116C720")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x116C7B0", Offset = "0x116C7B0", VA = "0x116C7B0")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x116C840", Offset = "0x116C840", VA = "0x116C840")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x116C8D0", Offset = "0x116C8D0", VA = "0x116C8D0")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x116C950", Offset = "0x116C950", VA = "0x116C950")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x116C9F0", Offset = "0x116C9F0", VA = "0x116C9F0")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x116CA70", Offset = "0x116CA70", VA = "0x116CA70")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x116CB10", Offset = "0x116CB10", VA = "0x116CB10")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x116CBD0", Offset = "0x116CBD0", VA = "0x116CBD0")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x116CCA0", Offset = "0x116CCA0", VA = "0x116CCA0")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x116CD30", Offset = "0x116CD30", VA = "0x116CD30")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x116CDC0", Offset = "0x116CDC0", VA = "0x116CDC0")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x116CE50", Offset = "0x116CE50", VA = "0x116CE50")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x116CEE0", Offset = "0x116CEE0", VA = "0x116CEE0")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x116CF70", Offset = "0x116CF70", VA = "0x116CF70")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x116CFF0", Offset = "0x116CFF0", VA = "0x116CFF0")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x116D110", Offset = "0x116D110", VA = "0x116D110")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x116D080", Offset = "0x116D080", VA = "0x116D080")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x116D310", Offset = "0x116D310", VA = "0x116D310")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x116D448", Offset = "0x116D448", VA = "0x116D448")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D36")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x116D4C8", Offset = "0x116D4C8", VA = "0x116D4C8")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x116D738", Offset = "0x116D738", VA = "0x116D738")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x116D7B8", Offset = "0x116D7B8", VA = "0x116D7B8")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x116D8F0", Offset = "0x116D8F0", VA = "0x116D8F0")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x116D970", Offset = "0x116D970", VA = "0x116D970")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x116DAA8", Offset = "0x116DAA8", VA = "0x116DAA8")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x116DB28", Offset = "0x116DB28", VA = "0x116DB28")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x116DC60", Offset = "0x116DC60", VA = "0x116DC60")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x116DCE0", Offset = "0x116DCE0", VA = "0x116DCE0")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x116DE18", Offset = "0x116DE18", VA = "0x116DE18")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x116DE98", Offset = "0x116DE98", VA = "0x116DE98")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x116DF18", Offset = "0x116DF18", VA = "0x116DF18")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x116DFB0", Offset = "0x116DFB0", VA = "0x116DFB0")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x116E030", Offset = "0x116E030", VA = "0x116E030")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x116E1DC", Offset = "0x116E1DC", VA = "0x116E1DC")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x116E308", Offset = "0x116E308", VA = "0x116E308")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x116E15C", Offset = "0x116E15C", VA = "0x116E15C")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x116E388", Offset = "0x116E388", VA = "0x116E388")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x116E408", Offset = "0x116E408", VA = "0x116E408")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x116E498", Offset = "0x116E498", VA = "0x116E498")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x116E518", Offset = "0x116E518", VA = "0x116E518")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x116E5A8", Offset = "0x116E5A8", VA = "0x116E5A8")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x116E628", Offset = "0x116E628", VA = "0x116E628")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x116E6A8", Offset = "0x116E6A8", VA = "0x116E6A8")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x116E8E4", Offset = "0x116E8E4", VA = "0x116E8E4")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x116E974", Offset = "0x116E974", VA = "0x116E974")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x116EB60", Offset = "0x116EB60", VA = "0x116EB60")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x116EBF8", Offset = "0x116EBF8", VA = "0x116EBF8")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x116ED1C", Offset = "0x116ED1C", VA = "0x116ED1C")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x116ED9C", Offset = "0x116ED9C", VA = "0x116ED9C")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x116EE1C", Offset = "0x116EE1C", VA = "0x116EE1C")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x116EF44", Offset = "0x116EF44", VA = "0x116EF44")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x116EFC4", Offset = "0x116EFC4", VA = "0x116EFC4")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x116F0EC", Offset = "0x116F0EC", VA = "0x116F0EC")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x116F16C", Offset = "0x116F16C", VA = "0x116F16C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x116F1FC", Offset = "0x116F1FC", VA = "0x116F1FC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x116F28C", Offset = "0x116F28C", VA = "0x116F28C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x116F31C", Offset = "0x116F31C", VA = "0x116F31C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x116F39C", Offset = "0x116F39C", VA = "0x116F39C")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x116F424", Offset = "0x116F424", VA = "0x116F424")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x116F4AC", Offset = "0x116F4AC", VA = "0x116F4AC")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x116F52C", Offset = "0x116F52C", VA = "0x116F52C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x116F5AC", Offset = "0x116F5AC", VA = "0x116F5AC")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x116F660", Offset = "0x116F660", VA = "0x116F660")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x116F6F0", Offset = "0x116F6F0", VA = "0x116F6F0")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x116F780", Offset = "0x116F780", VA = "0x116F780")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x116F800", Offset = "0x116F800", VA = "0x116F800")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x116F880", Offset = "0x116F880", VA = "0x116F880")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x116F900", Offset = "0x116F900", VA = "0x116F900")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x116F998", Offset = "0x116F998", VA = "0x116F998")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x116FA28", Offset = "0x116FA28", VA = "0x116FA28")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x116FAB8", Offset = "0x116FAB8", VA = "0x116FAB8")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x116FB48", Offset = "0x116FB48", VA = "0x116FB48")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x116FBE0", Offset = "0x116FBE0", VA = "0x116FBE0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x116FC78", Offset = "0x116FC78", VA = "0x116FC78")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x116FCF8", Offset = "0x116FCF8", VA = "0x116FCF8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x116FD78", Offset = "0x116FD78", VA = "0x116FD78")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x116FEA0", Offset = "0x116FEA0", VA = "0x116FEA0")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x116FF20", Offset = "0x116FF20", VA = "0x116FF20")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x1170048", Offset = "0x1170048", VA = "0x1170048")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x11700C8", Offset = "0x11700C8", VA = "0x11700C8")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x11701F0", Offset = "0x11701F0", VA = "0x11701F0")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x1170270", Offset = "0x1170270", VA = "0x1170270")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x1170418", Offset = "0x1170418", VA = "0x1170418")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x11706B4", Offset = "0x11706B4", VA = "0x11706B4")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x1170398", Offset = "0x1170398", VA = "0x1170398")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x1170744", Offset = "0x1170744", VA = "0x1170744")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x11707C4", Offset = "0x11707C4", VA = "0x11707C4")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x1170854", Offset = "0x1170854", VA = "0x1170854")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x11708E4", Offset = "0x11708E4", VA = "0x11708E4")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x1170974", Offset = "0x1170974", VA = "0x1170974")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x1170A14", Offset = "0x1170A14", VA = "0x1170A14")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x1170AB4", Offset = "0x1170AB4", VA = "0x1170AB4")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x1170B54", Offset = "0x1170B54", VA = "0x1170B54")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x1170BD4", Offset = "0x1170BD4", VA = "0x1170BD4")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x1170C54", Offset = "0x1170C54", VA = "0x1170C54")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x1170CD4", Offset = "0x1170CD4", VA = "0x1170CD4")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x1170D54", Offset = "0x1170D54", VA = "0x1170D54")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x1170DD4", Offset = "0x1170DD4", VA = "0x1170DD4")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x1170EFC", Offset = "0x1170EFC", VA = "0x1170EFC")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x1170F94", Offset = "0x1170F94", VA = "0x1170F94")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x1171014", Offset = "0x1171014", VA = "0x1171014")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x1171078", Offset = "0x1171078", VA = "0x1171078")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x1171194", Offset = "0x1171194", VA = "0x1171194")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x1171224", Offset = "0x1171224", VA = "0x1171224")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x1171368", Offset = "0x1171368", VA = "0x1171368")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x11713F8", Offset = "0x11713F8", VA = "0x11713F8")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x1171498", Offset = "0x1171498", VA = "0x1171498")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x1171830", Offset = "0x1171830", VA = "0x1171830")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x11718B0", Offset = "0x11718B0", VA = "0x11718B0")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x1171948", Offset = "0x1171948", VA = "0x1171948")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x1172110", Offset = "0x1172110", VA = "0x1172110")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x1172190", Offset = "0x1172190", VA = "0x1172190")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x116BAB8", Offset = "0x116BAB8", VA = "0x116BAB8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xA90654", Offset = "0xA90654")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x1172228", Offset = "0x1172228", VA = "0x1172228")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x11722AC", Offset = "0x11722AC", VA = "0x11722AC")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x117232C", Offset = "0x117232C", VA = "0x117232C")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x11723AC", Offset = "0x11723AC", VA = "0x11723AC")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x117242C", Offset = "0x117242C", VA = "0x117242C")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x1172E0C", Offset = "0x1172E0C", VA = "0x1172E0C")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x1172E8C", Offset = "0x1172E8C", VA = "0x1172E8C")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x1173294", Offset = "0x1173294", VA = "0x1173294")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x1173204", Offset = "0x1173204", VA = "0x1173204")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x1173308", Offset = "0x1173308", VA = "0x1173308")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x2000214")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0xA8D590", Offset = "0xA8D590")]
		public SoundFXRef testSound1;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x1167F98", Offset = "0x1167F98", VA = "0x1167F98")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x1167F9C", Offset = "0x1167F9C", VA = "0x1167F9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x116805C", Offset = "0x116805C", VA = "0x116805C")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x2000215")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8D5DC", Offset = "0xA8D5DC")]
		public bool autoRetrigger;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xA8D614", Offset = "0xA8D614")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8D638", Offset = "0xA8D638")]
		public Transform[] playPositions;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x115EC34", Offset = "0x115EC34", VA = "0x115EC34")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x115EDE4", Offset = "0x115EDE4", VA = "0x115EDE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x115EFC0", Offset = "0x115EFC0", VA = "0x115EFC0")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x115EE44", Offset = "0x115EE44", VA = "0x115EE44")]
		public void Play()
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x115F100", Offset = "0x115F100", VA = "0x115F100")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x115F274", Offset = "0x115F274", VA = "0x115F274")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000878")]
		Default,
		[Token(Token = "0x4000879")]
		Preload,
		[Token(Token = "0x400087A")]
		ManualPreload
	}
	[Token(Token = "0x2000217")]
	public enum Fade
	{
		[Token(Token = "0x400087C")]
		In,
		[Token(Token = "0x400087D")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000218")]
	public class SoundGroup
	{
		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8D670", Offset = "0xA8D670")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x1167E28", Offset = "0x1167E28", VA = "0x1167E28")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x1167EDC", Offset = "0x1167EDC", VA = "0x1167EDC")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x11667E8", Offset = "0x11667E8", VA = "0x11667E8")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x1166928", Offset = "0x1166928", VA = "0x1166928")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x1167444", Offset = "0x1167444", VA = "0x1167444")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000219")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20002E8")]
		public enum Fade
		{
			[Token(Token = "0x4000CDE")]
			In,
			[Token(Token = "0x4000CDF")]
			Out
		}

		[Token(Token = "0x20002E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8894C", Offset = "0xA8894C")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4000CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x600110A")]
			[Address(RVA = "0x1163624", Offset = "0x1163624", VA = "0x1163624")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x600110B")]
			[Address(RVA = "0x116626C", Offset = "0x116626C", VA = "0x116626C")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20002EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8895C", Offset = "0xA8895C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x600110D")]
			[Address(RVA = "0x11661D4", Offset = "0x11661D4", VA = "0x11661D4")]
			public <>c()
			{
			}

			[Token(Token = "0x600110E")]
			[Address(RVA = "0x11661DC", Offset = "0x11661DC", VA = "0x11661DC")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8D69C", Offset = "0xA8D69C")]
		public bool makePersistent;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8D6D4", Offset = "0xA8D6D4")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8D70C", Offset = "0xA8D70C")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8D744", Offset = "0xA8D744")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8D77C", Offset = "0xA8D77C")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8D7B4", Offset = "0xA8D7B4")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8D7EC", Offset = "0xA8D7EC")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8D824", Offset = "0xA8D824")]
		public bool verboseLogging;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8D85C", Offset = "0xA8D85C")]
		public int maxSoundEmitters;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8D894", Offset = "0xA8D894")]
		public float volumeSoundFX;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8D8CC", Offset = "0xA8D8CC")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170000D5")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0x115F34C", Offset = "0x115F34C", VA = "0x115F34C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D6")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0x115F42C", Offset = "0x115F42C", VA = "0x115F42C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		public static float NearFallOff
		{
			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0x115F494", Offset = "0x115F494", VA = "0x115F494")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000D8")]
		public static float FarFallOff
		{
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x115F508", Offset = "0x115F508", VA = "0x115F508")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000D9")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0x115F57C", Offset = "0x115F57C", VA = "0x115F57C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0x115F5F0", Offset = "0x115F5F0", VA = "0x115F5F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0x115F664", Offset = "0x115F664", VA = "0x115F664")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0x1161508", Offset = "0x1161508", VA = "0x1161508")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x115F6D8", Offset = "0x115F6D8", VA = "0x115F6D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x115F90C", Offset = "0x115F90C", VA = "0x115F90C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x115F6DC", Offset = "0x115F6DC", VA = "0x115F6DC")]
		private void Init()
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x116062C", Offset = "0x116062C", VA = "0x116062C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x115FA64", Offset = "0x115FA64", VA = "0x115FA64")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x1160CA4", Offset = "0x1160CA4", VA = "0x1160CA4")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x1160E24", Offset = "0x1160E24", VA = "0x1160E24")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x1160FC0", Offset = "0x1160FC0", VA = "0x1160FC0")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x11610C0", Offset = "0x11610C0", VA = "0x11610C0")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x1161150", Offset = "0x1161150", VA = "0x1161150")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x115FF18", Offset = "0x115FF18", VA = "0x115FF18")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x1160630", Offset = "0x1160630", VA = "0x1160630")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x11617BC", Offset = "0x11617BC", VA = "0x11617BC")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x11618C0", Offset = "0x11618C0", VA = "0x11618C0")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x11619C8", Offset = "0x11619C8", VA = "0x11619C8")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x1161684", Offset = "0x1161684", VA = "0x1161684")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x1161B3C", Offset = "0x1161B3C", VA = "0x1161B3C")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x1161C90", Offset = "0x1161C90", VA = "0x1161C90")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x1161E40", Offset = "0x1161E40", VA = "0x1161E40")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x115F050", Offset = "0x115F050", VA = "0x115F050")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x115F1C4", Offset = "0x115F1C4", VA = "0x115F1C4")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x1161FEC", Offset = "0x1161FEC", VA = "0x1161FEC")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x11620B8", Offset = "0x11620B8", VA = "0x11620B8")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x116214C", Offset = "0x116214C", VA = "0x116214C")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x1162210", Offset = "0x1162210", VA = "0x1162210")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x11622B4", Offset = "0x11622B4", VA = "0x11622B4")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x1162394", Offset = "0x1162394", VA = "0x1162394")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x1162F2C", Offset = "0x1162F2C", VA = "0x1162F2C")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x116362C", Offset = "0x116362C", VA = "0x116362C")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x116380C", Offset = "0x116380C", VA = "0x116380C")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x1164618", Offset = "0x1164618", VA = "0x1164618")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x116259C", Offset = "0x116259C", VA = "0x116259C")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x1164738", Offset = "0x1164738", VA = "0x1164738")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x1164830", Offset = "0x1164830", VA = "0x1164830")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x1164974", Offset = "0x1164974", VA = "0x1164974")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x1164D74", Offset = "0x1164D74", VA = "0x1164D74")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x1164F88", Offset = "0x1164F88", VA = "0x1164F88")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x11650A4", Offset = "0x11650A4", VA = "0x11650A4")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x116526C", Offset = "0x116526C", VA = "0x116526C")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x1165344", Offset = "0x1165344", VA = "0x1165344")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x116548C", Offset = "0x116548C", VA = "0x116548C")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x1165890", Offset = "0x1165890", VA = "0x1165890")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public enum EmitterChannel
	{
		[Token(Token = "0x40008A5")]
		None = -1,
		[Token(Token = "0x40008A6")]
		Reserved,
		[Token(Token = "0x40008A7")]
		Any
	}
	[Serializable]
	[Token(Token = "0x200021B")]
	public class MixerSnapshot
	{
		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x1166368", Offset = "0x1166368", VA = "0x1166368")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float minDefaultVal;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxDefaultVal;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float min;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float max;

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x116630C", Offset = "0x116630C", VA = "0x116630C")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20002EB")]
		public enum FadeState
		{
			[Token(Token = "0x4000CE4")]
			Null,
			[Token(Token = "0x4000CE5")]
			FadingIn,
			[Token(Token = "0x4000CE6")]
			FadingOut,
			[Token(Token = "0x4000CE7")]
			Ducking
		}

		[Token(Token = "0x20002EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8896C", Offset = "0xA8896C")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4000CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4000CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x1700015D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001112")]
				[Address(RVA = "0x1166E2C", Offset = "0x1166E2C", VA = "0x1166E2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001114")]
				[Address(RVA = "0x1166E94", Offset = "0x1166E94", VA = "0x1166E94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600110F")]
			[Address(RVA = "0x1166AE8", Offset = "0x1166AE8", VA = "0x1166AE8")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6001110")]
			[Address(RVA = "0x1166D30", Offset = "0x1166D30", VA = "0x1166D30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001111")]
			[Address(RVA = "0x1166D34", Offset = "0x1166D34", VA = "0x1166D34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001113")]
			[Address(RVA = "0x1166E34", Offset = "0x1166E34", VA = "0x1166E34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8897C", Offset = "0xA8897C")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4000CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4000CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4000CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4000CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x1700015F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001118")]
				[Address(RVA = "0x1167304", Offset = "0x1167304", VA = "0x1167304", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000160")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600111A")]
				[Address(RVA = "0x116736C", Offset = "0x116736C", VA = "0x116736C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001115")]
			[Address(RVA = "0x1166CC0", Offset = "0x1166CC0", VA = "0x1166CC0")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001116")]
			[Address(RVA = "0x116718C", Offset = "0x116718C", VA = "0x116718C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001117")]
			[Address(RVA = "0x1167190", Offset = "0x1167190", VA = "0x1167190", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001119")]
			[Address(RVA = "0x116730C", Offset = "0x116730C", VA = "0x116730C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8898C", Offset = "0xA8898C")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4000CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4000CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4000CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4000CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4000CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4000D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4000D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4000D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x17000161")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600111E")]
				[Address(RVA = "0x116711C", Offset = "0x116711C", VA = "0x116711C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000162")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001120")]
				[Address(RVA = "0x1167184", Offset = "0x1167184", VA = "0x1167184", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600111B")]
			[Address(RVA = "0x1166CEC", Offset = "0x1166CEC", VA = "0x1166CEC")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x600111C")]
			[Address(RVA = "0x1166E9C", Offset = "0x1166E9C", VA = "0x1166E9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600111D")]
			[Address(RVA = "0x1166EA0", Offset = "0x1166EA0", VA = "0x1166EA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600111F")]
			[Address(RVA = "0x1167124", Offset = "0x1167124", VA = "0x1167124", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170000DD")]
		public float volume
		{
			[Token(Token = "0x6000DE3")]
			[Address(RVA = "0x11645FC", Offset = "0x11645FC", VA = "0x11645FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0x1166408", Offset = "0x1166408", VA = "0x1166408")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public float pitch
		{
			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0x1166424", Offset = "0x1166424", VA = "0x1166424")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0x1166440", Offset = "0x1166440", VA = "0x1166440")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public AudioClip clip
		{
			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0x116645C", Offset = "0x116645C", VA = "0x116645C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x1166478", Offset = "0x1166478", VA = "0x1166478")]
			set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public float time
		{
			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0x1166494", Offset = "0x1166494", VA = "0x1166494")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0x1162378", Offset = "0x1162378", VA = "0x1162378")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public float length
		{
			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0x11664B0", Offset = "0x11664B0", VA = "0x11664B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E2")]
		public bool loop
		{
			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0x1166568", Offset = "0x1166568", VA = "0x1166568")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DED")]
			[Address(RVA = "0x1166584", Offset = "0x1166584", VA = "0x1166584")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public bool mute
		{
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0x11665A4", Offset = "0x11665A4", VA = "0x11665A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0x11665C0", Offset = "0x11665C0", VA = "0x11665C0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0x11665E0", Offset = "0x11665E0", VA = "0x11665E0")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0x11665FC", Offset = "0x11665FC", VA = "0x11665FC")]
			set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public bool isPlaying
		{
			[Token(Token = "0x6000DF2")]
			[Address(RVA = "0x1166618", Offset = "0x1166618", VA = "0x1166618")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x1166634", Offset = "0x1166634", VA = "0x1166634")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x11645C4", Offset = "0x11645C4", VA = "0x11645C4")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x1166878", Offset = "0x1166878", VA = "0x1166878")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x1164940", Offset = "0x1164940", VA = "0x1164940")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x1166880", Offset = "0x1166880", VA = "0x1166880")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x1166888", Offset = "0x1166888", VA = "0x1166888")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x11651C4", Offset = "0x11651C4", VA = "0x11651C4")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x1161750", Offset = "0x1161750", VA = "0x1161750")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x1166890", Offset = "0x1166890", VA = "0x1166890")]
		public void Play()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x11668F0", Offset = "0x11668F0", VA = "0x11668F0")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x1161570", Offset = "0x1161570", VA = "0x1161570")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x11669B8", Offset = "0x11669B8", VA = "0x11669B8")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x1164C68", Offset = "0x1164C68", VA = "0x1164C68")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x1164EB8", Offset = "0x1164EB8", VA = "0x1164EB8")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x1161AF4", Offset = "0x1161AF4", VA = "0x1161AF4")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x1166A10", Offset = "0x1166A10", VA = "0x1166A10")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x1166A3C", Offset = "0x1166A3C", VA = "0x1166A3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA906B8", Offset = "0xA906B8")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x1166B14", Offset = "0x1166B14", VA = "0x1166B14")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x1161EF8", Offset = "0x1161EF8", VA = "0x1161EF8")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x1161F74", Offset = "0x1161F74", VA = "0x1161F74")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x1161DA8", Offset = "0x1161DA8", VA = "0x1161DA8")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x1161BF4", Offset = "0x1161BF4", VA = "0x1161BF4")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x1166B7C", Offset = "0x1166B7C", VA = "0x1166B7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA9071C", Offset = "0xA9071C")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x1166C0C", Offset = "0x1166C0C", VA = "0x1166C0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA90780", Offset = "0xA90780")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x1166D18", Offset = "0x1166D18", VA = "0x1166D18")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public enum SoundFXNext
	{
		[Token(Token = "0x40008BE")]
		Random,
		[Token(Token = "0x40008BF")]
		Sequential
	}
	[Token(Token = "0x200021F")]
	public enum FreqHint
	{
		[Token(Token = "0x40008C1")]
		None,
		[Token(Token = "0x40008C2")]
		Wide,
		[Token(Token = "0x40008C3")]
		Narrow
	}
	[Token(Token = "0x2000220")]
	public enum SoundPriority
	{
		[Token(Token = "0x40008C5")]
		VeryLow = -2,
		[Token(Token = "0x40008C6")]
		Low,
		[Token(Token = "0x40008C7")]
		Default,
		[Token(Token = "0x40008C8")]
		High,
		[Token(Token = "0x40008C9")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000221")]
	public class OSPProps
	{
		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8D9B4", Offset = "0xA8D9B4")]
		public bool enableSpatialization;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8D9EC", Offset = "0xA8D9EC")]
		public bool useFastOverride;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DA24", Offset = "0xA8DA24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8DA24", Offset = "0xA8DA24")]
		public float gain;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DA78", Offset = "0xA8DA78")]
		public bool enableInvSquare;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DAB0", Offset = "0xA8DAB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8DAB0", Offset = "0xA8DAB0")]
		public float volumetric;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DB08", Offset = "0xA8DB08")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xA8DB08", Offset = "0xA8DB08")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x1166378", Offset = "0x1166378", VA = "0x1166378")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000222")]
	public class SoundFX
	{
		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DB68", Offset = "0xA8DB68")]
		public string name;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DBA0", Offset = "0xA8DBA0")]
		public SoundFXNext playback;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DBD8", Offset = "0xA8DBD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8DBD8", Offset = "0xA8DBD8")]
		public float volume;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DC2C", Offset = "0xA8DC2C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xA8DC2C", Offset = "0xA8DC2C")]
		public Vector2 pitchVariance;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DC88", Offset = "0xA8DC88")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xA8DC88", Offset = "0xA8DC88")]
		public Vector2 falloffDistance;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DCE8", Offset = "0xA8DCE8")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DD20", Offset = "0xA8DD20")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DD58", Offset = "0xA8DD58")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DD90", Offset = "0xA8DD90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8DD90", Offset = "0xA8DD90")]
		public float spread;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DDE8", Offset = "0xA8DDE8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8DDE8", Offset = "0xA8DDE8")]
		public float pctChanceToPlay;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DE3C", Offset = "0xA8DE3C")]
		public SoundPriority priority;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DE74", Offset = "0xA8DE74")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xA8DE74", Offset = "0xA8DE74")]
		public Vector2 delay;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DED0", Offset = "0xA8DED0")]
		public bool looping;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DF08", Offset = "0xA8DF08")]
		public AudioClip[] soundClips;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170000E6")]
		public int Length
		{
			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0x1167374", Offset = "0x1167374", VA = "0x1167374")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E7")]
		public bool IsValid
		{
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0x1167390", Offset = "0x1167390", VA = "0x1167390")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E8")]
		public SoundGroup Group
		{
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0x1167434", Offset = "0x1167434", VA = "0x1167434")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0x116743C", Offset = "0x116743C", VA = "0x116743C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0x11644CC", Offset = "0x11644CC", VA = "0x11644CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000EA")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0x1164500", Offset = "0x1164500", VA = "0x1164500")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x1165C10", Offset = "0x1165C10", VA = "0x1165C10")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x11643FC", Offset = "0x11643FC", VA = "0x11643FC")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x1164524", Offset = "0x1164524", VA = "0x1164524")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x11644D8", Offset = "0x11644D8", VA = "0x11644D8")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x1167464", Offset = "0x1167464", VA = "0x1167464")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x1164518", Offset = "0x1164518", VA = "0x1164518")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x1167560", Offset = "0x1167560", VA = "0x1167560")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x116763C", Offset = "0x116763C", VA = "0x116763C")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x1167750", Offset = "0x1167750", VA = "0x1167750")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x11677DC", Offset = "0x11677DC", VA = "0x11677DC")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x1167870", Offset = "0x1167870", VA = "0x1167870")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x11678FC", Offset = "0x11678FC", VA = "0x11678FC")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x1167988", Offset = "0x1167988", VA = "0x1167988")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000223")]
	public class SoundFXRef
	{
		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170000EB")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6000E20")]
			[Address(RVA = "0x1167A00", Offset = "0x1167A00", VA = "0x1167A00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		public string name
		{
			[Token(Token = "0x6000E21")]
			[Address(RVA = "0x1167B14", Offset = "0x1167B14", VA = "0x1167B14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E22")]
			[Address(RVA = "0x1167B1C", Offset = "0x1167B1C", VA = "0x1167B1C")]
			set
			{
			}
		}

		[Token(Token = "0x170000ED")]
		public int Length
		{
			[Token(Token = "0x6000E24")]
			[Address(RVA = "0x1167B44", Offset = "0x1167B44", VA = "0x1167B44")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EE")]
		public bool IsValid
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0x1167B88", Offset = "0x1167B88", VA = "0x1167B88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x1167A30", Offset = "0x1167A30", VA = "0x1167A30")]
		private void Init()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x1167BC0", Offset = "0x1167BC0", VA = "0x1167BC0")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x1167BF8", Offset = "0x1167BF8", VA = "0x1167BF8")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x1167C38", Offset = "0x1167C38", VA = "0x1167C38")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x115EFD0", Offset = "0x115EFD0", VA = "0x115EFD0")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x1167C80", Offset = "0x1167C80", VA = "0x1167C80")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x1167CC0", Offset = "0x1167CC0", VA = "0x1167CC0")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x1167D10", Offset = "0x1167D10", VA = "0x1167D10")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x1167D48", Offset = "0x1167D48", VA = "0x1167D48")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x1167D88", Offset = "0x1167D88", VA = "0x1167D88")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x1167DC0", Offset = "0x1167DC0", VA = "0x1167DC0")]
		public SoundFXRef()
		{
		}
	}
}
namespace PlayStationVRExample
{
	[Token(Token = "0x2000224")]
	public class DisableAfterDelay : MonoBehaviour
	{
		[Token(Token = "0x20002EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA8899C", Offset = "0xA8899C")]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DisableAfterDelay <>4__this;

			[Token(Token = "0x17000163")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001124")]
				[Address(RVA = "0xD9BF90", Offset = "0xD9BF90", VA = "0xD9BF90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000164")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001126")]
				[Address(RVA = "0xD9BFF8", Offset = "0xD9BFF8", VA = "0xD9BFF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001121")]
			[Address(RVA = "0xD9BE74", Offset = "0xD9BE74", VA = "0xD9BE74")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001122")]
			[Address(RVA = "0xD9BEB0", Offset = "0xD9BEB0", VA = "0xD9BEB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001123")]
			[Address(RVA = "0xD9BEB4", Offset = "0xD9BEB4", VA = "0xD9BEB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001125")]
			[Address(RVA = "0xD9BF98", Offset = "0xD9BF98", VA = "0xD9BF98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool disableOnPlay;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float delay;

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xD9BDF8", Offset = "0xD9BDF8", VA = "0xD9BDF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA907E4", Offset = "0xA907E4")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xD9BEA0", Offset = "0xD9BEA0", VA = "0xD9BEA0")]
		public DisableAfterDelay()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class InstructionsManager : MonoBehaviour
	{
		[Token(Token = "0x20002F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA889AC", Offset = "0xA889AC")]
		private sealed class <BeginGameCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InstructionsManager <>4__this;

			[Token(Token = "0x17000165")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600112A")]
				[Address(RVA = "0xD9CDA0", Offset = "0xD9CDA0", VA = "0xD9CDA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000166")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600112C")]
				[Address(RVA = "0xD9CE08", Offset = "0xD9CE08", VA = "0xD9CE08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001127")]
			[Address(RVA = "0xD9CAA4", Offset = "0xD9CAA4", VA = "0xD9CAA4")]
			[DebuggerHidden]
			public <BeginGameCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001128")]
			[Address(RVA = "0xD9CAE0", Offset = "0xD9CAE0", VA = "0xD9CAE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001129")]
			[Address(RVA = "0xD9CAE4", Offset = "0xD9CAE4", VA = "0xD9CAE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600112B")]
			[Address(RVA = "0xD9CDA8", Offset = "0xD9CDA8", VA = "0xD9CDA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup instructionsCanvasGroup;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeSpeed;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_HasStarted;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WeaponController[] m_WeaponControls;

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xD9C96C", Offset = "0xD9C96C", VA = "0xD9C96C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xD9C9E8", Offset = "0xD9C9E8", VA = "0xD9C9E8")]
		public void BeginGame()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xD9CA28", Offset = "0xD9CA28", VA = "0xD9CA28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA90848", Offset = "0xA90848")]
		private IEnumerator BeginGameCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xD9CAD0", Offset = "0xD9CAD0", VA = "0xD9CAD0")]
		public InstructionsManager()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class LookAtTarget : MonoBehaviour
	{
		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform lookAtTarget;

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xD9CFCC", Offset = "0xD9CFCC", VA = "0xD9CFCC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xD9D070", Offset = "0xD9D070", VA = "0xD9D070")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xD9D178", Offset = "0xD9D178", VA = "0xD9D178")]
		public LookAtTarget()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class MainMenuManager : MonoBehaviour
	{
		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text ds4StatusText;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider ds4Slider;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text moveStatusText;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Slider moveSlider;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text aimStatusText;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Slider aimSlider;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text renderScaleText;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Slider renderScaleSlider;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Text socialScreenText;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Slider socialScreenSlider;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Text minOutputColorText;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Slider minOutputColorSlider;

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xD9D180", Offset = "0xD9D180", VA = "0xD9D180")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xD9D280", Offset = "0xD9D280", VA = "0xD9D280")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xD9D284", Offset = "0xD9D284", VA = "0xD9D284")]
		private void DualShock4Check()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xD9D288", Offset = "0xD9D288", VA = "0xD9D288")]
		private void MoveCheck()
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xD9D33C", Offset = "0xD9D33C", VA = "0xD9D33C")]
		private void AimCheck()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xD9D340", Offset = "0xD9D340", VA = "0xD9D340")]
		public void GoToDualShock4Scene()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xD9D424", Offset = "0xD9D424", VA = "0xD9D424")]
		public void GoToMoveScene()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xD9D4A4", Offset = "0xD9D4A4", VA = "0xD9D4A4")]
		public void GoToAimScene()
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xD9D524", Offset = "0xD9D524", VA = "0xD9D524")]
		public void OptionsToggleShowHmdView()
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0xD9D71C", Offset = "0xD9D71C", VA = "0xD9D71C")]
		public void SwitchRenderScale()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xD9D820", Offset = "0xD9D820", VA = "0xD9D820")]
		private void OptionsToggleMinimumOutputColor()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xD9D824", Offset = "0xD9D824", VA = "0xD9D824")]
		public MainMenuManager()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class SceneSwitcher : MonoBehaviour
	{
		[Token(Token = "0x20002F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA889BC", Offset = "0xA889BC")]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x17000167")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001130")]
				[Address(RVA = "0xD9DEC0", Offset = "0xD9DEC0", VA = "0xD9DEC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000168")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001132")]
				[Address(RVA = "0xD9DF28", Offset = "0xD9DF28", VA = "0xD9DF28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600112D")]
			[Address(RVA = "0xD9D8A8", Offset = "0xD9D8A8", VA = "0xD9D8A8")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600112E")]
			[Address(RVA = "0xD9DD64", Offset = "0xD9DD64", VA = "0xD9DD64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600112F")]
			[Address(RVA = "0xD9DD68", Offset = "0xD9DD68", VA = "0xD9DD68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001131")]
			[Address(RVA = "0xD9DEC8", Offset = "0xD9DEC8", VA = "0xD9DEC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA889CC", Offset = "0xA889CC")]
		private sealed class <FadeDownRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x17000169")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001136")]
				[Address(RVA = "0xD9DCF4", Offset = "0xD9DCF4", VA = "0xD9DCF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001138")]
				[Address(RVA = "0xD9DD5C", Offset = "0xD9DD5C", VA = "0xD9DD5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001133")]
			[Address(RVA = "0xD9D9D0", Offset = "0xD9D9D0", VA = "0xD9D9D0")]
			[DebuggerHidden]
			public <FadeDownRoutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001134")]
			[Address(RVA = "0xD9DB88", Offset = "0xD9DB88", VA = "0xD9DB88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001135")]
			[Address(RVA = "0xD9DB8C", Offset = "0xD9DB8C", VA = "0xD9DB8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001137")]
			[Address(RVA = "0xD9DCFC", Offset = "0xD9DCFC", VA = "0xD9DCFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA889DC", Offset = "0xA889DC")]
		private sealed class <SwitchToSceneRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x4000D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int sceneIndex;

			[Token(Token = "0x1700016B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600113C")]
				[Address(RVA = "0xD9E110", Offset = "0xD9E110", VA = "0xD9E110", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600113E")]
				[Address(RVA = "0xD9E178", Offset = "0xD9E178", VA = "0xD9E178", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001139")]
			[Address(RVA = "0xD9DA88", Offset = "0xD9DA88", VA = "0xD9DA88")]
			[DebuggerHidden]
			public <SwitchToSceneRoutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600113A")]
			[Address(RVA = "0xD9DF30", Offset = "0xD9DF30", VA = "0xD9DF30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600113B")]
			[Address(RVA = "0xD9DF34", Offset = "0xD9DF34", VA = "0xD9DF34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600113D")]
			[Address(RVA = "0xD9E118", Offset = "0xD9E118", VA = "0xD9E118", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA889EC", Offset = "0xA889EC")]
		private sealed class <SwitchToSceneRoutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x4000D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sceneName;

			[Token(Token = "0x1700016D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001142")]
				[Address(RVA = "0xD9E360", Offset = "0xD9E360", VA = "0xD9E360", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001144")]
				[Address(RVA = "0xD9E3C8", Offset = "0xD9E3C8", VA = "0xD9E3C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600113F")]
			[Address(RVA = "0xD9DB4C", Offset = "0xD9DB4C", VA = "0xD9DB4C")]
			[DebuggerHidden]
			public <SwitchToSceneRoutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001140")]
			[Address(RVA = "0xD9E180", Offset = "0xD9E180", VA = "0xD9E180", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001141")]
			[Address(RVA = "0xD9E184", Offset = "0xD9E184", VA = "0xD9E184", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001143")]
			[Address(RVA = "0xD9E368", Offset = "0xD9E368", VA = "0xD9E368", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup canvasGroup;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeSpeed;

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xD9D82C", Offset = "0xD9D82C", VA = "0xD9D82C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA908AC", Offset = "0xA908AC")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xD9D8D4", Offset = "0xD9D8D4", VA = "0xD9D8D4")]
		public void SwitchToScene(int sceneIndex)
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xD9D3C0", Offset = "0xD9D3C0", VA = "0xD9D3C0")]
		public void SwitchToScene(string sceneName)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xD9D954", Offset = "0xD9D954", VA = "0xD9D954")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA90910", Offset = "0xA90910")]
		private IEnumerator FadeDownRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xD9D9FC", Offset = "0xD9D9FC", VA = "0xD9D9FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA90974", Offset = "0xA90974")]
		private IEnumerator SwitchToSceneRoutine(int sceneIndex)
		{
			return null;
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xD9DAB4", Offset = "0xD9DAB4", VA = "0xD9DAB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA909D8", Offset = "0xA909D8")]
		private IEnumerator SwitchToSceneRoutine(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xD9DB78", Offset = "0xD9DB78", VA = "0xD9DB78")]
		public SceneSwitcher()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class ScoreManager : MonoBehaviour
	{
		[Token(Token = "0x20002F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA889FC", Offset = "0xA889FC")]
		private sealed class <EndTimer>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScoreManager <>4__this;

			[Token(Token = "0x1700016F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001148")]
				[Address(RVA = "0xD9EBF0", Offset = "0xD9EBF0", VA = "0xD9EBF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000170")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600114A")]
				[Address(RVA = "0xD9EC58", Offset = "0xD9EC58", VA = "0xD9EC58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001145")]
			[Address(RVA = "0xD9E89C", Offset = "0xD9E89C", VA = "0xD9E89C")]
			[DebuggerHidden]
			public <EndTimer>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001146")]
			[Address(RVA = "0xD9EA1C", Offset = "0xD9EA1C", VA = "0xD9EA1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001147")]
			[Address(RVA = "0xD9EA20", Offset = "0xD9EA20", VA = "0xD9EA20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001149")]
			[Address(RVA = "0xD9EBF8", Offset = "0xD9EBF8", VA = "0xD9EBF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text timerText;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image timerDisplay;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text scoreText;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text accuracyText;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text highScoreText;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float totalTime;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int scoreValue;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_TheScore;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int s_HighScore;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_Accuracy;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_RollingScore;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_CurrentTime;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_TimerIsRunning;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TargetsManager m_TargetsManager;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WeaponController[] m_WeaponControls;

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0xD9E3D0", Offset = "0xD9E3D0", VA = "0xD9E3D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xD9E570", Offset = "0xD9E570", VA = "0xD9E570")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xD9E640", Offset = "0xD9E640", VA = "0xD9E640")]
		private void Timer()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xD9E5C4", Offset = "0xD9E5C4", VA = "0xD9E5C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA90A3C", Offset = "0xA90A3C")]
		private IEnumerator EndTimer()
		{
			return null;
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xD9E6F8", Offset = "0xD9E6F8", VA = "0xD9E6F8")]
		private void UpdateScoreDisplay()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xD9CD88", Offset = "0xD9CD88", VA = "0xD9CD88")]
		public void StartTimer()
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xD9E8C8", Offset = "0xD9E8C8", VA = "0xD9E8C8")]
		private void CalculateAccuracy()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xD9E964", Offset = "0xD9E964", VA = "0xD9E964")]
		public void IncreaseScore()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xD9E974", Offset = "0xD9E974", VA = "0xD9E974")]
		public void Quit()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xD9E9FC", Offset = "0xD9E9FC", VA = "0xD9E9FC")]
		public ScoreManager()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class SetupManager : MonoBehaviour
	{
		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator m_StateMachine;

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xD9EC60", Offset = "0xD9EC60", VA = "0xD9EC60")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xD9ED5C", Offset = "0xD9ED5C", VA = "0xD9ED5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xD9EE60", Offset = "0xD9EE60", VA = "0xD9EE60")]
		public void FinishedUIInteraction()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xD9EEBC", Offset = "0xD9EEBC", VA = "0xD9EEBC")]
		public void ProgressToMainMenu()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xD9EF3C", Offset = "0xD9EF3C", VA = "0xD9EF3C")]
		public SetupManager()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class Spinner : MonoBehaviour
	{
		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool local;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool allowManual;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool allowAutomatic;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool lockZ;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float autoTimer;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 spinDirection;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float speed;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_GoAutomaticTime;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_AutoSpinDirection;

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xD9EF44", Offset = "0xD9EF44", VA = "0xD9EF44")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xD9EF58", Offset = "0xD9EF58", VA = "0xD9EF58")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xD9F080", Offset = "0xD9F080", VA = "0xD9F080")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xD9F2DC", Offset = "0xD9F2DC", VA = "0xD9F2DC")]
		public Spinner()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class TargetObject : MonoBehaviour
	{
		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject explosionEffect;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject solidTarget;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject brokenTarget;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip audioClipSpawned;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip audioClipHit;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float destructionForce;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float debisDestroyDelay;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource m_AudioPlayer;

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xD9F374", Offset = "0xD9F374", VA = "0xD9F374")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xD9F440", Offset = "0xD9F440", VA = "0xD9F440")]
		public void DestroyTarget()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xD9F8CC", Offset = "0xD9F8CC", VA = "0xD9F8CC")]
		public TargetObject()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class TargetsManager : MonoBehaviour
	{
		[Token(Token = "0x20002F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88A0C", Offset = "0xA88A0C")]
		private sealed class <SpawnTarget>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TargetsManager <>4__this;

			[Token(Token = "0x17000171")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600114E")]
				[Address(RVA = "0xD9FDE4", Offset = "0xD9FDE4", VA = "0xD9FDE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000172")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001150")]
				[Address(RVA = "0xD9FE4C", Offset = "0xD9FE4C", VA = "0xD9FE4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600114B")]
			[Address(RVA = "0xD9FA94", Offset = "0xD9FA94", VA = "0xD9FA94")]
			[DebuggerHidden]
			public <SpawnTarget>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600114C")]
			[Address(RVA = "0xD9FCCC", Offset = "0xD9FCCC", VA = "0xD9FCCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600114D")]
			[Address(RVA = "0xD9FCD0", Offset = "0xD9FCD0", VA = "0xD9FCD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600114F")]
			[Address(RVA = "0xD9FDEC", Offset = "0xD9FDEC", VA = "0xD9FDEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float spawnRateMin;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float spawnRateMax;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject targetPrefab;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform spawnPoint;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 spawnArea;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int maxSpawnedObjects;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_AllowSpawning;

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xD9CD54", Offset = "0xD9CD54", VA = "0xD9CD54")]
		public void BeginSpawning()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xD9EBE4", Offset = "0xD9EBE4", VA = "0xD9EBE4")]
		public void StopSpawning()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xD9F87C", Offset = "0xD9F87C", VA = "0xD9F87C")]
		public void SpawnTargetImmediately()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xD9F8E0", Offset = "0xD9F8E0", VA = "0xD9F8E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA90AA0", Offset = "0xA90AA0")]
		private IEnumerator SpawnTarget()
		{
			return null;
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xD9F95C", Offset = "0xD9F95C", VA = "0xD9F95C")]
		private void Spawn()
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xD9FBF4", Offset = "0xD9FBF4", VA = "0xD9FBF4")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xD9FAC0", Offset = "0xD9FAC0", VA = "0xD9FAC0")]
		private Vector3 RandomSpawnPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xD9FC40", Offset = "0xD9FC40", VA = "0xD9FC40")]
		public TargetsManager()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class InputVisualiser : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002F7")]
		public class Controller
		{
			[Token(Token = "0x4000D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform buttonCross;

			[Token(Token = "0x4000D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform buttonCircle;

			[Token(Token = "0x4000D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform buttonSquare;

			[Token(Token = "0x4000D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform buttonTriangle;

			[Token(Token = "0x4000D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform buttonOptions;

			[Token(Token = "0x4000D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform buttonTouchpad;

			[Token(Token = "0x4000D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Transform dpadDown;

			[Token(Token = "0x4000D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform dpadRight;

			[Token(Token = "0x4000D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform dpadUp;

			[Token(Token = "0x4000D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Transform dpadLeft;

			[Token(Token = "0x4000D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Transform buttonL1;

			[Token(Token = "0x4000D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Transform buttonR1;

			[Token(Token = "0x4000D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Transform buttonR12;

			[Token(Token = "0x4000D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Transform triggerL2;

			[Token(Token = "0x4000D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Transform triggerR2;

			[Token(Token = "0x4000D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Transform thumbstickL3;

			[Token(Token = "0x4000D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Transform thumbstickR3;

			[Token(Token = "0x6001151")]
			[Address(RVA = "0xD9C964", Offset = "0xD9C964", VA = "0xD9C964")]
			public Controller()
			{
			}
		}

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Controller controller;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float buttonPressDistance;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float triggerPullAngle;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float thumbstickAngle;

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xD9C000", Offset = "0xD9C000", VA = "0xD9C000")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xD9C95C", Offset = "0xD9C95C", VA = "0xD9C95C")]
		public InputVisualiser()
		{
		}
	}
	[Token(Token = "0x200022F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA88380", Offset = "0xA88380")]
	public class LaserPointer : MonoBehaviour
	{
		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LineRenderer m_Line;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RaycastHit m_Hit;

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xD9CE10", Offset = "0xD9CE10", VA = "0xD9CE10")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0xD9CE70", Offset = "0xD9CE70", VA = "0xD9CE70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xD9CFC4", Offset = "0xD9CFC4", VA = "0xD9CFC4")]
		public LaserPointer()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class WeaponController : MonoBehaviour
	{
		[Token(Token = "0x20002F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88A1C", Offset = "0xA88A1C")]
		private sealed class <Vibrate>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000173")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001155")]
				[Address(RVA = "0xDA1BE8", Offset = "0xDA1BE8", VA = "0xDA1BE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000174")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001157")]
				[Address(RVA = "0xDA1C50", Offset = "0xDA1C50", VA = "0xDA1C50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001152")]
			[Address(RVA = "0xDA1B04", Offset = "0xDA1B04", VA = "0xDA1B04")]
			[DebuggerHidden]
			public <Vibrate>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001153")]
			[Address(RVA = "0xDA1B40", Offset = "0xDA1B40", VA = "0xDA1B40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001154")]
			[Address(RVA = "0xDA1B44", Offset = "0xDA1B44", VA = "0xDA1B44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001156")]
			[Address(RVA = "0xDA1BF0", Offset = "0xDA1BF0", VA = "0xDA1BF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fireRate;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem shotEmitter;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isMoveController;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool isSecondaryMoveController;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool isAimController;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource shotSound;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource missSound;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LaserPointer m_LaserPointer;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RaycastHit m_Hit;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_LastShotTime;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_CanShoot;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool m_HasShootInput;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public int shotsFired;

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xDA17A4", Offset = "0xDA17A4", VA = "0xDA17A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xDA1834", Offset = "0xDA1834", VA = "0xDA1834")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xDA1894", Offset = "0xDA1894", VA = "0xDA1894")]
		private bool CheckForInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0xDA18E0", Offset = "0xDA18E0", VA = "0xDA18E0")]
		private void Fire()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xDA1AA4", Offset = "0xDA1AA4", VA = "0xDA1AA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA90B04", Offset = "0xA90B04")]
		private IEnumerator Vibrate()
		{
			return null;
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xD9CD0C", Offset = "0xD9CD0C", VA = "0xD9CD0C")]
		public void WeaponCanShoot(bool shootBool)
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xDA1B30", Offset = "0xDA1B30", VA = "0xDA1B30")]
		public WeaponController()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class TrackedPlayStationDevices : MonoBehaviour
	{
		[Token(Token = "0x20002F9")]
		public enum TrackedDevicesType
		{
			[Token(Token = "0x4000D31")]
			DualShock4 = 1,
			[Token(Token = "0x4000D32")]
			Aim = 2,
			[Token(Token = "0x4000D33")]
			Move = 4
		}

		[Serializable]
		[Token(Token = "0x20002FA")]
		public class TrackedDevice
		{
			[Token(Token = "0x4000D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int handle;

			[Token(Token = "0x4000D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform transform;

			[Token(Token = "0x4000D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Renderer light;

			[Token(Token = "0x4000D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x4000D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Quaternion orientation;

			[Token(Token = "0x6001158")]
			[Address(RVA = "0xDA0814", Offset = "0xDA0814", VA = "0xDA0814")]
			public TrackedDevice()
			{
			}
		}

		[Token(Token = "0x20002FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88A2C", Offset = "0xA88A2C")]
		private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrackedPlayStationDevices <>4__this;

			[Token(Token = "0x17000175")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600115C")]
				[Address(RVA = "0xDA07A4", Offset = "0xDA07A4", VA = "0xDA07A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000176")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600115E")]
				[Address(RVA = "0xDA080C", Offset = "0xDA080C", VA = "0xDA080C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001159")]
			[Address(RVA = "0xD9FED0", Offset = "0xD9FED0", VA = "0xD9FED0")]
			[DebuggerHidden]
			public <Start>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600115A")]
			[Address(RVA = "0xDA04C4", Offset = "0xDA04C4", VA = "0xDA04C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600115B")]
			[Address(RVA = "0xDA04C8", Offset = "0xDA04C8", VA = "0xDA04C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600115D")]
			[Address(RVA = "0xDA07AC", Offset = "0xDA07AC", VA = "0xDA07AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88A3C", Offset = "0xA88A3C")]
		private sealed class <RegisterDualShock4Controller>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000177")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001162")]
				[Address(RVA = "0xDA0384", Offset = "0xDA0384", VA = "0xDA0384", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000178")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001164")]
				[Address(RVA = "0xDA03EC", Offset = "0xDA03EC", VA = "0xDA03EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600115F")]
			[Address(RVA = "0xDA01B4", Offset = "0xDA01B4", VA = "0xDA01B4")]
			[DebuggerHidden]
			public <RegisterDualShock4Controller>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001160")]
			[Address(RVA = "0xDA0324", Offset = "0xDA0324", VA = "0xDA0324", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001161")]
			[Address(RVA = "0xDA0328", Offset = "0xDA0328", VA = "0xDA0328", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001163")]
			[Address(RVA = "0xDA038C", Offset = "0xDA038C", VA = "0xDA038C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88A4C", Offset = "0xA88A4C")]
		private sealed class <RegisterAimController>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000179")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001168")]
				[Address(RVA = "0xDA02B4", Offset = "0xDA02B4", VA = "0xDA02B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600116A")]
				[Address(RVA = "0xDA031C", Offset = "0xDA031C", VA = "0xDA031C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001165")]
			[Address(RVA = "0xDA01E0", Offset = "0xDA01E0", VA = "0xDA01E0")]
			[DebuggerHidden]
			public <RegisterAimController>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001166")]
			[Address(RVA = "0xDA0254", Offset = "0xDA0254", VA = "0xDA0254", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001167")]
			[Address(RVA = "0xDA0258", Offset = "0xDA0258", VA = "0xDA0258", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001169")]
			[Address(RVA = "0xDA02BC", Offset = "0xDA02BC", VA = "0xDA02BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88A5C", Offset = "0xA88A5C")]
		private sealed class <RegisterMoveControllers>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700017B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600116E")]
				[Address(RVA = "0xDA0454", Offset = "0xDA0454", VA = "0xDA0454", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001170")]
				[Address(RVA = "0xDA04BC", Offset = "0xDA04BC", VA = "0xDA04BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600116B")]
			[Address(RVA = "0xDA020C", Offset = "0xDA020C", VA = "0xDA020C")]
			[DebuggerHidden]
			public <RegisterMoveControllers>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600116C")]
			[Address(RVA = "0xDA03F4", Offset = "0xDA03F4", VA = "0xDA03F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600116D")]
			[Address(RVA = "0xDA03F8", Offset = "0xDA03F8", VA = "0xDA03F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600116F")]
			[Address(RVA = "0xDA045C", Offset = "0xDA045C", VA = "0xDA045C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrackedDevicesType trackedDevicesType;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrackedDevice deviceDualShock4;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TrackedDevice deviceAim;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TrackedDevice deviceMovePrimary;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TrackedDevice deviceMoveSecondary;

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xD9FE54", Offset = "0xD9FE54", VA = "0xD9FE54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA90B68", Offset = "0xA90B68")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xD9FEFC", Offset = "0xD9FEFC", VA = "0xD9FEFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xD9FF94", Offset = "0xD9FF94", VA = "0xD9FF94")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xD9FFEC", Offset = "0xD9FFEC", VA = "0xD9FFEC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xD9FFF0", Offset = "0xD9FFF0", VA = "0xD9FFF0")]
		public void ResetDeviceTracking()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xD9FF88", Offset = "0xD9FF88", VA = "0xD9FF88")]
		private void UpdateDualShock4Transforms()
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xD9FF8C", Offset = "0xD9FF8C", VA = "0xD9FF8C")]
		private void UpdateAimTransforms()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0xD9FF90", Offset = "0xD9FF90", VA = "0xD9FF90")]
		private void UpdateMoveTransforms()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xDA0014", Offset = "0xDA0014", VA = "0xDA0014")]
		public void RegisterDevices()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xDA0094", Offset = "0xDA0094", VA = "0xDA0094")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA90BCC", Offset = "0xA90BCC")]
		private IEnumerator RegisterDualShock4Controller()
		{
			return null;
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xDA00F4", Offset = "0xDA00F4", VA = "0xDA00F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA90C30", Offset = "0xA90C30")]
		private IEnumerator RegisterAimController()
		{
			return null;
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xDA0154", Offset = "0xDA0154", VA = "0xDA0154")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA90C94", Offset = "0xA90C94")]
		private IEnumerator RegisterMoveControllers()
		{
			return null;
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xD9FF98", Offset = "0xD9FF98", VA = "0xD9FF98")]
		public void UnregisterDevices()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xDA0238", Offset = "0xDA0238", VA = "0xDA0238")]
		private void UnregisterDualShock4()
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xDA023C", Offset = "0xDA023C", VA = "0xDA023C")]
		private void UnregisterAimController()
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xDA0240", Offset = "0xDA0240", VA = "0xDA0240")]
		private void UnregisterMoveControllers()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xDA0244", Offset = "0xDA0244", VA = "0xDA0244")]
		public TrackedPlayStationDevices()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class VRDeviceNames
	{
		[Token(Token = "0x400093B")]
		public const string None = "None";

		[Token(Token = "0x400093C")]
		public const string Unknown = "Unknown";

		[Token(Token = "0x400093D")]
		public const string Oculus = "Oculus";

		[Token(Token = "0x400093E")]
		public const string playStationVR = "PlayStationVR";

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xDA08C4", Offset = "0xDA08C4", VA = "0xDA08C4")]
		public VRDeviceNames()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class VRManager : MonoBehaviour
	{
		[Token(Token = "0x20002FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88A6C", Offset = "0xA88A6C")]
		private sealed class <SetupVR>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRManager <>4__this;

			[Token(Token = "0x1700017D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001174")]
				[Address(RVA = "0xDA0C88", Offset = "0xDA0C88", VA = "0xDA0C88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001176")]
				[Address(RVA = "0xDA0CF0", Offset = "0xDA0CF0", VA = "0xDA0CF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001171")]
			[Address(RVA = "0xDA0AAC", Offset = "0xDA0AAC", VA = "0xDA0AAC")]
			[DebuggerHidden]
			public <SetupVR>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001172")]
			[Address(RVA = "0xDA0BC0", Offset = "0xDA0BC0", VA = "0xDA0BC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001173")]
			[Address(RVA = "0xDA0BC4", Offset = "0xDA0BC4", VA = "0xDA0BC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001175")]
			[Address(RVA = "0xDA0C90", Offset = "0xDA0C90", VA = "0xDA0C90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88A7C", Offset = "0xA88A7C")]
		private sealed class <ShutdownVR>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700017F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600117A")]
				[Address(RVA = "0xDA0DFC", Offset = "0xDA0DFC", VA = "0xDA0DFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000180")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600117C")]
				[Address(RVA = "0xDA0E64", Offset = "0xDA0E64", VA = "0xDA0E64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001177")]
			[Address(RVA = "0xDA0B64", Offset = "0xDA0B64", VA = "0xDA0B64")]
			[DebuggerHidden]
			public <ShutdownVR>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001178")]
			[Address(RVA = "0xDA0CF8", Offset = "0xDA0CF8", VA = "0xDA0CF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001179")]
			[Address(RVA = "0xDA0CFC", Offset = "0xDA0CFC", VA = "0xDA0CFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600117B")]
			[Address(RVA = "0xDA0E04", Offset = "0xDA0E04", VA = "0xDA0E04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float renderScale;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool showHmdViewOnMonitor;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool doSetupOnAwake;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VRManager s_Instance;

		[Token(Token = "0x170000EF")]
		public static VRManager instance
		{
			[Token(Token = "0x6000E89")]
			[Address(RVA = "0xD9D600", Offset = "0xD9D600", VA = "0xD9D600")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xDA08CC", Offset = "0xDA08CC", VA = "0xDA08CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xD9ED30", Offset = "0xD9ED30", VA = "0xD9ED30")]
		public void BeginVRSetup()
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xDA0A30", Offset = "0xDA0A30", VA = "0xDA0A30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA90CF8", Offset = "0xA90CF8")]
		private IEnumerator SetupVR()
		{
			return null;
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xDA0AD8", Offset = "0xDA0AD8", VA = "0xDA0AD8")]
		public void BeginShutdownVR()
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xDA0B04", Offset = "0xDA0B04", VA = "0xDA0B04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA90D5C", Offset = "0xA90D5C")]
		private IEnumerator ShutdownVR()
		{
			return null;
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xD9EE5C", Offset = "0xD9EE5C", VA = "0xD9EE5C")]
		public void SetupHmdDevice()
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xDA0B90", Offset = "0xDA0B90", VA = "0xDA0B90")]
		public void ToggleHmdViewOnMonitor(bool showOnMonitor)
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xD9D6FC", Offset = "0xD9D6FC", VA = "0xD9D6FC")]
		public void ToggleHmdViewOnMonitor()
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xD9D818", Offset = "0xD9D818", VA = "0xD9D818")]
		public void ChangeRenderScale(float scale)
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xDA0BA4", Offset = "0xDA0BA4", VA = "0xDA0BA4")]
		public VRManager()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class VRPlaySpace : MonoBehaviour
	{
		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform frustumTransform;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer[] frustumRenderers;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float safeDistance;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fadeSpeed;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color showColor;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color hideColor;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_ShowFrustum;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_CamAcceleration;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_HmdPositionRaw;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion m_HmdRotationUnity;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion m_HmdRotationRaw;

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xDA0E6C", Offset = "0xDA0E6C", VA = "0xDA0E6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xDA0EF8", Offset = "0xDA0EF8", VA = "0xDA0EF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xDA0EFC", Offset = "0xDA0EFC", VA = "0xDA0EFC")]
		private void UpdateFrustumTransform()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xDA0F00", Offset = "0xDA0F00", VA = "0xDA0F00")]
		private void UpdateFrustumDisplay()
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xDA1054", Offset = "0xDA1054", VA = "0xDA1054")]
		public VRPlaySpace()
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class VRPostReprojection : MonoBehaviour
	{
		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject busySpinner;

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xDA1068", Offset = "0xDA1068", VA = "0xDA1068")]
		public VRPostReprojection()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class VRUIComplete : MonoBehaviour
	{
		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string message;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool disableColliderAfterUse;

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xDA1070", Offset = "0xDA1070", VA = "0xDA1070")]
		public void Complete()
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xDA1150", Offset = "0xDA1150", VA = "0xDA1150")]
		public VRUIComplete()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class VRUIController : MonoBehaviour
	{
		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask uiLayerMask;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_SliderFillSpeed;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RaycastHit m_Hit;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Slider m_CurrentSlider;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource m_AudioSrc;

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xDA11B0", Offset = "0xDA11B0", VA = "0xDA11B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xDA1210", Offset = "0xDA1210", VA = "0xDA1210")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xDA1794", Offset = "0xDA1794", VA = "0xDA1794")]
		public VRUIController()
		{
		}
	}
}
namespace HutongGames.PlayMaker
{
	[Token(Token = "0x2000238")]
	[Preserve]
	public class FsmProcessor
	{
		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xDC6724", Offset = "0xDC6724", VA = "0xDC6724")]
		public static void OnPreprocess(PlayMakerFSM fsm)
		{
		}

		[Token(Token = "0x6000EA0")]
		private static void HandleUiEvent<T>(PlayMakerFSM fsm, UiEvents uiEvent) where T : PlayMakerUiEventBase
		{
		}

		[Token(Token = "0x6000EA1")]
		private static void AddUiEventHandler<T>(PlayMakerFSM fsm) where T : PlayMakerUiEventBase
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xDC68F4", Offset = "0xDC68F4", VA = "0xDC68F4")]
		private static bool AddEventHandlerComponent(PlayMakerFSM fsm, Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xDC6ABC", Offset = "0xDC6ABC", VA = "0xDC6ABC")]
		public static PlayMakerProxyBase GetEventHandlerComponent(GameObject go, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xDC6C2C", Offset = "0xDC6C2C", VA = "0xDC6C2C")]
		public FsmProcessor()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class UpdateHelper
	{
		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool editorPrefLoaded;

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xDC6C34", Offset = "0xDC6C34", VA = "0xDC6C34")]
		public static void SetDirty(Fsm fsm)
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xDC6C38", Offset = "0xDC6C38", VA = "0xDC6C38")]
		public UpdateHelper()
		{
		}
	}
}
namespace HutongGames.PlayMaker.Actions
{
	[Token(Token = "0x200023A")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0xA883F4", Offset = "0xA883F4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA883F4", Offset = "0xA883F4")]
	public class GetComponentInChildren : FsmStateAction
	{
		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DF50", Offset = "0xA8DF50")]
		public FsmOwnerDefault gameObject;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0xA8DF88", Offset = "0xA8DF88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DF88", Offset = "0xA8DF88")]
		public FsmObject storeComponent;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8DFD8", Offset = "0xA8DFD8")]
		public bool everyFrame;

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xDC645C", Offset = "0xDC645C", VA = "0xDC645C", Slot = "28")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xDC6498", Offset = "0xDC6498", VA = "0xDC6498", Slot = "32")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xDC65B8", Offset = "0xDC65B8", VA = "0xDC65B8", Slot = "34")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xDC64D4", Offset = "0xDC64D4", VA = "0xDC64D4")]
		private void DoGetComponent()
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xDC65BC", Offset = "0xDC65BC", VA = "0xDC65BC")]
		public GetComponentInChildren()
		{
		}
	}
	[Token(Token = "0x200023B")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0xA88444", Offset = "0xA88444")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA88444", Offset = "0xA88444")]
	public class GetComponentOwner : FsmStateAction
	{
		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[RequiredField]
		public FsmObject componentToUse;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0xA8E020", Offset = "0xA8E020")]
		public FsmGameObject storeGameObject;

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xDC65C4", Offset = "0xDC65C4", VA = "0xDC65C4", Slot = "28")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xDC65F8", Offset = "0xDC65F8", VA = "0xDC65F8", Slot = "32")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xDC6620", Offset = "0xDC6620", VA = "0xDC6620")]
		public void DoGetComponentOwner()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xDC671C", Offset = "0xDC671C", VA = "0xDC671C")]
		public GetComponentOwner()
		{
		}
	}
}
namespace DigitalRuby.LightningBolt
{
	[Token(Token = "0x200023C")]
	public enum LightningBoltAnimationMode
	{
		[Token(Token = "0x400095E")]
		None,
		[Token(Token = "0x400095F")]
		Random,
		[Token(Token = "0x4000960")]
		Loop,
		[Token(Token = "0x4000961")]
		PingPong
	}
	[Token(Token = "0x200023D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA88494", Offset = "0xA88494")]
	public class LightningBoltScript : MonoBehaviour
	{
		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8E034", Offset = "0xA8E034")]
		public GameObject StartObject;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8E06C", Offset = "0xA8E06C")]
		public Vector3 StartPosition;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8E0A4", Offset = "0xA8E0A4")]
		public GameObject EndObject;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8E0DC", Offset = "0xA8E0DC")]
		public Vector3 EndPosition;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8E114", Offset = "0xA8E114")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8E114", Offset = "0xA8E114")]
		public int Generations;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8E168", Offset = "0xA8E168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8E168", Offset = "0xA8E168")]
		public float Duration;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float timer;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8E1C0", Offset = "0xA8E1C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8E1C0", Offset = "0xA8E1C0")]
		public float ChaosFactor;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8E214", Offset = "0xA8E214")]
		public bool ManualMode;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8E24C", Offset = "0xA8E24C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8E24C", Offset = "0xA8E24C")]
		public int Rows;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA8E2A4", Offset = "0xA8E2A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8E2A4", Offset = "0xA8E2A4")]
		public int Columns;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA8E2FC", Offset = "0xA8E2FC")]
		public LightningBoltAnimationMode AnimationMode;

		[NonSerialized]
		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public System.Random RandomGenerator;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<KeyValuePair<Vector3, Vector3>> segments;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int startIndex;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector2 size;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2[] offsets;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int animationOffsetIndex;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int animationPingPongDirection;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool orthographic;

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xDC11F0", Offset = "0xDC11F0", VA = "0xDC11F0")]
		private void GetPerpendicularVector(ref Vector3 directionNormalized, out Vector3 side)
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xDC139C", Offset = "0xDC139C", VA = "0xDC139C")]
		private void GenerateLightningBolt(Vector3 start, Vector3 end, int generation, int totalGenerations, float offsetAmount)
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xDC1798", Offset = "0xDC1798", VA = "0xDC1798")]
		public void RandomVector(ref Vector3 start, ref Vector3 end, float offsetAmount, out Vector3 result)
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xDC1A04", Offset = "0xDC1A04", VA = "0xDC1A04")]
		private void SelectOffsetFromAnimationMode()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xDC1B60", Offset = "0xDC1B60", VA = "0xDC1B60")]
		private void UpdateLineRenderer()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0xDC1CE4", Offset = "0xDC1CE4", VA = "0xDC1CE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xDC1F40", Offset = "0xDC1F40", VA = "0xDC1F40")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xDC204C", Offset = "0xDC204C", VA = "0xDC204C")]
		public void Trigger()
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xDC1DD4", Offset = "0xDC1DD4", VA = "0xDC1DD4")]
		public void UpdateFromMaterialChange()
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xDC2298", Offset = "0xDC2298", VA = "0xDC2298")]
		public LightningBoltScript()
		{
		}
	}
}
namespace EpicToonFX
{
	[Token(Token = "0x200023E")]
	public class ETFXButtonScript : MonoBehaviour
	{
		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Button;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text MyButtonText;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string projectileParticleName;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ETFXFireProjectile effectScript;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ETFXProjectileScript projectileScript;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float buttonsX;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float buttonsY;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float buttonsSizeX;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float buttonsSizeY;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float buttonsDistance;

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xDC32E4", Offset = "0xDC32E4", VA = "0xDC32E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xDC3494", Offset = "0xDC3494", VA = "0xDC3494")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xDC33D0", Offset = "0xDC33D0", VA = "0xDC33D0")]
		public void getProjectileNames()
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xDC34C0", Offset = "0xDC34C0", VA = "0xDC34C0")]
		public bool overButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xDC35CC", Offset = "0xDC35CC", VA = "0xDC35CC")]
		public ETFXButtonScript()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class ETFXFireProjectile : MonoBehaviour
	{
		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public GameObject[] projectiles;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA8E354", Offset = "0xA8E354")]
		public Transform spawnPosition;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int currentProjectile;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float speed;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ETFXButtonScript selectedProjectileButton;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RaycastHit hit;

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xDC35D4", Offset = "0xDC35D4", VA = "0xDC35D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xDC364C", Offset = "0xDC364C", VA = "0xDC364C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xDC3A90", Offset = "0xDC3A90", VA = "0xDC3A90")]
		public void nextEffect()
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xDC3AD0", Offset = "0xDC3AD0", VA = "0xDC3AD0")]
		public void previousEffect()
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xDC3B10", Offset = "0xDC3B10", VA = "0xDC3B10")]
		public void AdjustSpeed(float newSpeed)
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xDC3B18", Offset = "0xDC3B18", VA = "0xDC3B18")]
		public ETFXFireProjectile()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class ETFXLoopScript : MonoBehaviour
	{
		[Token(Token = "0x2000301")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA88A8C", Offset = "0xA88A8C")]
		private sealed class <EffectLoop>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ETFXLoopScript <>4__this;

			[Token(Token = "0x4000D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <effectPlayer>5__2;

			[Token(Token = "0x17000181")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001180")]
				[Address(RVA = "0xDC416C", Offset = "0xDC416C", VA = "0xDC416C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000182")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001182")]
				[Address(RVA = "0xDC41D4", Offset = "0xDC41D4", VA = "0xDC41D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600117D")]
			[Address(RVA = "0xDC3E98", Offset = "0xDC3E98", VA = "0xDC3E98")]
			[DebuggerHidden]
			public <EffectLoop>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600117E")]
			[Address(RVA = "0xDC3EDC", Offset = "0xDC3EDC", VA = "0xDC3EDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600117F")]
			[Address(RVA = "0xDC3EE0", Offset = "0xDC3EE0", VA = "0xDC3EE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001181")]
			[Address(RVA = "0xDC4174", Offset = "0xDC4174", VA = "0xDC4174", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject chosenEffect;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float loopTimeLimit;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA8E39C", Offset = "0xA8E39C")]
		public bool spawnWithoutLight;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool spawnWithoutSound;

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xDC3DC4", Offset = "0xDC3DC4", VA = "0xDC3DC4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xDC3DC8", Offset = "0xDC3DC8", VA = "0xDC3DC8")]
		public void PlayEffect()
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xDC3E1C", Offset = "0xDC3E1C", VA = "0xDC3E1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA90DC0", Offset = "0xA90DC0")]
		private IEnumerator EffectLoop()
		{
			return null;
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xDC3EC4", Offset = "0xDC3EC4", VA = "0xDC3EC4")]
		public ETFXLoopScript()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class ETFXMouseOrbit : MonoBehaviour
	{
		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float xSpeed;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ySpeed;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float yMinLimit;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float yMaxLimit;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float distanceMin;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float distanceMax;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float smoothTime;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float rotationYAxis;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float rotationXAxis;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float velocityX;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float velocityY;

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xDC41DC", Offset = "0xDC41DC", VA = "0xDC41DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xDC42B8", Offset = "0xDC42B8", VA = "0xDC42B8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xDC46B8", Offset = "0xDC46B8", VA = "0xDC46B8")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xDC4768", Offset = "0xDC4768", VA = "0xDC4768")]
		public ETFXMouseOrbit()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class ETFXLightFade : MonoBehaviour
	{
		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA8E3D4", Offset = "0xA8E3D4")]
		public float life;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool killAfterLife;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light li;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float initIntensity;

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xDC3B28", Offset = "0xDC3B28", VA = "0xDC3B28")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xDC3C48", Offset = "0xDC3C48", VA = "0xDC3C48")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xDC3DA8", Offset = "0xDC3DA8", VA = "0xDC3DA8")]
		public ETFXLightFade()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class ETFXPitchRandomizer : MonoBehaviour
	{
		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float randomPercent;

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xDC4784", Offset = "0xDC4784", VA = "0xDC4784")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0xDC483C", Offset = "0xDC483C", VA = "0xDC483C")]
		public ETFXPitchRandomizer()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class ETFXRotation : MonoBehaviour
	{
		[Token(Token = "0x2000302")]
		public enum spaceEnum
		{
			[Token(Token = "0x4000D4C")]
			Local,
			[Token(Token = "0x4000D4D")]
			World
		}

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA8E40C", Offset = "0xA8E40C")]
		public Vector3 rotateVector;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public spaceEnum rotateSpace;

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xDC484C", Offset = "0xDC484C", VA = "0xDC484C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xDC4850", Offset = "0xDC4850", VA = "0xDC4850")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xDC49A4", Offset = "0xDC49A4", VA = "0xDC49A4")]
		public ETFXRotation()
		{
		}
	}
}
