using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Animancer;
using BoingKit;
using DG.Tweening;
using FlowCanvas;
using FlowCanvas.Nodes;
using FullSerializer;
using FullSerializer.Internal;
using FullSerializer.Internal.Converters;
using FullSerializer.Internal.DirectConverters;
using Fusion;
using Fusion.Sockets;
using Fusion.StatsInternal;
using HurricaneVR.Framework.Components;
using HurricaneVR.Framework.ControllerInput;
using HurricaneVR.Framework.Core;
using HurricaneVR.Framework.Core.Grabbers;
using HurricaneVR.Framework.Core.HandPoser;
using HurricaneVR.Framework.Core.HandPoser.Data;
using HurricaneVR.Framework.Core.Player;
using HurricaneVR.Framework.Core.Sockets;
using HurricaneVR.Framework.Core.Stabbing;
using HurricaneVR.Framework.Core.UI;
using HurricaneVR.Framework.Core.Utils;
using HurricaneVR.Framework.Shared;
using HurricaneVR.Framework.Weapons.Guns;
using Il2CppDummyDll;
using JetBrains.Annotations;
using MazeTheory;
using MazeTheory.Analytics;
using MazeTheory.Audio;
using MazeTheory.Characters.IK;
using MazeTheory.Combat;
using MazeTheory.Coroutines;
using MazeTheory.DebugTools;
using MazeTheory.DesignTools.Player;
using MazeTheory.DeveloperTools;
using MazeTheory.Dialogue;
using MazeTheory.EnvironmentObjects;
using MazeTheory.Gameplay;
using MazeTheory.IK;
using MazeTheory.Interaction;
using MazeTheory.Interaction.Collectables;
using MazeTheory.Interaction.Haptics;
using MazeTheory.Interaction.Highlights;
using MazeTheory.Interaction.Objects;
using MazeTheory.Interaction.Player;
using MazeTheory.Interaction.UI;
using MazeTheory.Interaction.VRGestures;
using MazeTheory.Journal;
using MazeTheory.Localisation;
using MazeTheory.MenuSystem;
using MazeTheory.NPC;
using MazeTheory.Pausing;
using MazeTheory.Peaky.MiniGames;
using MazeTheory.PlatformFeatures;
using MazeTheory.PlayerController;
using MazeTheory.PlayerInput;
using MazeTheory.SaveLoad;
using MazeTheory.SavingAndProgression;
using MazeTheory.SceneStreaming;
using MazeTheory.Scripting.Audio;
using MazeTheory.Scripting.Combat;
using MazeTheory.Scripting.Navigation;
using MazeTheory.TechArt;
using MazeTheory.Toolbox;
using MazeTheory.Tutorials;
using MazeTheory.UI;
using MazeTheory.VFX;
using MazeTheory.VisualScripting;
using NaughtyAttributes;
using NodeCanvas.Framework;
using Oculus.Platform;
using Oculus.Platform.Models;
using PSH;
using PSH.Avatar;
using PSH.Emoji;
using PSH.Journal;
using PSH.Networking;
using PSH.Networking.Audio;
using PSH.Networking.Combat;
using PSH.Networking.HurricaneVR;
using PSH.PlayerProfile;
using PSH.Voice;
using ParadoxNotion;
using ParadoxNotion.Services;
using Photon.Voice.Fusion;
using Photon.Voice.Unity;
using RootMotion.FinalIK;
using TMPro;
using Technie.ScenePalette;
using Unity.Collections;
using Unity.Jobs;
using Unity.Mathematics;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.ResourceManagement.ResourceProviders;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class RapidFireBulletScript : MonoBehaviour
{
	[Token(Token = "0x2000003")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6662C", Offset = "0xE6662C")]
	private sealed class <Fade>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RapidFireBulletScript <>4__this;

		[Token(Token = "0x4000008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject[] <>7__wrap1;

		[Token(Token = "0x4000009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000009")]
			[Address(RVA = "0x32C662C", Offset = "0x32C662C", VA = "0x32C662C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600000B")]
			[Address(RVA = "0x32C6674", Offset = "0x32C6674", VA = "0x32C6674", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000006")]
		[Address(RVA = "0x32C6420", Offset = "0x32C6420", VA = "0x32C6420")]
		[DebuggerHidden]
		public <Fade>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000007")]
		[Address(RVA = "0x32C644C", Offset = "0x32C644C", VA = "0x32C644C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000008")]
		[Address(RVA = "0x32C6450", Offset = "0x32C6450", VA = "0x32C6450", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600000A")]
		[Address(RVA = "0x32C6634", Offset = "0x32C6634", VA = "0x32C6634", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject _parentGameObject;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] _childGameObject;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _timeBetweenShots;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _disableTime;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x1090F60", Offset = "0x1090F60", VA = "0x1090F60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x1090EE8", Offset = "0x1090EE8", VA = "0x1090EE8")]
	public void Play()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x10910C8", Offset = "0x10910C8", VA = "0x10910C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE89D78", Offset = "0xE89D78")]
	private IEnumerator Fade()
	{
		return null;
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x1091140", Offset = "0x1091140", VA = "0x1091140")]
	private void dissapear()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x10911CC", Offset = "0x10911CC", VA = "0x10911CC")]
	public RapidFireBulletScript()
	{
	}
}
[Token(Token = "0x2000004")]
public class AdditionalContentFlagCheck : MonoBehaviour
{
	[Token(Token = "0x2000005")]
	private enum Flags
	{
		[Token(Token = "0x400000C")]
		APRIL_ADDITIONAL_CONTENT,
		[Token(Token = "0x400000D")]
		MAY_ADDITIONAL_CONTENT,
		[Token(Token = "0x400000E")]
		JUNE_ADDITIONAL_CONTENT,
		[Token(Token = "0x400000F")]
		JULY_ADDITIONAL_CONTENT,
		[Token(Token = "0x4000010")]
		AUGUST_ADDITIONAL_CONTENT,
		[Token(Token = "0x4000011")]
		SEPTEMBER_ADDITIONAL_CONTENT
	}

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Flags flagToCheck;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x13BCC30", Offset = "0x13BCC30", VA = "0x13BCC30")]
	private void Start()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x13BCC84", Offset = "0x13BCC84", VA = "0x13BCC84")]
	public AdditionalContentFlagCheck()
	{
	}
}
[Token(Token = "0x2000006")]
public class ShootingGalleryLever : MonoBehaviour
{
	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent triggerEvent;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent resetEvent;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HVRGrabbable _grabbable;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<Collider> _colliders;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool triggered;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x32DC86C", Offset = "0x32DC86C", VA = "0x32DC86C")]
	public void Trigger()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x32DC950", Offset = "0x32DC950", VA = "0x32DC950")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x32DC9F8", Offset = "0x32DC9F8", VA = "0x32DC9F8")]
	public ShootingGalleryLever()
	{
	}
}
[Token(Token = "0x2000007")]
public class AnimationComponentActivator : MonoBehaviour
{
	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation anim;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationClip clip;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x13BF270", Offset = "0x13BF270", VA = "0x13BF270")]
	private void Update()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x13BF438", Offset = "0x13BF438", VA = "0x13BF438")]
	public AnimationComponentActivator()
	{
	}
}
[Token(Token = "0x2000008")]
public class MT_AnimationSequence : MonoBehaviour
{
	[Token(Token = "0x2000009")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6663C", Offset = "0xE6663C")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4000023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool hasFinished;

		[Token(Token = "0x6000019")]
		[Address(RVA = "0x103595C", Offset = "0x103595C", VA = "0x103595C")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x600001A")]
		[Address(RVA = "0x1035964", Offset = "0x1035964", VA = "0x1035964")]
		internal bool <AnimationLoop>g__HasFinished|0()
		{
			return default(bool);
		}

		[Token(Token = "0x600001B")]
		[Address(RVA = "0x103596C", Offset = "0x103596C", VA = "0x103596C")]
		internal void <AnimationLoop>g__OnComplete|1()
		{
		}
	}

	[Token(Token = "0x200000A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6664C", Offset = "0xE6664C")]
	private sealed class <AnimationLoop>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_AnimationSequence <>4__this;

		[Token(Token = "0x4000027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <stopped>5__2;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600001F")]
			[Address(RVA = "0x1035BB4", Offset = "0x1035BB4", VA = "0x1035BB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000021")]
			[Address(RVA = "0x1035BFC", Offset = "0x1035BFC", VA = "0x1035BFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600001C")]
		[Address(RVA = "0x1035978", Offset = "0x1035978", VA = "0x1035978")]
		[DebuggerHidden]
		public <AnimationLoop>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600001D")]
		[Address(RVA = "0x10359A4", Offset = "0x10359A4", VA = "0x10359A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600001E")]
		[Address(RVA = "0x10359A8", Offset = "0x10359A8", VA = "0x10359A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000020")]
		[Address(RVA = "0x1035BBC", Offset = "0x1035BBC", VA = "0x1035BBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NPCAnimationController _animationController;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE7688C", Offset = "0xE7688C")]
	[SerializeField]
	private bool runOnStart;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool loopSequence;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float blendDuration;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE768E4", Offset = "0xE768E4")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE768E4", Offset = "0xE768E4")]
	private AnimationClip defaultStartingAnimation;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AnimationClip[] animations;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UnityEvent onSequenceCompleted;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _currentIndex;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _runningSequence;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine _animationCoroutine;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1123A84", Offset = "0x1123A84", VA = "0x1123A84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x1123B30", Offset = "0x1123B30", VA = "0x1123B30")]
	[PublicAPI]
	public void LoopAnimations()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x1123BA8", Offset = "0x1123BA8", VA = "0x1123BA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE89E38", Offset = "0xE89E38")]
	private IEnumerator AnimationLoop()
	{
		return null;
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x1123C20", Offset = "0x1123C20", VA = "0x1123C20")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x1123C34", Offset = "0x1123C34", VA = "0x1123C34")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x1123C48", Offset = "0x1123C48", VA = "0x1123C48")]
	public MT_AnimationSequence()
	{
	}
}
[Token(Token = "0x200000B")]
public class MT_DeathAnimationBank : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200000C")]
	public class DeathBank
	{
		[Token(Token = "0x400002D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string deathID;

		[Token(Token = "0x400002E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent deathEvent;

		[Token(Token = "0x400002F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DirectionBank[] directionBanks;

		[Token(Token = "0x6000026")]
		[Address(RVA = "0x10363B8", Offset = "0x10363B8", VA = "0x10363B8")]
		public DeathBank()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200000D")]
	public class DirectionBank
	{
		[Token(Token = "0x4000030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Direction directionID;

		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationClip[] animations;

		[Token(Token = "0x6000027")]
		[Address(RVA = "0x10363C0", Offset = "0x10363C0", VA = "0x10363C0")]
		public DirectionBank()
		{
		}
	}

	[Token(Token = "0x200000E")]
	public enum Direction
	{
		[Token(Token = "0x4000033")]
		none,
		[Token(Token = "0x4000034")]
		left,
		[Token(Token = "0x4000035")]
		right,
		[Token(Token = "0x4000036")]
		forward,
		[Token(Token = "0x4000037")]
		backwards
	}

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private DeathBank[] deathBank;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Dictionary<string, DeathBank> bankDictionary;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationClip[] defaultAnimationClips;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LayerMask collisionMask;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[MazeTheory.Toolbox.ReadOnly]
	private float collisionRadius;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x112EB44", Offset = "0x112EB44", VA = "0x112EB44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x112EBEC", Offset = "0x112EBEC", VA = "0x112EBEC")]
	public AnimationClip GetDeathAnimation(string id, Direction dir, MT_NPCGameplay npc)
	{
		return null;
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x112EDF0", Offset = "0x112EDF0", VA = "0x112EDF0")]
	public bool CanPerformAnimationInDirectionWithDistance(Transform origin, Direction dir, float distance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x112EF6C", Offset = "0x112EF6C", VA = "0x112EF6C")]
	public MT_DeathAnimationBank()
	{
	}
}
[Token(Token = "0x200000F")]
public class MT_FacialAnimation : MonoBehaviour
{
	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HybridAnimancerComponent _animancer;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationClip idleAnimationClip;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private NPCAnimationController controller;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x15BEF88", Offset = "0x15BEF88", VA = "0x15BEF88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x15BEFDC", Offset = "0x15BEFDC", VA = "0x15BEFDC")]
	private void Initialise()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x15BF0D0", Offset = "0x15BF0D0", VA = "0x15BF0D0")]
	private void PlayNeutralFacialClip(AnimationClip clip)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x15BF0EC", Offset = "0x15BF0EC", VA = "0x15BF0EC")]
	public void PlayFacialClip(AnimationClip clip, Action endAction)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x15BF108", Offset = "0x15BF108", VA = "0x15BF108")]
	public MT_FacialAnimation()
	{
	}
}
[Token(Token = "0x2000010")]
public class MT_LockCharacterMovement : StateMachineBehaviour
{
	[Token(Token = "0x600002D")]
	[Address(RVA = "0x125F6F4", Offset = "0x125F6F4", VA = "0x125F6F4", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x125F750", Offset = "0x125F750", VA = "0x125F750")]
	public MT_LockCharacterMovement()
	{
	}
}
[Token(Token = "0x2000011")]
public class MT_PauseMovementForAnimationDuration : StateMachineBehaviour
{
	[Token(Token = "0x600002F")]
	[Address(RVA = "0x13237DC", Offset = "0x13237DC", VA = "0x13237DC", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x1323838", Offset = "0x1323838", VA = "0x1323838", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x1323894", Offset = "0x1323894", VA = "0x1323894")]
	public MT_PauseMovementForAnimationDuration()
	{
	}
}
[Token(Token = "0x2000012")]
public class MT_SetAnimBoolAtEndOfNode : StateMachineBehaviour
{
	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _boolID;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool state;

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x12A9270", Offset = "0x12A9270", VA = "0x12A9270", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x12A9298", Offset = "0x12A9298", VA = "0x12A9298")]
	public MT_SetAnimBoolAtEndOfNode()
	{
	}
}
[Token(Token = "0x2000013")]
public class MT_StopPoseSwitch : StateMachineBehaviour
{
	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float transitionDuration;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool poseFlipped;

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x12B132C", Offset = "0x12B132C", VA = "0x12B132C", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x12B1388", Offset = "0x12B1388", VA = "0x12B1388", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x12B1490", Offset = "0x12B1490", VA = "0x12B1490")]
	public MT_StopPoseSwitch()
	{
	}
}
[Token(Token = "0x2000014")]
public class MT_UnlockCharacterMovement : StateMachineBehaviour
{
	[Token(Token = "0x6000037")]
	[Address(RVA = "0x113C5C4", Offset = "0x113C5C4", VA = "0x113C5C4", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x113C620", Offset = "0x113C620", VA = "0x113C620")]
	public MT_UnlockCharacterMovement()
	{
	}
}
[Token(Token = "0x2000015")]
public sealed class MT_AudioDataHandler : IGameModule
{
	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FootstepsAudioDic _footstepsAudioDic;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ZA_PropMaterialDictionary _propAudioDic;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static ZA_GenericAudio _genericAudio;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static ZA_CombatAudio _combatAudio;

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x1124EB4", Offset = "0x1124EB4", VA = "0x1124EB4", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x1125020", Offset = "0x1125020", VA = "0x1125020", Slot = "5")]
	public void Terminate()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1125024", Offset = "0x1125024", VA = "0x1125024")]
	[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE89EE8", Offset = "0xE89EE8")]
	public static AudioClip FindMaterialClip(FloorMat floorMaterial, bool footA, int stepCount, bool isHeavy)
	{
		return null;
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x112541C", Offset = "0x112541C", VA = "0x112541C")]
	public static AudioClip FindPropMaterialClip(PropMatParent mat, int subArrayIndex)
	{
		return null;
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x11255E8", Offset = "0x11255E8", VA = "0x11255E8")]
	public static AudioClip FindGenericClip(GenericAction action)
	{
		return null;
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x1125788", Offset = "0x1125788", VA = "0x1125788")]
	public static AudioClip FindCombatClip(CombatAction combatAction)
	{
		return null;
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x1125928", Offset = "0x1125928", VA = "0x1125928")]
	public MT_AudioDataHandler()
	{
	}
}
[Serializable]
[Token(Token = "0x2000016")]
public class MT_BarkBankLibrary : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000017")]
	public class SoundBank
	{
		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string bankID;

		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VoiceBank[] voiceBanks;

		[Token(Token = "0x6000045")]
		[Address(RVA = "0x1035CD8", Offset = "0x1035CD8", VA = "0x1035CD8")]
		public SoundBank()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000018")]
	public class VoiceBank
	{
		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip[] bank;

		[Token(Token = "0x6000046")]
		[Address(RVA = "0x1035CE0", Offset = "0x1035CE0", VA = "0x1035CE0")]
		public VoiceBank()
		{
		}
	}

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SoundBank[] soundBanks;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Dictionary<string, VoiceBank[]> bankDictionary;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource _mouthAudioSource;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int voiceIndex;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool randomiseVoiceIndex;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int maxVoiceIndex;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private MT_NPCGameplay npcGameplay;

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x11263C0", Offset = "0x11263C0", VA = "0x11263C0")]
	[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE89F60", Offset = "0xE89F60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x1126474", Offset = "0x1126474", VA = "0x1126474")]
	public bool AttemptToPlayBarkForID(string id, bool stopCurrentBark = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x1126718", Offset = "0x1126718", VA = "0x1126718")]
	public AudioClip GetClipFromStringForVoiceID(string id, int voiceID = -1)
	{
		return null;
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x112683C", Offset = "0x112683C", VA = "0x112683C")]
	public void SetAudioSource(AudioSource aS)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x1126844", Offset = "0x1126844", VA = "0x1126844")]
	public MT_BarkBankLibrary()
	{
	}
}
[Token(Token = "0x2000019")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE6665C", Offset = "0xE6665C")]
public class ZA_AudioCollision : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200001A")]
	public class SplitMesh
	{
		[Token(Token = "0x400005F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ZA_PropMat splitPropMat;

		[Token(Token = "0x4000060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Collider[] splitColliders;

		[Token(Token = "0x600005B")]
		[Address(RVA = "0x2168CEC", Offset = "0x2168CEC", VA = "0x2168CEC")]
		public SplitMesh()
		{
		}
	}

	[Token(Token = "0x200001B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE666BC", Offset = "0xE666BC")]
	private sealed class <SetCollisionOn>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZA_AudioCollision <>4__this;

		[Token(Token = "0x17000006")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600005F")]
			[Address(RVA = "0x2168C9C", Offset = "0x2168C9C", VA = "0x2168C9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000007")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000061")]
			[Address(RVA = "0x2168CE4", Offset = "0x2168CE4", VA = "0x2168CE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600005C")]
		[Address(RVA = "0x2168B90", Offset = "0x2168B90", VA = "0x2168B90")]
		[DebuggerHidden]
		public <SetCollisionOn>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x600005D")]
		[Address(RVA = "0x2168BBC", Offset = "0x2168BBC", VA = "0x2168BBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600005E")]
		[Address(RVA = "0x2168BC0", Offset = "0x2168BC0", VA = "0x2168BC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000060")]
		[Address(RVA = "0x2168CA4", Offset = "0x2168CA4", VA = "0x2168CA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource collisionSource;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Rigidbody rb;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE76A70", Offset = "0xE76A70")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE76A70", Offset = "0xE76A70")]
	[SerializeField]
	private bool checkVelocity;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ZA_PropMat _prop;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE76ADC", Offset = "0xE76ADC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE76ADC", Offset = "0xE76ADC")]
	[SerializeField]
	private bool CheckCollisions;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE76B38", Offset = "0xE76B38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE76B38", Offset = "0xE76B38")]
	[SerializeField]
	private float lowPitchRange;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float highPitchRange;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE76BA4", Offset = "0xE76BA4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE76BA4", Offset = "0xE76BA4")]
	[SerializeField]
	private float timeBetweenUnheldCollisions;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _subPropArrayIndex;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _spawned;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool _isHeld;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool _isColliding;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _objectWeight;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _receiverWeight;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _colTag;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _splashDelay;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _splashPaused;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE76C00", Offset = "0xE76C00")]
	[SerializeField]
	private MP_AudioCollision _mpAudioEvent;

	[Token(Token = "0x17000005")]
	private float TimeBetweenCollisions
	{
		[Token(Token = "0x6000047")]
		[Address(RVA = "0x135DFD4", Offset = "0x135DFD4", VA = "0x135DFD4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x135DFF0", Offset = "0x135DFF0", VA = "0x135DFF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x135E208", Offset = "0x135E208", VA = "0x135E208")]
	private void Start()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x135E2B8", Offset = "0x135E2B8", VA = "0x135E2B8")]
	private void ResetValues()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x135E368", Offset = "0x135E368", VA = "0x135E368")]
	public void GrabToggle()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x135E378", Offset = "0x135E378", VA = "0x135E378")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x135E810", Offset = "0x135E810", VA = "0x135E810")]
	private void OnCollisionEnter(UnityEngine.Collision col)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x135E814", Offset = "0x135E814", VA = "0x135E814")]
	public void Collision(UnityEngine.Collision col)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x135EA50", Offset = "0x135EA50", VA = "0x135EA50")]
	private void CollisionWithOtherProp(UnityEngine.Collision col)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x135F0E0", Offset = "0x135F0E0", VA = "0x135F0E0")]
	public void MPPlayCollisionOtherPropAudio(PropMatParent objectMat, float colVol)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x135EE88", Offset = "0x135EE88", VA = "0x135EE88")]
	public void PlayCollisionOtherPropAudio(PropMatParent objectMat, float colVol)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x135EC58", Offset = "0x135EC58", VA = "0x135EC58")]
	public void BasicCollision()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x135F2D8", Offset = "0x135F2D8", VA = "0x135F2D8")]
	public void MPBasicCollision()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x135F0E4", Offset = "0x135F0E4", VA = "0x135F0E4")]
	private void InternalBasicCollision()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x135E464", Offset = "0x135E464", VA = "0x135E464")]
	private void PlayWaterSplash(Collider waterCol)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x135F3E4", Offset = "0x135F3E4", VA = "0x135F3E4")]
	private void UndelaySplash()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x135ECFC", Offset = "0x135ECFC", VA = "0x135ECFC")]
	private float ImpactModifier(UnityEngine.Collision col)
	{
		return default(float);
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x135F2DC", Offset = "0x135F2DC", VA = "0x135F2DC")]
	private float ImpactModifier()
	{
		return default(float);
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x135E9D8", Offset = "0x135E9D8", VA = "0x135E9D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE89FD8", Offset = "0xE89FD8")]
	private IEnumerator SetCollisionOn()
	{
		return null;
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x135F3EC", Offset = "0x135F3EC", VA = "0x135F3EC")]
	public ZA_AudioCollision()
	{
	}
}
[Token(Token = "0x200001C")]
public class ZA_AudioCollisionSplitMesh : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200001D")]
	public class SplitCollider
	{
		[Token(Token = "0x4000066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ZA_AudioCollision _collision;

		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject _object;

		[Token(Token = "0x6000066")]
		[Address(RVA = "0x2168CF4", Offset = "0x2168CF4", VA = "0x2168CF4")]
		public SplitCollider()
		{
		}
	}

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SplitCollider[] _splitCollider;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<GameObject, ZA_AudioCollision> _splitColDic;

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x135F414", Offset = "0x135F414", VA = "0x135F414")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x135F5D4", Offset = "0x135F5D4", VA = "0x135F5D4")]
	private void OnCollisionEnter(UnityEngine.Collision col)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x135F6E0", Offset = "0x135F6E0", VA = "0x135F6E0")]
	public ZA_AudioCollisionSplitMesh()
	{
	}
}
[Token(Token = "0x200001E")]
public enum PropMatParent
{
	[Token(Token = "0x4000069")]
	ceramic,
	[Token(Token = "0x400006A")]
	cloth,
	[Token(Token = "0x400006B")]
	glass,
	[Token(Token = "0x400006C")]
	metal,
	[Token(Token = "0x400006D")]
	paper,
	[Token(Token = "0x400006E")]
	wood,
	[Token(Token = "0x400006F")]
	generic,
	[Token(Token = "0x4000070")]
	brick,
	[Token(Token = "0x4000071")]
	bespoke,
	[Token(Token = "0x4000072")]
	unset,
	[Token(Token = "0x4000073")]
	no_hit,
	[Token(Token = "0x4000074")]
	water
}
[Token(Token = "0x200001F")]
public enum PropSubMaterial
{
	[Token(Token = "0x4000076")]
	ceramicBowl,
	[Token(Token = "0x4000077")]
	ceramicPlate,
	[Token(Token = "0x4000078")]
	clothHeavy,
	[Token(Token = "0x4000079")]
	clothLight,
	[Token(Token = "0x400007A")]
	glassBottle,
	[Token(Token = "0x400007B")]
	glassCup,
	[Token(Token = "0x400007C")]
	glassPlate,
	[Token(Token = "0x400007D")]
	glassPlateMuted,
	[Token(Token = "0x400007E")]
	glassJar,
	[Token(Token = "0x400007F")]
	metalCanister,
	[Token(Token = "0x4000080")]
	metalLargeHeavy,
	[Token(Token = "0x4000081")]
	metalLargeLight,
	[Token(Token = "0x4000082")]
	metalMediumHeavy,
	[Token(Token = "0x4000083")]
	metalMediumLight,
	[Token(Token = "0x4000084")]
	metalLong,
	[Token(Token = "0x4000085")]
	metalSmallContainer,
	[Token(Token = "0x4000086")]
	metalSmallHeavy,
	[Token(Token = "0x4000087")]
	metalSmallLight,
	[Token(Token = "0x4000088")]
	paperLight,
	[Token(Token = "0x4000089")]
	paperMedium,
	[Token(Token = "0x400008A")]
	woodHard,
	[Token(Token = "0x400008B")]
	woodHardHollow,
	[Token(Token = "0x400008C")]
	woodHardHollowRattle,
	[Token(Token = "0x400008D")]
	woodHardMuted,
	[Token(Token = "0x400008E")]
	woodHardRattle,
	[Token(Token = "0x400008F")]
	woodLightHighHollow,
	[Token(Token = "0x4000090")]
	woodLightLowHollow,
	[Token(Token = "0x4000091")]
	woodLightThin,
	[Token(Token = "0x4000092")]
	none,
	[Token(Token = "0x4000093")]
	unset,
	[Token(Token = "0x4000094")]
	no_hit
}
[Token(Token = "0x2000020")]
public class ZA_PropMat : MonoBehaviour
{
	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PropMatParent propMat;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int subArrayIndex;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE76C5C", Offset = "0xE76C5C")]
	public float weight;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE76C74", Offset = "0xE76C74")]
	public float absorption;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] bespokeClips;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string colTag;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] colAvoidanceTags;

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x180CA34", Offset = "0x180CA34", VA = "0x180CA34")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x180CCE4", Offset = "0x180CCE4", VA = "0x180CCE4")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x180CF6C", Offset = "0x180CF6C", VA = "0x180CF6C")]
	public ZA_PropMat()
	{
	}
}
[Token(Token = "0x2000021")]
public class ZA_Ambient3DControl : MonoBehaviour
{
	[Token(Token = "0x2000022")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE666CC", Offset = "0xE666CC")]
	private sealed class <FadeOut>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZA_Ambient3DControl <>4__this;

		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <percent>5__2;

		[Token(Token = "0x17000008")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000077")]
			[Address(RVA = "0x21685F0", Offset = "0x21685F0", VA = "0x21685F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000009")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000079")]
			[Address(RVA = "0x2168638", Offset = "0x2168638", VA = "0x2168638", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000074")]
		[Address(RVA = "0x21684B4", Offset = "0x21684B4", VA = "0x21684B4")]
		[DebuggerHidden]
		public <FadeOut>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000075")]
		[Address(RVA = "0x21684E0", Offset = "0x21684E0", VA = "0x21684E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000076")]
		[Address(RVA = "0x21684E4", Offset = "0x21684E4", VA = "0x21684E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000078")]
		[Address(RVA = "0x21685F8", Offset = "0x21685F8", VA = "0x21685F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000023")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE666DC", Offset = "0xE666DC")]
	private sealed class <FadeIn>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZA_Ambient3DControl <>4__this;

		[Token(Token = "0x40000AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <percent>5__2;

		[Token(Token = "0x1700000A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600007D")]
			[Address(RVA = "0x2168464", Offset = "0x2168464", VA = "0x2168464", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600007F")]
			[Address(RVA = "0x21684AC", Offset = "0x21684AC", VA = "0x21684AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600007A")]
		[Address(RVA = "0x2168320", Offset = "0x2168320", VA = "0x2168320")]
		[DebuggerHidden]
		public <FadeIn>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600007B")]
		[Address(RVA = "0x216834C", Offset = "0x216834C", VA = "0x216834C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600007C")]
		[Address(RVA = "0x2168350", Offset = "0x2168350", VA = "0x2168350", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600007E")]
		[Address(RVA = "0x216846C", Offset = "0x216846C", VA = "0x216846C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioMixer mixer;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource source;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private BoxCollider[] entryPoints;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BoxCollider boundary;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private BoxCollider exitPoint;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private BoxCollider[] reenablePoints;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE76CEC", Offset = "0xE76CEC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE76CEC", Offset = "0xE76CEC")]
	[SerializeField]
	private float fadeInTime;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float fadeOutTime;

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x135C834", Offset = "0x135C834", VA = "0x135C834")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x135CA48", Offset = "0x135CA48", VA = "0x135CA48")]
	public void Triggered(int role)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x135CA80", Offset = "0x135CA80", VA = "0x135CA80")]
	private void BoundaryEntered()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x135CED4", Offset = "0x135CED4", VA = "0x135CED4")]
	private void BoundaryExit()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x135CB68", Offset = "0x135CB68", VA = "0x135CB68")]
	private void EntryPointEnter()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x135CC8C", Offset = "0x135CC8C", VA = "0x135CC8C")]
	private void ExitPointReached()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x135CDB0", Offset = "0x135CDB0", VA = "0x135CDB0")]
	private void ReenablePointReached()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x135CFF8", Offset = "0x135CFF8", VA = "0x135CFF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8A088", Offset = "0xE8A088")]
	private IEnumerator FadeOut()
	{
		return null;
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x135D070", Offset = "0x135D070", VA = "0x135D070")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8A0E8", Offset = "0xE8A0E8")]
	private IEnumerator FadeIn()
	{
		return null;
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x135D0E8", Offset = "0x135D0E8", VA = "0x135D0E8")]
	public ZA_Ambient3DControl()
	{
	}
}
[Token(Token = "0x2000024")]
public class ZA_Ambient3DTrigger : MonoBehaviour
{
	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE76D58", Offset = "0xE76D58")]
	[SerializeField]
	private int role;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ZA_Ambient3DControl ambientControl;

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x135D100", Offset = "0x135D100", VA = "0x135D100")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x135D1DC", Offset = "0x135D1DC", VA = "0x135D1DC")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x135D2C4", Offset = "0x135D2C4", VA = "0x135D2C4")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x135D3C8", Offset = "0x135D3C8", VA = "0x135D3C8")]
	public ZA_Ambient3DTrigger()
	{
	}
}
[Token(Token = "0x2000025")]
public class ZA_AmbientFunction : MonoBehaviour
{
	[Token(Token = "0x2000026")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE666EC", Offset = "0xE666EC")]
	private sealed class <PlayMoveCR>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZA_AmbientFunction <>4__this;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x40000B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__2;

		[Token(Token = "0x1700000C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600008A")]
			[Address(RVA = "0x21688B0", Offset = "0x21688B0", VA = "0x21688B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600008C")]
			[Address(RVA = "0x21688F8", Offset = "0x21688F8", VA = "0x21688F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000087")]
		[Address(RVA = "0x2168640", Offset = "0x2168640", VA = "0x2168640")]
		[DebuggerHidden]
		public <PlayMoveCR>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000088")]
		[Address(RVA = "0x216866C", Offset = "0x216866C", VA = "0x216866C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000089")]
		[Address(RVA = "0x2168670", Offset = "0x2168670", VA = "0x2168670", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600008B")]
		[Address(RVA = "0x21688B8", Offset = "0x21688B8", VA = "0x21688B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource source;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform startPoint;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform endPoint;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _direction;

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x135D3D0", Offset = "0x135D3D0", VA = "0x135D3D0")]
	public void PlayMoving(AudioClip clip)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x135D4C8", Offset = "0x135D4C8", VA = "0x135D4C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8A1E8", Offset = "0xE8A1E8")]
	private IEnumerator PlayMoveCR(float duration)
	{
		return null;
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x135D550", Offset = "0x135D550", VA = "0x135D550")]
	public ZA_AmbientFunction()
	{
	}
}
[Token(Token = "0x2000027")]
public class ZA_AmbientManager : MonoBehaviour
{
	[Token(Token = "0x2000028")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE666FC", Offset = "0xE666FC")]
	private sealed class <StaticCount>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clipLength;

		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ZA_AmbientManager <>4__this;

		[Token(Token = "0x1700000E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000095")]
			[Address(RVA = "0x2168B38", Offset = "0x2168B38", VA = "0x2168B38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000097")]
			[Address(RVA = "0x2168B80", Offset = "0x2168B80", VA = "0x2168B80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000092")]
		[Address(RVA = "0x2168A44", Offset = "0x2168A44", VA = "0x2168A44")]
		[DebuggerHidden]
		public <StaticCount>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000093")]
		[Address(RVA = "0x2168A70", Offset = "0x2168A70", VA = "0x2168A70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000094")]
		[Address(RVA = "0x2168A74", Offset = "0x2168A74", VA = "0x2168A74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000096")]
		[Address(RVA = "0x2168B40", Offset = "0x2168B40", VA = "0x2168B40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000029")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6670C", Offset = "0xE6670C")]
	private sealed class <MovingCount>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clipLength;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ZA_AmbientManager <>4__this;

		[Token(Token = "0x17000010")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600009B")]
			[Address(RVA = "0x21689F4", Offset = "0x21689F4", VA = "0x21689F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000011")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600009D")]
			[Address(RVA = "0x2168A3C", Offset = "0x2168A3C", VA = "0x2168A3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000098")]
		[Address(RVA = "0x2168900", Offset = "0x2168900", VA = "0x2168900")]
		[DebuggerHidden]
		public <MovingCount>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000099")]
		[Address(RVA = "0x216892C", Offset = "0x216892C", VA = "0x216892C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600009A")]
		[Address(RVA = "0x2168930", Offset = "0x2168930", VA = "0x2168930", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600009C")]
		[Address(RVA = "0x21689FC", Offset = "0x21689FC", VA = "0x21689FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE76DE4", Offset = "0xE76DE4")]
	[SerializeField]
	private AudioClip[] ambientStaticClips;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource[] ambientStaticSources;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float staticFrequency;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE76E50", Offset = "0xE76E50")]
	[SerializeField]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE76E50", Offset = "0xE76E50")]
	private AudioClip[] ambientMovingClips;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ZA_AmbientFunction[] ambientMovingFunction;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float movingFrequency;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE76ECC", Offset = "0xE76ECC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE76ECC", Offset = "0xE76ECC")]
	[SerializeField]
	private AudioSource[] ambientLoopBeds;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float staticTime;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float movingTime;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE76F28", Offset = "0xE76F28")]
	[SerializeField]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE76F28", Offset = "0xE76F28")]
	private float frequency;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool staticIsPlaying;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool movingIsPlaying;

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x135D558", Offset = "0x135D558", VA = "0x135D558")]
	[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8A298", Offset = "0xE8A298")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x135D638", Offset = "0x135D638", VA = "0x135D638")]
	private void Update()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x135D84C", Offset = "0x135D84C", VA = "0x135D84C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8A310", Offset = "0xE8A310")]
	private IEnumerator StaticCount(float clipLength)
	{
		return null;
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x135D8D4", Offset = "0x135D8D4", VA = "0x135D8D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8A370", Offset = "0xE8A370")]
	private IEnumerator MovingCount(float clipLength)
	{
		return null;
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x135D95C", Offset = "0x135D95C", VA = "0x135D95C")]
	public ZA_AmbientManager()
	{
	}
}
[Token(Token = "0x200002A")]
public sealed class ZA_AmbisonicManager : MonoBehaviour
{
	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource[] _allAmbisonics;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _noAmbiosonics;

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x135D964", Offset = "0x135D964", VA = "0x135D964")]
	private void Awake()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x135DA34", Offset = "0x135DA34", VA = "0x135DA34")]
	[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8A470", Offset = "0xE8A470")]
	public void SetAmbisonic(AudioSource activeAmbisonic)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x135DB6C", Offset = "0x135DB6C", VA = "0x135DB6C")]
	[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8A4E8", Offset = "0xE8A4E8")]
	public void StopAmbisonic()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x135DBDC", Offset = "0x135DBDC", VA = "0x135DBDC")]
	public ZA_AmbisonicManager()
	{
	}
}
[Token(Token = "0x200002B")]
public sealed class ZA_AmbisonicTrigger : MonoBehaviour
{
	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ZA_AmbisonicManager _ambisonicManager;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource _ambisonicSource;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _hasAmbiosonicSource;

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x135DBE4", Offset = "0x135DBE4", VA = "0x135DBE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x135DC5C", Offset = "0x135DC5C", VA = "0x135DC5C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x135DCBC", Offset = "0x135DCBC", VA = "0x135DCBC")]
	public ZA_AmbisonicTrigger()
	{
	}
}
[Token(Token = "0x200002C")]
public class ZA_AnimEvent : MonoBehaviour
{
	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource foleySource;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource mouthSource;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string eventName;

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x135DCC4", Offset = "0x135DCC4", VA = "0x135DCC4")]
	public void SetAudioSources(AudioSource foley, AudioSource mouth)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x135DCF8", Offset = "0x135DCF8", VA = "0x135DCF8")]
	public void Step()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x135DCFC", Offset = "0x135DCFC", VA = "0x135DCFC")]
	public void Step(float interval)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x135DD00", Offset = "0x135DD00", VA = "0x135DD00")]
	public void Run()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x135DD04", Offset = "0x135DD04", VA = "0x135DD04")]
	public void SideStep()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x135DD08", Offset = "0x135DD08", VA = "0x135DD08")]
	public void SideStep(float interval)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x135DD0C", Offset = "0x135DD0C", VA = "0x135DD0C")]
	public void CreepStep(float interval)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x135DD10", Offset = "0x135DD10", VA = "0x135DD10")]
	public void CrouchStep(float interval)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x135DD14", Offset = "0x135DD14", VA = "0x135DD14")]
	public void CrouchCreepStep(float interval)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x135DD18", Offset = "0x135DD18", VA = "0x135DD18")]
	public void StopStep()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x135DD1C", Offset = "0x135DD1C", VA = "0x135DD1C")]
	public void StopStep(float volume)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x135DD20", Offset = "0x135DD20", VA = "0x135DD20")]
	public void HeavyStep()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x135DD24", Offset = "0x135DD24", VA = "0x135DD24")]
	public void HeavyStep(float interval)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x135DD28", Offset = "0x135DD28", VA = "0x135DD28")]
	public void TeleportSFX()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x135DD2C", Offset = "0x135DD2C", VA = "0x135DD2C")]
	public void TurnSFX()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x135DD30", Offset = "0x135DD30", VA = "0x135DD30")]
	public ZA_AnimEvent()
	{
	}
}
[Token(Token = "0x200002D")]
public class ZA_AudioBankLibrary : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200002E")]
	public class SoundBank
	{
		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string bankID;

		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip[] bank;

		[Token(Token = "0x60000B9")]
		[Address(RVA = "0x2168B88", Offset = "0x2168B88", VA = "0x2168B88")]
		public SoundBank()
		{
		}
	}

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SoundBank[] soundBanks;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, AudioClip[]> bankDictionary;

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x135DD38", Offset = "0x135DD38", VA = "0x135DD38")]
	[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8A560", Offset = "0xE8A560")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x135DE10", Offset = "0x135DE10", VA = "0x135DE10")]
	public AudioClip GetClipFromString(string name)
	{
		return null;
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x135DF2C", Offset = "0x135DF2C", VA = "0x135DF2C")]
	public ZA_AudioBankLibrary()
	{
	}
}
[Token(Token = "0x200002F")]
public class ZA_AudioClass : MonoBehaviour
{
	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE76FE4", Offset = "0xE76FE4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE76FE4", Offset = "0xE76FE4")]
	public float masterVolumePercent;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE77038", Offset = "0xE77038")]
	public float sfxVolumePercent;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE77050", Offset = "0xE77050")]
	public float musicVolumePercent;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE77068", Offset = "0xE77068")]
	public float dialogueVolumePercent;

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x135DFC0", Offset = "0x135DFC0", VA = "0x135DFC0")]
	public ZA_AudioClass()
	{
	}
}
[Token(Token = "0x2000030")]
public class ZA_AudioEvent : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000031")]
	public class ClipBank
	{
		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string eventName;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ignoreFirstTime;

		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip[] clipBank;

		[Token(Token = "0x60000DA")]
		[Address(RVA = "0x21695F0", Offset = "0x21695F0", VA = "0x21695F0")]
		public ClipBank()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000032")]
	public class SourceBank
	{
		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string eventName;

		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource sourceBank;

		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x2169600", Offset = "0x2169600", VA = "0x2169600")]
		public SourceBank()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000033")]
	public class SequenceBank
	{
		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string eventName;

		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int loopAt;

		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip[] sequenceBank;

		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x21695F8", Offset = "0x21695F8", VA = "0x21695F8")]
		public SequenceBank()
		{
		}
	}

	[Token(Token = "0x2000034")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6671C", Offset = "0xE6671C")]
	private sealed class <MoveFromTo>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform source;

		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 a;

		[Token(Token = "0x40000FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 b;

		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <t>5__2;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E0")]
			[Address(RVA = "0x21695A0", Offset = "0x21695A0", VA = "0x21695A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E2")]
			[Address(RVA = "0x21695E8", Offset = "0x21695E8", VA = "0x21695E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x216947C", Offset = "0x216947C", VA = "0x216947C")]
		[DebuggerHidden]
		public <MoveFromTo>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x21694A8", Offset = "0x21694A8", VA = "0x21694A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x21694AC", Offset = "0x21694AC", VA = "0x21694AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x21695A8", Offset = "0x21695A8", VA = "0x21695A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000035")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6672C", Offset = "0xE6672C")]
	private sealed class <FadeInEnum>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeSpeed;

		[Token(Token = "0x4000102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ZA_AudioEvent <>4__this;

		[Token(Token = "0x4000103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float currentVol;

		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float fadeTo;

		[Token(Token = "0x4000105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <percent>5__2;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E6")]
			[Address(RVA = "0x2168DF0", Offset = "0x2168DF0", VA = "0x2168DF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E8")]
			[Address(RVA = "0x2168E38", Offset = "0x2168E38", VA = "0x2168E38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x2168CFC", Offset = "0x2168CFC", VA = "0x2168CFC")]
		[DebuggerHidden]
		public <FadeInEnum>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x2168D28", Offset = "0x2168D28", VA = "0x2168D28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x2168D2C", Offset = "0x2168D2C", VA = "0x2168D2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x2168DF8", Offset = "0x2168DF8", VA = "0x2168DF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000036")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6673C", Offset = "0xE6673C")]
	private sealed class <FadeInEnum>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource source;

		[Token(Token = "0x4000109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <percent>5__2;

		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <currentVol>5__3;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000EC")]
			[Address(RVA = "0x2168F5C", Offset = "0x2168F5C", VA = "0x2168F5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000EE")]
			[Address(RVA = "0x2168FA4", Offset = "0x2168FA4", VA = "0x2168FA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000E9")]
		[Address(RVA = "0x2168E40", Offset = "0x2168E40", VA = "0x2168E40")]
		[DebuggerHidden]
		public <FadeInEnum>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x2168E6C", Offset = "0x2168E6C", VA = "0x2168E6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x2168E70", Offset = "0x2168E70", VA = "0x2168E70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x2168F64", Offset = "0x2168F64", VA = "0x2168F64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000037")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6674C", Offset = "0xE6674C")]
	private sealed class <FadeOutEnum>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400010D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400010E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource source;

		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <percent>5__2;

		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <currentVol>5__3;

		[Token(Token = "0x17000018")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000F2")]
			[Address(RVA = "0x21690E0", Offset = "0x21690E0", VA = "0x21690E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000F4")]
			[Address(RVA = "0x2169128", Offset = "0x2169128", VA = "0x2169128", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x2168FAC", Offset = "0x2168FAC", VA = "0x2168FAC")]
		[DebuggerHidden]
		public <FadeOutEnum>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x2168FD8", Offset = "0x2168FD8", VA = "0x2168FD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x2168FDC", Offset = "0x2168FDC", VA = "0x2168FDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x21690E8", Offset = "0x21690E8", VA = "0x21690E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000038")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6675C", Offset = "0xE6675C")]
	private sealed class <FadeOutEnum>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource source;

		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeSpeed;

		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <percent>5__2;

		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <currentVol>5__3;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000F8")]
			[Address(RVA = "0x2169264", Offset = "0x2169264", VA = "0x2169264", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000FA")]
			[Address(RVA = "0x21692AC", Offset = "0x21692AC", VA = "0x21692AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x2169130", Offset = "0x2169130", VA = "0x2169130")]
		[DebuggerHidden]
		public <FadeOutEnum>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x60000F6")]
		[Address(RVA = "0x216915C", Offset = "0x216915C", VA = "0x216915C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x2169160", Offset = "0x2169160", VA = "0x2169160", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000F9")]
		[Address(RVA = "0x216926C", Offset = "0x216926C", VA = "0x216926C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000039")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6676C", Offset = "0xE6676C")]
	private sealed class <FadeOutEnum>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeSpeed;

		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ZA_AudioEvent <>4__this;

		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float currentVol;

		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float fadeTo;

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <percent>5__2;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000FE")]
			[Address(RVA = "0x216942C", Offset = "0x216942C", VA = "0x216942C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000100")]
			[Address(RVA = "0x2169474", Offset = "0x2169474", VA = "0x2169474", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000FB")]
		[Address(RVA = "0x21692B4", Offset = "0x21692B4", VA = "0x21692B4")]
		[DebuggerHidden]
		public <FadeOutEnum>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x60000FC")]
		[Address(RVA = "0x21692E0", Offset = "0x21692E0", VA = "0x21692E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000FD")]
		[Address(RVA = "0x21692E4", Offset = "0x21692E4", VA = "0x21692E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000FF")]
		[Address(RVA = "0x2169434", Offset = "0x2169434", VA = "0x2169434", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77080", Offset = "0xE77080")]
	public AudioSource mainAudioSource;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource loopingSource;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float distanceFromPlayer;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE770B8", Offset = "0xE770B8")]
	[SerializeField]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE770B8", Offset = "0xE770B8")]
	private GameObject startPos;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject endPos;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Vector3 start;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private Vector3 end;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE77144", Offset = "0xE77144")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77144", Offset = "0xE77144")]
	private float _fadeSpeed;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE77190", Offset = "0xE77190")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77190", Offset = "0xE77190")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE77190", Offset = "0xE77190")]
	public int chance;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool playAsOneShot;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE771F8", Offset = "0xE771F8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE771F8", Offset = "0xE771F8")]
	public ClipBank[] clipBanks;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SourceBank[] sourceBanks;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SequenceBank[] sequenceBanks;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly Dictionary<string, (bool, AudioClip[])> _clipDictionary;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly Dictionary<string, AudioSource> _sourceDictionary;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Dictionary<string, SequenceBank> _sequenceDictionary;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77244", Offset = "0xE77244")]
	[SerializeField]
	private MP_AudioEvent _mpAudioEvent;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77290", Offset = "0xE77290")]
	[SerializeField]
	private bool isTesting;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private KeyCode keyForTest;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private string testString;

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x135F774", Offset = "0x135F774", VA = "0x135F774")]
	[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8A5D8", Offset = "0xE8A5D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x135FA28", Offset = "0x135FA28", VA = "0x135FA28")]
	public AudioSource GetSourceFromEventName(string eventName)
	{
		return null;
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x135FAC4", Offset = "0x135FAC4", VA = "0x135FAC4")]
	public AudioClip GetClipFromEventName(string eventName)
	{
		return null;
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x135FC08", Offset = "0x135FC08", VA = "0x135FC08")]
	public AudioClip GetSequenceClip(string eventName)
	{
		return null;
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x135FD14", Offset = "0x135FD14", VA = "0x135FD14")]
	public void PlayAnimSFX(string eventName)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x135FD18", Offset = "0x135FD18", VA = "0x135FD18")]
	public void PlayBank(string eventName)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x136009C", Offset = "0x136009C", VA = "0x136009C")]
	public void PlayBankMP(string eventName)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x135FDD4", Offset = "0x135FDD4", VA = "0x135FDD4")]
	private void InternalPlayBank(string eventName)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x13600A0", Offset = "0x13600A0", VA = "0x13600A0")]
	public void PlaySequence(string eventName)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x1360290", Offset = "0x1360290", VA = "0x1360290")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE8A650", Offset = "0xE8A650")]
	public void GenericGrab()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1360374", Offset = "0x1360374", VA = "0x1360374")]
	public void MPGenericGrab()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x1360338", Offset = "0x1360338", VA = "0x1360338")]
	private void InternalGenericGrab()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x1360378", Offset = "0x1360378", VA = "0x1360378")]
	public void GenericRelease()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x1360420", Offset = "0x1360420", VA = "0x1360420")]
	private void InternalGenericRelease()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x136045C", Offset = "0x136045C", VA = "0x136045C")]
	public void MPGenericRelease()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x1360460", Offset = "0x1360460", VA = "0x1360460")]
	public void StartLoop(string eventName)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x1360668", Offset = "0x1360668", VA = "0x1360668")]
	public void StartLoop(string eventName, float fadeSpeed)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x1360800", Offset = "0x1360800", VA = "0x1360800")]
	public void EndLoop()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x1360964", Offset = "0x1360964", VA = "0x1360964")]
	public void EndLoop(float fadeSpeed)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x1360AE0", Offset = "0x1360AE0", VA = "0x1360AE0")]
	public void MovingAudio()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x1360BBC", Offset = "0x1360BBC", VA = "0x1360BBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8A668", Offset = "0xE8A668")]
	private IEnumerator MoveFromTo(Transform source, Vector3 a, Vector3 b, float speed)
	{
		return null;
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x1360C80", Offset = "0x1360C80", VA = "0x1360C80")]
	public void SetFadeSpeed(float setFadeSpeedTo)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x1360C88", Offset = "0x1360C88", VA = "0x1360C88")]
	public void FadeIn(float fadeTo)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x1360D18", Offset = "0x1360D18", VA = "0x1360D18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8A6C8", Offset = "0xE8A6C8")]
	private IEnumerator FadeInEnum(float currentVol, float fadeSpeed, float fadeTo)
	{
		return null;
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x1360DB4", Offset = "0x1360DB4", VA = "0x1360DB4")]
	public void FadeOut(float fadeTo)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x13605E0", Offset = "0x13605E0", VA = "0x13605E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8A728", Offset = "0xE8A728")]
	private static IEnumerator FadeInEnum(AudioSource source, float speed)
	{
		return null;
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x13608EC", Offset = "0x13608EC", VA = "0x13608EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8A788", Offset = "0xE8A788")]
	private static IEnumerator FadeOutEnum(AudioSource source)
	{
		return null;
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x1360A58", Offset = "0x1360A58", VA = "0x1360A58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8A7E8", Offset = "0xE8A7E8")]
	private static IEnumerator FadeOutEnum(AudioSource source, float fadeSpeed)
	{
		return null;
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x1360E0C", Offset = "0x1360E0C", VA = "0x1360E0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8A848", Offset = "0xE8A848")]
	private IEnumerator FadeOutEnum(float currentVol, float fadeSpeed, float fadeTo)
	{
		return null;
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x1360EA8", Offset = "0x1360EA8", VA = "0x1360EA8")]
	private void PlayBankEvent(string eventName)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x1361138", Offset = "0x1361138", VA = "0x1361138")]
	public ZA_AudioEvent()
	{
	}
}
[Token(Token = "0x200003A")]
public class ZA_AudioInitialiser : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200003B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6677C", Offset = "0xE6677C")]
	private sealed class <>c
	{
		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__1_0;

		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<bool> <>9__1_1;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<bool> <>9__1_2;

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<bool> <>9__1_3;

		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<bool> <>9__1_4;

		[Token(Token = "0x6000105")]
		[Address(RVA = "0x216966C", Offset = "0x216966C", VA = "0x216966C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000106")]
		[Address(RVA = "0x2169674", Offset = "0x2169674", VA = "0x2169674")]
		internal bool <AudioInitializeRoutine>b__1_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6000107")]
		[Address(RVA = "0x21696F8", Offset = "0x21696F8", VA = "0x21696F8")]
		internal bool <AudioInitializeRoutine>b__1_1()
		{
			return default(bool);
		}

		[Token(Token = "0x6000108")]
		[Address(RVA = "0x2169744", Offset = "0x2169744", VA = "0x2169744")]
		internal bool <AudioInitializeRoutine>b__1_2()
		{
			return default(bool);
		}

		[Token(Token = "0x6000109")]
		[Address(RVA = "0x2169790", Offset = "0x2169790", VA = "0x2169790")]
		internal bool <AudioInitializeRoutine>b__1_3()
		{
			return default(bool);
		}

		[Token(Token = "0x600010A")]
		[Address(RVA = "0x21697DC", Offset = "0x21697DC", VA = "0x21697DC")]
		internal bool <AudioInitializeRoutine>b__1_4()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200003C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6678C", Offset = "0xE6678C")]
	private sealed class <AudioInitializeRoutine>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600010E")]
			[Address(RVA = "0x2169E4C", Offset = "0x2169E4C", VA = "0x2169E4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000110")]
			[Address(RVA = "0x2169E94", Offset = "0x2169E94", VA = "0x2169E94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600010B")]
		[Address(RVA = "0x2169828", Offset = "0x2169828", VA = "0x2169828")]
		[DebuggerHidden]
		public <AudioInitializeRoutine>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600010C")]
		[Address(RVA = "0x2169854", Offset = "0x2169854", VA = "0x2169854", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600010D")]
		[Address(RVA = "0x2169858", Offset = "0x2169858", VA = "0x2169858", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600010F")]
		[Address(RVA = "0x2169E54", Offset = "0x2169E54", VA = "0x2169E54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x1361254", Offset = "0x1361254", VA = "0x1361254")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x13612CC", Offset = "0x13612CC", VA = "0x13612CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8AA88", Offset = "0xE8AA88")]
	private IEnumerator AudioInitializeRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x1361328", Offset = "0x1361328", VA = "0x1361328")]
	public ZA_AudioInitialiser()
	{
	}
}
[Token(Token = "0x200003D")]
public class ZA_AudioManager : ZA_AudioClass, IGameModule
{
	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ZA_AudioBankLibrary _audioBank;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip[] exploreClips;

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x1361330", Offset = "0x1361330", VA = "0x1361330")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x136140C", Offset = "0x136140C", VA = "0x136140C", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x1361410", Offset = "0x1361410", VA = "0x1361410", Slot = "5")]
	public void Terminate()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x1361474", Offset = "0x1361474", VA = "0x1361474")]
	private void Start()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x13614D4", Offset = "0x13614D4", VA = "0x13614D4")]
	public void PlaySFX(AudioClip clip, Vector3 pos)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x13615A0", Offset = "0x13615A0", VA = "0x13615A0")]
	public void PlayBank(string soundBank, Vector3 pos)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x13615FC", Offset = "0x13615FC", VA = "0x13615FC")]
	public ZA_AudioManager()
	{
	}
}
[Token(Token = "0x200003E")]
public class ZA_AudioNewScene : MonoBehaviour
{
	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1361610", Offset = "0x1361610", VA = "0x1361610")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x136166C", Offset = "0x136166C", VA = "0x136166C")]
	public ZA_AudioNewScene()
	{
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE6679C", Offset = "0xE6679C")]
public class ZA_AudioOcclusion : MonoBehaviour
{
	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7730C", Offset = "0xE7730C")]
	[SerializeField]
	private AudioSource Audio;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioLowPassFilter LowPass;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77368", Offset = "0xE77368")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE77368", Offset = "0xE77368")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE77368", Offset = "0xE77368")]
	private float SoundOcclusionWidening;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private LayerMask OcclusionLayer;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int _zeroRays;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private int _oneRay;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int _twoRays;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private int _threeRays;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float ListenerDistance;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float lineCastHitCount;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE7742C", Offset = "0xE7742C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7742C", Offset = "0xE7742C")]
	[SerializeField]
	private bool drawRays;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly RaycastHit[] _rayHits;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x1361674", Offset = "0x1361674", VA = "0x1361674")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1361790", Offset = "0x1361790", VA = "0x1361790")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x1361908", Offset = "0x1361908", VA = "0x1361908")]
	private void ObstructBetween(Vector3 source, Vector3 listener)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x1361A18", Offset = "0x1361A18", VA = "0x1361A18")]
	private Vector3 CalculatePoint(Vector3 source, Vector3 listener, float width, bool isPositive)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1361AAC", Offset = "0x1361AAC", VA = "0x1361AAC")]
	private void CastLine(Vector3 Start, Vector3 End)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1361B60", Offset = "0x1361B60", VA = "0x1361B60")]
	private void SetParameter()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x1361C14", Offset = "0x1361C14", VA = "0x1361C14")]
	private float CurveCutOff(float x)
	{
		return default(float);
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x1361C6C", Offset = "0x1361C6C", VA = "0x1361C6C")]
	public ZA_AudioOcclusion()
	{
	}
}
[Token(Token = "0x2000040")]
public class ZA_BigDoorAudio : MonoBehaviour
{
	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Rigidbody _rigidBody;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource _loopingAudioSource;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource _staticAudioSource;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip[] _creakClip;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float rigidbodyPercent;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool cooldown;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float countdown;

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x1361CEC", Offset = "0x1361CEC", VA = "0x1361CEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x1361D38", Offset = "0x1361D38", VA = "0x1361D38")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x1361F8C", Offset = "0x1361F8C", VA = "0x1361F8C")]
	public ZA_BigDoorAudio()
	{
	}
}
[Token(Token = "0x2000041")]
public class ZA_CombatEnvironmentManager : MonoBehaviour
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ZA_CombatEnvironmentManager Instance;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE774C8", Offset = "0xE774C8")]
	private static bool <IsReady>k__BackingField;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Dictionary<Collider, CombatEnv> _combatEnvDic;

	[Token(Token = "0x17000020")]
	public static bool IsReady
	{
		[Token(Token = "0x6000125")]
		[Address(RVA = "0x1361FA4", Offset = "0x1361FA4", VA = "0x1361FA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8AB38", Offset = "0xE8AB38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000126")]
		[Address(RVA = "0x1361FF0", Offset = "0x1361FF0", VA = "0x1361FF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8AB48", Offset = "0xE8AB48")]
		private set
		{
		}
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x1362044", Offset = "0x1362044", VA = "0x1362044")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x13621A0", Offset = "0x13621A0", VA = "0x13621A0")]
	public void InitializeCombatManager()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x13621F0", Offset = "0x13621F0", VA = "0x13621F0")]
	public void Register(Collider col, CombatEnv env)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x136225C", Offset = "0x136225C", VA = "0x136225C")]
	public CombatEnv FindEnv(Collider col)
	{
		return default(CombatEnv);
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x1362300", Offset = "0x1362300", VA = "0x1362300")]
	public void ClearDictionary()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x1362354", Offset = "0x1362354", VA = "0x1362354")]
	public ZA_CombatEnvironmentManager()
	{
	}
}
[Token(Token = "0x2000042")]
public class ZA_CombatEnvironmentTrigger : MonoBehaviour
{
	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Collider _collider;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CombatEnv _environment;

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x13623D8", Offset = "0x13623D8", VA = "0x13623D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x1362434", Offset = "0x1362434", VA = "0x1362434")]
	private void Start()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x13624E4", Offset = "0x13624E4", VA = "0x13624E4")]
	public ZA_CombatEnvironmentTrigger()
	{
	}
}
[Token(Token = "0x2000043")]
public class ZA_CombatSFX : MonoBehaviour
{
	[Token(Token = "0x2000044")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE667FC", Offset = "0xE667FC")]
	private sealed class <FireGunCoolDown>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZA_CombatSFX <>4__this;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600014B")]
			[Address(RVA = "0x2169FF4", Offset = "0x2169FF4", VA = "0x2169FF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600014D")]
			[Address(RVA = "0x216A03C", Offset = "0x216A03C", VA = "0x216A03C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000148")]
		[Address(RVA = "0x2169EA4", Offset = "0x2169EA4", VA = "0x2169EA4")]
		[DebuggerHidden]
		public <FireGunCoolDown>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000149")]
		[Address(RVA = "0x2169ED0", Offset = "0x2169ED0", VA = "0x2169ED0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600014A")]
		[Address(RVA = "0x2169ED4", Offset = "0x2169ED4", VA = "0x2169ED4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600014C")]
		[Address(RVA = "0x2169FFC", Offset = "0x2169FFC", VA = "0x2169FFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000045")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6680C", Offset = "0xE6680C")]
	private sealed class <HitDelayTimer>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ZA_CombatSFX <>4__this;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000151")]
			[Address(RVA = "0x216A158", Offset = "0x216A158", VA = "0x216A158", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000153")]
			[Address(RVA = "0x216A1A0", Offset = "0x216A1A0", VA = "0x216A1A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0x216A044", Offset = "0x216A044", VA = "0x216A044")]
		[DebuggerHidden]
		public <HitDelayTimer>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0x216A070", Offset = "0x216A070", VA = "0x216A070", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000150")]
		[Address(RVA = "0x216A074", Offset = "0x216A074", VA = "0x216A074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000152")]
		[Address(RVA = "0x216A160", Offset = "0x216A160", VA = "0x216A160", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource foleySource;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource weaponSource;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float minValue;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float maxValue;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CombatEnv _currentEnvironment;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool isTesting;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[SerializeField]
	private bool coolDown;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	private bool BeenHit;

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x13624EC", Offset = "0x13624EC", VA = "0x13624EC")]
	public void SetFoleySource(AudioSource foley)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x13624F4", Offset = "0x13624F4", VA = "0x13624F4")]
	public void SetWeaponSource(AudioSource weapon)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x13624FC", Offset = "0x13624FC", VA = "0x13624FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x13629AC", Offset = "0x13629AC", VA = "0x13629AC")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x1362A48", Offset = "0x1362A48", VA = "0x1362A48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x1362A9C", Offset = "0x1362A9C", VA = "0x1362A9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8AB58", Offset = "0xE8AB58")]
	private IEnumerator FireGunCoolDown()
	{
		return null;
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1362B14", Offset = "0x1362B14", VA = "0x1362B14")]
	public void SFX(string eventName)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x1362D00", Offset = "0x1362D00", VA = "0x1362D00")]
	public void SFX(CombatAction combatAction)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x1362DB4", Offset = "0x1362DB4", VA = "0x1362DB4")]
	public void BulletHitEnv()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1362E58", Offset = "0x1362E58", VA = "0x1362E58")]
	public void Fire()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1362F68", Offset = "0x1362F68", VA = "0x1362F68")]
	public void EnemyFire()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1363054", Offset = "0x1363054", VA = "0x1363054")]
	private void FireSystem(float distance)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x136324C", Offset = "0x136324C", VA = "0x136324C")]
	private void FireMid()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x13632D8", Offset = "0x13632D8", VA = "0x13632D8")]
	private void FireFar()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1363098", Offset = "0x1363098", VA = "0x1363098")]
	private void FireBlend(float distance, float midDistance, float farDistance)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1363364", Offset = "0x1363364", VA = "0x1363364")]
	public void Reload()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1363408", Offset = "0x1363408", VA = "0x1363408")]
	public void Handle()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x13634AC", Offset = "0x13634AC", VA = "0x13634AC")]
	public void Punch(HVRCollisionEvents collisionEvents)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1363670", Offset = "0x1363670", VA = "0x1363670")]
	public void PistolWhip(HVRCollisionEvents collisionEvents)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x13637B4", Offset = "0x13637B4", VA = "0x13637B4")]
	public void Slap(HVRCollisionEvents collisionEvents)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x13638F8", Offset = "0x13638F8", VA = "0x13638F8")]
	public void Stab(HVRCollisionEvents collisionEvents)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1363648", Offset = "0x1363648", VA = "0x1363648")]
	private float SetVol(float x)
	{
		return default(float);
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x13635C0", Offset = "0x13635C0", VA = "0x13635C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8ABB8", Offset = "0xE8ABB8")]
	private IEnumerator HitDelayTimer(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1363A3C", Offset = "0x1363A3C", VA = "0x1363A3C")]
	public ZA_CombatSFX()
	{
	}
}
[Token(Token = "0x2000046")]
public class ZA_DoorAudio : MonoBehaviour
{
	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MT_PhysicsRotator _door;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Rigidbody _rb;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource hingeMoveSource;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isMoving;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _needsOiling;

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x1363A50", Offset = "0x1363A50", VA = "0x1363A50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x1363AFC", Offset = "0x1363AFC", VA = "0x1363AFC")]
	public ZA_DoorAudio()
	{
	}
}
[Token(Token = "0x2000047")]
public class ZA_DrawableAudio : MonoBehaviour
{
	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource loopingSource;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ZA_AudioEvent audioEvent;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool drawing;

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1363B04", Offset = "0x1363B04", VA = "0x1363B04")]
	public void PlayLoop()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1363B6C", Offset = "0x1363B6C", VA = "0x1363B6C")]
	public void AlterVolume(float volume)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x1363B88", Offset = "0x1363B88", VA = "0x1363B88")]
	public void StopLoop()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1363BF0", Offset = "0x1363BF0", VA = "0x1363BF0")]
	public ZA_DrawableAudio()
	{
	}
}
[Token(Token = "0x2000048")]
public enum FloorMat
{
	[Token(Token = "0x4000158")]
	wood,
	[Token(Token = "0x4000159")]
	stone,
	[Token(Token = "0x400015A")]
	metal,
	[Token(Token = "0x400015B")]
	tile,
	[Token(Token = "0x400015C")]
	carpet,
	[Token(Token = "0x400015D")]
	wetLayer,
	[Token(Token = "0x400015E")]
	gravel,
	[Token(Token = "0x400015F")]
	unset,
	[Token(Token = "0x4000160")]
	no_hit
}
[Token(Token = "0x2000049")]
public class ZA_FloorMat : MonoBehaviour
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloorMat floorMat;

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1363BF8", Offset = "0x1363BF8", VA = "0x1363BF8")]
	public void Awake()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x1363C70", Offset = "0x1363C70", VA = "0x1363C70")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x1363CD4", Offset = "0x1363CD4", VA = "0x1363CD4")]
	public ZA_FloorMat()
	{
	}
}
[Token(Token = "0x200004A")]
public class ZA_Footsteps : MonoBehaviour
{
	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource _heelLSource;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource _toeLSource;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource _heelRSource;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource _toeRSource;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _footA;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _speed;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float offset;

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x1363CDC", Offset = "0x1363CDC", VA = "0x1363CDC")]
	public void SetAudioSources(AudioSource heelL, AudioSource toeL, AudioSource heelR, AudioSource toeR)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x1363D40", Offset = "0x1363D40", VA = "0x1363D40")]
	private void Awake()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x1363E90", Offset = "0x1363E90", VA = "0x1363E90")]
	public void Step()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x13642F4", Offset = "0x13642F4", VA = "0x13642F4")]
	public void Step(float interval)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x13645F8", Offset = "0x13645F8", VA = "0x13645F8")]
	public void Run()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x13648C8", Offset = "0x13648C8", VA = "0x13648C8")]
	public void SideStep()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x1364BE8", Offset = "0x1364BE8", VA = "0x1364BE8")]
	public void SideStep(float interval)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1364F08", Offset = "0x1364F08", VA = "0x1364F08")]
	public void CreepStep(float interval)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x13651C4", Offset = "0x13651C4", VA = "0x13651C4")]
	public void CrouchStep(float interval)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1365478", Offset = "0x1365478", VA = "0x1365478")]
	public void CrouchCreepStep(float interval)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x13657AC", Offset = "0x13657AC", VA = "0x13657AC")]
	public void StopStep()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x13658EC", Offset = "0x13658EC", VA = "0x13658EC")]
	public void StopStep(float volume)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1365A28", Offset = "0x1365A28", VA = "0x1365A28")]
	public void HeavyStep()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x1365A2C", Offset = "0x1365A2C", VA = "0x1365A2C")]
	public void HeavyStep(float interval)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x1365A30", Offset = "0x1365A30", VA = "0x1365A30")]
	public void TeleportSFX()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x1365A34", Offset = "0x1365A34", VA = "0x1365A34")]
	public void TurnSFX()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x1364164", Offset = "0x1364164", VA = "0x1364164")]
	private bool FootstepHitsFloor(out GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x1365A40", Offset = "0x1365A40", VA = "0x1365A40")]
	public ZA_Footsteps()
	{
	}
}
[Token(Token = "0x200004B")]
public class ZA_GongAudio : MonoBehaviour
{
	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody _rb;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ZA_AudioEvent _audioEvent;

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x1807EB0", Offset = "0x1807EB0", VA = "0x1807EB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x1807F0C", Offset = "0x1807F0C", VA = "0x1807F0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x1807FC0", Offset = "0x1807FC0", VA = "0x1807FC0")]
	private void OnCollisionEnter(UnityEngine.Collision other)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x1808084", Offset = "0x1808084", VA = "0x1808084")]
	public ZA_GongAudio()
	{
	}
}
[Token(Token = "0x200004C")]
public class ZA_GunScript : MonoBehaviour
{
	[Token(Token = "0x200004D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6681C", Offset = "0xE6681C")]
	private sealed class <StartFire>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource source;

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <percent>5__2;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600017C")]
			[Address(RVA = "0x216A2F8", Offset = "0x216A2F8", VA = "0x216A2F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600017E")]
			[Address(RVA = "0x216A340", Offset = "0x216A340", VA = "0x216A340", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0x216A1B0", Offset = "0x216A1B0", VA = "0x216A1B0")]
		[DebuggerHidden]
		public <StartFire>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600017A")]
		[Address(RVA = "0x216A1DC", Offset = "0x216A1DC", VA = "0x216A1DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600017B")]
		[Address(RVA = "0x216A1E0", Offset = "0x216A1E0", VA = "0x216A1E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600017D")]
		[Address(RVA = "0x216A300", Offset = "0x216A300", VA = "0x216A300", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HVRAutomaticGun gunScript;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource fireLoop;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource fireVerbLoop;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource emptyLoop;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource magLoop;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ZA_AudioEvent audioEvent;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private string windUp;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private string windDown;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool isEmpty;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[SerializeField]
	private bool isTriggerPulled;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	[SerializeField]
	private bool isFiring;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	[SerializeField]
	private bool isAmmo;

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x180808C", Offset = "0x180808C", VA = "0x180808C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x1808284", Offset = "0x1808284", VA = "0x1808284")]
	private void CheckEmptyStatus()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x180820C", Offset = "0x180820C", VA = "0x180820C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8ACB8", Offset = "0xE8ACB8")]
	private IEnumerator StartFire(AudioSource source)
	{
		return null;
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x18083B8", Offset = "0x18083B8", VA = "0x18083B8")]
	public void AmmoSocketed()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x180839C", Offset = "0x180839C", VA = "0x180839C")]
	private void PlaySFX(string eventName)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x18083C8", Offset = "0x18083C8", VA = "0x18083C8")]
	public ZA_GunScript()
	{
	}
}
[Token(Token = "0x200004E")]
public class ZA_Metronome : MonoBehaviour
{
	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public double bpm;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private double nextTick;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private double sampleRate;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool ticked;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool isCounting;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ZA_MusicManager musicManager;

	[Token(Token = "0x4000181")]
	private const float SecsInMin = 60f;

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x18083D0", Offset = "0x18083D0", VA = "0x18083D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x1808460", Offset = "0x1808460", VA = "0x1808460")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x18084D8", Offset = "0x18084D8", VA = "0x18084D8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x1808534", Offset = "0x1808534", VA = "0x1808534")]
	public ZA_Metronome()
	{
	}
}
[Token(Token = "0x200004F")]
public class ZA_MixerSetter : MonoBehaviour
{
	[Token(Token = "0x2000050")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6682C", Offset = "0xE6682C")]
	private sealed class <MixerSetting>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZA_MixerSetter <>4__this;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600018A")]
			[Address(RVA = "0x216A590", Offset = "0x216A590", VA = "0x216A590", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600018C")]
			[Address(RVA = "0x216A5D8", Offset = "0x216A5D8", VA = "0x216A5D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000187")]
		[Address(RVA = "0x216A348", Offset = "0x216A348", VA = "0x216A348")]
		[DebuggerHidden]
		public <MixerSetting>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000188")]
		[Address(RVA = "0x216A374", Offset = "0x216A374", VA = "0x216A374", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000189")]
		[Address(RVA = "0x216A378", Offset = "0x216A378", VA = "0x216A378", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0x216A598", Offset = "0x216A598", VA = "0x216A598", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioMixerParent _audioMixerParent;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource _audioSource;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _audioMixerName;

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x1808548", Offset = "0x1808548", VA = "0x1808548")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x1808668", Offset = "0x1808668", VA = "0x1808668")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8AD68", Offset = "0xE8AD68")]
	private IEnumerator MixerSetting()
	{
		return null;
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x18086E0", Offset = "0x18086E0", VA = "0x18086E0")]
	private AudioMixerParent SetMixerParent(string mixerName)
	{
		return default(AudioMixerParent);
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x1808800", Offset = "0x1808800", VA = "0x1808800")]
	public ZA_MixerSetter()
	{
	}
}
[Token(Token = "0x2000051")]
public class ZA_MusicTrigger : MonoBehaviour
{
	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isMenu;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool isCredits;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool _isPause;

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x180B99C", Offset = "0x180B99C", VA = "0x180B99C")]
	private void Start()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x180BA08", Offset = "0x180BA08", VA = "0x180BA08")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x180BC0C", Offset = "0x180BC0C", VA = "0x180BC0C")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x180BD04", Offset = "0x180BD04", VA = "0x180BD04")]
	public void TriggerNarrative(AudioClip narrativeClip)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x180BD60", Offset = "0x180BD60", VA = "0x180BD60")]
	public void PlayRRH()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x180BDC0", Offset = "0x180BDC0", VA = "0x180BDC0")]
	public void SetExplore()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x180BE18", Offset = "0x180BE18", VA = "0x180BE18")]
	public void SetNarrative(AudioClip clip)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x180BE74", Offset = "0x180BE74", VA = "0x180BE74")]
	public void SetLoopingNarrative(AudioClip clip)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x180BED0", Offset = "0x180BED0", VA = "0x180BED0")]
	public void SetThreat()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x180BF28", Offset = "0x180BF28", VA = "0x180BF28")]
	public void SetCombat(int combatBank)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x180BF94", Offset = "0x180BF94", VA = "0x180BF94")]
	public void IncreaseIntensity()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x180BFE8", Offset = "0x180BFE8", VA = "0x180BFE8")]
	public void DecreaseIntensity()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x180C03C", Offset = "0x180C03C", VA = "0x180C03C")]
	public void TriggerDeath()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x180C090", Offset = "0x180C090", VA = "0x180C090")]
	public void TriggerMenu()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x180C0E4", Offset = "0x180C0E4", VA = "0x180C0E4")]
	public void TriggerStinger(AudioClip stingerClip)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x180C140", Offset = "0x180C140", VA = "0x180C140")]
	public ZA_MusicTrigger()
	{
	}
}
[Token(Token = "0x2000052")]
public class ZA_NPCFootstep : MonoBehaviour
{
	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ZA_Footsteps footstep;

	[Token(Token = "0x400018C")]
	private const float StepInterval = 0.8f;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _lastStep;

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x180C148", Offset = "0x180C148", VA = "0x180C148")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x180C264", Offset = "0x180C264", VA = "0x180C264")]
	public ZA_NPCFootstep()
	{
	}
}
[Token(Token = "0x2000053")]
public class ZA_ObjectTriggerScript : MonoBehaviour
{
	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string enterEventName;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string exitEventName;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ZA_AudioEvent audioEvent;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool isExit;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool isEnter;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[SerializeField]
	private bool debug;

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x180C26C", Offset = "0x180C26C", VA = "0x180C26C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x180C358", Offset = "0x180C358", VA = "0x180C358")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x180C3EC", Offset = "0x180C3EC", VA = "0x180C3EC")]
	public ZA_ObjectTriggerScript()
	{
	}
}
[Token(Token = "0x2000054")]
public class ZA_ParticleAudioEmitter : MonoBehaviour
{
	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ZA_AudioEvent ae;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string audioName;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int particleCount;

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x180C3F4", Offset = "0x180C3F4", VA = "0x180C3F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x180C450", Offset = "0x180C450", VA = "0x180C450")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x180C4B0", Offset = "0x180C4B0", VA = "0x180C4B0")]
	public ZA_ParticleAudioEmitter()
	{
	}
}
[Token(Token = "0x2000055")]
public class ZA_PlayParticleSFXAtPoint : MonoBehaviour
{
	[Token(Token = "0x2000056")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6683C", Offset = "0xE6683C")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSource audioSource;

		[Token(Token = "0x60001A9")]
		[Address(RVA = "0x216C42C", Offset = "0x216C42C", VA = "0x216C42C")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x216C434", Offset = "0x216C434", VA = "0x216C434")]
		internal bool <PlayandDestroy>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000057")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6684C", Offset = "0xE6684C")]
	private sealed class <PlayandDestroy>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZA_PlayParticleSFXAtPoint <>4__this;

		[Token(Token = "0x40001A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int i;

		[Token(Token = "0x40001A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <audioObject>5__2;

		[Token(Token = "0x17000029")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001AE")]
			[Address(RVA = "0x216C838", Offset = "0x216C838", VA = "0x216C838", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B0")]
			[Address(RVA = "0x216C880", Offset = "0x216C880", VA = "0x216C880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x216C460", Offset = "0x216C460", VA = "0x216C460")]
		[DebuggerHidden]
		public <PlayandDestroy>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x216C48C", Offset = "0x216C48C", VA = "0x216C48C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x216C490", Offset = "0x216C490", VA = "0x216C490", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x216C840", Offset = "0x216C840", VA = "0x216C840", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem _particleSystem;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip[] _audioClips;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 particleCollisionTransform;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int particleCount;

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x180C4B8", Offset = "0x180C4B8", VA = "0x180C4B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x180C560", Offset = "0x180C560", VA = "0x180C560")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x180C5CC", Offset = "0x180C5CC", VA = "0x180C5CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8AE18", Offset = "0xE8AE18")]
	private IEnumerator PlayandDestroy(int i)
	{
		return null;
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x180C654", Offset = "0x180C654", VA = "0x180C654")]
	public ZA_PlayParticleSFXAtPoint()
	{
	}
}
[Token(Token = "0x2000058")]
public class ZA_PlayerFootstep : MonoBehaviour
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ZA_Footsteps footsteps;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HVRPlayerController playerController;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float verticalMovement;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float horizontalMovement;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool isCrouching;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool isSprinting;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[SerializeField]
	private bool isCreeping;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	[SerializeField]
	private bool isMoving;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float deadzone;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float baseSpeed;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float crouchSpeed;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float sprintSpeed;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float footstepTimer;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float creepSpeed;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float heelToeBase;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float heelToeModifier;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool canMove;

	[Token(Token = "0x1700002B")]
	private float IntervalSpeed
	{
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x180C65C", Offset = "0x180C65C", VA = "0x180C65C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700002C")]
	private float HeelToeSpeed
	{
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x180C698", Offset = "0x180C698", VA = "0x180C698")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x180C6A4", Offset = "0x180C6A4", VA = "0x180C6A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x180C6C0", Offset = "0x180C6C0", VA = "0x180C6C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x180C894", Offset = "0x180C894", VA = "0x180C894")]
	private void CheckSpeed(float direction)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x180C8D8", Offset = "0x180C8D8", VA = "0x180C8D8")]
	private void SteppingDirection(int direction)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x180CA10", Offset = "0x180CA10", VA = "0x180CA10")]
	public void TeleportStep()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x180C9E4", Offset = "0x180C9E4", VA = "0x180C9E4")]
	private void StopStep(float volume)
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x180CA2C", Offset = "0x180CA2C", VA = "0x180CA2C")]
	public ZA_PlayerFootstep()
	{
	}
}
[Token(Token = "0x2000059")]
public class ZA_RadioControl : MonoBehaviour
{
	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE778A8", Offset = "0xE778A8")]
	[SerializeField]
	private AudioSource _radioStatic;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource _radioSong1;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource _radioNews;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE77914", Offset = "0xE77914")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77914", Offset = "0xE77914")]
	[SerializeField]
	private float _song1Frequency;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _song1FrequencyMin;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _song1FrequencyMax;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _song1SSH;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _song1SSL;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE77970", Offset = "0xE77970")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77970", Offset = "0xE77970")]
	[SerializeField]
	private float _newsFrequency;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _newsFrequencyMin;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _newsFrequencyMax;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _newsSSH;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _newsSSL;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float staticVolume;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE779CC", Offset = "0xE779CC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE779CC", Offset = "0xE779CC")]
	[SerializeField]
	private HVRRotationTracker _powerRotation;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private HVRRotationLimiter _frequencyRotation;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private MeshRenderer radioBody;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private HVRPhysicsDoor lid;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE77A58", Offset = "0xE77A58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77A58", Offset = "0xE77A58")]
	[SerializeField]
	private bool valveIn;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	[SerializeField]
	private bool capIn;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	[SerializeField]
	private bool radioOn;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	[SerializeField]
	private bool functional;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private float _frequency;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE77AF4", Offset = "0xE77AF4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77AF4", Offset = "0xE77AF4")]
	private bool _debug;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private ZA_AudioEvent audioEvent;

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x180D4F8", Offset = "0x180D4F8", VA = "0x180D4F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x180D590", Offset = "0x180D590", VA = "0x180D590")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x180D8F4", Offset = "0x180D8F4", VA = "0x180D8F4")]
	public bool IsRadioOn()
	{
		return default(bool);
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x180D818", Offset = "0x180D818", VA = "0x180D818")]
	private float TuneIn(float currentFrequency, float playFrequency, float playFrequencyMin, float playFrequencyMax, float sweetSpotHigh, float sweetSpotLow)
	{
		return default(float);
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x180D8FC", Offset = "0x180D8FC", VA = "0x180D8FC")]
	private static float StaticFade(float relativePercentage)
	{
		return default(float);
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x180D9A8", Offset = "0x180D9A8", VA = "0x180D9A8")]
	public void CapIn()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x180D9B4", Offset = "0x180D9B4", VA = "0x180D9B4")]
	public void CapOut()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x180D9BC", Offset = "0x180D9BC", VA = "0x180D9BC")]
	public void ValveIn()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x180D9C8", Offset = "0x180D9C8", VA = "0x180D9C8")]
	public void ValveOut()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x180D9D0", Offset = "0x180D9D0", VA = "0x180D9D0")]
	public void RadioOnOff()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x180D9E0", Offset = "0x180D9E0", VA = "0x180D9E0")]
	public void RadioOff()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x180D8A8", Offset = "0x180D8A8", VA = "0x180D8A8")]
	private void RadioPlay()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x180D7CC", Offset = "0x180D7CC", VA = "0x180D7CC")]
	private void RadioStop()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x180D9E8", Offset = "0x180D9E8", VA = "0x180D9E8")]
	public ZA_RadioControl()
	{
	}
}
[Token(Token = "0x200005A")]
public class ZA_Randomiser : MonoBehaviour
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource source;

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x180D9F8", Offset = "0x180D9F8", VA = "0x180D9F8")]
	public void Randomise(float volStart)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x180DA44", Offset = "0x180DA44", VA = "0x180DA44")]
	public ZA_Randomiser()
	{
	}
}
[Token(Token = "0x200005B")]
public class ZA_ReverbManager : MonoBehaviour
{
	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioReverbZone[] _allReverbZones;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _reverbZonesSetup;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _allZonesCount;

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x180DA4C", Offset = "0x180DA4C", VA = "0x180DA4C")]
	[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8AEC8", Offset = "0xE8AEC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x180DB1C", Offset = "0x180DB1C", VA = "0x180DB1C")]
	[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8AF40", Offset = "0xE8AF40")]
	public void DisableReverbsBut(AudioReverbZone[] activeReverbZone)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x180DC24", Offset = "0x180DC24", VA = "0x180DC24")]
	public ZA_ReverbManager()
	{
	}
}
[Token(Token = "0x200005C")]
public class ZA_ReverbPortal : MonoBehaviour
{
	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ZA_ReverbManager _reverbManager;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioReverbZone[] _activeReverbZones;

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x180DC2C", Offset = "0x180DC2C", VA = "0x180DC2C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x180DC74", Offset = "0x180DC74", VA = "0x180DC74")]
	public ZA_ReverbPortal()
	{
	}
}
[Token(Token = "0x200005D")]
public class ZA_ShakeRattleRoll : MonoBehaviour
{
	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Rigidbody rb;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _ready;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool isHeld;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool isSet;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ZA_AudioEvent audioEvent;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool requirementNeeded;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float primeSpeed;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool isWhenReach;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[SerializeField]
	private bool isARoller;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float min;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float max;

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x180DC7C", Offset = "0x180DC7C", VA = "0x180DC7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x180DDBC", Offset = "0x180DDBC", VA = "0x180DDBC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x180E054", Offset = "0x180E054", VA = "0x180E054")]
	public void IsGrabbed()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x180E064", Offset = "0x180E064", VA = "0x180E064")]
	public void SetToggle()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x180DE60", Offset = "0x180DE60", VA = "0x180DE60")]
	private void CheckRequirement()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x180E074", Offset = "0x180E074", VA = "0x180E074")]
	private void Rattle()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x180DF30", Offset = "0x180DF30", VA = "0x180DF30")]
	private void Roll()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x180E168", Offset = "0x180E168", VA = "0x180E168")]
	private float Volume(float velocity)
	{
		return default(float);
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x180E180", Offset = "0x180E180", VA = "0x180E180")]
	public ZA_ShakeRattleRoll()
	{
	}
}
[Token(Token = "0x200005E")]
public class ZA_SilasNegotiation : MonoBehaviour
{
	[Token(Token = "0x200005F")]
	private enum SilasState
	{
		[Token(Token = "0x40001F2")]
		IDLE,
		[Token(Token = "0x40001F3")]
		LABOURED,
		[Token(Token = "0x40001F4")]
		ENTERROOM,
		[Token(Token = "0x40001F5")]
		GIVINGINFORMATION,
		[Token(Token = "0x40001F6")]
		CRYING,
		[Token(Token = "0x40001F7")]
		ENDINFO,
		[Token(Token = "0x40001F8")]
		DEAD
	}

	[Token(Token = "0x2000060")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6685C", Offset = "0xE6685C")]
	private sealed class <EnterRoomRoutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZA_SilasNegotiation <>4__this;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioClip <enterRoomClip>5__2;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001F2")]
			[Address(RVA = "0x216CC5C", Offset = "0x216CC5C", VA = "0x216CC5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001F4")]
			[Address(RVA = "0x216CCA4", Offset = "0x216CCA4", VA = "0x216CCA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x216C898", Offset = "0x216C898", VA = "0x216C898")]
		[DebuggerHidden]
		public <EnterRoomRoutine>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x216C8C4", Offset = "0x216C8C4", VA = "0x216C8C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001F1")]
		[Address(RVA = "0x216C8C8", Offset = "0x216C8C8", VA = "0x216C8C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x216CC64", Offset = "0x216CC64", VA = "0x216CC64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000061")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6686C", Offset = "0xE6686C")]
	private sealed class <RoomCountdown>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZA_SilasNegotiation <>4__this;

		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <countdown>5__2;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001F8")]
			[Address(RVA = "0x216D490", Offset = "0x216D490", VA = "0x216D490", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001FA")]
			[Address(RVA = "0x216D4D8", Offset = "0x216D4D8", VA = "0x216D4D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x216D2F0", Offset = "0x216D2F0", VA = "0x216D2F0")]
		[DebuggerHidden]
		public <RoomCountdown>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x216D31C", Offset = "0x216D31C", VA = "0x216D31C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x216D320", Offset = "0x216D320", VA = "0x216D320", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001F9")]
		[Address(RVA = "0x216D498", Offset = "0x216D498", VA = "0x216D498", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000062")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6687C", Offset = "0xE6687C")]
	private sealed class <GiveInformationRoutine>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZA_SilasNegotiation <>4__this;

		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip preClip;

		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip infoClip;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001FE")]
			[Address(RVA = "0x216D2A0", Offset = "0x216D2A0", VA = "0x216D2A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000200")]
			[Address(RVA = "0x216D2E8", Offset = "0x216D2E8", VA = "0x216D2E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x216CF00", Offset = "0x216CF00", VA = "0x216CF00")]
		[DebuggerHidden]
		public <GiveInformationRoutine>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x216CF2C", Offset = "0x216CF2C", VA = "0x216CF2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x216CF30", Offset = "0x216CF30", VA = "0x216CF30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001FF")]
		[Address(RVA = "0x216D2A8", Offset = "0x216D2A8", VA = "0x216D2A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000063")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6688C", Offset = "0xE6688C")]
	private sealed class <FadeOut>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZA_SilasNegotiation <>4__this;

		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SilasState stateTo;

		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <percent>5__2;

		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <currentVol>5__3;

		[Token(Token = "0x17000033")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000204")]
			[Address(RVA = "0x216CEB0", Offset = "0x216CEB0", VA = "0x216CEB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000206")]
			[Address(RVA = "0x216CEF8", Offset = "0x216CEF8", VA = "0x216CEF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000201")]
		[Address(RVA = "0x216CCAC", Offset = "0x216CCAC", VA = "0x216CCAC")]
		[DebuggerHidden]
		public <FadeOut>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000202")]
		[Address(RVA = "0x216CCD8", Offset = "0x216CCD8", VA = "0x216CCD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000203")]
		[Address(RVA = "0x216CCDC", Offset = "0x216CCDC", VA = "0x216CCDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000205")]
		[Address(RVA = "0x216CEB8", Offset = "0x216CEB8", VA = "0x216CEB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource MouthAudioSource;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SilasState currentState;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE77C30", Offset = "0xE77C30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77C30", Offset = "0xE77C30")]
	[SerializeField]
	private AudioClip BreathingClip;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE77C8C", Offset = "0xE77C8C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77C8C", Offset = "0xE77C8C")]
	[SerializeField]
	private AudioClip CryingClip;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE77CE8", Offset = "0xE77CE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77CE8", Offset = "0xE77CE8")]
	[SerializeField]
	private AudioClip[] EnterRoomClips;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float countDownTimer;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int EnterRoomTracker;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool RoomRoutine;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _countingDown;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE77D44", Offset = "0xE77D44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77D44", Offset = "0xE77D44")]
	[SerializeField]
	private AudioClip[] InformationClips;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int InformationTracker;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77DA0", Offset = "0xE77DA0")]
	[SerializeField]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE77DA0", Offset = "0xE77DA0")]
	private AudioClip[] ScaredClips;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int ScaredTracker;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE77DFC", Offset = "0xE77DFC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77DFC", Offset = "0xE77DFC")]
	[SerializeField]
	private AudioClip[] PainClips;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int PainTracker;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE77E58", Offset = "0xE77E58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77E58", Offset = "0xE77E58")]
	[SerializeField]
	private AudioClip[] EndClips;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE77EB4", Offset = "0xE77EB4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77EB4", Offset = "0xE77EB4")]
	[SerializeField]
	private AudioClip[] DyingClips;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int EndClipTracker;

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x180E188", Offset = "0x180E188", VA = "0x180E188")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x180E194", Offset = "0x180E194", VA = "0x180E194")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x180E2EC", Offset = "0x180E2EC", VA = "0x180E2EC")]
	public void SilasBreathing()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x180E2F8", Offset = "0x180E2F8", VA = "0x180E2F8")]
	public void SilasCry()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x180E304", Offset = "0x180E304", VA = "0x180E304")]
	public void SilasDead()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x180E4E4", Offset = "0x180E4E4", VA = "0x180E4E4")]
	public void Yelp()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x180E558", Offset = "0x180E558", VA = "0x180E558")]
	public void EnterRoom()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x180E584", Offset = "0x180E584", VA = "0x180E584")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8AFB8", Offset = "0xE8AFB8")]
	private IEnumerator EnterRoomRoutine()
	{
		return null;
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x180E274", Offset = "0x180E274", VA = "0x180E274")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8B018", Offset = "0xE8B018")]
	private IEnumerator RoomCountdown()
	{
		return null;
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x180E5FC", Offset = "0x180E5FC", VA = "0x180E5FC")]
	public void HurtSilas()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x180E6C0", Offset = "0x180E6C0", VA = "0x180E6C0")]
	public void ScareSilas()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x180E67C", Offset = "0x180E67C", VA = "0x180E67C")]
	private void PreInformation(AudioClip preClip)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x180E740", Offset = "0x180E740", VA = "0x180E740")]
	private void GiveInformation(AudioClip preClip)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x180E880", Offset = "0x180E880", VA = "0x180E880")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8B078", Offset = "0xE8B078")]
	private IEnumerator GiveInformationRoutine(AudioClip preClip, AudioClip infoClip)
	{
		return null;
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x180E928", Offset = "0x180E928", VA = "0x180E928")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8B0D8", Offset = "0xE8B0D8")]
	private IEnumerator FadeOut(SilasState stateTo)
	{
		return null;
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x180E830", Offset = "0x180E830", VA = "0x180E830")]
	private int RandomNumber(int UpperRange, int Exclude)
	{
		return default(int);
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x180E398", Offset = "0x180E398", VA = "0x180E398")]
	private void CreateSubtitle(AudioClip audioClip)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x180E9B0", Offset = "0x180E9B0", VA = "0x180E9B0")]
	public ZA_SilasNegotiation()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x180E9B8", Offset = "0x180E9B8", VA = "0x180E9B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8B138", Offset = "0xE8B138")]
	private bool <EnterRoomRoutine>b__26_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x180E9C8", Offset = "0x180E9C8", VA = "0x180E9C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8B148", Offset = "0xE8B148")]
	private bool <EnterRoomRoutine>b__26_1()
	{
		return default(bool);
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x180EA74", Offset = "0x180EA74", VA = "0x180EA74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8B158", Offset = "0xE8B158")]
	private bool <EnterRoomRoutine>b__26_2()
	{
		return default(bool);
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x180EAA0", Offset = "0x180EAA0", VA = "0x180EAA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8B168", Offset = "0xE8B168")]
	private bool <GiveInformationRoutine>b__32_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x180EACC", Offset = "0x180EACC", VA = "0x180EACC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8B178", Offset = "0xE8B178")]
	private bool <GiveInformationRoutine>b__32_1()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000064")]
public class ZA_SnapshotLevelStart : MonoBehaviour
{
	[Token(Token = "0x6000207")]
	[Address(RVA = "0x180EAF8", Offset = "0x180EAF8", VA = "0x180EAF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x180EC10", Offset = "0x180EC10", VA = "0x180EC10")]
	public ZA_SnapshotLevelStart()
	{
	}
}
[Token(Token = "0x2000065")]
public class ZA_SnapshotManager : MonoBehaviour
{
	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE77F10", Offset = "0xE77F10")]
	private static bool <IsReady>k__BackingField;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioMixer _mainMixer;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioMixer _musicMixer;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioMixer _ambienceMixer;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioMixer _sfxMixer;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioMixer _dialogueMixer;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[NaughtyAttributes.ReadOnly]
	private string _storedSnapshot;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _snapshotPrePause;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77F30", Offset = "0xE77F30")]
	[SerializeField]
	private string _musicMain;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private string _sfxMain;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private string _dialogueMain;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE77F9C", Offset = "0xE77F9C")]
	[SerializeField]
	private string _ambienceLoading;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private string _musicLoading;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private string _sfxLoading;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private string _dialogueLoading;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE78018", Offset = "0xE78018")]
	[SerializeField]
	private string _ambiencePause;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private string _musicPause;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private string _sfxPause;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private string _dialoguePause;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE78094", Offset = "0xE78094")]
	[SerializeField]
	private string _ambienceCredits;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private string _musicCredits;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private string _sfxCredits;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private string _dialogueCredits;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string _ambienceTransition;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool isOutOfTransition;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static ZA_SnapshotManager Instance;

	[Token(Token = "0x17000035")]
	public static bool IsReady
	{
		[Token(Token = "0x6000209")]
		[Address(RVA = "0x180EC18", Offset = "0x180EC18", VA = "0x180EC18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8B2C8", Offset = "0xE8B2C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600020A")]
		[Address(RVA = "0x180EC64", Offset = "0x180EC64", VA = "0x180EC64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8B2D8", Offset = "0xE8B2D8")]
		private set
		{
		}
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x180ECB8", Offset = "0x180ECB8", VA = "0x180ECB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x180EE24", Offset = "0x180EE24", VA = "0x180EE24")]
	public void InitializeSnapshotManager()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x180EB4C", Offset = "0x180EB4C", VA = "0x180EB4C")]
	public void StartLevelSnapshot()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x180EFA4", Offset = "0x180EFA4", VA = "0x180EFA4")]
	public void EnterSnapshot(AudioMixerSnapshot snapshot, float time)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x180F030", Offset = "0x180F030", VA = "0x180F030")]
	public void EnterLoading()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x180BB60", Offset = "0x180BB60", VA = "0x180BB60")]
	public void EnterCredits()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x180F0DC", Offset = "0x180F0DC", VA = "0x180F0DC")]
	public void EnterPause()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x180F1B0", Offset = "0x180F1B0", VA = "0x180F1B0")]
	public void Unpause()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x180F2B0", Offset = "0x180F2B0", VA = "0x180F2B0")]
	public void ReturnToMenu()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x180F314", Offset = "0x180F314", VA = "0x180F314")]
	public ZA_SnapshotManager()
	{
	}
}
[Token(Token = "0x2000066")]
public class ZA_SnapshotTriggerPortal : MonoBehaviour
{
	[Token(Token = "0x2000067")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6689C", Offset = "0xE6689C")]
	private sealed class <PortalSetup>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZA_SnapshotTriggerPortal <>4__this;

		[Token(Token = "0x17000036")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600021C")]
			[Address(RVA = "0x216D63C", Offset = "0x216D63C", VA = "0x216D63C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600021E")]
			[Address(RVA = "0x216D684", Offset = "0x216D684", VA = "0x216D684", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000219")]
		[Address(RVA = "0x216D4E0", Offset = "0x216D4E0", VA = "0x216D4E0")]
		[DebuggerHidden]
		public <PortalSetup>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0x216D50C", Offset = "0x216D50C", VA = "0x216D50C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0x216D510", Offset = "0x216D510", VA = "0x216D510", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0x216D644", Offset = "0x216D644", VA = "0x216D644", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioMixerSnapshot _snapshot;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _transitionTime;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioMixer _ambienceMixer;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _snapshotString;

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x180F31C", Offset = "0x180F31C", VA = "0x180F31C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x180F348", Offset = "0x180F348", VA = "0x180F348")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8B2E8", Offset = "0xE8B2E8")]
	private IEnumerator PortalSetup()
	{
		return null;
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x180F3C0", Offset = "0x180F3C0", VA = "0x180F3C0")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x180F464", Offset = "0x180F464", VA = "0x180F464")]
	public ZA_SnapshotTriggerPortal()
	{
	}
}
[Token(Token = "0x2000068")]
public class ZA_UISFXPlay : MonoBehaviour
{
	[Token(Token = "0x600021F")]
	[Address(RVA = "0x180F85C", Offset = "0x180F85C", VA = "0x180F85C")]
	public void PlaySFX(string eventName)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x180F8C4", Offset = "0x180F8C4", VA = "0x180F8C4")]
	public void StartLiveDialogue()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x180F924", Offset = "0x180F924", VA = "0x180F924")]
	public void StopLiveDialogue()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x180F984", Offset = "0x180F984", VA = "0x180F984")]
	public void StartLiveEffect()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x180F9E4", Offset = "0x180F9E4", VA = "0x180F9E4")]
	public void StopLiveEffect()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x180FA44", Offset = "0x180FA44", VA = "0x180FA44")]
	public ZA_UISFXPlay()
	{
	}
}
[Token(Token = "0x2000069")]
public class ZA_UISlider : MonoBehaviour
{
	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool played;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Slider slider;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float stepSize;

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x180FA4C", Offset = "0x180FA4C", VA = "0x180FA4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x180FB10", Offset = "0x180FB10", VA = "0x180FB10")]
	public ZA_UISlider()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x180FB18", Offset = "0x180FB18", VA = "0x180FB18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8B398", Offset = "0xE8B398")]
	private void <Start>b__3_0(float value)
	{
	}
}
[Token(Token = "0x200006A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE668AC", Offset = "0xE668AC")]
public class MT_ShaderCacheConfig : ScriptableObject
{
	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clearShaderCacheAfterBuild;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool clearShaderCacheWhenUnityIsClosed;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool onlyClearShaderCacheWhenCacheSizeExceeded;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE78150", Offset = "0xE78150")]
	public int shaderCacheSizeLimitInMB;

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x12A969C", Offset = "0x12A969C", VA = "0x12A969C")]
	public MT_ShaderCacheConfig()
	{
	}
}
[Token(Token = "0x200006B")]
public class MT_NPCPassiveBark
{
	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _id;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MT_NPCGameplay _npc;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioClip _barkAudioClip;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AnimationClip _barkFacialAnimationClip;

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x10F7DD8", Offset = "0x10F7DD8", VA = "0x10F7DD8")]
	public MT_NPCPassiveBark()
	{
	}
}
[Token(Token = "0x200006C")]
public class AllyShoot : StateMachineBehaviour
{
	[Token(Token = "0x600022A")]
	[Address(RVA = "0x13BCDF8", Offset = "0x13BCDF8", VA = "0x13BCDF8", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x13BCE54", Offset = "0x13BCE54", VA = "0x13BCE54")]
	public AllyShoot()
	{
	}
}
[Token(Token = "0x200006D")]
public class ResetReloading : StateMachineBehaviour
{
	[Token(Token = "0x600022C")]
	[Address(RVA = "0x32CB864", Offset = "0x32CB864", VA = "0x32CB864", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x32CB8C0", Offset = "0x32CB8C0", VA = "0x32CB8C0")]
	public ResetReloading()
	{
	}
}
[Token(Token = "0x200006E")]
public class MT_NPCHitInfo : MonoBehaviour, IShootable
{
	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MT_NPCHealth npcHealth;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MT_NPCHitReaction npcHitReaction;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MT_PlayerEvents.NpcBodyPart bodyPart;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7816C", Offset = "0xE7816C")]
	public float shotMultiplier;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x10F6CD0", Offset = "0x10F6CD0", VA = "0x10F6CD0", Slot = "4")]
	public void OnShot(float bulletForce, float bulletDamage, Vector3 direction)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x10F6DA8", Offset = "0x10F6DA8", VA = "0x10F6DA8")]
	public MT_NPCHitInfo()
	{
	}
}
[Token(Token = "0x200006F")]
public class PlayerGunJammer : MonoBehaviour
{
	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HVRGunBase gun;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float headAngleLimit;

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x1086170", Offset = "0x1086170", VA = "0x1086170")]
	private void Start()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x10861CC", Offset = "0x10861CC", VA = "0x10861CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x1086354", Offset = "0x1086354", VA = "0x1086354")]
	public PlayerGunJammer()
	{
	}
}
[Token(Token = "0x2000070")]
public class MT_NPAEmotionTracking : MonoBehaviour
{
	[Token(Token = "0x2000071")]
	public enum EmotionLevel
	{
		[Token(Token = "0x4000245")]
		None,
		[Token(Token = "0x4000246")]
		Average,
		[Token(Token = "0x4000247")]
		VeryStrong
	}

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE78198", Offset = "0xE78198")]
	private float irritationLevel;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE781DC", Offset = "0xE781DC")]
	private float approvalLevel;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public UnityEvent onIrritationChange;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public UnityEvent onApprovalChange;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _currentIrritationLevel;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _currentApprovalLevel;

	[Token(Token = "0x17000038")]
	public float CurrentIrritationLevel
	{
		[Token(Token = "0x6000233")]
		[Address(RVA = "0x10F30B4", Offset = "0x10F30B4", VA = "0x10F30B4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000039")]
	public float CurrentApprovalLevel
	{
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x10F30BC", Offset = "0x10F30BC", VA = "0x10F30BC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x10F30C4", Offset = "0x10F30C4", VA = "0x10F30C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x10F30D0", Offset = "0x10F30D0", VA = "0x10F30D0")]
	public void ModifyIrritationLevel(float amount)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x10F30F4", Offset = "0x10F30F4", VA = "0x10F30F4")]
	public void ModifyApprovalLevel(float amount)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x10F3118", Offset = "0x10F3118", VA = "0x10F3118")]
	public EmotionLevel GetApprovalLevel()
	{
		return default(EmotionLevel);
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x10F3158", Offset = "0x10F3158", VA = "0x10F3158")]
	public EmotionLevel GetIrritationLevel()
	{
		return default(EmotionLevel);
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x10F3198", Offset = "0x10F3198", VA = "0x10F3198")]
	public MT_NPAEmotionTracking()
	{
	}
}
[Token(Token = "0x2000072")]
public class MT_NPAEnvironmentCollision : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000073")]
	private struct CollisionEvent
	{
		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string ObjectTag;

		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnityEvent CollisionReaction;
	}

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CollisionEvent[] onNPACollisionEvents;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent onNPACollideWithPlayer;

	[Token(Token = "0x400024A")]
	private const string PlayerTag = "PlayerBody";

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x10F31AC", Offset = "0x10F31AC", VA = "0x10F31AC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x10F342C", Offset = "0x10F342C", VA = "0x10F342C")]
	public MT_NPAEnvironmentCollision()
	{
	}
}
[Token(Token = "0x2000074")]
public class MT_NPAInteractionManager : MonoBehaviour
{
	[Token(Token = "0x600023D")]
	[Address(RVA = "0x10F3464", Offset = "0x10F3464", VA = "0x10F3464")]
	public MT_NPAInteractionManager()
	{
	}
}
[Token(Token = "0x2000075")]
public class MT_NPAMemories : MonoBehaviour
{
	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<GameObject> _grabbedObjects;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> _givenObjects;

	[Token(Token = "0x1700003A")]
	public List<GameObject> GrabbedObjects
	{
		[Token(Token = "0x600023E")]
		[Address(RVA = "0x10F346C", Offset = "0x10F346C", VA = "0x10F346C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003B")]
	public List<GameObject> GivenObjects
	{
		[Token(Token = "0x600023F")]
		[Address(RVA = "0x10F3474", Offset = "0x10F3474", VA = "0x10F3474")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x10F347C", Offset = "0x10F347C", VA = "0x10F347C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x10F3520", Offset = "0x10F3520", VA = "0x10F3520")]
	public void AddGrabbedObject(GameObject objectGrabbed)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x10F3584", Offset = "0x10F3584", VA = "0x10F3584")]
	public void RemovedGrabbedObject(GameObject objectDropped)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x10F35E8", Offset = "0x10F35E8", VA = "0x10F35E8")]
	public void AddGivenObject(GameObject objectGrabbed)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x10F364C", Offset = "0x10F364C", VA = "0x10F364C")]
	public void RemovedGivenObject(GameObject objectDropped)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x10F36B0", Offset = "0x10F36B0", VA = "0x10F36B0")]
	public MT_NPAMemories()
	{
	}
}
[Token(Token = "0x2000076")]
public class MT_NPAPlayerInteraction : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000077")]
	private struct PlayerInteractionEvents
	{
		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string ObjectTag;

		[Token(Token = "0x4000254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnityEvent InteractionReaction;
	}

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MT_NPAMemories npaMemories;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayerInteractionEvents[] onPlayerGiveObjectEvents;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PlayerInteractionEvents[] onPlayerStealObjectEvents;

	[Token(Token = "0x4000252")]
	private const string PlayerHandTag = "Hand";

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x10F36B8", Offset = "0x10F36B8", VA = "0x10F36B8")]
	public MT_NPAPlayerInteraction()
	{
	}
}
[Token(Token = "0x2000078")]
public class MT_NPAVision : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000079")]
	private struct ObjectVisibleEvent
	{
		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string ObjectTag;

		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnityEvent CharacterReaction;
	}

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform conePosition;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE782A0", Offset = "0xE782A0")]
	private float coneAngle;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE782E4", Offset = "0xE782E4")]
	private float coneRadius;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ObjectVisibleEvent[] objectVisibleEvents;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent playerVisibleEvent;

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x10F36C0", Offset = "0x10F36C0", VA = "0x10F36C0")]
	public void CheckIfObjectIsVisible(Transform go)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x10F3AA4", Offset = "0x10F3AA4", VA = "0x10F3AA4")]
	public MT_NPAVision()
	{
	}
}
[Token(Token = "0x200007A")]
public class MT_NPCPersonalSpace : MonoBehaviour
{
	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent playerInPersonalSpaceEvent;

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x10F90A0", Offset = "0x10F90A0", VA = "0x10F90A0")]
	public MT_NPCPersonalSpace()
	{
	}
}
[Token(Token = "0x200007B")]
public class MT_PlayerEvents
{
	[Token(Token = "0x200007C")]
	public enum ObjectInteraction
	{
		[Token(Token = "0x4000261")]
		Grab,
		[Token(Token = "0x4000262")]
		Drop,
		[Token(Token = "0x4000263")]
		Use,
		[Token(Token = "0x4000264")]
		Squeeze,
		[Token(Token = "0x4000265")]
		Release
	}

	[Token(Token = "0x200007D")]
	public enum Gesture
	{
		[Token(Token = "0x4000267")]
		NodHeadYes,
		[Token(Token = "0x4000268")]
		ShakeHeadNo,
		[Token(Token = "0x4000269")]
		ThumbsUp,
		[Token(Token = "0x400026A")]
		ThumbsDown,
		[Token(Token = "0x400026B")]
		WaveHand,
		[Token(Token = "0x400026C")]
		PointFinger,
		[Token(Token = "0x400026D")]
		OkHand,
		[Token(Token = "0x400026E")]
		FistHand,
		[Token(Token = "0x400026F")]
		QuickMoveHand
	}

	[Token(Token = "0x200007E")]
	public enum NpcBodyPart
	{
		[Token(Token = "0x4000271")]
		Head,
		[Token(Token = "0x4000272")]
		Body,
		[Token(Token = "0x4000273")]
		LeftArm,
		[Token(Token = "0x4000274")]
		LeftForearm,
		[Token(Token = "0x4000275")]
		RightArm,
		[Token(Token = "0x4000276")]
		RightForearm,
		[Token(Token = "0x4000277")]
		LeftLeg,
		[Token(Token = "0x4000278")]
		LeftLowerLeg,
		[Token(Token = "0x4000279")]
		RightLeg,
		[Token(Token = "0x400027A")]
		RightLowerLeg
	}

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<ObjectInteraction, string> OnObjectInteraction;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<Gesture, HandType, float> OnHandGesture;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action<Gesture> OnHeadGesture;

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x132CA50", Offset = "0x132CA50", VA = "0x132CA50")]
	public static void TriggerObjectInteractionEvent(ObjectInteraction interaction, string tag)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x132CAE0", Offset = "0x132CAE0", VA = "0x132CAE0")]
	public static void TriggerHeadGestureEvent(Gesture gesture)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x132CB5C", Offset = "0x132CB5C", VA = "0x132CB5C")]
	public static void TriggerHandGestureEvent(Gesture gesture, HandType handType, float strength = 1f)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x132CC00", Offset = "0x132CC00", VA = "0x132CC00")]
	public MT_PlayerEvents()
	{
	}
}
[Token(Token = "0x200007F")]
public class IKTransformFollow : MonoBehaviour
{
	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform targetTransform;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float lerpSpeed;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Pause;

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x10DBB20", Offset = "0x10DBB20", VA = "0x10DBB20")]
	private void Start()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x10DBBB8", Offset = "0x10DBBB8", VA = "0x10DBBB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x10DBE18", Offset = "0x10DBE18", VA = "0x10DBE18")]
	public IKTransformFollow()
	{
	}
}
[Token(Token = "0x2000080")]
public class MT_EyeMicroMovement : MonoBehaviour
{
	[Token(Token = "0x2000081")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66918", Offset = "0xE66918")]
	private sealed class <EyeCoroutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_EyeMicroMovement <>4__this;

		[Token(Token = "0x1700003C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600025B")]
			[Address(RVA = "0x1036BFC", Offset = "0x1036BFC", VA = "0x1036BFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600025D")]
			[Address(RVA = "0x1036C44", Offset = "0x1036C44", VA = "0x1036C44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000258")]
		[Address(RVA = "0x1036A00", Offset = "0x1036A00", VA = "0x1036A00")]
		[DebuggerHidden]
		public <EyeCoroutine>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000259")]
		[Address(RVA = "0x1036A2C", Offset = "0x1036A2C", VA = "0x1036A2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600025A")]
		[Address(RVA = "0x1036A30", Offset = "0x1036A30", VA = "0x1036A30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600025C")]
		[Address(RVA = "0x1036C04", Offset = "0x1036C04", VA = "0x1036C04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SkinnedMeshRenderer[] eyes;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector2 xOffsetRange;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve yOffsetCurve;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float minTimeBetweenSwitch;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float maxTimeBetweenSwitch;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float minTimeToReturn;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float maxTimeToReturn;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float headVelocityLimit;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[MazeTheory.Toolbox.ReadOnly]
	private Vector4 _targetOffset;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject characterHead;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _previousHeadForward;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _currentHeadVelocity;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string shaderPropertyID;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material _eyeMaterial;

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x15BDCF0", Offset = "0x15BDCF0", VA = "0x15BDCF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x15BE0B8", Offset = "0x15BE0B8", VA = "0x15BE0B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x15BE188", Offset = "0x15BE188", VA = "0x15BE188")]
	private void HeadVelocityLimit()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x15BE1F8", Offset = "0x15BE1F8", VA = "0x15BE1F8")]
	private void UpdateEyeTexture()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x15BE2E8", Offset = "0x15BE2E8", VA = "0x15BE2E8")]
	public Vector4 GetTextureOffset()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x15BE040", Offset = "0x15BE040", VA = "0x15BE040")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8B3A8", Offset = "0xE8B3A8")]
	private IEnumerator EyeCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x15BE30C", Offset = "0x15BE30C", VA = "0x15BE30C")]
	public MT_EyeMicroMovement()
	{
	}
}
[Token(Token = "0x2000082")]
public class MT_NPAIKMethods : MonoBehaviour
{
	[Token(Token = "0x600025E")]
	[Address(RVA = "0x10F3434", Offset = "0x10F3434", VA = "0x10F3434")]
	public void LookAt(Transform ikTarget, float time)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x10F3438", Offset = "0x10F3438", VA = "0x10F3438")]
	public void LookAtPlayer(float time)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x10F343C", Offset = "0x10F343C", VA = "0x10F343C")]
	public void LookAt_EyesOnly(Transform ikTarget, float time)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x10F3440", Offset = "0x10F3440", VA = "0x10F3440")]
	public void LookAtPlayer_EyesOnly(float time)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x10F3444", Offset = "0x10F3444", VA = "0x10F3444")]
	public void StopLookingAt()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x10F3448", Offset = "0x10F3448", VA = "0x10F3448")]
	public void AimAt(Transform ikTarget)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x10F344C", Offset = "0x10F344C", VA = "0x10F344C")]
	public void AimAtPlayerHead()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x10F3450", Offset = "0x10F3450", VA = "0x10F3450")]
	public void AimAtPlayerBody()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x10F3454", Offset = "0x10F3454", VA = "0x10F3454")]
	public void StopAimingAt()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x10F3458", Offset = "0x10F3458", VA = "0x10F3458")]
	public void ResetIK()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x10F345C", Offset = "0x10F345C", VA = "0x10F345C")]
	public MT_NPAIKMethods()
	{
	}
}
[Token(Token = "0x2000083")]
public class MT_TestIK : MonoBehaviour
{
	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LookAtIK _ik;

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x12B50A8", Offset = "0x12B50A8", VA = "0x12B50A8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x12B5188", Offset = "0x12B5188", VA = "0x12B5188")]
	public MT_TestIK()
	{
	}
}
[Token(Token = "0x2000084")]
public class MT_PassiveDamageBarker : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000085")]
	private class DamageBark
	{
		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationClip animClip;

		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip audioClip;

		[Token(Token = "0x600026E")]
		[Address(RVA = "0x32B7008", Offset = "0x32B7008", VA = "0x32B7008")]
		public DamageBark()
		{
		}
	}

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private DamageBark[] damageBarks;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MT_NPCGameplay mNpcGameplay;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CombatAlly mNpcAlly;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _playing;

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x110629C", Offset = "0x110629C", VA = "0x110629C")]
	public void CreateDamageBark()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x1106474", Offset = "0x1106474", VA = "0x1106474")]
	public MT_PassiveDamageBarker()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x110647C", Offset = "0x110647C", VA = "0x110647C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8B458", Offset = "0xE8B458")]
	private void <CreateDamageBark>b__4_0()
	{
	}
}
[Token(Token = "0x2000086")]
public class MT_PersonalSpace : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000087")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66928", Offset = "0xE66928")]
	private sealed class <>c
	{
		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__27_0;

		[Token(Token = "0x600027F")]
		[Address(RVA = "0x32B748C", Offset = "0x32B748C", VA = "0x32B748C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000280")]
		[Address(RVA = "0x32B7494", Offset = "0x32B7494", VA = "0x32B7494")]
		internal void <FadeOut>b__27_0()
		{
		}
	}

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform followTarget;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject solidCollider;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float solidCollisionVelocityMagnitudeThreshold;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _minPhysicalScale;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _teleportDistance;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private readonly Vector3 _followOffset;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _velocityMagnitude;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _velocityDirection;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 _previousPosition;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 _originalSolidColliderLocalScale;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 _currentPosition;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform _mTransform;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly float _scaleSpeed;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] CollisionLayers;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool _fading;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private LayerMask _collisionMask;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Transform _repositionOverrideTransform;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform _localRepositionOverrideTransform;

	[Token(Token = "0x40002A9")]
	private const float MaxDistance = 10f;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _canFreeze;

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x13263AC", Offset = "0x13263AC", VA = "0x13263AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x13264C0", Offset = "0x13264C0", VA = "0x13264C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x13266E8", Offset = "0x13266E8", VA = "0x13266E8")]
	private void UpdateSolidColliderScaling()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x1326804", Offset = "0x1326804", VA = "0x1326804")]
	public void SetFollowTransform(Transform ft)
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x132680C", Offset = "0x132680C", VA = "0x132680C")]
	public void SpaceInvaded()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x13269E0", Offset = "0x13269E0", VA = "0x13269E0")]
	private void Reposition()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x1326D64", Offset = "0x1326D64", VA = "0x1326D64")]
	private bool AttemptToRepositionPlayer(Vector3 offset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x1326F74", Offset = "0x1326F74", VA = "0x1326F74")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x13270B0", Offset = "0x13270B0", VA = "0x13270B0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x1327154", Offset = "0x1327154", VA = "0x1327154")]
	public static void SetRepositionOverrideTransform(Transform t)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x13271C0", Offset = "0x13271C0", VA = "0x13271C0")]
	public static void ResetRepositionOverrideTransform()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x1327228", Offset = "0x1327228", VA = "0x1327228")]
	public void SetLocalRepositionOverrideTransform(Transform t)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x1327230", Offset = "0x1327230", VA = "0x1327230")]
	public void ResetLocalRepositionOverrideTransform()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x132723C", Offset = "0x132723C", VA = "0x132723C")]
	public MT_PersonalSpace()
	{
	}
}
[Token(Token = "0x2000088")]
public class MT_RootMotionHandler : MonoBehaviour
{
	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator _nativeAnimator;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NavMeshAgent _agent;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NPCMovementController _movementController;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CombatAlly allyScript;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool previousAgentWasOnNavMesh;

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x12A5060", Offset = "0x12A5060", VA = "0x12A5060")]
	public void Setup(Animator a, NavMeshAgent nma, NPCMovementController mc, [Optional] CombatAlly ally)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x12A50C4", Offset = "0x12A50C4", VA = "0x12A50C4")]
	private void OnAnimatorMove()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x12A52A8", Offset = "0x12A52A8", VA = "0x12A52A8")]
	public MT_RootMotionHandler()
	{
	}
}
[Token(Token = "0x2000089")]
public class NavigationTransform : MonoBehaviour
{
	[Token(Token = "0x6000284")]
	[Address(RVA = "0x114C33C", Offset = "0x114C33C", VA = "0x114C33C")]
	public NavigationTransform()
	{
	}
}
[Token(Token = "0x200008A")]
public class GruntCreator : MonoBehaviour
{
	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject gruntPrefab;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform startPos;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform parentTransf;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GruntHead> heads;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Transform> hats;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Transform> coats;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Transform> torsos;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Transform> legs;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Transform> shoes;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _newPos;

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x10D7068", Offset = "0x10D7068", VA = "0x10D7068")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE8B468", Offset = "0xE8B468")]
	public void Randomise()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x10D7C24", Offset = "0x10D7C24", VA = "0x10D7C24")]
	private void DisableAllParts()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x10D8394", Offset = "0x10D8394", VA = "0x10D8394")]
	public GruntCreator()
	{
	}
}
[Token(Token = "0x200008B")]
public class GruntParts : MonoBehaviour
{
	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GruntHead[] heads;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] hats;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] coats;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] torsos;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] legs;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] shoes;

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x10D839C", Offset = "0x10D839C", VA = "0x10D839C")]
	public GruntParts()
	{
	}
}
[Token(Token = "0x200008C")]
public class MT_CharacterComponent : MonoBehaviour
{
	[Token(Token = "0x6000289")]
	[Address(RVA = "0x11296E4", Offset = "0x11296E4", VA = "0x11296E4")]
	public MT_CharacterComponent()
	{
	}
}
[Token(Token = "0x200008D")]
public class MT_GruntVariantRandomizer : MonoBehaviour
{
	[Token(Token = "0x600028A")]
	[Address(RVA = "0x15C76FC", Offset = "0x15C76FC", VA = "0x15C76FC")]
	public MT_GruntVariantRandomizer()
	{
	}
}
[Token(Token = "0x200008E")]
public class MT_SkeletonRandomiser : MonoBehaviour
{
	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] skeletonRoots;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject overrideAtlas;

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x12AA99C", Offset = "0x12AA99C", VA = "0x12AA99C")]
	[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8B480", Offset = "0xE8B480")]
	private void Start()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x12AAD90", Offset = "0x12AAD90", VA = "0x12AAD90")]
	[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8B4F8", Offset = "0xE8B4F8")]
	private void UpdateSkinnedMeshRenderer(SkinnedMeshRenderer targetSkin, Transform rootBone)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x12AAF2C", Offset = "0x12AAF2C", VA = "0x12AAF2C")]
	public void SetSkeletonRoots(GameObject[] skeletons)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x12AAF34", Offset = "0x12AAF34", VA = "0x12AAF34")]
	public MT_SkeletonRandomiser()
	{
	}
}
[Token(Token = "0x200008F")]
public class AimAssistSettingsToggle : MonoBehaviour
{
	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnityEngine.UI.Toggle t;

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x13BCC8C", Offset = "0x13BCC8C", VA = "0x13BCC8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x13BCD38", Offset = "0x13BCD38", VA = "0x13BCD38")]
	public void ToggleCanvas()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x13BCDF0", Offset = "0x13BCDF0", VA = "0x13BCDF0")]
	public AimAssistSettingsToggle()
	{
	}
}
[Token(Token = "0x2000090")]
public class IgnoreAimAssist : MonoBehaviour
{
	[Token(Token = "0x6000292")]
	[Address(RVA = "0x10DC45C", Offset = "0x10DC45C", VA = "0x10DC45C")]
	public IgnoreAimAssist()
	{
	}
}
[Token(Token = "0x2000091")]
public class PlayerDamageSounds : MonoBehaviour
{
	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource heartbeat;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource tinnitus;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ZA_AudioEvent audioEvent;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioMixer _sfxMixer;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioMixer _ambientMixer;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioMixer _dialogueMixer;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioMixer _musicMixer;

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x10838BC", Offset = "0x10838BC", VA = "0x10838BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x1083AB0", Offset = "0x1083AB0", VA = "0x1083AB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x1083CA4", Offset = "0x1083CA4", VA = "0x1083CA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x1083EB4", Offset = "0x1083EB4", VA = "0x1083EB4")]
	public void PlayHeartbeat()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x1083F00", Offset = "0x1083F00", VA = "0x1083F00")]
	public void PlayTinnitus()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x1084044", Offset = "0x1084044", VA = "0x1084044")]
	public void StopHeartbeat()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x1084090", Offset = "0x1084090", VA = "0x1084090")]
	public void StopTinnitus()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x1084120", Offset = "0x1084120", VA = "0x1084120")]
	public void PlayImpact()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1084178", Offset = "0x1084178", VA = "0x1084178")]
	public void PlayDeath()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1083F54", Offset = "0x1083F54", VA = "0x1083F54")]
	private void FilterSFX()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x1083DC4", Offset = "0x1083DC4", VA = "0x1083DC4")]
	private void UnfilterSFX()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x10841E0", Offset = "0x10841E0", VA = "0x10841E0")]
	public PlayerDamageSounds()
	{
	}
}
[Token(Token = "0x2000092")]
public class PlayerDamageVisuals : MonoBehaviour
{
	[Token(Token = "0x2000093")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66938", Offset = "0xE66938")]
	private sealed class <DamageFlashCo>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDamageVisuals <>4__this;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CompassUtils.CompassDirection compass;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <index>5__2;

		[Token(Token = "0x1700003E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002B3")]
			[Address(RVA = "0x32C5514", Offset = "0x32C5514", VA = "0x32C5514", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B5")]
			[Address(RVA = "0x32C555C", Offset = "0x32C555C", VA = "0x32C555C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x32C5330", Offset = "0x32C5330", VA = "0x32C5330")]
		[DebuggerHidden]
		public <DamageFlashCo>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x32C535C", Offset = "0x32C535C", VA = "0x32C535C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x32C5360", Offset = "0x32C5360", VA = "0x32C5360", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x32C551C", Offset = "0x32C551C", VA = "0x32C551C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000094")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66948", Offset = "0xE66948")]
	private sealed class <DamageFlashCo>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDamageVisuals <>4__this;

		[Token(Token = "0x17000040")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002B9")]
			[Address(RVA = "0x32C5840", Offset = "0x32C5840", VA = "0x32C5840", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002BB")]
			[Address(RVA = "0x32C5888", Offset = "0x32C5888", VA = "0x32C5888", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x32C5564", Offset = "0x32C5564", VA = "0x32C5564")]
		[DebuggerHidden]
		public <DamageFlashCo>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x32C5590", Offset = "0x32C5590", VA = "0x32C5590", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x32C5594", Offset = "0x32C5594", VA = "0x32C5594", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x32C5848", Offset = "0x32C5848", VA = "0x32C5848", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000095")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66958", Offset = "0xE66958")]
	private sealed class <ShowDamageVignetteCo>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDamageVisuals <>4__this;

		[Token(Token = "0x17000042")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002BF")]
			[Address(RVA = "0x32C59BC", Offset = "0x32C59BC", VA = "0x32C59BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000043")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C1")]
			[Address(RVA = "0x32C5A04", Offset = "0x32C5A04", VA = "0x32C5A04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x32C5890", Offset = "0x32C5890", VA = "0x32C5890")]
		[DebuggerHidden]
		public <ShowDamageVignetteCo>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x32C58BC", Offset = "0x32C58BC", VA = "0x32C58BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x32C58C0", Offset = "0x32C58C0", VA = "0x32C58C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x32C59C4", Offset = "0x32C59C4", VA = "0x32C59C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE78554", Offset = "0xE78554")]
	[SerializeField]
	private Image VignetteImage;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE785A0", Offset = "0xE785A0")]
	[SerializeField]
	private Image FlashImage;

	[Token(Token = "0x40002CE")]
	private const float VignetteAmount = 0.7f;

	[Token(Token = "0x40002CF")]
	private const float VignetteTime = 0.4f;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vignette _vignette;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine _vignetteCo;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Dictionary<CompassUtils.CompassDirection, Coroutine> _compassCoDic;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly float[] _damageFloatArray;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float flashOpacity;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float flashDelayBeforeFadingOut;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float flashFadeOutTime;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float vignetteOpacity;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float vignetteFadeOutTime;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float vfxDamageAmount;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float vfxDamageTime;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int DamageZones;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _previousForceHide;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool _previousImageEnabled;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	private bool _previousDamageRendererEnabled;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	private bool _resetForNotInCombat;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<CompassUtils.CompassDirection, int> CompassVFXMapping;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine DamageCo;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Tweener flashTweener;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Tweener vignetteTweener;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int DesatAmnt;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PlayerCombatController _playerCombatController;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x10841E8", Offset = "0x10841E8", VA = "0x10841E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x10842D4", Offset = "0x10842D4", VA = "0x10842D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x1082A14", Offset = "0x1082A14", VA = "0x1082A14")]
	public void SetIntensity(float val)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x10847DC", Offset = "0x10847DC", VA = "0x10847DC")]
	public void ShowDamageVignette()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x1084A88", Offset = "0x1084A88", VA = "0x1084A88")]
	public void ShowDamage()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x1084B68", Offset = "0x1084B68", VA = "0x1084B68")]
	public void ShowDamageFromDirection(Vector3 bulletDir)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1084CCC", Offset = "0x1084CCC", VA = "0x1084CCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8B570", Offset = "0xE8B570")]
	private IEnumerator DamageFlashCo(CompassUtils.CompassDirection compass)
	{
		return null;
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x1084AF0", Offset = "0x1084AF0", VA = "0x1084AF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8B5D0", Offset = "0xE8B5D0")]
	private IEnumerator DamageFlashCo()
	{
		return null;
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x10844C0", Offset = "0x10844C0", VA = "0x10844C0")]
	public void UpdateVignette()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x1084A10", Offset = "0x1084A10", VA = "0x1084A10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8B630", Offset = "0xE8B630")]
	private IEnumerator ShowDamageVignetteCo()
	{
		return null;
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x10844B8", Offset = "0x10844B8", VA = "0x10844B8")]
	public void Reset()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x1084D54", Offset = "0x1084D54", VA = "0x1084D54")]
	public PlayerDamageVisuals()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x1084FD8", Offset = "0x1084FD8", VA = "0x1084FD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8B690", Offset = "0xE8B690")]
	private Color <DamageFlashCo>b__33_0()
	{
		return default(Color);
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x1084FFC", Offset = "0x1084FFC", VA = "0x1084FFC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8B6A0", Offset = "0xE8B6A0")]
	private void <DamageFlashCo>b__33_1(Color x)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x1085020", Offset = "0x1085020", VA = "0x1085020")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8B6B0", Offset = "0xE8B6B0")]
	private Color <UpdateVignette>b__34_0()
	{
		return default(Color);
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x1085044", Offset = "0x1085044", VA = "0x1085044")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8B6C0", Offset = "0xE8B6C0")]
	private void <UpdateVignette>b__34_1(Color x)
	{
	}
}
[Token(Token = "0x2000096")]
public class BakeryKeywordSet : MonoBehaviour
{
	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x13C2968", Offset = "0x13C2968", VA = "0x13C2968")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x13C2A4C", Offset = "0x13C2A4C", VA = "0x13C2A4C")]
	public BakeryKeywordSet()
	{
	}
}
[Token(Token = "0x2000097")]
public class JournalItemDebugger : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000098")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66968", Offset = "0xE66968")]
	private sealed class <>c
	{
		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<JournalSection> <>9__4_0;

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x1034724", Offset = "0x1034724", VA = "0x1034724")]
		public <>c()
		{
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x103472C", Offset = "0x103472C", VA = "0x103472C")]
		internal bool <Start>b__4_0(JournalSection x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float panelWidth;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[MazeTheory.Toolbox.ReadOnly]
	[SerializeField]
	private Text txt;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private JournalSection itemsSection;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas c;

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x100F098", Offset = "0x100F098", VA = "0x100F098")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x100F210", Offset = "0x100F210", VA = "0x100F210")]
	public void CreateCanvas()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x100F688", Offset = "0x100F688", VA = "0x100F688")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x100F744", Offset = "0x100F744", VA = "0x100F744")]
	private string WriteText()
	{
		return null;
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x10106E0", Offset = "0x10106E0", VA = "0x10106E0")]
	public JournalItemDebugger()
	{
	}
}
[Token(Token = "0x2000099")]
public class MT_AnimatorParameters : MonoBehaviour
{
	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator _animator;

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x11241A8", Offset = "0x11241A8", VA = "0x11241A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x112427C", Offset = "0x112427C", VA = "0x112427C")]
	public void SeTrigger(string triggerName)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x1124298", Offset = "0x1124298", VA = "0x1124298")]
	public void SetBoolTrue(string boolName)
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x11242B8", Offset = "0x11242B8", VA = "0x11242B8")]
	public void SetBoolFalse(string boolName)
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x11242D8", Offset = "0x11242D8", VA = "0x11242D8")]
	public MT_AnimatorParameters()
	{
	}
}
[Token(Token = "0x200009A")]
public class MPRuntimeAvatarMenu : MonoBehaviour
{
	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button closeDebugMenuButton;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button changeHead;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button changeTorso;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button changeHat;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Button changeGloves;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject mpDebugSpawnMenu;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _currentIndex;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private NetworkRunner _networkRunner;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RemoteAvatarViewConfiguration _viewConfiguration;

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x1020634", Offset = "0x1020634", VA = "0x1020634")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x1020B94", Offset = "0x1020B94", VA = "0x1020B94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x1020D64", Offset = "0x1020D64", VA = "0x1020D64")]
	private void ChangeToNextTorso()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1020F24", Offset = "0x1020F24", VA = "0x1020F24")]
	private void ChangeToNextHead()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x102100C", Offset = "0x102100C", VA = "0x102100C")]
	private void ChangeToNextHat()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x1020E5C", Offset = "0x1020E5C", VA = "0x1020E5C")]
	private int IncrementIndex(ICollection list, int currentIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x10210FC", Offset = "0x10210FC", VA = "0x10210FC")]
	private void ChangeToNextGloves()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x1020938", Offset = "0x1020938", VA = "0x1020938")]
	private void GetNetworkRunner()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x1020A40", Offset = "0x1020A40", VA = "0x1020A40")]
	private void GetPlayerAvatarController(NetworkRunner networkRunner)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x102129C", Offset = "0x102129C", VA = "0x102129C")]
	public void CloseMPDebugMenu()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x102131C", Offset = "0x102131C", VA = "0x102131C")]
	public MPRuntimeAvatarMenu()
	{
	}
}
[Token(Token = "0x200009B")]
public class MPRuntimeDebugMenu : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200009C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66978", Offset = "0xE66978")]
	private sealed class <>c
	{
		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityAction <>9__28_0;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static UnityAction <>9__28_1;

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static UnityAction <>9__28_2;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static UnityAction <>9__28_3;

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static UnityAction <>9__29_0;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static UnityAction <>9__29_1;

		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static UnityAction <>9__29_2;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static UnityAction <>9__29_3;

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x10355C0", Offset = "0x10355C0", VA = "0x10355C0")]
		public <>c()
		{
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x10355C8", Offset = "0x10355C8", VA = "0x10355C8")]
		internal void <OnEnable>b__28_0()
		{
		}

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x1035610", Offset = "0x1035610", VA = "0x1035610")]
		internal void <OnEnable>b__28_1()
		{
		}

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x1035658", Offset = "0x1035658", VA = "0x1035658")]
		internal void <OnEnable>b__28_2()
		{
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x10356A0", Offset = "0x10356A0", VA = "0x10356A0")]
		internal void <OnEnable>b__28_3()
		{
		}

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x10356E8", Offset = "0x10356E8", VA = "0x10356E8")]
		internal void <OnDisable>b__29_0()
		{
		}

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0x1035730", Offset = "0x1035730", VA = "0x1035730")]
		internal void <OnDisable>b__29_1()
		{
		}

		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x1035778", Offset = "0x1035778", VA = "0x1035778")]
		internal void <OnDisable>b__29_2()
		{
		}

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x10357C0", Offset = "0x10357C0", VA = "0x10357C0")]
		internal void <OnDisable>b__29_3()
		{
		}
	}

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button closeMPDebugMenuButton;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button openEmojiDebugMenuButton;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button openDebugSpawnButton;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button openPlayerListMenuButton;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button forceHostRoom1;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button forceJoinRoom1;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button forceHostOrJoinMPGame2;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button forceHostOrJoinMPGame3;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button togglePhotonStats;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button fakeErrorButton;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI playerUserID;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshProUGUI roomName;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshProUGUI isRunning;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI isClient;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshProUGUI isServer;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshProUGUI serverState;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshProUGUI playerCount;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshProUGUI gameMode;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshProUGUI NATType;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMeshProUGUI currentScene;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshProUGUI connectedPlayers;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject MPDebugMenu;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject MPDebugSpawnMenu;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject EmojiDebugMenu;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject PhontonStats;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject PlayerListMenu;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject fakeErrorMenu;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private NetworkRunner _networkRunner;

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x1021324", Offset = "0x1021324", VA = "0x1021324")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x10221AC", Offset = "0x10221AC", VA = "0x10221AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x1021894", Offset = "0x1021894", VA = "0x1021894")]
	private void UpdateDebugInfo()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x10226C4", Offset = "0x10226C4", VA = "0x10226C4")]
	private void ResetDebugLabels()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x10228D4", Offset = "0x10228D4", VA = "0x10228D4")]
	public void OpenFakeErrorDebugMenu()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x1022954", Offset = "0x1022954", VA = "0x1022954")]
	public void CloseMPDebugMenu()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x10229D4", Offset = "0x10229D4", VA = "0x10229D4")]
	public static void ForceHostNewMPGame(string roomName)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x1022B00", Offset = "0x1022B00", VA = "0x1022B00")]
	public static void ForceJoinMPGame(string roomName)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x1022C04", Offset = "0x1022C04", VA = "0x1022C04")]
	public static void ForceJoinOrHostMPGame(string roomName)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x1022D30", Offset = "0x1022D30", VA = "0x1022D30")]
	public void OpenEmojiDebugMenu()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x1022DB0", Offset = "0x1022DB0", VA = "0x1022DB0")]
	public void OpenDebugSpawnMenu()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x1022E30", Offset = "0x1022E30", VA = "0x1022E30")]
	public void TogglePhotonStats()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x1022EF8", Offset = "0x1022EF8", VA = "0x1022EF8")]
	public void OpenPlayerListDebugMenu()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x1022F78", Offset = "0x1022F78", VA = "0x1022F78")]
	public MPRuntimeDebugMenu()
	{
	}
}
[Token(Token = "0x200009D")]
public class MPRuntimePredictionDebugMenu : MonoBehaviour
{
	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button ToggleItemsDebugMaterials;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button ToggleItemsLocalPredictionRender;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HashSet<NetworkGrabbable> m_networkItems;

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x1023E14", Offset = "0x1023E14", VA = "0x1023E14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x1023F00", Offset = "0x1023F00", VA = "0x1023F00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x1023F4C", Offset = "0x1023F4C", VA = "0x1023F4C")]
	private void OnToggleItemsDebugMaterials()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x1024160", Offset = "0x1024160", VA = "0x1024160")]
	private void OnToggleItemsLocalPredictionRender()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x102406C", Offset = "0x102406C", VA = "0x102406C")]
	private void FindAllNetworkGrabbables()
	{
	}

	[Token(Token = "0x60002F9")]
	private T[] DebugFindAll<T>() where T : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x1024280", Offset = "0x1024280", VA = "0x1024280")]
	public MPRuntimePredictionDebugMenu()
	{
	}
}
[Token(Token = "0x200009E")]
public class MPRuntimeSpawnDebugMenu : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200009F")]
	public class NetworkObjectsToSpawn
	{
		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NetworkObject objectToSpawn;

		[Token(Token = "0x6000305")]
		[Address(RVA = "0x1035808", Offset = "0x1035808", VA = "0x1035808")]
		public NetworkObjectsToSpawn()
		{
		}
	}

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button closeMPDebugMenuButton;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button nextItemButton;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button prevItemButton;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button spawnItemButton;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI currentItemNext;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject MPDebugSpawnMenu;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private List<NetworkObjectsToSpawn> objectsToSpawns;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _currentIndex;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private NetworkRunner _networkRunner;

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x1024304", Offset = "0x1024304", VA = "0x1024304")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x1024698", Offset = "0x1024698", VA = "0x1024698")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1024590", Offset = "0x1024590", VA = "0x1024590")]
	private void GetNetworkRunner()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1024824", Offset = "0x1024824", VA = "0x1024824")]
	private void NextItem()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1024834", Offset = "0x1024834", VA = "0x1024834")]
	private void PrevItem()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x1024844", Offset = "0x1024844", VA = "0x1024844")]
	private void SpawnItem()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x10244A4", Offset = "0x10244A4", VA = "0x10244A4")]
	private void UpdateSelectedItem()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x10248C4", Offset = "0x10248C4", VA = "0x10248C4")]
	private void SpawnNetworkItem(NetworkObject objectToSpawn)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x1024A90", Offset = "0x1024A90", VA = "0x1024A90")]
	public void CloseMPDebugMenu()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x1024B10", Offset = "0x1024B10", VA = "0x1024B10")]
	public MPRuntimeSpawnDebugMenu()
	{
	}
}
[Token(Token = "0x20000A0")]
public class MPRuntimeVoiceMenu : MonoBehaviour
{
	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button closeDebugMenuButton;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button refreshMenuButton;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEngine.UI.Toggle muteSelfToggle;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Slider thresholdSlider;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject mpDebugSpawnMenu;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform optionsRoot;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SpeakerAudioControllerMenuInterface speakerVoicePrefab;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SpeakerAudioManager _speakerAudioManager;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<SpeakerAudioControllerMenuInterface> _currentOptions;

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x1024B94", Offset = "0x1024B94", VA = "0x1024B94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x1025344", Offset = "0x1025344", VA = "0x1025344")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x1024E7C", Offset = "0x1024E7C", VA = "0x1024E7C")]
	private void RefreshMenu()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1025448", Offset = "0x1025448", VA = "0x1025448")]
	private void UpdateLocalPlayerMuted(bool isMuted)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1025468", Offset = "0x1025468", VA = "0x1025468")]
	private void UpdateLocalPlayerDetectionThreshold(float threshold)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x1025484", Offset = "0x1025484", VA = "0x1025484")]
	public void CloseMPDebugMenu()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x1025504", Offset = "0x1025504", VA = "0x1025504")]
	public MPRuntimeVoiceMenu()
	{
	}
}
[Token(Token = "0x20000A1")]
public class XRRigNullRefHygieneChecker : MonoBehaviour
{
	[Token(Token = "0x600030D")]
	[Address(RVA = "0x135C82C", Offset = "0x135C82C", VA = "0x135C82C")]
	public XRRigNullRefHygieneChecker()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A2")]
public class IgnoreEntry
{
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string igClass;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] igProp;

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x10DC464", Offset = "0x10DC464", VA = "0x10DC464")]
	public IgnoreEntry(string Class, string[] Prop)
	{
	}
}
[Token(Token = "0x20000A3")]
public class MT_InfiniteObjectSpawner : MonoBehaviour
{
	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject objectToSpawn;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[MazeTheory.Toolbox.ReadOnly]
	private GameObject _currentSpawnedObject;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[MazeTheory.Toolbox.ReadOnly]
	private HVRGrabbable _currentGrabbable;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[MazeTheory.Toolbox.ReadOnly]
	private MT_Respawner _currentRespawner;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float repsawnTime;

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x124AED0", Offset = "0x124AED0", VA = "0x124AED0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x124AEF4", Offset = "0x124AEF4", VA = "0x124AEF4")]
	private void ConfigureOriginalItem()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x124B1F4", Offset = "0x124B1F4", VA = "0x124B1F4")]
	public void CurrentObjectGrabbed(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x124B2A8", Offset = "0x124B2A8", VA = "0x124B2A8")]
	public void CurrentObjectReleased(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x124B384", Offset = "0x124B384", VA = "0x124B384")]
	public bool CurrentObjectIsWithinRespawnDistanceThreshold()
	{
		return default(bool);
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x124B418", Offset = "0x124B418", VA = "0x124B418")]
	public void ForceRespawn()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x124AF14", Offset = "0x124AF14", VA = "0x124AF14")]
	private void Respawn()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x124B4F8", Offset = "0x124B4F8", VA = "0x124B4F8")]
	public void Despawn()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x124B5C4", Offset = "0x124B5C4", VA = "0x124B5C4")]
	public MT_InfiniteObjectSpawner()
	{
	}
}
[Token(Token = "0x20000A4")]
public sealed class MT_DialogueHandler : IGameModule
{
	[Token(Token = "0x20000A5")]
	private class TimelineBinding
	{
		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MT_NPCGameplay NPC;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DialogueID;

		[Token(Token = "0x6000326")]
		[Address(RVA = "0x10369CC", Offset = "0x10369CC", VA = "0x10369CC")]
		public TimelineBinding()
		{
		}
	}

	[Token(Token = "0x20000A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66988", Offset = "0xE66988")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MT_NPCGameplay npc;

		[Token(Token = "0x6000327")]
		[Address(RVA = "0x1036940", Offset = "0x1036940", VA = "0x1036940")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0x1036948", Offset = "0x1036948", VA = "0x1036948")]
		internal bool <RegisterNPC>b__0(TimelineBinding x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66998", Offset = "0xE66998")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MT_NPCGameplay npc;

		[Token(Token = "0x6000329")]
		[Address(RVA = "0x1036758", Offset = "0x1036758", VA = "0x1036758")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0x1036760", Offset = "0x1036760", VA = "0x1036760")]
		internal bool <RemoveNPC>b__0(TimelineBinding x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE669A8", Offset = "0xE669A8")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string characterID;

		[Token(Token = "0x600032B")]
		[Address(RVA = "0x10367E4", Offset = "0x10367E4", VA = "0x10367E4")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x600032C")]
		[Address(RVA = "0x10367EC", Offset = "0x10367EC", VA = "0x10367EC")]
		internal bool <SetTimelineBinding>b__0(TimelineBinding x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE669B8", Offset = "0xE669B8")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string dialogueID;

		[Token(Token = "0x600032D")]
		[Address(RVA = "0x103681C", Offset = "0x103681C", VA = "0x103681C")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x600032E")]
		[Address(RVA = "0x1036824", Offset = "0x1036824", VA = "0x1036824")]
		internal bool <GetTimelineBinding>b__0(TimelineBinding x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE669C8", Offset = "0xE669C8")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onComplete;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayableDirector director;

		[Token(Token = "0x600032F")]
		[Address(RVA = "0x1036848", Offset = "0x1036848", VA = "0x1036848")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6000330")]
		[Address(RVA = "0x1036850", Offset = "0x1036850", VA = "0x1036850")]
		internal bool <StartDialogueTimeline>b__0(TimelineBinding x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000331")]
		[Address(RVA = "0x1036874", Offset = "0x1036874", VA = "0x1036874")]
		internal void <StartDialogueTimeline>g__OnCurrentDirectorOnStopped|1(PlayableDirector obj)
		{
		}
	}

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly List<TimelineBinding> _timelineBindings;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Dictionary<string, DialogueEventTrigger> _dialogueEventTriggers;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly DialogueDatabase Database;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool _initialized;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static DialogueBus _dialogueBusData;

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x1135A64", Offset = "0x1135A64", VA = "0x1135A64")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x1135AC8", Offset = "0x1135AC8", VA = "0x1135AC8", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x1135BE4", Offset = "0x1135BE4", VA = "0x1135BE4", Slot = "5")]
	public void Terminate()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x1135C5C", Offset = "0x1135C5C", VA = "0x1135C5C")]
	public void RegisterNPC(MT_NPCGameplay npc)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1135DE4", Offset = "0x1135DE4", VA = "0x1135DE4")]
	public void RemoveNPC(MT_NPCGameplay npc)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x1135F1C", Offset = "0x1135F1C", VA = "0x1135F1C")]
	public void SetTimelineBinding(string characterID, string dialogueID)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x11360A0", Offset = "0x11360A0", VA = "0x11360A0")]
	public MT_NPCGameplay GetTimelineBinding(string dialogueID)
	{
		return null;
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x11361A8", Offset = "0x11361A8", VA = "0x11361A8")]
	public void RegisterDialogueEventTrigger(DialogueEventTrigger eventTrigger)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x1136250", Offset = "0x1136250", VA = "0x1136250")]
	public void RemoveDialogueEventTrigger(DialogueEventTrigger eventTrigger)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x11362F4", Offset = "0x11362F4", VA = "0x11362F4")]
	public void TriggerDialogueEvent(string id)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x11363A4", Offset = "0x11363A4", VA = "0x11363A4")]
	public void StartDialogueTimeline(string id, Action onComplete)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x1136698", Offset = "0x1136698", VA = "0x1136698")]
	public static string GetCharacterDialogueBus(string charaId)
	{
		return null;
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x1136710", Offset = "0x1136710", VA = "0x1136710")]
	public MT_DialogueHandler()
	{
	}
}
[Token(Token = "0x20000AB")]
public enum TimelineEventType
{
	[Token(Token = "0x4000353")]
	FlowCanvasFunction,
	[Token(Token = "0x4000354")]
	LookAtPlayer,
	[Token(Token = "0x4000355")]
	LookAtPlayerEyesOnly,
	[Token(Token = "0x4000356")]
	LookAt,
	[Token(Token = "0x4000357")]
	LookAtEyesOnly,
	[Token(Token = "0x4000358")]
	StopLookAt,
	[Token(Token = "0x4000359")]
	AimAt,
	[Token(Token = "0x400035A")]
	AimAtPlayerHead,
	[Token(Token = "0x400035B")]
	AimAtPlayerBody,
	[Token(Token = "0x400035C")]
	StopAimingAt,
	[Token(Token = "0x400035D")]
	PlayerSitDown,
	[Token(Token = "0x400035E")]
	PlayerStandUp,
	[Token(Token = "0x400035F")]
	EnablePlayerMovement,
	[Token(Token = "0x4000360")]
	DisablePlayerMovement,
	[Token(Token = "0x4000361")]
	EnablePlayerSnapTurn,
	[Token(Token = "0x4000362")]
	DisablePlayerSnapTurn,
	[Token(Token = "0x4000363")]
	EnablePlayerTeleport,
	[Token(Token = "0x4000364")]
	DisablePlayerTeleport,
	[Token(Token = "0x4000365")]
	OpenNpcJournal,
	[Token(Token = "0x4000366")]
	CloseNpcJournal
}
[Token(Token = "0x20000AC")]
public class GameOverOrEndOfDemo : MonoBehaviour
{
	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isGameOver;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject gameOverParent;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject demoEndParent;

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x10D15C0", Offset = "0x10D15C0", VA = "0x10D15C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x10D167C", Offset = "0x10D167C", VA = "0x10D167C")]
	public GameOverOrEndOfDemo()
	{
	}
}
[Token(Token = "0x20000AD")]
public class Controls : IInputActionCollection2, IInputActionCollection, IEnumerable<InputAction>, IEnumerable, IDisposable
{
	[Token(Token = "0x20000AE")]
	public struct HeadMovementActions
	{
		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x17000060")]
		public InputAction VRCameraRotate
		{
			[Token(Token = "0x600035D")]
			[Address(RVA = "0x16ABC24", Offset = "0x16ABC24", VA = "0x16ABC24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		public InputAction VRCameraMove
		{
			[Token(Token = "0x600035E")]
			[Address(RVA = "0x16ABC40", Offset = "0x16ABC40", VA = "0x16ABC40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		public bool enabled
		{
			[Token(Token = "0x6000362")]
			[Address(RVA = "0x16ABCC8", Offset = "0x16ABCC8", VA = "0x16ABCC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0x16ABC1C", Offset = "0x16ABC1C", VA = "0x16ABC1C")]
		public HeadMovementActions(Controls wrapper)
		{
		}

		[Token(Token = "0x600035F")]
		[Address(RVA = "0x16ABC5C", Offset = "0x16ABC5C", VA = "0x16ABC5C")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6000360")]
		[Address(RVA = "0x16ABC78", Offset = "0x16ABC78", VA = "0x16ABC78")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000361")]
		[Address(RVA = "0x16ABCA0", Offset = "0x16ABCA0", VA = "0x16ABCA0")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0x16ABCF0", Offset = "0x16ABCF0", VA = "0x16ABCF0")]
		public static implicit operator InputActionMap(HeadMovementActions set)
		{
			return null;
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0x16ABD08", Offset = "0x16ABD08", VA = "0x16ABD08")]
		public void SetCallbacks(IHeadMovementActions instance)
		{
		}
	}

	[Token(Token = "0x20000AF")]
	public struct LocomotionActions
	{
		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x17000063")]
		public InputAction Move
		{
			[Token(Token = "0x6000366")]
			[Address(RVA = "0x1028F6C", Offset = "0x1028F6C", VA = "0x1028F6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		public InputAction MouseLook
		{
			[Token(Token = "0x6000367")]
			[Address(RVA = "0x1028F88", Offset = "0x1028F88", VA = "0x1028F88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		public InputAction GamepadLook
		{
			[Token(Token = "0x6000368")]
			[Address(RVA = "0x1028FA4", Offset = "0x1028FA4", VA = "0x1028FA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		public InputAction Crouch
		{
			[Token(Token = "0x6000369")]
			[Address(RVA = "0x1028FC0", Offset = "0x1028FC0", VA = "0x1028FC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		public bool enabled
		{
			[Token(Token = "0x600036D")]
			[Address(RVA = "0x1029048", Offset = "0x1029048", VA = "0x1029048")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0x1028F64", Offset = "0x1028F64", VA = "0x1028F64")]
		public LocomotionActions(Controls wrapper)
		{
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0x1028FDC", Offset = "0x1028FDC", VA = "0x1028FDC")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0x1028FF8", Offset = "0x1028FF8", VA = "0x1028FF8")]
		public void Enable()
		{
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0x1029020", Offset = "0x1029020", VA = "0x1029020")]
		public void Disable()
		{
		}

		[Token(Token = "0x600036E")]
		[Address(RVA = "0x1029070", Offset = "0x1029070", VA = "0x1029070")]
		public static implicit operator InputActionMap(LocomotionActions set)
		{
			return null;
		}

		[Token(Token = "0x600036F")]
		[Address(RVA = "0x1029088", Offset = "0x1029088", VA = "0x1029088")]
		public void SetCallbacks(ILocomotionActions instance)
		{
		}
	}

	[Token(Token = "0x20000B0")]
	public struct TeleportActions
	{
		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x17000068")]
		public InputAction Teleport
		{
			[Token(Token = "0x6000371")]
			[Address(RVA = "0x102D58C", Offset = "0x102D58C", VA = "0x102D58C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		public InputAction GetTeleportPosition
		{
			[Token(Token = "0x6000372")]
			[Address(RVA = "0x102D5A8", Offset = "0x102D5A8", VA = "0x102D5A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		public InputAction StartPointing
		{
			[Token(Token = "0x6000373")]
			[Address(RVA = "0x102D5C4", Offset = "0x102D5C4", VA = "0x102D5C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		public bool enabled
		{
			[Token(Token = "0x6000377")]
			[Address(RVA = "0x102D64C", Offset = "0x102D64C", VA = "0x102D64C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000370")]
		[Address(RVA = "0x102D584", Offset = "0x102D584", VA = "0x102D584")]
		public TeleportActions(Controls wrapper)
		{
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0x102D5E0", Offset = "0x102D5E0", VA = "0x102D5E0")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0x102D5FC", Offset = "0x102D5FC", VA = "0x102D5FC")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000376")]
		[Address(RVA = "0x102D624", Offset = "0x102D624", VA = "0x102D624")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000378")]
		[Address(RVA = "0x102D674", Offset = "0x102D674", VA = "0x102D674")]
		public static implicit operator InputActionMap(TeleportActions set)
		{
			return null;
		}

		[Token(Token = "0x6000379")]
		[Address(RVA = "0x102D68C", Offset = "0x102D68C", VA = "0x102D68C")]
		public void SetCallbacks(ITeleportActions instance)
		{
		}
	}

	[Token(Token = "0x20000B1")]
	public struct SnapTurnActions
	{
		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x1700006C")]
		public InputAction Rotate
		{
			[Token(Token = "0x600037B")]
			[Address(RVA = "0x102D064", Offset = "0x102D064", VA = "0x102D064")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006D")]
		public bool enabled
		{
			[Token(Token = "0x600037F")]
			[Address(RVA = "0x102D0EC", Offset = "0x102D0EC", VA = "0x102D0EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600037A")]
		[Address(RVA = "0x102D05C", Offset = "0x102D05C", VA = "0x102D05C")]
		public SnapTurnActions(Controls wrapper)
		{
		}

		[Token(Token = "0x600037C")]
		[Address(RVA = "0x102D080", Offset = "0x102D080", VA = "0x102D080")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0x102D09C", Offset = "0x102D09C", VA = "0x102D09C")]
		public void Enable()
		{
		}

		[Token(Token = "0x600037E")]
		[Address(RVA = "0x102D0C4", Offset = "0x102D0C4", VA = "0x102D0C4")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000380")]
		[Address(RVA = "0x102D114", Offset = "0x102D114", VA = "0x102D114")]
		public static implicit operator InputActionMap(SnapTurnActions set)
		{
			return null;
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0x102D12C", Offset = "0x102D12C", VA = "0x102D12C")]
		public void SetCallbacks(ISnapTurnActions instance)
		{
		}
	}

	[Token(Token = "0x20000B2")]
	public struct HandsActions
	{
		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x1700006E")]
		public InputAction RightHandMove
		{
			[Token(Token = "0x6000383")]
			[Address(RVA = "0x16AA67C", Offset = "0x16AA67C", VA = "0x16AA67C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		public InputAction RightHandRotate
		{
			[Token(Token = "0x6000384")]
			[Address(RVA = "0x16AA698", Offset = "0x16AA698", VA = "0x16AA698")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		public InputAction LeftHandMove
		{
			[Token(Token = "0x6000385")]
			[Address(RVA = "0x16AA6B4", Offset = "0x16AA6B4", VA = "0x16AA6B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		public InputAction LeftHandRotate
		{
			[Token(Token = "0x6000386")]
			[Address(RVA = "0x16AA6D0", Offset = "0x16AA6D0", VA = "0x16AA6D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		public bool enabled
		{
			[Token(Token = "0x600038A")]
			[Address(RVA = "0x16AA758", Offset = "0x16AA758", VA = "0x16AA758")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000382")]
		[Address(RVA = "0x16AA674", Offset = "0x16AA674", VA = "0x16AA674")]
		public HandsActions(Controls wrapper)
		{
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0x16AA6EC", Offset = "0x16AA6EC", VA = "0x16AA6EC")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0x16AA708", Offset = "0x16AA708", VA = "0x16AA708")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0x16AA730", Offset = "0x16AA730", VA = "0x16AA730")]
		public void Disable()
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0x16AA780", Offset = "0x16AA780", VA = "0x16AA780")]
		public static implicit operator InputActionMap(HandsActions set)
		{
			return null;
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x16AA798", Offset = "0x16AA798", VA = "0x16AA798")]
		public void SetCallbacks(IHandsActions instance)
		{
		}
	}

	[Token(Token = "0x20000B3")]
	public struct InteractionActions
	{
		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x17000073")]
		public InputAction RightGrab
		{
			[Token(Token = "0x600038E")]
			[Address(RVA = "0x16ACA44", Offset = "0x16ACA44", VA = "0x16ACA44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		public InputAction LeftGrab
		{
			[Token(Token = "0x600038F")]
			[Address(RVA = "0x16ACA60", Offset = "0x16ACA60", VA = "0x16ACA60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		public InputAction RightSqueeze
		{
			[Token(Token = "0x6000390")]
			[Address(RVA = "0x16ACA7C", Offset = "0x16ACA7C", VA = "0x16ACA7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		public InputAction LeftSqueeze
		{
			[Token(Token = "0x6000391")]
			[Address(RVA = "0x16ACA98", Offset = "0x16ACA98", VA = "0x16ACA98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		public InputAction RightUse
		{
			[Token(Token = "0x6000392")]
			[Address(RVA = "0x16ACAB4", Offset = "0x16ACAB4", VA = "0x16ACAB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		public InputAction LeftUse
		{
			[Token(Token = "0x6000393")]
			[Address(RVA = "0x16ACAD0", Offset = "0x16ACAD0", VA = "0x16ACAD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		public bool enabled
		{
			[Token(Token = "0x6000397")]
			[Address(RVA = "0x16ACB58", Offset = "0x16ACB58", VA = "0x16ACB58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0x16ACA3C", Offset = "0x16ACA3C", VA = "0x16ACA3C")]
		public InteractionActions(Controls wrapper)
		{
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0x16ACAEC", Offset = "0x16ACAEC", VA = "0x16ACAEC")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6000395")]
		[Address(RVA = "0x16ACB08", Offset = "0x16ACB08", VA = "0x16ACB08")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0x16ACB30", Offset = "0x16ACB30", VA = "0x16ACB30")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0x16ACB80", Offset = "0x16ACB80", VA = "0x16ACB80")]
		public static implicit operator InputActionMap(InteractionActions set)
		{
			return null;
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0x16ACB98", Offset = "0x16ACB98", VA = "0x16ACB98")]
		public void SetCallbacks(IInteractionActions instance)
		{
		}
	}

	[Token(Token = "0x20000B4")]
	public struct UIInteractionActions
	{
		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x1700007A")]
		public InputAction PressLeftButton
		{
			[Token(Token = "0x600039B")]
			[Address(RVA = "0x102E23C", Offset = "0x102E23C", VA = "0x102E23C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		public InputAction PressRightButton
		{
			[Token(Token = "0x600039C")]
			[Address(RVA = "0x102E258", Offset = "0x102E258", VA = "0x102E258")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		public InputAction GetMousePosition
		{
			[Token(Token = "0x600039D")]
			[Address(RVA = "0x102E274", Offset = "0x102E274", VA = "0x102E274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		public bool enabled
		{
			[Token(Token = "0x60003A1")]
			[Address(RVA = "0x102E2FC", Offset = "0x102E2FC", VA = "0x102E2FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0x102E234", Offset = "0x102E234", VA = "0x102E234")]
		public UIInteractionActions(Controls wrapper)
		{
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0x102E290", Offset = "0x102E290", VA = "0x102E290")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0x102E2AC", Offset = "0x102E2AC", VA = "0x102E2AC")]
		public void Enable()
		{
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x102E2D4", Offset = "0x102E2D4", VA = "0x102E2D4")]
		public void Disable()
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x102E324", Offset = "0x102E324", VA = "0x102E324")]
		public static implicit operator InputActionMap(UIInteractionActions set)
		{
			return null;
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x102E33C", Offset = "0x102E33C", VA = "0x102E33C")]
		public void SetCallbacks(IUIInteractionActions instance)
		{
		}
	}

	[Token(Token = "0x20000B5")]
	public struct MenuActions
	{
		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x1700007E")]
		public InputAction VRToggleDebugMenu
		{
			[Token(Token = "0x60003A5")]
			[Address(RVA = "0x1029FE0", Offset = "0x1029FE0", VA = "0x1029FE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007F")]
		public InputAction VRTogglePauseMenu
		{
			[Token(Token = "0x60003A6")]
			[Address(RVA = "0x1029FFC", Offset = "0x1029FFC", VA = "0x1029FFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		public InputAction FastForward
		{
			[Token(Token = "0x60003A7")]
			[Address(RVA = "0x102A018", Offset = "0x102A018", VA = "0x102A018")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		public bool enabled
		{
			[Token(Token = "0x60003AB")]
			[Address(RVA = "0x102A0A0", Offset = "0x102A0A0", VA = "0x102A0A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x1029FD8", Offset = "0x1029FD8", VA = "0x1029FD8")]
		public MenuActions(Controls wrapper)
		{
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x102A034", Offset = "0x102A034", VA = "0x102A034")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x102A050", Offset = "0x102A050", VA = "0x102A050")]
		public void Enable()
		{
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x102A078", Offset = "0x102A078", VA = "0x102A078")]
		public void Disable()
		{
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x102A0C8", Offset = "0x102A0C8", VA = "0x102A0C8")]
		public static implicit operator InputActionMap(MenuActions set)
		{
			return null;
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x102A0E0", Offset = "0x102A0E0", VA = "0x102A0E0")]
		public void SetCallbacks(IMenuActions instance)
		{
		}
	}

	[Token(Token = "0x20000B6")]
	public struct SceneViewActions
	{
		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x17000082")]
		public InputAction EnterSceneViewMode
		{
			[Token(Token = "0x60003AF")]
			[Address(RVA = "0x102BAB8", Offset = "0x102BAB8", VA = "0x102BAB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		public InputAction XZMove
		{
			[Token(Token = "0x60003B0")]
			[Address(RVA = "0x102BAD4", Offset = "0x102BAD4", VA = "0x102BAD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		public InputAction YMove
		{
			[Token(Token = "0x60003B1")]
			[Address(RVA = "0x102BAF0", Offset = "0x102BAF0", VA = "0x102BAF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000085")]
		public InputAction VRCameraRotate
		{
			[Token(Token = "0x60003B2")]
			[Address(RVA = "0x102BB0C", Offset = "0x102BB0C", VA = "0x102BB0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		public bool enabled
		{
			[Token(Token = "0x60003B6")]
			[Address(RVA = "0x102BB94", Offset = "0x102BB94", VA = "0x102BB94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x102BAB0", Offset = "0x102BAB0", VA = "0x102BAB0")]
		public SceneViewActions(Controls wrapper)
		{
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x102BB28", Offset = "0x102BB28", VA = "0x102BB28")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x102BB44", Offset = "0x102BB44", VA = "0x102BB44")]
		public void Enable()
		{
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x102BB6C", Offset = "0x102BB6C", VA = "0x102BB6C")]
		public void Disable()
		{
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x102BBBC", Offset = "0x102BBBC", VA = "0x102BBBC")]
		public static implicit operator InputActionMap(SceneViewActions set)
		{
			return null;
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x102BBD4", Offset = "0x102BBD4", VA = "0x102BBD4")]
		public void SetCallbacks(ISceneViewActions instance)
		{
		}
	}

	[Token(Token = "0x20000B7")]
	public struct PlayerModeActions
	{
		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x17000087")]
		public InputAction ChangePlayerMode
		{
			[Token(Token = "0x60003BA")]
			[Address(RVA = "0x102AC94", Offset = "0x102AC94", VA = "0x102AC94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		public bool enabled
		{
			[Token(Token = "0x60003BE")]
			[Address(RVA = "0x102AD1C", Offset = "0x102AD1C", VA = "0x102AD1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x102AC8C", Offset = "0x102AC8C", VA = "0x102AC8C")]
		public PlayerModeActions(Controls wrapper)
		{
		}

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x102ACB0", Offset = "0x102ACB0", VA = "0x102ACB0")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x102ACCC", Offset = "0x102ACCC", VA = "0x102ACCC")]
		public void Enable()
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x102ACF4", Offset = "0x102ACF4", VA = "0x102ACF4")]
		public void Disable()
		{
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x102AD44", Offset = "0x102AD44", VA = "0x102AD44")]
		public static implicit operator InputActionMap(PlayerModeActions set)
		{
			return null;
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x102AD5C", Offset = "0x102AD5C", VA = "0x102AD5C")]
		public void SetCallbacks(IPlayerModeActions instance)
		{
		}
	}

	[Token(Token = "0x20000B8")]
	public struct HandGesturesActions
	{
		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x17000089")]
		public InputAction WaveRight
		{
			[Token(Token = "0x60003C2")]
			[Address(RVA = "0x16A6148", Offset = "0x16A6148", VA = "0x16A6148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		public InputAction WaveLeft
		{
			[Token(Token = "0x60003C3")]
			[Address(RVA = "0x16A6164", Offset = "0x16A6164", VA = "0x16A6164")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008B")]
		public InputAction PointRight
		{
			[Token(Token = "0x60003C4")]
			[Address(RVA = "0x16A6180", Offset = "0x16A6180", VA = "0x16A6180")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008C")]
		public InputAction PointLeft
		{
			[Token(Token = "0x60003C5")]
			[Address(RVA = "0x16A619C", Offset = "0x16A619C", VA = "0x16A619C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		public InputAction OkRight
		{
			[Token(Token = "0x60003C6")]
			[Address(RVA = "0x16A61B8", Offset = "0x16A61B8", VA = "0x16A61B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		public InputAction OkLeft
		{
			[Token(Token = "0x60003C7")]
			[Address(RVA = "0x16A61D4", Offset = "0x16A61D4", VA = "0x16A61D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		public InputAction ThumbsUpRight
		{
			[Token(Token = "0x60003C8")]
			[Address(RVA = "0x16A61F0", Offset = "0x16A61F0", VA = "0x16A61F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		public InputAction ThumbsUpLeft
		{
			[Token(Token = "0x60003C9")]
			[Address(RVA = "0x16A620C", Offset = "0x16A620C", VA = "0x16A620C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		public InputAction FistRight
		{
			[Token(Token = "0x60003CA")]
			[Address(RVA = "0x16A6228", Offset = "0x16A6228", VA = "0x16A6228")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000092")]
		public InputAction FistLeft
		{
			[Token(Token = "0x60003CB")]
			[Address(RVA = "0x16A6244", Offset = "0x16A6244", VA = "0x16A6244")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		public InputAction PressTriggerRight
		{
			[Token(Token = "0x60003CC")]
			[Address(RVA = "0x16A6260", Offset = "0x16A6260", VA = "0x16A6260")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000094")]
		public InputAction PressTriggerLeft
		{
			[Token(Token = "0x60003CD")]
			[Address(RVA = "0x16A627C", Offset = "0x16A627C", VA = "0x16A627C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		public InputAction RestThumbRight
		{
			[Token(Token = "0x60003CE")]
			[Address(RVA = "0x16A6298", Offset = "0x16A6298", VA = "0x16A6298")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		public InputAction RestThumbLeft
		{
			[Token(Token = "0x60003CF")]
			[Address(RVA = "0x16A62B4", Offset = "0x16A62B4", VA = "0x16A62B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000097")]
		public InputAction PressGripRight
		{
			[Token(Token = "0x60003D0")]
			[Address(RVA = "0x16A62D0", Offset = "0x16A62D0", VA = "0x16A62D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		public InputAction PressGripLeft
		{
			[Token(Token = "0x60003D1")]
			[Address(RVA = "0x16A62EC", Offset = "0x16A62EC", VA = "0x16A62EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		public InputAction QuickMoveRight
		{
			[Token(Token = "0x60003D2")]
			[Address(RVA = "0x16A6308", Offset = "0x16A6308", VA = "0x16A6308")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009A")]
		public InputAction QuickMoveLeft
		{
			[Token(Token = "0x60003D3")]
			[Address(RVA = "0x16A6324", Offset = "0x16A6324", VA = "0x16A6324")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		public bool enabled
		{
			[Token(Token = "0x60003D7")]
			[Address(RVA = "0x16A63AC", Offset = "0x16A63AC", VA = "0x16A63AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x16A6140", Offset = "0x16A6140", VA = "0x16A6140")]
		public HandGesturesActions(Controls wrapper)
		{
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x16A6340", Offset = "0x16A6340", VA = "0x16A6340")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x16A635C", Offset = "0x16A635C", VA = "0x16A635C")]
		public void Enable()
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x16A6384", Offset = "0x16A6384", VA = "0x16A6384")]
		public void Disable()
		{
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x16A63D4", Offset = "0x16A63D4", VA = "0x16A63D4")]
		public static implicit operator InputActionMap(HandGesturesActions set)
		{
			return null;
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x16A63EC", Offset = "0x16A63EC", VA = "0x16A63EC")]
		public void SetCallbacks(IHandGesturesActions instance)
		{
		}
	}

	[Token(Token = "0x20000B9")]
	public struct HeadGesturesActions
	{
		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x1700009C")]
		public InputAction HeadMovement
		{
			[Token(Token = "0x60003DB")]
			[Address(RVA = "0x16AB6F0", Offset = "0x16AB6F0", VA = "0x16AB6F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		public bool enabled
		{
			[Token(Token = "0x60003DF")]
			[Address(RVA = "0x16AB778", Offset = "0x16AB778", VA = "0x16AB778")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x16AB6E8", Offset = "0x16AB6E8", VA = "0x16AB6E8")]
		public HeadGesturesActions(Controls wrapper)
		{
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x16AB70C", Offset = "0x16AB70C", VA = "0x16AB70C")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x16AB728", Offset = "0x16AB728", VA = "0x16AB728")]
		public void Enable()
		{
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x16AB750", Offset = "0x16AB750", VA = "0x16AB750")]
		public void Disable()
		{
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x16AB7A0", Offset = "0x16AB7A0", VA = "0x16AB7A0")]
		public static implicit operator InputActionMap(HeadGesturesActions set)
		{
			return null;
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x16AB7B8", Offset = "0x16AB7B8", VA = "0x16AB7B8")]
		public void SetCallbacks(IHeadGesturesActions instance)
		{
		}
	}

	[Token(Token = "0x20000BA")]
	public struct SaveGameActions
	{
		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x1700009E")]
		public InputAction Save
		{
			[Token(Token = "0x60003E3")]
			[Address(RVA = "0x102B1C0", Offset = "0x102B1C0", VA = "0x102B1C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009F")]
		public InputAction Load
		{
			[Token(Token = "0x60003E4")]
			[Address(RVA = "0x102B1DC", Offset = "0x102B1DC", VA = "0x102B1DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		public bool enabled
		{
			[Token(Token = "0x60003E8")]
			[Address(RVA = "0x102B264", Offset = "0x102B264", VA = "0x102B264")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x102B1B8", Offset = "0x102B1B8", VA = "0x102B1B8")]
		public SaveGameActions(Controls wrapper)
		{
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x102B1F8", Offset = "0x102B1F8", VA = "0x102B1F8")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x102B214", Offset = "0x102B214", VA = "0x102B214")]
		public void Enable()
		{
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x102B23C", Offset = "0x102B23C", VA = "0x102B23C")]
		public void Disable()
		{
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x102B28C", Offset = "0x102B28C", VA = "0x102B28C")]
		public static implicit operator InputActionMap(SaveGameActions set)
		{
			return null;
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x102B2A4", Offset = "0x102B2A4", VA = "0x102B2A4")]
		public void SetCallbacks(ISaveGameActions instance)
		{
		}
	}

	[Token(Token = "0x20000BB")]
	public struct InventoryActions
	{
		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x170000A1")]
		public InputAction OpenLeftHand
		{
			[Token(Token = "0x60003EC")]
			[Address(RVA = "0x1028140", Offset = "0x1028140", VA = "0x1028140")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		public bool enabled
		{
			[Token(Token = "0x60003F0")]
			[Address(RVA = "0x10281C8", Offset = "0x10281C8", VA = "0x10281C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x1028138", Offset = "0x1028138", VA = "0x1028138")]
		public InventoryActions(Controls wrapper)
		{
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x102815C", Offset = "0x102815C", VA = "0x102815C")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x1028178", Offset = "0x1028178", VA = "0x1028178")]
		public void Enable()
		{
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x10281A0", Offset = "0x10281A0", VA = "0x10281A0")]
		public void Disable()
		{
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x10281F0", Offset = "0x10281F0", VA = "0x10281F0")]
		public static implicit operator InputActionMap(InventoryActions set)
		{
			return null;
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x1028208", Offset = "0x1028208", VA = "0x1028208")]
		public void SetCallbacks(IInventoryActions instance)
		{
		}
	}

	[Token(Token = "0x20000BC")]
	public struct JournalActions
	{
		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x170000A3")]
		public InputAction GrabRightHand
		{
			[Token(Token = "0x60003F4")]
			[Address(RVA = "0x1028674", Offset = "0x1028674", VA = "0x1028674")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		public InputAction GrabLeftHand
		{
			[Token(Token = "0x60003F5")]
			[Address(RVA = "0x1028690", Offset = "0x1028690", VA = "0x1028690")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		public bool enabled
		{
			[Token(Token = "0x60003F9")]
			[Address(RVA = "0x1028718", Offset = "0x1028718", VA = "0x1028718")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x102866C", Offset = "0x102866C", VA = "0x102866C")]
		public JournalActions(Controls wrapper)
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x10286AC", Offset = "0x10286AC", VA = "0x10286AC")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x10286C8", Offset = "0x10286C8", VA = "0x10286C8")]
		public void Enable()
		{
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x10286F0", Offset = "0x10286F0", VA = "0x10286F0")]
		public void Disable()
		{
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x1028740", Offset = "0x1028740", VA = "0x1028740")]
		public static implicit operator InputActionMap(JournalActions set)
		{
			return null;
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x1028758", Offset = "0x1028758", VA = "0x1028758")]
		public void SetCallbacks(IJournalActions instance)
		{
		}
	}

	[Token(Token = "0x20000BD")]
	public struct InstinctSystemActions
	{
		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x170000A6")]
		public InputAction TriggerInstincts
		{
			[Token(Token = "0x60003FD")]
			[Address(RVA = "0x16AC510", Offset = "0x16AC510", VA = "0x16AC510")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A7")]
		public bool enabled
		{
			[Token(Token = "0x6000401")]
			[Address(RVA = "0x16AC598", Offset = "0x16AC598", VA = "0x16AC598")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x16AC508", Offset = "0x16AC508", VA = "0x16AC508")]
		public InstinctSystemActions(Controls wrapper)
		{
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x16AC52C", Offset = "0x16AC52C", VA = "0x16AC52C")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x16AC548", Offset = "0x16AC548", VA = "0x16AC548")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x16AC570", Offset = "0x16AC570", VA = "0x16AC570")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x16AC5C0", Offset = "0x16AC5C0", VA = "0x16AC5C0")]
		public static implicit operator InputActionMap(InstinctSystemActions set)
		{
			return null;
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x16AC5D8", Offset = "0x16AC5D8", VA = "0x16AC5D8")]
		public void SetCallbacks(IInstinctSystemActions instance)
		{
		}
	}

	[Token(Token = "0x20000BE")]
	public struct SittingActions
	{
		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x170000A8")]
		public InputAction ToggleSitStand
		{
			[Token(Token = "0x6000405")]
			[Address(RVA = "0x102CB30", Offset = "0x102CB30", VA = "0x102CB30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		public bool enabled
		{
			[Token(Token = "0x6000409")]
			[Address(RVA = "0x102CBB8", Offset = "0x102CBB8", VA = "0x102CBB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x102CB28", Offset = "0x102CB28", VA = "0x102CB28")]
		public SittingActions(Controls wrapper)
		{
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x102CB4C", Offset = "0x102CB4C", VA = "0x102CB4C")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x102CB68", Offset = "0x102CB68", VA = "0x102CB68")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x102CB90", Offset = "0x102CB90", VA = "0x102CB90")]
		public void Disable()
		{
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x102CBE0", Offset = "0x102CBE0", VA = "0x102CBE0")]
		public static implicit operator InputActionMap(SittingActions set)
		{
			return null;
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x102CBF8", Offset = "0x102CBF8", VA = "0x102CBF8")]
		public void SetCallbacks(ISittingActions instance)
		{
		}
	}

	[Token(Token = "0x20000BF")]
	public struct BoundHandsActions
	{
		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x170000AA")]
		public InputAction LeftHandRotate
		{
			[Token(Token = "0x600040D")]
			[Address(RVA = "0x16A4DE8", Offset = "0x16A4DE8", VA = "0x16A4DE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		public InputAction RightHandRotate
		{
			[Token(Token = "0x600040E")]
			[Address(RVA = "0x16A4E04", Offset = "0x16A4E04", VA = "0x16A4E04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		public bool enabled
		{
			[Token(Token = "0x6000412")]
			[Address(RVA = "0x16A4E8C", Offset = "0x16A4E8C", VA = "0x16A4E8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x16A4DE0", Offset = "0x16A4DE0", VA = "0x16A4DE0")]
		public BoundHandsActions(Controls wrapper)
		{
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0x16A4E20", Offset = "0x16A4E20", VA = "0x16A4E20")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0x16A4E3C", Offset = "0x16A4E3C", VA = "0x16A4E3C")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x16A4E64", Offset = "0x16A4E64", VA = "0x16A4E64")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x16A4EB4", Offset = "0x16A4EB4", VA = "0x16A4EB4")]
		public static implicit operator InputActionMap(BoundHandsActions set)
		{
			return null;
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x16A4ECC", Offset = "0x16A4ECC", VA = "0x16A4ECC")]
		public void SetCallbacks(IBoundHandsActions instance)
		{
		}
	}

	[Token(Token = "0x20000C0")]
	public struct CreditsActions
	{
		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x170000AD")]
		public InputAction Skip
		{
			[Token(Token = "0x6000416")]
			[Address(RVA = "0x16A56E0", Offset = "0x16A56E0", VA = "0x16A56E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		public bool enabled
		{
			[Token(Token = "0x600041A")]
			[Address(RVA = "0x16A5768", Offset = "0x16A5768", VA = "0x16A5768")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x16A56D8", Offset = "0x16A56D8", VA = "0x16A56D8")]
		public CreditsActions(Controls wrapper)
		{
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x16A56FC", Offset = "0x16A56FC", VA = "0x16A56FC")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x16A5718", Offset = "0x16A5718", VA = "0x16A5718")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x16A5740", Offset = "0x16A5740", VA = "0x16A5740")]
		public void Disable()
		{
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0x16A5790", Offset = "0x16A5790", VA = "0x16A5790")]
		public static implicit operator InputActionMap(CreditsActions set)
		{
			return null;
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x16A57A8", Offset = "0x16A57A8", VA = "0x16A57A8")]
		public void SetCallbacks(ICreditsActions instance)
		{
		}
	}

	[Token(Token = "0x20000C1")]
	public struct GenericUIActions
	{
		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controls m_Wrapper;

		[Token(Token = "0x170000AF")]
		public InputAction HoldA
		{
			[Token(Token = "0x600041E")]
			[Address(RVA = "0x16A5C14", Offset = "0x16A5C14", VA = "0x16A5C14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		public bool enabled
		{
			[Token(Token = "0x6000422")]
			[Address(RVA = "0x16A5C9C", Offset = "0x16A5C9C", VA = "0x16A5C9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x16A5C0C", Offset = "0x16A5C0C", VA = "0x16A5C0C")]
		public GenericUIActions(Controls wrapper)
		{
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x16A5C30", Offset = "0x16A5C30", VA = "0x16A5C30")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0x16A5C4C", Offset = "0x16A5C4C", VA = "0x16A5C4C")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x16A5C74", Offset = "0x16A5C74", VA = "0x16A5C74")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x16A5CC4", Offset = "0x16A5CC4", VA = "0x16A5CC4")]
		public static implicit operator InputActionMap(GenericUIActions set)
		{
			return null;
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0x16A5CDC", Offset = "0x16A5CDC", VA = "0x16A5CDC")]
		public void SetCallbacks(IGenericUIActions instance)
		{
		}
	}

	[Token(Token = "0x20000C2")]
	public interface IHeadMovementActions
	{
		[Token(Token = "0x6000425")]
		void OnVRCameraRotate(InputAction.CallbackContext context);

		[Token(Token = "0x6000426")]
		void OnVRCameraMove(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20000C3")]
	public interface ILocomotionActions
	{
		[Token(Token = "0x6000427")]
		void OnMove(InputAction.CallbackContext context);

		[Token(Token = "0x6000428")]
		void OnMouseLook(InputAction.CallbackContext context);

		[Token(Token = "0x6000429")]
		void OnGamepadLook(InputAction.CallbackContext context);

		[Token(Token = "0x600042A")]
		void OnCrouch(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20000C4")]
	public interface ITeleportActions
	{
		[Token(Token = "0x600042B")]
		void OnTeleport(InputAction.CallbackContext context);

		[Token(Token = "0x600042C")]
		void OnGetTeleportPosition(InputAction.CallbackContext context);

		[Token(Token = "0x600042D")]
		void OnStartPointing(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20000C5")]
	public interface ISnapTurnActions
	{
		[Token(Token = "0x600042E")]
		void OnRotate(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20000C6")]
	public interface IHandsActions
	{
		[Token(Token = "0x600042F")]
		void OnRightHandMove(InputAction.CallbackContext context);

		[Token(Token = "0x6000430")]
		void OnRightHandRotate(InputAction.CallbackContext context);

		[Token(Token = "0x6000431")]
		void OnLeftHandMove(InputAction.CallbackContext context);

		[Token(Token = "0x6000432")]
		void OnLeftHandRotate(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20000C7")]
	public interface IInteractionActions
	{
		[Token(Token = "0x6000433")]
		void OnRightGrab(InputAction.CallbackContext context);

		[Token(Token = "0x6000434")]
		void OnLeftGrab(InputAction.CallbackContext context);

		[Token(Token = "0x6000435")]
		void OnRightSqueeze(InputAction.CallbackContext context);

		[Token(Token = "0x6000436")]
		void OnLeftSqueeze(InputAction.CallbackContext context);

		[Token(Token = "0x6000437")]
		void OnRightUse(InputAction.CallbackContext context);

		[Token(Token = "0x6000438")]
		void OnLeftUse(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20000C8")]
	public interface IUIInteractionActions
	{
		[Token(Token = "0x6000439")]
		void OnPressLeftButton(InputAction.CallbackContext context);

		[Token(Token = "0x600043A")]
		void OnPressRightButton(InputAction.CallbackContext context);

		[Token(Token = "0x600043B")]
		void OnGetMousePosition(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20000C9")]
	public interface IMenuActions
	{
		[Token(Token = "0x600043C")]
		void OnVRToggleDebugMenu(InputAction.CallbackContext context);

		[Token(Token = "0x600043D")]
		void OnVRTogglePauseMenu(InputAction.CallbackContext context);

		[Token(Token = "0x600043E")]
		void OnFastForward(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20000CA")]
	public interface ISceneViewActions
	{
		[Token(Token = "0x600043F")]
		void OnEnterSceneViewMode(InputAction.CallbackContext context);

		[Token(Token = "0x6000440")]
		void OnXZMove(InputAction.CallbackContext context);

		[Token(Token = "0x6000441")]
		void OnYMove(InputAction.CallbackContext context);

		[Token(Token = "0x6000442")]
		void OnVRCameraRotate(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20000CB")]
	public interface IPlayerModeActions
	{
		[Token(Token = "0x6000443")]
		void OnChangePlayerMode(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20000CC")]
	public interface IHandGesturesActions
	{
		[Token(Token = "0x6000444")]
		void OnWaveRight(InputAction.CallbackContext context);

		[Token(Token = "0x6000445")]
		void OnWaveLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000446")]
		void OnPointRight(InputAction.CallbackContext context);

		[Token(Token = "0x6000447")]
		void OnPointLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000448")]
		void OnOkRight(InputAction.CallbackContext context);

		[Token(Token = "0x6000449")]
		void OnOkLeft(InputAction.CallbackContext context);

		[Token(Token = "0x600044A")]
		void OnThumbsUpRight(InputAction.CallbackContext context);

		[Token(Token = "0x600044B")]
		void OnThumbsUpLeft(InputAction.CallbackContext context);

		[Token(Token = "0x600044C")]
		void OnFistRight(InputAction.CallbackContext context);

		[Token(Token = "0x600044D")]
		void OnFistLeft(InputAction.CallbackContext context);

		[Token(Token = "0x600044E")]
		void OnPressTriggerRight(InputAction.CallbackContext context);

		[Token(Token = "0x600044F")]
		void OnPressTriggerLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000450")]
		void OnRestThumbRight(InputAction.CallbackContext context);

		[Token(Token = "0x6000451")]
		void OnRestThumbLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000452")]
		void OnPressGripRight(InputAction.CallbackContext context);

		[Token(Token = "0x6000453")]
		void OnPressGripLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000454")]
		void OnQuickMoveRight(InputAction.CallbackContext context);

		[Token(Token = "0x6000455")]
		void OnQuickMoveLeft(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20000CD")]
	public interface IHeadGesturesActions
	{
		[Token(Token = "0x6000456")]
		void OnHeadMovement(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20000CE")]
	public interface ISaveGameActions
	{
		[Token(Token = "0x6000457")]
		void OnSave(InputAction.CallbackContext context);

		[Token(Token = "0x6000458")]
		void OnLoad(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20000CF")]
	public interface IInventoryActions
	{
		[Token(Token = "0x6000459")]
		void OnOpenLeftHand(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20000D0")]
	public interface IJournalActions
	{
		[Token(Token = "0x600045A")]
		void OnGrabRightHand(InputAction.CallbackContext context);

		[Token(Token = "0x600045B")]
		void OnGrabLeftHand(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20000D1")]
	public interface IInstinctSystemActions
	{
		[Token(Token = "0x600045C")]
		void OnTriggerInstincts(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20000D2")]
	public interface ISittingActions
	{
		[Token(Token = "0x600045D")]
		void OnToggleSitStand(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20000D3")]
	public interface IBoundHandsActions
	{
		[Token(Token = "0x600045E")]
		void OnLeftHandRotate(InputAction.CallbackContext context);

		[Token(Token = "0x600045F")]
		void OnRightHandRotate(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20000D4")]
	public interface ICreditsActions
	{
		[Token(Token = "0x6000460")]
		void OnSkip(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20000D5")]
	public interface IGenericUIActions
	{
		[Token(Token = "0x6000461")]
		void OnHoldA(InputAction.CallbackContext context);
	}

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7889C", Offset = "0xE7889C")]
	private readonly InputActionAsset <asset>k__BackingField;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly InputActionMap m_HeadMovement;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IHeadMovementActions m_HeadMovementActionsCallbackInterface;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly InputAction m_HeadMovement_VRCameraRotate;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly InputAction m_HeadMovement_VRCameraMove;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly InputActionMap m_Locomotion;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ILocomotionActions m_LocomotionActionsCallbackInterface;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly InputAction m_Locomotion_Move;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly InputAction m_Locomotion_MouseLook;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly InputAction m_Locomotion_GamepadLook;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly InputAction m_Locomotion_Crouch;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly InputActionMap m_Teleport;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ITeleportActions m_TeleportActionsCallbackInterface;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly InputAction m_Teleport_Teleport;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly InputAction m_Teleport_GetTeleportPosition;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly InputAction m_Teleport_StartPointing;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly InputActionMap m_SnapTurn;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ISnapTurnActions m_SnapTurnActionsCallbackInterface;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private readonly InputAction m_SnapTurn_Rotate;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private readonly InputActionMap m_Hands;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private IHandsActions m_HandsActionsCallbackInterface;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private readonly InputAction m_Hands_RightHandMove;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private readonly InputAction m_Hands_RightHandRotate;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private readonly InputAction m_Hands_LeftHandMove;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private readonly InputAction m_Hands_LeftHandRotate;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private readonly InputActionMap m_Interaction;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private IInteractionActions m_InteractionActionsCallbackInterface;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private readonly InputAction m_Interaction_RightGrab;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private readonly InputAction m_Interaction_LeftGrab;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private readonly InputAction m_Interaction_RightSqueeze;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private readonly InputAction m_Interaction_LeftSqueeze;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private readonly InputAction m_Interaction_RightUse;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private readonly InputAction m_Interaction_LeftUse;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private readonly InputActionMap m_UIInteraction;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private IUIInteractionActions m_UIInteractionActionsCallbackInterface;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private readonly InputAction m_UIInteraction_PressLeftButton;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private readonly InputAction m_UIInteraction_PressRightButton;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private readonly InputAction m_UIInteraction_GetMousePosition;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private readonly InputActionMap m_Menu;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private IMenuActions m_MenuActionsCallbackInterface;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private readonly InputAction m_Menu_VRToggleDebugMenu;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private readonly InputAction m_Menu_VRTogglePauseMenu;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private readonly InputAction m_Menu_FastForward;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private readonly InputActionMap m_SceneView;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private ISceneViewActions m_SceneViewActionsCallbackInterface;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private readonly InputAction m_SceneView_EnterSceneViewMode;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private readonly InputAction m_SceneView_XZMove;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private readonly InputAction m_SceneView_YMove;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private readonly InputAction m_SceneView_VRCameraRotate;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private readonly InputActionMap m_PlayerMode;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private IPlayerModeActions m_PlayerModeActionsCallbackInterface;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private readonly InputAction m_PlayerMode_ChangePlayerMode;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private readonly InputActionMap m_HandGestures;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private IHandGesturesActions m_HandGesturesActionsCallbackInterface;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private readonly InputAction m_HandGestures_WaveRight;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private readonly InputAction m_HandGestures_WaveLeft;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private readonly InputAction m_HandGestures_PointRight;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private readonly InputAction m_HandGestures_PointLeft;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private readonly InputAction m_HandGestures_OkRight;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private readonly InputAction m_HandGestures_OkLeft;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private readonly InputAction m_HandGestures_ThumbsUpRight;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private readonly InputAction m_HandGestures_ThumbsUpLeft;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private readonly InputAction m_HandGestures_FistRight;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private readonly InputAction m_HandGestures_FistLeft;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private readonly InputAction m_HandGestures_PressTriggerRight;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private readonly InputAction m_HandGestures_PressTriggerLeft;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private readonly InputAction m_HandGestures_RestThumbRight;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private readonly InputAction m_HandGestures_RestThumbLeft;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private readonly InputAction m_HandGestures_PressGripRight;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private readonly InputAction m_HandGestures_PressGripLeft;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private readonly InputAction m_HandGestures_QuickMoveRight;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private readonly InputAction m_HandGestures_QuickMoveLeft;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private readonly InputActionMap m_HeadGestures;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private IHeadGesturesActions m_HeadGesturesActionsCallbackInterface;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private readonly InputAction m_HeadGestures_HeadMovement;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private readonly InputActionMap m_SaveGame;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private ISaveGameActions m_SaveGameActionsCallbackInterface;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private readonly InputAction m_SaveGame_Save;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private readonly InputAction m_SaveGame_Load;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private readonly InputActionMap m_Inventory;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private IInventoryActions m_InventoryActionsCallbackInterface;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private readonly InputAction m_Inventory_OpenLeftHand;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private readonly InputActionMap m_Journal;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private IJournalActions m_JournalActionsCallbackInterface;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private readonly InputAction m_Journal_GrabRightHand;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private readonly InputAction m_Journal_GrabLeftHand;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private readonly InputActionMap m_InstinctSystem;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private IInstinctSystemActions m_InstinctSystemActionsCallbackInterface;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private readonly InputAction m_InstinctSystem_TriggerInstincts;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private readonly InputActionMap m_Sitting;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private ISittingActions m_SittingActionsCallbackInterface;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private readonly InputAction m_Sitting_ToggleSitStand;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private readonly InputActionMap m_BoundHands;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private IBoundHandsActions m_BoundHandsActionsCallbackInterface;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private readonly InputAction m_BoundHands_LeftHandRotate;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private readonly InputAction m_BoundHands_RightHandRotate;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private readonly InputActionMap m_Credits;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	private ICreditsActions m_CreditsActionsCallbackInterface;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private readonly InputAction m_Credits_Skip;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private readonly InputActionMap m_GenericUI;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private IGenericUIActions m_GenericUIActionsCallbackInterface;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private readonly InputAction m_GenericUI_HoldA;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private int m_VRHeadsetSchemeIndex;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	private int m_KeyboardMouseSchemeIndex;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private int m_GamepadSchemeIndex;

	[Token(Token = "0x17000044")]
	public InputActionAsset asset
	{
		[Token(Token = "0x6000335")]
		[Address(RVA = "0xFF99B8", Offset = "0xFF99B8", VA = "0xFF99B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8B7C0", Offset = "0xE8B7C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000045")]
	public InputBinding? bindingMask
	{
		[Token(Token = "0x6000338")]
		[Address(RVA = "0xFFADA8", Offset = "0xFFADA8", VA = "0xFFADA8", Slot = "7")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000339")]
		[Address(RVA = "0xFFADD4", Offset = "0xFFADD4", VA = "0xFFADD4", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public ReadOnlyArray<UnityEngine.InputSystem.InputDevice>? devices
	{
		[Token(Token = "0x600033A")]
		[Address(RVA = "0xFFAE2C", Offset = "0xFFAE2C", VA = "0xFFAE2C", Slot = "9")]
		get
		{
			return null;
		}
		[Token(Token = "0x600033B")]
		[Address(RVA = "0xFFAE78", Offset = "0xFFAE78", VA = "0xFFAE78", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public ReadOnlyArray<InputControlScheme> controlSchemes
	{
		[Token(Token = "0x600033C")]
		[Address(RVA = "0xFFAEC8", Offset = "0xFFAEC8", VA = "0xFFAEC8", Slot = "11")]
		get
		{
			return default(ReadOnlyArray<InputControlScheme>);
		}
	}

	[Token(Token = "0x17000048")]
	public IEnumerable<InputBinding> bindings
	{
		[Token(Token = "0x6000342")]
		[Address(RVA = "0xFFAF70", Offset = "0xFFAF70", VA = "0xFFAF70", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000049")]
	public HeadMovementActions HeadMovement
	{
		[Token(Token = "0x6000345")]
		[Address(RVA = "0xFFB00C", Offset = "0xFFB00C", VA = "0xFFB00C")]
		get
		{
			return default(HeadMovementActions);
		}
	}

	[Token(Token = "0x1700004A")]
	public LocomotionActions Locomotion
	{
		[Token(Token = "0x6000346")]
		[Address(RVA = "0xFFB038", Offset = "0xFFB038", VA = "0xFFB038")]
		get
		{
			return default(LocomotionActions);
		}
	}

	[Token(Token = "0x1700004B")]
	public TeleportActions Teleport
	{
		[Token(Token = "0x6000347")]
		[Address(RVA = "0xFFB064", Offset = "0xFFB064", VA = "0xFFB064")]
		get
		{
			return default(TeleportActions);
		}
	}

	[Token(Token = "0x1700004C")]
	public SnapTurnActions SnapTurn
	{
		[Token(Token = "0x6000348")]
		[Address(RVA = "0xFFB090", Offset = "0xFFB090", VA = "0xFFB090")]
		get
		{
			return default(SnapTurnActions);
		}
	}

	[Token(Token = "0x1700004D")]
	public HandsActions Hands
	{
		[Token(Token = "0x6000349")]
		[Address(RVA = "0xFFB0BC", Offset = "0xFFB0BC", VA = "0xFFB0BC")]
		get
		{
			return default(HandsActions);
		}
	}

	[Token(Token = "0x1700004E")]
	public InteractionActions Interaction
	{
		[Token(Token = "0x600034A")]
		[Address(RVA = "0xFFB0E8", Offset = "0xFFB0E8", VA = "0xFFB0E8")]
		get
		{
			return default(InteractionActions);
		}
	}

	[Token(Token = "0x1700004F")]
	public UIInteractionActions UIInteraction
	{
		[Token(Token = "0x600034B")]
		[Address(RVA = "0xFFB114", Offset = "0xFFB114", VA = "0xFFB114")]
		get
		{
			return default(UIInteractionActions);
		}
	}

	[Token(Token = "0x17000050")]
	public MenuActions Menu
	{
		[Token(Token = "0x600034C")]
		[Address(RVA = "0xFFB140", Offset = "0xFFB140", VA = "0xFFB140")]
		get
		{
			return default(MenuActions);
		}
	}

	[Token(Token = "0x17000051")]
	public SceneViewActions SceneView
	{
		[Token(Token = "0x600034D")]
		[Address(RVA = "0xFFB16C", Offset = "0xFFB16C", VA = "0xFFB16C")]
		get
		{
			return default(SceneViewActions);
		}
	}

	[Token(Token = "0x17000052")]
	public PlayerModeActions PlayerMode
	{
		[Token(Token = "0x600034E")]
		[Address(RVA = "0xFFB198", Offset = "0xFFB198", VA = "0xFFB198")]
		get
		{
			return default(PlayerModeActions);
		}
	}

	[Token(Token = "0x17000053")]
	public HandGesturesActions HandGestures
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0xFFB1C4", Offset = "0xFFB1C4", VA = "0xFFB1C4")]
		get
		{
			return default(HandGesturesActions);
		}
	}

	[Token(Token = "0x17000054")]
	public HeadGesturesActions HeadGestures
	{
		[Token(Token = "0x6000350")]
		[Address(RVA = "0xFFB1F0", Offset = "0xFFB1F0", VA = "0xFFB1F0")]
		get
		{
			return default(HeadGesturesActions);
		}
	}

	[Token(Token = "0x17000055")]
	public SaveGameActions SaveGame
	{
		[Token(Token = "0x6000351")]
		[Address(RVA = "0xFFB21C", Offset = "0xFFB21C", VA = "0xFFB21C")]
		get
		{
			return default(SaveGameActions);
		}
	}

	[Token(Token = "0x17000056")]
	public InventoryActions Inventory
	{
		[Token(Token = "0x6000352")]
		[Address(RVA = "0xFFB248", Offset = "0xFFB248", VA = "0xFFB248")]
		get
		{
			return default(InventoryActions);
		}
	}

	[Token(Token = "0x17000057")]
	public JournalActions Journal
	{
		[Token(Token = "0x6000353")]
		[Address(RVA = "0xFFB274", Offset = "0xFFB274", VA = "0xFFB274")]
		get
		{
			return default(JournalActions);
		}
	}

	[Token(Token = "0x17000058")]
	public InstinctSystemActions InstinctSystem
	{
		[Token(Token = "0x6000354")]
		[Address(RVA = "0xFFB2A0", Offset = "0xFFB2A0", VA = "0xFFB2A0")]
		get
		{
			return default(InstinctSystemActions);
		}
	}

	[Token(Token = "0x17000059")]
	public SittingActions Sitting
	{
		[Token(Token = "0x6000355")]
		[Address(RVA = "0xFFB2CC", Offset = "0xFFB2CC", VA = "0xFFB2CC")]
		get
		{
			return default(SittingActions);
		}
	}

	[Token(Token = "0x1700005A")]
	public BoundHandsActions BoundHands
	{
		[Token(Token = "0x6000356")]
		[Address(RVA = "0xFFB2F8", Offset = "0xFFB2F8", VA = "0xFFB2F8")]
		get
		{
			return default(BoundHandsActions);
		}
	}

	[Token(Token = "0x1700005B")]
	public CreditsActions Credits
	{
		[Token(Token = "0x6000357")]
		[Address(RVA = "0xFFB324", Offset = "0xFFB324", VA = "0xFFB324")]
		get
		{
			return default(CreditsActions);
		}
	}

	[Token(Token = "0x1700005C")]
	public GenericUIActions GenericUI
	{
		[Token(Token = "0x6000358")]
		[Address(RVA = "0xFFB350", Offset = "0xFFB350", VA = "0xFFB350")]
		get
		{
			return default(GenericUIActions);
		}
	}

	[Token(Token = "0x1700005D")]
	public InputControlScheme VRHeadsetScheme
	{
		[Token(Token = "0x6000359")]
		[Address(RVA = "0xFFB37C", Offset = "0xFFB37C", VA = "0xFFB37C")]
		get
		{
			return default(InputControlScheme);
		}
	}

	[Token(Token = "0x1700005E")]
	public InputControlScheme KeyboardMouseScheme
	{
		[Token(Token = "0x600035A")]
		[Address(RVA = "0xFFB44C", Offset = "0xFFB44C", VA = "0xFFB44C")]
		get
		{
			return default(InputControlScheme);
		}
	}

	[Token(Token = "0x1700005F")]
	public InputControlScheme GamepadScheme
	{
		[Token(Token = "0x600035B")]
		[Address(RVA = "0xFFB51C", Offset = "0xFFB51C", VA = "0xFFB51C")]
		get
		{
			return default(InputControlScheme);
		}
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xFF99C0", Offset = "0xFF99C0", VA = "0xFF99C0")]
	public Controls()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xFFAD40", Offset = "0xFFAD40", VA = "0xFFAD40", Slot = "17")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xFFAEE4", Offset = "0xFFAEE4", VA = "0xFFAEE4", Slot = "12")]
	public bool Contains(InputAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xFFAF00", Offset = "0xFFAF00", VA = "0xFFAF00", Slot = "15")]
	public IEnumerator<InputAction> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xFFAF1C", Offset = "0xFFAF1C", VA = "0xFFAF1C", Slot = "16")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xFFAF38", Offset = "0xFFAF38", VA = "0xFFAF38", Slot = "13")]
	public void Enable()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xFFAF54", Offset = "0xFFAF54", VA = "0xFFAF54", Slot = "14")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xFFAF8C", Offset = "0xFFAF8C", VA = "0xFFAF8C", Slot = "5")]
	public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
	{
		return null;
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xFFAFAC", Offset = "0xFFAFAC", VA = "0xFFAFAC", Slot = "6")]
	public int FindBinding(InputBinding bindingMask, out InputAction action)
	{
		return default(int);
	}
}
[Token(Token = "0x20000D6")]
public class CigaretteHolster : MonoBehaviour
{
	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HVRSocket holster;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int cigLimit;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float cigTimeout;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _spawnedCigCount;

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x1208AD4", Offset = "0x1208AD4", VA = "0x1208AD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x1208CA0", Offset = "0x1208CA0", VA = "0x1208CA0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x1208E6C", Offset = "0x1208E6C", VA = "0x1208E6C")]
	private void AddSpawnedCig(HVRSocket socket, GameObject cigPrefab)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x1208FC8", Offset = "0x1208FC8", VA = "0x1208FC8")]
	private void HandleCigaretteAnyDestroyed()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x1208F90", Offset = "0x1208F90", VA = "0x1208F90")]
	private void CheckCanInteract()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x1208FD8", Offset = "0x1208FD8", VA = "0x1208FD8")]
	public CigaretteHolster()
	{
	}
}
[Token(Token = "0x20000D7")]
public class CigaretteTimer : MonoBehaviour
{
	[Token(Token = "0x20000D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE669D8", Offset = "0xE669D8")]
	private sealed class <TimeoutTimer>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeout;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CigaretteTimer <>4__this;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timeElapsed>5__2;

		[Token(Token = "0x170000B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000477")]
			[Address(RVA = "0x16A42F0", Offset = "0x16A42F0", VA = "0x16A42F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000479")]
			[Address(RVA = "0x16A4338", Offset = "0x16A4338", VA = "0x16A4338", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x16A4170", Offset = "0x16A4170", VA = "0x16A4170")]
		[DebuggerHidden]
		public <TimeoutTimer>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x16A419C", Offset = "0x16A419C", VA = "0x16A419C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x16A41A0", Offset = "0x16A41A0", VA = "0x16A41A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0x16A42F8", Offset = "0x16A42F8", VA = "0x16A42F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HVRGrabbable hvrg;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine _timerRoutine;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[NaughtyAttributes.ReadOnly]
	public CigaretteHolster cigHol;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[NaughtyAttributes.ReadOnly]
	public bool IsPlayerCiggy;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Collider[] _colliders;

	[Token(Token = "0x14000001")]
	public static event Action OnCigaretteAnyDestroyed
	{
		[Token(Token = "0x6000468")]
		[Address(RVA = "0x1208BE4", Offset = "0x1208BE4", VA = "0x1208BE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8B7D0", Offset = "0xE8B7D0")]
		add
		{
		}
		[Token(Token = "0x6000469")]
		[Address(RVA = "0x1208DB0", Offset = "0x1208DB0", VA = "0x1208DB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8B7E0", Offset = "0xE8B7E0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<CigaretteTimer> OnCigaretteDestroyed
	{
		[Token(Token = "0x600046A")]
		[Address(RVA = "0x1208FF4", Offset = "0x1208FF4", VA = "0x1208FF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8B7F0", Offset = "0xE8B7F0")]
		add
		{
		}
		[Token(Token = "0x600046B")]
		[Address(RVA = "0x1209094", Offset = "0x1209094", VA = "0x1209094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8B800", Offset = "0xE8B800")]
		remove
		{
		}
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x1208F14", Offset = "0x1208F14", VA = "0x1208F14")]
	public void SetIsPlayerCiggy(bool b)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x1209134", Offset = "0x1209134", VA = "0x1209134")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x1209250", Offset = "0x1209250", VA = "0x1209250")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x120936C", Offset = "0x120936C", VA = "0x120936C")]
	private void OnGrabbed(HVRGrabberBase hvrGrabberBase, HVRGrabbable hvrGrabbable)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x1209388", Offset = "0x1209388", VA = "0x1209388")]
	private void OnReleased(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x12093F0", Offset = "0x12093F0", VA = "0x12093F0")]
	public void TimerStarter(float timeout)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x120942C", Offset = "0x120942C", VA = "0x120942C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8B810", Offset = "0xE8B810")]
	private IEnumerator TimeoutTimer(float timeout)
	{
		return null;
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x12094B4", Offset = "0x12094B4", VA = "0x12094B4")]
	public CigaretteTimer()
	{
	}
}
[Token(Token = "0x20000D9")]
public class MT_CandleShrine : MT_Collectable
{
	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private MT_ShrineWick[] wicks;

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x1128880", Offset = "0x1128880", VA = "0x1128880", Slot = "5")]
	public override void ProcessCollectable()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x11289D0", Offset = "0x11289D0", VA = "0x11289D0")]
	[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8B8C0", Offset = "0xE8B8C0")]
	public void CandleLitChecker()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x1128A2C", Offset = "0x1128A2C", VA = "0x1128A2C")]
	public MT_CandleShrine()
	{
	}
}
[Token(Token = "0x20000DA")]
public class MT_CigarettePack : MT_Collectable
{
	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject[] packVariants;

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x112ACD4", Offset = "0x112ACD4", VA = "0x112ACD4", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x112AD84", Offset = "0x112AD84", VA = "0x112AD84")]
	[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8B938", Offset = "0xE8B938")]
	private void DisplayRandomPack()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x112AE24", Offset = "0x112AE24", VA = "0x112AE24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x112AE34", Offset = "0x112AE34", VA = "0x112AE34")]
	public MT_CigarettePack()
	{
	}
}
[Token(Token = "0x20000DB")]
public class MT_Collectable : MonoBehaviour
{
	[Token(Token = "0x20000DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE669E8", Offset = "0xE669E8")]
	private sealed class <WaitForRelease>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_Collectable <>4__this;

		[Token(Token = "0x170000B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000490")]
			[Address(RVA = "0x1036368", Offset = "0x1036368", VA = "0x1036368", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000492")]
			[Address(RVA = "0x10363B0", Offset = "0x10363B0", VA = "0x10363B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0x10361FC", Offset = "0x10361FC", VA = "0x10361FC")]
		[DebuggerHidden]
		public <WaitForRelease>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0x1036228", Offset = "0x1036228", VA = "0x1036228", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0x103622C", Offset = "0x103622C", VA = "0x103622C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0x1036370", Offset = "0x1036370", VA = "0x1036370", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7893C", Offset = "0xE7893C")]
	[SerializeField]
	protected string collectableInstanceID;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE78988", Offset = "0xE78988")]
	[SerializeField]
	private float scaleFactor;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE789D4", Offset = "0xE789D4")]
	[SerializeField]
	protected string collectableTypeID;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE78A20", Offset = "0xE78A20")]
	[SerializeField]
	protected string notificationMessage;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE78A6C", Offset = "0xE78A6C")]
	public bool journalCopy;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public HVRGrabbable grabbable;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Rigidbody rb;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public List<Collider> physicsColliders;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public CollectableInstanceEntry instanceEntry;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _isGrabbable;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _waitForReleaseCoRunning;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE78AE4", Offset = "0xE78AE4")]
	[SerializeField]
	private AudioClip sfxClip;

	[Token(Token = "0x170000B3")]
	public string InstanceID
	{
		[Token(Token = "0x6000481")]
		[Address(RVA = "0x112AE38", Offset = "0x112AE38", VA = "0x112AE38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x112AE40", Offset = "0x112AE40", VA = "0x112AE40", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x112AF60", Offset = "0x112AF60", VA = "0x112AF60")]
	public void JournalCollectableSetUp(CollectableInstanceEntry cie)
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x112B7E4", Offset = "0x112B7E4", VA = "0x112B7E4")]
	private void Shrink(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x112B828", Offset = "0x112B828", VA = "0x112B828")]
	private void Grow(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x112B86C", Offset = "0x112B86C", VA = "0x112B86C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x112B9B4", Offset = "0x112B9B4", VA = "0x112B9B4")]
	public void OnHandGrab(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x112BAA4", Offset = "0x112BAA4", VA = "0x112BAA4")]
	public void OnSocketedRunOnce(HVRSocket arg0, HVRGrabbable hvrGrabbable)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x112BB78", Offset = "0x112BB78", VA = "0x112BB78", Slot = "5")]
	public virtual void ProcessCollectable()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x112BEAC", Offset = "0x112BEAC", VA = "0x112BEAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8B9B0", Offset = "0xE8B9B0")]
	private IEnumerator WaitForRelease()
	{
		return null;
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x1128A30", Offset = "0x1128A30", VA = "0x1128A30")]
	public MT_Collectable()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x112BF24", Offset = "0x112BF24", VA = "0x112BF24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8BA10", Offset = "0xE8BA10")]
	private bool <WaitForRelease>b__22_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000DD")]
public class MT_ShrineWick : MonoBehaviour
{
	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[MazeTheory.Toolbox.ReadOnly]
	public bool isLit;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MT_CandleShrine shrine;

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x12AA20C", Offset = "0x12AA20C", VA = "0x12AA20C")]
	public void LightWick()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x12AA2E8", Offset = "0x12AA2E8", VA = "0x12AA2E8")]
	public MT_ShrineWick()
	{
	}
}
[Token(Token = "0x20000DE")]
public class LetterReadAndBoingController : MonoBehaviour
{
	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BoingBones boingScript;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool isReading;

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x10153F4", Offset = "0x10153F4", VA = "0x10153F4")]
	public void ToggleReading(bool reading)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x1015400", Offset = "0x1015400", VA = "0x1015400")]
	public void CheckIfCanEnableBoing()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x101542C", Offset = "0x101542C", VA = "0x101542C")]
	public LetterReadAndBoingController()
	{
	}
}
[Token(Token = "0x20000DF")]
public class MT_NewGrabbableParent : MonoBehaviour
{
	[Token(Token = "0x6000498")]
	[Address(RVA = "0x10FAC18", Offset = "0x10FAC18", VA = "0x10FAC18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x10FAC1C", Offset = "0x10FAC1C", VA = "0x10FAC1C")]
	private void Update()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x10FAC20", Offset = "0x10FAC20", VA = "0x10FAC20")]
	public MT_NewGrabbableParent()
	{
	}
}
[Token(Token = "0x20000E0")]
public class MT_CollectibleObject : MonoBehaviour
{
	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<string> missionsId;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _grabbableId;

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x112C284", Offset = "0x112C284", VA = "0x112C284")]
	private void Awake()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x112C33C", Offset = "0x112C33C", VA = "0x112C33C")]
	public void SetCollectibleElementResolved(bool isResolved)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x112C578", Offset = "0x112C578", VA = "0x112C578")]
	public MT_CollectibleObject()
	{
	}
}
[Token(Token = "0x20000E1")]
public class MT_CollectiblesController : MonoBehaviour
{
	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<MT_MissionUI> missionsUI;

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x112C400", Offset = "0x112C400", VA = "0x112C400")]
	public void GetMission(string collectibleId, List<string> missionsId, CollectibleElementState state)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x112C72C", Offset = "0x112C72C", VA = "0x112C72C")]
	public MT_CollectiblesController()
	{
	}
}
[Token(Token = "0x20000E2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE669F8", Offset = "0xE669F8")]
public class JournalButtonTextElement : MonoBehaviour
{
	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool mainText;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[MazeTheory.Toolbox.ReadOnly]
	public TextMeshProUGUI txt;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[MazeTheory.Toolbox.ReadOnly]
	public JournalButtonTextElement main;

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x10E496C", Offset = "0x10E496C", VA = "0x10E496C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x10E49C8", Offset = "0x10E49C8", VA = "0x10E49C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x10E4B4C", Offset = "0x10E4B4C", VA = "0x10E4B4C")]
	public JournalButtonTextElement()
	{
	}
}
[Token(Token = "0x20000E3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE66A58", Offset = "0xE66A58")]
public class JournalStoryItem : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66AE0", Offset = "0xE66AE0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<JournalSection> <>9__23_0;

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x1034AC4", Offset = "0x1034AC4", VA = "0x1034AC4")]
		public <>c()
		{
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x1034ACC", Offset = "0x1034ACC", VA = "0x1034ACC")]
		internal bool <ReferenceSetUp>b__23_0(JournalSection x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string thisObjFlag;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string ButtonTextID;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ItemTitleID;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool disappearOnRemoval;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool isKeyItem;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE78BD0", Offset = "0xE78BD0")]
	[NaughtyAttributes.ReadOnly]
	public JournalSocket elementSocket;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[NaughtyAttributes.ReadOnly]
	public SectionElement objectElement;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[NaughtyAttributes.ReadOnly]
	public HVRGrabbable grabbable;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[NaughtyAttributes.ReadOnly]
	public JournalHandler handler;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[NaughtyAttributes.ReadOnly]
	public JournalSection itemSection;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[NaughtyAttributes.ReadOnly]
	public bool storedInJournal;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[NaughtyAttributes.ReadOnly]
	public List<Collider> physicsColliders;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[NaughtyAttributes.ReadOnly]
	public bool itemUsed;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	[NaughtyAttributes.ReadOnly]
	public bool inJournal;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool storedFromFlag;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	private bool refsSetUp;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool grabbedByPlayer;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool turnOffAsAlreadyLoadedInJournal;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	private bool hasBeenStarted;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private HVRHandGrabber lastHandThatGrabbed;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isKeyChecked;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool isKey;

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1012914", Offset = "0x1012914", VA = "0x1012914")]
	public void Start()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x1012AA0", Offset = "0x1012AA0", VA = "0x1012AA0")]
	private void ReferenceSetUp()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x1013284", Offset = "0x1013284", VA = "0x1013284")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x10133B0", Offset = "0x10133B0", VA = "0x10133B0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x10134CC", Offset = "0x10134CC", VA = "0x10134CC")]
	private void GrabFromJournal(HVRHandGrabber arg0, HVRGrabbable hvrGrabbable)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x10134D4", Offset = "0x10134D4", VA = "0x10134D4")]
	public void RemoveFromJournal()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x10136F0", Offset = "0x10136F0", VA = "0x10136F0")]
	public void RemoveFromJournal(bool notifyPlayer)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x10136A8", Offset = "0x10136A8", VA = "0x10136A8")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x1013510", Offset = "0x1013510", VA = "0x1013510")]
	public void UseItem(bool notifyPlayer)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x10130F8", Offset = "0x10130F8", VA = "0x10130F8")]
	public void StringChecker()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x101372C", Offset = "0x101372C", VA = "0x101372C")]
	public void StoreInJournalLauncher(HVRHandGrabber arg0, HVRGrabbable hvrGrabbable)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x1011CA4", Offset = "0x1011CA4", VA = "0x1011CA4")]
	public void StoreInJournal(bool notifyPlayer = false)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x1013920", Offset = "0x1013920", VA = "0x1013920")]
	private bool CheckifStored()
	{
		return default(bool);
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x1013E14", Offset = "0x1013E14", VA = "0x1013E14")]
	private void CheckIfUsed()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x1013ABC", Offset = "0x1013ABC", VA = "0x1013ABC")]
	private void CreateItemSocketInJournal(bool notifyPlayer)
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1013F34", Offset = "0x1013F34", VA = "0x1013F34")]
	public void ObjectUsed()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x1013F58", Offset = "0x1013F58", VA = "0x1013F58")]
	public JournalStoryItem()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x1013FE4", Offset = "0x1013FE4", VA = "0x1013FE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8BA70", Offset = "0xE8BA70")]
	private void <CreateItemSocketInJournal>b__36_0()
	{
	}
}
[Token(Token = "0x20000E5")]
public class TesterCanvas : MonoBehaviour
{
	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x134F528", Offset = "0x134F528", VA = "0x134F528")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x134F61C", Offset = "0x134F61C", VA = "0x134F61C")]
	public TesterCanvas()
	{
	}
}
[Token(Token = "0x20000E6")]
public class elementButton : MonoBehaviour
{
	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string soundClipToPlay;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button _button;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI _elementName;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[NaughtyAttributes.ReadOnly]
	public SectionElement _currentAssignedElement;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[NaughtyAttributes.ReadOnly]
	public bool elementAssigned;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private JournalHandler _handler;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public JournalButton_V2 jb2;

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x180FC50", Offset = "0x180FC50", VA = "0x180FC50")]
	public void Setup(JournalHandler handler)
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x180FD80", Offset = "0x180FD80", VA = "0x180FD80")]
	public void PlaySound()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x180FDB0", Offset = "0x180FDB0", VA = "0x180FDB0")]
	public void AssignButton(SectionElement elementToAssignTo)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x180FF34", Offset = "0x180FF34", VA = "0x180FF34")]
	public void UnAssignButton()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x1810060", Offset = "0x1810060", VA = "0x1810060")]
	public elementButton()
	{
	}
}
[Token(Token = "0x20000E7")]
public class MT_NpcJournalMethods : MonoBehaviour, IGameModule
{
	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Blackboard rowenaBlackboard;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FlowScriptController rowenaFlowscriptController;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int OpenJournalTrigger;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int CloseJournalTrigger;

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x10FADAC", Offset = "0x10FADAC", VA = "0x10FADAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x10FAE58", Offset = "0x10FAE58", VA = "0x10FAE58")]
	public void OpenJournal()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x10FAED4", Offset = "0x10FAED4", VA = "0x10FAED4")]
	public void CLoseJournal()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x10FAF50", Offset = "0x10FAF50", VA = "0x10FAF50", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x10FAF54", Offset = "0x10FAF54", VA = "0x10FAF54", Slot = "5")]
	public void Terminate()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x10FAFB8", Offset = "0x10FAFB8", VA = "0x10FAFB8")]
	public void NPCJournalReleased()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x10FB280", Offset = "0x10FB280", VA = "0x10FB280")]
	public MT_NpcJournalMethods()
	{
	}
}
[Token(Token = "0x20000E8")]
public class LoadingScreenRotation : MonoBehaviour
{
	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera _playerCamera;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float lookAwayAngleMinimum;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _speed;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float lookAwayTimeLimit;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool adjustForPlayerHeight;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float transformHeightOffset;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float lookAwayDuration;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 targetDirection;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool rotating;

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x1017D6C", Offset = "0x1017D6C", VA = "0x1017D6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x10164DC", Offset = "0x10164DC", VA = "0x10164DC")]
	public void ResetRotation()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x1017DA4", Offset = "0x1017DA4", VA = "0x1017DA4")]
	private void AdjustForPlayerHeight()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x1017E68", Offset = "0x1017E68", VA = "0x1017E68")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x1018118", Offset = "0x1018118", VA = "0x1018118")]
	private Camera GetPlayerCamera()
	{
		return null;
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x1018034", Offset = "0x1018034", VA = "0x1018034")]
	private bool CheckAngleParameters()
	{
		return default(bool);
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x10181AC", Offset = "0x10181AC", VA = "0x10181AC")]
	public LoadingScreenRotation()
	{
	}
}
[Token(Token = "0x20000E9")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE66AF0", Offset = "0xE66AF0")]
public class GridlyData : ScriptableObject
{
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GridlyData _instance;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[NaughtyAttributes.ReadOnly]
	public string _keyAPI;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[NaughtyAttributes.ReadOnly]
	public string projectName;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[NaughtyAttributes.ReadOnly]
	public string projectID;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "HorizontalLineAttribute", RVA = "0xE78D6C", Offset = "0xE78D6C")]
	public static bool areFontsSetUp;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[NaughtyAttributes.ReadOnly]
	public int currentLanguageIndex;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[NaughtyAttributes.ReadOnly]
	public LangSupport[] supportedLanguages;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[NaughtyAttributes.ReadOnly]
	public int currentScriptIndex;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[NaughtyAttributes.ReadOnly]
	public LangScript[] supportedScripts;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[NaughtyAttributes.ReadOnly]
	public TMP_FontAsset currentLanguageUIFont;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[NaughtyAttributes.ReadOnly]
	public TMP_FontAsset currentLanguageHandwrittenFont;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[NaughtyAttributes.ReadOnly]
	public TMP_FontAsset currentLanguageGameTextFont;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HorizontalLineAttribute", RVA = "0xE78DF4", Offset = "0xE78DF4")]
	[NaughtyAttributes.ReadOnly]
	public string[] databaseIDs;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[NaughtyAttributes.ReadOnly]
	public string[] databaseNames;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[NaughtyAttributes.ReadOnly]
	public string[] gridIDs;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[NaughtyAttributes.ReadOnly]
	public string[] gridNames;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[NaughtyAttributes.ReadOnly]
	public string[] viewIDs;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[NaughtyAttributes.ReadOnly]
	public string[] viewNames;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[NaughtyAttributes.ReadOnly]
	public int recordsListCount;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public string[] recordIDs;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public Record[] records;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private TMP_FontAsset tempUiFont;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private TMP_FontAsset tempHandwrittenFont;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private TMP_FontAsset tempGameTextFont;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static UnityEvent onFontReferenceAssignmentComplete;

	[Token(Token = "0x170000B6")]
	public static GridlyData Instance
	{
		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x10D4AA4", Offset = "0x10D4AA4", VA = "0x10D4AA4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x10D491C", Offset = "0x10D491C", VA = "0x10D491C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public string keyAPI
	{
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x10D4B0C", Offset = "0x10D4B0C", VA = "0x10D4B0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x10D4C8C", Offset = "0x10D4C8C", VA = "0x10D4C8C")]
		set
		{
		}
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x10D498C", Offset = "0x10D498C", VA = "0x10D498C")]
	private static void Init()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x10D4D08", Offset = "0x10D4D08", VA = "0x10D4D08")]
	public static string Encrypt(string strEncrypted)
	{
		return null;
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x10D4B70", Offset = "0x10D4B70", VA = "0x10D4B70")]
	public static string Decrypt(string encrString)
	{
		return null;
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x10D4D98", Offset = "0x10D4D98", VA = "0x10D4D98")]
	public void SwitchLanguage(int newLanguageIndex)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x10D4EA4", Offset = "0x10D4EA4", VA = "0x10D4EA4")]
	private void SwitchScript(LangSupport newLanguage)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x10D5400", Offset = "0x10D5400", VA = "0x10D5400")]
	private void UIFontOnComplete(TMP_FontAsset asyncOperationResult)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x10D5594", Offset = "0x10D5594", VA = "0x10D5594")]
	private void HandwrittenFontOnComplete(TMP_FontAsset asyncOperationResult)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x10D5728", Offset = "0x10D5728", VA = "0x10D5728")]
	private void GameTextFontOnComplete(TMP_FontAsset asyncOperationResult)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x10D58BC", Offset = "0x10D58BC", VA = "0x10D58BC")]
	[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8BA80", Offset = "0xE8BA80")]
	public string GetTextLocalized(string dialogueID, out string speaker, out string speakerID)
	{
		return null;
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x10D63A8", Offset = "0x10D63A8", VA = "0x10D63A8")]
	[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8BAF8", Offset = "0xE8BAF8")]
	public string GetTextFormattedLocalized(string dialogueID, [Optional] (string, bool)[] parameters)
	{
		return null;
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x10D5EB4", Offset = "0x10D5EB4", VA = "0x10D5EB4")]
	[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8BB70", Offset = "0xE8BB70")]
	public string GetTextLocalized(string dialogueID)
	{
		return null;
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x10D64E8", Offset = "0x10D64E8", VA = "0x10D64E8")]
	public GridlyData()
	{
	}
}
[Token(Token = "0x20000EA")]
public class GridlyLocalizer : MonoBehaviour
{
	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string ID;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public string prevID;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int recordIDIndex;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public int prevLangIndex;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FontStyles FontStyle;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TMP_Text _tmpro;

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x10D6750", Offset = "0x10D6750", VA = "0x10D6750")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x10D6EA4", Offset = "0x10D6EA4", VA = "0x10D6EA4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x10D682C", Offset = "0x10D682C", VA = "0x10D682C")]
	public bool TryTextSetUp()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x10D6F6C", Offset = "0x10D6F6C", VA = "0x10D6F6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x10D7050", Offset = "0x10D7050", VA = "0x10D7050")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x10D6BBC", Offset = "0x10D6BBC", VA = "0x10D6BBC")]
	public void SetText(string newID)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x10D7058", Offset = "0x10D7058", VA = "0x10D7058")]
	public GridlyLocalizer()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x10D7060", Offset = "0x10D7060", VA = "0x10D7060")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8BBE8", Offset = "0xE8BBE8")]
	private void <Awake>b__6_0()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x10D7064", Offset = "0x10D7064", VA = "0x10D7064")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8BBF8", Offset = "0xE8BBF8")]
	private void <OnDestroy>b__7_0()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EB")]
public class LangSupport
{
	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Languages LanguageCode;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public LanguageScript scriptCode;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x1014B78", Offset = "0x1014B78", VA = "0x1014B78")]
	public LangSupport()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EC")]
public class LangScript
{
	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LanguageScript scriptCode;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string UIFontName;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string handwrittenFontName;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string gameTextFontName;

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x1014B70", Offset = "0x1014B70", VA = "0x1014B70")]
	public LangScript()
	{
	}
}
[Token(Token = "0x20000ED")]
public enum FontStyles
{
	[Token(Token = "0x4000467")]
	UI,
	[Token(Token = "0x4000468")]
	Handwritten,
	[Token(Token = "0x4000469")]
	GameText
}
[Serializable]
[Token(Token = "0x20000EE")]
public class Record
{
	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string id;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RecordCell[] cells;

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x1091834", Offset = "0x1091834", VA = "0x1091834")]
	public Record(string thisId, RecordCell[] thisCells)
	{
	}
}
[Serializable]
[Token(Token = "0x20000EF")]
public class RecordCell
{
	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string columnId;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string value;

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x1091884", Offset = "0x1091884", VA = "0x1091884")]
	public RecordCell(string thisColumnId, string thisValue)
	{
	}
}
[Token(Token = "0x20000F0")]
public enum Languages
{
	[Token(Token = "0x400046F")]
	enUS,
	[Token(Token = "0x4000470")]
	frFR,
	[Token(Token = "0x4000471")]
	itIT,
	[Token(Token = "0x4000472")]
	deDE,
	[Token(Token = "0x4000473")]
	esES,
	[Token(Token = "0x4000474")]
	jaJP,
	[Token(Token = "0x4000475")]
	zhCN,
	[Token(Token = "0x4000476")]
	zhTW,
	[Token(Token = "0x4000477")]
	koKR,
	[Token(Token = "0x4000478")]
	ruRU,
	[Token(Token = "0x4000479")]
	ptBR,
	[Token(Token = "0x400047A")]
	plPL,
	[Token(Token = "0x400047B")]
	esMX
}
[Token(Token = "0x20000F1")]
public enum LanguageScript
{
	[Token(Token = "0x400047D")]
	Latin,
	[Token(Token = "0x400047E")]
	ExtendedLatin,
	[Token(Token = "0x400047F")]
	Korean,
	[Token(Token = "0x4000480")]
	Japanese,
	[Token(Token = "0x4000481")]
	ChineseTrad,
	[Token(Token = "0x4000482")]
	ChineseSimple
}
[Token(Token = "0x20000F2")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE66B5C", Offset = "0xE66B5C")]
public class MT_CardDeckObject : ScriptableObject
{
	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Card> CardList;

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x1128C0C", Offset = "0x1128C0C", VA = "0x1128C0C")]
	public MT_CardDeckObject()
	{
	}
}
[Token(Token = "0x20000F3")]
public class MT_CardGameManager : MonoBehaviour
{
	[Token(Token = "0x20000F4")]
	private enum ValueType
	{
		[Token(Token = "0x40004A4")]
		Higher,
		[Token(Token = "0x40004A5")]
		Lower,
		[Token(Token = "0x40004A6")]
		Even
	}

	[Token(Token = "0x20000F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66BBC", Offset = "0xE66BBC")]
	private sealed class <WaitForOldJoeBet>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_CardGameManager <>4__this;

		[Token(Token = "0x170000B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000501")]
			[Address(RVA = "0x1035F74", Offset = "0x1035F74", VA = "0x1035F74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000503")]
			[Address(RVA = "0x1035FBC", Offset = "0x1035FBC", VA = "0x1035FBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x1035E20", Offset = "0x1035E20", VA = "0x1035E20")]
		[DebuggerHidden]
		public <WaitForOldJoeBet>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x1035E4C", Offset = "0x1035E4C", VA = "0x1035E4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0x1035E50", Offset = "0x1035E50", VA = "0x1035E50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0x1035F7C", Offset = "0x1035F7C", VA = "0x1035F7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66BCC", Offset = "0xE66BCC")]
	private sealed class <WaitForSecondTap>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_CardGameManager <>4__this;

		[Token(Token = "0x170000BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000507")]
			[Address(RVA = "0x10360B8", Offset = "0x10360B8", VA = "0x10360B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000509")]
			[Address(RVA = "0x1036100", Offset = "0x1036100", VA = "0x1036100", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x1035FC4", Offset = "0x1035FC4", VA = "0x1035FC4")]
		[DebuggerHidden]
		public <WaitForSecondTap>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x1035FF0", Offset = "0x1035FF0", VA = "0x1035FF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x1035FF4", Offset = "0x1035FF4", VA = "0x1035FF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x10360C0", Offset = "0x10360C0", VA = "0x10360C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MT_CardDeckObject cardDeck;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MT_OldJoeCardGameEvents oldJoeCardGameEvents;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE78F14", Offset = "0xE78F14")]
	[SerializeField]
	private float waitForSecondTapTime;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int wrongHandsToLose;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE78F5C", Offset = "0xE78F5C")]
	[SerializeField]
	private Transform npcGrabCardPos;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform npcPlaceCardPos;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE78FA4", Offset = "0xE78FA4")]
	[SerializeField]
	private float minTimeOldJoeAnswer;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float maxTimeOldJoeAnswer;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private UnityEvent onCorrectBet;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UnityEvent onIncorrectBet;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private UnityEvent onWinGame;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private UnityEvent onLoseGame;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private UnityEvent onHigher;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private UnityEvent onLower;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private UnityEvent onLoseTurn;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _isGameStarted;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool _waitForBet;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int _numberOfTaps;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _canTapASecondTime;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine _waitForTapCo;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int _currentIncorrectHands;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int _currentOJIncorrectHands;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<Card> _currentCardDeck;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int _currentCardIndex;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Card _prevCard;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Card _currentCard;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject _currentCardPrefab;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ValueType _correctType;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private ValueType _oldJoeBet;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float _currentYPos;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool _isOldJoeTurn;

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x1128C14", Offset = "0x1128C14", VA = "0x1128C14")]
	public void InitialiseGame()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x1128CCC", Offset = "0x1128CCC", VA = "0x1128CCC")]
	private void CardDeckShuffle()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x1128E5C", Offset = "0x1128E5C", VA = "0x1128E5C")]
	public void DealFirstCard()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x1128FA0", Offset = "0x1128FA0", VA = "0x1128FA0")]
	public void SetWaitForBetTrue()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x1128FAC", Offset = "0x1128FAC", VA = "0x1128FAC")]
	public void GetCard()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x1129044", Offset = "0x1129044", VA = "0x1129044")]
	public void PlayerGetCard()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x1129320", Offset = "0x1129320", VA = "0x1129320")]
	public void WaitForOldJoeToBet()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x112934C", Offset = "0x112934C", VA = "0x112934C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8BC08", Offset = "0xE8BC08")]
	private IEnumerator WaitForOldJoeBet()
	{
		return null;
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x11293C4", Offset = "0x11293C4", VA = "0x11293C4")]
	public void PlayerTap()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x1129488", Offset = "0x1129488", VA = "0x1129488")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8BC68", Offset = "0xE8BC68")]
	private IEnumerator WaitForSecondTap()
	{
		return null;
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x1129628", Offset = "0x1129628", VA = "0x1129628")]
	private void CheckCardValue()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x1129500", Offset = "0x1129500", VA = "0x1129500")]
	private void CheckPlayerBet(ValueType valueType)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x1129228", Offset = "0x1129228", VA = "0x1129228")]
	private void CheckOldJoeCardValue(ValueType valueType)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x11290F4", Offset = "0x11290F4", VA = "0x11290F4")]
	public void SpawnCard()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x1129690", Offset = "0x1129690", VA = "0x1129690")]
	public void WinGame()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x11296AC", Offset = "0x11296AC", VA = "0x11296AC")]
	public void LoseGame()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x11296C8", Offset = "0x11296C8", VA = "0x11296C8")]
	public MT_CardGameManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F7")]
public class Card
{
	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int cardValue;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string cardSuit;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cardPrefab;

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x12063F0", Offset = "0x12063F0", VA = "0x12063F0")]
	public Card()
	{
	}
}
[Token(Token = "0x20000F8")]
public class MT_OldJoeCardGameEvents : MonoBehaviour
{
	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MT_CardGameManager cardGameManager;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject deckObj;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform handDeckPos;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform oldJoeDeckPos;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform playerDeckPos;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator _animator;

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x10FDDD4", Offset = "0x10FDDD4", VA = "0x10FDDD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x10FDEA8", Offset = "0x10FDEA8", VA = "0x10FDEA8")]
	public void SetOldJoeToShuffleState()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x10FDF00", Offset = "0x10FDF00", VA = "0x10FDF00")]
	public void SetOldJoeToDealCardState()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x10FDF58", Offset = "0x10FDF58", VA = "0x10FDF58")]
	public void SetOldJoeToPassDeckState()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x10FDFB0", Offset = "0x10FDFB0", VA = "0x10FDFB0")]
	public void SetOldJoeToLoseTurnState()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x10FE008", Offset = "0x10FE008", VA = "0x10FE008")]
	public void SetOldJoeToDrinkState()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x10FE060", Offset = "0x10FE060", VA = "0x10FE060")]
	public void SetOldJoeToLoseGameState()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x10FE0B8", Offset = "0x10FE0B8", VA = "0x10FE0B8")]
	public void SetOldJoeToWinGameState()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x10FE110", Offset = "0x10FE110", VA = "0x10FE110")]
	public void GrabDeck()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x10FE1A4", Offset = "0x10FE1A4", VA = "0x10FE1A4")]
	public void DropDeck()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x10FE27C", Offset = "0x10FE27C", VA = "0x10FE27C")]
	public void DealFirstCard()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x10FE298", Offset = "0x10FE298", VA = "0x10FE298")]
	public void DealCard()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x10FE2B4", Offset = "0x10FE2B4", VA = "0x10FE2B4")]
	public void DropDeckForPlayer()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x10FE358", Offset = "0x10FE358", VA = "0x10FE358")]
	public void GetCard()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x10FE374", Offset = "0x10FE374", VA = "0x10FE374")]
	public MT_OldJoeCardGameEvents()
	{
	}
}
[Token(Token = "0x20000F9")]
public class MT_RenderNavMesh : MonoBehaviour
{
	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool renderLineNavMesh;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool renderGLNavMesh;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Color navMeshColor;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _lineRendererRoot;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject _lineRendererObject;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NavMeshTriangulation _triangulation;

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x12A45A0", Offset = "0x12A45A0", VA = "0x12A45A0")]
	public bool IsRenderingNavMesh()
	{
		return default(bool);
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x12A45C0", Offset = "0x12A45C0", VA = "0x12A45C0")]
	public MT_RenderNavMesh()
	{
	}
}
[Token(Token = "0x20000FA")]
public class MT_SubtitleLine : MonoBehaviour
{
	[Token(Token = "0x20000FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66BDC", Offset = "0xE66BDC")]
	private sealed class <HideSubtitleCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_SubtitleLine <>4__this;

		[Token(Token = "0x170000BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000527")]
			[Address(RVA = "0x32B9A10", Offset = "0x32B9A10", VA = "0x32B9A10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000529")]
			[Address(RVA = "0x32B9A58", Offset = "0x32B9A58", VA = "0x32B9A58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x32B97B4", Offset = "0x32B97B4", VA = "0x32B97B4")]
		[DebuggerHidden]
		public <HideSubtitleCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x32B97E0", Offset = "0x32B97E0", VA = "0x32B97E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x32B97E4", Offset = "0x32B97E4", VA = "0x32B97E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x32B9A18", Offset = "0x32B9A18", VA = "0x32B9A18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "BoxGroupAttribute", RVA = "0xE790DC", Offset = "0xE790DC")]
	[NaughtyAttributes.ReadOnly]
	public string speaker;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool speakerSet;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text subtitleText;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text backingText;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "BoxGroupAttribute", RVA = "0xE79138", Offset = "0xE79138")]
	[SerializeField]
	private float fadeSpeed;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public float duration;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Coroutine hideRoutine;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Tween backingFadeOutTween;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Tween backingFadeToTween;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Tween frontFadeOutTween;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Tween frontFadeToTween;

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x12B1498", Offset = "0x12B1498", VA = "0x12B1498")]
	public bool IsFadingOut()
	{
		return default(bool);
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x12B14D0", Offset = "0x12B14D0", VA = "0x12B14D0")]
	private bool IsFadingTo()
	{
		return default(bool);
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x12B1508", Offset = "0x12B1508", VA = "0x12B1508")]
	public void CompleteFade()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x12B1538", Offset = "0x12B1538", VA = "0x12B1538")]
	public void HideSubtitle()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x12B1640", Offset = "0x12B1640", VA = "0x12B1640")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8BD68", Offset = "0xE8BD68")]
	private IEnumerator HideSubtitleCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x12B16B8", Offset = "0x12B16B8", VA = "0x12B16B8")]
	public void FadeTo(float value)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x12B1778", Offset = "0x12B1778", VA = "0x12B1778")]
	public MT_SubtitleLine()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x12B1788", Offset = "0x12B1788", VA = "0x12B1788")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8BDC8", Offset = "0xE8BDC8")]
	private void <HideSubtitleCoroutine>b__15_0()
	{
	}
}
[Token(Token = "0x20000FC")]
public class MT_CollisionFade : MonoBehaviour
{
	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isFadedIn;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _enterHeadPosition;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _exitHeadPosition;

	[Token(Token = "0x40004CD")]
	private const float doorOpenAngle = 2f;

	[Token(Token = "0x40004CE")]
	private const string fadeTag = "Fade_Tag";

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x112CF38", Offset = "0x112CF38", VA = "0x112CF38")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x112D134", Offset = "0x112D134", VA = "0x112D134")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x112D190", Offset = "0x112D190", VA = "0x112D190")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x112D264", Offset = "0x112D264", VA = "0x112D264")]
	public MT_CollisionFade()
	{
	}
}
[Token(Token = "0x20000FD")]
public class AmmoCrate : MonoBehaviour
{
	[Token(Token = "0x20000FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66BEC", Offset = "0xE66BEC")]
	private sealed class <CheckAmmoPopup>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AmmoCrate <>4__this;

		[Token(Token = "0x170000BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000538")]
			[Address(RVA = "0x169E2D0", Offset = "0x169E2D0", VA = "0x169E2D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600053A")]
			[Address(RVA = "0x169E318", Offset = "0x169E318", VA = "0x169E318", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0x169E17C", Offset = "0x169E17C", VA = "0x169E17C")]
		[DebuggerHidden]
		public <CheckAmmoPopup>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x169E1A8", Offset = "0x169E1A8", VA = "0x169E1A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x169E1AC", Offset = "0x169E1AC", VA = "0x169E1AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x169E2D8", Offset = "0x169E2D8", VA = "0x169E2D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float reloadPromptDelay;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TutorialText samThoughtText;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MT_InfiniteObjectSpawner mtInfiniteObjectSpawner;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine _ammoCheckCoroutine;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _textDisplayed;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _lastOutOfAmmoTime;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string sammyThoughtPrompt;

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x13BCE5C", Offset = "0x13BCE5C", VA = "0x13BCE5C")]
	public void StartAmmoCheckCoroutine()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x13BCF10", Offset = "0x13BCF10", VA = "0x13BCF10")]
	public void StopAmmoCheckCoroutine()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x13BCE98", Offset = "0x13BCE98", VA = "0x13BCE98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8BE28", Offset = "0xE8BE28")]
	private IEnumerator CheckAmmoPopup()
	{
		return null;
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x13BCF4C", Offset = "0x13BCF4C", VA = "0x13BCF4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x13BCF88", Offset = "0x13BCF88", VA = "0x13BCF88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x13BCFB8", Offset = "0x13BCFB8", VA = "0x13BCFB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x13BCFBC", Offset = "0x13BCFBC", VA = "0x13BCFBC")]
	public AmmoCrate()
	{
	}
}
[Token(Token = "0x20000FF")]
public class AmmoUnlinker : MonoBehaviour
{
	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HVRMagazineSocket magazineSocket;

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x13BD938", Offset = "0x13BD938", VA = "0x13BD938")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x13BD9FC", Offset = "0x13BD9FC", VA = "0x13BD9FC")]
	private void OnBeforeHoverEnter(HVRGrabberBase arg0, HVRGrabbable grabbable)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x13BDAAC", Offset = "0x13BDAAC", VA = "0x13BDAAC")]
	public AmmoUnlinker()
	{
	}
}
[Token(Token = "0x2000100")]
public class CableComponent : MonoBehaviour
{
	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform endPoint;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material cableMaterial;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float cableLength;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int totalSegments;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float segmentsPerUnit;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int segments;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float cableWidth;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private int verletIterations;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int solverIterations;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float stiffness;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer line;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CableParticle[] points;

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x120486C", Offset = "0x120486C", VA = "0x120486C")]
	private void Start()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x1204890", Offset = "0x1204890", VA = "0x1204890")]
	private void InitCableParticles()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x1204B0C", Offset = "0x1204B0C", VA = "0x1204B0C")]
	private void InitLineRenderer()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x1204CF4", Offset = "0x1204CF4", VA = "0x1204CF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x1204CF8", Offset = "0x1204CF8", VA = "0x1204CF8")]
	private void RenderCable()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x1204DF8", Offset = "0x1204DF8", VA = "0x1204DF8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x1204E44", Offset = "0x1204E44", VA = "0x1204E44")]
	private void VerletIntegrate()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x1204F28", Offset = "0x1204F28", VA = "0x1204F28")]
	private void SolveConstraints()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x1205140", Offset = "0x1205140", VA = "0x1205140")]
	private void SolveDistanceConstraint()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x12052A0", Offset = "0x12052A0", VA = "0x12052A0")]
	private void SolveDistanceConstraint(CableParticle particleA, CableParticle particleB, float segmentLength)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x12051D0", Offset = "0x12051D0", VA = "0x12051D0")]
	private void SolveStiffnessConstraint()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x1205460", Offset = "0x1205460", VA = "0x1205460")]
	private void SolveStiffnessConstraint(CableParticle cableParticle, float distance)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x1205464", Offset = "0x1205464", VA = "0x1205464")]
	public CableComponent()
	{
	}
}
[Token(Token = "0x2000101")]
public class CableParticle
{
	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 _position;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _oldPosition;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _boundTo;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody _boundRigid;

	[Token(Token = "0x170000C0")]
	public Vector3 Position
	{
		[Token(Token = "0x600054B")]
		[Address(RVA = "0x120549C", Offset = "0x120549C", VA = "0x120549C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600054C")]
		[Address(RVA = "0x12054A8", Offset = "0x12054A8", VA = "0x12054A8")]
		set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	public Vector3 Velocity
	{
		[Token(Token = "0x600054D")]
		[Address(RVA = "0x12054B4", Offset = "0x12054B4", VA = "0x12054B4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x1204C04", Offset = "0x1204C04", VA = "0x1204C04")]
	public CableParticle(Vector3 newPosition)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x1204F74", Offset = "0x1204F74", VA = "0x1204F74")]
	public void UpdateVerlet(Vector3 gravityDisplacement)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x1205540", Offset = "0x1205540", VA = "0x1205540")]
	public void UpdatePosition(Vector3 newPos)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x1204C50", Offset = "0x1204C50", VA = "0x1204C50")]
	public void Bind(Transform to)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x120555C", Offset = "0x120555C", VA = "0x120555C")]
	public void UnBind()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x12053F4", Offset = "0x12053F4", VA = "0x12053F4")]
	public bool IsFree()
	{
		return default(bool);
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x12054D4", Offset = "0x12054D4", VA = "0x12054D4")]
	public bool IsBound()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000102")]
public class MT_Cuttable : MonoBehaviour
{
	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Transform> _cutPoints;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent onCut;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MT_Highlight _cuttableHighlight;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isCutted;

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x112E154", Offset = "0x112E154", VA = "0x112E154")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x112E1B8", Offset = "0x112E1B8", VA = "0x112E1B8")]
	public void EnableHighlight(bool isEnable)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x112E264", Offset = "0x112E264", VA = "0x112E264")]
	public void Cut(Transform cuttingTool)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x112E514", Offset = "0x112E514", VA = "0x112E514")]
	public MT_Cuttable()
	{
	}
}
[Token(Token = "0x2000103")]
public class MT_CuttablePoint : MonoBehaviour
{
	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent onPointCut;

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x112E500", Offset = "0x112E500", VA = "0x112E500")]
	public void Cut()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x112E51C", Offset = "0x112E51C", VA = "0x112E51C")]
	public MT_CuttablePoint()
	{
	}
}
[Token(Token = "0x2000104")]
public class MT_CuttingTool : MonoBehaviour
{
	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent onCut;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MT_Cuttable _selectedCuttable;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<GameObject, int> _cuttables;

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x112E524", Offset = "0x112E524", VA = "0x112E524")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x112E710", Offset = "0x112E710", VA = "0x112E710")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x112E89C", Offset = "0x112E89C", VA = "0x112E89C")]
	public void Cut()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x112E97C", Offset = "0x112E97C", VA = "0x112E97C")]
	public MT_CuttingTool()
	{
	}
}
[Token(Token = "0x2000105")]
public class MT_Bolt : MonoBehaviour
{
	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isScrew;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent onScrew;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent onUnscrew;

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x1127774", Offset = "0x1127774", VA = "0x1127774")]
	public void SetBoltToScrew(bool setToScrew)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x112779C", Offset = "0x112779C", VA = "0x112779C")]
	public MT_Bolt()
	{
	}
}
[Token(Token = "0x2000106")]
public class MT_CardDeck : MonoBehaviour, IGrabbable, IHoverable, ITaggable
{
	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string objectTag;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int priority;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool hasUniqueHoverPose;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[SerializeField]
	protected bool isGrabbable;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GrabType grabType;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	protected bool hasCustomGrabCenter;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Transform customGrabCenter;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent onGrab;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent onDrop;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent onHoverEnter;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent onHoverExit;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _isGrabbed;

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x1128ABC", Offset = "0x1128ABC", VA = "0x1128ABC", Slot = "8")]
	public void Grab(MT_HandInteractor handInteractor)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x1128ADC", Offset = "0x1128ADC", VA = "0x1128ADC", Slot = "9")]
	public void Drop(MT_HandInteractor handInteractor)
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x1128AF8", Offset = "0x1128AF8", VA = "0x1128AF8")]
	public void SetGrabbable(bool setGrabbable)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x1128B04", Offset = "0x1128B04", VA = "0x1128B04", Slot = "10")]
	public UnityEvent GetHoverEnter()
	{
		return null;
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x1128B0C", Offset = "0x1128B0C", VA = "0x1128B0C", Slot = "11")]
	public UnityEvent GetHoverExit()
	{
		return null;
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x1128B14", Offset = "0x1128B14", VA = "0x1128B14", Slot = "12")]
	public void InvokeHoverEnter()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x1128B28", Offset = "0x1128B28", VA = "0x1128B28", Slot = "13")]
	public void InvokeHoverExit()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x1128B3C", Offset = "0x1128B3C", VA = "0x1128B3C", Slot = "14")]
	public int GetPriority()
	{
		return default(int);
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x1128B44", Offset = "0x1128B44", VA = "0x1128B44", Slot = "15")]
	public bool HasUniqueHoverPose()
	{
		return default(bool);
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x1128B4C", Offset = "0x1128B4C", VA = "0x1128B4C", Slot = "5")]
	public bool IsGrabbable()
	{
		return default(bool);
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x1128B54", Offset = "0x1128B54", VA = "0x1128B54", Slot = "6")]
	public GrabType GetGrabType()
	{
		return default(GrabType);
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x1128B5C", Offset = "0x1128B5C", VA = "0x1128B5C", Slot = "7")]
	public Transform GetObjectGrabCenter()
	{
		return null;
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x1128BE8", Offset = "0x1128BE8", VA = "0x1128BE8", Slot = "4")]
	public bool IsGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x1128BF0", Offset = "0x1128BF0", VA = "0x1128BF0", Slot = "16")]
	public string ObjectTag()
	{
		return null;
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x1128BF8", Offset = "0x1128BF8", VA = "0x1128BF8")]
	public MT_CardDeck()
	{
	}
}
[Token(Token = "0x2000107")]
public class MT_CigCase : MT_Switchable
{
	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<MT_SnapDropZone> snapZones;

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x112A6EC", Offset = "0x112A6EC", VA = "0x112A6EC", Slot = "7")]
	[PublicAPI]
	public override void ToggleOn()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x112A8E4", Offset = "0x112A8E4", VA = "0x112A8E4", Slot = "8")]
	[PublicAPI]
	public override void ToggleOff()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x112AAD8", Offset = "0x112AAD8", VA = "0x112AAD8")]
	public void CheckIfCaseIsClosed()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x112ACCC", Offset = "0x112ACCC", VA = "0x112ACCC")]
	public MT_CigCase()
	{
	}
}
[Token(Token = "0x2000108")]
public class MT_DiceSide : MonoBehaviour
{
	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int diceValue;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<int> onSideLanded;

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x113729C", Offset = "0x113729C", VA = "0x113729C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x113733C", Offset = "0x113733C", VA = "0x113733C")]
	public MT_DiceSide()
	{
	}
}
[Serializable]
[Token(Token = "0x2000109")]
public struct MT_Event
{
	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public UnityEvent Event;

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x15BD8E0", Offset = "0x15BD8E0", VA = "0x15BD8E0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE8BEF8", Offset = "0xE8BEF8")]
	private void TestEvent()
	{
	}
}
[Token(Token = "0x200010A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE66BFC", Offset = "0xE66BFC")]
public class GrabbableRigidbodyOptionsRememberer : MonoBehaviour
{
	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HVRGrabbable _grabbable;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody _rb;

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x10D3F08", Offset = "0x10D3F08", VA = "0x10D3F08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x10D3F94", Offset = "0x10D3F94", VA = "0x10D3F94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x10D4058", Offset = "0x10D4058", VA = "0x10D4058")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x10D411C", Offset = "0x10D411C", VA = "0x10D411C")]
	private void OnGrabbed(HVRGrabberBase hvrGrabberBase, HVRGrabbable hvrGrabbable)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x10D4240", Offset = "0x10D4240", VA = "0x10D4240")]
	public GrabbableRigidbodyOptionsRememberer()
	{
	}
}
[Token(Token = "0x200010B")]
public class MT_DrawableSurface : MonoBehaviour
{
	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _orderInLayer;

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x15BCCB4", Offset = "0x15BCCB4", VA = "0x15BCCB4")]
	public int GetOrderInLayer()
	{
		return default(int);
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x15BCCBC", Offset = "0x15BCCBC", VA = "0x15BCCBC")]
	public void IncrementOrderInLayer()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x15BCCCC", Offset = "0x15BCCCC", VA = "0x15BCCCC")]
	public MT_DrawableSurface()
	{
	}
}
[Token(Token = "0x200010C")]
public class MT_RotationEvents : MonoBehaviour
{
	[Token(Token = "0x200010D")]
	public enum TriggerType
	{
		[Token(Token = "0x400050D")]
		OneShot,
		[Token(Token = "0x400050E")]
		Repeat
	}

	[Serializable]
	[Token(Token = "0x200010E")]
	public class RotationEvent
	{
		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TriggerType triggerType;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent triggerEvent;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int eventAngle;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _triggered;

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x32B8D40", Offset = "0x32B8D40", VA = "0x32B8D40")]
		public bool GetTriggered()
		{
			return default(bool);
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x32B8D48", Offset = "0x32B8D48", VA = "0x32B8D48")]
		public void Trigger()
		{
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x32B8D80", Offset = "0x32B8D80", VA = "0x32B8D80")]
		public RotationEvent()
		{
		}
	}

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HVRRotationTracker rotationTracker;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RotationEvent[] events;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _previousAngle;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _currentAngle;

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x12A52B8", Offset = "0x12A52B8", VA = "0x12A52B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x12A53C8", Offset = "0x12A53C8", VA = "0x12A53C8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x12A5444", Offset = "0x12A5444", VA = "0x12A5444")]
	private void CheckRotatorEvent(int index)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x12A54D8", Offset = "0x12A54D8", VA = "0x12A54D8")]
	public MT_RotationEvents()
	{
	}
}
[Token(Token = "0x200010F")]
public class MT_GazeEvent : MonoBehaviour
{
	[Token(Token = "0x2000110")]
	private enum Behaviour
	{
		[Token(Token = "0x400052A")]
		OneShot,
		[Token(Token = "0x400052B")]
		Repeating
	}

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _playerLookingAt;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool _playerLookingAtPreviously;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool _playerStaringAt;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float distance;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float stareEventDuration;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float lookAtAngleLimit;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _stareDuration;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Behaviour behaviour;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent startEvent;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UnityEvent stareEvent;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UnityEvent endEvent;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Bounds _meshBounds;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Camera _playerCamera;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RaycastHit _hitData;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private LayerMask _collisionMask;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool _performedStartEvent;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool _performedStareEvent;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	private bool _performedLookAwayEvent;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private List<SphereCollider> colliders;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] CollisionLayers;

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x15C34E8", Offset = "0x15C34E8", VA = "0x15C34E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x15C3690", Offset = "0x15C3690", VA = "0x15C3690")]
	private void Update()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x15C3788", Offset = "0x15C3788", VA = "0x15C3788")]
	private bool VisibleByPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x15C3DD4", Offset = "0x15C3DD4", VA = "0x15C3DD4")]
	private bool CheckAngleParameters()
	{
		return default(bool);
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x15C3C04", Offset = "0x15C3C04", VA = "0x15C3C04")]
	private Camera GetPlayerCamera()
	{
		return null;
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x15C3E94", Offset = "0x15C3E94", VA = "0x15C3E94")]
	public MT_GazeEvent()
	{
	}
}
[Token(Token = "0x2000111")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE66C5C", Offset = "0xE66C5C")]
public class MT_Respawner : MonoBehaviour
{
	[Token(Token = "0x2000112")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66C94", Offset = "0xE66C94")]
	private sealed class <WaitToRespawn>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_Respawner <>4__this;

		[Token(Token = "0x170000C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600059D")]
			[Address(RVA = "0x32B8CF0", Offset = "0x32B8CF0", VA = "0x32B8CF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600059F")]
			[Address(RVA = "0x32B8D38", Offset = "0x32B8D38", VA = "0x32B8D38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x32B8B24", Offset = "0x32B8B24", VA = "0x32B8B24")]
		[DebuggerHidden]
		public <WaitToRespawn>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x32B8B50", Offset = "0x32B8B50", VA = "0x32B8B50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x32B8B54", Offset = "0x32B8B54", VA = "0x32B8B54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x32B8CF8", Offset = "0x32B8CF8", VA = "0x32B8CF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float waitingTime;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float distanceThreshold;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool PauseRespawning;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool respawnBasedOnDistanceFromPlayer;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _playerTransform;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HVRGrabbable _grabbable;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _objectTransform;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody _rb;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _homePosition;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion _homeRotation;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform spawnTransform;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly float _pollingTime;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _timeSincePoll;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _isRespawning;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int _grabCount;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Coroutine _waitToRespawn;

	[Token(Token = "0x400053C")]
	private const string FloorLayer = "Default";

	[Token(Token = "0x400053D")]
	private const string HandLayer = "Hand";

	[Token(Token = "0x400053E")]
	private const string ObjLayer = "Object_Collision";

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	public UnityEvent respawnEvent;

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x12A470C", Offset = "0x12A470C", VA = "0x12A470C")]
	private void Start()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x12A49C4", Offset = "0x12A49C4", VA = "0x12A49C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x12A4B70", Offset = "0x12A4B70", VA = "0x12A4B70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x12A4D1C", Offset = "0x12A4D1C", VA = "0x12A4D1C")]
	private void OnGrabbed(HVRHandGrabber grabber, HVRGrabbable grabbable)
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x12A4D58", Offset = "0x12A4D58", VA = "0x12A4D58")]
	private void OnReleased(HVRHandGrabber grabber, HVRGrabbable grabbable)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x12A4960", Offset = "0x12A4960", VA = "0x12A4960")]
	private void UpdateHomePosition()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x12A4D68", Offset = "0x12A4D68", VA = "0x12A4D68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x12A4E58", Offset = "0x12A4E58", VA = "0x12A4E58")]
	public bool IsOverThresholdDistanceFromSpawn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x12A4FB8", Offset = "0x12A4FB8", VA = "0x12A4FB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8BF10", Offset = "0xE8BF10")]
	private IEnumerator WaitToRespawn()
	{
		return null;
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x12A5030", Offset = "0x12A5030", VA = "0x12A5030")]
	public void SetSpawnTransform(Transform t)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x12A4D40", Offset = "0x12A4D40", VA = "0x12A4D40")]
	private void StopRespawn()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x12A5038", Offset = "0x12A5038", VA = "0x12A5038")]
	public void TogglePause(bool isPaused)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x12A5044", Offset = "0x12A5044", VA = "0x12A5044")]
	public MT_Respawner()
	{
	}
}
[Token(Token = "0x2000113")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE66CA4", Offset = "0xE66CA4")]
public class InventoryCrowbarEnabler : MonoBehaviour
{
	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HVRSocket socket;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool editor;

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x10DF6E0", Offset = "0x10DF6E0", VA = "0x10DF6E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x10DF754", Offset = "0x10DF754", VA = "0x10DF754")]
	public InventoryCrowbarEnabler()
	{
	}
}
[Token(Token = "0x2000114")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE66D04", Offset = "0xE66D04")]
public class PhysicalCrowbarDisabler : MonoBehaviour
{
	[Token(Token = "0x2000115")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66D64", Offset = "0xE66D64")]
	private sealed class <Setup>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhysicalCrowbarDisabler <>4__this;

		[Token(Token = "0x170000C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005AC")]
			[Address(RVA = "0x32C4948", Offset = "0x32C4948", VA = "0x32C4948", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005AE")]
			[Address(RVA = "0x32C4990", Offset = "0x32C4990", VA = "0x32C4990", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x32C47F0", Offset = "0x32C47F0", VA = "0x32C47F0")]
		[DebuggerHidden]
		public <Setup>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x32C481C", Offset = "0x32C481C", VA = "0x32C481C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x32C4820", Offset = "0x32C4820", VA = "0x32C4820", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x32C4950", Offset = "0x32C4950", VA = "0x32C4950", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool editor;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HVRGrabbable grabbable;

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x107DBC0", Offset = "0x107DBC0", VA = "0x107DBC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x107DC1C", Offset = "0x107DC1C", VA = "0x107DC1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x107DCC0", Offset = "0x107DCC0", VA = "0x107DCC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x107DD84", Offset = "0x107DD84", VA = "0x107DD84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x107DC48", Offset = "0x107DC48", VA = "0x107DC48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8BFC0", Offset = "0xE8BFC0")]
	private IEnumerator Setup()
	{
		return null;
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x107DE48", Offset = "0x107DE48", VA = "0x107DE48")]
	public void ObtainCrowbar(HVRHandGrabber arg0, HVRGrabbable hvrGrabbable)
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x107E078", Offset = "0x107E078", VA = "0x107E078")]
	public PhysicalCrowbarDisabler()
	{
	}
}
[Token(Token = "0x2000116")]
public class MT_HVRHoverSocketColourSwitcher : HVRSocketHoverAction
{
	[Token(Token = "0x2000117")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66D74", Offset = "0xE66D74")]
	private sealed class <ScaleHoverTarget>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_HVRHoverSocketColourSwitcher <>4__this;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color targetColor;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <start>5__2;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <elapsed>5__3;

		[Token(Token = "0x170000C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005BA")]
			[Address(RVA = "0x1037C2C", Offset = "0x1037C2C", VA = "0x1037C2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005BC")]
			[Address(RVA = "0x1037C74", Offset = "0x1037C74", VA = "0x1037C74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x1037B04", Offset = "0x1037B04", VA = "0x1037B04")]
		[DebuggerHidden]
		public <ScaleHoverTarget>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x1037B30", Offset = "0x1037B30", VA = "0x1037B30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x1037B34", Offset = "0x1037B34", VA = "0x1037B34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x1037C34", Offset = "0x1037C34", VA = "0x1037C34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE79494", Offset = "0xE79494")]
	public Color color;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE794CC", Offset = "0xE794CC")]
	public float shiftTime;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE79504", Offset = "0xE79504")]
	public bool shiftIfInvalid;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color _originalHoverTargetColor;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine _hoverRoutine;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SpriteRenderer renderer;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _hidden;

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x15C7A50", Offset = "0x15C7A50", VA = "0x15C7A50", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x15C7AE8", Offset = "0x15C7AE8", VA = "0x15C7AE8", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x15C7AF0", Offset = "0x15C7AF0", VA = "0x15C7AF0")]
	public void Hide()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x15C7B6C", Offset = "0x15C7B6C", VA = "0x15C7B6C")]
	public void Display()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x15C7BB8", Offset = "0x15C7BB8", VA = "0x15C7BB8", Slot = "6")]
	public override void OnHoverEnter(HVRSocket socket, HVRGrabbable grabbable, bool isValid)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x15C7D1C", Offset = "0x15C7D1C", VA = "0x15C7D1C", Slot = "7")]
	public override void OnHoverExit(HVRSocket socket, HVRGrabbable grabbable, bool isValid)
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x15C7C7C", Offset = "0x15C7C7C", VA = "0x15C7C7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8C070", Offset = "0xE8C070")]
	private IEnumerator ScaleHoverTarget(Color targetColor)
	{
		return null;
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x15C7E08", Offset = "0x15C7E08", VA = "0x15C7E08")]
	public MT_HVRHoverSocketColourSwitcher()
	{
	}
}
[Token(Token = "0x2000118")]
public class Calibrate : MonoBehaviour
{
	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x1205590", Offset = "0x1205590", VA = "0x1205590")]
	public void DoCalibrate()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x12055BC", Offset = "0x12055BC", VA = "0x12055BC")]
	public Calibrate()
	{
	}
}
[Token(Token = "0x2000119")]
public class MT_PlayerPersonalSpace : MonoBehaviour
{
	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7954C", Offset = "0xE7954C")]
	private float circleRadius;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent enemyInPersonalSpaceEvent;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<MT_NPCGameplay> npcList;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool showDebugInfo;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _canCheck;

	[Token(Token = "0x170000C8")]
	public bool CanCheck
	{
		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x133325C", Offset = "0x133325C", VA = "0x133325C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x1333264", Offset = "0x1333264", VA = "0x1333264")]
		set
		{
		}
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x1333270", Offset = "0x1333270", VA = "0x1333270")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x1333274", Offset = "0x1333274", VA = "0x1333274")]
	private void LocateNPCsInScene()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x13333A4", Offset = "0x13333A4", VA = "0x13333A4")]
	private void AddNPCToList(MT_NPCGameplay npc)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x1333444", Offset = "0x1333444", VA = "0x1333444")]
	private void RemoveNPCFromList(MT_NPCGameplay npc)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x13334E4", Offset = "0x13334E4", VA = "0x13334E4")]
	private void CheckIfNPCIsInPersonalSpace()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x13334E8", Offset = "0x13334E8", VA = "0x13334E8")]
	private bool IsNPCInRange(float sqrLength)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x13334FC", Offset = "0x13334FC", VA = "0x13334FC")]
	private void PerformRaycastToNPC(Vector3 playerPos, Vector3 rayDir, MT_NPCGameplay npcGameplay)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x1333724", Offset = "0x1333724", VA = "0x1333724")]
	private void ExecuteNPCInPersonalSpaceEvents(MT_NPCGameplay npcGameplay)
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x13337B8", Offset = "0x13337B8", VA = "0x13337B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x13337BC", Offset = "0x13337BC", VA = "0x13337BC")]
	public MT_PlayerPersonalSpace()
	{
	}
}
[Token(Token = "0x200011A")]
public class TrackedPoseDriverDataDescription
{
	[Token(Token = "0x200011B")]
	public struct PoseData
	{
		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<string> PoseNames;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<MT_TrackedPoseDriver.TrackedPose> Poses;
	}

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<PoseData> DeviceData;

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x1352D70", Offset = "0x1352D70", VA = "0x1352D70")]
	public TrackedPoseDriverDataDescription()
	{
	}
}
[Token(Token = "0x200011C")]
[Flags]
public enum PoseDataFlags
{
	[Token(Token = "0x4000560")]
	NoData = 0,
	[Token(Token = "0x4000561")]
	Position = 1,
	[Token(Token = "0x4000562")]
	Rotation = 2
}
[Token(Token = "0x200011D")]
public static class PoseDataSource
{
	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<XRNodeState> _nodeStates;

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x1088D08", Offset = "0x1088D08", VA = "0x1088D08")]
	private static PoseDataFlags GetNodePoseData(XRNode node, out Pose resultPose)
	{
		return default(PoseDataFlags);
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x1088F98", Offset = "0x1088F98", VA = "0x1088F98")]
	public static PoseDataFlags GetDataFromSource(MT_TrackedPoseDriver.TrackedPose poseSource, out Pose resultPose)
	{
		return default(PoseDataFlags);
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x10892E8", Offset = "0x10892E8", VA = "0x10892E8")]
	private static PoseDataFlags TryGetTangoPose(out Pose pose)
	{
		return default(PoseDataFlags);
	}
}
[Serializable]
[Token(Token = "0x200011E")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE66D94", Offset = "0xE66D94")]
public class MT_TrackedPoseDriver : MonoBehaviour
{
	[Token(Token = "0x200011F")]
	public enum DeviceType
	{
		[Token(Token = "0x400056B")]
		GenericXRDevice,
		[Token(Token = "0x400056C")]
		GenericXRController,
		[Token(Token = "0x400056D")]
		GenericXRRemote
	}

	[Token(Token = "0x2000120")]
	public enum TrackedPose
	{
		[Token(Token = "0x400056F")]
		LeftEye = 0,
		[Token(Token = "0x4000570")]
		RightEye = 1,
		[Token(Token = "0x4000571")]
		Center = 2,
		[Token(Token = "0x4000572")]
		Head = 3,
		[Token(Token = "0x4000573")]
		LeftPose = 4,
		[Token(Token = "0x4000574")]
		RightPose = 5,
		[Token(Token = "0x4000575")]
		ColorCamera = 6,
		[Token(Token = "0x4000576")]
		RemotePose = 10
	}

	[Token(Token = "0x2000121")]
	public enum TrackingType
	{
		[Token(Token = "0x4000578")]
		RotationAndPosition,
		[Token(Token = "0x4000579")]
		RotationOnly,
		[Token(Token = "0x400057A")]
		PositionOnly
	}

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private DeviceType deviceType;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private TrackedPose poseSource;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TrackingType trackingType;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Pose _originPose;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<XRInputSubsystem> _inputSubsystems;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TrackingOriginModeFlags _trackingOriginMode;

	[Token(Token = "0x170000C9")]
	public DeviceType DeviceTypeType
	{
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x12B6028", Offset = "0x12B6028", VA = "0x12B6028")]
		get
		{
			return default(DeviceType);
		}
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x12B6030", Offset = "0x12B6030", VA = "0x12B6030")]
		set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public TrackedPose PoseSource
	{
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x12B6038", Offset = "0x12B6038", VA = "0x12B6038")]
		get
		{
			return default(TrackedPose);
		}
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x12B6040", Offset = "0x12B6040", VA = "0x12B6040")]
		set
		{
		}
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x12B6048", Offset = "0x12B6048", VA = "0x12B6048")]
	public bool SetPoseSource(DeviceType device, TrackedPose pose)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x12B61A8", Offset = "0x12B61A8", VA = "0x12B61A8")]
	private PoseDataFlags GetPoseData(DeviceType device, TrackedPose pose, out Pose resultPose)
	{
		return default(PoseDataFlags);
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x12B621C", Offset = "0x12B621C", VA = "0x12B621C")]
	private void CacheLocalPosition()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x12B6278", Offset = "0x12B6278", VA = "0x12B6278")]
	private void ResetToCachedLocalPosition()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x12B6378", Offset = "0x12B6378", VA = "0x12B6378")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x12B64B0", Offset = "0x12B64B0", VA = "0x12B64B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x12B652C", Offset = "0x12B652C", VA = "0x12B652C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x12B65B0", Offset = "0x12B65B0", VA = "0x12B65B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x12B66FC", Offset = "0x12B66FC", VA = "0x12B66FC")]
	private void OnBeforeRender()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x12B6290", Offset = "0x12B6290", VA = "0x12B6290")]
	private void SetLocalTransform(Vector3 newPosition, Quaternion newRotation, PoseDataFlags poseFlags)
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x12B6774", Offset = "0x12B6774", VA = "0x12B6774")]
	private Pose TransformPoseByOrigin(Pose pose)
	{
		return default(Pose);
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x12B6628", Offset = "0x12B6628", VA = "0x12B6628")]
	private void PerformUpdate()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x12B6788", Offset = "0x12B6788", VA = "0x12B6788")]
	public void SetTrackingOriginMode(TrackingOriginModeFlags trackingMode)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x12B639C", Offset = "0x12B639C", VA = "0x12B639C")]
	public bool SetupCamera()
	{
		return default(bool);
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x12B6790", Offset = "0x12B6790", VA = "0x12B6790")]
	private bool SetupCamera(XRInputSubsystem subsystem)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x12B68A0", Offset = "0x12B68A0", VA = "0x12B68A0")]
	public MT_TrackedPoseDriver()
	{
	}
}
[Token(Token = "0x2000122")]
public class MT_TeleportFade : MonoBehaviour
{
	[Token(Token = "0x2000123")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66DA8", Offset = "0xE66DA8")]
	private sealed class <FadeOut>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_TeleportFade <>4__this;

		[Token(Token = "0x170000CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005EE")]
			[Address(RVA = "0x32B9C34", Offset = "0x32B9C34", VA = "0x32B9C34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005F0")]
			[Address(RVA = "0x32B9C7C", Offset = "0x32B9C7C", VA = "0x32B9C7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x32B9AB0", Offset = "0x32B9AB0", VA = "0x32B9AB0")]
		[DebuggerHidden]
		public <FadeOut>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x32B9ADC", Offset = "0x32B9ADC", VA = "0x32B9ADC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x32B9AE0", Offset = "0x32B9AE0", VA = "0x32B9AE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x32B9C3C", Offset = "0x32B9C3C", VA = "0x32B9C3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer fadeQuad;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _alpha;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float delay;

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x12B4B80", Offset = "0x12B4B80", VA = "0x12B4B80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x12B4BF8", Offset = "0x12B4BF8", VA = "0x12B4BF8")]
	public void BeginFade()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x12B4C84", Offset = "0x12B4C84", VA = "0x12B4C84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8C120", Offset = "0xE8C120")]
	private IEnumerator FadeOut()
	{
		return null;
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x12B4CFC", Offset = "0x12B4CFC", VA = "0x12B4CFC")]
	private Color GetFadeColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x12B4B84", Offset = "0x12B4B84", VA = "0x12B4B84")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x12B4D3C", Offset = "0x12B4D3C", VA = "0x12B4D3C")]
	public MT_TeleportFade()
	{
	}
}
[Token(Token = "0x2000124")]
public sealed class MT_Tunnelling : MonoBehaviour
{
	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 _originalScale;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CharacterController motionTarget;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MeshRenderer fadeQuad;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float minScaleMultiplier;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float maxScaleMultiplier;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float maxAlpha;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float maxVelocity;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float lerpSpeed;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _scaledMangitude;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _magnitude;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _quadDisplaying;

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x12B6B74", Offset = "0x12B6B74", VA = "0x12B6B74")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x12B6BB8", Offset = "0x12B6BB8", VA = "0x12B6BB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x12B6BF0", Offset = "0x12B6BF0", VA = "0x12B6BF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x12B6C1C", Offset = "0x12B6C1C", VA = "0x12B6C1C")]
	private void CalculateMagnitude()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x12B6C98", Offset = "0x12B6C98", VA = "0x12B6C98")]
	private void UpdateScale()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x12B6D0C", Offset = "0x12B6D0C", VA = "0x12B6D0C")]
	private void UpdateAlpha()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x12B6E0C", Offset = "0x12B6E0C", VA = "0x12B6E0C")]
	public MT_Tunnelling()
	{
	}
}
[Token(Token = "0x2000125")]
public class MT_TutorialBlackboardSubscriber : MonoBehaviour
{
	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string visualScriptingID;

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x12B75F4", Offset = "0x12B75F4", VA = "0x12B75F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x12B768C", Offset = "0x12B768C", VA = "0x12B768C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x12B7720", Offset = "0x12B7720", VA = "0x12B7720")]
	public MT_TutorialBlackboardSubscriber()
	{
	}
}
[Token(Token = "0x2000126")]
public sealed class MT_VFXManager : IGameModule
{
	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7968C", Offset = "0xE7968C")]
	private static MT_OverlayVFX <OverlayVFX>k__BackingField;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7969C", Offset = "0xE7969C")]
	private BlinkerController <Blinker>k__BackingField;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE796AC", Offset = "0xE796AC")]
	private MT_VFX_FogController <Fogger>k__BackingField;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE796BC", Offset = "0xE796BC")]
	private static BrightnessAndContrast <BrightnessAndContrast>k__BackingField;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE796CC", Offset = "0xE796CC")]
	private static MT_TA_TraumaParams <TraumaParams>k__BackingField;

	[Token(Token = "0x170000CD")]
	public static MT_OverlayVFX OverlayVFX
	{
		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x113CC30", Offset = "0x113CC30", VA = "0x113CC30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8C1E0", Offset = "0xE8C1E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x113CBDC", Offset = "0x113CBDC", VA = "0x113CBDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8C1D0", Offset = "0xE8C1D0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	public BlinkerController Blinker
	{
		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x113CC84", Offset = "0x113CC84", VA = "0x113CC84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8C200", Offset = "0xE8C200")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x113CC7C", Offset = "0x113CC7C", VA = "0x113CC7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8C1F0", Offset = "0xE8C1F0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public MT_VFX_FogController Fogger
	{
		[Token(Token = "0x6000600")]
		[Address(RVA = "0x113CC94", Offset = "0x113CC94", VA = "0x113CC94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8C220", Offset = "0xE8C220")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x113CC8C", Offset = "0x113CC8C", VA = "0x113CC8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8C210", Offset = "0xE8C210")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D0")]
	public static BrightnessAndContrast BrightnessAndContrast
	{
		[Token(Token = "0x6000602")]
		[Address(RVA = "0x113CCF0", Offset = "0x113CCF0", VA = "0x113CCF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8C240", Offset = "0xE8C240")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000601")]
		[Address(RVA = "0x113CC9C", Offset = "0x113CC9C", VA = "0x113CC9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8C230", Offset = "0xE8C230")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D1")]
	public static MT_TA_TraumaParams TraumaParams
	{
		[Token(Token = "0x6000605")]
		[Address(RVA = "0x113CDE4", Offset = "0x113CDE4", VA = "0x113CDE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8C260", Offset = "0xE8C260")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000604")]
		[Address(RVA = "0x113CD90", Offset = "0x113CD90", VA = "0x113CD90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8C250", Offset = "0xE8C250")]
		private set
		{
		}
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x113CD3C", Offset = "0x113CD3C", VA = "0x113CD3C")]
	public void RegisterOverlayVFX(MT_OverlayVFX vfx)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x113CE30", Offset = "0x113CE30", VA = "0x113CE30", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x113D028", Offset = "0x113D028", VA = "0x113D028")]
	public static void InitializeBrightnessAndContrast()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x113D1B8", Offset = "0x113D1B8", VA = "0x113D1B8")]
	public static void OnLocationEnter()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x113D1C4", Offset = "0x113D1C4", VA = "0x113D1C4", Slot = "5")]
	public void Terminate()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x113D1C8", Offset = "0x113D1C8", VA = "0x113D1C8")]
	public MT_VFXManager()
	{
	}
}
[Token(Token = "0x2000127")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE66DB8", Offset = "0xE66DB8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE66DB8", Offset = "0xE66DB8")]
[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE66DB8", Offset = "0xE66DB8")]
public sealed class SetTraumaFXAmountNode : CallableActionNode<float>
{
	[Token(Token = "0x600060B")]
	[Address(RVA = "0x32DBF68", Offset = "0x32DBF68", VA = "0x32DBF68", Slot = "12")]
	public override void Invoke(float value)
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x32DBF6C", Offset = "0x32DBF6C", VA = "0x32DBF6C")]
	public SetTraumaFXAmountNode()
	{
	}
}
[Token(Token = "0x2000128")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE66E40", Offset = "0xE66E40")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE66E40", Offset = "0xE66E40")]
[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE66E40", Offset = "0xE66E40")]
public sealed class FadeInTraumaFXOverTime : LatentActionNode<float>
{
	[Token(Token = "0x2000129")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66EC8", Offset = "0xE66EC8")]
	private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float t;

		[Token(Token = "0x170000D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000612")]
			[Address(RVA = "0x1030B8C", Offset = "0x1030B8C", VA = "0x1030B8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000614")]
			[Address(RVA = "0x1030BD4", Offset = "0x1030BD4", VA = "0x1030BD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x1030A44", Offset = "0x1030A44", VA = "0x1030A44")]
		[DebuggerHidden]
		public <Invoke>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x1030A70", Offset = "0x1030A70", VA = "0x1030A70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x1030A74", Offset = "0x1030A74", VA = "0x1030A74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x1030B94", Offset = "0x1030B94", VA = "0x1030B94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x100CE90", Offset = "0x100CE90", VA = "0x100CE90", Slot = "15")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8C270", Offset = "0xE8C270")]
	public override IEnumerator Invoke(float t)
	{
		return null;
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x100CF04", Offset = "0x100CF04", VA = "0x100CF04")]
	public FadeInTraumaFXOverTime()
	{
	}
}
[Token(Token = "0x200012A")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE66ED8", Offset = "0xE66ED8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE66ED8", Offset = "0xE66ED8")]
[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE66ED8", Offset = "0xE66ED8")]
public sealed class FadeOutTraumaFXOverTime : LatentActionNode<float>
{
	[Token(Token = "0x200012B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66F60", Offset = "0xE66F60")]
	private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float t;

		[Token(Token = "0x170000D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600061A")]
			[Address(RVA = "0x1030F78", Offset = "0x1030F78", VA = "0x1030F78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600061C")]
			[Address(RVA = "0x1030FC0", Offset = "0x1030FC0", VA = "0x1030FC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x1030E2C", Offset = "0x1030E2C", VA = "0x1030E2C")]
		[DebuggerHidden]
		public <Invoke>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x1030E58", Offset = "0x1030E58", VA = "0x1030E58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x1030E5C", Offset = "0x1030E5C", VA = "0x1030E5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x1030F80", Offset = "0x1030F80", VA = "0x1030F80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x100D010", Offset = "0x100D010", VA = "0x100D010", Slot = "15")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8C320", Offset = "0xE8C320")]
	public override IEnumerator Invoke(float t)
	{
		return null;
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x100D084", Offset = "0x100D084", VA = "0x100D084")]
	public FadeOutTraumaFXOverTime()
	{
	}
}
[Token(Token = "0x200012C")]
public class EmojiParticleManager : MonoBehaviour
{
	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem playerEmojiParticle;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material joyEmoji;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material defaultEmoji;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool spawnAllowed;

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x100B2D8", Offset = "0x100B2D8", VA = "0x100B2D8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x100B42C", Offset = "0x100B42C", VA = "0x100B42C")]
	private bool CanSpawn()
	{
		return default(bool);
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x100B48C", Offset = "0x100B48C", VA = "0x100B48C")]
	private void SpawnEmoji(Material emojiMaterial)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x100B58C", Offset = "0x100B58C", VA = "0x100B58C")]
	public EmojiParticleManager()
	{
	}
}
[Token(Token = "0x200012D")]
public class SocialVRDeepLink : MonoBehaviour
{
	[Token(Token = "0x400059D")]
	private const string APP_ID = "3732099523498937";

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x32DF310", Offset = "0x32DF310", VA = "0x32DF310")]
	public static void OpenOculusStoreInBrowser()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x32DF358", Offset = "0x32DF358", VA = "0x32DF358")]
	public static void OpenOculusStorePDPAndroid()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x32DF90C", Offset = "0x32DF90C", VA = "0x32DF90C")]
	public SocialVRDeepLink()
	{
	}
}
[Token(Token = "0x200012E")]
public class SocialVRDisabler : MonoBehaviour
{
	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _enabled;

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x32DF914", Offset = "0x32DF914", VA = "0x32DF914")]
	private void Start()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x32DF950", Offset = "0x32DF950", VA = "0x32DF950")]
	public SocialVRDisabler()
	{
	}
}
[Token(Token = "0x200012F")]
public static class NetworkPlayerUtils
{
	[Token(Token = "0x2000130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66F70", Offset = "0xE66F70")]
	private sealed class <SwapToMultiplayerRig>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject <positionTransform>5__2;

		[Token(Token = "0x170000D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000632")]
			[Address(RVA = "0x32C104C", Offset = "0x32C104C", VA = "0x32C104C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000634")]
			[Address(RVA = "0x32C1094", Offset = "0x32C1094", VA = "0x32C1094", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0x32C0D74", Offset = "0x32C0D74", VA = "0x32C0D74")]
		[DebuggerHidden]
		public <SwapToMultiplayerRig>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x32C0DA0", Offset = "0x32C0DA0", VA = "0x32C0DA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0x32C0DA4", Offset = "0x32C0DA4", VA = "0x32C0DA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x32C1054", Offset = "0x32C1054", VA = "0x32C1054", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x106D210", Offset = "0x106D210", VA = "0x106D210")]
	public static void MovePlayerIntoRoom()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x106D478", Offset = "0x106D478", VA = "0x106D478")]
	public static NetworkRemotePlayer TryGetFromLocalPlayerObject()
	{
		return null;
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x106D53C", Offset = "0x106D53C", VA = "0x106D53C")]
	public static NetworkRemotePlayer TryGetFromLocalPlayerObject(NetworkRunner runner)
	{
		return null;
	}

	[Token(Token = "0x6000629")]
	public static bool TryGetFromPlayerObject<T>(NetworkRunner runner, PlayerRef playerRef, out T component) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x106D5C0", Offset = "0x106D5C0", VA = "0x106D5C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8C3D0", Offset = "0xE8C3D0")]
	public static IEnumerator SwapToMultiplayerRig()
	{
		return null;
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x106D61C", Offset = "0x106D61C", VA = "0x106D61C")]
	public static void SetPlayHeightAndPostureForLoading()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x106D6B4", Offset = "0x106D6B4", VA = "0x106D6B4")]
	public static void ForceReleaseAnyItems()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x106D880", Offset = "0x106D880", VA = "0x106D880")]
	public static void EnableGrabbing(bool isEnabled)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x106D31C", Offset = "0x106D31C", VA = "0x106D31C")]
	public static void LockPlayerMovement(bool islocked)
	{
	}
}
[Token(Token = "0x2000131")]
public class PlayerInfoPlate : MonoBehaviour
{
	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI playerName;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image profilePicture;

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x1086364", Offset = "0x1086364", VA = "0x1086364")]
	public PlayerInfoPlate()
	{
	}
}
[Token(Token = "0x2000132")]
public interface IPauseable
{
	[Token(Token = "0x6000636")]
	void Pause();

	[Token(Token = "0x6000637")]
	void Unpause();
}
[Token(Token = "0x2000133")]
public class EditorAbstractPlatformHandler : AbstractPlatformHandler
{
	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool DEBUGPremiumContent;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE796EC", Offset = "0xE796EC")]
	private bool <HMDEventsAssigned>k__BackingField;

	[Token(Token = "0x170000D8")]
	public override bool HasFoveatedRendering
	{
		[Token(Token = "0x6000638")]
		[Address(RVA = "0x1009A44", Offset = "0x1009A44", VA = "0x1009A44", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D9")]
	public override bool HMDEventsAssigned
	{
		[Token(Token = "0x6000641")]
		[Address(RVA = "0x1009B68", Offset = "0x1009B68", VA = "0x1009B68", Slot = "13")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8C480", Offset = "0xE8C480")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000642")]
		[Address(RVA = "0x1009B70", Offset = "0x1009B70", VA = "0x1009B70", Slot = "14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8C490", Offset = "0xE8C490")]
		set
		{
		}
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x1009A4C", Offset = "0x1009A4C", VA = "0x1009A4C", Slot = "5")]
	public override void SetFoveatedRenderingLevel(FoveationLevel level)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x1009A50", Offset = "0x1009A50", VA = "0x1009A50", Slot = "6")]
	public override void Initialize(Action onComplete, Action onError)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x1009A6C", Offset = "0x1009A6C", VA = "0x1009A6C", Slot = "7")]
	public override bool HasPremiumContent()
	{
		return default(bool);
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x1009AD0", Offset = "0x1009AD0", VA = "0x1009AD0", Slot = "8")]
	public override int RetrieveDeviceLanguageSetting()
	{
		return default(int);
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x1009AD8", Offset = "0x1009AD8", VA = "0x1009AD8", Slot = "9")]
	public override bool HasVRFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x1009AE0", Offset = "0x1009AE0", VA = "0x1009AE0", Slot = "10")]
	public override bool IsHMDPresent()
	{
		return default(bool);
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x1009B20", Offset = "0x1009B20", VA = "0x1009B20", Slot = "11")]
	public override bool IsUserPresent()
	{
		return default(bool);
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x1009B60", Offset = "0x1009B60", VA = "0x1009B60", Slot = "12")]
	public override bool HasInputFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x1009B7C", Offset = "0x1009B7C", VA = "0x1009B7C", Slot = "15")]
	public override void EnableSpaceWarp()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x1009B80", Offset = "0x1009B80", VA = "0x1009B80", Slot = "16")]
	public override void DisableSpaceWarp()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x1009B84", Offset = "0x1009B84", VA = "0x1009B84", Slot = "17")]
	public override string GetUserID()
	{
		return null;
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x1009BC8", Offset = "0x1009BC8", VA = "0x1009BC8", Slot = "18")]
	public override string GetUserName()
	{
		return null;
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x1009C0C", Offset = "0x1009C0C", VA = "0x1009C0C", Slot = "19")]
	public override List<ulong> GetFriendsList()
	{
		return null;
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x1009C78", Offset = "0x1009C78", VA = "0x1009C78")]
	public EditorAbstractPlatformHandler()
	{
	}
}
[Token(Token = "0x2000134")]
public class PlayerTutorialLine : MonoBehaviour
{
	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[NaughtyAttributes.ReadOnly]
	public string temp;

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x1088CAC", Offset = "0x1088CAC", VA = "0x1088CAC")]
	public PlayerTutorialLine()
	{
	}
}
[Token(Token = "0x2000135")]
public class EnemyBehaviour : MonoBehaviour
{
	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Blackboard CommonVars;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Self;

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x100C184", Offset = "0x100C184", VA = "0x100C184")]
	private void Start()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x100C188", Offset = "0x100C188", VA = "0x100C188")]
	private void Update()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x100C1AC", Offset = "0x100C1AC", VA = "0x100C1AC")]
	public void SetPlayerRef()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x100C25C", Offset = "0x100C25C", VA = "0x100C25C")]
	public void SetEnemyRef()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x100C30C", Offset = "0x100C30C", VA = "0x100C30C")]
	public EnemyBehaviour()
	{
	}
}
[Token(Token = "0x2000136")]
public class Prototype_Cover : MonoBehaviour
{
	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool InCover;

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x108F420", Offset = "0x108F420", VA = "0x108F420")]
	private void Start()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x108F424", Offset = "0x108F424", VA = "0x108F424")]
	private void Update()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x108F428", Offset = "0x108F428", VA = "0x108F428")]
	public void ToggleCover()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x108F4AC", Offset = "0x108F4AC", VA = "0x108F4AC")]
	public void TakeCover()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x108F440", Offset = "0x108F440", VA = "0x108F440")]
	public void Stand()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x108F4B8", Offset = "0x108F4B8", VA = "0x108F4B8")]
	public Prototype_Cover()
	{
	}
}
[Token(Token = "0x2000137")]
public class UpdateBlackboardVar : MonoBehaviour
{
	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Blackboard CommonVars;

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x1357320", Offset = "0x1357320", VA = "0x1357320")]
	public void SetBlackboardVarToTrue(string Name)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x13573E8", Offset = "0x13573E8", VA = "0x13573E8")]
	public void SetBlackboardVarToFalse(string Name)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x13574AC", Offset = "0x13574AC", VA = "0x13574AC")]
	public void IncrementBlackboardInt(string Name)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x135759C", Offset = "0x135759C", VA = "0x135759C")]
	public void DecrementBlackboardInt(string Name)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x135768C", Offset = "0x135768C", VA = "0x135768C")]
	public UpdateBlackboardVar()
	{
	}
}
[Token(Token = "0x2000138")]
public class ChapterButton : MonoBehaviour
{
	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MT_LocalisationText localisationText;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button button;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ChapterInfo ChapterInfo;

	[Token(Token = "0x14000003")]
	public event Action<ChapterInfo> OnClick
	{
		[Token(Token = "0x600065B")]
		[Address(RVA = "0x1206400", Offset = "0x1206400", VA = "0x1206400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8C4A0", Offset = "0xE8C4A0")]
		add
		{
		}
		[Token(Token = "0x600065C")]
		[Address(RVA = "0x12064A0", Offset = "0x12064A0", VA = "0x12064A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8C4B0", Offset = "0xE8C4B0")]
		remove
		{
		}
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x1206540", Offset = "0x1206540", VA = "0x1206540")]
	public void Setup()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x12065F8", Offset = "0x12065F8", VA = "0x12065F8")]
	public ChapterButton()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x1206600", Offset = "0x1206600", VA = "0x1206600")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8C4C0", Offset = "0xE8C4C0")]
	private void <Setup>b__6_0()
	{
	}
}
[Token(Token = "0x2000139")]
public class DisableWithProgressFlag : MonoBehaviour
{
	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string progressionFlag;

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x1008DD0", Offset = "0x1008DD0", VA = "0x1008DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x1008E68", Offset = "0x1008E68", VA = "0x1008E68")]
	public DisableWithProgressFlag()
	{
	}
}
[Token(Token = "0x200013A")]
public class BuildNumberText : MonoBehaviour
{
	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI buildNoText;

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x1203374", Offset = "0x1203374", VA = "0x1203374")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x12034BC", Offset = "0x12034BC", VA = "0x12034BC")]
	public BuildNumberText()
	{
	}
}
[Token(Token = "0x200013B")]
[ExecuteInEditMode]
public class MT_ArtTools_PrefabSetup : MonoBehaviour
{
	[Token(Token = "0x6000664")]
	[Address(RVA = "0x11242E0", Offset = "0x11242E0", VA = "0x11242E0")]
	public MT_ArtTools_PrefabSetup()
	{
	}
}
[Token(Token = "0x200013C")]
public class TextureScale
{
	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color[] texColors;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Color[] newColors;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int w;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static float ratioX;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float ratioY;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int w2;

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x134F624", Offset = "0x134F624", VA = "0x134F624")]
	public static void Scale(Texture2D tex, int newWidth, int newHeight)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x134F7AC", Offset = "0x134F7AC", VA = "0x134F7AC")]
	private static void BilinearScale(int start, int end)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x134FA34", Offset = "0x134FA34", VA = "0x134FA34")]
	private static Color ColorLerpUnclamped(Color c1, Color c2, float value)
	{
		return default(Color);
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x134FA98", Offset = "0x134FA98", VA = "0x134FA98")]
	public TextureScale()
	{
	}
}
[Token(Token = "0x200013D")]
public class DeinstanceMaterials : MonoBehaviour
{
	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public GameObject[] gameobjects;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public Material[] materials;

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xFFFF3C", Offset = "0xFFFF3C", VA = "0xFFFF3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x100002C", Offset = "0x100002C", VA = "0x100002C")]
	public DeinstanceMaterials()
	{
	}
}
[Token(Token = "0x200013E")]
[ExecuteInEditMode]
public class MTBake : MonoBehaviour
{
	[Token(Token = "0x600066B")]
	[Address(RVA = "0x11223CC", Offset = "0x11223CC", VA = "0x11223CC")]
	public MTBake()
	{
	}
}
[Token(Token = "0x200013F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE66FA0", Offset = "0xE66FA0")]
public class MTBakePropertyMappings : ScriptableObject
{
	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7977C", Offset = "0xE7977C")]
	public string textureArrayAlbedo;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string textureArrayPackedMasks;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string textureArrayNormal;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string propertyLUT;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE797B4", Offset = "0xE797B4")]
	public string albedoName;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string baseColor;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string cutoff;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string smoothness;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string glossMapScale;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string smoothnessTextureChannel;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string metallic;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string metallicGlossMap;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string specColor;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string specGlossMap;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string specularHiglights;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string environmentReflections;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string bumpScale;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string bumpMap;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string parallax;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string parallaxMap;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string occlusionStrength;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string occlusionMap;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string emissionColor;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string emissionMap;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string detailMask;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string detailAlbedoMapScale;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string detailAlbedoMap;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public string detailNormalMap;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string detailNormalMapScale;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public string clearCoatMask;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public string clearCoatSmoothness;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string surface;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string blend;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public string alphaClip;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public string srcBlend;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public string dstBlend;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public string zWrite;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public string cull;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public string receiveShadows;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public string queueOffset;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public string mainTex;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public string color;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public string glossiness;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public string glossyReflections;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public string unityLightmaps;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public string unityLightmapsInd;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public string unityShadowMasks;

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x11223D4", Offset = "0x11223D4", VA = "0x11223D4")]
	public MTBakePropertyMappings()
	{
	}
}
[Token(Token = "0x2000140")]
public interface IBakeryReceiver
{
	[Token(Token = "0x170000DA")]
	Renderer[] ChildRenderers
	{
		[Token(Token = "0x600066D")]
		get;
	}

	[Token(Token = "0x170000DB")]
	Renderer[] ParentRenderers
	{
		[Token(Token = "0x600066E")]
		get;
	}
}
[Token(Token = "0x2000141")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE6700C", Offset = "0xE6700C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE6700C", Offset = "0xE6700C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE6700C", Offset = "0xE6700C")]
public class MT_BakeryVolumeTrigger : MonoBehaviour
{
	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool movable;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BakeryVolume vol;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE797EC", Offset = "0xE797EC")]
	private MaterialPropertyBlock <materialPropertyBlock>k__BackingField;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MaterialPropertyBlock mbEmpty;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int mVolumeMin;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int mVolumeInvSize;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider _collider;

	[Token(Token = "0x170000DC")]
	public MaterialPropertyBlock materialPropertyBlock
	{
		[Token(Token = "0x600066F")]
		[Address(RVA = "0x1125CE0", Offset = "0x1125CE0", VA = "0x1125CE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8C4D0", Offset = "0xE8C4D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000670")]
		[Address(RVA = "0x1125CE8", Offset = "0x1125CE8", VA = "0x1125CE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8C4E0", Offset = "0xE8C4E0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x1125CF0", Offset = "0x1125CF0", VA = "0x1125CF0")]
	private void UpdateMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x1125FF0", Offset = "0x1125FF0", VA = "0x1125FF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x11261B0", Offset = "0x11261B0", VA = "0x11261B0")]
	private void OnTriggerEnter(Collider c)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x11262E4", Offset = "0x11262E4", VA = "0x11262E4")]
	public void UpdateBounds()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x11263B8", Offset = "0x11263B8", VA = "0x11263B8")]
	public MT_BakeryVolumeTrigger()
	{
	}
}
[Token(Token = "0x2000142")]
[ExecuteInEditMode]
public class MT_CustomColorLUT : MonoBehaviour
{
	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Texture2D customColorLUT;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7980C", Offset = "0xE7980C")]
	public float LUTPower;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Texture2D prevLUT;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float PrevLUTPower;

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x112D88C", Offset = "0x112D88C", VA = "0x112D88C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x112D974", Offset = "0x112D974", VA = "0x112D974")]
	private void Update()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x112DB30", Offset = "0x112DB30", VA = "0x112DB30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x112DB80", Offset = "0x112DB80", VA = "0x112DB80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x112DB34", Offset = "0x112DB34", VA = "0x112DB34")]
	private void SetNeutralLUT()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x112DA1C", Offset = "0x112DA1C", VA = "0x112DA1C")]
	private void UpdateLUT()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x112DA18", Offset = "0x112DA18", VA = "0x112DA18")]
	private void DesaturateColour()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x112DB84", Offset = "0x112DB84", VA = "0x112DB84")]
	public MT_CustomColorLUT()
	{
	}
}
[Token(Token = "0x2000143")]
[ExecuteInEditMode]
public class MT_CustomFogColour : MonoBehaviour
{
	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Texture2D CustomFogColour;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 OffsetandScale;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D prevFog;

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x112DB94", Offset = "0x112DB94", VA = "0x112DB94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x112DC7C", Offset = "0x112DC7C", VA = "0x112DC7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x112DE38", Offset = "0x112DE38", VA = "0x112DE38")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x112DE84", Offset = "0x112DE84", VA = "0x112DE84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x112DD50", Offset = "0x112DD50", VA = "0x112DD50")]
	private void UpdateLUT()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x112DED0", Offset = "0x112DED0", VA = "0x112DED0")]
	public MT_CustomFogColour()
	{
	}
}
[Token(Token = "0x2000144")]
public class MT_RBControl : MonoBehaviour
{
	[Token(Token = "0x2000145")]
	public enum RigidBodyStartState
	{
		[Token(Token = "0x40005F8")]
		Enabled,
		[Token(Token = "0x40005F9")]
		Disabled
	}

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RigidBodyStartState rigidbodyStartState;

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x12A3ED8", Offset = "0x12A3ED8", VA = "0x12A3ED8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x12A3F98", Offset = "0x12A3F98", VA = "0x12A3F98")]
	public void SetRigidBody(bool state)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x12A405C", Offset = "0x12A405C", VA = "0x12A405C")]
	public MT_RBControl()
	{
	}
}
[Token(Token = "0x2000146")]
public class MT_VRLodBias : MonoBehaviour
{
	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7986C", Offset = "0xE7986C")]
	[SerializeField]
	private float defaultFOV;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float questFOV;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float LODBias;

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x113EE78", Offset = "0x113EE78", VA = "0x113EE78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x113F000", Offset = "0x113F000", VA = "0x113F000")]
	public MT_VRLodBias()
	{
	}
}
[Token(Token = "0x2000147")]
public static class MeshExtension
{
	[Token(Token = "0x2000148")]
	private class Vertices
	{
		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vector3> verts;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Vector2> uv1;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vector2> uv2;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector2> uv3;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Vector2> uv4;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Vector3> normals;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Vector4> tangents;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Color32> colors;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<BoneWeight> boneWeights;

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x32BB4B8", Offset = "0x32BB4B8", VA = "0x32BB4B8")]
		public Vertices()
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x32BB53C", Offset = "0x32BB53C", VA = "0x32BB53C")]
		public Vertices(Mesh aMesh)
		{
		}

		[Token(Token = "0x600068C")]
		private List<T> CreateList<T>(T[] aSource)
		{
			return null;
		}

		[Token(Token = "0x600068D")]
		private void Copy<T>(ref List<T> aDest, List<T> aSource, int aIndex)
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x32BB778", Offset = "0x32BB778", VA = "0x32BB778")]
		public int Add(Vertices aOther, int aIndex)
		{
			return default(int);
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x32BB920", Offset = "0x32BB920", VA = "0x32BB920")]
		public void AssignTo(Mesh aTarget)
		{
		}
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x1141070", Offset = "0x1141070", VA = "0x1141070")]
	public static Mesh GetSubmesh(this Mesh aMesh, int aSubMeshIndex)
	{
		return null;
	}
}
[Token(Token = "0x2000149")]
public static class LightingUtils
{
	[Token(Token = "0x200014A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67104", Offset = "0xE67104")]
	private sealed class <PreLightSceneCo>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject <lightGO>5__2;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__3;

		[Token(Token = "0x170000DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000694")]
			[Address(RVA = "0x1034C80", Offset = "0x1034C80", VA = "0x1034C80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000696")]
			[Address(RVA = "0x1034CC8", Offset = "0x1034CC8", VA = "0x1034CC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x1034AEC", Offset = "0x1034AEC", VA = "0x1034AEC")]
		[DebuggerHidden]
		public <PreLightSceneCo>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x1034B18", Offset = "0x1034B18", VA = "0x1034B18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x1034B1C", Offset = "0x1034B1C", VA = "0x1034B1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x1034C88", Offset = "0x1034C88", VA = "0x1034C88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x1015434", Offset = "0x1015434", VA = "0x1015434")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8C500", Offset = "0xE8C500")]
	public static IEnumerator PreLightSceneCo()
	{
		return null;
	}
}
[Token(Token = "0x200014B")]
public class MT_DisableOcclusionCullingInScene : MonoBehaviour
{
	[Token(Token = "0x6000697")]
	[Address(RVA = "0x1137344", Offset = "0x1137344", VA = "0x1137344")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x11373E0", Offset = "0x11373E0", VA = "0x11373E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x113747C", Offset = "0x113747C", VA = "0x113747C")]
	public MT_DisableOcclusionCullingInScene()
	{
	}
}
[Token(Token = "0x200014C")]
public class MT_MeshCulling : MonoBehaviour
{
	[Token(Token = "0x200014D")]
	private delegate void ChildHandler(GameObject child);

	[Token(Token = "0x200014E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67114", Offset = "0xE67114")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<MeshRenderer> mrArr;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ChildHandler <>9__0;

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x103B7D8", Offset = "0x103B7D8", VA = "0x103B7D8")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x103B7E0", Offset = "0x103B7E0", VA = "0x103B7E0")]
		internal void <OnEnable>b__0(GameObject go)
		{
		}
	}

	[Token(Token = "0x200014F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67124", Offset = "0xE67124")]
	private sealed class <SetMeshRendererVisiblityCo>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_MeshCulling <>4__this;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool visibility;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <items>5__2;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x170000DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006A9")]
			[Address(RVA = "0x103BA74", Offset = "0x103BA74", VA = "0x103BA74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006AB")]
			[Address(RVA = "0x103BABC", Offset = "0x103BABC", VA = "0x103BABC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x103B8D4", Offset = "0x103B8D4", VA = "0x103B8D4")]
		[DebuggerHidden]
		public <SetMeshRendererVisiblityCo>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x103B900", Offset = "0x103B900", VA = "0x103B900", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x103B904", Offset = "0x103B904", VA = "0x103B904", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x103BA7C", Offset = "0x103BA7C", VA = "0x103BA7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _visibleOnLevelStart;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] _gameObjects;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer[] _meshRenderers;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine _coroutine;

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x10F0E8C", Offset = "0x10F0E8C", VA = "0x10F0E8C")]
	private void IterateChildren(GameObject gameObject, ChildHandler childHandler, bool recursive)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x10F0E94", Offset = "0x10F0E94", VA = "0x10F0E94")]
	private void DoIterate(GameObject gameObject, ChildHandler childHandler, bool recursive)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x10F119C", Offset = "0x10F119C", VA = "0x10F119C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x10F14A8", Offset = "0x10F14A8", VA = "0x10F14A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8C5B0", Offset = "0xE8C5B0")]
	private IEnumerator SetMeshRendererVisiblityCo(bool visibility)
	{
		return null;
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x10F139C", Offset = "0x10F139C", VA = "0x10F139C")]
	public void SetMeshRendererVisiblity(bool visibility)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x10F1534", Offset = "0x10F1534", VA = "0x10F1534")]
	public MT_MeshCulling()
	{
	}
}
[Token(Token = "0x2000150")]
public class MT_Perf_Respawner : MonoBehaviour
{
	[Token(Token = "0x2000151")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67134", Offset = "0xE67134")]
	private sealed class <SpawnTimer>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_Perf_Respawner <>4__this;

		[Token(Token = "0x170000E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006B2")]
			[Address(RVA = "0x32B73D8", Offset = "0x32B73D8", VA = "0x32B73D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006B4")]
			[Address(RVA = "0x32B7420", Offset = "0x32B7420", VA = "0x32B7420", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x32B7238", Offset = "0x32B7238", VA = "0x32B7238")]
		[DebuggerHidden]
		public <SpawnTimer>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x32B7264", Offset = "0x32B7264", VA = "0x32B7264", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x32B7268", Offset = "0x32B7268", VA = "0x32B7268", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x32B73E0", Offset = "0x32B73E0", VA = "0x32B73E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject thingToSpawn;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeBetweenSpawns;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxCount;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool allSpawned;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int count;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator coroutine;

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x132555C", Offset = "0x132555C", VA = "0x132555C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8C660", Offset = "0xE8C660")]
	private IEnumerator SpawnTimer()
	{
		return null;
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x13255D4", Offset = "0x13255D4", VA = "0x13255D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x1325610", Offset = "0x1325610", VA = "0x1325610")]
	public MT_Perf_Respawner()
	{
	}
}
[Token(Token = "0x2000152")]
public class ColorCorrection : ScriptableRendererFeature
{
	[Serializable]
	[Token(Token = "0x2000153")]
	public class HLSettings
	{
		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RenderPassEvent renderPassEvent;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material mMat;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int blitMaterialPassIndex;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string textureId;

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x16A45A4", Offset = "0x16A45A4", VA = "0x16A45A4")]
		public HLSettings()
		{
		}
	}

	[Token(Token = "0x2000154")]
	private class CustomRenderPass : ScriptableRenderPass
	{
		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x16A4590", Offset = "0x16A4590", VA = "0x16A4590", Slot = "5")]
		public override void OnCameraSetup(CommandBuffer cmd, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x16A4594", Offset = "0x16A4594", VA = "0x16A4594", Slot = "9")]
		public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x16A4598", Offset = "0x16A4598", VA = "0x16A4598", Slot = "7")]
		public override void OnCameraCleanup(CommandBuffer cmd)
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x16A459C", Offset = "0x16A459C", VA = "0x16A459C")]
		public CustomRenderPass()
		{
		}
	}

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HLSettings settings;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CustomRenderPass m_ScriptablePass;

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x120CD78", Offset = "0x120CD78", VA = "0x120CD78", Slot = "5")]
	public override void Create()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x120CDF4", Offset = "0x120CDF4", VA = "0x120CDF4", Slot = "6")]
	public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x120CE18", Offset = "0x120CE18", VA = "0x120CE18")]
	public ColorCorrection()
	{
	}
}
[Token(Token = "0x2000155")]
[ExecuteInEditMode]
public class SinglePassPostProcess : MonoBehaviour
{
	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x32DDA94", Offset = "0x32DDA94", VA = "0x32DDA94")]
	private bool CheckIfMaterialAssigned()
	{
		return default(bool);
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x32DDB84", Offset = "0x32DDB84", VA = "0x32DDB84")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x32DDC20", Offset = "0x32DDC20", VA = "0x32DDC20")]
	public SinglePassPostProcess()
	{
	}
}
[Token(Token = "0x2000156")]
public class MT_LightFlash : MonoBehaviour
{
	[Token(Token = "0x2000157")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67154", Offset = "0xE67154")]
	private sealed class <FlashLight>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_LightFlash <>4__this;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <lerpVal>5__2;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <counter>5__3;

		[Token(Token = "0x170000E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006CB")]
			[Address(RVA = "0x1039644", Offset = "0x1039644", VA = "0x1039644", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006CD")]
			[Address(RVA = "0x103968C", Offset = "0x103968C", VA = "0x103968C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x103934C", Offset = "0x103934C", VA = "0x103934C")]
		[DebuggerHidden]
		public <FlashLight>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x1039378", Offset = "0x1039378", VA = "0x1039378", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x103937C", Offset = "0x103937C", VA = "0x103937C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x103964C", Offset = "0x103964C", VA = "0x103964C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light lightComponent;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float fadeoutTime;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float intensity;

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x1259F28", Offset = "0x1259F28", VA = "0x1259F28")]
	private void SetLightParams()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x125A00C", Offset = "0x125A00C", VA = "0x125A00C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x125A010", Offset = "0x125A010", VA = "0x125A010")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x125A014", Offset = "0x125A014", VA = "0x125A014")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8C710", Offset = "0xE8C710")]
	private IEnumerator FlashLight(float time)
	{
		return null;
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x125A09C", Offset = "0x125A09C", VA = "0x125A09C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x125A0EC", Offset = "0x125A0EC", VA = "0x125A0EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x125A13C", Offset = "0x125A13C", VA = "0x125A13C")]
	public void FlashLight()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x125A190", Offset = "0x125A190", VA = "0x125A190")]
	public MT_LightFlash()
	{
	}
}
[Token(Token = "0x2000158")]
public class SaveTexture : MonoBehaviour
{
	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool capture;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTexture rt2;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string fileName;

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x32D2994", Offset = "0x32D2994", VA = "0x32D2994")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x32D2A98", Offset = "0x32D2A98", VA = "0x32D2A98")]
	public void OnPostRender()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x32D29D8", Offset = "0x32D29D8", VA = "0x32D29D8")]
	private void SaveTex(RenderTexture rt, string mname)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x32D2A9C", Offset = "0x32D2A9C", VA = "0x32D2A9C")]
	private Texture2D toTexture2D(RenderTexture rTex)
	{
		return null;
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x32D2BC8", Offset = "0x32D2BC8", VA = "0x32D2BC8")]
	public SaveTexture()
	{
	}
}
[Token(Token = "0x2000159")]
public class MT_BlobShadow : MonoBehaviour
{
	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE79908", Offset = "0xE79908")]
	private Transform transformToTrack;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE79954", Offset = "0xE79954")]
	private Vector3 transformOffset;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE799A0", Offset = "0xE799A0")]
	private float shadowFadeExponent;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE799EC", Offset = "0xE799EC")]
	private float shadowHeightHack;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float groundHeight;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Material> mats;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int nameID;

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x112710C", Offset = "0x112710C", VA = "0x112710C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x112729C", Offset = "0x112729C", VA = "0x112729C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x11275FC", Offset = "0x11275FC", VA = "0x11275FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x1127728", Offset = "0x1127728", VA = "0x1127728")]
	public void SetTransformToTrack(Transform t)
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x1127730", Offset = "0x1127730", VA = "0x1127730")]
	public MT_BlobShadow()
	{
	}
}
[Token(Token = "0x200015A")]
public class MT_PosterBurn : MonoBehaviour
{
	[Token(Token = "0x200015B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67164", Offset = "0xE67164")]
	private sealed class <PosterBurnLerp>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_PosterBurn <>4__this;

		[Token(Token = "0x170000E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006DF")]
			[Address(RVA = "0x32B8938", Offset = "0x32B8938", VA = "0x32B8938", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006E1")]
			[Address(RVA = "0x32B8980", Offset = "0x32B8980", VA = "0x32B8980", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x32B8750", Offset = "0x32B8750", VA = "0x32B8750")]
		[DebuggerHidden]
		public <PosterBurnLerp>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x32B877C", Offset = "0x32B877C", VA = "0x32B877C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x32B8780", Offset = "0x32B8780", VA = "0x32B8780", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x32B8940", Offset = "0x32B8940", VA = "0x32B8940", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GameobjParent;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem particles;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer[] meshRen;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SkinnedMeshRenderer[] SkinRen;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material[] mat;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float val;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float speed;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float charbool;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool UseSkinMeshRen;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ZA_AudioEvent _audioEvent;

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x13360C8", Offset = "0x13360C8", VA = "0x13360C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x1336310", Offset = "0x1336310", VA = "0x1336310")]
	public void burnPoster()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x13363FC", Offset = "0x13363FC", VA = "0x13363FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8C7C0", Offset = "0xE8C7C0")]
	private IEnumerator PosterBurnLerp()
	{
		return null;
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x1336474", Offset = "0x1336474", VA = "0x1336474")]
	public MT_PosterBurn()
	{
	}
}
[Token(Token = "0x200015C")]
[ExecuteInEditMode]
public class MT_VFX_BlobShadows : MonoBehaviour
{
	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _multiplier;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _exponent;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _shadowModifier;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _shadowMinCharacter;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _shadowMinEnvironment;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Vector3 _offset1;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Vector3 _offset2;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Vector3 _offset3;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform _transform1;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform _transform2;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform _transform3;

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x113D1D0", Offset = "0x113D1D0", VA = "0x113D1D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x113D64C", Offset = "0x113D64C", VA = "0x113D64C")]
	private void Off()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x113D694", Offset = "0x113D694", VA = "0x113D694")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x113D698", Offset = "0x113D698", VA = "0x113D698")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x113D69C", Offset = "0x113D69C", VA = "0x113D69C")]
	public MT_VFX_BlobShadows()
	{
	}
}
[Token(Token = "0x200015D")]
public class MT_VFX_BulletTrail : MonoBehaviour
{
	[Token(Token = "0x200015E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67184", Offset = "0xE67184")]
	private sealed class <WaitCo>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_VFX_BulletTrail <>4__this;

		[Token(Token = "0x170000E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006F3")]
			[Address(RVA = "0x32BAE2C", Offset = "0x32BAE2C", VA = "0x32BAE2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006F5")]
			[Address(RVA = "0x32BAE74", Offset = "0x32BAE74", VA = "0x32BAE74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x32BAD20", Offset = "0x32BAD20", VA = "0x32BAD20")]
		[DebuggerHidden]
		public <WaitCo>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x32BAD4C", Offset = "0x32BAD4C", VA = "0x32BAD4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x32BAD50", Offset = "0x32BAD50", VA = "0x32BAD50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x32BAE34", Offset = "0x32BAE34", VA = "0x32BAE34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67194", Offset = "0xE67194")]
	private sealed class <DelayImpactSFX>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_VFX_BulletTrail <>4__this;

		[Token(Token = "0x170000E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006F9")]
			[Address(RVA = "0x32BA848", Offset = "0x32BA848", VA = "0x32BA848", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006FB")]
			[Address(RVA = "0x32BA890", Offset = "0x32BA890", VA = "0x32BA890", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x32BA744", Offset = "0x32BA744", VA = "0x32BA744")]
		[DebuggerHidden]
		public <DelayImpactSFX>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x32BA770", Offset = "0x32BA770", VA = "0x32BA770", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x32BA774", Offset = "0x32BA774", VA = "0x32BA774", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x32BA850", Offset = "0x32BA850", VA = "0x32BA850", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000160")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE671A4", Offset = "0xE671A4")]
	private sealed class <LineRendererCo>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_VFX_BulletTrail <>4__this;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <color>5__2;

		[Token(Token = "0x170000EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006FF")]
			[Address(RVA = "0x32BACD0", Offset = "0x32BACD0", VA = "0x32BACD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000701")]
			[Address(RVA = "0x32BAD18", Offset = "0x32BAD18", VA = "0x32BAD18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x32BA9EC", Offset = "0x32BA9EC", VA = "0x32BA9EC")]
		[DebuggerHidden]
		public <LineRendererCo>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x32BAA18", Offset = "0x32BAA18", VA = "0x32BAA18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x32BAA1C", Offset = "0x32BAA1C", VA = "0x32BAA1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x32BACD8", Offset = "0x32BACD8", VA = "0x32BACD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000161")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE671B4", Offset = "0xE671B4")]
	private sealed class <DelayWizzSFX>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_VFX_BulletTrail <>4__this;

		[Token(Token = "0x170000ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000705")]
			[Address(RVA = "0x32BA99C", Offset = "0x32BA99C", VA = "0x32BA99C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000707")]
			[Address(RVA = "0x32BA9E4", Offset = "0x32BA9E4", VA = "0x32BA9E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x32BA898", Offset = "0x32BA898", VA = "0x32BA898")]
		[DebuggerHidden]
		public <DelayWizzSFX>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x32BA8C4", Offset = "0x32BA8C4", VA = "0x32BA8C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x32BA8C8", Offset = "0x32BA8C8", VA = "0x32BA8C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x32BA9A4", Offset = "0x32BA9A4", VA = "0x32BA9A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject vfxGameObject;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationClip clip;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ZA_AudioEvent _audioEvent;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform audioSourceTransform;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine _lineCo;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Color lineRendererColor;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float lineRendererFadeSpeed;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float lineRendererTravelSpeed;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 lineDirection;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject flyBySfxGameObject;

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x113C97C", Offset = "0x113C97C", VA = "0x113C97C")]
	public void ShowTrail()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x113D704", Offset = "0x113D704", VA = "0x113D704")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8C870", Offset = "0xE8C870")]
	private IEnumerator WaitCo()
	{
		return null;
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x113CB90", Offset = "0x113CB90", VA = "0x113CB90")]
	public void CreateGenericImpactSFX(Vector3 pos)
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x113D77C", Offset = "0x113D77C", VA = "0x113D77C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8C8D0", Offset = "0xE8C8D0")]
	private IEnumerator DelayImpactSFX()
	{
		return null;
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x113C9C4", Offset = "0x113C9C4", VA = "0x113C9C4")]
	public void CalculateFlybySFX(Vector3 firePos, Vector3 hitLocation)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x113C9C8", Offset = "0x113C9C8", VA = "0x113C9C8")]
	public void ShowMovingTrail(Vector3 origin, Vector3 end)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x113D7F4", Offset = "0x113D7F4", VA = "0x113D7F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8C930", Offset = "0xE8C930")]
	private IEnumerator LineRendererCo()
	{
		return null;
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x113D86C", Offset = "0x113D86C", VA = "0x113D86C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8C990", Offset = "0xE8C990")]
	private IEnumerator DelayWizzSFX()
	{
		return null;
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x113D8E4", Offset = "0x113D8E4", VA = "0x113D8E4")]
	public MT_VFX_BulletTrail()
	{
	}
}
[Token(Token = "0x2000162")]
public class MT_VFX_FakeWindowMovement : MonoBehaviour
{
	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float windowSpeed;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE79B78", Offset = "0xE79B78")]
	public float windowBrightness;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material[] _materials;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _timePassed;

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x113D920", Offset = "0x113D920", VA = "0x113D920")]
	private void WarnAndDisable()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x113D9C8", Offset = "0x113D9C8", VA = "0x113D9C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x113DBEC", Offset = "0x113DBEC", VA = "0x113DBEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x113DD60", Offset = "0x113DD60", VA = "0x113DD60")]
	public MT_VFX_FakeWindowMovement()
	{
	}
}
[Token(Token = "0x2000163")]
public sealed class MT_VFX_FogController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000164")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE671C4", Offset = "0xE671C4")]
	private sealed class <>c
	{
		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<MT_VFX_FogControls> <>9__5_0;

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x32BAEE0", Offset = "0x32BAEE0", VA = "0x32BAEE0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x32BAEE8", Offset = "0x32BAEE8", VA = "0x32BAEE8")]
		internal int <Update>b__5_0(MT_VFX_FogControls x, MT_VFX_FogControls y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<MT_VFX_FogControls> fogToIterateOn;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	private MT_VFX_FogControls fogValueBuffer;

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x113DD70", Offset = "0x113DD70", VA = "0x113DD70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x113DE44", Offset = "0x113DE44", VA = "0x113DE44")]
	private void ResetFog()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x113DF10", Offset = "0x113DF10", VA = "0x113DF10")]
	private void ApplyFog()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x113E1A0", Offset = "0x113E1A0", VA = "0x113E1A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x113E6C0", Offset = "0x113E6C0", VA = "0x113E6C0")]
	public void AddFogVolume(MT_VFX_FogControls volumeToAdd)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x113E760", Offset = "0x113E760", VA = "0x113E760")]
	public void RemoveFogVolume(MT_VFX_FogControls volumeToRemove)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x113E800", Offset = "0x113E800", VA = "0x113E800")]
	public MT_VFX_FogController()
	{
	}
}
[Token(Token = "0x2000165")]
[ExecuteInEditMode]
public class MT_VFX_FogControls : MonoBehaviour
{
	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE79BA0", Offset = "0xE79BA0")]
	public bool global;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE79BD8", Offset = "0xE79BD8")]
	public float fogDensity;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE79C24", Offset = "0xE79C24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE79C24", Offset = "0xE79C24")]
	public float fogOpacity;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE79C88", Offset = "0xE79C88")]
	public Color fogColor;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE79CD4", Offset = "0xE79CD4")]
	public float weight;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE79D0C", Offset = "0xE79D0C")]
	public float priority;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE79D44", Offset = "0xE79D44")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE79D44", Offset = "0xE79D44")]
	public float fogDistanceFalloff;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE79DB4", Offset = "0xE79DB4")]
	public float fogDistanceMultiplier;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE79E00", Offset = "0xE79E00")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE79E00", Offset = "0xE79E00")]
	[SerializeField]
	public float fogHeight;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE79E70", Offset = "0xE79E70")]
	public float fogHeightFalloff;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE79EBC", Offset = "0xE79EBC")]
	public float fogHeightMultiplier;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE79F08", Offset = "0xE79F08")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE79F08", Offset = "0xE79F08")]
	public float fogNoiseScale;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE79F78", Offset = "0xE79F78")]
	public Vector2 fogNoiseDirection;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE79FC4", Offset = "0xE79FC4")]
	public Vector2 fogNoiseContribution;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public float distanceBlend;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public bool fogController;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7A030", Offset = "0xE7A030")]
	public bool livePreview;

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x113E808", Offset = "0x113E808", VA = "0x113E808")]
	private void Update()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x113E80C", Offset = "0x113E80C", VA = "0x113E80C")]
	public MT_VFX_FogControls()
	{
	}
}
[Token(Token = "0x2000166")]
[ExecuteInEditMode]
public class MT_TA_TraumaParams : MonoBehaviour
{
	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7A068", Offset = "0xE7A068")]
	public float traumaFX;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float viewSpaceVignetteMultiplier;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float viewSpaceVignetteExponent;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float distanceVignetteMultiplier;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float distanceVignetteExponent;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float finalDistanceModifier;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float fogDensityMultiplier;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public bool checkForEffect;

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x12B4A50", Offset = "0x12B4A50", VA = "0x12B4A50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x12B4B60", Offset = "0x12B4B60", VA = "0x12B4B60")]
	public MT_TA_TraumaParams()
	{
	}
}
[Token(Token = "0x2000167")]
public class DebugToolMassCenter : MonoBehaviour
{
	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject centerPrefab;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> _centers;

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xFFE5F4", Offset = "0xFFE5F4", VA = "0xFFE5F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xFFE5F8", Offset = "0xFFE5F8", VA = "0xFFE5F8")]
	private void Initial()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xFFEA1C", Offset = "0xFFEA1C", VA = "0xFFEA1C")]
	public void Hide()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xFFEB38", Offset = "0xFFEB38", VA = "0xFFEB38")]
	public void Show()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xFFEC54", Offset = "0xFFEC54", VA = "0xFFEC54")]
	public DebugToolMassCenter()
	{
	}
}
[Token(Token = "0x2000168")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE671F4", Offset = "0xE671F4")]
public class DebugViewManager : MonoBehaviour
{
	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isEnable;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugViewManager Instance;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DebugViewPointer pointer;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GizmosNavMesh navMesh;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool enableMatAndTex;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[HideInInspector]
	public bool enablePhysic;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[HideInInspector]
	public bool enableWayPoints;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	[HideInInspector]
	public bool useLeftHand;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public string gameObjectName;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public string materialsName;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public GameObject canvas;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public GameObject wayPoints;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public GameObject wayPointsPrefab;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private DebugToolMassCenter center;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TextMeshProUGUI _info;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private LineRenderer _line;

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xFFEC5C", Offset = "0xFFEC5C", VA = "0xFFEC5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xFFEECC", Offset = "0xFFEECC", VA = "0xFFEECC")]
	public void UpdateInfo()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xFFEF44", Offset = "0xFFEF44", VA = "0xFFEF44")]
	public void EnablePointer(bool isEnable)
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xFFEF8C", Offset = "0xFFEF8C", VA = "0xFFEF8C")]
	public void EnableCenter(bool enable)
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xFFEFAC", Offset = "0xFFEFAC", VA = "0xFFEFAC")]
	public DebugViewManager()
	{
	}
}
[Token(Token = "0x2000169")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE67254", Offset = "0xE67254")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE67254", Offset = "0xE67254")]
public class DebugViewPointer : MonoBehaviour
{
	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _followHand;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _tempObject;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer _line;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MT_FollowObject _follow;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _useLeftHand;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GizmosShowColliders _showColliders;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<MeshRenderer> _meshRenderers;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private LayerMask mask;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material lineMat;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Material wireframeMat;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private string[] textureType;

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xFFEFB4", Offset = "0xFFEFB4", VA = "0xFFEFB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xFFF0E8", Offset = "0xFFF0E8", VA = "0xFFF0E8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xFFFE28", Offset = "0xFFFE28", VA = "0xFFFE28")]
	public void UpdateHand()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xFFFEB0", Offset = "0xFFFEB0", VA = "0xFFFEB0")]
	public void HidePhysic()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xFFFECC", Offset = "0xFFFECC", VA = "0xFFFECC")]
	public DebugViewPointer()
	{
	}
}
[Token(Token = "0x200016A")]
[ExecuteInEditMode]
public class GizmosInfo : MonoBehaviour
{
	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x10D2008", Offset = "0x10D2008", VA = "0x10D2008")]
	private void Start()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x10D2064", Offset = "0x10D2064", VA = "0x10D2064")]
	public GizmosInfo()
	{
	}
}
[Token(Token = "0x200016B")]
public class GizmosNavMesh : MonoBehaviour
{
	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool renderLineNavMesh;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Color navMeshColor;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _lineRendererRoot;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject _lineRendererObject;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NavMeshTriangulation _triangulation;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool renderGLNavMesh;

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x10D206C", Offset = "0x10D206C", VA = "0x10D206C")]
	public bool IsRenderingNavMesh()
	{
		return default(bool);
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x10D208C", Offset = "0x10D208C", VA = "0x10D208C")]
	private void Start()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x10D225C", Offset = "0x10D225C", VA = "0x10D225C")]
	public void SetRender(bool lineRender, bool glRender)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x10D25A0", Offset = "0x10D25A0", VA = "0x10D25A0")]
	private void OnEndCameraRendering(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x10D2360", Offset = "0x10D2360", VA = "0x10D2360")]
	public void OnPostRender()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x10D2278", Offset = "0x10D2278", VA = "0x10D2278")]
	private void CleanUp()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x10D25B0", Offset = "0x10D25B0", VA = "0x10D25B0")]
	private void DrawGLTriangle(Vector3 p1, Vector3 p2, Vector3 p3)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x10D2654", Offset = "0x10D2654", VA = "0x10D2654")]
	private void DrawLineRendererTriangle(Vector3 p1, Vector3 p2, Vector3 p3)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x10D27EC", Offset = "0x10D27EC", VA = "0x10D27EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x10D28A8", Offset = "0x10D28A8", VA = "0x10D28A8")]
	public GizmosNavMesh()
	{
	}
}
[Token(Token = "0x200016C")]
public class GizmosShowColliders : MonoBehaviour
{
	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color triggerColor;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color notTriggerColor;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Mesh cubeMesh;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Mesh capsuleMesh;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Material material;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material _colliderMat;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject[] _tempBoxColliders;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject[] _tempMeshColliders;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] _tempCapsuleColliders;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<BoxCollider> _boxColliders;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<MeshCollider> _meshColliders;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<CapsuleCollider> _capsuleColliders;

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x10D28DC", Offset = "0x10D28DC", VA = "0x10D28DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x10D2B88", Offset = "0x10D2B88", VA = "0x10D2B88")]
	public void ShowColliders(GameObject target)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x10D3D6C", Offset = "0x10D3D6C", VA = "0x10D3D6C")]
	public void HideColliders()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x10D3F00", Offset = "0x10D3F00", VA = "0x10D3F00")]
	public GizmosShowColliders()
	{
	}
}
[Token(Token = "0x200016D")]
public sealed class FlowCanvasTimelineInterop : MonoBehaviour
{
	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _id;

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x100E188", Offset = "0x100E188", VA = "0x100E188")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x100E2D0", Offset = "0x100E2D0", VA = "0x100E2D0")]
	public FlowCanvasTimelineInterop()
	{
	}
}
[Token(Token = "0x200016E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE672F8", Offset = "0xE672F8")]
public class BulletCasingDeactivator : MonoBehaviour
{
	[Token(Token = "0x200016F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67358", Offset = "0xE67358")]
	private sealed class <Deactivate>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BulletCasingDeactivator <>4__this;

		[Token(Token = "0x170000EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000742")]
			[Address(RVA = "0x16A3F70", Offset = "0x16A3F70", VA = "0x16A3F70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000744")]
			[Address(RVA = "0x16A3FB8", Offset = "0x16A3FB8", VA = "0x16A3FB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x16A3DE4", Offset = "0x16A3DE4", VA = "0x16A3DE4")]
		[DebuggerHidden]
		public <Deactivate>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x16A3E10", Offset = "0x16A3E10", VA = "0x16A3E10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x16A3E14", Offset = "0x16A3E14", VA = "0x16A3E14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x16A3F78", Offset = "0x16A3F78", VA = "0x16A3F78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float time;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Rigidbody rb;

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x12034C4", Offset = "0x12034C4", VA = "0x12034C4")]
	public void Awake()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x1203520", Offset = "0x1203520", VA = "0x1203520")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x120354C", Offset = "0x120354C", VA = "0x120354C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8CB30", Offset = "0xE8CB30")]
	private IEnumerator Deactivate()
	{
		return null;
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x12035C4", Offset = "0x12035C4", VA = "0x12035C4")]
	public BulletCasingDeactivator()
	{
	}
}
[Token(Token = "0x2000170")]
public class GunLocationTester : MonoBehaviour
{
	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform gun;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform bulletCasing;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ID;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7A250", Offset = "0xE7A250")]
	[NaughtyAttributes.ReadOnly]
	public Vector3 gunLocation;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[NaughtyAttributes.ReadOnly]
	public Vector3 casingLocation;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[NaughtyAttributes.ReadOnly]
	public Vector3 lastGunLoc;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[NaughtyAttributes.ReadOnly]
	public Vector3 lastCasingLoc;

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x10D83A4", Offset = "0x10D83A4", VA = "0x10D83A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x10D89F0", Offset = "0x10D89F0", VA = "0x10D89F0")]
	public GunLocationTester()
	{
	}
}
[Token(Token = "0x2000171")]
public static class SimplePool
{
	[Token(Token = "0x2000172")]
	private class Pool
	{
		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _nextId;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<GameObject> _inactive;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject _prefab;

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x32C911C", Offset = "0x32C911C", VA = "0x32C911C")]
		public Pool(GameObject prefab, int initialQty)
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x32C91CC", Offset = "0x32C91CC", VA = "0x32C91CC")]
		public GameObject SpawnMP(Transform parent, Vector3 pos, Quaternion rot)
		{
			return null;
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x32C95EC", Offset = "0x32C95EC", VA = "0x32C95EC")]
		public GameObject Spawn(Transform parent, Vector3 pos, Quaternion rot)
		{
			return null;
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x32C9938", Offset = "0x32C9938", VA = "0x32C9938")]
		public void Despawn(GameObject obj)
		{
		}
	}

	[Token(Token = "0x2000173")]
	private class PoolMember : MonoBehaviour
	{
		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Pool MyPool;

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x32C99B0", Offset = "0x32C99B0", VA = "0x32C99B0")]
		public PoolMember()
		{
		}
	}

	[Token(Token = "0x40006C7")]
	private const int DefaultPoolSize = 3;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<GameObject, Pool> _pools;

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x32DD044", Offset = "0x32DD044", VA = "0x32DD044")]
	private static void Init([Optional] GameObject prefab, int qty = 3)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x32DD1E0", Offset = "0x32DD1E0", VA = "0x32DD1E0")]
	public static void Preload(GameObject prefab, int qty = 1)
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x32DD370", Offset = "0x32DD370", VA = "0x32DD370")]
	public static GameObject Spawn(GameObject prefab, Vector3 pos, Quaternion rot)
	{
		return null;
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x32DD5A0", Offset = "0x32DD5A0", VA = "0x32DD5A0")]
	public static GameObject SpawnMP(GameObject prefab, Vector3 pos, Quaternion rot)
	{
		return null;
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x32DD6FC", Offset = "0x32DD6FC", VA = "0x32DD6FC")]
	public static GameObject Spawn(GameObject prefab, Transform parent, Vector3 pos, Quaternion rot)
	{
		return null;
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x32DD7F0", Offset = "0x32DD7F0", VA = "0x32DD7F0")]
	public static GameObject SpawnMP(GameObject prefab, Transform parent, Vector3 pos, Quaternion rot)
	{
		return null;
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x32DD458", Offset = "0x32DD458", VA = "0x32DD458")]
	public static void Despawn(GameObject obj)
	{
	}
}
[Token(Token = "0x2000174")]
public sealed class MT_HighlightVFX : MonoBehaviour
{
	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Unity.Collections.ReadOnly]
	private Renderer[] renderers;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Unity.Collections.ReadOnly]
	private List<Material> materials;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _initialised;

	[Token(Token = "0x40006D0")]
	private const string HighlightKeyword = "_HIGHLIGHT";

	[Token(Token = "0x40006D1")]
	private const string PropertiesId = "_HighlightProps";

	[Token(Token = "0x40006D2")]
	private const string ColorPropertyId = "_HighlightColor";

	[Token(Token = "0x40006D3")]
	private const string HighlightIntensityId = "_Highlight";

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x15D100C", Offset = "0x15D100C", VA = "0x15D100C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x15D1010", Offset = "0x15D1010", VA = "0x15D1010")]
	[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8CBE0", Offset = "0xE8CBE0")]
	private void Initialise()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x15D129C", Offset = "0x15D129C", VA = "0x15D129C")]
	public void DisableVRHighlight()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x15D13CC", Offset = "0x15D13CC", VA = "0x15D13CC")]
	public void EnableVRHighlight()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x15D1508", Offset = "0x15D1508", VA = "0x15D1508")]
	public void SetVRHighlightColor(Color highlightColor)
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x15D160C", Offset = "0x15D160C", VA = "0x15D160C")]
	public void SetVRHighlightProperties(float distanceFalloff, float scrollSpeed, float minimumHighlight, float flashSpeed)
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x15D1710", Offset = "0x15D1710", VA = "0x15D1710")]
	public MT_HighlightVFX()
	{
	}
}
[Token(Token = "0x2000175")]
public sealed class MT_LoadingMaterialSwapper : MonoBehaviour
{
	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Material loadingMaterial;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public Renderer renderer;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material _storedMaterial;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _previouslyShowing;

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x125AB28", Offset = "0x125AB28", VA = "0x125AB28")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x125ABC0", Offset = "0x125ABC0", VA = "0x125ABC0")]
	private void Update()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x125AC9C", Offset = "0x125AC9C", VA = "0x125AC9C")]
	private void DisplayLoadingMaterialAndStore()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x125AD60", Offset = "0x125AD60", VA = "0x125AD60")]
	private void DisplayNormalMaterial()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x125AE14", Offset = "0x125AE14", VA = "0x125AE14")]
	public MT_LoadingMaterialSwapper()
	{
	}
}
[Token(Token = "0x2000176")]
public class GenericVisualScriptingDatabase
{
	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly Dictionary<string, Component> _dictionary;

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x10D198C", Offset = "0x10D198C", VA = "0x10D198C")]
	public void Register(string id, Component Object)
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x10D1AA0", Offset = "0x10D1AA0", VA = "0x10D1AA0")]
	public void Deregister(string id)
	{
	}

	[Token(Token = "0x6000761")]
	public T GetComponent<T>(string id) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x10D1B64", Offset = "0x10D1B64", VA = "0x10D1B64")]
	public GenericVisualScriptingDatabase()
	{
	}
}
[Token(Token = "0x2000177")]
public class HangingRope : MonoBehaviour
{
	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform[] sockets;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject cable;

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x10D97B4", Offset = "0x10D97B4", VA = "0x10D97B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x10D9874", Offset = "0x10D9874", VA = "0x10D9874")]
	public HangingRope()
	{
	}
}
[Token(Token = "0x2000178")]
public class IKHandling : MonoBehaviour
{
	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LayerMask myLayerMask;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator anim;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 lFpos;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 rFpos;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion lFrot;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion rFrot;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lFWeight;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float rFWeight;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float ikWeight;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform leftFoot;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform rightFoot;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform hintLeft;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform hintRight;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float offsetY;

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x10DB42C", Offset = "0x10DB42C", VA = "0x10DB42C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x10DB510", Offset = "0x10DB510", VA = "0x10DB510")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x10DB86C", Offset = "0x10DB86C", VA = "0x10DB86C")]
	private void OnAnimatorIK()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x10DBB18", Offset = "0x10DBB18", VA = "0x10DBB18")]
	public IKHandling()
	{
	}
}
[Token(Token = "0x2000179")]
public class JointBreakDetect : MonoBehaviour
{
	[Token(Token = "0x200017A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67368", Offset = "0xE67368")]
	private sealed class <DisableColliders>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JointBreakDetect <>4__this;

		[Token(Token = "0x170000F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000770")]
			[Address(RVA = "0x1033D38", Offset = "0x1033D38", VA = "0x1033D38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000772")]
			[Address(RVA = "0x1033D80", Offset = "0x1033D80", VA = "0x1033D80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0x1033BB8", Offset = "0x1033BB8", VA = "0x1033BB8")]
		[DebuggerHidden]
		public <DisableColliders>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0x1033BE4", Offset = "0x1033BE4", VA = "0x1033BE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x1033BE8", Offset = "0x1033BE8", VA = "0x1033BE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x1033D40", Offset = "0x1033D40", VA = "0x1033D40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Rigidbody jointRigidbody;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider jointTrigger;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ZA_AudioEvent jointAudioEvent;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string audioEventName;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleSystem jointParticleSystem;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject[] colliders;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float force;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float torque;

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x10E4808", Offset = "0x10E4808", VA = "0x10E4808")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x10E4960", Offset = "0x10E4960", VA = "0x10E4960")]
	public void BreakJoint(float breakForce)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x10E48E8", Offset = "0x10E48E8", VA = "0x10E48E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8CC58", Offset = "0xE8CC58")]
	private IEnumerator DisableColliders()
	{
		return null;
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x10E4964", Offset = "0x10E4964", VA = "0x10E4964")]
	public JointBreakDetect()
	{
	}
}
[Token(Token = "0x200017B")]
public class Sliceable : MonoBehaviour
{
	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem blood;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource sliceAudioSource;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip sliceSound;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip stabSound;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7A42C", Offset = "0xE7A42C")]
	[SerializeField]
	private bool x;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool y;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[SerializeField]
	private bool z;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 localPosition0;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool slicing;

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x32DE4B0", Offset = "0x32DE4B0", VA = "0x32DE4B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x32DE500", Offset = "0x32DE500", VA = "0x32DE500")]
	private void Update()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x32DE4B4", Offset = "0x32DE4B4", VA = "0x32DE4B4")]
	public void SetOriginalLocalPosition()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x32DE5D4", Offset = "0x32DE5D4", VA = "0x32DE5D4")]
	private void OnCollisionEnter(UnityEngine.Collision collision)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x32DE740", Offset = "0x32DE740", VA = "0x32DE740")]
	private void OnCollisionExit(UnityEngine.Collision collision)
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x32DE7AC", Offset = "0x32DE7AC", VA = "0x32DE7AC")]
	public Sliceable()
	{
	}
}
[Token(Token = "0x200017C")]
public class Snorting : MonoBehaviour
{
	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LineRenderer lr;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float alpha;

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x32DF100", Offset = "0x32DF100", VA = "0x32DF100")]
	public void UpdateLine()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x32DF300", Offset = "0x32DF300", VA = "0x32DF300")]
	public Snorting()
	{
	}
}
[Token(Token = "0x200017D")]
public class pb_Die_side_temp : MonoBehaviour
{
	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool onGround;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int sideValue;

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x169DF0C", Offset = "0x169DF0C", VA = "0x169DF0C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x169DF18", Offset = "0x169DF18", VA = "0x169DF18")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x169DF20", Offset = "0x169DF20", VA = "0x169DF20")]
	public bool OnGround()
	{
		return default(bool);
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x169DF28", Offset = "0x169DF28", VA = "0x169DF28")]
	public pb_Die_side_temp()
	{
	}
}
[Token(Token = "0x200017E")]
public class pb_Die_temp : MonoBehaviour
{
	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 initPosition;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int diceValue;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool thrown;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool hasLanded;

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x169DF30", Offset = "0x169DF30", VA = "0x169DF30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x169DFB4", Offset = "0x169DFB4", VA = "0x169DFB4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x169E000", Offset = "0x169E000", VA = "0x169E000")]
	public void RollDice()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x169E0AC", Offset = "0x169E0AC", VA = "0x169E0AC")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x169E0B4", Offset = "0x169E0B4", VA = "0x169E0B4")]
	private void SideValueCheck()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x169E0BC", Offset = "0x169E0BC", VA = "0x169E0BC")]
	public pb_Die_temp()
	{
	}
}
[Token(Token = "0x200017F")]
public class DrunkTimeManager : MonoBehaviour
{
	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float slowdownFactor;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float slowdownLength;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject drunkEffect;

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x1009934", Offset = "0x1009934", VA = "0x1009934")]
	private void Update()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x100998C", Offset = "0x100998C", VA = "0x100998C")]
	public void DrunkLength(float slowLength)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x10099FC", Offset = "0x10099FC", VA = "0x10099FC")]
	public void DrunkStrength(float customSlow)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x1009A30", Offset = "0x1009A30", VA = "0x1009A30")]
	public DrunkTimeManager()
	{
	}
}
[Token(Token = "0x2000180")]
public class PekingDuckTracker : MonoBehaviour
{
	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent PDTEvents;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float FoodSnapped;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject EdibleDuck;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject FlatPancake;

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x107D918", Offset = "0x107D918", VA = "0x107D918")]
	private void Update()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x107D988", Offset = "0x107D988", VA = "0x107D988")]
	public void Tracker()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x107D99C", Offset = "0x107D99C", VA = "0x107D99C")]
	public PekingDuckTracker()
	{
	}
}
[Token(Token = "0x2000181")]
public class MT_NPCGrabbable : MonoBehaviour
{
	[Token(Token = "0x2000182")]
	public enum HandToUse
	{
		[Token(Token = "0x4000714")]
		Right,
		[Token(Token = "0x4000715")]
		Left
	}

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HandToUse hand;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _visualScriptingID;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InteractionObject _interactionObject;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _originalParent;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _originalPosition;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion _originalRotation;

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x10F693C", Offset = "0x10F693C", VA = "0x10F693C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x10F6A4C", Offset = "0x10F6A4C", VA = "0x10F6A4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x10F6AE4", Offset = "0x10F6AE4", VA = "0x10F6AE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x10F6B78", Offset = "0x10F6B78", VA = "0x10F6B78")]
	public InteractionObject GetInteractionObject()
	{
		return null;
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x10F6B80", Offset = "0x10F6B80", VA = "0x10F6B80")]
	public HandToUse GetHand()
	{
		return default(HandToUse);
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x10F6B88", Offset = "0x10F6B88", VA = "0x10F6B88")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x10F6BFC", Offset = "0x10F6BFC", VA = "0x10F6BFC")]
	public MT_NPCGrabbable()
	{
	}
}
[Token(Token = "0x2000183")]
public class MT_BombDefusal : MonoBehaviour
{
	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int totalBoltToUnscrew;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject cornerBracket;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshPro clockText;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float timeInMinutes;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UnityEvent onEnableBomb;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UnityEvent onUnscrewBolts;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _currentUnscrewBolts;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _currentTime;

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x11277A4", Offset = "0x11277A4", VA = "0x11277A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x11277D0", Offset = "0x11277D0", VA = "0x11277D0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x1127930", Offset = "0x1127930", VA = "0x1127930")]
	public void CheckForUnscrewBolts()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x1127824", Offset = "0x1127824", VA = "0x1127824")]
	private void UpdateClockText(float time)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x11279DC", Offset = "0x11279DC", VA = "0x11279DC")]
	public MT_BombDefusal()
	{
	}
}
[Token(Token = "0x2000184")]
public class FiveFingerFilletDamage : MonoBehaviour
{
	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FiveFingerFilletScore fffScore;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource scream1;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem bloodSplatter1;

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x100D2C4", Offset = "0x100D2C4", VA = "0x100D2C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x100D348", Offset = "0x100D348", VA = "0x100D348")]
	private void Update()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x100D34C", Offset = "0x100D34C", VA = "0x100D34C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x100D3E0", Offset = "0x100D3E0", VA = "0x100D3E0")]
	public FiveFingerFilletDamage()
	{
	}
}
[Token(Token = "0x2000185")]
public class FiveFingerFilletScore : MonoBehaviour
{
	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI scoreTMP;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int currentScore;

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x100D3E8", Offset = "0x100D3E8", VA = "0x100D3E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x100D3F0", Offset = "0x100D3F0", VA = "0x100D3F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x100D474", Offset = "0x100D474", VA = "0x100D474")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x100D500", Offset = "0x100D500", VA = "0x100D500")]
	public FiveFingerFilletScore()
	{
	}
}
[Token(Token = "0x2000186")]
public class HapticsTestController : MonoBehaviour
{
	[Token(Token = "0x2000187")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67378", Offset = "0xE67378")]
	private sealed class <TestHaptics>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticsTestController <>4__this;

		[Token(Token = "0x170000F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007A6")]
			[Address(RVA = "0x1031B9C", Offset = "0x1031B9C", VA = "0x1031B9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007A8")]
			[Address(RVA = "0x1031BE4", Offset = "0x1031BE4", VA = "0x1031BE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x1031A60", Offset = "0x1031A60", VA = "0x1031A60")]
		[DebuggerHidden]
		public <TestHaptics>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x1031A8C", Offset = "0x1031A8C", VA = "0x1031A8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x1031A90", Offset = "0x1031A90", VA = "0x1031A90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x1031BA4", Offset = "0x1031BA4", VA = "0x1031BA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float loopInterval;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MT_HapticsFrameObject store;

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x10D987C", Offset = "0x10D987C", VA = "0x10D987C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x10D98A8", Offset = "0x10D98A8", VA = "0x10D98A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8CD08", Offset = "0xE8CD08")]
	private IEnumerator TestHaptics()
	{
		return null;
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x10D9920", Offset = "0x10D9920", VA = "0x10D9920")]
	public HapticsTestController()
	{
	}
}
[Token(Token = "0x2000188")]
public class TestLocalisation : MonoBehaviour
{
	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x134F4BC", Offset = "0x134F4BC", VA = "0x134F4BC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE8CDB8", Offset = "0xE8CDB8")]
	public void Test()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x134F520", Offset = "0x134F520", VA = "0x134F520")]
	public TestLocalisation()
	{
	}
}
[Token(Token = "0x2000189")]
public class MT_Billboard : MonoBehaviour
{
	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool canOnlyRotateOnYAxis;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera _playerCamera;

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x1126924", Offset = "0x1126924", VA = "0x1126924")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x1126954", Offset = "0x1126954", VA = "0x1126954")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x1126984", Offset = "0x1126984", VA = "0x1126984")]
	private void Update()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x1126B10", Offset = "0x1126B10", VA = "0x1126B10")]
	public MT_Billboard()
	{
	}
}
[Token(Token = "0x200018A")]
public class MT_FollowObject : MonoBehaviour
{
	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool willOnlyUsePosition;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool willUseSpawned;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform objectToFollow;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RigTransform transformToFollow;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _objectToFollow;

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x15BFA58", Offset = "0x15BFA58", VA = "0x15BFA58")]
	public void SetWillOnlyUsePosition(bool willOnlyUsePosition)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x15BFA64", Offset = "0x15BFA64", VA = "0x15BFA64")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x15BFB1C", Offset = "0x15BFB1C", VA = "0x15BFB1C")]
	public void SetObjectToFollow(Transform objectToFollow)
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x15BFBC4", Offset = "0x15BFBC4", VA = "0x15BFBC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x15BFCB4", Offset = "0x15BFCB4", VA = "0x15BFCB4")]
	public MT_FollowObject()
	{
	}
}
[Token(Token = "0x200018B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE67388", Offset = "0xE67388")]
public class MT_LocalisationText : MonoBehaviour
{
	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string stringId;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string additionalText;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private TextMeshProUGUI textMeshProUGUI;

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x125D654", Offset = "0x125D654", VA = "0x125D654")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x125D704", Offset = "0x125D704", VA = "0x125D704")]
	public void SetStringId(string stringId)
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x125D72C", Offset = "0x125D72C", VA = "0x125D72C")]
	public void SetAdditionalInfo(string additionalInfo)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x125D754", Offset = "0x125D754", VA = "0x125D754")]
	public string GetStringId()
	{
		return null;
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x125D75C", Offset = "0x125D75C", VA = "0x125D75C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x125D288", Offset = "0x125D288", VA = "0x125D288")]
	public void UpdateString()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x125D760", Offset = "0x125D760", VA = "0x125D760")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x125D7C0", Offset = "0x125D7C0", VA = "0x125D7C0")]
	public MT_LocalisationText()
	{
	}
}
[Token(Token = "0x200018C")]
public class TestGloveSwap : MonoBehaviour
{
	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material[] materials;

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x134F2C0", Offset = "0x134F2C0", VA = "0x134F2C0")]
	private void SwapLeft(int index)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x134F35C", Offset = "0x134F35C", VA = "0x134F35C")]
	private void SwapRight(int index)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x134F3F8", Offset = "0x134F3F8", VA = "0x134F3F8")]
	private void SwapBoth(int index)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x134F498", Offset = "0x134F498", VA = "0x134F498")]
	private void AddStory(int pageMin, int pageMax, MT_JournalMethods.PageSide minSide, MT_JournalMethods.PageSide maxSide, string text)
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x134F4B4", Offset = "0x134F4B4", VA = "0x134F4B4")]
	public TestGloveSwap()
	{
	}
}
[Token(Token = "0x200018D")]
[ExecuteInEditMode]
public class MT_HeightFogControls : MonoBehaviour
{
	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float fogHeight;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float fogHeightMultiplier;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float fogHeightFalloff;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float fogDensity;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float fogDistanceMultiplier;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float fogYOffset;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Texture2D fogNoiseMap;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Vector2 fogNoiseMapTiling;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Vector2 fogNoiseMapSpeed;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _fogEnabled;

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x15CFB94", Offset = "0x15CFB94", VA = "0x15CFB94")]
	public static void SetFogActive(bool active)
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x15CFC10", Offset = "0x15CFC10", VA = "0x15CFC10")]
	private void SetFogParams()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x15CFD88", Offset = "0x15CFD88", VA = "0x15CFD88")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x15CFD8C", Offset = "0x15CFD8C", VA = "0x15CFD8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x15CFD90", Offset = "0x15CFD90", VA = "0x15CFD90")]
	public MT_HeightFogControls()
	{
	}
}
[Token(Token = "0x200018E")]
public class MT_MasterMaterialInit
{
	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x10EF00C", Offset = "0x10EF00C", VA = "0x10EF00C")]
	static MT_MasterMaterialInit()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x10EF1B8", Offset = "0x10EF1B8", VA = "0x10EF1B8")]
	public MT_MasterMaterialInit()
	{
	}
}
[Token(Token = "0x200018F")]
[ExecuteInEditMode]
public class MT_ParallaxCubeMap : MonoBehaviour
{
	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _parrallaxReflections;

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x1106090", Offset = "0x1106090", VA = "0x1106090")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x11061FC", Offset = "0x11061FC", VA = "0x11061FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x1106248", Offset = "0x1106248", VA = "0x1106248")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x1106294", Offset = "0x1106294", VA = "0x1106294")]
	public MT_ParallaxCubeMap()
	{
	}
}
[Token(Token = "0x2000190")]
[ExecuteInEditMode]
public class MT_EnablePBROnAndroid : MonoBehaviour
{
	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x15BD60C", Offset = "0x15BD60C", VA = "0x15BD60C")]
	public void Force()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x15BD838", Offset = "0x15BD838", VA = "0x15BD838")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x15BD840", Offset = "0x15BD840", VA = "0x15BD840")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x15BD848", Offset = "0x15BD848", VA = "0x15BD848")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x15BD614", Offset = "0x15BD614", VA = "0x15BD614")]
	private void SetFloat(bool state)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x15BD850", Offset = "0x15BD850", VA = "0x15BD850")]
	public MT_EnablePBROnAndroid()
	{
	}
}
[Token(Token = "0x2000191")]
[ExecuteInEditMode]
public class MT_SetQuestPBRGlobals : MonoBehaviour
{
	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x12A95AC", Offset = "0x12A95AC", VA = "0x12A95AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x12A95F4", Offset = "0x12A95F4", VA = "0x12A95F4")]
	public MT_SetQuestPBRGlobals()
	{
	}
}
[Token(Token = "0x2000192")]
public class MT_DestroyAfterTimer : MonoBehaviour
{
	[Token(Token = "0x2000193")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67428", Offset = "0xE67428")]
	private sealed class <DestroyTimer>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_DestroyAfterTimer <>4__this;

		[Token(Token = "0x170000F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007DD")]
			[Address(RVA = "0x1036708", Offset = "0x1036708", VA = "0x1036708", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0x1036750", Offset = "0x1036750", VA = "0x1036750", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x10365D8", Offset = "0x10365D8", VA = "0x10365D8")]
		[DebuggerHidden]
		public <DestroyTimer>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x1036604", Offset = "0x1036604", VA = "0x1036604", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x1036608", Offset = "0x1036608", VA = "0x1036608", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x1036710", Offset = "0x1036710", VA = "0x1036710", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool freezeRigidbodyIfVelocityIsZero;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float timeBeforeDestroy;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool callOnAwake;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x1134AC4", Offset = "0x1134AC4", VA = "0x1134AC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x1134B4C", Offset = "0x1134B4C", VA = "0x1134B4C")]
	public void CallDestroyTimer()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x1134B78", Offset = "0x1134B78", VA = "0x1134B78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8CDD0", Offset = "0xE8CDD0")]
	private IEnumerator DestroyTimer()
	{
		return null;
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x1134BF0", Offset = "0x1134BF0", VA = "0x1134BF0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x1134CE4", Offset = "0x1134CE4", VA = "0x1134CE4")]
	public MT_DestroyAfterTimer()
	{
	}
}
[Token(Token = "0x2000194")]
public class MT_InstantRBForce : MonoBehaviour
{
	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform forcePosition;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x124B5D4", Offset = "0x124B5D4", VA = "0x124B5D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x124B630", Offset = "0x124B630", VA = "0x124B630")]
	public void ApplyForce(float force = 200f)
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x124B764", Offset = "0x124B764", VA = "0x124B764")]
	public MT_InstantRBForce()
	{
	}
}
[Token(Token = "0x2000195")]
public class FusionGraph : FusionGraphBase
{
	[Token(Token = "0x2000196")]
	public enum Layouts
	{
		[Token(Token = "0x400076B")]
		Auto,
		[Token(Token = "0x400076C")]
		FullAuto,
		[Token(Token = "0x400076D")]
		FullNoOverlap,
		[Token(Token = "0x400076E")]
		CenteredAuto,
		[Token(Token = "0x400076F")]
		CenteredNoGraph,
		[Token(Token = "0x4000770")]
		CenteredNoOverlap,
		[Token(Token = "0x4000771")]
		CompactAuto,
		[Token(Token = "0x4000772")]
		CompactNoGraph
	}

	[Token(Token = "0x2000197")]
	public enum ShowGraphOptions
	{
		[Token(Token = "0x4000774")]
		Never,
		[Token(Token = "0x4000775")]
		OverlayOnly,
		[Token(Token = "0x4000776")]
		Always
	}

	[Token(Token = "0x2000198")]
	private enum ShaderType
	{
		[Token(Token = "0x4000778")]
		None,
		[Token(Token = "0x4000779")]
		Overlay,
		[Token(Token = "0x400077A")]
		GameObject
	}

	[Token(Token = "0x4000747")]
	private const int GRPH_TOP_PAD = 36;

	[Token(Token = "0x4000748")]
	private const int GRPH_BTM_PAD = 36;

	[Token(Token = "0x4000749")]
	private const int HIDE_XTRAS_WDTH = 200;

	[Token(Token = "0x400074A")]
	private const int INTERMITTENT_DATA_ARRAYSIZE = 128;

	[Token(Token = "0x400074B")]
	private const int EXPAND_GRPH_THRESH = 112;

	[Token(Token = "0x400074C")]
	private const int COMPACT_THRESH = 52;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	[HideInInspector]
	public float Height;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7A748", Offset = "0xE7A748")]
	[InlineHelp]
	private Layouts _layout;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[InlineHelp]
	[SerializeField]
	private ShowGraphOptions _showGraph;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[InlineHelp]
	public float Padding;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[InlineHelp]
	[SerializeField]
	private bool _alwaysExpandGraph;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	[InlineHelp]
	[SerializeField]
	private bool _showUITargets;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7A85C", Offset = "0xE7A85C")]
	public Image GraphImg;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7A8A0", Offset = "0xE7A8A0")]
	public Text LabelMin;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7A8E4", Offset = "0xE7A8E4")]
	public Text LabelMax;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7A928", Offset = "0xE7A928")]
	public Text LabelAvg;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7A96C", Offset = "0xE7A96C")]
	public Text LabelLast;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7A9B0", Offset = "0xE7A9B0")]
	public Text LabelPer;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7A9F4", Offset = "0xE7A9F4")]
	public Dropdown _viewDropdown;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7AA38", Offset = "0xE7AA38")]
	public Button _avgBttn;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float _min;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float _max;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float[] _values;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float[] _intensity;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float[] _histogram;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<int> DropdownLookup;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[InlineHelp]
	private FusionGraphVisualization _graphVisualization;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private ShaderType _currentShader;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xE7AA8C", Offset = "0xE7AA8C")]
	private (int, float)[] _cachedValues;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private double _lastCachedTickTime;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int _lastCachedTick;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int _histoHighestUsedBucketIndex;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private int _histoAvgSampleCount;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private double _histoStepInverse;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private double _histoAvg;

	[Token(Token = "0x170000F7")]
	private static Shader Shader
	{
		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x28706A8", Offset = "0x28706A8", VA = "0x28706A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F8")]
	public Layouts Layout
	{
		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x2870704", Offset = "0x2870704", VA = "0x2870704")]
		get
		{
			return default(Layouts);
		}
		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x287070C", Offset = "0x287070C", VA = "0x287070C")]
		set
		{
		}
	}

	[Token(Token = "0x170000F9")]
	public ShowGraphOptions ShowGraph
	{
		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x287071C", Offset = "0x287071C", VA = "0x287071C")]
		get
		{
			return default(ShowGraphOptions);
		}
		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x2870724", Offset = "0x2870724", VA = "0x2870724")]
		set
		{
		}
	}

	[Token(Token = "0x170000FA")]
	public bool AlwaysExpandGraph
	{
		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x2870758", Offset = "0x2870758", VA = "0x2870758")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x2870760", Offset = "0x2870760", VA = "0x2870760")]
		set
		{
		}
	}

	[Token(Token = "0x170000FB")]
	public FusionGraphVisualization GraphVisualization
	{
		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x287148C", Offset = "0x287148C", VA = "0x287148C")]
		set
		{
		}
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x2870798", Offset = "0x2870798", VA = "0x2870798", Slot = "14")]
	protected override bool TryConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x2871494", Offset = "0x2871494", VA = "0x2871494")]
	private void Reset()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x287179C", Offset = "0x287179C", VA = "0x287179C")]
	public void Clear()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x2871844", Offset = "0x2871844", VA = "0x2871844", Slot = "10")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x287196C", Offset = "0x287196C", VA = "0x287196C")]
	public void OnDropdownChanged(int value)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x28719F0", Offset = "0x28719F0", VA = "0x28719F0")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xE8CE80", Offset = "0xE8CE80")]
	private void ResetShaderButton()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x28714E8", Offset = "0x28714E8", VA = "0x28714E8")]
	private void ResetGraphShader()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x2871CB8", Offset = "0x2871CB8", VA = "0x2871CB8", Slot = "11")]
	public override void CyclePer()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x28712A0", Offset = "0x28712A0", VA = "0x28712A0")]
	private void SetPerText()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x28720AC", Offset = "0x28720AC", VA = "0x28720AC", Slot = "13")]
	public override void Refresh()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x28723C8", Offset = "0x28723C8", VA = "0x28723C8")]
	private void UpdateContinuousTick(ref IStatsBuffer data)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x2872A2C", Offset = "0x2872A2C", VA = "0x2872A2C")]
	private void UpdateIntermittentTick(ref IStatsBuffer data)
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x2872F70", Offset = "0x2872F70", VA = "0x2872F70")]
	private void UpdateIntermittentTime(ref IStatsBuffer data)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x2873D10", Offset = "0x2873D10", VA = "0x2873D10")]
	private void ApplyScaling(ref float min, ref float max)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x2873E8C", Offset = "0x2873E8C", VA = "0x2873E8C")]
	private void UpdateUiText(float min, float max, float avg, float last)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x2874500", Offset = "0x2874500", VA = "0x2874500")]
	private float GetIntermittentAverageInfo(ref IStatsBuffer data, float sum)
	{
		return default(float);
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x287324C", Offset = "0x287324C", VA = "0x287324C")]
	private void UpdateTickValueHistogram(ref IStatsBuffer data)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x28747F4", Offset = "0x28747F4", VA = "0x28747F4")]
	public static FusionGraph Create(FusionStats iFusionStats, Simulation.Statistics.StatSourceTypes statSourceType, int statId, RectTransform parentRT)
	{
		return null;
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x2874928", Offset = "0x2874928", VA = "0x2874928")]
	public void Generate(Simulation.Statistics.StatSourceTypes type, int statId, RectTransform root)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x287578C", Offset = "0x287578C", VA = "0x287578C", Slot = "12")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xE8CEC0", Offset = "0xE8CEC0")]
	public override void CalculateLayout()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x28764C0", Offset = "0x28764C0", VA = "0x28764C0")]
	public FusionGraph()
	{
	}
}
[Token(Token = "0x2000199")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xE67438", Offset = "0xE67438")]
[ExecuteAlways]
public class FusionStats : Fusion.Behaviour
{
	[Token(Token = "0x200019A")]
	public enum StatCanvasTypes
	{
		[Token(Token = "0x40007E9")]
		Overlay,
		[Token(Token = "0x40007EA")]
		GameObject
	}

	[Token(Token = "0x200019B")]
	public enum DefaultLayouts
	{
		[Token(Token = "0x40007EC")]
		Custom,
		[Token(Token = "0x40007ED")]
		Left,
		[Token(Token = "0x40007EE")]
		Right,
		[Token(Token = "0x40007EF")]
		UpperLeft,
		[Token(Token = "0x40007F0")]
		UpperRight,
		[Token(Token = "0x40007F1")]
		Full
	}

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<NetworkRunner, List<FusionStats>> _statsForRunnerLookup;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, FusionStats> _activeGuids;

	[Token(Token = "0x400077D")]
	public const Simulation.Statistics.SimStatFlags DefaultSimStatsMask = Simulation.Statistics.SimStatFlags.ForwardSimCount | Simulation.Statistics.SimStatFlags.ResimCount | Simulation.Statistics.SimStatFlags.PacketSize;

	[Token(Token = "0x400077E")]
	private const int SCREEN_SCALE_W = 1080;

	[Token(Token = "0x400077F")]
	private const int SCREEN_SCALE_H = 1080;

	[Token(Token = "0x4000780")]
	private const float TEXT_MARGIN = 0.25f;

	[Token(Token = "0x4000781")]
	private const float TITLE_HEIGHT = 20f;

	[Token(Token = "0x4000782")]
	private const int MARGIN = 6;

	[Token(Token = "0x4000783")]
	private const int PAD = 10;

	[Token(Token = "0x4000784")]
	private const string PLAY_TEXT = "PLAY";

	[Token(Token = "0x4000785")]
	private const string PAUS_TEXT = "PAUSE";

	[Token(Token = "0x4000786")]
	private const string SHOW_TEXT = "SHOW";

	[Token(Token = "0x4000787")]
	private const string HIDE_TEXT = "HIDE";

	[Token(Token = "0x4000788")]
	private const string CLER_TEXT = "CLEAR";

	[Token(Token = "0x4000789")]
	private const string CNVS_TEXT = "CANVAS";

	[Token(Token = "0x400078A")]
	private const string CLSE_TEXT = "CLOSE";

	[Token(Token = "0x400078B")]
	private const string PLAY_ICON = "►";

	[Token(Token = "0x400078C")]
	private const string PAUS_ICON = "װ";

	[Token(Token = "0x400078D")]
	private const string HIDE_ICON = "▼";

	[Token(Token = "0x400078E")]
	private const string SHOW_ICON = "▲";

	[Token(Token = "0x400078F")]
	private const string CLER_ICON = "ᴓ";

	[Token(Token = "0x4000790")]
	private const string CNVS_ICON = "ﬦ";

	[Token(Token = "0x4000791")]
	private const string CLSE_ICON = "x";

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[InlineHelp]
	[AttributeAttribute(Name = "UnitAttribute", RVA = "0xE7AB28", Offset = "0xE7AB28")]
	[MultiPropertyDrawersFix]
	public float RedrawInterval;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7AB90", Offset = "0xE7AB90")]
	[InlineHelp]
	[SerializeField]
	private StatCanvasTypes _canvasType;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[InlineHelp]
	[SerializeField]
	private bool _showButtonLabels;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[InlineHelp]
	[MultiPropertyDrawersFix]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7AC24", Offset = "0xE7AC24")]
	private int _maxHeaderHeight;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7AC88", Offset = "0xE7AC88")]
	[MultiPropertyDrawersFix]
	[InlineHelp]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7AC88", Offset = "0xE7AC88")]
	public float CanvasScale;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7AD0C", Offset = "0xE7AD0C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7AD0C", Offset = "0xE7AD0C")]
	[InlineHelp]
	[MultiPropertyDrawersFix]
	public float CanvasDistance;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7AD8C", Offset = "0xE7AD8C")]
	[AttributeAttribute(Name = "NormalizedRectAttribute", RVA = "0xE7AD8C", Offset = "0xE7AD8C")]
	[MultiPropertyDrawersFix]
	private Rect _gameObjectRect;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7AE1C", Offset = "0xE7AE1C")]
	[MultiPropertyDrawersFix]
	[AttributeAttribute(Name = "NormalizedRectAttribute", RVA = "0xE7AE1C", Offset = "0xE7AE1C")]
	[SerializeField]
	[InlineHelp]
	private Rect _overlayRect;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7AEAC", Offset = "0xE7AEAC")]
	[InlineHelp]
	[SerializeField]
	private FusionGraph.Layouts _defaultLayout;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[InlineHelp]
	[SerializeField]
	private bool _noTextOverlap;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	[InlineHelp]
	[SerializeField]
	private bool _noGraphShader;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7AF78", Offset = "0xE7AF78")]
	[MultiPropertyDrawersFix]
	[InlineHelp]
	public int GraphColumnCount;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	[MultiPropertyDrawersFix]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7AFC8", Offset = "0xE7AFC8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7AFC8", Offset = "0xE7AFC8")]
	[InlineHelp]
	private int _graphMaxWidth;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7B054", Offset = "0xE7B054")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "WarnIfAttribute", RVA = "0xE7B054", Offset = "0xE7B054")]
	private bool _enableObjectStats;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7B0E8", Offset = "0xE7B0E8")]
	private NetworkObject _object;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7B144", Offset = "0xE7B144")]
	[InlineHelp]
	[MultiPropertyDrawersFix]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7B144", Offset = "0xE7B144")]
	private int _objectTitleHeight;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7B1CC", Offset = "0xE7B1CC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7B1CC", Offset = "0xE7B1CC")]
	[MultiPropertyDrawersFix]
	private int _objectIdsHeight;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7B254", Offset = "0xE7B254")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7B254", Offset = "0xE7B254")]
	[MultiPropertyDrawersFix]
	private int _objectMetersHeight;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[InlineHelp]
	[AttributeAttribute(Name = "EditorDisabledAttribute", RVA = "0xE7B2DC", Offset = "0xE7B2DC")]
	[MultiPropertyDrawersFix]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7B2DC", Offset = "0xE7B2DC")]
	[SerializeField]
	private NetworkRunner _runner;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[InlineHelp]
	public bool InitializeAllGraphs;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[InlineHelp]
	[AttributeAttribute(Name = "VersaMaskAttribute", RVA = "0xE7B36C", Offset = "0xE7B36C")]
	[MultiPropertyDrawersFix]
	public SimulationModes ConnectTo;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "VersaMaskAttribute", RVA = "0xE7B3BC", Offset = "0xE7B3BC")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7B3BC", Offset = "0xE7B3BC")]
	[MultiPropertyDrawersFix]
	private Simulation.Statistics.ObjStatFlags _includedObjStats;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "VersaMaskAttribute", RVA = "0xE7B440", Offset = "0xE7B440")]
	[MultiPropertyDrawersFix]
	private Simulation.Statistics.NetStatFlags _includedNetStats;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "VersaMaskAttribute", RVA = "0xE7B4A0", Offset = "0xE7B4A0")]
	[MultiPropertyDrawersFix]
	private Simulation.Statistics.SimStatFlags _includedSimStats;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7B500", Offset = "0xE7B500")]
	[InlineHelp]
	[SerializeField]
	public bool AutoDestroy;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	[InlineHelp]
	[SerializeField]
	public bool EnforceSingle;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7B594", Offset = "0xE7B594")]
	[SerializeField]
	[InlineHelp]
	public string Guid;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7B5F0", Offset = "0xE7B5F0")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7B5F0", Offset = "0xE7B5F0")]
	[MultiPropertyDrawersFix]
	private bool _modifyColors;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7B688", Offset = "0xE7B688")]
	private Color _graphColorGood;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7B6F0", Offset = "0xE7B6F0")]
	private Color _graphColorWarn;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7B758", Offset = "0xE7B758")]
	private Color _graphColorBad;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7B7C0", Offset = "0xE7B7C0")]
	private Color _graphColorFlag;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7B828", Offset = "0xE7B828")]
	[InlineHelp]
	[SerializeField]
	private Color _fontColor;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7B88C", Offset = "0xE7B88C")]
	private Color PanelColor;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7B8F4", Offset = "0xE7B8F4")]
	private Color _simDataBackColor;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7B95C", Offset = "0xE7B95C")]
	[InlineHelp]
	private Color _netDataBackColor;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7B9C0", Offset = "0xE7B9C0")]
	[InlineHelp]
	private Color _objDataBackColor;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	[HideInInspector]
	private FusionGraph[] _simGraphs;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	[HideInInspector]
	private FusionGraph[] _objGraphs;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	[HideInInspector]
	private FusionGraph[] _netGraphs;

	[NonSerialized]
	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<IFusionStatsView> _foundViews;

	[NonSerialized]
	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private List<FusionGraph> _foundGraphs;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	[HideInInspector]
	private Text _titleText;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	[HideInInspector]
	private Text _clearIcon;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	[HideInInspector]
	private Text _pauseIcon;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	[HideInInspector]
	private Text _togglIcon;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	[HideInInspector]
	private Text _closeIcon;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	[HideInInspector]
	private Text _canvsIcon;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	[HideInInspector]
	private Text _clearLabel;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	[HideInInspector]
	private Text _pauseLabel;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	[HideInInspector]
	private Text _togglLabel;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	[HideInInspector]
	private Text _closeLabel;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	[HideInInspector]
	private Text _canvsLabel;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	[HideInInspector]
	private Text _objectNameText;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	[HideInInspector]
	private GridLayoutGroup _graphGridLayoutGroup;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	[HideInInspector]
	private Canvas _canvas;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _canvasRT;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _rootPanelRT;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _guidesRT;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _headerRT;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _statsPanelRT;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _graphsLayoutRT;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _titleRT;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _buttonsRT;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _objectTitlePanelRT;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _objectIdsGroupRT;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _objectMetersPanelRT;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _clientIdPanelRT;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _authorityPanelRT;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[SerializeField]
	[HideInInspector]
	private Button _titleButton;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	[SerializeField]
	[HideInInspector]
	private Button _objctButton;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[SerializeField]
	[HideInInspector]
	private Button _clearButton;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[SerializeField]
	[HideInInspector]
	private Button _togglButton;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[SerializeField]
	[HideInInspector]
	private Button _pauseButton;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[SerializeField]
	[HideInInspector]
	private Button _closeButton;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[SerializeField]
	[HideInInspector]
	private Button _canvsButton;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private Font _font;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private bool _hidden;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x281")]
	private bool _paused;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private int _layoutDirty;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private bool _activeDirty;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private double _currentDrawTime;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private double _delayDrawUntil;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool? _newInputSystemFound;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private string _previousObjectTitle;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private float _lastLayoutUpdate;

	[Token(Token = "0x170000FC")]
	public static Simulation.Statistics.NetStatFlags DefaultNetStatsMask
	{
		[Token(Token = "0x6000803")]
		[Address(RVA = "0x2877BDC", Offset = "0x2877BDC", VA = "0x2877BDC")]
		get
		{
			return default(Simulation.Statistics.NetStatFlags);
		}
	}

	[Token(Token = "0x170000FD")]
	private bool ShowColorControls
	{
		[Token(Token = "0x6000804")]
		[Address(RVA = "0x2877BE4", Offset = "0x2877BE4", VA = "0x2877BE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000FE")]
	private bool IsNotPlaying
	{
		[Token(Token = "0x6000805")]
		[Address(RVA = "0x2877C20", Offset = "0x2877C20", VA = "0x2877C20")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000FF")]
	public StatCanvasTypes CanvasType
	{
		[Token(Token = "0x6000806")]
		[Address(RVA = "0x2877C40", Offset = "0x2877C40", VA = "0x2877C40")]
		get
		{
			return default(StatCanvasTypes);
		}
		[Token(Token = "0x6000807")]
		[Address(RVA = "0x2877C48", Offset = "0x2877C48", VA = "0x2877C48")]
		set
		{
		}
	}

	[Token(Token = "0x17000100")]
	public bool ShowButtonLabels
	{
		[Token(Token = "0x6000808")]
		[Address(RVA = "0x2877C78", Offset = "0x2877C78", VA = "0x2877C78")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000809")]
		[Address(RVA = "0x2877C80", Offset = "0x2877C80", VA = "0x2877C80")]
		set
		{
		}
	}

	[Token(Token = "0x17000101")]
	public int MaxHeaderHeight
	{
		[Token(Token = "0x600080A")]
		[Address(RVA = "0x2877CA4", Offset = "0x2877CA4", VA = "0x2877CA4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600080B")]
		[Address(RVA = "0x2877CAC", Offset = "0x2877CAC", VA = "0x2877CAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public Rect GameObjectRect
	{
		[Token(Token = "0x600080C")]
		[Address(RVA = "0x2877CCC", Offset = "0x2877CCC", VA = "0x2877CCC")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x600080D")]
		[Address(RVA = "0x2877CD8", Offset = "0x2877CD8", VA = "0x2877CD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000103")]
	public Rect OverlayRect
	{
		[Token(Token = "0x600080E")]
		[Address(RVA = "0x2877CFC", Offset = "0x2877CFC", VA = "0x2877CFC")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x600080F")]
		[Address(RVA = "0x2877D08", Offset = "0x2877D08", VA = "0x2877D08")]
		set
		{
		}
	}

	[Token(Token = "0x17000104")]
	public FusionGraph.Layouts DefaultLayout
	{
		[Token(Token = "0x6000810")]
		[Address(RVA = "0x2877D2C", Offset = "0x2877D2C", VA = "0x2877D2C")]
		get
		{
			return default(FusionGraph.Layouts);
		}
		[Token(Token = "0x6000811")]
		[Address(RVA = "0x2877D34", Offset = "0x2877D34", VA = "0x2877D34")]
		set
		{
		}
	}

	[Token(Token = "0x17000105")]
	public bool NoTextOverlap
	{
		[Token(Token = "0x6000812")]
		[Address(RVA = "0x2877D54", Offset = "0x2877D54", VA = "0x2877D54")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000813")]
		[Address(RVA = "0x2877D5C", Offset = "0x2877D5C", VA = "0x2877D5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000106")]
	public bool NoGraphShader
	{
		[Token(Token = "0x6000814")]
		[Address(RVA = "0x2877D80", Offset = "0x2877D80", VA = "0x2877D80")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000815")]
		[Address(RVA = "0x2877D88", Offset = "0x2877D88", VA = "0x2877D88")]
		set
		{
		}
	}

	[Token(Token = "0x17000107")]
	public int GraphMaxWidth
	{
		[Token(Token = "0x6000816")]
		[Address(RVA = "0x2877DAC", Offset = "0x2877DAC", VA = "0x2877DAC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000817")]
		[Address(RVA = "0x2877DB4", Offset = "0x2877DB4", VA = "0x2877DB4")]
		set
		{
		}
	}

	[Token(Token = "0x17000108")]
	public bool EnableObjectStats
	{
		[Token(Token = "0x6000818")]
		[Address(RVA = "0x2877DD4", Offset = "0x2877DD4", VA = "0x2877DD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000819")]
		[Address(RVA = "0x2877DDC", Offset = "0x2877DDC", VA = "0x2877DDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000109")]
	private bool ShowMissingNetObjWarning
	{
		[Token(Token = "0x600081A")]
		[Address(RVA = "0x2877E00", Offset = "0x2877E00", VA = "0x2877E00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700010A")]
	public NetworkObject Object
	{
		[Token(Token = "0x600081B")]
		[Address(RVA = "0x287674C", Offset = "0x287674C", VA = "0x287674C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010B")]
	public int ObjectTitleHeight
	{
		[Token(Token = "0x600081C")]
		[Address(RVA = "0x2877E90", Offset = "0x2877E90", VA = "0x2877E90")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600081D")]
		[Address(RVA = "0x2877E98", Offset = "0x2877E98", VA = "0x2877E98")]
		set
		{
		}
	}

	[Token(Token = "0x1700010C")]
	public int ObjectIdsHeight
	{
		[Token(Token = "0x600081E")]
		[Address(RVA = "0x2877EB8", Offset = "0x2877EB8", VA = "0x2877EB8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600081F")]
		[Address(RVA = "0x2877EC0", Offset = "0x2877EC0", VA = "0x2877EC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700010D")]
	public int ObjectMetersHeight
	{
		[Token(Token = "0x6000820")]
		[Address(RVA = "0x2877EE0", Offset = "0x2877EE0", VA = "0x2877EE0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000821")]
		[Address(RVA = "0x2877EE8", Offset = "0x2877EE8", VA = "0x2877EE8")]
		set
		{
		}
	}

	[Token(Token = "0x1700010E")]
	public NetworkRunner Runner
	{
		[Token(Token = "0x6000822")]
		[Address(RVA = "0x287432C", Offset = "0x287432C", VA = "0x287432C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000823")]
		[Address(RVA = "0x2877A5C", Offset = "0x2877A5C", VA = "0x2877A5C")]
		set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	public Simulation.Statistics.ObjStatFlags IncludedObjectStats
	{
		[Token(Token = "0x6000824")]
		[Address(RVA = "0x287851C", Offset = "0x287851C", VA = "0x287851C")]
		get
		{
			return default(Simulation.Statistics.ObjStatFlags);
		}
		[Token(Token = "0x6000825")]
		[Address(RVA = "0x2878524", Offset = "0x2878524", VA = "0x2878524")]
		set
		{
		}
	}

	[Token(Token = "0x17000110")]
	public Simulation.Statistics.NetStatFlags IncludedNetStats
	{
		[Token(Token = "0x6000826")]
		[Address(RVA = "0x2878534", Offset = "0x2878534", VA = "0x2878534")]
		get
		{
			return default(Simulation.Statistics.NetStatFlags);
		}
		[Token(Token = "0x6000827")]
		[Address(RVA = "0x287853C", Offset = "0x287853C", VA = "0x287853C")]
		set
		{
		}
	}

	[Token(Token = "0x17000111")]
	public Simulation.Statistics.SimStatFlags IncludedSimStats
	{
		[Token(Token = "0x6000828")]
		[Address(RVA = "0x287854C", Offset = "0x287854C", VA = "0x287854C")]
		get
		{
			return default(Simulation.Statistics.SimStatFlags);
		}
		[Token(Token = "0x6000829")]
		[Address(RVA = "0x2878554", Offset = "0x2878554", VA = "0x2878554")]
		set
		{
		}
	}

	[Token(Token = "0x17000112")]
	public bool ModifyColors
	{
		[Token(Token = "0x600082A")]
		[Address(RVA = "0x2878564", Offset = "0x2878564", VA = "0x2878564")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000113")]
	public Color FontColor
	{
		[Token(Token = "0x600082B")]
		[Address(RVA = "0x287856C", Offset = "0x287856C", VA = "0x287856C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000114")]
	public Color GraphColorGood
	{
		[Token(Token = "0x600082C")]
		[Address(RVA = "0x2878578", Offset = "0x2878578", VA = "0x2878578")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000115")]
	public Color GraphColorWarn
	{
		[Token(Token = "0x600082D")]
		[Address(RVA = "0x2878584", Offset = "0x2878584", VA = "0x2878584")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000116")]
	public Color GraphColorBad
	{
		[Token(Token = "0x600082E")]
		[Address(RVA = "0x2878590", Offset = "0x2878590", VA = "0x2878590")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000117")]
	public Color GraphColorFlag
	{
		[Token(Token = "0x600082F")]
		[Address(RVA = "0x287859C", Offset = "0x287859C", VA = "0x287859C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000118")]
	public Color SimDataBackColor
	{
		[Token(Token = "0x6000830")]
		[Address(RVA = "0x28785A8", Offset = "0x28785A8", VA = "0x28785A8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000119")]
	public Color NetDataBackColor
	{
		[Token(Token = "0x6000831")]
		[Address(RVA = "0x28785BC", Offset = "0x28785BC", VA = "0x28785BC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700011A")]
	public Color ObjDataBackColor
	{
		[Token(Token = "0x6000832")]
		[Address(RVA = "0x28785D0", Offset = "0x28785D0", VA = "0x28785D0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700011B")]
	public Rect CurrentRect
	{
		[Token(Token = "0x6000833")]
		[Address(RVA = "0x28785E4", Offset = "0x28785E4", VA = "0x28785E4")]
		get
		{
			return default(Rect);
		}
	}

	[Token(Token = "0x1700011C")]
	private Shader Shader
	{
		[Token(Token = "0x6000835")]
		[Address(RVA = "0x2878628", Offset = "0x2878628", VA = "0x2878628")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011D")]
	public static bool NewInputSystemFound
	{
		[Token(Token = "0x600083C")]
		[Address(RVA = "0x287A47C", Offset = "0x287A47C", VA = "0x287A47C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700011E")]
	private bool _graphsAreMissing
	{
		[Token(Token = "0x600083E")]
		[Address(RVA = "0x287A6DC", Offset = "0x287A6DC", VA = "0x287A6DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x2877390", Offset = "0x2877390", VA = "0x2877390")]
	internal static FusionStats CreateInternal([Optional] NetworkRunner runner, DefaultLayouts layout = DefaultLayouts.Left, [Optional] Simulation.Statistics.NetStatFlags? netStatsMask, [Optional] Simulation.Statistics.SimStatFlags? simStatsMask)
	{
		return null;
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x2877468", Offset = "0x2877468", VA = "0x2877468")]
	public static FusionStats Create([Optional] Transform parent, [Optional] NetworkRunner runner, [Optional] DefaultLayouts? screenLayout, [Optional] DefaultLayouts? objectLayout, [Optional] Simulation.Statistics.NetStatFlags? netStatsMask, [Optional] Simulation.Statistics.SimStatFlags? simStatsMask)
	{
		return null;
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x2877B1C", Offset = "0x2877B1C", VA = "0x2877B1C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xE8CF00", Offset = "0xE8CF00")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x287841C", Offset = "0x287841C", VA = "0x287841C")]
	private void UpdateTitle()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x2877C64", Offset = "0x2877C64", VA = "0x2877C64")]
	private void DirtyLayout(int minimumRefreshes = 1)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x2877668", Offset = "0x2877668", VA = "0x2877668")]
	private void ResetInternal([Optional] bool? enableObjectStats, [Optional] Simulation.Statistics.NetStatFlags? netStatsMask, [Optional] Simulation.Statistics.SimStatFlags? simStatsMask, [Optional] DefaultLayouts? objectLayout, [Optional] DefaultLayouts? screenLayout)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x28796D4", Offset = "0x28796D4", VA = "0x28796D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x2879A38", Offset = "0x2879A38", VA = "0x2879A38")]
	private void Start()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x287A270", Offset = "0x287A270", VA = "0x287A270")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x287A3B4", Offset = "0x287A3B4", VA = "0x287A3B4")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xE8CF14", Offset = "0xE8CF14")]
	private void DestroyGraphs()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x2879A78", Offset = "0x2879A78", VA = "0x2879A78")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x2878A60", Offset = "0x2878A60", VA = "0x2878A60")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xE8CF70", Offset = "0xE8CF70")]
	private void GenerateGraphs()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x2878258", Offset = "0x2878258", VA = "0x2878258")]
	private void AssociateWithRunner(NetworkRunner runner)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x287811C", Offset = "0x287811C", VA = "0x287811C")]
	private void DisassociateWithRunner(NetworkRunner runner)
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x287B3F8", Offset = "0x287B3F8", VA = "0x287B3F8")]
	private void Pause()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x287B69C", Offset = "0x287B69C", VA = "0x287B69C")]
	private void Toggle()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x287BA00", Offset = "0x287BA00", VA = "0x287BA00")]
	private void Clear()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x287BC2C", Offset = "0x287BC2C", VA = "0x287BC2C")]
	private void ToggleCanvasType()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x287CAE8", Offset = "0x287CAE8", VA = "0x287CAE8")]
	private void Close()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x287CB60", Offset = "0x287CB60", VA = "0x287CB60")]
	private void PingSelectObject()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x287CB64", Offset = "0x287CB64", VA = "0x287CB64")]
	private void PingSelectFusionStats()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x287CB68", Offset = "0x287CB68", VA = "0x287CB68")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x287D2F0", Offset = "0x287D2F0", VA = "0x287D2F0")]
	private void RefreshObjectValues()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x287B2A0", Offset = "0x287B2A0", VA = "0x287B2A0")]
	public FusionGraph CreateGraph(Simulation.Statistics.StatSourceTypes type, int statId, RectTransform parentRT)
	{
		return null;
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x287CEC0", Offset = "0x287CEC0", VA = "0x287CEC0")]
	private void ReapplyEnabled()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x287BC58", Offset = "0x287BC58", VA = "0x287BC58")]
	private void CalculateLayout()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x28787CC", Offset = "0x28787CC", VA = "0x28787CC")]
	private void ApplyDefaultLayout(DefaultLayouts defaults, [Optional] StatCanvasTypes? applyForCanvasType)
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x287D3D8", Offset = "0x287D3D8", VA = "0x287D3D8")]
	public FusionStats()
	{
	}
}
[Token(Token = "0x200019C")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xE6747C", Offset = "0xE6747C")]
public abstract class FusionGraphBase : Fusion.Behaviour, IFusionStatsView
{
	[Token(Token = "0x200019D")]
	public enum StatsPer
	{
		[Token(Token = "0x4000805")]
		Default = 0,
		[Token(Token = "0x4000806")]
		Individual = 1,
		[Token(Token = "0x4000807")]
		Tick = 2,
		[Token(Token = "0x4000808")]
		Second = 4
	}

	[Token(Token = "0x40007F2")]
	protected const int PAD = 10;

	[Token(Token = "0x40007F3")]
	protected const int MRGN = 6;

	[Token(Token = "0x40007F4")]
	protected const int MAX_FONT_SIZE_WITH_GRAPH = 24;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	protected Text LabelTitle;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	protected Image BackImage;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[InlineHelp]
	[SerializeField]
	protected Simulation.Statistics.StatSourceTypes _statSourceType;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CastEnumAttribute", RVA = "0xE7C2E4", Offset = "0xE7C2E4")]
	[InlineHelp]
	[SerializeField]
	protected int _statId;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[InlineHelp]
	public StatsPer StatsPerDefault;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[InlineHelp]
	public float WarnThreshold;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[InlineHelp]
	public float ErrorThreshold;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected IStatsBuffer _statsBuffer;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool _isOverlay;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected FusionStats _fusionStats;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected bool _layoutDirty;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected Simulation.Statistics.StatsPer CurrentPer;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Simulation.Statistics.StatSourceInfo StatSourceInfo;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[HideInInspector]
	private Simulation.Statistics.StatSourceTypes _prevStatSourceType;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	[HideInInspector]
	private int _prevStatId;

	[Token(Token = "0x1700011F")]
	public Simulation.Statistics.StatSourceTypes StateSourceType
	{
		[Token(Token = "0x6000851")]
		[Address(RVA = "0x2876570", Offset = "0x2876570", VA = "0x2876570")]
		get
		{
			return default(Simulation.Statistics.StatSourceTypes);
		}
		[Token(Token = "0x6000852")]
		[Address(RVA = "0x2876578", Offset = "0x2876578", VA = "0x2876578")]
		set
		{
		}
	}

	[Token(Token = "0x17000120")]
	public int StatId
	{
		[Token(Token = "0x6000853")]
		[Address(RVA = "0x287658C", Offset = "0x287658C", VA = "0x287658C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000854")]
		[Address(RVA = "0x2876594", Offset = "0x2876594", VA = "0x2876594")]
		set
		{
		}
	}

	[Token(Token = "0x17000121")]
	public IStatsBuffer StatsBuffer
	{
		[Token(Token = "0x6000855")]
		[Address(RVA = "0x287238C", Offset = "0x287238C", VA = "0x287238C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000122")]
	public bool IsOverlay
	{
		[Token(Token = "0x6000857")]
		[Address(RVA = "0x28765F4", Offset = "0x28765F4", VA = "0x28765F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000856")]
		[Address(RVA = "0x28765A8", Offset = "0x28765A8", VA = "0x28765A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000123")]
	protected virtual Color BackColor
	{
		[Token(Token = "0x6000858")]
		[Address(RVA = "0x28765FC", Offset = "0x28765FC", VA = "0x28765FC", Slot = "9")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000124")]
	protected Type CastToStatType
	{
		[Token(Token = "0x6000859")]
		[Address(RVA = "0x2876674", Offset = "0x2876674", VA = "0x2876674")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x2871C04", Offset = "0x2871C04", VA = "0x2871C04")]
	protected FusionStats LocateParentFusionStats()
	{
		return null;
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x2876748", Offset = "0x2876748", VA = "0x2876748", Slot = "10")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x2871CF4", Offset = "0x2871CF4", VA = "0x2871CF4", Slot = "11")]
	public virtual void CyclePer()
	{
	}

	[Token(Token = "0x600085D")]
	public abstract void CalculateLayout();

	[Token(Token = "0x600085E")]
	public abstract void Refresh();

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x2870A7C", Offset = "0x2870A7C", VA = "0x2870A7C", Slot = "14")]
	protected virtual bool TryConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x2876330", Offset = "0x2876330", VA = "0x2876330")]
	protected void ApplyTitleText()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x2876800", Offset = "0x2876800", VA = "0x2876800")]
	protected void CheckIfValidIncurrentMode(NetworkRunner runner)
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x2876560", Offset = "0x2876560", VA = "0x2876560")]
	protected FusionGraphBase()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000863")]
	[Address(RVA = "0x28769CC", Offset = "0x28769CC", VA = "0x28769CC", Slot = "7")]
	private bool Fusion.StatsInternal.IFusionStatsView.get_isActiveAndEnabled()
	{
		return default(bool);
	}

	[SpecialName]
	[Token(Token = "0x6000864")]
	[Address(RVA = "0x28769D4", Offset = "0x28769D4", VA = "0x28769D4", Slot = "8")]
	private Transform Fusion.StatsInternal.IFusionStatsView.get_transform()
	{
		return null;
	}
}
[Token(Token = "0x200019E")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xE674B0", Offset = "0xE674B0")]
[ExecuteAlways]
public class FusionStatsBillboard : Fusion.Behaviour
{
	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[InlineHelp]
	public Camera Camera;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float _lastCameraFindTime;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Camera _currentCam;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FusionStats _fusionStats;

	[Token(Token = "0x17000125")]
	private Camera MainCamera
	{
		[Token(Token = "0x6000869")]
		[Address(RVA = "0x287D83C", Offset = "0x287D83C", VA = "0x287D83C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000868")]
		[Address(RVA = "0x287D7E8", Offset = "0x287D7E8", VA = "0x287D7E8")]
		set
		{
		}
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x287D754", Offset = "0x287D754", VA = "0x287D754")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x287D7B0", Offset = "0x287D7B0", VA = "0x287D7B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x287D7B4", Offset = "0x287D7B4", VA = "0x287D7B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x287D8CC", Offset = "0x287D8CC", VA = "0x287D8CC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x2878684", Offset = "0x2878684", VA = "0x2878684")]
	public void UpdateLookAt()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x287D8D0", Offset = "0x287D8D0", VA = "0x287D8D0")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xE8CFCC", Offset = "0xE8CFCC")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x287D930", Offset = "0x287D930", VA = "0x287D930")]
	public FusionStatsBillboard()
	{
	}
}
[Token(Token = "0x200019F")]
public class FusionStatsMeterBar : FusionGraphBase
{
	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float HoldPeakTime;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float DecayTime;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[InlineHelp]
	public int MeterMax;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[InlineHelp]
	[SerializeField]
	private bool _showUITargets;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7C438", Offset = "0xE7C438")]
	public Text ValueLabel;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7C47C", Offset = "0xE7C47C")]
	public Image Bar;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private double _currentDisplayValue;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private double _currentBarValue;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Color CurrentColor;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private double _lastImportedSampleTickTime;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private double _max;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private double _total;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float _lastPeakSetTime;

	[Token(Token = "0x17000126")]
	protected override Color BackColor
	{
		[Token(Token = "0x600086E")]
		[Address(RVA = "0x287D938", Offset = "0x287D938", VA = "0x287D938", Slot = "9")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x287D9B4", Offset = "0x287D9B4", VA = "0x287D9B4", Slot = "10")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x287DD64", Offset = "0x287DD64", VA = "0x287DD64", Slot = "13")]
	public override void Refresh()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x287E5E0", Offset = "0x287E5E0", VA = "0x287E5E0")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x287E470", Offset = "0x287E470", VA = "0x287E470")]
	public void SetValue(double rawvalue)
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x287E6CC", Offset = "0x287E6CC", VA = "0x287E6CC")]
	private void SetBar(double value)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x287E820", Offset = "0x287E820", VA = "0x287E820", Slot = "12")]
	public override void CalculateLayout()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x287B090", Offset = "0x287B090", VA = "0x287B090")]
	public static FusionStatsMeterBar Create(RectTransform parent, FusionStats fusionStats, Simulation.Statistics.StatSourceTypes statSourceType, int statId, float warnThreshold, float alertThreshold)
	{
		return null;
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x287E980", Offset = "0x287E980", VA = "0x287E980")]
	public void GenerateMeter()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x287ED74", Offset = "0x287ED74", VA = "0x287ED74")]
	public FusionStatsMeterBar()
	{
	}
}
[Token(Token = "0x20001A0")]
public class FusionStatsObjectIds : Fusion.Behaviour, IFusionStatsView
{
	[Token(Token = "0x400081A")]
	protected const int PAD = 10;

	[Token(Token = "0x400081B")]
	protected const int MARGIN = 6;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Text _inputValueText;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Text _stateValueText;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private Text _objectIdLabel;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[HideInInspector]
	private Image _stateAuthBackImage;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private Image _inputAuthBackImage;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FusionStats _fusionStats;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color _noneAuthColor;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Color _inputAuthColor;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Color _stateAuthColor;

	[Token(Token = "0x4000825")]
	private const float LABEL_DIVIDING_POINT = 0.7f;

	[Token(Token = "0x4000826")]
	private const float TEXT_PAD = 4f;

	[Token(Token = "0x4000827")]
	private const float TEXT_PAD_HORIZ = 6f;

	[Token(Token = "0x4000828")]
	private const int MAX_TAG_FONT_SIZE = 18;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _previousHasInputAuth;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _previousHasStateAuth;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _previousInputAuthValue;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _previousStateAuthValue;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private uint _previousObjectIdValue;

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x287ED90", Offset = "0x287ED90", VA = "0x287ED90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x287EDEC", Offset = "0x287EDEC", VA = "0x287EDEC", Slot = "4")]
	private void Fusion.StatsInternal.IFusionStatsView.Initialize()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x287AED0", Offset = "0x287AED0", VA = "0x287AED0")]
	public static RectTransform Create(RectTransform parent, FusionStats fusionStats)
	{
		return null;
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x287EDF0", Offset = "0x287EDF0", VA = "0x287EDF0")]
	public void Generate()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x287F0D4", Offset = "0x287F0D4", VA = "0x287F0D4")]
	private RectTransform AddAuthorityPanel(RectTransform parent, string label, ref Text valueText, ref Image backImage)
	{
		return null;
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x287F4AC", Offset = "0x287F4AC", VA = "0x287F4AC", Slot = "5")]
	private void Fusion.StatsInternal.IFusionStatsView.CalculateLayout()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x287F4B0", Offset = "0x287F4B0", VA = "0x287F4B0", Slot = "6")]
	private void Fusion.StatsInternal.IFusionStatsView.Refresh()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x287F904", Offset = "0x287F904", VA = "0x287F904")]
	public FusionStatsObjectIds()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000881")]
	[Address(RVA = "0x287FA10", Offset = "0x287FA10", VA = "0x287FA10", Slot = "7")]
	private bool Fusion.StatsInternal.IFusionStatsView.get_isActiveAndEnabled()
	{
		return default(bool);
	}

	[SpecialName]
	[Token(Token = "0x6000882")]
	[Address(RVA = "0x287FA18", Offset = "0x287FA18", VA = "0x287FA18", Slot = "8")]
	private Transform Fusion.StatsInternal.IFusionStatsView.get_transform()
	{
		return null;
	}
}
[Token(Token = "0x20001A1")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xE674F4", Offset = "0xE674F4")]
[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE674F4", Offset = "0xE674F4")]
public class PlayerAOIPrototype : NetworkBehaviour
{
	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[InlineHelp]
	[SerializeField]
	[MultiPropertyDrawersFix]
	protected bool DrawAreaOfInterestRadius;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[InlineHelp]
	public float Radius;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Changed<PlayerAOIPrototype> $IL2CPP_CHANGED;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static ChangedDelegate<PlayerAOIPrototype> $IL2CPP_CHANGED_DELEGATE;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static NetworkBehaviourCallbacks<PlayerAOIPrototype> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x1081828", Offset = "0x1081828", VA = "0x1081828", Slot = "8")]
	public override void FixedUpdateNetwork()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x1081940", Offset = "0x1081940", VA = "0x1081940")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x10819EC", Offset = "0x10819EC", VA = "0x10819EC")]
	public PlayerAOIPrototype()
	{
	}
}
[Token(Token = "0x20001A2")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xE6753C", Offset = "0xE6753C")]
[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE6753C", Offset = "0xE6753C")]
public class ControllerPrototype : NetworkBehaviour
{
	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected NetworkCharacterControllerPrototype _ncc;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected NetworkRigidbody _nrb;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected NetworkRigidbody2D _nrb2d;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected NetworkTransform _nt;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xE7C630", Offset = "0xE7C630")]
	private Vector3 _MovementDirection;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool TransformLocal;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7C684", Offset = "0xE7C684")]
	public float Speed;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Changed<ControllerPrototype> $IL2CPP_CHANGED;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static ChangedDelegate<ControllerPrototype> $IL2CPP_CHANGED_DELEGATE;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static NetworkBehaviourCallbacks<ControllerPrototype> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

	[Token(Token = "0x17000127")]
	[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xE9A6FC", Offset = "0xE9A6FC")]
	[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xE9A6FC", Offset = "0xE9A6FC")]
	public Vector3 MovementDirection
	{
		[Token(Token = "0x6000886")]
		[Address(RVA = "0xFF9080", Offset = "0xFF9080", VA = "0xFF9080")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000887")]
		[Address(RVA = "0xFF9108", Offset = "0xFF9108", VA = "0xFF9108")]
		set
		{
		}
	}

	[Token(Token = "0x17000128")]
	private bool ShowSpeed
	{
		[Token(Token = "0x6000888")]
		[Address(RVA = "0xFF9218", Offset = "0xFF9218", VA = "0xFF9218")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xFF92C4", Offset = "0xFF92C4", VA = "0xFF92C4")]
	public void Awake()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xFF94A0", Offset = "0xFF94A0", VA = "0xFF94A0", Slot = "16")]
	public override void Spawned()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xFF92C8", Offset = "0xFF92C8", VA = "0xFF92C8")]
	private void CacheComponents()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xFF94A4", Offset = "0xFF94A4", VA = "0xFF94A4", Slot = "8")]
	public override void FixedUpdateNetwork()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xFF9974", Offset = "0xFF9974", VA = "0xFF9974")]
	public ControllerPrototype()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xFF9984", Offset = "0xFF9984", VA = "0xFF9984", Slot = "13")]
	public override void CopyBackingFieldsToState(bool P_0)
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xFF9990", Offset = "0xFF9990", VA = "0xFF9990", Slot = "14")]
	public override void CopyStateToBackingFields()
	{
	}
}
[Token(Token = "0x20001A3")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xE67584", Offset = "0xE67584")]
public class InputBehaviourPrototype : Fusion.Behaviour, INetworkRunnerCallbacks
{
	[Token(Token = "0x6000890")]
	[Address(RVA = "0x10DD894", Offset = "0x10DD894", VA = "0x10DD894", Slot = "6")]
	public void OnInput(NetworkRunner runner, NetworkInput input)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x10DDAA4", Offset = "0x10DDAA4", VA = "0x10DDAA4", Slot = "7")]
	public void OnInputMissing(NetworkRunner runner, PlayerRef player, NetworkInput input)
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x10DDAA8", Offset = "0x10DDAA8", VA = "0x10DDAA8", Slot = "9")]
	public void OnConnectedToServer(NetworkRunner runner)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x10DDAAC", Offset = "0x10DDAAC", VA = "0x10DDAAC", Slot = "12")]
	public void OnConnectFailed(NetworkRunner runner, NetAddress remoteAddress, NetConnectFailedReason reason)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x10DDAB0", Offset = "0x10DDAB0", VA = "0x10DDAB0", Slot = "11")]
	public void OnConnectRequest(NetworkRunner runner, NetworkRunnerCallbackArgs.ConnectRequest request, byte[] token)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x10DDAB4", Offset = "0x10DDAB4", VA = "0x10DDAB4", Slot = "10")]
	public void OnDisconnectedFromServer(NetworkRunner runner)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x10DDAB8", Offset = "0x10DDAB8", VA = "0x10DDAB8", Slot = "4")]
	public void OnPlayerJoined(NetworkRunner runner, PlayerRef player)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x10DDABC", Offset = "0x10DDABC", VA = "0x10DDABC", Slot = "5")]
	public void OnPlayerLeft(NetworkRunner runner, PlayerRef player)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x10DDAC0", Offset = "0x10DDAC0", VA = "0x10DDAC0", Slot = "13")]
	public void OnUserSimulationMessage(NetworkRunner runner, SimulationMessagePtr message)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x10DDAC4", Offset = "0x10DDAC4", VA = "0x10DDAC4", Slot = "8")]
	public void OnShutdown(NetworkRunner runner, ShutdownReason shutdownReason)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x10DDAC8", Offset = "0x10DDAC8", VA = "0x10DDAC8", Slot = "14")]
	public void OnSessionListUpdated(NetworkRunner runner, List<SessionInfo> sessionList)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x10DDACC", Offset = "0x10DDACC", VA = "0x10DDACC", Slot = "17")]
	public void OnReliableDataReceived(NetworkRunner runner, PlayerRef player, ArraySegment<byte> data)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x10DDAD0", Offset = "0x10DDAD0", VA = "0x10DDAD0", Slot = "18")]
	public void OnSceneLoadDone(NetworkRunner runner)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x10DDAD4", Offset = "0x10DDAD4", VA = "0x10DDAD4", Slot = "19")]
	public void OnSceneLoadStart(NetworkRunner runner)
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x10DDAD8", Offset = "0x10DDAD8", VA = "0x10DDAD8", Slot = "15")]
	public void OnCustomAuthenticationResponse(NetworkRunner runner, Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x10DDADC", Offset = "0x10DDADC", VA = "0x10DDADC", Slot = "16")]
	public void OnHostMigration(NetworkRunner runner, HostMigrationToken hostMigrationToken)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x10DDAE0", Offset = "0x10DDAE0", VA = "0x10DDAE0")]
	public InputBehaviourPrototype()
	{
	}
}
[StructLayout(LayoutKind.Explicit)]
[Token(Token = "0x20001A4")]
[AttributeAttribute(Name = "NetworkInputWeavedAttribute", RVA = "0xE675B8", Offset = "0xE675B8")]
public struct NetworkInputPrototype : INetworkInput
{
	[Token(Token = "0x400083D")]
	public const int BUTTON_USE = 0;

	[Token(Token = "0x400083E")]
	public const int BUTTON_FIRE = 1;

	[Token(Token = "0x400083F")]
	public const int BUTTON_FIRE_ALT = 2;

	[Token(Token = "0x4000840")]
	public const int BUTTON_FORWARD = 3;

	[Token(Token = "0x4000841")]
	public const int BUTTON_BACKWARD = 4;

	[Token(Token = "0x4000842")]
	public const int BUTTON_LEFT = 5;

	[Token(Token = "0x4000843")]
	public const int BUTTON_RIGHT = 6;

	[Token(Token = "0x4000844")]
	public const int BUTTON_JUMP = 7;

	[Token(Token = "0x4000845")]
	public const int BUTTON_CROUCH = 8;

	[Token(Token = "0x4000846")]
	public const int BUTTON_WALK = 9;

	[Token(Token = "0x4000847")]
	public const int BUTTON_ACTION1 = 10;

	[Token(Token = "0x4000848")]
	public const int BUTTON_ACTION2 = 11;

	[Token(Token = "0x4000849")]
	public const int BUTTON_ACTION3 = 12;

	[Token(Token = "0x400084A")]
	public const int BUTTON_ACTION4 = 14;

	[Token(Token = "0x400084B")]
	public const int BUTTON_RELOAD = 15;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public NetworkButtons Buttons;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public byte Weapon;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Angle Yaw;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Angle Pitch;

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x1069D74", Offset = "0x1069D74", VA = "0x1069D74")]
	public bool IsUp(int button)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x1069D94", Offset = "0x1069D94", VA = "0x1069D94")]
	public bool IsDown(int button)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001A5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE675CC", Offset = "0xE675CC")]
[AttributeAttribute(Name = "OrderBeforeAttribute", RVA = "0xE675CC", Offset = "0xE675CC")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE675CC", Offset = "0xE675CC")]
public class NetworkCharacterControllerPrototype : NetworkTransform
{
	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7C6C8", Offset = "0xE7C6C8")]
	public float gravity;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float jumpImpulse;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float acceleration;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float braking;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float maxSpeed;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float rotationSpeed;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xE7C700", Offset = "0xE7C700")]
	private bool _IsGrounded;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xE7C764", Offset = "0xE7C764")]
	private Vector3 _Velocity;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7C7C8", Offset = "0xE7C7C8")]
	private CharacterController <Controller>k__BackingField;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Changed<NetworkCharacterControllerPrototype> $IL2CPP_CHANGED;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static ChangedDelegate<NetworkCharacterControllerPrototype> $IL2CPP_CHANGED_DELEGATE;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static NetworkBehaviourCallbacks<NetworkCharacterControllerPrototype> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

	[Token(Token = "0x17000129")]
	[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xE9A73C", Offset = "0xE9A73C")]
	[HideInInspector]
	[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xE9A73C", Offset = "0xE9A73C")]
	public bool IsGrounded
	{
		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x114C344", Offset = "0x114C344", VA = "0x114C344")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x114C3B0", Offset = "0x114C3B0", VA = "0x114C3B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700012A")]
	[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xE9A78C", Offset = "0xE9A78C")]
	[HideInInspector]
	[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xE9A78C", Offset = "0xE9A78C")]
	public Vector3 Velocity
	{
		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x114C418", Offset = "0x114C418", VA = "0x114C418")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x114C4A0", Offset = "0x114C4A0", VA = "0x114C4A0")]
		set
		{
		}
	}

	[Token(Token = "0x1700012B")]
	protected override Vector3 DefaultTeleportInterpolationVelocity
	{
		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x114C5B0", Offset = "0x114C5B0", VA = "0x114C5B0", Slot = "50")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700012C")]
	protected override Vector3 DefaultTeleportInterpolationAngularVelocity
	{
		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x114C5B4", Offset = "0x114C5B4", VA = "0x114C5B4", Slot = "51")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700012D")]
	public CharacterController Controller
	{
		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x114C5C4", Offset = "0x114C5C4", VA = "0x114C5C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8CFE0", Offset = "0xE8CFE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x114C5CC", Offset = "0x114C5CC", VA = "0x114C5CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8CFF0", Offset = "0xE8CFF0")]
		private set
		{
		}
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x114C5DC", Offset = "0x114C5DC", VA = "0x114C5DC", Slot = "26")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x114C6B4", Offset = "0x114C6B4", VA = "0x114C6B4", Slot = "16")]
	public override void Spawned()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x114C604", Offset = "0x114C604", VA = "0x114C604")]
	private void CacheController()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x114C6DC", Offset = "0x114C6DC", VA = "0x114C6DC", Slot = "33")]
	protected override void CopyFromBufferToEngine()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x114C7D8", Offset = "0x114C7D8", VA = "0x114C7D8", Slot = "57")]
	public virtual void Jump(bool ignoreGrounded = false, [Optional] float? overrideImpulse)
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x114C874", Offset = "0x114C874", VA = "0x114C874", Slot = "58")]
	public virtual void Move(Vector3 direction)
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x114CB4C", Offset = "0x114CB4C", VA = "0x114CB4C")]
	public NetworkCharacterControllerPrototype()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x114CB74", Offset = "0x114CB74", VA = "0x114CB74", Slot = "13")]
	public override void CopyBackingFieldsToState(bool P_0)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x114CBB8", Offset = "0x114CBB8", VA = "0x114CBB8", Slot = "14")]
	public override void CopyStateToBackingFields()
	{
	}
}
[Token(Token = "0x20001A6")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE676B8", Offset = "0xE676B8")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xE676B8", Offset = "0xE676B8")]
public class NetworkDebugStart : Fusion.Behaviour
{
	[Token(Token = "0x20001A7")]
	public enum StartModes
	{
		[Token(Token = "0x400086B")]
		UserInterface,
		[Token(Token = "0x400086C")]
		Automatic,
		[Token(Token = "0x400086D")]
		Manual
	}

	[Token(Token = "0x20001A8")]
	public enum Stage
	{
		[Token(Token = "0x400086F")]
		Disconnected,
		[Token(Token = "0x4000870")]
		StartingUp,
		[Token(Token = "0x4000871")]
		UnloadOriginalScene,
		[Token(Token = "0x4000872")]
		ConnectingServer,
		[Token(Token = "0x4000873")]
		ConnectingClients,
		[Token(Token = "0x4000874")]
		AllConnected
	}

	[Serializable]
	[Token(Token = "0x20001A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67724", Offset = "0xE67724")]
	private sealed class <>c
	{
		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<NetworkRunner> <>9__54_0;

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x32BFC6C", Offset = "0x32BFC6C", VA = "0x32BFC6C")]
		public <>c()
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x32BFC74", Offset = "0x32BFC74", VA = "0x32BFC74")]
		internal void <StartWithClients>b__54_0(NetworkRunner runner)
		{
		}
	}

	[Token(Token = "0x20001AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67734", Offset = "0xE67734")]
	private sealed class <StartWithClients>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkDebugStart <>4__this;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameMode serverMode;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int clientCount;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SceneRef sceneRef;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <includesServerStart>5__2;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private System.Threading.Tasks.Task <serverTask>5__3;

		[Token(Token = "0x17000137")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008DE")]
			[Address(RVA = "0x32C0968", Offset = "0x32C0968", VA = "0x32C0968", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000138")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008E0")]
			[Address(RVA = "0x32C09B0", Offset = "0x32C09B0", VA = "0x32C09B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x32BFF98", Offset = "0x32BFF98", VA = "0x32BFF98")]
		[DebuggerHidden]
		public <StartWithClients>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x32BFFC4", Offset = "0x32BFFC4", VA = "0x32BFFC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x32BFFC8", Offset = "0x32BFFC8", VA = "0x32BFFC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x32C0970", Offset = "0x32C0970", VA = "0x32C0970", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67744", Offset = "0xE67744")]
	private sealed class <StartClients>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkDebugStart <>4__this;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameMode serverMode;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public SceneRef sceneRef;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int clientCount;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<System.Threading.Tasks.Task> <clientTasks>5__2;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private System.Threading.Tasks.Task <clientsStartTask>5__3;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__4;

		[Token(Token = "0x17000139")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0x32BFF48", Offset = "0x32BFF48", VA = "0x32BFF48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008E6")]
			[Address(RVA = "0x32BFF90", Offset = "0x32BFF90", VA = "0x32BFF90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x32BFC78", Offset = "0x32BFC78", VA = "0x32BFC78")]
		[DebuggerHidden]
		public <StartClients>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x32BFCA4", Offset = "0x32BFCA4", VA = "0x32BFCA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x32BFCA8", Offset = "0x32BFCA8", VA = "0x32BFCA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x32BFF50", Offset = "0x32BFF50", VA = "0x32BFF50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[InlineHelp]
	[AttributeAttribute(Name = "WarnIfAttribute", RVA = "0xE7C7D8", Offset = "0xE7C7D8")]
	[MultiPropertyDrawersFix]
	public NetworkRunner RunnerPrefab;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[InlineHelp]
	[MultiPropertyDrawersFix]
	[AttributeAttribute(Name = "WarnIfAttribute", RVA = "0xE7C854", Offset = "0xE7C854")]
	public StartModes StartMode;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[InlineHelp]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7C8D4", Offset = "0xE7C8D4")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7C8D4", Offset = "0xE7C8D4")]
	public GameMode AutoStartAs;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[InlineHelp]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7C954", Offset = "0xE7C954")]
	public bool AutoHideGUI;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[InlineHelp]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7C9B0", Offset = "0xE7C9B0")]
	public int AutoClients;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[InlineHelp]
	public ushort ServerPort;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[InlineHelp]
	public string DefaultRoomName;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[InlineHelp]
	public bool AlwaysShowStats;

	[NonSerialized]
	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NetworkRunner _server;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[InlineHelp]
	[ScenePath]
	[MultiPropertyDrawersFix]
	public string InitialScenePath;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string _initialScenePath;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[InlineHelp]
	[MultiPropertyDrawersFix]
	[AttributeAttribute(Name = "EditorDisabledAttribute", RVA = "0xE7CA80", Offset = "0xE7CA80")]
	protected Stage _currentStage;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7CADC", Offset = "0xE7CADC")]
	private int <LastCreatedClientIndex>k__BackingField;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7CAEC", Offset = "0xE7CAEC")]
	private GameMode <CurrentServerMode>k__BackingField;

	[Token(Token = "0x1700012E")]
	public Stage CurrentStage
	{
		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x114D33C", Offset = "0x114D33C", VA = "0x114D33C")]
		get
		{
			return default(Stage);
		}
		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x114D344", Offset = "0x114D344", VA = "0x114D344")]
		internal set
		{
		}
	}

	[Token(Token = "0x1700012F")]
	public int LastCreatedClientIndex
	{
		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x114D34C", Offset = "0x114D34C", VA = "0x114D34C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D000", Offset = "0xE8D000")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x114D354", Offset = "0x114D354", VA = "0x114D354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D010", Offset = "0xE8D010")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000130")]
	public GameMode CurrentServerMode
	{
		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x114D35C", Offset = "0x114D35C", VA = "0x114D35C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D020", Offset = "0xE8D020")]
		get
		{
			return default(GameMode);
		}
		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x114D364", Offset = "0x114D364", VA = "0x114D364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D030", Offset = "0xE8D030")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000131")]
	protected bool CanAddClients
	{
		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x114D36C", Offset = "0x114D36C", VA = "0x114D36C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000132")]
	protected bool CanAddSharedClients
	{
		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x114D398", Offset = "0x114D398", VA = "0x114D398")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000133")]
	protected bool IsShutdown
	{
		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x114D3BC", Offset = "0x114D3BC", VA = "0x114D3BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000134")]
	protected bool IsShutdownAndMultiPeer
	{
		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x114D3CC", Offset = "0x114D3CC", VA = "0x114D3CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000135")]
	protected bool UsingMultiPeerMode
	{
		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x114D408", Offset = "0x114D408", VA = "0x114D408")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000136")]
	protected bool ShowAutoClients
	{
		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x114D434", Offset = "0x114D434", VA = "0x114D434")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x114D48C", Offset = "0x114D48C", VA = "0x114D48C", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x114D840", Offset = "0x114D840", VA = "0x114D840")]
	protected bool TryGetSceneRef(out SceneRef sceneRef)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x114D9C4", Offset = "0x114D9C4", VA = "0x114D9C4", Slot = "5")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xE8D040", Offset = "0xE8D040")]
	public virtual void StartSinglePlayer()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x114DA14", Offset = "0x114DA14", VA = "0x114DA14", Slot = "6")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xE8D094", Offset = "0xE8D094")]
	public virtual void StartServer()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x114DA64", Offset = "0x114DA64", VA = "0x114DA64", Slot = "7")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xE8D0E8", Offset = "0xE8D0E8")]
	public virtual void StartHost()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x114DAB4", Offset = "0x114DAB4", VA = "0x114DAB4", Slot = "8")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xE8D13C", Offset = "0xE8D13C")]
	public virtual void StartClient()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x114DAEC", Offset = "0x114DAEC", VA = "0x114DAEC", Slot = "9")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xE8D190", Offset = "0xE8D190")]
	public virtual void StartSharedClient()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x114DB3C", Offset = "0x114DB3C", VA = "0x114DB3C", Slot = "10")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xE8D1E4", Offset = "0xE8D1E4")]
	public virtual void StartAutoClient()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x114DB8C", Offset = "0x114DB8C", VA = "0x114DB8C", Slot = "11")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xE8D238", Offset = "0xE8D238")]
	public virtual void StartServerPlusClients()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x114DB9C", Offset = "0x114DB9C", VA = "0x114DB9C")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xE8D28C", Offset = "0xE8D28C")]
	public void StartHostPlusClients()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x114DC80", Offset = "0x114DC80", VA = "0x114DC80")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xE8D2E0", Offset = "0xE8D2E0")]
	public void Shutdown()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x114DF58", Offset = "0x114DF58", VA = "0x114DF58", Slot = "12")]
	public virtual void StartServerPlusClients(int clientCount)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x114DBA4", Offset = "0x114DBA4", VA = "0x114DBA4")]
	public void StartHostPlusClients(int clientCount)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x114E034", Offset = "0x114E034", VA = "0x114E034")]
	public void StartMultipleClients(int clientCount)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x114E110", Offset = "0x114E110", VA = "0x114E110")]
	public void StartMultipleSharedClients(int clientCount)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x114E1EC", Offset = "0x114E1EC", VA = "0x114E1EC")]
	public void StartMultipleAutoClients(int clientCount)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x114DC84", Offset = "0x114DC84", VA = "0x114DC84")]
	public void ShutdownAll()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x114D928", Offset = "0x114D928", VA = "0x114D928")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8D334", Offset = "0xE8D334")]
	protected IEnumerator StartWithClients(GameMode serverMode, SceneRef sceneRef, int clientCount)
	{
		return null;
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x114E2C8", Offset = "0x114E2C8", VA = "0x114E2C8")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xE8D394", Offset = "0xE8D394")]
	public void AddClient()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x114E554", Offset = "0x114E554", VA = "0x114E554")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xE8D3E4", Offset = "0xE8D3E4")]
	public void AddSharedClient()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x114E304", Offset = "0x114E304", VA = "0x114E304")]
	public System.Threading.Tasks.Task AddClient(GameMode serverMode, SceneRef sceneRef)
	{
		return null;
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x114E590", Offset = "0x114E590", VA = "0x114E590")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8D434", Offset = "0xE8D434")]
	protected IEnumerator StartClients(int clientCount, GameMode serverMode, [Optional] SceneRef sceneRef)
	{
		return null;
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x114E62C", Offset = "0x114E62C", VA = "0x114E62C", Slot = "13")]
	protected virtual System.Threading.Tasks.Task InitializeNetworkRunner(NetworkRunner runner, GameMode gameMode, NetAddress address, SceneRef scene, Action<NetworkRunner> initialized)
	{
		return null;
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x114E8B8", Offset = "0x114E8B8", VA = "0x114E8B8")]
	public NetworkDebugStart()
	{
	}
}
[Token(Token = "0x20001AC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE67754", Offset = "0xE67754")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE67754", Offset = "0xE67754")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xE67754", Offset = "0xE67754")]
public class NetworkDebugStartGUI : Fusion.Behaviour
{
	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[InlineHelp]
	public bool EnableHotkeys;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[InlineHelp]
	public GUISkin BaseSkin;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NetworkDebugStart _networkDebugStart;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _clientCount;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isMultiplePeerMode;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<NetworkDebugStart.Stage, string> _nicifiedStageNames;

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x1064948", Offset = "0x1064948", VA = "0x1064948", Slot = "4")]
	protected virtual void OnValidate()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x106494C", Offset = "0x106494C", VA = "0x106494C")]
	protected void ValidateClientCount()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x1064A18", Offset = "0x1064A18", VA = "0x1064A18")]
	protected int GetClientCount()
	{
		return default(int);
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x1064AFC", Offset = "0x1064AFC", VA = "0x1064AFC", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x1064D3C", Offset = "0x1064D3C", VA = "0x1064D3C", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x1064BB8", Offset = "0x1064BB8", VA = "0x1064BB8")]
	protected NetworkDebugStart EnsureNetworkDebugStartExists()
	{
		return null;
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x1064D78", Offset = "0x1064D78", VA = "0x1064D78")]
	private void Update()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x1065370", Offset = "0x1065370", VA = "0x1065370", Slot = "7")]
	protected virtual void OnGUI()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x1064F14", Offset = "0x1064F14", VA = "0x1064F14")]
	private void StartHostWithClients(NetworkDebugStart nds)
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x1065018", Offset = "0x1065018", VA = "0x1065018")]
	private void StartServerWithClients(NetworkDebugStart nds)
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x1065120", Offset = "0x1065120", VA = "0x1065120")]
	private void StartMultipleClients(NetworkDebugStart nds)
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x1065224", Offset = "0x1065224", VA = "0x1065224")]
	private void StartMultipleAutoClients(NetworkDebugStart nds)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x106526C", Offset = "0x106526C", VA = "0x106526C")]
	private void StartMultipleSharedClients(NetworkDebugStart nds)
	{
	}

	[Token(Token = "0x60008F4")]
	public static Dictionary<T, string> ConvertEnumToNicifiedNameLookup<T>([Optional] string prefix, [Optional] Dictionary<T, string> nonalloc) where T : Enum
	{
		return null;
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x1066320", Offset = "0x1066320", VA = "0x1066320")]
	public NetworkDebugStartGUI()
	{
	}
}
[Token(Token = "0x20001AD")]
[AttributeAttribute(Name = "SimulationBehaviourAttribute", RVA = "0xE677F8", Offset = "0xE677F8")]
public class PlayerSpawnerPrototype : SpawnerPrototype<PlayerSpawnPointPrototype>, IPlayerJoined, IPlayerLeft, ISceneLoadDone
{
	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x1088BDC", Offset = "0x1088BDC", VA = "0x1088BDC", Slot = "15")]
	protected override void RegisterPlayerAndObject(PlayerRef player, NetworkObject playerObject)
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x1088C60", Offset = "0x1088C60", VA = "0x1088C60")]
	public PlayerSpawnerPrototype()
	{
	}
}
[Token(Token = "0x20001AE")]
public interface ISpawnPointManagerPrototype<T> where T : Component, ISpawnPointPrototype
{
	[Token(Token = "0x60008F8")]
	void CollectSpawnPoints(NetworkRunner runner);

	[Token(Token = "0x60008F9")]
	Transform GetNextSpawnPoint(NetworkRunner runner, PlayerRef player, bool skipIfBlocked = true);
}
[Token(Token = "0x20001AF")]
public interface ISpawnPointPrototype
{
}
[Token(Token = "0x20001B0")]
public class PlayerSpawnPointManagerPrototype : SpawnPointManagerPrototype<PlayerSpawnPointPrototype>
{
	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x1088AA4", Offset = "0x1088AA4", VA = "0x1088AA4")]
	public PlayerSpawnPointManagerPrototype()
	{
	}
}
[Token(Token = "0x20001B1")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xE67830", Offset = "0xE67830")]
public class PlayerSpawnPointPrototype : SimulationBehaviour, ISpawnPointPrototype
{
	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x1088AF0", Offset = "0x1088AF0", VA = "0x1088AF0")]
	public PlayerSpawnPointPrototype()
	{
	}
}
[Token(Token = "0x20001B2")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xE67864", Offset = "0xE67864")]
public abstract class SpawnPointManagerPrototype<T> : Fusion.Behaviour, ISpawnPointManagerPrototype<T> where T : Component, ISpawnPointPrototype
{
	[Token(Token = "0x20001B3")]
	public enum SpawnSequence
	{
		[Token(Token = "0x4000896")]
		PlayerId,
		[Token(Token = "0x4000897")]
		RoundRobin,
		[Token(Token = "0x4000898")]
		Random
	}

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[InlineHelp]
	public SpawnSequence Sequence;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[InlineHelp]
	public LayerMask BlockingLayers;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[InlineHelp]
	public float BlockedCheckRadius;

	[NonSerialized]
	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal List<Component> _spawnPoints;

	[NonSerialized]
	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int LastSpawnIndex;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private NetworkRNG rng;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static Collider[] blocked3D;

	[Token(Token = "0x60008FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008FD")]
	public void CollectSpawnPoints(NetworkRunner runner)
	{
	}

	[Token(Token = "0x60008FE")]
	public virtual Transform GetNextSpawnPoint(NetworkRunner runner, PlayerRef player, bool skipIfBlocked = true)
	{
		return null;
	}

	[Token(Token = "0x60008FF")]
	public virtual Transform AllSpawnPointsBlockedFallback()
	{
		return null;
	}

	[Token(Token = "0x6000900")]
	public virtual (int, Component) GetNextUnblocked(int failedIndex)
	{
		return default((int, Component));
	}

	[Token(Token = "0x6000901")]
	public virtual bool IsBlocked(Component spawnPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000902")]
	protected SpawnPointManagerPrototype()
	{
	}
}
[Token(Token = "0x20001B4")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xE67898", Offset = "0xE67898")]
public class SpawnerPrototype<T> : SimulationBehaviour, IPlayerJoined, IPlayerLeft, ISpawned, ISceneLoadDone where T : Component, ISpawnPointPrototype
{
	[Token(Token = "0x20001B5")]
	public enum SpawnMethods
	{
		[Token(Token = "0x400089F")]
		AutoOnNetworkStart,
		[Token(Token = "0x40008A0")]
		ByScriptOnly
	}

	[Token(Token = "0x20001B6")]
	public enum AuthorityOptions
	{
		[Token(Token = "0x40008A2")]
		Auto,
		[Token(Token = "0x40008A3")]
		Server,
		[Token(Token = "0x40008A4")]
		Player
	}

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected Dictionary<PlayerRef, List<NetworkObject>> _spawnedLookup;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[InlineHelp]
	public NetworkObject PlayerPrefab;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[InlineHelp]
	public SpawnMethods SpawnMethod;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[InlineHelp]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xE7CB6C", Offset = "0xE7CB6C")]
	[MultiPropertyDrawersFix]
	public AuthorityOptions StateAuthority;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected ISpawnPointManagerPrototype<T> spawnManager;

	[Token(Token = "0x1700013B")]
	protected bool _AllowClientObjects
	{
		[Token(Token = "0x6000903")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000904")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000905")]
	public void Spawned()
	{
	}

	[Token(Token = "0x6000906")]
	public void SceneLoadDone()
	{
	}

	[Token(Token = "0x6000907")]
	public void PlayerJoined(PlayerRef player)
	{
	}

	[Token(Token = "0x6000908")]
	public void PlayerLeft(PlayerRef player)
	{
	}

	[Token(Token = "0x6000909")]
	private void PlayerJoined(NetworkRunner runner, PlayerRef player)
	{
	}

	[Token(Token = "0x600090A")]
	private void PlayerLeft(NetworkRunner runner, PlayerRef player)
	{
	}

	[Token(Token = "0x600090B")]
	public NetworkObject TrySpawn(NetworkRunner runner, PlayerRef player)
	{
		return null;
	}

	[Token(Token = "0x600090C")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xE8D534", Offset = "0xE8D534")]
	public void TrySpawnAll()
	{
	}

	[Token(Token = "0x600090D")]
	protected virtual void RegisterPlayerAndObject(PlayerRef player, NetworkObject playerObject)
	{
	}

	[Token(Token = "0x600090E")]
	protected void DespawnPlayersObjects(NetworkRunner runner, PlayerRef player)
	{
	}

	[Token(Token = "0x600090F")]
	protected void UnregisterPlayer(PlayerRef player)
	{
	}

	[Token(Token = "0x6000910")]
	public SpawnerPrototype()
	{
	}
}
[Token(Token = "0x20001B7")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE678CC", Offset = "0xE678CC")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xE678CC", Offset = "0xE678CC")]
public class ToggleRunnerProvideInput : Fusion.Behaviour
{
	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ToggleRunnerProvideInput _instance;

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x13524A0", Offset = "0x13524A0", VA = "0x13524A0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x1352608", Offset = "0x1352608", VA = "0x1352608")]
	public void Update()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x1352760", Offset = "0x1352760", VA = "0x1352760")]
	private void ToggleAll(int runnerIndex)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x13528C8", Offset = "0x13528C8", VA = "0x13528C8")]
	public ToggleRunnerProvideInput()
	{
	}
}
[Token(Token = "0x20001B8")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE67938", Offset = "0xE67938")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xE67938", Offset = "0xE67938")]
public class ToggleRunnerVisibility : Fusion.Behaviour
{
	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ToggleRunnerVisibility _instance;

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x13528D0", Offset = "0x13528D0", VA = "0x13528D0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x1352A38", Offset = "0x1352A38", VA = "0x1352A38")]
	public void Update()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x1352BA0", Offset = "0x1352BA0", VA = "0x1352BA0")]
	private void ToggleAll(int runnerIndex)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x1352D08", Offset = "0x1352D08", VA = "0x1352D08")]
	public ToggleRunnerVisibility()
	{
	}
}
[Token(Token = "0x20001B9")]
public static class FusionScalableIMGUI
{
	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GUISkin _scalableSkin;

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x2876A00", Offset = "0x2876A00", VA = "0x2876A00")]
	private static void InitializedGUIStyles(GUISkin baseSkin)
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x2876EA8", Offset = "0x2876EA8", VA = "0x2876EA8")]
	public static GUISkin GetScaledSkin(GUISkin baseSkin, out float height, out float width, out int padding, out int margin, out float boxLeft)
	{
		return null;
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x2876FA8", Offset = "0x2876FA8", VA = "0x2876FA8")]
	public static (float, float, int, int, float) ScaleGuiSkinToScreenHeight()
	{
		return default((float, float, int, int, float));
	}
}
[Token(Token = "0x20001BA")]
public class ParentedObjectStressTestMain : MonoBehaviour
{
	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Object;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 NumObjects;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 Spacing;

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x107CEBC", Offset = "0x107CEBC", VA = "0x107CEBC")]
	public void Start()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x107D0E4", Offset = "0x107D0E4", VA = "0x107D0E4")]
	public ParentedObjectStressTestMain()
	{
	}
}
[Token(Token = "0x20001BB")]
public class JellyfishUFOCamera : MonoBehaviour
{
	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3Spring m_spring;

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x10E45E8", Offset = "0x10E45E8", VA = "0x10E45E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x10E4694", Offset = "0x10E4694", VA = "0x10E4694")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x10E4800", Offset = "0x10E4800", VA = "0x10E4800")]
	public JellyfishUFOCamera()
	{
	}
}
[Token(Token = "0x20001BC")]
public class LengthStiffnessComparison : MonoBehaviour
{
	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Run;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Tilt;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Period;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Rest;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform BonesA;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform BonesB;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_timer;

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x1014E18", Offset = "0x1014E18", VA = "0x1014E18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x1014E20", Offset = "0x1014E20", VA = "0x1014E20")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x10153E0", Offset = "0x10153E0", VA = "0x10153E0")]
	public LengthStiffnessComparison()
	{
	}
}
[Token(Token = "0x20001BD")]
public class PoseStiffnessComparison : MonoBehaviour
{
	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Run;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Tilt;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Period;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Rest;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform BonesA;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform BonesB;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_yA;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_yB;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_timer;

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x1089408", Offset = "0x1089408", VA = "0x1089408")]
	private void Start()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x1089454", Offset = "0x1089454", VA = "0x1089454")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x1089A88", Offset = "0x1089A88", VA = "0x1089A88")]
	public PoseStiffnessComparison()
	{
	}
}
[Token(Token = "0x20001BE")]
public class SquashAndStretchComparison : MonoBehaviour
{
	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Run;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Period;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Rest;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform BonesA;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform BonesB;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_timer;

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x32E2738", Offset = "0x32E2738", VA = "0x32E2738")]
	private void Start()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x32E2740", Offset = "0x32E2740", VA = "0x32E2740")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x32E2CB8", Offset = "0x32E2CB8", VA = "0x32E2CB8")]
	public SquashAndStretchComparison()
	{
	}
}
[Token(Token = "0x20001BF")]
public class ColliderSpinner : MonoBehaviour
{
	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 m_targetOffset;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3Spring m_spring;

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x120B2FC", Offset = "0x120B2FC", VA = "0x120B2FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x120B3FC", Offset = "0x120B3FC", VA = "0x120B3FC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x120B49C", Offset = "0x120B49C", VA = "0x120B49C")]
	public ColliderSpinner()
	{
	}
}
[Token(Token = "0x20001C0")]
public class UFOCamera : MonoBehaviour
{
	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 m_targetOffset;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3Spring m_spring;

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x13547D8", Offset = "0x13547D8", VA = "0x13547D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x135490C", Offset = "0x135490C", VA = "0x135490C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x1354B0C", Offset = "0x1354B0C", VA = "0x1354B0C")]
	public UFOCamera()
	{
	}
}
[Token(Token = "0x20001C1")]
public class UFOEffector : MonoBehaviour
{
	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_radius;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_moveDistance;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_rotateAngle;

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x1355ABC", Offset = "0x1355ABC", VA = "0x1355ABC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x1355B2C", Offset = "0x1355B2C", VA = "0x1355B2C")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x1355D9C", Offset = "0x1355D9C", VA = "0x1355D9C")]
	public UFOEffector()
	{
	}
}
[Token(Token = "0x20001C2")]
public class CollectibleCoin : MonoBehaviour
{
	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RespawnTime;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool m_taken;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 m_respawnPosition;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_respawnTimerStartTime;

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x120AED0", Offset = "0x120AED0", VA = "0x120AED0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x120B2F4", Offset = "0x120B2F4", VA = "0x120B2F4")]
	public CollectibleCoin()
	{
	}
}
[Token(Token = "0x20001C3")]
public class PlatformerCollectiblesMain : MonoBehaviour
{
	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Coin;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float CoinGridCount;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float CoinGridSize;

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x10803BC", Offset = "0x10803BC", VA = "0x10803BC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x108051C", Offset = "0x108051C", VA = "0x108051C")]
	public PlatformerCollectiblesMain()
	{
	}
}
[Token(Token = "0x20001C4")]
public class ImplosionExplosionMain : MonoBehaviour
{
	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoingReactorField ReactorField;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Diamond;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int NumDiamonds;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int kNumInstancedBushesPerDrawCall;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Matrix4x4[][] m_aaInstancedDiamondMatrix;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock m_diamondMaterialProps;

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x10DC518", Offset = "0x10DC518", VA = "0x10DC518")]
	public void Start()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x10DC85C", Offset = "0x10DC85C", VA = "0x10DC85C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x10DCA10", Offset = "0x10DCA10", VA = "0x10DCA10")]
	public ImplosionExplosionMain()
	{
	}
}
[Token(Token = "0x20001C5")]
public class OrbitCamera : MonoBehaviour
{
	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float kOrbitSpeed;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_phase;

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x107C160", Offset = "0x107C160", VA = "0x107C160")]
	public void Start()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x107C164", Offset = "0x107C164", VA = "0x107C164")]
	public void Update()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x107C2FC", Offset = "0x107C2FC", VA = "0x107C2FC")]
	public OrbitCamera()
	{
	}
}
[Token(Token = "0x20001C6")]
public class ScaleSpring : MonoBehaviour
{
	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float kInterval;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float kSmallScale;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float kLargeScale;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly float kMoveDistance;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3Spring m_spring;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_targetScale;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_lastTickTime;

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x32D2C2C", Offset = "0x32D2C2C", VA = "0x32D2C2C")]
	public void Tick()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x32D2D88", Offset = "0x32D2D88", VA = "0x32D2D88")]
	public void Start()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x32D2DD4", Offset = "0x32D2DD4", VA = "0x32D2DD4")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x32D2F38", Offset = "0x32D2F38", VA = "0x32D2F38")]
	public ScaleSpring()
	{
	}
}
[Token(Token = "0x20001C7")]
public class LiquidMain : MonoBehaviour
{
	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material PlaneMaterial;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BoingReactorField ReactorField;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Effector;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float kPlaneMeshCellSize;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int kNumInstancedPlaneCellPerDrawCall;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int kNumMovingEffectors;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly float kMovingEffectorPhaseSpeed;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int kNumPlaneCells;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly int kPlaneMeshResolution;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh m_planeMesh;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Matrix4x4[][] m_aaInstancedPlaneCellMatrix;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject[] m_aMovingEffector;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] m_aMovingEffectorPhase;

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x1015490", Offset = "0x1015490", VA = "0x1015490")]
	private void ResetEffector(GameObject obj)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x101558C", Offset = "0x101558C", VA = "0x101558C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x1015DEC", Offset = "0x1015DEC", VA = "0x1015DEC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x1016174", Offset = "0x1016174", VA = "0x1016174")]
	public LiquidMain()
	{
	}
}
[Token(Token = "0x20001C8")]
public class CurveBall : MonoBehaviour
{
	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Interval;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_speedX;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_speedZ;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_timer;

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xFFCDBC", Offset = "0xFFCDBC", VA = "0xFFCDBC")]
	public void Reset()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xFFCEB4", Offset = "0xFFCEB4", VA = "0xFFCEB4")]
	public void Start()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xFFCEB8", Offset = "0xFFCEB8", VA = "0xFFCEB8")]
	public void Update()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xFFCF74", Offset = "0xFFCF74", VA = "0xFFCF74")]
	public CurveBall()
	{
	}
}
[Token(Token = "0x20001C9")]
public class BushFieldReactorFieldMain : MonoBehaviour
{
	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Bush;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Blossom;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Sphere;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BoingReactorField ReactorField;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int NumBushes;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector2 BushScaleRange;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int NumBlossoms;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 BlossomScaleRange;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector2 FieldBounds;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int NumSpheresPerCircle;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int NumCircles;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float MaxCircleRadius;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float CircleSpeed;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<BoingEffector> m_aSphere;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_basePhase;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int kNumInstancedBushesPerDrawCall;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Matrix4x4[][] m_aaInstancedBushMatrix;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MaterialPropertyBlock m_bushMaterialProps;

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x12035D4", Offset = "0x12035D4", VA = "0x12035D4")]
	public void Start()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x1203EAC", Offset = "0x1203EAC", VA = "0x1203EAC")]
	public void Update()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x12041B8", Offset = "0x12041B8", VA = "0x12041B8")]
	public BushFieldReactorFieldMain()
	{
	}
}
[Token(Token = "0x20001CA")]
public class BushFieldReactorMain : MonoBehaviour
{
	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Bush;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Blossom;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Sphere;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int NumBushes;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 BushScaleRange;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int NumBlossoms;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 BlossomScaleRange;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 FieldBounds;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int NumSpheresPerCircle;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int NumCircles;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float MaxCircleRadius;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float CircleSpeed;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<GameObject> m_aSphere;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_basePhase;

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x1204210", Offset = "0x1204210", VA = "0x1204210")]
	public void Start()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x12046C8", Offset = "0x12046C8", VA = "0x12046C8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x1204864", Offset = "0x1204864", VA = "0x1204864")]
	public BushFieldReactorMain()
	{
	}
}
[Token(Token = "0x20001CB")]
public class MousePositionDrag : MonoBehaviour
{
	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_currFrameHasFocus;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool m_prevFrameHasFocus;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 m_prevMousePosition;

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x1142BE8", Offset = "0x1142BE8", VA = "0x1142BE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x1142BF0", Offset = "0x1142BF0", VA = "0x1142BF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x1142CE8", Offset = "0x1142CE8", VA = "0x1142CE8")]
	public MousePositionDrag()
	{
	}
}
[Token(Token = "0x20001CC")]
public class MouseRotationDrag : MonoBehaviour
{
	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_currFrameHasFocus;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool m_prevFrameHasFocus;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 m_prevMousePosition;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_euler;

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x1142CF0", Offset = "0x1142CF0", VA = "0x1142CF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x1142CF8", Offset = "0x1142CF8", VA = "0x1142CF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x1142DFC", Offset = "0x1142DFC", VA = "0x1142DFC")]
	public MouseRotationDrag()
	{
	}
}
[Token(Token = "0x20001CD")]
public class Oscillator : MonoBehaviour
{
	[Token(Token = "0x20001CE")]
	public enum WaveTypeEnum
	{
		[Token(Token = "0x4000922")]
		Sine,
		[Token(Token = "0x4000923")]
		Square,
		[Token(Token = "0x4000924")]
		Triangle
	}

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveTypeEnum WaveType;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 m_initCenter;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool UseCenter;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 Center;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 Radius;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 Frequency;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 Phase;

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x107C358", Offset = "0x107C358", VA = "0x107C358")]
	public void Init(Vector3 center, Vector3 radius, Vector3 frequency, Vector3 startPhase)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x107C388", Offset = "0x107C388", VA = "0x107C388")]
	private float SampleWave(float phase)
	{
		return default(float);
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x107C46C", Offset = "0x107C46C", VA = "0x107C46C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x107C4A8", Offset = "0x107C4A8", VA = "0x107C4A8")]
	public void Update()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x107C5E8", Offset = "0x107C5E8", VA = "0x107C5E8")]
	public Oscillator()
	{
	}
}
[Token(Token = "0x20001CF")]
public class RotationStepper : MonoBehaviour
{
	[Token(Token = "0x20001D0")]
	public enum ModeEnum
	{
		[Token(Token = "0x400092A")]
		Fixed,
		[Token(Token = "0x400092B")]
		Random
	}

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ModeEnum Mode;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7CBD0", Offset = "0xE7CBD0")]
	public float Angle;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Frequency;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_phase;

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x32CBF48", Offset = "0x32CBF48", VA = "0x32CBF48")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x32CBF58", Offset = "0x32CBF58", VA = "0x32CBF58")]
	public void Update()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x32CC064", Offset = "0x32CC064", VA = "0x32CC064")]
	public RotationStepper()
	{
	}
}
[Token(Token = "0x20001D1")]
public class Spinner : MonoBehaviour
{
	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_angle;

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x32E1E0C", Offset = "0x32E1E0C", VA = "0x32E1E0C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x32E1E40", Offset = "0x32E1E40", VA = "0x32E1E40")]
	public void Update()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x32E1EC0", Offset = "0x32E1EC0", VA = "0x32E1EC0")]
	public Spinner()
	{
	}
}
[Token(Token = "0x20001D2")]
public class WASD : MonoBehaviour
{
	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Omega;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 m_velocity;

	[Token(Token = "0x1700013C")]
	public Vector3 Velocity
	{
		[Token(Token = "0x6000965")]
		[Address(RVA = "0x135C200", Offset = "0x135C200", VA = "0x135C200")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x135C20C", Offset = "0x135C20C", VA = "0x135C20C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x135C448", Offset = "0x135C448", VA = "0x135C448")]
	public WASD()
	{
	}
}
namespace Technie.ScenePalette
{
	[Token(Token = "0x20001D3")]
	public enum SectionStyle
	{
		[Token(Token = "0x4000932")]
		Icons,
		[Token(Token = "0x4000933")]
		List,
		[Token(Token = "0x4000934")]
		Panels,
		[Token(Token = "0x4000935")]
		RecentScenes
	}
	[Token(Token = "0x20001D4")]
	public enum IconType
	{
		[Token(Token = "0x4000937")]
		None,
		[Token(Token = "0x4000938")]
		Custom,
		[Token(Token = "0x4000939")]
		Brush,
		[Token(Token = "0x400093A")]
		Buildings,
		[Token(Token = "0x400093B")]
		Camera,
		[Token(Token = "0x400093C")]
		Controller,
		[Token(Token = "0x400093D")]
		Core,
		[Token(Token = "0x400093E")]
		Cube,
		[Token(Token = "0x400093F")]
		Desk,
		[Token(Token = "0x4000940")]
		Screen,
		[Token(Token = "0x4000941")]
		Document,
		[Token(Token = "0x4000942")]
		Folder,
		[Token(Token = "0x4000943")]
		Levels,
		[Token(Token = "0x4000944")]
		Maze,
		[Token(Token = "0x4000945")]
		Play,
		[Token(Token = "0x4000946")]
		Room,
		[Token(Token = "0x4000947")]
		Settings,
		[Token(Token = "0x4000948")]
		Testing,
		[Token(Token = "0x4000949")]
		Tools
	}
	[Serializable]
	[Token(Token = "0x20001D5")]
	public class SceneEntry
	{
		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IconType iconType;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D icon;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Object scene;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string path;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string chapter;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TimeOfDay timeOfDay;

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x32D2FBC", Offset = "0x32D2FBC", VA = "0x32D2FBC")]
		public SceneEntry()
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x32D3050", Offset = "0x32D3050", VA = "0x32D3050")]
		public void SetSingleScene(UnityEngine.Object scene)
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x32D3058", Offset = "0x32D3058", VA = "0x32D3058")]
		public UnityEngine.Object GetScene()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20001D6")]
	public class PaletteSubSection
	{
		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IconType iconType;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D icon;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneEntry[] scenes;

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x107CD54", Offset = "0x107CD54", VA = "0x107CD54")]
		public PaletteSubSection()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D7")]
	public class PaletteSection
	{
		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IconType iconType;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D icon;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SectionStyle style;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PaletteSubSection[] subSections;

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x107CCC8", Offset = "0x107CCC8", VA = "0x107CCC8")]
		public PaletteSection()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE679A4", Offset = "0xE679A4")]
	public class ScenePaletteConfig : ScriptableObject
	{
		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PaletteSection[] sections;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D settingsIcon;

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x32D32B8", Offset = "0x32D32B8", VA = "0x32D32B8")]
		public ScenePaletteConfig()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class ScenePaletteResources : ScriptableObject
	{
		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] builtInIcons;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<IconType, Texture2D> iconLookup;

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x32D3320", Offset = "0x32D3320", VA = "0x32D3320")]
		public static ScenePaletteResources FindGlobalResources()
		{
			return null;
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x32D3328", Offset = "0x32D3328", VA = "0x32D3328")]
		private void PopulateLookupMap()
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x32D3624", Offset = "0x32D3624", VA = "0x32D3624")]
		public Texture2D GetIcon(PaletteSection section)
		{
			return null;
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x32D36F4", Offset = "0x32D36F4", VA = "0x32D36F4")]
		public Texture2D GetIcon(PaletteSubSection subSection)
		{
			return null;
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x32D3714", Offset = "0x32D3714", VA = "0x32D3714")]
		public Texture2D GetIcon(SceneEntry entry)
		{
			return null;
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x32D3644", Offset = "0x32D3644", VA = "0x32D3644")]
		private Texture2D FindIcon(IconType iconType, Texture2D icon)
		{
			return null;
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x32D3734", Offset = "0x32D3734", VA = "0x32D3734")]
		public ScenePaletteResources()
		{
		}
	}
}
namespace FullSerializer
{
	[Token(Token = "0x20001DA")]
	public class fsConverterRegistrar
	{
		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AnimationCurve_DirectConverter Register_AnimationCurve_DirectConverter;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Bounds_DirectConverter Register_Bounds_DirectConverter;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static GUIStyleState_DirectConverter Register_GUIStyleState_DirectConverter;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static GUIStyle_DirectConverter Register_GUIStyle_DirectConverter;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Gradient_DirectConverter Register_Gradient_DirectConverter;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Keyframe_DirectConverter Register_Keyframe_DirectConverter;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static LayerMask_DirectConverter Register_LayerMask_DirectConverter;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static RectOffset_DirectConverter Register_RectOffset_DirectConverter;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Rect_DirectConverter Register_Rect_DirectConverter;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static UnityEvent_Converter Register_UnityEvent_Converter;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static List<Type> Converters;

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x18132B0", Offset = "0x18132B0", VA = "0x18132B0")]
		static fsConverterRegistrar()
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x181358C", Offset = "0x181358C", VA = "0x181358C")]
		public fsConverterRegistrar()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE67A10", Offset = "0xE67A10")]
	public sealed class fsForwardAttribute : Attribute
	{
		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string MemberName;

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x1817D78", Offset = "0x1817D78", VA = "0x1817D78")]
		public fsForwardAttribute(string memberName)
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public static class fsTypeExtensions
	{
		[Token(Token = "0x20001DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67A34", Offset = "0xE67A34")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400096A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool includeNamespace;

			[Token(Token = "0x600097B")]
			[Address(RVA = "0x216E45C", Offset = "0x216E45C", VA = "0x216E45C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600097C")]
			[Address(RVA = "0x216E464", Offset = "0x216E464", VA = "0x216E464")]
			internal string <CSharpName>b__0(Type t)
			{
				return null;
			}
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x169C498", Offset = "0x169C498", VA = "0x169C498")]
		public static string CSharpName(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x169CAE4", Offset = "0x169CAE4", VA = "0x169CAE4")]
		public static string CSharpName(this Type type, bool includeNamespace, bool ensureSafeDeclarationName)
		{
			return null;
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x169C4A0", Offset = "0x169C4A0", VA = "0x169C4A0")]
		public static string CSharpName(this Type type, bool includeNamespace)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DE")]
	public class fsMetaType
	{
		[Token(Token = "0x20001DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67A44", Offset = "0xE67A44")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4000971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MemberInfo member;

			[Token(Token = "0x600098A")]
			[Address(RVA = "0x216D870", Offset = "0x216D870", VA = "0x216D870")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600098B")]
			[Address(RVA = "0x216D878", Offset = "0x216D878", VA = "0x216D878")]
			internal bool <CollectProperties>b__0(Type t)
			{
				return default(bool);
			}

			[Token(Token = "0x600098C")]
			[Address(RVA = "0x216D8F0", Offset = "0x216D8F0", VA = "0x216D8F0")]
			internal bool <CollectProperties>b__1(Type t)
			{
				return default(bool);
			}

			[Token(Token = "0x600098D")]
			[Address(RVA = "0x216D968", Offset = "0x216D968", VA = "0x216D968")]
			internal bool <CollectProperties>b__2(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67A54", Offset = "0xE67A54")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PropertyInfo property;

			[Token(Token = "0x600098E")]
			[Address(RVA = "0x216D9E0", Offset = "0x216D9E0", VA = "0x216D9E0")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x600098F")]
			[Address(RVA = "0x216D9E8", Offset = "0x216D9E8", VA = "0x216D9E8")]
			internal bool <CanSerializeProperty>b__0(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67A64", Offset = "0xE67A64")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FieldInfo field;

			[Token(Token = "0x6000990")]
			[Address(RVA = "0x216DA60", Offset = "0x216DA60", VA = "0x216DA60")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6000991")]
			[Address(RVA = "0x216DA68", Offset = "0x216DA68", VA = "0x216DA68")]
			internal bool <CanSerializeField>b__0(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<fsConfig, Dictionary<Type, fsMetaType>> _configMetaTypes;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type ReflectedType;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _hasEmittedAotData;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7CC70", Offset = "0xE7CC70")]
		private fsMetaProperty[] <Properties>k__BackingField;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool? _hasDefaultConstructorCache;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool _isDefaultConstructorPublic;

		[Token(Token = "0x1700013D")]
		public fsMetaProperty[] Properties
		{
			[Token(Token = "0x6000985")]
			[Address(RVA = "0x1692840", Offset = "0x1692840", VA = "0x1692840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D5A8", Offset = "0xE8D5A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000986")]
			[Address(RVA = "0x1692848", Offset = "0x1692848", VA = "0x1692848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D5B8", Offset = "0xE8D5B8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public bool HasDefaultConstructor
		{
			[Token(Token = "0x6000987")]
			[Address(RVA = "0x1692624", Offset = "0x1692624", VA = "0x1692624")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x16914BC", Offset = "0x16914BC", VA = "0x16914BC")]
		public static fsMetaType Get(fsConfig config, Type type)
		{
			return null;
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x1691794", Offset = "0x1691794", VA = "0x1691794")]
		public static void ClearCache()
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x169168C", Offset = "0x169168C", VA = "0x169168C")]
		private fsMetaType(fsConfig config, Type reflectedType)
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x1691838", Offset = "0x1691838", VA = "0x1691838")]
		private static void CollectProperties(fsConfig config, List<fsMetaProperty> properties, Type reflectedType)
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x16923CC", Offset = "0x16923CC", VA = "0x16923CC")]
		private static bool IsAutoProperty(PropertyInfo property, MemberInfo[] members)
		{
			return default(bool);
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x1691E5C", Offset = "0x1691E5C", VA = "0x1691E5C")]
		private static bool CanSerializeProperty(fsConfig config, PropertyInfo property, MemberInfo[] members, bool annotationFreeValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x1692180", Offset = "0x1692180", VA = "0x1692180")]
		private static bool CanSerializeField(fsConfig config, FieldInfo field, bool annotationFreeValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x169251C", Offset = "0x169251C", VA = "0x169251C")]
		public bool EmitAotData()
		{
			return default(bool);
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x16929F0", Offset = "0x16929F0", VA = "0x16929F0")]
		public object CreateInstance()
		{
			return null;
		}
	}
	[Token(Token = "0x20001E2")]
	public class fsAotCompilationManager
	{
		[Token(Token = "0x20001E3")]
		private struct AotCompilation
		{
			[Token(Token = "0x4000976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Type Type;

			[Token(Token = "0x4000977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public fsMetaProperty[] Members;

			[Token(Token = "0x4000978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool IsConstructorPublic;
		}

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Type, string> _computedAotCompilations;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<AotCompilation> _uncomputedAotCompilations;

		[Token(Token = "0x1700013F")]
		public static Dictionary<Type, string> AvailableAotCompilations
		{
			[Token(Token = "0x6000992")]
			[Address(RVA = "0x18100BC", Offset = "0x18100BC", VA = "0x18100BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x1811240", Offset = "0x1811240", VA = "0x1811240")]
		public static bool TryToPerformAotCompilation(fsConfig config, Type type, out string aotCompiledClassInCSharp)
		{
			return default(bool);
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x1811350", Offset = "0x1811350", VA = "0x1811350")]
		public static void AddAotCompilation(Type type, fsMetaProperty[] members, bool isConstructorPublic)
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x1811460", Offset = "0x1811460", VA = "0x1811460")]
		private static string GetConverterString(fsMetaProperty member)
		{
			return null;
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x181024C", Offset = "0x181024C", VA = "0x181024C")]
		private static string GenerateDirectConverterForTypeInCSharp(Type type, fsMetaProperty[] members, bool isConstructorPublic)
		{
			return null;
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x1811534", Offset = "0x1811534", VA = "0x1811534")]
		public fsAotCompilationManager()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public abstract class fsBaseConverter
	{
		[Serializable]
		[Token(Token = "0x20001E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67A74", Offset = "0xE67A74")]
		private sealed class <>c
		{
			[Token(Token = "0x400097A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400097B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<fsDataType, string> <>9__6_0;

			[Token(Token = "0x60009A6")]
			[Address(RVA = "0x216D6F0", Offset = "0x216D6F0", VA = "0x216D6F0")]
			public <>c()
			{
			}

			[Token(Token = "0x60009A7")]
			[Address(RVA = "0x216D6F8", Offset = "0x216D6F8", VA = "0x216D6F8")]
			internal string <FailExpectedType>b__6_0(fsDataType t)
			{
				return null;
			}
		}

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public fsSerializer Serializer;

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x1812174", Offset = "0x1812174", VA = "0x1812174", Slot = "4")]
		public virtual object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x18123A4", Offset = "0x18123A4", VA = "0x18123A4", Slot = "5")]
		public virtual bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x18124C8", Offset = "0x18124C8", VA = "0x18124C8", Slot = "6")]
		public virtual bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x600099C")]
		public abstract fsResult TrySerialize(object instance, out fsData serialized, Type storageType);

		[Token(Token = "0x600099D")]
		public abstract fsResult TryDeserialize(fsData data, ref object instance, Type storageType);

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x1812548", Offset = "0x1812548", VA = "0x1812548")]
		protected fsResult FailExpectedType(fsData data, params fsDataType[] types)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x1811D34", Offset = "0x1811D34", VA = "0x1811D34")]
		protected fsResult CheckType(fsData data, fsDataType type)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x1812B58", Offset = "0x1812B58", VA = "0x1812B58")]
		protected fsResult CheckKey(fsData data, string key, out fsData subitem)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x1812BF0", Offset = "0x1812BF0", VA = "0x1812BF0")]
		protected fsResult CheckKey(Dictionary<string, fsData> data, string key, out fsData subitem)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60009A2")]
		protected fsResult SerializeMember<T>(Dictionary<string, fsData> data, Type overrideConverterType, string name, T value)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60009A3")]
		protected fsResult DeserializeMember<T>(Dictionary<string, fsData> data, Type overrideConverterType, string name, out T value)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x1812E98", Offset = "0x1812E98", VA = "0x1812E98")]
		protected fsBaseConverter()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public static class fsGlobalConfig
	{
		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsCaseSensitive;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool AllowInternalExceptions;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string InternalFieldPrefix;
	}
	[Token(Token = "0x20001E7")]
	public class fsConfig
	{
		[Serializable]
		[Token(Token = "0x20001E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67A84", Offset = "0xE67A84")]
		private sealed class <>c
		{
			[Token(Token = "0x4000989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400098A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, MemberInfo, string> <>9__10_0;

			[Token(Token = "0x60009AB")]
			[Address(RVA = "0x216D7DC", Offset = "0x216D7DC", VA = "0x216D7DC")]
			public <>c()
			{
			}

			[Token(Token = "0x60009AC")]
			[Address(RVA = "0x216D7E4", Offset = "0x216D7E4", VA = "0x216D7E4")]
			internal string <.ctor>b__10_0(string name, MemberInfo info)
			{
				return null;
			}
		}

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type[] SerializeAttributes;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type[] IgnoreSerializeAttributes;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public fsMemberSerialization DefaultMemberSerialization;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Func<string, MemberInfo, string> GetJsonNameFromMemberName;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool EnablePropertySerialization;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool SerializeNonAutoProperties;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool SerializeNonPublicSetProperties;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string CustomDateTimeFormatString;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool Serialize64BitIntegerAsString;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool SerializeEnumsAsInteger;

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x1812EA0", Offset = "0x1812EA0", VA = "0x1812EA0")]
		public fsConfig()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public sealed class fsContext
	{
		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<Type, object> _contextObjects;

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x18131D8", Offset = "0x18131D8", VA = "0x18131D8")]
		public void Reset()
		{
		}

		[Token(Token = "0x60009AE")]
		public void Set<T>(T obj)
		{
		}

		[Token(Token = "0x60009AF")]
		public bool Has<T>()
		{
			return default(bool);
		}

		[Token(Token = "0x60009B0")]
		public T Get<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x181322C", Offset = "0x181322C", VA = "0x181322C")]
		public fsContext()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public abstract class fsConverter : fsBaseConverter
	{
		[Token(Token = "0x60009B2")]
		public abstract bool CanProcess(Type type);

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x181216C", Offset = "0x181216C", VA = "0x181216C")]
		protected fsConverter()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public enum fsDataType
	{
		[Token(Token = "0x400098D")]
		Array,
		[Token(Token = "0x400098E")]
		Object,
		[Token(Token = "0x400098F")]
		Double,
		[Token(Token = "0x4000990")]
		Int64,
		[Token(Token = "0x4000991")]
		Boolean,
		[Token(Token = "0x4000992")]
		String,
		[Token(Token = "0x4000993")]
		Null
	}
	[Token(Token = "0x20001EC")]
	public sealed class fsData
	{
		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private object _value;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly fsData True;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly fsData False;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly fsData Null;

		[Token(Token = "0x17000140")]
		public fsDataType Type
		{
			[Token(Token = "0x60009C0")]
			[Address(RVA = "0x18129AC", Offset = "0x18129AC", VA = "0x18129AC")]
			get
			{
				return default(fsDataType);
			}
		}

		[Token(Token = "0x17000141")]
		public bool IsNull
		{
			[Token(Token = "0x60009C1")]
			[Address(RVA = "0x18141B4", Offset = "0x18141B4", VA = "0x18141B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000142")]
		public bool IsDouble
		{
			[Token(Token = "0x60009C2")]
			[Address(RVA = "0x18141C4", Offset = "0x18141C4", VA = "0x18141C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000143")]
		public bool IsInt64
		{
			[Token(Token = "0x60009C3")]
			[Address(RVA = "0x1814228", Offset = "0x1814228", VA = "0x1814228")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000144")]
		public bool IsBool
		{
			[Token(Token = "0x60009C4")]
			[Address(RVA = "0x181428C", Offset = "0x181428C", VA = "0x181428C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000145")]
		public bool IsString
		{
			[Token(Token = "0x60009C5")]
			[Address(RVA = "0x18142F0", Offset = "0x18142F0", VA = "0x18142F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000146")]
		public bool IsDictionary
		{
			[Token(Token = "0x60009C6")]
			[Address(RVA = "0x1814354", Offset = "0x1814354", VA = "0x1814354")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000147")]
		public bool IsList
		{
			[Token(Token = "0x60009C7")]
			[Address(RVA = "0x18143D4", Offset = "0x18143D4", VA = "0x18143D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000148")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE9A7DC", Offset = "0xE9A7DC")]
		public double AsDouble
		{
			[Token(Token = "0x60009C8")]
			[Address(RVA = "0x1814454", Offset = "0x1814454", VA = "0x1814454")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000149")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE9A7F0", Offset = "0xE9A7F0")]
		public long AsInt64
		{
			[Token(Token = "0x60009C9")]
			[Address(RVA = "0x18144A0", Offset = "0x18144A0", VA = "0x18144A0")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700014A")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE9A804", Offset = "0xE9A804")]
		public bool AsBool
		{
			[Token(Token = "0x60009CA")]
			[Address(RVA = "0x18144EC", Offset = "0x18144EC", VA = "0x18144EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014B")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE9A818", Offset = "0xE9A818")]
		public string AsString
		{
			[Token(Token = "0x60009CB")]
			[Address(RVA = "0x1814538", Offset = "0x1814538", VA = "0x1814538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE9A82C", Offset = "0xE9A82C")]
		public Dictionary<string, fsData> AsDictionary
		{
			[Token(Token = "0x60009CC")]
			[Address(RVA = "0x1812BA4", Offset = "0x1812BA4", VA = "0x1812BA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE9A840", Offset = "0xE9A840")]
		public List<fsData> AsList
		{
			[Token(Token = "0x60009CD")]
			[Address(RVA = "0x1811A44", Offset = "0x1811A44", VA = "0x1811A44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x1813C18", Offset = "0x1813C18", VA = "0x1813C18")]
		public fsData()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x1813C48", Offset = "0x1813C48", VA = "0x1813C48")]
		public fsData(bool boolean)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x1813CC4", Offset = "0x1813CC4", VA = "0x1813CC4")]
		public fsData(double f)
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x1813D40", Offset = "0x1813D40", VA = "0x1813D40")]
		public fsData(long i)
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x1813DBC", Offset = "0x1813DBC", VA = "0x1813DBC")]
		public fsData(string str)
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x1813DF0", Offset = "0x1813DF0", VA = "0x1813DF0")]
		public fsData(Dictionary<string, fsData> dict)
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x1813E24", Offset = "0x1813E24", VA = "0x1813E24")]
		public fsData(List<fsData> list)
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x1813E58", Offset = "0x1813E58", VA = "0x1813E58")]
		public static fsData CreateDictionary()
		{
			return null;
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x1814008", Offset = "0x1814008", VA = "0x1814008")]
		public static fsData CreateList()
		{
			return null;
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x1811998", Offset = "0x1811998", VA = "0x1811998")]
		public static fsData CreateList(int capacity)
		{
			return null;
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x18140AC", Offset = "0x18140AC", VA = "0x18140AC")]
		internal void BecomeDictionary()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x1814124", Offset = "0x1814124", VA = "0x1814124")]
		internal fsData Clone()
		{
			return null;
		}

		[Token(Token = "0x60009CE")]
		private T Cast<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x1814584", Offset = "0x1814584", VA = "0x1814584", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x1814734", Offset = "0x1814734", VA = "0x1814734", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x18147A4", Offset = "0x18147A4", VA = "0x18147A4")]
		public bool Equals(fsData other)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x1814C74", Offset = "0x1814C74", VA = "0x1814C74")]
		public static bool operator ==(fsData a, fsData b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x1814D9C", Offset = "0x1814D9C", VA = "0x1814D9C")]
		public static bool operator !=(fsData a, fsData b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x1814E18", Offset = "0x1814E18", VA = "0x1814E18", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001ED")]
	public abstract class fsDirectConverter : fsBaseConverter
	{
		[Token(Token = "0x1700014E")]
		public abstract Type ModelType
		{
			[Token(Token = "0x60009D6")]
			get;
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x1816F88", Offset = "0x1816F88", VA = "0x1816F88")]
		protected fsDirectConverter()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public abstract class fsDirectConverter<TModel> : fsDirectConverter
	{
		[Token(Token = "0x1700014F")]
		public override Type ModelType
		{
			[Token(Token = "0x60009D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009D9")]
		public sealed override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60009DA")]
		public sealed override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60009DB")]
		protected abstract fsResult DoSerialize(TModel model, Dictionary<string, fsData> serialized);

		[Token(Token = "0x60009DC")]
		protected abstract fsResult DoDeserialize(Dictionary<string, fsData> data, ref TModel model);

		[Token(Token = "0x60009DD")]
		protected fsDirectConverter()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public sealed class fsMissingVersionConstructorException : Exception
	{
		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x1692F58", Offset = "0x1692F58", VA = "0x1692F58")]
		public fsMissingVersionConstructorException(Type versionedType, Type constructorType)
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public sealed class fsDuplicateVersionNameException : Exception
	{
		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x1816F90", Offset = "0x1816F90", VA = "0x1816F90")]
		public fsDuplicateVersionNameException(Type typeA, Type typeB, string version)
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public interface fsISerializationCallbacks
	{
		[Token(Token = "0x60009E0")]
		void OnBeforeSerialize(Type storageType);

		[Token(Token = "0x60009E1")]
		void OnAfterSerialize(Type storageType, ref fsData data);

		[Token(Token = "0x60009E2")]
		void OnBeforeDeserialize(Type storageType, ref fsData data);

		[Token(Token = "0x60009E3")]
		void OnAfterDeserialize(Type storageType);
	}
	[Token(Token = "0x20001F2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE67A94", Offset = "0xE67A94")]
	public sealed class fsIgnoreAttribute : Attribute
	{
		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x1819980", Offset = "0x1819980", VA = "0x1819980")]
		public fsIgnoreAttribute()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class fsJsonParser
	{
		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _start;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _input;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly StringBuilder _cachedStringBuilder;

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x1819988", Offset = "0x1819988", VA = "0x1819988")]
		private fsResult MakeFailure(string message)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x1819C30", Offset = "0x1819C30", VA = "0x1819C30")]
		private bool TryMoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x1819C6C", Offset = "0x1819C6C", VA = "0x1819C6C")]
		private bool HasValue()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x1819CA0", Offset = "0x1819CA0", VA = "0x1819CA0")]
		private bool HasValue(int offset)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x1819CD8", Offset = "0x1819CD8", VA = "0x1819CD8")]
		private char Character()
		{
			return default(char);
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x1819CE0", Offset = "0x1819CE0", VA = "0x1819CE0")]
		private char Character(int offset)
		{
			return default(char);
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x1819D08", Offset = "0x1819D08", VA = "0x1819D08")]
		private void SkipSpace()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x1819FB4", Offset = "0x1819FB4", VA = "0x1819FB4")]
		private bool IsHex(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x1819FF0", Offset = "0x1819FF0", VA = "0x1819FF0")]
		private uint ParseSingleChar(char c1, uint multipliyer)
		{
			return default(uint);
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x181A048", Offset = "0x181A048", VA = "0x181A048")]
		private uint ParseUnicode(char c1, char c2, char c3, char c4)
		{
			return default(uint);
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x181A1B8", Offset = "0x181A1B8", VA = "0x181A1B8")]
		private fsResult TryUnescapeChar(out char escaped)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x181A888", Offset = "0x181A888", VA = "0x181A888")]
		private fsResult TryParseExact(string content)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x181A9F0", Offset = "0x181A9F0", VA = "0x181A9F0")]
		private fsResult TryParseTrue(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x181AAE8", Offset = "0x181AAE8", VA = "0x181AAE8")]
		private fsResult TryParseFalse(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x181ABE0", Offset = "0x181ABE0", VA = "0x181ABE0")]
		private fsResult TryParseNull(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x181ACE8", Offset = "0x181ACE8", VA = "0x181ACE8")]
		private bool IsSeparator(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x181AD78", Offset = "0x181AD78", VA = "0x181AD78")]
		private fsResult TryParseNumber(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x181B110", Offset = "0x181B110", VA = "0x181B110")]
		private fsResult TryParseString(out string str)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x181B408", Offset = "0x181B408", VA = "0x181B408")]
		private fsResult TryParseArray(out fsData arr)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x181B9FC", Offset = "0x181B9FC", VA = "0x181B9FC")]
		private fsResult TryParseObject(out fsData obj)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x181B72C", Offset = "0x181B72C", VA = "0x181B72C")]
		private fsResult RunParse(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x181BF0C", Offset = "0x181BF0C", VA = "0x181BF0C")]
		public static fsResult Parse(string input, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x181C090", Offset = "0x181C090", VA = "0x181C090")]
		public static fsData Parse(string input)
		{
			return null;
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x181BFF8", Offset = "0x181BFF8", VA = "0x181BFF8")]
		private fsJsonParser(string input)
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public static class fsJsonPrinter
	{
		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x181C0C8", Offset = "0x181C0C8", VA = "0x181C0C8")]
		private static void InsertSpacing(TextWriter stream, int count)
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x181C148", Offset = "0x181C148", VA = "0x181C148")]
		private static string EscapeString(string str)
		{
			return null;
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x181C4D4", Offset = "0x181C4D4", VA = "0x181C4D4")]
		private static void BuildCompressedString(fsData data, TextWriter stream)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x181CB18", Offset = "0x181CB18", VA = "0x181CB18")]
		private static void BuildPrettyString(fsData data, TextWriter stream, int depth)
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x181D09C", Offset = "0x181D09C", VA = "0x181D09C")]
		public static void PrettyJson(fsData data, TextWriter outputStream)
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x181D0A4", Offset = "0x181D0A4", VA = "0x181D0A4")]
		public static string PrettyJson(fsData data)
		{
			return null;
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x181D254", Offset = "0x181D254", VA = "0x181D254")]
		public static void CompressedJson(fsData data, StreamWriter outputStream)
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x1814588", Offset = "0x1814588", VA = "0x1814588")]
		public static string CompressedJson(fsData data)
		{
			return null;
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x181C948", Offset = "0x181C948", VA = "0x181C948")]
		private static string ConvertDoubleToString(double d)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F5")]
	public enum fsMemberSerialization
	{
		[Token(Token = "0x400099C")]
		OptIn,
		[Token(Token = "0x400099D")]
		OptOut,
		[Token(Token = "0x400099E")]
		Default
	}
	[Token(Token = "0x20001F6")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE67AA8", Offset = "0xE67AA8")]
	public sealed class fsObjectAttribute : Attribute
	{
		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type[] PreviousModels;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string VersionString;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public fsMemberSerialization MemberSerialization;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Type Converter;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Type Processor;

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x1693214", Offset = "0x1693214", VA = "0x1693214")]
		public fsObjectAttribute()
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x1693224", Offset = "0x1693224", VA = "0x1693224")]
		public fsObjectAttribute(string versionString, params Type[] previousModels)
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public abstract class fsObjectProcessor
	{
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x169327C", Offset = "0x169327C", VA = "0x169327C", Slot = "4")]
		public virtual bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x16932BC", Offset = "0x16932BC", VA = "0x16932BC", Slot = "5")]
		public virtual void OnBeforeSerialize(Type storageType, object instance)
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x16932C0", Offset = "0x16932C0", VA = "0x16932C0", Slot = "6")]
		public virtual void OnAfterSerialize(Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x16932C4", Offset = "0x16932C4", VA = "0x16932C4", Slot = "7")]
		public virtual void OnBeforeDeserialize(Type storageType, ref fsData data)
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x16932C8", Offset = "0x16932C8", VA = "0x16932C8", Slot = "8")]
		public virtual void OnBeforeDeserializeAfterInstanceCreation(Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x16932CC", Offset = "0x16932CC", VA = "0x16932CC", Slot = "9")]
		public virtual void OnAfterDeserialize(Type storageType, object instance)
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x16932D0", Offset = "0x16932D0", VA = "0x16932D0")]
		protected fsObjectProcessor()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE67ABC", Offset = "0xE67ABC")]
	public sealed class fsPropertyAttribute : Attribute
	{
		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type Converter;

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x16957AC", Offset = "0x16957AC", VA = "0x16957AC")]
		public fsPropertyAttribute()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x1695814", Offset = "0x1695814", VA = "0x1695814")]
		public fsPropertyAttribute(string name)
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public struct fsResult
	{
		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] EmptyStringArray;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _success;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private List<string> _messages;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static fsResult Success;

		[Token(Token = "0x17000150")]
		public bool Failed
		{
			[Token(Token = "0x6000A17")]
			[Address(RVA = "0x1695DE4", Offset = "0x1695DE4", VA = "0x1695DE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000151")]
		public bool Succeeded
		{
			[Token(Token = "0x6000A18")]
			[Address(RVA = "0x16967D0", Offset = "0x16967D0", VA = "0x16967D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000152")]
		public bool HasWarnings
		{
			[Token(Token = "0x6000A19")]
			[Address(RVA = "0x16967D8", Offset = "0x16967D8", VA = "0x16967D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000153")]
		public Exception AsException
		{
			[Token(Token = "0x6000A1C")]
			[Address(RVA = "0x1696874", Offset = "0x1696874", VA = "0x1696874")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		public IEnumerable<string> RawMessages
		{
			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0x16969E4", Offset = "0x16969E4", VA = "0x16969E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		public string FormattedMessages
		{
			[Token(Token = "0x6000A1E")]
			[Address(RVA = "0x1696A54", Offset = "0x1696A54", VA = "0x1696A54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x169656C", Offset = "0x169656C", VA = "0x169656C")]
		public void AddMessage(string message)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x1695D18", Offset = "0x1695D18", VA = "0x1695D18")]
		public void AddMessages(fsResult result)
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x1696624", Offset = "0x1696624", VA = "0x1696624")]
		public fsResult Merge(fsResult other)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x1696708", Offset = "0x1696708", VA = "0x1696708")]
		public static fsResult Warn(string warning)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x1695034", Offset = "0x1695034", VA = "0x1695034")]
		public static fsResult Fail(string warning)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x1695778", Offset = "0x1695778", VA = "0x1695778")]
		public static fsResult operator +(fsResult a, fsResult b)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x1696834", Offset = "0x1696834", VA = "0x1696834")]
		public fsResult AssertSuccess()
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x169695C", Offset = "0x169695C", VA = "0x169695C")]
		public fsResult AssertSuccessWithoutWarnings()
		{
			return default(fsResult);
		}
	}
	[Token(Token = "0x20001FA")]
	public class fsSerializer
	{
		[Token(Token = "0x20001FB")]
		internal class fsLazyCycleDefinitionWriter
		{
			[Token(Token = "0x40009BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Dictionary<int, fsData> _pendingDefinitions;

			[Token(Token = "0x40009BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private HashSet<int> _references;

			[Token(Token = "0x6000A44")]
			[Address(RVA = "0x216DF4C", Offset = "0x216DF4C", VA = "0x216DF4C")]
			public void WriteDefinition(int id, fsData data)
			{
			}

			[Token(Token = "0x6000A45")]
			[Address(RVA = "0x216E0C8", Offset = "0x216E0C8", VA = "0x216E0C8")]
			public void WriteReference(int id, Dictionary<string, fsData> dict)
			{
			}

			[Token(Token = "0x6000A46")]
			[Address(RVA = "0x216E314", Offset = "0x216E314", VA = "0x216E314")]
			public void Clear()
			{
			}

			[Token(Token = "0x6000A47")]
			[Address(RVA = "0x216E38C", Offset = "0x216E38C", VA = "0x216E38C")]
			public fsLazyCycleDefinitionWriter()
			{
			}
		}

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<string> _reservedKeywords;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string Key_ObjectReference;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string Key_ObjectDefinition;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string Key_InstanceType;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string Key_Version;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly string Key_Content;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<Type, fsBaseConverter> _cachedConverterTypeInstances;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Type, fsBaseConverter> _cachedConverters;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<Type, List<fsObjectProcessor>> _cachedProcessors;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<fsConverter> _availableConverters;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<Type, fsDirectConverter> _availableDirectConverters;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<fsObjectProcessor> _processors;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly fsCyclicReferenceManager _references;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly fsLazyCycleDefinitionWriter _lazyReferenceWriter;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public fsContext Context;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public fsConfig Config;

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x16973DC", Offset = "0x16973DC", VA = "0x16973DC")]
		static fsSerializer()
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x1697684", Offset = "0x1697684", VA = "0x1697684")]
		public static bool IsReservedKeyword(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x1697710", Offset = "0x1697710", VA = "0x1697710")]
		private static bool IsObjectReference(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x16977D4", Offset = "0x16977D4", VA = "0x16977D4")]
		private static bool IsObjectDefinition(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x1697898", Offset = "0x1697898", VA = "0x1697898")]
		private static bool IsVersioned(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x169795C", Offset = "0x169795C", VA = "0x169795C")]
		private static bool IsTypeSpecified(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x1697A20", Offset = "0x1697A20", VA = "0x1697A20")]
		private static bool IsWrappedData(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x1697AE4", Offset = "0x1697AE4", VA = "0x1697AE4")]
		public static void StripDeserializationMetadata(ref fsData data)
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x1697CEC", Offset = "0x1697CEC", VA = "0x1697CEC")]
		private static void ConvertLegacyData(ref fsData data)
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x16981C4", Offset = "0x16981C4", VA = "0x16981C4")]
		private static void Invoke_OnBeforeSerialize(List<fsObjectProcessor> processors, Type storageType, object instance)
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x1698278", Offset = "0x1698278", VA = "0x1698278")]
		private static void Invoke_OnAfterSerialize(List<fsObjectProcessor> processors, Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x1698340", Offset = "0x1698340", VA = "0x1698340")]
		private static void Invoke_OnBeforeDeserialize(List<fsObjectProcessor> processors, Type storageType, ref fsData data)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x16983F4", Offset = "0x16983F4", VA = "0x16983F4")]
		private static void Invoke_OnBeforeDeserializeAfterInstanceCreation(List<fsObjectProcessor> processors, Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x16984B8", Offset = "0x16984B8", VA = "0x16984B8")]
		private static void Invoke_OnAfterDeserialize(List<fsObjectProcessor> processors, Type storageType, object instance)
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x16980D8", Offset = "0x16980D8", VA = "0x16980D8")]
		private static void EnsureDictionary(fsData data)
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x1698578", Offset = "0x1698578", VA = "0x1698578")]
		public fsSerializer()
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x1699058", Offset = "0x1699058", VA = "0x1699058")]
		public void AddProcessor(fsObjectProcessor processor)
		{
		}

		[Token(Token = "0x6000A31")]
		public void RemoveProcessor<TProcessor>()
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x1699108", Offset = "0x1699108", VA = "0x1699108")]
		private List<fsObjectProcessor> GetProcessors(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x1698E00", Offset = "0x1698E00", VA = "0x1698E00")]
		public void AddConverter(fsBaseConverter converter)
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x16993E4", Offset = "0x16993E4", VA = "0x16993E4")]
		private fsBaseConverter GetConverter(Type type, Type overrideConverterType)
		{
			return null;
		}

		[Token(Token = "0x6000A35")]
		public fsResult TrySerialize<T>(T instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A36")]
		public fsResult TryDeserialize<T>(fsData data, ref T instance)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x1693194", Offset = "0x1693194", VA = "0x1693194")]
		public fsResult TrySerialize(Type storageType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x1695B5C", Offset = "0x1695B5C", VA = "0x1695B5C")]
		public fsResult TrySerialize(Type storageType, Type overrideConverterType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x16998A8", Offset = "0x16998A8", VA = "0x16998A8")]
		private fsResult InternalSerialize_1_ProcessCycles(Type storageType, Type overrideConverterType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x1699BE4", Offset = "0x1699BE4", VA = "0x1699BE4")]
		private fsResult InternalSerialize_2_Inheritance(Type storageType, Type overrideConverterType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x1699DC4", Offset = "0x1699DC4", VA = "0x1699DC4")]
		private fsResult InternalSerialize_3_ProcessVersioning(Type overrideConverterType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x169A480", Offset = "0x169A480", VA = "0x169A480")]
		private fsResult InternalSerialize_4_Converter(Type overrideConverterType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x16931F8", Offset = "0x16931F8", VA = "0x16931F8")]
		public fsResult TryDeserialize(fsData data, Type storageType, ref object result)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x1696010", Offset = "0x1696010", VA = "0x1696010")]
		public fsResult TryDeserialize(fsData data, Type storageType, Type overrideConverterType, ref object result)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x169A4F8", Offset = "0x169A4F8", VA = "0x169A4F8")]
		private fsResult InternalDeserialize_1_CycleReference(Type overrideConverterType, fsData data, Type storageType, ref object result, out List<fsObjectProcessor> processors)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x169A6B0", Offset = "0x169A6B0", VA = "0x169A6B0")]
		private fsResult InternalDeserialize_2_Version(Type overrideConverterType, fsData data, Type storageType, ref object result, out List<fsObjectProcessor> processors)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x169AEF0", Offset = "0x169AEF0", VA = "0x169AEF0")]
		private fsResult InternalDeserialize_3_Inheritance(Type overrideConverterType, fsData data, Type storageType, ref object result, out List<fsObjectProcessor> processors)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x169B520", Offset = "0x169B520", VA = "0x169B520")]
		private fsResult InternalDeserialize_4_Cycles(Type overrideConverterType, fsData data, Type resultType, ref object result)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x169B658", Offset = "0x169B658", VA = "0x169B658")]
		private fsResult InternalDeserialize_5_Converter(Type overrideConverterType, fsData data, Type resultType, ref object result)
		{
			return default(fsResult);
		}
	}
}
namespace FullSerializer.Internal
{
	[Token(Token = "0x20001FC")]
	public class fsArrayConverter : fsConverter
	{
		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x1811618", Offset = "0x1811618", VA = "0x1811618", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x1811634", Offset = "0x1811634", VA = "0x1811634", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x181163C", Offset = "0x181163C", VA = "0x181163C", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x1811644", Offset = "0x1811644", VA = "0x1811644", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x1811A90", Offset = "0x1811A90", VA = "0x1811A90", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x18120D4", Offset = "0x18120D4", VA = "0x18120D4", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x1812164", Offset = "0x1812164", VA = "0x1812164")]
		public fsArrayConverter()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public class fsDateConverter : fsConverter
	{
		[Token(Token = "0x40009BC")]
		private const string DefaultDateTimeFormatString = "o";

		[Token(Token = "0x40009BD")]
		private const string DateTimeOffsetFormatString = "o";

		[Token(Token = "0x17000156")]
		private string DateTimeFormatString
		{
			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0x1814EFC", Offset = "0x1814EFC", VA = "0x1814EFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x1814F64", Offset = "0x1814F64", VA = "0x1814F64", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x18150AC", Offset = "0x18150AC", VA = "0x18150AC", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x18152B8", Offset = "0x18152B8", VA = "0x18152B8", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x181596C", Offset = "0x181596C", VA = "0x181596C")]
		public fsDateConverter()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class fsDictionaryConverter : fsConverter
	{
		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x1815974", Offset = "0x1815974", VA = "0x1815974", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x1815A0C", Offset = "0x1815A0C", VA = "0x1815A0C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x1815A9C", Offset = "0x1815A9C", VA = "0x1815A9C", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance_, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x18166EC", Offset = "0x18166EC", VA = "0x18166EC", Slot = "7")]
		public override fsResult TrySerialize(object instance_, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x181633C", Offset = "0x181633C", VA = "0x181633C")]
		private fsResult AddItemToDictionary(IDictionary dictionary, object key, object value)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x18161BC", Offset = "0x18161BC", VA = "0x18161BC")]
		private static void GetKeyValueTypes(Type dictionaryType, out Type keyStorageType, out Type valueStorageType)
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x1816F80", Offset = "0x1816F80", VA = "0x1816F80")]
		public fsDictionaryConverter()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class fsEnumConverter : fsConverter
	{
		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x1817230", Offset = "0x1817230", VA = "0x1817230", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x18172AC", Offset = "0x18172AC", VA = "0x18172AC", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x18172B4", Offset = "0x18172B4", VA = "0x18172B4", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x18172BC", Offset = "0x18172BC", VA = "0x18172BC", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x181735C", Offset = "0x181735C", VA = "0x181735C", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x181788C", Offset = "0x181788C", VA = "0x181788C", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A61")]
		private static bool ArrayContains<T>(T[] values, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x1817D70", Offset = "0x1817D70", VA = "0x1817D70")]
		public fsEnumConverter()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class fsForwardConverter : fsConverter
	{
		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _memberName;

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x1817DAC", Offset = "0x1817DAC", VA = "0x1817DAC")]
		public fsForwardConverter(fsForwardAttribute attribute)
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x1817DE8", Offset = "0x1817DE8", VA = "0x1817DE8", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x1817E3C", Offset = "0x1817E3C", VA = "0x1817E3C")]
		private fsResult GetProperty(object instance, out fsMetaProperty property)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x1818040", Offset = "0x1818040", VA = "0x1818040", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x18181A4", Offset = "0x18181A4", VA = "0x18181A4", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x181831C", Offset = "0x181831C", VA = "0x181831C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}
	}
	[Token(Token = "0x2000201")]
	public class fsGuidConverter : fsConverter
	{
		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x181842C", Offset = "0x181842C", VA = "0x181842C", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x18184B8", Offset = "0x18184B8", VA = "0x18184B8", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x18184C0", Offset = "0x18184C0", VA = "0x18184C0", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x18184C8", Offset = "0x18184C8", VA = "0x18184C8", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x18185EC", Offset = "0x18185EC", VA = "0x18185EC", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x1818748", Offset = "0x1818748", VA = "0x1818748", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x18187A0", Offset = "0x18187A0", VA = "0x18187A0")]
		public fsGuidConverter()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class fsIEnumerableConverter : fsConverter
	{
		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x18187A8", Offset = "0x18187A8", VA = "0x18187A8", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x1818A48", Offset = "0x1818A48", VA = "0x1818A48", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x1818AD8", Offset = "0x1818AD8", VA = "0x1818AD8", Slot = "7")]
		public override fsResult TrySerialize(object instance_, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x18191BC", Offset = "0x18191BC", VA = "0x18191BC")]
		private bool IsStack(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x18192EC", Offset = "0x18192EC", VA = "0x18192EC", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance_, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x18190A4", Offset = "0x18190A4", VA = "0x18190A4")]
		private static int HintSize(IEnumerable collection)
		{
			return default(int);
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x1818F44", Offset = "0x1818F44", VA = "0x1818F44")]
		private static Type GetElementType(Type objectType)
		{
			return null;
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x18197A4", Offset = "0x18197A4", VA = "0x18197A4")]
		private static void TryClear(Type type, object instance)
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x181986C", Offset = "0x181986C", VA = "0x181986C")]
		private static int TryGetExistingSize(Type type, object instance)
		{
			return default(int);
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x1818868", Offset = "0x1818868", VA = "0x1818868")]
		private static MethodInfo GetAddMethod(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x1819978", Offset = "0x1819978", VA = "0x1819978")]
		public fsIEnumerableConverter()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class fsKeyValuePairConverter : fsConverter
	{
		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x181D258", Offset = "0x181D258", VA = "0x181D258", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x181D368", Offset = "0x181D368", VA = "0x181D368", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x181D370", Offset = "0x181D370", VA = "0x181D370", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x181D378", Offset = "0x181D378", VA = "0x181D378", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x181D67C", Offset = "0x181D67C", VA = "0x181D67C", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x181D97C", Offset = "0x181D97C", VA = "0x181D97C")]
		public fsKeyValuePairConverter()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public class fsNullableConverter : fsConverter
	{
		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x169303C", Offset = "0x169303C", VA = "0x169303C", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x1693140", Offset = "0x1693140", VA = "0x1693140", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x16931A4", Offset = "0x16931A4", VA = "0x16931A4", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x1693204", Offset = "0x1693204", VA = "0x1693204", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x169320C", Offset = "0x169320C", VA = "0x169320C")]
		public fsNullableConverter()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class fsPrimitiveConverter : fsConverter
	{
		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x1694224", Offset = "0x1694224", VA = "0x1694224", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x1694360", Offset = "0x1694360", VA = "0x1694360", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x1694368", Offset = "0x1694368", VA = "0x1694368", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x1694370", Offset = "0x1694370", VA = "0x1694370")]
		private static bool UseBool(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x16943FC", Offset = "0x16943FC", VA = "0x16943FC")]
		private static bool UseInt64(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x16946D4", Offset = "0x16946D4", VA = "0x16946D4")]
		private static bool UseDouble(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x169481C", Offset = "0x169481C", VA = "0x169481C")]
		private static bool UseString(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x1694914", Offset = "0x1694914", VA = "0x1694914", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x16950F0", Offset = "0x16950F0", VA = "0x16950F0", Slot = "8")]
		public override fsResult TryDeserialize(fsData storage, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x16957A4", Offset = "0x16957A4", VA = "0x16957A4")]
		public fsPrimitiveConverter()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class fsReflectedConverter : fsConverter
	{
		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x1695848", Offset = "0x1695848", VA = "0x1695848", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x1695934", Offset = "0x1695934", VA = "0x1695934", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x1695DF4", Offset = "0x1695DF4", VA = "0x1695DF4", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x1696258", Offset = "0x1696258", VA = "0x1696258", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x16962E0", Offset = "0x16962E0", VA = "0x16962E0")]
		public fsReflectedConverter()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class fsTypeConverter : fsConverter
	{
		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x169C140", Offset = "0x169C140", VA = "0x169C140", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x169C1D8", Offset = "0x169C1D8", VA = "0x169C1D8", Slot = "5")]
		public override bool RequestCycleSupport(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x169C1E0", Offset = "0x169C1E0", VA = "0x169C1E0", Slot = "6")]
		public override bool RequestInheritanceSupport(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x169C1E8", Offset = "0x169C1E8", VA = "0x169C1E8", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x169C300", Offset = "0x169C300", VA = "0x169C300", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x169C490", Offset = "0x169C490", VA = "0x169C490", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x1698DF0", Offset = "0x1698DF0", VA = "0x1698DF0")]
		public fsTypeConverter()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class fsWeakReferenceConverter : fsConverter
	{
		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x169D678", Offset = "0x169D678", VA = "0x169D678", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x169D704", Offset = "0x169D704", VA = "0x169D704", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x169D70C", Offset = "0x169D70C", VA = "0x169D70C", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x169D714", Offset = "0x169D714", VA = "0x169D714", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x169D9A0", Offset = "0x169D9A0", VA = "0x169D9A0", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x169DC9C", Offset = "0x169DC9C", VA = "0x169DC9C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x1698DF8", Offset = "0x1698DF8", VA = "0x1698DF8")]
		public fsWeakReferenceConverter()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class fsCyclicReferenceManager
	{
		[Token(Token = "0x200020A")]
		private class ObjectReferenceEqualityComparator : IEqualityComparer<object>
		{
			[Token(Token = "0x40009C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly IEqualityComparer<object> Instance;

			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0x216D7EC", Offset = "0x216D7EC", VA = "0x216D7EC", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Object>.Equals(object x, object y)
			{
				return default(bool);
			}

			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0x216D7F8", Offset = "0x216D7F8", VA = "0x216D7F8", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Object>.GetHashCode(object obj)
			{
				return default(int);
			}

			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0x216D804", Offset = "0x216D804", VA = "0x216D804")]
			public ObjectReferenceEqualityComparator()
			{
			}
		}

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<object, int> _objectIds;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _nextId;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, object> _marked;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _depth;

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x1813594", Offset = "0x1813594", VA = "0x1813594")]
		public void Enter()
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x18135A4", Offset = "0x18135A4", VA = "0x18135A4")]
		public bool Exit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x1813724", Offset = "0x1813724", VA = "0x1813724")]
		public object GetReferenceObject(int id)
		{
			return null;
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x1813834", Offset = "0x1813834", VA = "0x1813834")]
		public void AddReferenceWithId(int id, object reference)
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x18138A0", Offset = "0x18138A0", VA = "0x18138A0")]
		public int GetReferenceId(object item)
		{
			return default(int);
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x1813950", Offset = "0x1813950", VA = "0x1813950")]
		public bool IsReference(object item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x18139C4", Offset = "0x18139C4", VA = "0x18139C4")]
		public void MarkSerialized(object item)
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x1813B04", Offset = "0x1813B04", VA = "0x1813B04")]
		public fsCyclicReferenceManager()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public struct fsOption<T>
	{
		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _hasValue;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _value;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static fsOption<T> Empty;

		[Token(Token = "0x17000157")]
		public bool HasValue
		{
			[Token(Token = "0x6000AAF")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000158")]
		public bool IsEmpty
		{
			[Token(Token = "0x6000AB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000159")]
		public T Value
		{
			[Token(Token = "0x6000AB1")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6000AB2")]
		public fsOption(T value)
		{
		}
	}
	[Token(Token = "0x200020C")]
	public static class fsOption
	{
		[Token(Token = "0x6000AB3")]
		public static fsOption<T> Just<T>(T value)
		{
			return default(fsOption<T>);
		}
	}
	[Token(Token = "0x200020D")]
	public static class fsPortableReflection
	{
		[Token(Token = "0x200020E")]
		private struct AttributeQuery
		{
			[Token(Token = "0x40009CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MemberInfo MemberInfo;

			[Token(Token = "0x40009CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Type AttributeType;
		}

		[Token(Token = "0x200020F")]
		private class AttributeQueryComparator : IEqualityComparer<AttributeQuery>
		{
			[Token(Token = "0x6000ACD")]
			[Address(RVA = "0x216DE40", Offset = "0x216DE40", VA = "0x216DE40", Slot = "4")]
			public bool Equals(AttributeQuery x, AttributeQuery y)
			{
				return default(bool);
			}

			[Token(Token = "0x6000ACE")]
			[Address(RVA = "0x216DEF0", Offset = "0x216DEF0", VA = "0x216DEF0", Slot = "5")]
			public int GetHashCode(AttributeQuery obj)
			{
				return default(int);
			}

			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0x216DF44", Offset = "0x216DF44", VA = "0x216DF44")]
			public AttributeQueryComparator()
			{
			}
		}

		[Token(Token = "0x2000210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67AE0", Offset = "0xE67AE0")]
		private sealed class <GetFlattenedMethods>d__18 : IEnumerable<MethodInfo>, IEnumerable, IEnumerator<MethodInfo>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private MethodInfo <>2__current;

			[Token(Token = "0x40009CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40009CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Type type;

			[Token(Token = "0x40009D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Type <>3__type;

			[Token(Token = "0x40009D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string methodName;

			[Token(Token = "0x40009D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string <>3__methodName;

			[Token(Token = "0x40009D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private MethodInfo[] <methods>5__2;

			[Token(Token = "0x40009D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <i>5__3;

			[Token(Token = "0x1700015A")]
			private MethodInfo System.Collections.Generic.IEnumerator<System.Reflection.MethodInfo>.Current
			{
				[Token(Token = "0x6000AD3")]
				[Address(RVA = "0x216DD2C", Offset = "0x216DD2C", VA = "0x216DD2C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AD5")]
				[Address(RVA = "0x216DD74", Offset = "0x216DD74", VA = "0x216DD74", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AD0")]
			[Address(RVA = "0x216DAE0", Offset = "0x216DAE0", VA = "0x216DAE0")]
			[DebuggerHidden]
			public <GetFlattenedMethods>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000AD1")]
			[Address(RVA = "0x216DB18", Offset = "0x216DB18", VA = "0x216DB18", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AD2")]
			[Address(RVA = "0x216DB1C", Offset = "0x216DB1C", VA = "0x216DB1C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AD4")]
			[Address(RVA = "0x216DD34", Offset = "0x216DD34", VA = "0x216DD34", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000AD6")]
			[Address(RVA = "0x216DD7C", Offset = "0x216DD7C", VA = "0x216DD7C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<MethodInfo> System.Collections.Generic.IEnumerable<System.Reflection.MethodInfo>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000AD7")]
			[Address(RVA = "0x216DE3C", Offset = "0x216DE3C", VA = "0x216DE3C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Type[] EmptyTypes;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IDictionary<AttributeQuery, Attribute> _cachedAttributeQueries;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static BindingFlags DeclaredFlags;

		[Token(Token = "0x6000AB4")]
		public static bool HasAttribute<TAttribute>(MemberInfo element)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB5")]
		public static bool HasAttribute<TAttribute>(MemberInfo element, bool shouldCache)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x16932D8", Offset = "0x16932D8", VA = "0x16932D8")]
		public static bool HasAttribute(MemberInfo element, Type attributeType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x16924F8", Offset = "0x16924F8", VA = "0x16924F8")]
		public static bool HasAttribute(MemberInfo element, Type attributeType, bool shouldCache)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x1693360", Offset = "0x1693360", VA = "0x1693360")]
		public static Attribute GetAttribute(MemberInfo element, Type attributeType, bool shouldCache)
		{
			return null;
		}

		[Token(Token = "0x6000AB9")]
		public static TAttribute GetAttribute<TAttribute>(MemberInfo element, bool shouldCache) where TAttribute : Attribute
		{
			return null;
		}

		[Token(Token = "0x6000ABA")]
		public static TAttribute GetAttribute<TAttribute>(MemberInfo element) where TAttribute : Attribute
		{
			return null;
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x16935DC", Offset = "0x16935DC", VA = "0x16935DC")]
		public static PropertyInfo GetDeclaredProperty(this Type type, string propertyName)
		{
			return null;
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x169374C", Offset = "0x169374C", VA = "0x169374C")]
		public static MethodInfo GetDeclaredMethod(this Type type, string methodName)
		{
			return null;
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x1692850", Offset = "0x1692850", VA = "0x1692850")]
		public static ConstructorInfo GetDeclaredConstructor(this Type type, Type[] parameters)
		{
			return null;
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x16938BC", Offset = "0x16938BC", VA = "0x16938BC")]
		public static ConstructorInfo[] GetDeclaredConstructors(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x169393C", Offset = "0x169393C", VA = "0x169393C")]
		public static MemberInfo[] GetFlattenedMember(this Type type, string memberName)
		{
			return null;
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x1693B34", Offset = "0x1693B34", VA = "0x1693B34")]
		public static MethodInfo GetFlattenedMethod(this Type type, string methodName)
		{
			return null;
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x1693CA4", Offset = "0x1693CA4", VA = "0x1693CA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8D628", Offset = "0xE8D628")]
		public static IEnumerable<MethodInfo> GetFlattenedMethods(this Type type, string methodName)
		{
			return null;
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x1693D38", Offset = "0x1693D38", VA = "0x1693D38")]
		public static PropertyInfo GetFlattenedProperty(this Type type, string propertyName)
		{
			return null;
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x1693EA8", Offset = "0x1693EA8", VA = "0x1693EA8")]
		public static MemberInfo GetDeclaredMember(this Type type, string memberName)
		{
			return null;
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x169383C", Offset = "0x169383C", VA = "0x169383C")]
		public static MethodInfo[] GetDeclaredMethods(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x16936CC", Offset = "0x16936CC", VA = "0x16936CC")]
		public static PropertyInfo[] GetDeclaredProperties(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x1693F98", Offset = "0x1693F98", VA = "0x1693F98")]
		public static FieldInfo[] GetDeclaredFields(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x1691DDC", Offset = "0x1691DDC", VA = "0x1691DDC")]
		public static MemberInfo[] GetDeclaredMembers(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x1694018", Offset = "0x1694018", VA = "0x1694018")]
		public static MemberInfo AsMemberInfo(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x169401C", Offset = "0x169401C", VA = "0x169401C")]
		public static bool IsType(MemberInfo member)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x1694098", Offset = "0x1694098", VA = "0x1694098")]
		public static Type AsType(MemberInfo member)
		{
			return null;
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x16923C8", Offset = "0x16923C8", VA = "0x16923C8")]
		public static Type Resolve(this Type type)
		{
			return null;
		}
	}
	[Token(Token = "0x2000211")]
	public static class fsVersionManager
	{
		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<Type, fsOption<fsVersionedType>> _cache;

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x169AB9C", Offset = "0x169AB9C", VA = "0x169AB9C")]
		public static fsResult GetVersionImportPath(string currentVersion, fsVersionedType targetVersion, out List<fsVersionedType> path)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x169CB54", Offset = "0x169CB54", VA = "0x169CB54")]
		private static bool GetVersionImportPathRecursive(List<fsVersionedType> path, string currentVersion, fsVersionedType current)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x1699FB0", Offset = "0x1699FB0", VA = "0x1699FB0")]
		public static fsOption<fsVersionedType> GetVersionedType(Type type)
		{
			return default(fsOption<fsVersionedType>);
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x169CF9C", Offset = "0x169CF9C", VA = "0x169CF9C")]
		private static void VerifyConstructors(fsVersionedType type)
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x169CC9C", Offset = "0x169CC9C", VA = "0x169CC9C")]
		private static void VerifyUniqueVersionStrings(fsVersionedType type)
		{
		}
	}
	[Token(Token = "0x2000212")]
	public struct fsVersionedType
	{
		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public fsVersionedType[] Ancestors;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string VersionString;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type ModelType;

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x169B3FC", Offset = "0x169B3FC", VA = "0x169B3FC")]
		public object Migrate(object ancestorInstance)
		{
			return null;
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x169D1EC", Offset = "0x169D1EC", VA = "0x169D1EC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x169D49C", Offset = "0x169D49C", VA = "0x169D49C")]
		public static bool operator ==(fsVersionedType a, fsVersionedType b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x169D518", Offset = "0x169D518", VA = "0x169D518")]
		public static bool operator !=(fsVersionedType a, fsVersionedType b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x169D594", Offset = "0x169D594", VA = "0x169D594", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x169D658", Offset = "0x169D658", VA = "0x169D658", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000213")]
	public class fsMetaProperty
	{
		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MemberInfo _memberInfo;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7CC80", Offset = "0xE7CC80")]
		private Type <StorageType>k__BackingField;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7CC90", Offset = "0xE7CC90")]
		private Type <OverrideConverterType>k__BackingField;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7CCA0", Offset = "0xE7CCA0")]
		private bool <CanRead>k__BackingField;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7CCB0", Offset = "0xE7CCB0")]
		private bool <CanWrite>k__BackingField;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7CCC0", Offset = "0xE7CCC0")]
		private string <JsonName>k__BackingField;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7CCD0", Offset = "0xE7CCD0")]
		private string <MemberName>k__BackingField;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7CCE0", Offset = "0xE7CCE0")]
		private bool <IsPublic>k__BackingField;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7CCF0", Offset = "0xE7CCF0")]
		private bool <IsReadOnly>k__BackingField;

		[Token(Token = "0x1700015C")]
		public Type StorageType
		{
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x16910B4", Offset = "0x16910B4", VA = "0x16910B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D778", Offset = "0xE8D778")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x16910BC", Offset = "0x16910BC", VA = "0x16910BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D788", Offset = "0xE8D788")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public Type OverrideConverterType
		{
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x16910C4", Offset = "0x16910C4", VA = "0x16910C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D798", Offset = "0xE8D798")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0x16910CC", Offset = "0x16910CC", VA = "0x16910CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D7A8", Offset = "0xE8D7A8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public bool CanRead
		{
			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0x16910D4", Offset = "0x16910D4", VA = "0x16910D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D7B8", Offset = "0xE8D7B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x16910DC", Offset = "0x16910DC", VA = "0x16910DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D7C8", Offset = "0xE8D7C8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public bool CanWrite
		{
			[Token(Token = "0x6000AED")]
			[Address(RVA = "0x16910E8", Offset = "0x16910E8", VA = "0x16910E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D7D8", Offset = "0xE8D7D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AEE")]
			[Address(RVA = "0x16910F0", Offset = "0x16910F0", VA = "0x16910F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D7E8", Offset = "0xE8D7E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000160")]
		public string JsonName
		{
			[Token(Token = "0x6000AEF")]
			[Address(RVA = "0x16910FC", Offset = "0x16910FC", VA = "0x16910FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D7F8", Offset = "0xE8D7F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AF0")]
			[Address(RVA = "0x1691104", Offset = "0x1691104", VA = "0x1691104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D808", Offset = "0xE8D808")]
			private set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public string MemberName
		{
			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0x169110C", Offset = "0x169110C", VA = "0x169110C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D818", Offset = "0xE8D818")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AF2")]
			[Address(RVA = "0x1691114", Offset = "0x1691114", VA = "0x1691114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D828", Offset = "0xE8D828")]
			private set
			{
			}
		}

		[Token(Token = "0x17000162")]
		public bool IsPublic
		{
			[Token(Token = "0x6000AF3")]
			[Address(RVA = "0x169111C", Offset = "0x169111C", VA = "0x169111C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D838", Offset = "0xE8D838")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AF4")]
			[Address(RVA = "0x1691124", Offset = "0x1691124", VA = "0x1691124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D848", Offset = "0xE8D848")]
			private set
			{
			}
		}

		[Token(Token = "0x17000163")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0x1691130", Offset = "0x1691130", VA = "0x1691130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D858", Offset = "0xE8D858")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0x1691138", Offset = "0x1691138", VA = "0x1691138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8D868", Offset = "0xE8D868")]
			private set
			{
			}
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x1690D78", Offset = "0x1690D78", VA = "0x1690D78")]
		internal fsMetaProperty(fsConfig config, FieldInfo field)
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x1690F60", Offset = "0x1690F60", VA = "0x1690F60")]
		internal fsMetaProperty(fsConfig config, PropertyInfo property)
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x1690E40", Offset = "0x1690E40", VA = "0x1690E40")]
		private void CommonInitialize(fsConfig config)
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x1691144", Offset = "0x1691144", VA = "0x1691144")]
		public void Write(object context, object value)
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x169134C", Offset = "0x169134C", VA = "0x169134C")]
		public object Read(object context)
		{
			return null;
		}
	}
	[Token(Token = "0x2000214")]
	public static class fsReflectionUtility
	{
		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x16962E8", Offset = "0x16962E8", VA = "0x16962E8")]
		public static Type GetInterface(Type type, Type interfaceType)
		{
			return null;
		}
	}
	[Token(Token = "0x2000215")]
	public static class fsTypeCache
	{
		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, Type> _cachedTypes;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, Assembly> _assembliesByName;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<Assembly> _assembliesByIndex;

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x169B770", Offset = "0x169B770", VA = "0x169B770")]
		static fsTypeCache()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x169BA24", Offset = "0x169BA24", VA = "0x169BA24")]
		private static void OnAssemblyLoaded(object sender, AssemblyLoadEventArgs args)
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x169BB5C", Offset = "0x169BB5C", VA = "0x169BB5C")]
		private static bool TryDirectTypeLookup(string assemblyName, string typeName, out Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x169BCA0", Offset = "0x169BCA0", VA = "0x169BCA0")]
		private static bool TryIndirectTypeLookup(string typeName, out Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x169BF3C", Offset = "0x169BF3C", VA = "0x169BF3C")]
		public static void Reset()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x169B4BC", Offset = "0x169B4BC", VA = "0x169B4BC")]
		public static Type GetType(string name)
		{
			return null;
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x169BFE0", Offset = "0x169BFE0", VA = "0x169BFE0")]
		public static Type GetType(string name, string assemblyHint)
		{
			return null;
		}
	}
	[Token(Token = "0x2000216")]
	public class fsSerializationCallbackProcessor : fsObjectProcessor
	{
		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x1696B60", Offset = "0x1696B60", VA = "0x1696B60", Slot = "4")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x1696BF8", Offset = "0x1696BF8", VA = "0x1696BF8", Slot = "5")]
		public override void OnBeforeSerialize(Type storageType, object instance)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x1696D00", Offset = "0x1696D00", VA = "0x1696D00", Slot = "6")]
		public override void OnAfterSerialize(Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x1696E20", Offset = "0x1696E20", VA = "0x1696E20", Slot = "8")]
		public override void OnBeforeDeserializeAfterInstanceCreation(Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x1697024", Offset = "0x1697024", VA = "0x1697024", Slot = "9")]
		public override void OnAfterDeserialize(Type storageType, object instance)
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x1697130", Offset = "0x1697130", VA = "0x1697130")]
		public fsSerializationCallbackProcessor()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class fsSerializationCallbackReceiverProcessor : fsObjectProcessor
	{
		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x1697138", Offset = "0x1697138", VA = "0x1697138", Slot = "4")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x16971D0", Offset = "0x16971D0", VA = "0x16971D0", Slot = "5")]
		public override void OnBeforeSerialize(Type storageType, object instance)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x16972D0", Offset = "0x16972D0", VA = "0x16972D0", Slot = "9")]
		public override void OnAfterDeserialize(Type storageType, object instance)
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x16973D4", Offset = "0x16973D4", VA = "0x16973D4")]
		public fsSerializationCallbackReceiverProcessor()
		{
		}
	}
}
namespace FullSerializer.Internal.Converters
{
	[Token(Token = "0x2000218")]
	public class UnityEvent_Converter : fsConverter
	{
		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x135706C", Offset = "0x135706C", VA = "0x135706C", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x1357174", Offset = "0x1357174", VA = "0x1357174", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x135717C", Offset = "0x135717C", VA = "0x135717C", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x1357278", Offset = "0x1357278", VA = "0x1357278", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x1357318", Offset = "0x1357318", VA = "0x1357318")]
		public UnityEvent_Converter()
		{
		}
	}
}
namespace FullSerializer.Internal.DirectConverters
{
	[Token(Token = "0x2000219")]
	public class AnimationCurve_DirectConverter : fsDirectConverter<AnimationCurve>
	{
		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x13BF440", Offset = "0x13BF440", VA = "0x13BF440", Slot = "10")]
		protected override fsResult DoSerialize(AnimationCurve model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x13BF5F8", Offset = "0x13BF5F8", VA = "0x13BF5F8", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref AnimationCurve model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x13BF824", Offset = "0x13BF824", VA = "0x13BF824", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x13BF87C", Offset = "0x13BF87C", VA = "0x13BF87C")]
		public AnimationCurve_DirectConverter()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class Bounds_DirectConverter : fsDirectConverter<Bounds>
	{
		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x1202DB0", Offset = "0x1202DB0", VA = "0x1202DB0", Slot = "10")]
		protected override fsResult DoSerialize(Bounds model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x1202EE8", Offset = "0x1202EE8", VA = "0x1202EE8", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Bounds model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x120308C", Offset = "0x120308C", VA = "0x120308C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x12030E8", Offset = "0x12030E8", VA = "0x12030E8")]
		public Bounds_DirectConverter()
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class GUIStyleState_DirectConverter : fsDirectConverter<GUIStyleState>
	{
		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x2881068", Offset = "0x2881068", VA = "0x2881068", Slot = "10")]
		protected override fsResult DoSerialize(GUIStyleState model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x28811C0", Offset = "0x28811C0", VA = "0x28811C0", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref GUIStyleState model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x2881384", Offset = "0x2881384", VA = "0x2881384", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x28813DC", Offset = "0x28813DC", VA = "0x28813DC")]
		public GUIStyleState_DirectConverter()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class GUIStyle_DirectConverter : fsDirectConverter<GUIStyle>
	{
		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x2881428", Offset = "0x2881428", VA = "0x2881428", Slot = "10")]
		protected override fsResult DoSerialize(GUIStyle model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x2881EE8", Offset = "0x2881EE8", VA = "0x2881EE8", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref GUIStyle model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x2882D04", Offset = "0x2882D04", VA = "0x2882D04", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x2882D5C", Offset = "0x2882D5C", VA = "0x2882D5C")]
		public GUIStyle_DirectConverter()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class Gradient_DirectConverter : fsDirectConverter<Gradient>
	{
		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x10D4564", Offset = "0x10D4564", VA = "0x10D4564", Slot = "10")]
		protected override fsResult DoSerialize(Gradient model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x10D46C0", Offset = "0x10D46C0", VA = "0x10D46C0", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Gradient model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x10D4878", Offset = "0x10D4878", VA = "0x10D4878", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x10D48D0", Offset = "0x10D48D0", VA = "0x10D48D0")]
		public Gradient_DirectConverter()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class Keyframe_DirectConverter : fsDirectConverter<Keyframe>
	{
		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x101436C", Offset = "0x101436C", VA = "0x101436C", Slot = "10")]
		protected override fsResult DoSerialize(Keyframe model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x1014674", Offset = "0x1014674", VA = "0x1014674", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Keyframe model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x1014A4C", Offset = "0x1014A4C", VA = "0x1014A4C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x1014AB0", Offset = "0x1014AB0", VA = "0x1014AB0")]
		public Keyframe_DirectConverter()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public class LayerMask_DirectConverter : fsDirectConverter<LayerMask>
	{
		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x1014B80", Offset = "0x1014B80", VA = "0x1014B80", Slot = "10")]
		protected override fsResult DoSerialize(LayerMask model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x1014C68", Offset = "0x1014C68", VA = "0x1014C68", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref LayerMask model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x1014D7C", Offset = "0x1014D7C", VA = "0x1014D7C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x1014DCC", Offset = "0x1014DCC", VA = "0x1014DCC")]
		public LayerMask_DirectConverter()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public class RectOffset_DirectConverter : fsDirectConverter<RectOffset>
	{
		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x10918D4", Offset = "0x10918D4", VA = "0x10918D4", Slot = "10")]
		protected override fsResult DoSerialize(RectOffset model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x1091AD4", Offset = "0x1091AD4", VA = "0x1091AD4", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref RectOffset model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x1091D6C", Offset = "0x1091D6C", VA = "0x1091D6C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x1091DC4", Offset = "0x1091DC4", VA = "0x1091DC4")]
		public RectOffset_DirectConverter()
		{
		}
	}
	[Token(Token = "0x2000221")]
	public class Rect_DirectConverter : fsDirectConverter<Rect>
	{
		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x1091E10", Offset = "0x1091E10", VA = "0x1091E10", Slot = "10")]
		protected override fsResult DoSerialize(Rect model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x1092008", Offset = "0x1092008", VA = "0x1092008", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Rect model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x1092278", Offset = "0x1092278", VA = "0x1092278", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x10922D0", Offset = "0x10922D0", VA = "0x10922D0")]
		public Rect_DirectConverter()
		{
		}
	}
}
namespace UnityChan
{
	[Token(Token = "0x2000222")]
	public class AutoBlink : MonoBehaviour
	{
		[Token(Token = "0x2000223")]
		private enum Status
		{
			[Token(Token = "0x40009F3")]
			Close,
			[Token(Token = "0x40009F4")]
			HalfClose,
			[Token(Token = "0x40009F5")]
			Open
		}

		[Token(Token = "0x2000224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67AF0", Offset = "0xE67AF0")]
		private sealed class <RandomChange>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutoBlink <>4__this;

			[Token(Token = "0x17000164")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B41")]
				[Address(RVA = "0x169E97C", Offset = "0x169E97C", VA = "0x169E97C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000165")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B43")]
				[Address(RVA = "0x169E9C4", Offset = "0x169E9C4", VA = "0x169E9C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B3E")]
			[Address(RVA = "0x169E878", Offset = "0x169E878", VA = "0x169E878")]
			[DebuggerHidden]
			public <RandomChange>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6000B3F")]
			[Address(RVA = "0x169E8A4", Offset = "0x169E8A4", VA = "0x169E8A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B40")]
			[Address(RVA = "0x169E8A8", Offset = "0x169E8A8", VA = "0x169E8A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B42")]
			[Address(RVA = "0x169E984", Offset = "0x169E984", VA = "0x169E984", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinnedMeshRenderer ref_SMR_EYE_DEF;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SkinnedMeshRenderer ref_SMR_EL_DEF;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float ratio_Close;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float ratio_HalfClose;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public float ratio_Open;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool timerStarted;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool isBlink;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float timeBlink;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float timeRemining;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float threshold;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float interval;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Status eyeStatus;

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x13C14D8", Offset = "0x13C14D8", VA = "0x13C14D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x13C14DC", Offset = "0x13C14DC", VA = "0x13C14DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x13C1538", Offset = "0x13C1538", VA = "0x13C1538")]
		private void ResetTimer()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x13C1548", Offset = "0x13C1548", VA = "0x13C1548")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x13C15D4", Offset = "0x13C15D4", VA = "0x13C15D4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x13C1644", Offset = "0x13C1644", VA = "0x13C1644")]
		private void SetCloseEyes()
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x13C1690", Offset = "0x13C1690", VA = "0x13C1690")]
		private void SetHalfCloseEyes()
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x13C16DC", Offset = "0x13C16DC", VA = "0x13C16DC")]
		private void SetOpenEyes()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x13C1728", Offset = "0x13C1728", VA = "0x13C1728")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8D878", Offset = "0xE8D878")]
		private IEnumerator RandomChange()
		{
			return null;
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x13C17A0", Offset = "0x13C17A0", VA = "0x13C17A0")]
		public AutoBlink()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class IdleChanger : MonoBehaviour
	{
		[Token(Token = "0x2000226")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67B00", Offset = "0xE67B00")]
		private sealed class <RandomChange>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IdleChanger <>4__this;

			[Token(Token = "0x17000166")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B4C")]
				[Address(RVA = "0x10320C8", Offset = "0x10320C8", VA = "0x10320C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000167")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B4E")]
				[Address(RVA = "0x1032110", Offset = "0x1032110", VA = "0x1032110", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B49")]
			[Address(RVA = "0x1031F5C", Offset = "0x1031F5C", VA = "0x1031F5C")]
			[DebuggerHidden]
			public <RandomChange>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000B4A")]
			[Address(RVA = "0x1031F88", Offset = "0x1031F88", VA = "0x1031F88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B4B")]
			[Address(RVA = "0x1031F8C", Offset = "0x1031F8C", VA = "0x1031F8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0x10320D0", Offset = "0x10320D0", VA = "0x10320D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AnimatorStateInfo currentState;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private AnimatorStateInfo previousState;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool _random;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float _threshold;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float _interval;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool isGUI;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Animator UnityChanA;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Animator UnityChanB;

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x10DBE28", Offset = "0x10DBE28", VA = "0x10DBE28")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x10DBEDC", Offset = "0x10DBEDC", VA = "0x10DBEDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x10DC1B4", Offset = "0x10DC1B4", VA = "0x10DC1B4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x10DC3C8", Offset = "0x10DC3C8", VA = "0x10DC3C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8D928", Offset = "0xE8D928")]
		private IEnumerator RandomChange()
		{
			return null;
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x10DC440", Offset = "0x10DC440", VA = "0x10DC440")]
		public IdleChanger()
		{
		}
	}
}
namespace BoingKit
{
	[Token(Token = "0x2000227")]
	public class UFOController : MonoBehaviour
	{
		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float LinearThrust;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxLinearSpeed;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float LinearDrag;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Tilt;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AngularThrust;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MaxAngularSpeed;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float AngularDrag;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7CD10", Offset = "0xE7CD10")]
		public float Hover;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform Eyes;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float BlinkInterval;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_blinkTimer;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_lastBlinkWasDouble;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_eyeInitScale;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_eyeInitPositionLs;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3Spring m_eyeScaleSpring;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3Spring m_eyePositionLsSpring;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform Motor;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float MotorBaseAngularSpeed;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float MotorMaxAngularSpeed;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ParticleSystem BubbleEmitter;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float BubbleBaseEmissionRate;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float BubbleMaxEmissionRate;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 m_linearVelocity;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_angularVelocity;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float m_yawAngle;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 m_hoverCenter;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float m_hoverPhase;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float m_motorAngle;

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x1354B14", Offset = "0x1354B14", VA = "0x1354B14")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x1354CD8", Offset = "0x1354CD8", VA = "0x1354CD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x1354CDC", Offset = "0x1354CDC", VA = "0x1354CDC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x1355A88", Offset = "0x1355A88", VA = "0x1355A88")]
		public UFOController()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class BoingBehavior : MonoBehaviour
	{
		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoingManager.UpdateMode UpdateMode;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BoingManager.UpdateTiming UpdateTiming;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool TwoDDistanceCheck;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool TwoDPositionInfluence;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool TwoDRotationInfluence;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool EnablePositionEffect;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool EnableRotationEffect;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool GlobalReactionUpVector;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoingManager.TranslationLockSpace TranslationLockSpace;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool LockTranslationX;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool LockTranslationY;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool LockTranslationZ;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BoingWork.Params Params;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SharedBoingParams SharedParams;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal bool PositionSpringDirty;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
		internal bool RotationSpringDirty;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
		internal bool CachedTransformValid;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		internal Vector3 CachedPositionLs;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal Vector3 CachedPositionWs;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		internal Vector3 RenderPosition;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		internal Quaternion CachedRotationLs;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		internal Quaternion CachedRotationWs;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		internal Quaternion RenderRotation;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		internal bool InitRebooted;

		[Token(Token = "0x17000168")]
		public Vector3Spring PositionSpring
		{
			[Token(Token = "0x6000B53")]
			[Address(RVA = "0x13C3DB0", Offset = "0x13C3DB0", VA = "0x13C3DB0")]
			get
			{
				return default(Vector3Spring);
			}
			[Token(Token = "0x6000B54")]
			[Address(RVA = "0x13C3DBC", Offset = "0x13C3DBC", VA = "0x13C3DBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public QuaternionSpring RotationSpring
		{
			[Token(Token = "0x6000B55")]
			[Address(RVA = "0x13C3DD0", Offset = "0x13C3DD0", VA = "0x13C3DD0")]
			get
			{
				return default(QuaternionSpring);
			}
			[Token(Token = "0x6000B56")]
			[Address(RVA = "0x13C3DDC", Offset = "0x13C3DDC", VA = "0x13C3DDC")]
			set
			{
			}
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x13C3DF0", Offset = "0x13C3DF0", VA = "0x13C3DF0")]
		public BoingBehavior()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x13C3E2C", Offset = "0x13C3E2C", VA = "0x13C3E2C", Slot = "4")]
		public virtual void Reboot()
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x13C3F38", Offset = "0x13C3F38", VA = "0x13C3F38", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x13C3F4C", Offset = "0x13C3F4C", VA = "0x13C3F4C")]
		public void Start()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x13C3F54", Offset = "0x13C3F54", VA = "0x13C3F54", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x13C3F60", Offset = "0x13C3F60", VA = "0x13C3F60", Slot = "7")]
		protected virtual void Register()
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x13C4100", Offset = "0x13C4100", VA = "0x13C4100", Slot = "8")]
		protected virtual void Unregister()
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x13C42A8", Offset = "0x13C42A8", VA = "0x13C42A8")]
		public void UpdateFlags()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x13C442C", Offset = "0x13C442C", VA = "0x13C442C", Slot = "9")]
		public virtual void PrepareExecute()
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x13C4434", Offset = "0x13C4434", VA = "0x13C4434")]
		protected void PrepareExecute(bool accumulateEffectors)
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x13C4620", Offset = "0x13C4620", VA = "0x13C4620")]
		public void Execute(float dt)
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x13C462C", Offset = "0x13C462C", VA = "0x13C462C")]
		public void PullResults()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x13C47B0", Offset = "0x13C47B0", VA = "0x13C47B0")]
		public void GatherOutput(ref BoingWork.Output o)
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x13C4634", Offset = "0x13C4634", VA = "0x13C4634")]
		private void PullResults(ref BoingWork.Params p)
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x13C4864", Offset = "0x13C4864", VA = "0x13C4864", Slot = "10")]
		public virtual void Restore()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class BoingBoneCollider : MonoBehaviour
	{
		[Token(Token = "0x200022A")]
		public enum Type
		{
			[Token(Token = "0x4000A3D")]
			Sphere,
			[Token(Token = "0x4000A3E")]
			Capsule,
			[Token(Token = "0x4000A3F")]
			Box
		}

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type Shape;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Radius;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Height;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 Dimensions;

		[Token(Token = "0x1700016A")]
		public Bounds Bounds
		{
			[Token(Token = "0x6000B66")]
			[Address(RVA = "0x13C49FC", Offset = "0x13C49FC", VA = "0x13C49FC")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x13C4DD8", Offset = "0x13C4DD8", VA = "0x13C4DD8")]
		public bool Collide(Vector3 boneCenter, float boneRadius, out Vector3 push)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x13C51B4", Offset = "0x13C51B4", VA = "0x13C51B4")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x13C5220", Offset = "0x13C5220", VA = "0x13C5220")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x13C5224", Offset = "0x13C5224", VA = "0x13C5224")]
		public void DrawGizmos()
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x13C5898", Offset = "0x13C5898", VA = "0x13C5898")]
		public BoingBoneCollider()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class BoingBones : BoingReactor
	{
		[Serializable]
		[Token(Token = "0x200022C")]
		public class Bone
		{
			[Token(Token = "0x4000A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal BoingWork.Params.InstanceData Instance;

			[Token(Token = "0x4000A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			internal Transform Transform;

			[Token(Token = "0x4000A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			internal Vector3 ScaleWs;

			[Token(Token = "0x4000A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			internal Vector3 CachedScaleLs;

			[Token(Token = "0x4000A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			internal Vector3 BlendedPositionWs;

			[Token(Token = "0x4000A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			internal Vector3 BlendedScaleLs;

			[Token(Token = "0x4000A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			internal Vector3 CachedPositionWs;

			[Token(Token = "0x4000A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			internal Vector3 CachedPositionLs;

			[Token(Token = "0x4000A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			internal Bounds Bounds;

			[Token(Token = "0x4000A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			internal Quaternion RotationInverseWs;

			[Token(Token = "0x4000A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
			internal Quaternion SpringRotationWs;

			[Token(Token = "0x4000A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
			internal Quaternion SpringRotationInverseWs;

			[Token(Token = "0x4000A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
			internal Quaternion CachedRotationWs;

			[Token(Token = "0x4000A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
			internal Quaternion CachedRotationLs;

			[Token(Token = "0x4000A5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
			internal Quaternion BlendedRotationWs;

			[Token(Token = "0x4000A5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
			internal Quaternion RotationBackPropDeltaPs;

			[Token(Token = "0x4000A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
			internal int ParentIndex;

			[Token(Token = "0x4000A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
			internal int[] ChildIndices;

			[Token(Token = "0x4000A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
			internal float LengthFromRoot;

			[Token(Token = "0x4000A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
			internal float AnimationBlend;

			[Token(Token = "0x4000A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
			internal float LengthStiffness;

			[Token(Token = "0x4000A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
			internal float LengthStiffnessT;

			[Token(Token = "0x4000A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
			internal float FullyStiffToParentLength;

			[Token(Token = "0x4000A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
			internal float PoseStiffness;

			[Token(Token = "0x4000A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
			internal float BendAngleCap;

			[Token(Token = "0x4000A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
			internal float CollisionRadius;

			[Token(Token = "0x4000A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
			internal float SquashAndStretch;

			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0x169EA00", Offset = "0x169EA00", VA = "0x169EA00")]
			internal void UpdateBounds()
			{
			}

			[Token(Token = "0x6000B7C")]
			[Address(RVA = "0x169EA88", Offset = "0x169EA88", VA = "0x169EA88")]
			internal Bone(Transform transform, int iParent, float lengthFromRoot)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200022D")]
		public class Chain
		{
			[Token(Token = "0x200022E")]
			public enum CurveType
			{
				[Token(Token = "0x4000A87")]
				ConstantOne,
				[Token(Token = "0x4000A88")]
				ConstantHalf,
				[Token(Token = "0x4000A89")]
				ConstantZero,
				[Token(Token = "0x4000A8A")]
				RootOneTailHalf,
				[Token(Token = "0x4000A8B")]
				RootOneTailZero,
				[Token(Token = "0x4000A8C")]
				RootHalfTailOne,
				[Token(Token = "0x4000A8D")]
				RootZeroTailOne,
				[Token(Token = "0x4000A8E")]
				Custom
			}

			[Token(Token = "0x4000A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7CD54", Offset = "0xE7CD54")]
			public Transform Root;

			[Token(Token = "0x4000A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7CD8C", Offset = "0xE7CD8C")]
			public Transform[] Exclusion;

			[Token(Token = "0x4000A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7CDC4", Offset = "0xE7CDC4")]
			public bool EffectorReaction;

			[Token(Token = "0x4000A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7CDFC", Offset = "0xE7CDFC")]
			public bool LooseRoot;

			[Token(Token = "0x4000A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7CE34", Offset = "0xE7CE34")]
			public SharedBoingParams ParamsOverride;

			[Token(Token = "0x4000A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7CE6C", Offset = "0xE7CE6C")]
			public CurveType AnimationBlendCurveType;

			[Token(Token = "0x4000A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7CEF0", Offset = "0xE7CEF0")]
			public AnimationCurve AnimationBlendCustomCurve;

			[Token(Token = "0x4000A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7CFB0", Offset = "0xE7CFB0")]
			public CurveType LengthStiffnessCurveType;

			[Token(Token = "0x4000A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7D034", Offset = "0xE7D034")]
			public AnimationCurve LengthStiffnessCustomCurve;

			[Token(Token = "0x4000A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7D0F4", Offset = "0xE7D0F4")]
			public CurveType PoseStiffnessCurveType;

			[Token(Token = "0x4000A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7D178", Offset = "0xE7D178")]
			public AnimationCurve PoseStiffnessCustomCurve;

			[Token(Token = "0x4000A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7D238", Offset = "0xE7D238")]
			public float MaxBendAngleCap;

			[Token(Token = "0x4000A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7D2CC", Offset = "0xE7D2CC")]
			public CurveType BendAngleCapCurveType;

			[Token(Token = "0x4000A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7D350", Offset = "0xE7D350")]
			public AnimationCurve BendAngleCapCustomCurve;

			[Token(Token = "0x4000A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7D410", Offset = "0xE7D410")]
			public float MaxCollisionRadius;

			[Token(Token = "0x4000A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7D494", Offset = "0xE7D494")]
			public CurveType CollisionRadiusCurveType;

			[Token(Token = "0x4000A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7D518", Offset = "0xE7D518")]
			public AnimationCurve CollisionRadiusCustomCurve;

			[Token(Token = "0x4000A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7D5D8", Offset = "0xE7D5D8")]
			public bool EnableBoingKitCollision;

			[Token(Token = "0x4000A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
			[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7D65C", Offset = "0xE7D65C")]
			public bool EnableUnityCollision;

			[Token(Token = "0x4000A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
			[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7D6E0", Offset = "0xE7D6E0")]
			public bool EnableInterChainCollision;

			[Token(Token = "0x4000A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public Vector3 Gravity;

			[Token(Token = "0x4000A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			internal Bounds Bounds;

			[Token(Token = "0x4000A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7D764", Offset = "0xE7D764")]
			public CurveType SquashAndStretchCurveType;

			[Token(Token = "0x4000A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7D7E8", Offset = "0xE7D7E8")]
			public AnimationCurve SquashAndStretchCustomCurve;

			[Token(Token = "0x4000A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7D8A8", Offset = "0xE7D8A8")]
			public float MaxSquash;

			[Token(Token = "0x4000A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[AttributeAttribute(Name = "ConditionalFieldAttribute", RVA = "0xE7D93C", Offset = "0xE7D93C")]
			public float MaxStretch;

			[Token(Token = "0x4000A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			internal Transform m_scannedRoot;

			[Token(Token = "0x4000A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			internal Transform[] m_scannedExclusion;

			[Token(Token = "0x4000A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			internal float MaxLengthFromRoot;

			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0x169EBA0", Offset = "0x169EBA0", VA = "0x169EBA0")]
			public static float EvaluateCurve(CurveType type, float t, AnimationCurve curve)
			{
				return default(float);
			}

			[Token(Token = "0x6000B7E")]
			[Address(RVA = "0x169EC4C", Offset = "0x169EC4C", VA = "0x169EC4C")]
			public Chain()
			{
			}
		}

		[Token(Token = "0x200022F")]
		private class RescanEntry
		{
			[Token(Token = "0x4000A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Transform Transform;

			[Token(Token = "0x4000A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int ParentIndex;

			[Token(Token = "0x4000A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal float LengthFromRoot;

			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0x169EDB4", Offset = "0x169EDB4", VA = "0x169EDB4")]
			internal RescanEntry(Transform transform, int iParent, float lengthFromRoot)
			{
			}
		}

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		internal Bone[][] BoneData;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public Chain[] BoneChains;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7CD38", Offset = "0xE7CD38")]
		public float MaxCollisionResolutionSpeed;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public BoingBoneCollider[] BoingColliders;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public Collider[] UnityColliders;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public bool DebugDrawRawBones;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		public bool DebugDrawTargetBones;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E2")]
		public bool DebugDrawBoingBones;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E3")]
		public bool DebugDrawFinalBones;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public bool DebugDrawColliders;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E5")]
		public bool DebugDrawChainBounds;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E6")]
		public bool DebugDrawBoneNames;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E7")]
		public bool DebugDrawLengthFromRoot;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private float m_minScale;

		[Token(Token = "0x1700016B")]
		internal float MinScale
		{
			[Token(Token = "0x6000B75")]
			[Address(RVA = "0x13C6A34", Offset = "0x13C6A34", VA = "0x13C6A34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x13C58B8", Offset = "0x13C58B8", VA = "0x13C58B8", Slot = "7")]
		protected override void Register()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x13C5A58", Offset = "0x13C5A58", VA = "0x13C5A58", Slot = "8")]
		protected override void Unregister()
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x13C5C00", Offset = "0x13C5C00", VA = "0x13C5C00")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x13C6800", Offset = "0x13C6800", VA = "0x13C6800", Slot = "5")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x13C6844", Offset = "0x13C6844", VA = "0x13C6844", Slot = "6")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x13C5C24", Offset = "0x13C5C24", VA = "0x13C5C24")]
		public void RescanBoneChains()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x13C66A8", Offset = "0x13C66A8", VA = "0x13C66A8")]
		private void UpdateCollisionRadius()
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x13C69E0", Offset = "0x13C69E0", VA = "0x13C69E0", Slot = "4")]
		public override void Reboot()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x13C6878", Offset = "0x13C6878", VA = "0x13C6878")]
		public void Reboot(int iChain)
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x13C6A3C", Offset = "0x13C6A3C", VA = "0x13C6A3C", Slot = "9")]
		public override void PrepareExecute()
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x13C761C", Offset = "0x13C761C", VA = "0x13C761C")]
		public void AccumulateTarget(ref BoingEffector.Params effector, float dt)
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x13C77D0", Offset = "0x13C77D0", VA = "0x13C77D0")]
		public void EndAccumulateTargets()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x13C7928", Offset = "0x13C7928", VA = "0x13C7928", Slot = "10")]
		public override void Restore()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x13C7A64", Offset = "0x13C7A64", VA = "0x13C7A64")]
		public BoingBones()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class BoingEffector : MonoBehaviour
	{
		[Token(Token = "0x2000231")]
		public struct Params
		{
			[Token(Token = "0x4000A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly int Stride;

			[Token(Token = "0x4000A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 PrevPosition;

			[Token(Token = "0x4000AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private float m_padding0;

			[Token(Token = "0x4000AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 CurrPosition;

			[Token(Token = "0x4000AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float m_padding1;

			[Token(Token = "0x4000AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 LinearVelocityDir;

			[Token(Token = "0x4000AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float m_padding2;

			[Token(Token = "0x4000AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float Radius;

			[Token(Token = "0x4000AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float FullEffectRadius;

			[Token(Token = "0x4000AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float MoveDistance;

			[Token(Token = "0x4000AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float LinearImpulse;

			[Token(Token = "0x4000AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float RotateAngle;

			[Token(Token = "0x4000AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float AngularImpulse;

			[Token(Token = "0x4000AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Bits32 Bits;

			[Token(Token = "0x4000AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private int m_padding3;

			[Token(Token = "0x6000B87")]
			[Address(RVA = "0x169EE0C", Offset = "0x169EE0C", VA = "0x169EE0C")]
			public Params(BoingEffector effector)
			{
			}

			[Token(Token = "0x6000B88")]
			[Address(RVA = "0x169F068", Offset = "0x169F068", VA = "0x169F068")]
			public void Fill(BoingEffector effector)
			{
			}

			[Token(Token = "0x6000B89")]
			[Address(RVA = "0x169F0BC", Offset = "0x169F0BC", VA = "0x169F0BC")]
			private void SuppressWarnings()
			{
			}
		}

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7D9D0", Offset = "0xE7D9D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7D9D0", Offset = "0xE7D9D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7D9D0", Offset = "0xE7D9D0")]
		public float Radius;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DA48", Offset = "0xE7DA48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7DA48", Offset = "0xE7DA48")]
		public float FullEffectRadiusRatio;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7DA9C", Offset = "0xE7DA9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DA9C", Offset = "0xE7DA9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7DA9C", Offset = "0xE7DA9C")]
		public float MaxImpulseSpeed;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7DB18", Offset = "0xE7DB18")]
		public bool ContinuousMotion;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7DB50", Offset = "0xE7DB50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DB50", Offset = "0xE7DB50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7DB50", Offset = "0xE7DB50")]
		public float MoveDistance;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DBC8", Offset = "0xE7DBC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7DBC8", Offset = "0xE7DBC8")]
		public float LinearImpulse;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7DC24", Offset = "0xE7DC24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DC24", Offset = "0xE7DC24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7DC24", Offset = "0xE7DC24")]
		public float RotationAngle;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DCA4", Offset = "0xE7DCA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7DCA4", Offset = "0xE7DCA4")]
		public float AngularImpulse;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7DD00", Offset = "0xE7DD00")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7DD00", Offset = "0xE7DD00")]
		public bool DrawAffectedReactorFieldGizmos;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_currPosition;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_prevPosition;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_linearVelocity;

		[Token(Token = "0x1700016C")]
		public Vector3 LinearVelocity
		{
			[Token(Token = "0x6000B80")]
			[Address(RVA = "0x13C7B94", Offset = "0x13C7B94", VA = "0x13C7B94")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700016D")]
		public float LinearSpeed
		{
			[Token(Token = "0x6000B81")]
			[Address(RVA = "0x13C7BA0", Offset = "0x13C7BA0", VA = "0x13C7BA0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x13C7BAC", Offset = "0x13C7BAC", VA = "0x13C7BAC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x13C7DA0", Offset = "0x13C7DA0", VA = "0x13C7DA0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x13C7F48", Offset = "0x13C7F48", VA = "0x13C7F48")]
		public void Update()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x13C804C", Offset = "0x13C804C", VA = "0x13C804C")]
		public void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x13C8148", Offset = "0x13C8148", VA = "0x13C8148")]
		public BoingEffector()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public static class BoingExtensions
	{
		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x13C8170", Offset = "0x13C8170", VA = "0x13C8170")]
		public static BoingBehavior[] ToValuesArray(this Dictionary<int, BoingBehavior> map)
		{
			return null;
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x13C8348", Offset = "0x13C8348", VA = "0x13C8348")]
		public static BoingEffector[] ToValuesArray(this Dictionary<int, BoingEffector> map)
		{
			return null;
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x13C8520", Offset = "0x13C8520", VA = "0x13C8520")]
		public static BoingReactor[] ToValuesArray(this Dictionary<int, BoingReactor> map)
		{
			return null;
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x13C86F8", Offset = "0x13C86F8", VA = "0x13C86F8")]
		public static BoingReactorField[] ToValuesArray(this Dictionary<int, BoingReactorField> map)
		{
			return null;
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x13C88D0", Offset = "0x13C88D0", VA = "0x13C88D0")]
		public static BoingReactorFieldCPUSampler[] ToValuesArray(this Dictionary<int, BoingReactorFieldCPUSampler> map)
		{
			return null;
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x13C8AA8", Offset = "0x13C8AA8", VA = "0x13C8AA8")]
		public static BoingReactorFieldGPUSampler[] ToValuesArray(this Dictionary<int, BoingReactorFieldGPUSampler> map)
		{
			return null;
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x13C8C80", Offset = "0x13C8C80", VA = "0x13C8C80")]
		public static BoingBones[] ToValuesArray(this Dictionary<int, BoingBones> map)
		{
			return null;
		}
	}
	[Token(Token = "0x2000233")]
	public static class BoingKit
	{
		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int MajorVersion;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int MinorVersion;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int Revision;

		[Token(Token = "0x1700016E")]
		public static string Version
		{
			[Token(Token = "0x6000B92")]
			[Address(RVA = "0x13C8E58", Offset = "0x13C8E58", VA = "0x13C8E58")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x2000234")]
	public static class BoingManager
	{
		[Token(Token = "0x2000235")]
		public enum UpdateMode
		{
			[Token(Token = "0x4000ADE")]
			Update,
			[Token(Token = "0x4000ADF")]
			FixedUpdate
		}

		[Token(Token = "0x2000236")]
		public enum UpdateTiming
		{
			[Token(Token = "0x4000AE1")]
			Early,
			[Token(Token = "0x4000AE2")]
			Late
		}

		[Token(Token = "0x2000237")]
		public enum TranslationLockSpace
		{
			[Token(Token = "0x4000AE4")]
			Global,
			[Token(Token = "0x4000AE5")]
			Local
		}

		[Token(Token = "0x2000238")]
		public delegate void BehaviorRegisterDelegate(BoingBehavior behavior);

		[Token(Token = "0x2000239")]
		public delegate void BehaviorUnregisterDelegate(BoingBehavior behavior);

		[Token(Token = "0x200023A")]
		public delegate void EffectorRegisterDelegate(BoingEffector effector);

		[Token(Token = "0x200023B")]
		public delegate void EffectorUnregisterDelegate(BoingEffector effector);

		[Token(Token = "0x200023C")]
		public delegate void ReactorRegisterDelegate(BoingReactor reactor);

		[Token(Token = "0x200023D")]
		public delegate void ReactorUnregisterDelegate(BoingReactor reactor);

		[Token(Token = "0x200023E")]
		public delegate void ReactorFieldRegisterDelegate(BoingReactorField field);

		[Token(Token = "0x200023F")]
		public delegate void ReactorFieldUnregisterDelegate(BoingReactorField field);

		[Token(Token = "0x2000240")]
		public delegate void ReactorFieldCPUSamplerRegisterDelegate(BoingReactorFieldCPUSampler sampler);

		[Token(Token = "0x2000241")]
		public delegate void ReactorFieldCPUSamplerUnregisterDelegate(BoingReactorFieldCPUSampler sampler);

		[Token(Token = "0x2000242")]
		public delegate void ReactorFieldGPUSamplerRegisterDelegate(BoingReactorFieldGPUSampler sampler);

		[Token(Token = "0x2000243")]
		public delegate void ReactorFieldGPUSamplerUnregisterDelegate(BoingReactorFieldGPUSampler sampler);

		[Token(Token = "0x2000244")]
		public delegate void BonesRegisterDelegate(BoingBones bones);

		[Token(Token = "0x2000245")]
		public delegate void BonesUnregisterDelegate(BoingBones bones);

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BehaviorRegisterDelegate OnBehaviorRegister;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static BehaviorUnregisterDelegate OnBehaviorUnregister;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static EffectorRegisterDelegate OnEffectorRegister;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static EffectorUnregisterDelegate OnEffectorUnregister;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static ReactorRegisterDelegate OnReactorRegister;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static ReactorUnregisterDelegate OnReactorUnregister;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static ReactorFieldRegisterDelegate OnReactorFieldRegister;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static ReactorFieldUnregisterDelegate OnReactorFieldUnregister;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static ReactorFieldCPUSamplerRegisterDelegate OnReactorFieldCPUSamplerRegister;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static ReactorFieldCPUSamplerUnregisterDelegate OnReactorFieldCPUSamplerUnregister;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static ReactorFieldGPUSamplerRegisterDelegate OnReactorFieldGPUSamplerRegister;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static ReactorFieldGPUSamplerUnregisterDelegate OnFieldGPUSamplerUnregister;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static BonesRegisterDelegate OnBonesRegister;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static BonesUnregisterDelegate OnBonesUnregister;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static float s_deltaTime;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private static float s_fixedDeltaTime;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static int s_numFixedUpdateIterations;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static BoingBehavior[] s_behaviourArray;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static int s_behaviorCount;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private static BoingEffector[] s_effectorArray;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private static int s_effectorCount;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private static BoingReactor[] s_reactorArray;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private static int s_reactorCount;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private static BoingReactorField[] s_fieldArray;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private static int s_fieldCount;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private static BoingBones[] s_bonesArray;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private static int s_bonesCount;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private static BoingReactorFieldCPUSampler[] s_cpuSamplerArray;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private static int s_cpuSamplerCount;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private static BoingReactorFieldGPUSampler[] s_gpuSamplerArray;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private static int s_gpuSamplerCount;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private static Dictionary<int, BoingBehavior> s_behaviorMap;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private static Dictionary<int, BoingEffector> s_effectorMap;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private static Dictionary<int, BoingReactor> s_reactorMap;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private static Dictionary<int, BoingReactorField> s_fieldMap;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private static Dictionary<int, BoingReactorFieldCPUSampler> s_cpuSamplerMap;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private static Dictionary<int, BoingReactorFieldGPUSampler> s_gpuSamplerMap;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private static Dictionary<int, BoingBones> s_bonesMap;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private static readonly int kEffectorParamsIncrement;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private static List<BoingEffector.Params> s_effectorParamsList;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private static BoingEffector.Params[] s_aEffectorParams;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private static ComputeBuffer s_effectorParamsBuffer;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private static Dictionary<int, int> s_effectorParamsIndexMap;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal static readonly bool UseAsynchronousJobs;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal static GameObject s_managerGo;

		[Token(Token = "0x1700016F")]
		public static IEnumerable<BoingBehavior> Behaviors
		{
			[Token(Token = "0x6000B94")]
			[Address(RVA = "0x13C910C", Offset = "0x13C910C", VA = "0x13C910C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		public static IEnumerable<BoingReactor> Reactors
		{
			[Token(Token = "0x6000B95")]
			[Address(RVA = "0x13C9190", Offset = "0x13C9190", VA = "0x13C9190")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		public static IEnumerable<BoingEffector> Effectors
		{
			[Token(Token = "0x6000B96")]
			[Address(RVA = "0x13C9214", Offset = "0x13C9214", VA = "0x13C9214")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		public static IEnumerable<BoingReactorField> ReactorFields
		{
			[Token(Token = "0x6000B97")]
			[Address(RVA = "0x13C9298", Offset = "0x13C9298", VA = "0x13C9298")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		public static IEnumerable<BoingReactorFieldCPUSampler> ReactorFieldCPUSamlers
		{
			[Token(Token = "0x6000B98")]
			[Address(RVA = "0x13C931C", Offset = "0x13C931C", VA = "0x13C931C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		public static IEnumerable<BoingReactorFieldGPUSampler> ReactorFieldGPUSampler
		{
			[Token(Token = "0x6000B99")]
			[Address(RVA = "0x13C93A0", Offset = "0x13C93A0", VA = "0x13C93A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		public static float DeltaTime
		{
			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0x13C9424", Offset = "0x13C9424", VA = "0x13C9424")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000176")]
		public static float FixedDeltaTime
		{
			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0x13C9488", Offset = "0x13C9488", VA = "0x13C9488")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000177")]
		public static int NumFixedUpdateIterations
		{
			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0x13C94EC", Offset = "0x13C94EC", VA = "0x13C94EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000178")]
		internal static SphereCollider SharedSphereCollider
		{
			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0x13C9744", Offset = "0x13C9744", VA = "0x13C9744")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x13C9550", Offset = "0x13C9550", VA = "0x13C9550")]
		private static void ValidateManager()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x13C3FC0", Offset = "0x13C3FC0", VA = "0x13C3FC0")]
		internal static void Register(BoingBehavior behavior)
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x13C4160", Offset = "0x13C4160", VA = "0x13C4160")]
		internal static void Unregister(BoingBehavior behavior)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x13C7C60", Offset = "0x13C7C60", VA = "0x13C7C60")]
		internal static void Register(BoingEffector effector)
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x13C7E00", Offset = "0x13C7E00", VA = "0x13C7E00")]
		internal static void Unregister(BoingEffector effector)
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x13C9EE4", Offset = "0x13C9EE4", VA = "0x13C9EE4")]
		internal static void Register(BoingReactor reactor)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x13CA024", Offset = "0x13CA024", VA = "0x13CA024")]
		internal static void Unregister(BoingReactor reactor)
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x13CA16C", Offset = "0x13CA16C", VA = "0x13CA16C")]
		internal static void Register(BoingReactorField field)
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x13CA2AC", Offset = "0x13CA2AC", VA = "0x13CA2AC")]
		internal static void Unregister(BoingReactorField field)
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x13CA3F4", Offset = "0x13CA3F4", VA = "0x13CA3F4")]
		internal static void Register(BoingReactorFieldCPUSampler sampler)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x13CA530", Offset = "0x13CA530", VA = "0x13CA530")]
		internal static void Unregister(BoingReactorFieldCPUSampler sampler)
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x13CA678", Offset = "0x13CA678", VA = "0x13CA678")]
		internal static void Register(BoingReactorFieldGPUSampler sampler)
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x13CA7B8", Offset = "0x13CA7B8", VA = "0x13CA7B8")]
		internal static void Unregister(BoingReactorFieldGPUSampler sampler)
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x13C5918", Offset = "0x13C5918", VA = "0x13C5918")]
		internal static void Register(BoingBones bones)
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x13C5AB8", Offset = "0x13C5AB8", VA = "0x13C5AB8")]
		internal static void Unregister(BoingBones bones)
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x13C983C", Offset = "0x13C983C", VA = "0x13C983C")]
		private static void PreRegisterBehavior()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x13C9894", Offset = "0x13C9894", VA = "0x13C9894")]
		private static void PostUnregisterBehavior()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x13C9960", Offset = "0x13C9960", VA = "0x13C9960")]
		private static void PreRegisterEffectorReactor()
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x13C9C88", Offset = "0x13C9C88", VA = "0x13C9C88")]
		private static void PostUnregisterEffectorReactor()
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x13CA900", Offset = "0x13CA900", VA = "0x13CA900")]
		private static void PreRegisterBones()
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x13CA958", Offset = "0x13CA958", VA = "0x13CA958")]
		private static void PostUnregisterBones()
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x13CA95C", Offset = "0x13CA95C", VA = "0x13CA95C")]
		internal static void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x13CA9DC", Offset = "0x13CA9DC", VA = "0x13CA9DC")]
		internal static void Execute(UpdateTiming updateTiming)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x13CAFFC", Offset = "0x13CAFFC", VA = "0x13CAFFC")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8DA48", Offset = "0xE8DA48")]
		internal static void ExecuteBehaviors(UpdateTiming updateTiming)
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x13CB4EC", Offset = "0x13CB4EC", VA = "0x13CB4EC")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8DAC0", Offset = "0xE8DAC0")]
		internal static void PullBehaviorResults(UpdateTiming updateTiming)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x13CB5B8", Offset = "0x13CB5B8", VA = "0x13CB5B8")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8DB38", Offset = "0xE8DB38")]
		internal static void RestoreBehaviors()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x13CAAD0", Offset = "0x13CAAD0", VA = "0x13CAAD0")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8DBB0", Offset = "0xE8DBB0")]
		internal static void RefreshEffectorParams()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x13CB200", Offset = "0x13CB200", VA = "0x13CB200")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8DC28", Offset = "0xE8DC28")]
		internal static void ExecuteReactors(UpdateTiming updateTiming)
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x13CB670", Offset = "0x13CB670", VA = "0x13CB670")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8DCA0", Offset = "0xE8DCA0")]
		internal static void PullReactorResults(UpdateTiming updateTiming)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x13CB7BC", Offset = "0x13CB7BC", VA = "0x13CB7BC")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8DD18", Offset = "0xE8DD18")]
		internal static void RestoreReactors()
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x13CB8E4", Offset = "0x13CB8E4", VA = "0x13CB8E4")]
		internal static void DispatchReactorFieldCompute()
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x13CADF4", Offset = "0x13CADF4", VA = "0x13CADF4")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8DD90", Offset = "0xE8DD90")]
		internal static void ExecuteBones(UpdateTiming updateTiming)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x13CBDB0", Offset = "0x13CBDB0", VA = "0x13CBDB0")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8DE08", Offset = "0xE8DE08")]
		internal static void PullBonesResults(UpdateTiming updateTiming)
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x13CBF24", Offset = "0x13CBF24", VA = "0x13CBF24")]
		internal static void RestoreBones()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class BoingManagerPostUpdatePump : MonoBehaviour
	{
		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x13CC398", Offset = "0x13CC398", VA = "0x13CC398")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x13CC410", Offset = "0x13CC410", VA = "0x13CC410")]
		private bool TryDestroyDuplicate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x13CC518", Offset = "0x13CC518", VA = "0x13CC518")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x13CC58C", Offset = "0x13CC58C", VA = "0x13CC58C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x13CC61C", Offset = "0x13CC61C", VA = "0x13CC61C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x13CC6AC", Offset = "0x13CC6AC", VA = "0x13CC6AC")]
		public BoingManagerPostUpdatePump()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class BoingManagerPreUpdatePump : MonoBehaviour
	{
		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_lastPumpedFrame;

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x13CC6B4", Offset = "0x13CC6B4", VA = "0x13CC6B4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x13CC700", Offset = "0x13CC700", VA = "0x13CC700")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x13CC6B8", Offset = "0x13CC6B8", VA = "0x13CC6B8")]
		private void TryPump()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x13CC704", Offset = "0x13CC704", VA = "0x13CC704")]
		private void DoPump()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x13CC768", Offset = "0x13CC768", VA = "0x13CC768")]
		public BoingManagerPreUpdatePump()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class BoingReactor : BoingBehavior
	{
		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x13CC778", Offset = "0x13CC778", VA = "0x13CC778", Slot = "7")]
		protected override void Register()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x13CC7D8", Offset = "0x13CC7D8", VA = "0x13CC7D8", Slot = "8")]
		protected override void Unregister()
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x13C7614", Offset = "0x13C7614", VA = "0x13C7614", Slot = "9")]
		public override void PrepareExecute()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x13C7B58", Offset = "0x13C7B58", VA = "0x13C7B58")]
		public BoingReactor()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class BoingReactorField : MonoBehaviour
	{
		[Token(Token = "0x200024A")]
		public enum HardwareModeEnum
		{
			[Token(Token = "0x4000B1B")]
			CPU,
			[Token(Token = "0x4000B1C")]
			GPU
		}

		[Token(Token = "0x200024B")]
		public enum CellMoveModeEnum
		{
			[Token(Token = "0x4000B1E")]
			Follow,
			[Token(Token = "0x4000B1F")]
			WrapAround
		}

		[Token(Token = "0x200024C")]
		public enum FalloffModeEnum
		{
			[Token(Token = "0x4000B21")]
			None,
			[Token(Token = "0x4000B22")]
			Circle,
			[Token(Token = "0x4000B23")]
			Square
		}

		[Token(Token = "0x200024D")]
		public enum FalloffDimensionsEnum
		{
			[Token(Token = "0x4000B25")]
			XYZ,
			[Token(Token = "0x4000B26")]
			XY,
			[Token(Token = "0x4000B27")]
			XZ,
			[Token(Token = "0x4000B28")]
			YZ
		}

		[Token(Token = "0x200024E")]
		public class ShaderPropertyIdSet
		{
			[Token(Token = "0x4000B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int MoveParams;

			[Token(Token = "0x4000B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int WrapParams;

			[Token(Token = "0x4000B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int Effectors;

			[Token(Token = "0x4000B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int EffectorIndices;

			[Token(Token = "0x4000B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int ReactorParams;

			[Token(Token = "0x4000B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int ComputeFieldParams;

			[Token(Token = "0x4000B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int ComputeCells;

			[Token(Token = "0x4000B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int RenderFieldParams;

			[Token(Token = "0x4000B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int RenderCells;

			[Token(Token = "0x4000B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int PositionSampleMultiplier;

			[Token(Token = "0x4000B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int RotationSampleMultiplier;

			[Token(Token = "0x4000B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int PropagationParams;

			[Token(Token = "0x6000C31")]
			[Address(RVA = "0x16A25A8", Offset = "0x16A25A8", VA = "0x16A25A8")]
			public ShaderPropertyIdSet()
			{
			}
		}

		[Token(Token = "0x200024F")]
		private struct FieldParams
		{
			[Token(Token = "0x4000B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly int Stride;

			[Token(Token = "0x4000B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int CellsX;

			[Token(Token = "0x4000B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int CellsY;

			[Token(Token = "0x4000B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int CellsZ;

			[Token(Token = "0x4000B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int NumEffectors;

			[Token(Token = "0x4000B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int iCellBaseX;

			[Token(Token = "0x4000B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int iCellBaseY;

			[Token(Token = "0x4000B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int iCellBaseZ;

			[Token(Token = "0x4000B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int m_padding0;

			[Token(Token = "0x4000B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int FalloffMode;

			[Token(Token = "0x4000B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int FalloffDimensions;

			[Token(Token = "0x4000B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int PropagationDepth;

			[Token(Token = "0x4000B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int m_padding1;

			[Token(Token = "0x4000B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 GridCenter;

			[Token(Token = "0x4000B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float m_padding3;

			[Token(Token = "0x4000B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 UpWs;

			[Token(Token = "0x4000B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float m_padding2;

			[Token(Token = "0x4000B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 FieldPosition;

			[Token(Token = "0x4000B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float m_padding4;

			[Token(Token = "0x4000B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float FalloffRatio;

			[Token(Token = "0x4000B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float CellSize;

			[Token(Token = "0x4000B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float DeltaTime;

			[Token(Token = "0x4000B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private float m_padding5;

			[Token(Token = "0x6000C32")]
			[Address(RVA = "0x16A2538", Offset = "0x16A2538", VA = "0x16A2538")]
			private void SuppressWarnings()
			{
			}
		}

		[Token(Token = "0x2000250")]
		private class ComputeKernelId
		{
			[Token(Token = "0x4000B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int InitKernel;

			[Token(Token = "0x4000B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int MoveKernel;

			[Token(Token = "0x4000B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int WrapXKernel;

			[Token(Token = "0x4000B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int WrapYKernel;

			[Token(Token = "0x4000B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int WrapZKernel;

			[Token(Token = "0x4000B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int ExecuteKernel;

			[Token(Token = "0x6000C34")]
			[Address(RVA = "0x16A2530", Offset = "0x16A2530", VA = "0x16A2530")]
			public ComputeKernelId()
			{
			}
		}

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ShaderPropertyIdSet s_shaderPropertyId;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FieldParams m_fieldParams;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public HardwareModeEnum HardwareMode;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private HardwareModeEnum m_hardwareMode;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public CellMoveModeEnum CellMoveMode;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private CellMoveModeEnum m_cellMoveMode;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DD60", Offset = "0xE7DD60")]
		public float CellSize;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int CellsX;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int CellsY;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int CellsZ;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int m_cellsX;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int m_cellsY;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_cellsZ;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int m_iCellBaseX;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int m_iCellBaseY;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_iCellBaseZ;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public FalloffModeEnum FalloffMode;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DD7C", Offset = "0xE7DD7C")]
		public float FalloffRatio;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public FalloffDimensionsEnum FalloffDimensions;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public BoingEffector[] Effectors;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int m_numEffectors;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Aabb m_bounds;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public bool TwoDDistanceCheck;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		public bool TwoDPositionInfluence;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
		public bool TwoDRotationInfluence;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF7")]
		public bool EnablePositionEffect;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool EnableRotationEffect;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		public bool GlobalReactionUpVector;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public BoingWork.Params Params;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public SharedBoingParams SharedParams;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public bool EnablePropagation;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DD94", Offset = "0xE7DD94")]
		public float PositionPropagation;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DDAC", Offset = "0xE7DDAC")]
		public float RotationPropagation;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DDC4", Offset = "0xE7DDC4")]
		public int PropagationDepth;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public bool AnchorPropagationAtBorder;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly float kPropagationFactor;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private BoingWork.Params.InstanceData[,,] m_aCpuCell;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private ComputeShader m_shader;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private ComputeBuffer m_effectorIndexBuffer;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private ComputeBuffer m_reactorParamsBuffer;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private ComputeBuffer m_fieldParamsBuffer;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private ComputeBuffer m_cellsBuffer;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private int m_gpuResourceSetId;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ComputeKernelId s_computeKernelId;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private bool m_init;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private Vector3 m_gridCenter;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private Vector3 m_qPrevGridCenterNorm;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Vector3[] s_aCellOffset;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private bool m_cellBufferNeedsReset;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] s_aSqrtInv;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private BoingWork.Params[] s_aReactorParams;

		[Token(Token = "0x17000179")]
		public static ShaderPropertyIdSet ShaderPropertyId
		{
			[Token(Token = "0x6000C08")]
			[Address(RVA = "0x13CC838", Offset = "0x13CC838", VA = "0x13CC838")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		public int GpuResourceSetId
		{
			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0x13CCB48", Offset = "0x13CCB48", VA = "0x13CCB48")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x13CC918", Offset = "0x13CC918", VA = "0x13CC918")]
		public bool UpdateShaderConstants(MaterialPropertyBlock props, float positionSampleMultiplier = 1f, float rotationSampleMultiplier = 1f)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x13CCA30", Offset = "0x13CCA30", VA = "0x13CCA30")]
		public bool UpdateShaderConstants(Material material, float positionSampleMultiplier = 1f, float rotationSampleMultiplier = 1f)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x13CCB50", Offset = "0x13CCB50", VA = "0x13CCB50")]
		public BoingReactorField()
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x13CCC74", Offset = "0x13CCC74", VA = "0x13CCC74")]
		public void Reboot()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x13CCFAC", Offset = "0x13CCFAC", VA = "0x13CCFAC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x13CD014", Offset = "0x13CD014", VA = "0x13CD014")]
		public void Start()
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x13CD03C", Offset = "0x13CD03C", VA = "0x13CD03C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x13CD0B4", Offset = "0x13CD0B4", VA = "0x13CD0B4")]
		public void DisposeCpuResources()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x13CD0C8", Offset = "0x13CD0C8", VA = "0x13CD0C8")]
		public void DisposeGpuResources()
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x13CD19C", Offset = "0x13CD19C", VA = "0x13CD19C")]
		public bool SampleCpuGrid(Vector3 p, out Vector3 positionOffset, out Vector4 rotationOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x13CE260", Offset = "0x13CE260", VA = "0x13CE260")]
		private void UpdateFieldParamsGpu()
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x13CE5C4", Offset = "0x13CE5C4", VA = "0x13CE5C4")]
		private void UpdateFlags()
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x13CE738", Offset = "0x13CE738", VA = "0x13CE738")]
		public void UpdateBounds()
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x13CE7E0", Offset = "0x13CE7E0", VA = "0x13CE7E0")]
		public void PrepareExecute()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x13CE990", Offset = "0x13CE990", VA = "0x13CE990")]
		private void ValidateCpuResources()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x13CEBE8", Offset = "0x13CEBE8", VA = "0x13CEBE8")]
		private void ValidateGpuResources()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x13CFA18", Offset = "0x13CFA18", VA = "0x13CFA18")]
		private void FinishPrepareExecuteCpu()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x13CFBD4", Offset = "0x13CFBD4", VA = "0x13CFBD4")]
		private void FinishPrepareExecuteGpu()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x13CE970", Offset = "0x13CE970", VA = "0x13CE970")]
		public void Init()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x13CFC88", Offset = "0x13CFC88", VA = "0x13CFC88")]
		public void Sanitize()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x13CF650", Offset = "0x13CF650", VA = "0x13CF650")]
		public void HandleCellMove()
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x13D0400", Offset = "0x13D0400", VA = "0x13D0400")]
		private void InitPropagationCpu(ref BoingWork.Params.InstanceData data)
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x13D0444", Offset = "0x13D0444", VA = "0x13D0444")]
		private void PropagateSpringCpu(ref BoingWork.Params.InstanceData data, float dt)
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x13D05B4", Offset = "0x13D05B4", VA = "0x13D05B4")]
		private void ExtendPropagationBorder(ref BoingWork.Params.InstanceData data, float weight, int adjDeltaX, int adjDeltaY, int adjDeltaZ)
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x13D0698", Offset = "0x13D0698", VA = "0x13D0698")]
		private void AccumulatePropagationWeightedNeighbor(ref BoingWork.Params.InstanceData data, ref BoingWork.Params.InstanceData neighbor, float weight)
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x13D079C", Offset = "0x13D079C", VA = "0x13D079C")]
		private void GatherPropagation(ref BoingWork.Params.InstanceData data, float weightSum)
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x13D08A0", Offset = "0x13D08A0", VA = "0x13D08A0")]
		private void AnchorPropagationBorder(ref BoingWork.Params.InstanceData data)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x13D08E4", Offset = "0x13D08E4", VA = "0x13D08E4")]
		private void PropagateCpu(float dt)
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x13CFD64", Offset = "0x13CFD64", VA = "0x13CFD64")]
		private void WrapCpu(int deltaX, int deltaY, int deltaZ)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x13D01FC", Offset = "0x13D01FC", VA = "0x13D01FC")]
		private void WrapGpu(int deltaX, int deltaY, int deltaZ)
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x13D1084", Offset = "0x13D1084", VA = "0x13D1084")]
		public void ExecuteCpu(float dt)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x13CBA48", Offset = "0x13CBA48", VA = "0x13CBA48")]
		public void ExecuteGpu(float dt, ComputeBuffer effectorParamsBuffer, Dictionary<int, int> effectorParamsIndexMap)
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x13D13A0", Offset = "0x13D13A0", VA = "0x13D13A0")]
		public void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x13D13DC", Offset = "0x13D13DC", VA = "0x13D13DC")]
		private void DrawGizmos(bool drawEffectors)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x13D1CBC", Offset = "0x13D1CBC", VA = "0x13D1CBC")]
		private Vector3 GetGridCenter()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x13CCDF4", Offset = "0x13CCDF4", VA = "0x13CCDF4")]
		private Vector3 QuantizeNorm(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x13CE0DC", Offset = "0x13CE0DC", VA = "0x13CE0DC")]
		private Vector3 GetCellCenterOffset(int x, int y, int z)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x13CE17C", Offset = "0x13CE17C", VA = "0x13CE17C")]
		private void ResolveCellIndex(int x, int y, int z, int baseMult, out int resX, out int resY, out int resZ)
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class BoingReactorFieldCPUSampler : MonoBehaviour
	{
		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoingReactorField ReactorField;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7DDDC", Offset = "0xE7DDDC")]
		public BoingManager.UpdateTiming UpdateTiming;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DE14", Offset = "0xE7DE14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7DE14", Offset = "0xE7DE14")]
		public float PositionSampleMultiplier;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DE68", Offset = "0xE7DE68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7DE68", Offset = "0xE7DE68")]
		public float RotationSampleMultiplier;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_objPosition;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion m_objRotation;

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x11FEE58", Offset = "0x11FEE58", VA = "0x11FEE58")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x11FEEBC", Offset = "0x11FEEBC", VA = "0x11FEEBC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x11FEF20", Offset = "0x11FEF20", VA = "0x11FEF20")]
		public void SampleFromField()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x11FF118", Offset = "0x11FF118", VA = "0x11FF118")]
		public void Restore()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x11FF170", Offset = "0x11FF170", VA = "0x11FF170")]
		public BoingReactorFieldCPUSampler()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class BoingReactorFieldGPUSampler : MonoBehaviour
	{
		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoingReactorField ReactorField;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DEBC", Offset = "0xE7DEBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7DEBC", Offset = "0xE7DEBC")]
		public float PositionSampleMultiplier;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DF10", Offset = "0xE7DF10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7DF10", Offset = "0xE7DF10")]
		public float RotationSampleMultiplier;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MaterialPropertyBlock m_matProps;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_fieldResourceSetId;

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x11FF188", Offset = "0x11FF188", VA = "0x11FF188")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x11FF1EC", Offset = "0x11FF1EC", VA = "0x11FF1EC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x11FF250", Offset = "0x11FF250", VA = "0x11FF250")]
		public void Update()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x11FF518", Offset = "0x11FF518", VA = "0x11FF518")]
		public BoingReactorFieldGPUSampler()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public static class BoingWork
	{
		[Token(Token = "0x2000254")]
		public enum EffectorFlags
		{
			[Token(Token = "0x4000B5E")]
			ContinuousMotion
		}

		[Token(Token = "0x2000255")]
		public enum ReactorFlags
		{
			[Token(Token = "0x4000B60")]
			TwoDDistanceCheck,
			[Token(Token = "0x4000B61")]
			TwoDPositionInfluence,
			[Token(Token = "0x4000B62")]
			TwoDRotationInfluence,
			[Token(Token = "0x4000B63")]
			EnablePositionEffect,
			[Token(Token = "0x4000B64")]
			EnableRotationEffect,
			[Token(Token = "0x4000B65")]
			GlobalReactionUpVector,
			[Token(Token = "0x4000B66")]
			EnablePropagation,
			[Token(Token = "0x4000B67")]
			AnchorPropagationAtBorder,
			[Token(Token = "0x4000B68")]
			FixedUpdate,
			[Token(Token = "0x4000B69")]
			LateUpdateTiming
		}

		[Serializable]
		[Token(Token = "0x2000256")]
		public struct Params
		{
			[Token(Token = "0x2000257")]
			public struct InstanceData
			{
				[Token(Token = "0x4000B82")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly int Stride;

				[Token(Token = "0x4000B83")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public Vector3 PositionTarget;

				[Token(Token = "0x4000B84")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				private float m_padding0;

				[Token(Token = "0x4000B85")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Vector3 PositionOrigin;

				[Token(Token = "0x4000B86")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private float m_padding1;

				[Token(Token = "0x4000B87")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Vector4 RotationTarget;

				[Token(Token = "0x4000B88")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public Vector4 RotationOrigin;

				[Token(Token = "0x4000B89")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private int m_numEffectors;

				[Token(Token = "0x4000B8A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
				private int m_instantAccumulation;

				[Token(Token = "0x4000B8B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				private int m_padding2;

				[Token(Token = "0x4000B8C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
				private int m_padding3;

				[Token(Token = "0x4000B8D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				private Vector3 m_upWs;

				[Token(Token = "0x4000B8E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
				private float m_scale;

				[Token(Token = "0x4000B8F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
				public Vector3Spring PositionSpring;

				[Token(Token = "0x4000B90")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
				public QuaternionSpring RotationSpring;

				[Token(Token = "0x4000B91")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
				public Vector3 PositionPropagationWorkData;

				[Token(Token = "0x4000B92")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
				private float m_padding4;

				[Token(Token = "0x4000B93")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
				public Vector4 RotationPropagationWorkData;

				[Token(Token = "0x6000C48")]
				[Address(RVA = "0x216E478", Offset = "0x216E478", VA = "0x216E478")]
				public void Reset()
				{
				}

				[Token(Token = "0x6000C49")]
				[Address(RVA = "0x216E4D4", Offset = "0x216E4D4", VA = "0x216E4D4")]
				public void Reset(Vector3 position, bool instantAccumulation)
				{
				}

				[Token(Token = "0x6000C4A")]
				[Address(RVA = "0x216E53C", Offset = "0x216E53C", VA = "0x216E53C")]
				public void PrepareExecute(ref Params p, Vector3 position, Quaternion rotation, float scale, bool accumulateEffectors)
				{
				}

				[Token(Token = "0x6000C4B")]
				[Address(RVA = "0x216E714", Offset = "0x216E714", VA = "0x216E714")]
				public void PrepareExecute(ref Params p, Vector3 gridCenter, Quaternion gridRotation, Vector3 cellOffset)
				{
				}

				[Token(Token = "0x6000C4C")]
				[Address(RVA = "0x216E8C8", Offset = "0x216E8C8", VA = "0x216E8C8")]
				public void AccumulateTarget(ref Params p, ref BoingEffector.Params effector, float dt)
				{
				}

				[Token(Token = "0x6000C4D")]
				[Address(RVA = "0x216F24C", Offset = "0x216F24C", VA = "0x216F24C")]
				public void EndAccumulateTargets(ref Params p)
				{
				}

				[Token(Token = "0x6000C4E")]
				[Address(RVA = "0x216F380", Offset = "0x216F380", VA = "0x216F380")]
				public void Execute(ref Params p, float dt)
				{
				}

				[Token(Token = "0x6000C4F")]
				[Address(RVA = "0x216F7E8", Offset = "0x216F7E8", VA = "0x216F7E8")]
				public void PullResults(BoingBones bones)
				{
				}

				[Token(Token = "0x6000C50")]
				[Address(RVA = "0x2170000", Offset = "0x2170000", VA = "0x2170000")]
				private void SuppressWarnings()
				{
				}
			}

			[Token(Token = "0x4000B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly int Stride;

			[Token(Token = "0x4000B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int InstanceID;

			[Token(Token = "0x4000B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Bits32 Bits;

			[Token(Token = "0x4000B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TwoDPlaneEnum TwoDPlane;

			[Token(Token = "0x4000B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private int m_padding0;

			[Token(Token = "0x4000B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ParameterMode PositionParameterMode;

			[Token(Token = "0x4000B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ParameterMode RotationParameterMode;

			[Token(Token = "0x4000B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int m_padding1;

			[Token(Token = "0x4000B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_padding2;

			[Token(Token = "0x4000B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DF64", Offset = "0xE7DF64")]
			public float PositionExponentialHalfLife;

			[Token(Token = "0x4000B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DF7C", Offset = "0xE7DF7C")]
			public float PositionOscillationHalfLife;

			[Token(Token = "0x4000B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DF94", Offset = "0xE7DF94")]
			public float PositionOscillationFrequency;

			[Token(Token = "0x4000B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DFAC", Offset = "0xE7DFAC")]
			public float PositionOscillationDampingRatio;

			[Token(Token = "0x4000B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DFC4", Offset = "0xE7DFC4")]
			public float MoveReactionMultiplier;

			[Token(Token = "0x4000B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DFDC", Offset = "0xE7DFDC")]
			public float LinearImpulseMultiplier;

			[Token(Token = "0x4000B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7DFF4", Offset = "0xE7DFF4")]
			public float RotationExponentialHalfLife;

			[Token(Token = "0x4000B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7E00C", Offset = "0xE7E00C")]
			public float RotationOscillationHalfLife;

			[Token(Token = "0x4000B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7E024", Offset = "0xE7E024")]
			public float RotationOscillationFrequency;

			[Token(Token = "0x4000B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7E03C", Offset = "0xE7E03C")]
			public float RotationOscillationDampingRatio;

			[Token(Token = "0x4000B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7E054", Offset = "0xE7E054")]
			public float RotationReactionMultiplier;

			[Token(Token = "0x4000B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7E06C", Offset = "0xE7E06C")]
			public float AngularImpulseMultiplier;

			[Token(Token = "0x4000B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 RotationReactionUp;

			[Token(Token = "0x4000B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private float m_padding3;

			[Token(Token = "0x4000B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public InstanceData Instance;

			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0x16A29EC", Offset = "0x16A29EC", VA = "0x16A29EC")]
			public static void Copy(ref Params from, ref Params to)
			{
			}

			[Token(Token = "0x6000C40")]
			[Address(RVA = "0x16A2A60", Offset = "0x16A2A60", VA = "0x16A2A60")]
			public void Init()
			{
			}

			[Token(Token = "0x6000C41")]
			[Address(RVA = "0x16A2ABC", Offset = "0x16A2ABC", VA = "0x16A2ABC")]
			public void AccumulateTarget(ref BoingEffector.Params effector, float dt)
			{
			}

			[Token(Token = "0x6000C42")]
			[Address(RVA = "0x16A2AD4", Offset = "0x16A2AD4", VA = "0x16A2AD4")]
			public void EndAccumulateTargets()
			{
			}

			[Token(Token = "0x6000C43")]
			[Address(RVA = "0x16A2AE4", Offset = "0x16A2AE4", VA = "0x16A2AE4")]
			public void Execute(float dt)
			{
			}

			[Token(Token = "0x6000C44")]
			[Address(RVA = "0x16A2AF4", Offset = "0x16A2AF4", VA = "0x16A2AF4")]
			public void Execute(BoingBones bones, float dt)
			{
			}

			[Token(Token = "0x6000C45")]
			[Address(RVA = "0x16A39D8", Offset = "0x16A39D8", VA = "0x16A39D8")]
			public void PullResults(BoingBones bones)
			{
			}

			[Token(Token = "0x6000C46")]
			[Address(RVA = "0x16A39E4", Offset = "0x16A39E4", VA = "0x16A39E4")]
			private void SuppressWarnings()
			{
			}
		}

		[Token(Token = "0x2000258")]
		public struct Output
		{
			[Token(Token = "0x4000B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly int Stride;

			[Token(Token = "0x4000B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int InstanceID;

			[Token(Token = "0x4000B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int m_padding0;

			[Token(Token = "0x4000B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int m_padding1;

			[Token(Token = "0x4000B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int m_padding2;

			[Token(Token = "0x4000B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3Spring PositionSpring;

			[Token(Token = "0x4000B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public QuaternionSpring RotationSpring;

			[Token(Token = "0x6000C52")]
			[Address(RVA = "0x16A2794", Offset = "0x16A2794", VA = "0x16A2794")]
			public Output(int instanceID, ref Vector3Spring positionSpring, ref QuaternionSpring rotationSpring)
			{
			}

			[Token(Token = "0x6000C53")]
			[Address(RVA = "0x16A27B0", Offset = "0x16A27B0", VA = "0x16A27B0")]
			public void GatherOutput(Dictionary<int, BoingBehavior> behaviorMap, BoingManager.UpdateTiming updateTiming)
			{
			}

			[Token(Token = "0x6000C54")]
			[Address(RVA = "0x16A2864", Offset = "0x16A2864", VA = "0x16A2864")]
			public void GatherOutput(Dictionary<int, BoingReactor> reactorMap, BoingManager.UpdateTiming updateTiming)
			{
			}

			[Token(Token = "0x6000C55")]
			[Address(RVA = "0x16A2918", Offset = "0x16A2918", VA = "0x16A2918")]
			private void SuppressWarnings()
			{
			}
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x11FF530", Offset = "0x11FF530", VA = "0x11FF530")]
		internal static Vector3 ComputeTranslationalResults(Transform t, Vector3 src, Vector3 dst, BoingBehavior b)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000259")]
	public static class BoingWorkAsynchronous
	{
		[Token(Token = "0x200025A")]
		[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0xE67B20", Offset = "0xE67B20")]
		private struct BehaviorJob : IJobParallelFor
		{
			[Token(Token = "0x4000BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NativeArray<BoingWork.Params> Params;

			[Token(Token = "0x4000BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NativeArray<BoingWork.Output> Output;

			[Token(Token = "0x4000BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float DeltaTime;

			[Token(Token = "0x4000BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float FixedDeltaTime;

			[Token(Token = "0x4000BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int NumFixedUpdateIterations;

			[Token(Token = "0x4000BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool LateUpdateTiming;

			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0x16A3A7C", Offset = "0x16A3A7C", VA = "0x16A3A7C", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x200025B")]
		private struct ReactorJob : IJobParallelFor
		{
			[Token(Token = "0x4000BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Unity.Collections.ReadOnly]
			public NativeArray<BoingEffector.Params> Effectors;

			[Token(Token = "0x4000BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NativeArray<BoingWork.Params> Params;

			[Token(Token = "0x4000BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NativeArray<BoingWork.Output> Output;

			[Token(Token = "0x4000BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float DeltaTime;

			[Token(Token = "0x4000BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float FixedDeltaTime;

			[Token(Token = "0x4000BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int NumFixedUpdateIterations;

			[Token(Token = "0x4000BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool LateUpdateTiming;

			[Token(Token = "0x6000C5F")]
			[Address(RVA = "0x16A3BB4", Offset = "0x16A3BB4", VA = "0x16A3BB4", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_behaviorJobNeedsGather;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static JobHandle s_hBehaviorJob;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static NativeArray<BoingWork.Params> s_aBehaviorParams;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NativeArray<BoingWork.Output> s_aBehaviorOutput;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool s_reactorJobNeedsGather;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static JobHandle s_hReactorJob;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static NativeArray<BoingEffector.Params> s_aEffectors;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static NativeArray<BoingWork.Params> s_aReactorExecParams;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static NativeArray<BoingWork.Output> s_aReactorExecOutput;

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x11FF6B8", Offset = "0x11FF6B8", VA = "0x11FF6B8")]
		internal static void PostUnregisterBehaviorCleanUp()
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x11FF7A4", Offset = "0x11FF7A4", VA = "0x11FF7A4")]
		internal static void PostUnregisterEffectorReactorCleanUp()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x11FF8B8", Offset = "0x11FF8B8", VA = "0x11FF8B8")]
		internal static void ExecuteBehaviors(Dictionary<int, BoingBehavior> behaviorMap, BoingBehavior[] behaviorArray, BoingManager.UpdateTiming updateTiming)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x11FFD94", Offset = "0x11FFD94", VA = "0x11FFD94")]
		internal static void ExecuteReactors(Dictionary<int, BoingEffector> effectorMap, Dictionary<int, BoingReactor> reactorMap, Dictionary<int, BoingReactorField> fieldMap, Dictionary<int, BoingReactorFieldCPUSampler> cpuSamplerMap, BoingManager.UpdateTiming updateTiming)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x120085C", Offset = "0x120085C", VA = "0x120085C")]
		internal static void ExecuteBones(BoingEffector.Params[] aEffectorParams, Dictionary<int, BoingBones> bonesMap, BoingManager.UpdateTiming updateTiming)
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x1200C3C", Offset = "0x1200C3C", VA = "0x1200C3C")]
		internal static void PullBonesResults(BoingEffector.Params[] aEffectorParams, Dictionary<int, BoingBones> bonesMap, BoingManager.UpdateTiming updateTiming)
		{
		}
	}
	[Token(Token = "0x200025C")]
	internal static class BoingWorkSynchronous
	{
		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x1200D8C", Offset = "0x1200D8C", VA = "0x1200D8C")]
		internal static void ExecuteBehaviors(Dictionary<int, BoingBehavior> behaviorMap, BoingManager.UpdateTiming updateTiming)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x1201028", Offset = "0x1201028", VA = "0x1201028")]
		internal static void ExecuteReactors(BoingEffector.Params[] aEffectorParams, Dictionary<int, BoingReactor> reactorMap, Dictionary<int, BoingReactorField> fieldMap, Dictionary<int, BoingReactorFieldCPUSampler> cpuSamplerMap, BoingManager.UpdateTiming updateTiming)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x1201600", Offset = "0x1201600", VA = "0x1201600")]
		internal static void ExecuteBones(BoingEffector.Params[] aEffectorParams, Dictionary<int, BoingBones> bonesMap, BoingManager.UpdateTiming updateTiming)
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x12019E0", Offset = "0x12019E0", VA = "0x12019E0")]
		internal static void PullBonesResults(BoingEffector.Params[] aEffectorParams, Dictionary<int, BoingBones> bonesMap, BoingManager.UpdateTiming updateTiming)
		{
		}
	}
	[Token(Token = "0x200025D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE67B30", Offset = "0xE67B30")]
	public class SharedBoingParams : ScriptableObject
	{
		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoingWork.Params Params;

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x32DC054", Offset = "0x32DC054", VA = "0x32DC054")]
		public SharedBoingParams()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public enum ParameterMode
	{
		[Token(Token = "0x4000BB3")]
		Exponential,
		[Token(Token = "0x4000BB4")]
		OscillationByHalfLife,
		[Token(Token = "0x4000BB5")]
		OscillationByDampingRatio
	}
	[Token(Token = "0x200025F")]
	public enum TwoDPlaneEnum
	{
		[Token(Token = "0x4000BB7")]
		XY,
		[Token(Token = "0x4000BB8")]
		XZ,
		[Token(Token = "0x4000BB9")]
		YZ
	}
	[Token(Token = "0x2000260")]
	public struct Aabb
	{
		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Min;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 Max;

		[Token(Token = "0x1700017B")]
		public float MinX
		{
			[Token(Token = "0x6000C65")]
			[Address(RVA = "0x13BB9F8", Offset = "0x13BB9F8", VA = "0x13BB9F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C66")]
			[Address(RVA = "0x13BBA00", Offset = "0x13BBA00", VA = "0x13BBA00")]
			set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		public float MinY
		{
			[Token(Token = "0x6000C67")]
			[Address(RVA = "0x13BBA08", Offset = "0x13BBA08", VA = "0x13BBA08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C68")]
			[Address(RVA = "0x13BBA10", Offset = "0x13BBA10", VA = "0x13BBA10")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public float MinZ
		{
			[Token(Token = "0x6000C69")]
			[Address(RVA = "0x13BBA18", Offset = "0x13BBA18", VA = "0x13BBA18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0x13BBA20", Offset = "0x13BBA20", VA = "0x13BBA20")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public float MaxX
		{
			[Token(Token = "0x6000C6B")]
			[Address(RVA = "0x13BBA28", Offset = "0x13BBA28", VA = "0x13BBA28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C6C")]
			[Address(RVA = "0x13BBA30", Offset = "0x13BBA30", VA = "0x13BBA30")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public float MaxY
		{
			[Token(Token = "0x6000C6D")]
			[Address(RVA = "0x13BBA38", Offset = "0x13BBA38", VA = "0x13BBA38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C6E")]
			[Address(RVA = "0x13BBA40", Offset = "0x13BBA40", VA = "0x13BBA40")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public float MaxZ
		{
			[Token(Token = "0x6000C6F")]
			[Address(RVA = "0x13BBA48", Offset = "0x13BBA48", VA = "0x13BBA48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C70")]
			[Address(RVA = "0x13BBA50", Offset = "0x13BBA50", VA = "0x13BBA50")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public Vector3 Center
		{
			[Token(Token = "0x6000C71")]
			[Address(RVA = "0x13BBA58", Offset = "0x13BBA58", VA = "0x13BBA58")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000182")]
		public Vector3 Size
		{
			[Token(Token = "0x6000C72")]
			[Address(RVA = "0x13BBA88", Offset = "0x13BBA88", VA = "0x13BBA88")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000183")]
		public static Aabb Empty
		{
			[Token(Token = "0x6000C73")]
			[Address(RVA = "0x13BBB00", Offset = "0x13BBB00", VA = "0x13BBB00")]
			get
			{
				return default(Aabb);
			}
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x13BBB28", Offset = "0x13BBB28", VA = "0x13BBB28")]
		public static Aabb FromPoints(params Vector3[] aPoint)
		{
			return default(Aabb);
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x13BBB18", Offset = "0x13BBB18", VA = "0x13BBB18")]
		public Aabb(Vector3 min, Vector3 max)
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x13BBBE4", Offset = "0x13BBBE4", VA = "0x13BBBE4")]
		public void Include(Vector3 p)
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x13BBCAC", Offset = "0x13BBCAC", VA = "0x13BBCAC")]
		public bool Contains(Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x13BBD00", Offset = "0x13BBD00", VA = "0x13BBD00")]
		public bool ContainsX(Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x13BBD24", Offset = "0x13BBD24", VA = "0x13BBD24")]
		public bool ContainsY(Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x13BBD48", Offset = "0x13BBD48", VA = "0x13BBD48")]
		public bool ContainsZ(Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x13BBD6C", Offset = "0x13BBD6C", VA = "0x13BBD6C")]
		public bool Intersects(Aabb rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x13BBDD8", Offset = "0x13BBDD8", VA = "0x13BBDD8")]
		public bool Intersects(ref BoingEffector.Params effector)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x13BBF54", Offset = "0x13BBF54", VA = "0x13BBF54")]
		public Aabb Expand(float amount)
		{
			return default(Aabb);
		}
	}
	[Serializable]
	[Token(Token = "0x2000261")]
	public struct Bits32
	{
		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int m_bits;

		[Token(Token = "0x17000184")]
		public int IntValue
		{
			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0x13C2E00", Offset = "0x13C2E00", VA = "0x13C2E00")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x13C2E08", Offset = "0x13C2E08", VA = "0x13C2E08")]
		public Bits32(int bits = 0)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x13C2E10", Offset = "0x13C2E10", VA = "0x13C2E10")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x13C2E18", Offset = "0x13C2E18", VA = "0x13C2E18")]
		public void SetBit(int index, bool value)
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x13C2E3C", Offset = "0x13C2E3C", VA = "0x13C2E3C")]
		public void SetBit(Enum index, bool value)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x13BBF3C", Offset = "0x13BBF3C", VA = "0x13BBF3C")]
		public bool IsBitSet(int index)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000262")]
	public struct BitArray
	{
		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int[] m_aBlock;

		[Token(Token = "0x17000185")]
		public int[] Blocks
		{
			[Token(Token = "0x6000C84")]
			[Address(RVA = "0x13C2AD8", Offset = "0x13C2AD8", VA = "0x13C2AD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x13C2AE0", Offset = "0x13C2AE0", VA = "0x13C2AE0")]
		private static int GetBlockIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x13C2AF4", Offset = "0x13C2AF4", VA = "0x13C2AF4")]
		private static int GetSubIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x13C2B0C", Offset = "0x13C2B0C", VA = "0x13C2B0C")]
		private static void SetBit(int index, bool value, int[] blocks)
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x13C2B78", Offset = "0x13C2B78", VA = "0x13C2B78")]
		private static bool IsBitSet(int index, int[] blocks)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x13C2BD4", Offset = "0x13C2BD4", VA = "0x13C2BD4")]
		public BitArray(int capacity)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x13C2C60", Offset = "0x13C2C60", VA = "0x13C2C60")]
		public void Resize(int capacity)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x13C2C58", Offset = "0x13C2C58", VA = "0x13C2C58")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x13C2D68", Offset = "0x13C2D68", VA = "0x13C2D68")]
		public void SetAllBits(bool value)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x13C2DD8", Offset = "0x13C2DD8", VA = "0x13C2DD8")]
		public void SetBit(int index, bool value)
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x13C2DF0", Offset = "0x13C2DF0", VA = "0x13C2DF0")]
		public bool IsBitSet(int index)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000263")]
	public class Collision
	{
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x120B4A4", Offset = "0x120B4A4", VA = "0x120B4A4")]
		public static bool SphereSphere(Vector3 centerA, float radiusA, Vector3 centerB, float radiusB, out Vector3 push)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x120B644", Offset = "0x120B644", VA = "0x120B644")]
		public static bool SphereSphereInverse(Vector3 centerA, float radiusA, Vector3 centerB, float radiusB, out Vector3 push)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x120B7E4", Offset = "0x120B7E4", VA = "0x120B7E4")]
		public static bool SphereCapsule(Vector3 centerA, float radiusA, Vector3 headB, Vector3 tailB, float radiusB, out Vector3 push)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x120B9B4", Offset = "0x120B9B4", VA = "0x120B9B4")]
		public static bool SphereCapsuleInverse(Vector3 centerA, float radiusA, Vector3 headB, Vector3 tailB, float radiusB, out Vector3 push)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x120BB7C", Offset = "0x120BB7C", VA = "0x120BB7C")]
		public static bool SphereBox(Vector3 centerOffsetA, float radiusA, Vector3 halfExtentB, out Vector3 push)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x120BE94", Offset = "0x120BE94", VA = "0x120BE94")]
		public static bool SphereBoxInverse(Vector3 centerOffsetA, float radiusA, Vector3 halfExtentB, out Vector3 push)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x120BEC4", Offset = "0x120BEC4", VA = "0x120BEC4")]
		public Collision()
		{
		}
	}
	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE67B9C", Offset = "0xE67B9C")]
	public class ConditionalFieldAttribute : UnityEngine.PropertyAttribute
	{
		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string PropertyToCheck;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object CompareValue;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public object CompareValue2;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public object CompareValue3;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public object CompareValue4;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public object CompareValue5;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public object CompareValue6;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string Label;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string Tooltip;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float Min;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float Max;

		[Token(Token = "0x17000186")]
		public bool ShowRange
		{
			[Token(Token = "0x6000C96")]
			[Address(RVA = "0xFF85A4", Offset = "0xFF85A4", VA = "0xFF85A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xFF85B4", Offset = "0xFF85B4", VA = "0xFF85B4")]
		public ConditionalFieldAttribute([Optional] string propertyToCheck, [Optional] object compareValue, [Optional] object compareValue2, [Optional] object compareValue3, [Optional] object compareValue4, [Optional] object compareValue5, [Optional] object compareValue6)
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class MathUtil
	{
		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly float Pi;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly float TwoPi;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly float HalfPi;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly float QuaterPi;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly float SixthPi;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly float Sqrt2;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly float Sqrt2Inv;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly float Sqrt3;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly float Sqrt3Inv;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly float Epsilon;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly float Rad2Deg;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static readonly float Deg2Rad;

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x1140930", Offset = "0x1140930", VA = "0x1140930")]
		public static float AsinSafe(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x1140950", Offset = "0x1140950", VA = "0x1140950")]
		public static float AcosSafe(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x1140970", Offset = "0x1140970", VA = "0x1140970")]
		public static float InvSafe(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x11409F4", Offset = "0x11409F4", VA = "0x11409F4")]
		public static float PointLineDist(Vector2 point, Vector2 linePos, Vector2 lineDir)
		{
			return default(float);
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x1140A40", Offset = "0x1140A40", VA = "0x1140A40")]
		public static float PointSegmentDist(Vector2 point, Vector2 segmentPosA, Vector2 segmentPosB)
		{
			return default(float);
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x1140AF4", Offset = "0x1140AF4", VA = "0x1140AF4")]
		public static float Seek(float current, float target, float maxDelta)
		{
			return default(float);
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x1140B48", Offset = "0x1140B48", VA = "0x1140B48")]
		public static Vector2 Seek(Vector2 current, Vector2 target, float maxDelta)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x1140C38", Offset = "0x1140C38", VA = "0x1140C38")]
		public static float Remainder(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x1140C48", Offset = "0x1140C48", VA = "0x1140C48")]
		public static int Remainder(int a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x1140C54", Offset = "0x1140C54", VA = "0x1140C54")]
		public static float Modulo(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x1140C5C", Offset = "0x1140C5C", VA = "0x1140C5C")]
		public static int Modulo(int a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x1140C70", Offset = "0x1140C70", VA = "0x1140C70")]
		public MathUtil()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class QuaternionUtil
	{
		[Token(Token = "0x2000267")]
		public enum SterpMode
		{
			[Token(Token = "0x4000BD6")]
			Nlerp,
			[Token(Token = "0x4000BD7")]
			Slerp
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x1090474", Offset = "0x1090474", VA = "0x1090474")]
		public static float Magnitude(Quaternion q)
		{
			return default(float);
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x10904A8", Offset = "0x10904A8", VA = "0x10904A8")]
		public static float MagnitudeSqr(Quaternion q)
		{
			return default(float);
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x10904C8", Offset = "0x10904C8", VA = "0x10904C8")]
		public static Quaternion Normalize(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x1090560", Offset = "0x1090560", VA = "0x1090560")]
		public static Quaternion AxisAngle(Vector3 axis, float angle)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x10905E0", Offset = "0x10905E0", VA = "0x10905E0")]
		public static Vector3 GetAxis(Quaternion q)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x10906A8", Offset = "0x10906A8", VA = "0x10906A8")]
		public static float GetAngle(Quaternion q)
		{
			return default(float);
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x10906D4", Offset = "0x10906D4", VA = "0x10906D4")]
		public static Quaternion FromAngularVector(Vector3 v)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x10907E8", Offset = "0x10907E8", VA = "0x10907E8")]
		public static Vector3 ToAngularVector(Quaternion q)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x1090844", Offset = "0x1090844", VA = "0x1090844")]
		public static Quaternion Pow(Quaternion q, float exp)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x10908B0", Offset = "0x10908B0", VA = "0x10908B0")]
		public static Quaternion Integrate(Quaternion q, Quaternion v, float dt)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x1090910", Offset = "0x1090910", VA = "0x1090910")]
		public static Quaternion Integrate(Quaternion q, Vector3 omega, float dt)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x108F9B8", Offset = "0x108F9B8", VA = "0x108F9B8")]
		public static Vector4 ToVector4(Quaternion q)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x108F838", Offset = "0x108F838", VA = "0x108F838")]
		public static Quaternion FromVector4(Vector4 v, bool normalize = true)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x10909D4", Offset = "0x10909D4", VA = "0x10909D4")]
		public static void DecomposeSwingTwist(Quaternion q, Vector3 twistAxis, out Quaternion swing, out Quaternion twist)
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x1090C38", Offset = "0x1090C38", VA = "0x1090C38")]
		public static Quaternion Sterp(Quaternion a, Quaternion b, Vector3 twistAxis, float t, SterpMode mode = SterpMode.Slerp)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x1090C84", Offset = "0x1090C84", VA = "0x1090C84")]
		public static Quaternion Sterp(Quaternion a, Quaternion b, Vector3 twistAxis, float t, out Quaternion swing, out Quaternion twist, SterpMode mode = SterpMode.Slerp)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x1090E58", Offset = "0x1090E58", VA = "0x1090E58")]
		public static Quaternion Sterp(Quaternion a, Quaternion b, Vector3 twistAxis, float tSwing, float tTwist, SterpMode mode = SterpMode.Slerp)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x1090CBC", Offset = "0x1090CBC", VA = "0x1090CBC")]
		public static Quaternion Sterp(Quaternion a, Quaternion b, Vector3 twistAxis, float tSwing, float tTwist, out Quaternion swing, out Quaternion twist, SterpMode mode)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x1090EA8", Offset = "0x1090EA8", VA = "0x1090EA8")]
		public QuaternionUtil()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public struct FloatSpring
	{
		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int Stride;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Value;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Velocity;

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x100D5EC", Offset = "0x100D5EC", VA = "0x100D5EC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x100D5F4", Offset = "0x100D5F4", VA = "0x100D5F4")]
		public void Reset(float initValue)
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x100D600", Offset = "0x100D600", VA = "0x100D600")]
		public void Reset(float initValue, float initVelocity)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x100D608", Offset = "0x100D608", VA = "0x100D608")]
		public float TrackDampingRatio(float targetValue, float angularFrequency, float dampingRatio, float deltaTime)
		{
			return default(float);
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x100D758", Offset = "0x100D758", VA = "0x100D758")]
		public float TrackHalfLife(float targetValue, float frequencyHz, float halfLife, float deltaTime)
		{
			return default(float);
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x100D848", Offset = "0x100D848", VA = "0x100D848")]
		public float TrackExponential(float targetValue, float halfLife, float deltaTime)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000269")]
	public struct Vector2Spring
	{
		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int Stride;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 Value;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 Velocity;

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x13582D8", Offset = "0x13582D8", VA = "0x13582D8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x135830C", Offset = "0x135830C", VA = "0x135830C")]
		public void Reset(Vector2 initValue)
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x1358338", Offset = "0x1358338", VA = "0x1358338")]
		public void Reset(Vector2 initValue, Vector2 initVelocity)
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x1358344", Offset = "0x1358344", VA = "0x1358344")]
		public Vector2 TrackDampingRatio(Vector2 targetValue, float angularFrequency, float dampingRatio, float deltaTime)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x1358510", Offset = "0x1358510", VA = "0x1358510")]
		public Vector2 TrackHalfLife(Vector2 targetValue, float frequencyHz, float halfLife, float deltaTime)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x1358618", Offset = "0x1358618", VA = "0x1358618")]
		public Vector2 TrackExponential(Vector2 targetValue, float halfLife, float deltaTime)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x200026A")]
	public struct Vector3Spring
	{
		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int Stride;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Value;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float m_padding0;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Velocity;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_padding1;

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x1358740", Offset = "0x1358740", VA = "0x1358740")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x13548D8", Offset = "0x13548D8", VA = "0x13548D8")]
		public void Reset(Vector3 initValue)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x135877C", Offset = "0x135877C", VA = "0x135877C")]
		public void Reset(Vector3 initValue, Vector3 initVelocity)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x1355840", Offset = "0x1355840", VA = "0x1355840")]
		public Vector3 TrackDampingRatio(Vector3 targetValue, float angularFrequency, float dampingRatio, float deltaTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x1358790", Offset = "0x1358790", VA = "0x1358790")]
		public Vector3 TrackHalfLife(Vector3 targetValue, float frequencyHz, float halfLife, float deltaTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x1354A14", Offset = "0x1354A14", VA = "0x1354A14")]
		public Vector3 TrackExponential(Vector3 targetValue, float halfLife, float deltaTime)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200026B")]
	public struct Vector4Spring
	{
		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int Stride;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4 Value;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector4 Velocity;

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x1358900", Offset = "0x1358900", VA = "0x1358900")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x135893C", Offset = "0x135893C", VA = "0x135893C")]
		public void Reset(Vector4 initValue)
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x1358970", Offset = "0x1358970", VA = "0x1358970")]
		public void Reset(Vector4 initValue, Vector4 initVelocity)
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x1358984", Offset = "0x1358984", VA = "0x1358984")]
		public Vector4 TrackDampingRatio(Vector4 targetValue, float angularFrequency, float dampingRatio, float deltaTime)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x1358D54", Offset = "0x1358D54", VA = "0x1358D54")]
		public Vector4 TrackHalfLife(Vector4 targetValue, float frequencyHz, float halfLife, float deltaTime)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x1358E8C", Offset = "0x1358E8C", VA = "0x1358E8C")]
		public Vector4 TrackExponential(Vector4 targetValue, float halfLife, float deltaTime)
		{
			return default(Vector4);
		}
	}
	[Token(Token = "0x200026C")]
	public struct QuaternionSpring
	{
		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int Stride;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4 ValueVec;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector4 VelocityVec;

		[Token(Token = "0x17000187")]
		public Quaternion ValueQuat
		{
			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0x108F828", Offset = "0x108F828", VA = "0x108F828")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000CD5")]
			[Address(RVA = "0x108F990", Offset = "0x108F990", VA = "0x108F990")]
			set
			{
			}
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x108F9E8", Offset = "0x108F9E8", VA = "0x108F9E8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x108FA28", Offset = "0x108FA28", VA = "0x108FA28")]
		public void Reset(Vector4 initValue)
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x108FA5C", Offset = "0x108FA5C", VA = "0x108FA5C")]
		public void Reset(Vector4 initValue, Vector4 initVelocity)
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x108FA70", Offset = "0x108FA70", VA = "0x108FA70")]
		public void Reset(Quaternion initValue)
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x108FAA8", Offset = "0x108FAA8", VA = "0x108FAA8")]
		public void Reset(Quaternion initValue, Quaternion initVelocity)
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x108FB0C", Offset = "0x108FB0C", VA = "0x108FB0C")]
		public Quaternion TrackDampingRatio(Vector4 targetValueVec, float angularFrequency, float dampingRatio, float deltaTime)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x108FF1C", Offset = "0x108FF1C", VA = "0x108FF1C")]
		public Quaternion TrackDampingRatio(Quaternion targetValue, float angularFrequency, float dampingRatio, float deltaTime)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x108FF68", Offset = "0x108FF68", VA = "0x108FF68")]
		public Quaternion TrackHalfLife(Vector4 targetValueVec, float frequencyHz, float halfLife, float deltaTime)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x10900A8", Offset = "0x10900A8", VA = "0x10900A8")]
		public Quaternion TrackHalfLife(Quaternion targetValue, float frequencyHz, float halfLife, float deltaTime)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x10901F8", Offset = "0x10901F8", VA = "0x10901F8")]
		public Quaternion TrackExponential(Vector4 targetValueVec, float halfLife, float deltaTime)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x1090304", Offset = "0x1090304", VA = "0x1090304")]
		public Quaternion TrackExponential(Quaternion targetValue, float halfLife, float deltaTime)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x200026D")]
	public class VectorUtil
	{
		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3 Min;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly Vector3 Max;

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x1358FE4", Offset = "0x1358FE4", VA = "0x1358FE4")]
		public static Vector3 Rotate2D(Vector3 v, float angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x135904C", Offset = "0x135904C", VA = "0x135904C")]
		public static Vector4 NormalizeSafe(Vector4 v, Vector4 fallback)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x135912C", Offset = "0x135912C", VA = "0x135912C")]
		public static Vector3 FindOrthogonal(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x13591C8", Offset = "0x13591C8", VA = "0x13591C8")]
		public static void FormOrthogonalBasis(Vector3 v, out Vector3 a, out Vector3 b)
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x1359280", Offset = "0x1359280", VA = "0x1359280")]
		public static Vector3 Slerp(Vector3 a, Vector3 b, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x1359460", Offset = "0x1359460", VA = "0x1359460")]
		public static Vector3 GetClosestPointOnSegment(Vector3 p, Vector3 segA, Vector3 segB)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x13595C0", Offset = "0x13595C0", VA = "0x13595C0")]
		public static Vector3 TriLerp(ref Vector3 v000, ref Vector3 v001, ref Vector3 v010, ref Vector3 v011, ref Vector3 v100, ref Vector3 v101, ref Vector3 v110, ref Vector3 v111, float tx, float ty, float tz)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x1359788", Offset = "0x1359788", VA = "0x1359788")]
		public static Vector3 TriLerp(ref Vector3 v000, ref Vector3 v001, ref Vector3 v010, ref Vector3 v011, ref Vector3 v100, ref Vector3 v101, ref Vector3 v110, ref Vector3 v111, bool lerpX, bool lerpY, bool lerpZ, float tx, float ty, float tz)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x13599BC", Offset = "0x13599BC", VA = "0x13599BC")]
		public static Vector3 TriLerp(ref Vector3 min, ref Vector3 max, bool lerpX, bool lerpY, bool lerpZ, float tx, float ty, float tz)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x1359BFC", Offset = "0x1359BFC", VA = "0x1359BFC")]
		public static Vector4 TriLerp(ref Vector4 v000, ref Vector4 v001, ref Vector4 v010, ref Vector4 v011, ref Vector4 v100, ref Vector4 v101, ref Vector4 v110, ref Vector4 v111, bool lerpX, bool lerpY, bool lerpZ, float tx, float ty, float tz)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x1359E10", Offset = "0x1359E10", VA = "0x1359E10")]
		public static Vector4 TriLerp(ref Vector4 min, ref Vector4 max, bool lerpX, bool lerpY, bool lerpZ, float tx, float ty, float tz)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x1355744", Offset = "0x1355744", VA = "0x1355744")]
		public static Vector3 ClampLength(Vector3 v, float minLen, float maxLen)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x135A130", Offset = "0x135A130", VA = "0x135A130")]
		public static float MinComponent(Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x135A1D4", Offset = "0x135A1D4", VA = "0x135A1D4")]
		public static float MaxComponent(Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x135A278", Offset = "0x135A278", VA = "0x135A278")]
		public static Vector3 ComponentWiseAbs(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x135A288", Offset = "0x135A288", VA = "0x135A288")]
		public static Vector3 ComponentWiseMin(params Vector3[] aVec)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x135A380", Offset = "0x135A380", VA = "0x135A380")]
		public static Vector3 ComponentWiseMax(params Vector3[] aVec)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x135A478", Offset = "0x135A478", VA = "0x135A478")]
		public static Vector3 ComponentWiseMult(params Vector3[] aVec)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x135A4F0", Offset = "0x135A4F0", VA = "0x135A4F0")]
		public static Vector3 ComponentWiseDiv(Vector3 num, Vector3 den)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x135A500", Offset = "0x135A500", VA = "0x135A500")]
		public static Vector3 ComponentWiseDivSafe(Vector3 num, Vector3 den)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x135A5C4", Offset = "0x135A5C4", VA = "0x135A5C4")]
		public static Vector3 ClampBend(Vector3 vector, Vector3 reference, float maxBendAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x135A8A4", Offset = "0x135A8A4", VA = "0x135A8A4")]
		public VectorUtil()
		{
		}
	}
}
namespace Photon.Voice.Fusion.Demo
{
	[Token(Token = "0x200026E")]
	public class PrefabSpawner : MonoBehaviour, INetworkRunnerCallbacks
	{
		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NetworkObject prefab;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<PlayerRef, NetworkObject> spawnedPlayers;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool debugLogs;

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x1089B5C", Offset = "0x1089B5C", VA = "0x1089B5C", Slot = "4")]
		private void Fusion.INetworkRunnerCallbacks.OnPlayerJoined(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x108A030", Offset = "0x108A030", VA = "0x108A030", Slot = "5")]
		private void Fusion.INetworkRunnerCallbacks.OnPlayerLeft(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x108A3C0", Offset = "0x108A3C0", VA = "0x108A3C0", Slot = "6")]
		private void Fusion.INetworkRunnerCallbacks.OnInput(NetworkRunner runner, NetworkInput input)
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x108A3C4", Offset = "0x108A3C4", VA = "0x108A3C4", Slot = "7")]
		private void Fusion.INetworkRunnerCallbacks.OnInputMissing(NetworkRunner runner, PlayerRef player, NetworkInput input)
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x108A3C8", Offset = "0x108A3C8", VA = "0x108A3C8", Slot = "8")]
		private void Fusion.INetworkRunnerCallbacks.OnShutdown(NetworkRunner runner, ShutdownReason shutdownReason)
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x108A6E4", Offset = "0x108A6E4", VA = "0x108A6E4", Slot = "9")]
		private void Fusion.INetworkRunnerCallbacks.OnConnectedToServer(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x108A7F0", Offset = "0x108A7F0", VA = "0x108A7F0", Slot = "10")]
		private void Fusion.INetworkRunnerCallbacks.OnDisconnectedFromServer(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x108A8FC", Offset = "0x108A8FC", VA = "0x108A8FC", Slot = "11")]
		private void Fusion.INetworkRunnerCallbacks.OnConnectRequest(NetworkRunner runner, NetworkRunnerCallbackArgs.ConnectRequest request, byte[] token)
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x108A900", Offset = "0x108A900", VA = "0x108A900", Slot = "12")]
		private void Fusion.INetworkRunnerCallbacks.OnConnectFailed(NetworkRunner runner, NetAddress remoteAddress, NetConnectFailedReason reason)
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x108A904", Offset = "0x108A904", VA = "0x108A904", Slot = "13")]
		private void Fusion.INetworkRunnerCallbacks.OnUserSimulationMessage(NetworkRunner runner, SimulationMessagePtr message)
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x108A908", Offset = "0x108A908", VA = "0x108A908", Slot = "14")]
		private void Fusion.INetworkRunnerCallbacks.OnSessionListUpdated(NetworkRunner runner, List<SessionInfo> sessionList)
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x108A90C", Offset = "0x108A90C", VA = "0x108A90C", Slot = "15")]
		private void Fusion.INetworkRunnerCallbacks.OnCustomAuthenticationResponse(NetworkRunner runner, Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x108A910", Offset = "0x108A910", VA = "0x108A910", Slot = "16")]
		private void Fusion.INetworkRunnerCallbacks.OnHostMigration(NetworkRunner runner, HostMigrationToken hostMigrationToken)
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x108A914", Offset = "0x108A914", VA = "0x108A914", Slot = "17")]
		private void Fusion.INetworkRunnerCallbacks.OnReliableDataReceived(NetworkRunner runner, PlayerRef player, ArraySegment<byte> data)
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x108A918", Offset = "0x108A918", VA = "0x108A918", Slot = "18")]
		private void Fusion.INetworkRunnerCallbacks.OnSceneLoadDone(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x108A91C", Offset = "0x108A91C", VA = "0x108A91C", Slot = "19")]
		private void Fusion.INetworkRunnerCallbacks.OnSceneLoadStart(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x1089CA8", Offset = "0x1089CA8", VA = "0x1089CA8")]
		private void SpawnPlayer(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x108A17C", Offset = "0x108A17C", VA = "0x108A17C")]
		private bool TryDespawnPlayer(NetworkRunner runner, PlayerRef player)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x108A920", Offset = "0x108A920", VA = "0x108A920")]
		public PrefabSpawner()
		{
		}
	}
}
namespace Fusion
{
	[Token(Token = "0x200026F")]
	internal static class FusionRuntimeCheck
	{
		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x28769DC", Offset = "0x28769DC", VA = "0x28769DC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xE8DE80", Offset = "0xE8DE80")]
		private static void RuntimeCheck()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000270")]
	public class FusionUnityLogger : ILogger
	{
		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private StringBuilder _builder;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UseGlobalPrefix;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool UseColorTags;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string GlobalPrefixColor;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color32 MinRandomColor;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color32 MaxRandomColor;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color ServerColor;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7E0C4", Offset = "0xE7E0C4")]
		private Func<object, int> <GetColor>k__BackingField;

		[Token(Token = "0x17000188")]
		public Func<object, int> GetColor
		{
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x2880B68", Offset = "0x2880B68", VA = "0x2880B68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8DE94", Offset = "0xE8DE94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0x2880B70", Offset = "0x2880B70", VA = "0x2880B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8DEA4", Offset = "0xE8DEA4")]
			set
			{
			}
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x2880B78", Offset = "0x2880B78", VA = "0x2880B78")]
		public FusionUnityLogger()
		{
		}

		[Token(Token = "0x6000D10")]
		public void Log<T>(LogType logType, string prefix, ref T context, string message) where T : ILogBuilder
		{
		}

		[Token(Token = "0x6000D11")]
		public void LogException<T>(string prefix, ref T context, Exception ex) where T : ILogBuilder
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x2880DB8", Offset = "0x2880DB8", VA = "0x2880DB8")]
		private int GetRandomColor(int seed)
		{
			return default(int);
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x2880E00", Offset = "0x2880E00", VA = "0x2880E00")]
		private static int GetRandomColor(int seed, Color32 min, Color32 max, Color32 svr)
		{
			return default(int);
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x2880F04", Offset = "0x2880F04", VA = "0x2880F04")]
		private static int Color32ToRGB24(Color32 c)
		{
			return default(int);
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x2880D28", Offset = "0x2880D28", VA = "0x2880D28")]
		private static string Color32ToRGBString(Color32 c)
		{
			return null;
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x2880F18", Offset = "0x2880F18", VA = "0x2880F18")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xE8DEB4", Offset = "0xE8DEB4")]
		private static void Initialize()
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x2880FD4", Offset = "0x2880FD4", VA = "0x2880FD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8DEC8", Offset = "0xE8DEC8")]
		private int <.ctor>b__12_0(object obj)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000271")]
	public static class NetworkRunnerExtensions
	{
		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x107153C", Offset = "0x107153C", VA = "0x107153C")]
		public static bool SetActiveScene(this NetworkRunner runner, string sceneNameOrPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x10715A0", Offset = "0x10715A0", VA = "0x10715A0")]
		private static bool TryGetSceneBuildIndex(string nameOrPath, out int buildIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x10716D8", Offset = "0x10716D8", VA = "0x10716D8")]
		private static void GetFileNameWithoutExtensionPosition(string nameOrPath, out int index, out int length)
		{
		}
	}
	[Token(Token = "0x2000272")]
	public abstract class NetworkSceneManagerBase : Behaviour, INetworkSceneManager
	{
		[Token(Token = "0x2000273")]
		protected delegate void FinishedLoadingDelegate(IEnumerable<NetworkObject> sceneObjects);

		[Token(Token = "0x2000274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67BC0", Offset = "0xE67BC0")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4000BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool finishCalled;

			[Token(Token = "0x4000BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<Guid, NetworkObject> sceneObjects;

			[Token(Token = "0x6000D34")]
			[Address(RVA = "0x32C19C8", Offset = "0x32C19C8", VA = "0x32C19C8")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6000D35")]
			[Address(RVA = "0x32C19D0", Offset = "0x32C19D0", VA = "0x32C19D0")]
			internal void <SwitchSceneWrapper>b__0(IEnumerable<NetworkObject> objects)
			{
			}
		}

		[Token(Token = "0x2000275")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67BD0", Offset = "0xE67BD0")]
		private sealed class <SwitchSceneWrapper>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkSceneManagerBase <>4__this;

			[Token(Token = "0x4000C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneRef prevScene;

			[Token(Token = "0x4000C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public SceneRef newScene;

			[Token(Token = "0x4000C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass26_0 <>8__1;

			[Token(Token = "0x4000C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Exception <error>5__2;

			[Token(Token = "0x4000C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IEnumerator <coro>5__3;

			[Token(Token = "0x4000C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private bool <next>5__4;

			[Token(Token = "0x1700018A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D3A")]
				[Address(RVA = "0x32C2378", Offset = "0x32C2378", VA = "0x32C2378", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D3C")]
				[Address(RVA = "0x32C23C0", Offset = "0x32C23C0", VA = "0x32C23C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D36")]
			[Address(RVA = "0x32C1CEC", Offset = "0x32C1CEC", VA = "0x32C1CEC")]
			[DebuggerHidden]
			public <SwitchSceneWrapper>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000D37")]
			[Address(RVA = "0x32C1D18", Offset = "0x32C1D18", VA = "0x32C1D18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D38")]
			[Address(RVA = "0x32C1DE0", Offset = "0x32C1DE0", VA = "0x32C1DE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x32C1D34", Offset = "0x32C1D34", VA = "0x32C1D34")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0x32C2380", Offset = "0x32C2380", VA = "0x32C2380", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WeakReference<NetworkSceneManagerBase> s_currentlyLoading;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[InlineHelp]
		[ToggleLeft]
		[MultiPropertyDrawersFix]
		public bool ShowHierarchyWindowOverlay;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IEnumerator _runningCoroutine;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _currentSceneOutdated;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private SceneRef _currentScene;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7E11C", Offset = "0xE7E11C")]
		private NetworkRunner <Runner>k__BackingField;

		[Token(Token = "0x17000189")]
		public NetworkRunner Runner
		{
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x1071FD8", Offset = "0x1071FD8", VA = "0x1071FD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8DEE8", Offset = "0xE8DEE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x1071FE0", Offset = "0x1071FE0", VA = "0x1071FE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8DEF8", Offset = "0xE8DEF8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x1071FE8", Offset = "0x1071FE8", VA = "0x1071FE8", Slot = "7")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x1071FEC", Offset = "0x1071FEC", VA = "0x1071FEC", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x1071FF0", Offset = "0x1071FF0", VA = "0x1071FF0", Slot = "9")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x1072268", Offset = "0x1072268", VA = "0x1072268")]
		public static bool IsScenePathOrNameEqual(Scene scene, string nameOrPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x10722C8", Offset = "0x10722C8", VA = "0x10722C8")]
		public static bool TryGetScenePathFromBuildSettings(SceneRef sceneRef, out string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x1072380", Offset = "0x1072380", VA = "0x1072380")]
		public bool IsScenePathOrNameEqual(Scene scene, SceneRef sceneRef)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x1072430", Offset = "0x1072430", VA = "0x1072430")]
		public List<NetworkObject> FindNetworkObjects(Scene scene, bool disable = true, bool addVisibilityNodes = false)
		{
			return null;
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x107288C", Offset = "0x107288C", VA = "0x107288C", Slot = "4")]
		private void Fusion.INetworkSceneManager.Initialize(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x1072898", Offset = "0x1072898", VA = "0x1072898", Slot = "5")]
		private void Fusion.INetworkSceneManager.Shutdown(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x10728A4", Offset = "0x10728A4", VA = "0x10728A4", Slot = "6")]
		private bool Fusion.INetworkSceneManager.IsReady(NetworkRunner runner)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x1072904", Offset = "0x1072904", VA = "0x1072904", Slot = "10")]
		protected virtual void Initialize(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x107290C", Offset = "0x107290C", VA = "0x107290C", Slot = "11")]
		protected virtual void Shutdown(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6000D29")]
		protected abstract IEnumerator SwitchScene(SceneRef prevScene, SceneRef newScene, FinishedLoadingDelegate finished);

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x1072C18", Offset = "0x1072C18", VA = "0x1072C18")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE8DF08", Offset = "0xE8DF08")]
		protected void LogTrace(string msg)
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x1072C1C", Offset = "0x1072C1C", VA = "0x1072C1C")]
		protected void LogError(string msg)
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x1072AF4", Offset = "0x1072AF4", VA = "0x1072AF4")]
		protected void LogWarn(string msg)
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x10721DC", Offset = "0x10721DC", VA = "0x10721DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8DF40", Offset = "0xE8DF40")]
		private IEnumerator SwitchSceneWrapper(SceneRef prevScene, SceneRef newScene)
		{
			return null;
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x1072D40", Offset = "0x1072D40", VA = "0x1072D40")]
		protected NetworkSceneManagerBase()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class NetworkSceneManagerDefault : NetworkSceneManagerBase
	{
		[Token(Token = "0x2000277")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67BE0", Offset = "0xE67BE0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string scenePath;

			[Token(Token = "0x4000C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool alreadyHandled;

			[Token(Token = "0x4000C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Scene> loaded;

			[Token(Token = "0x4000C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityAction<Scene, LoadSceneMode> sceneLoadedHandler;

			[Token(Token = "0x6000D43")]
			[Address(RVA = "0x32C276C", Offset = "0x32C276C", VA = "0x32C276C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000D44")]
			[Address(RVA = "0x32C2774", Offset = "0x32C2774", VA = "0x32C2774")]
			internal void <LoadSceneAsync>b__0(Scene scene, LoadSceneMode _)
			{
			}

			[Token(Token = "0x6000D45")]
			[Address(RVA = "0x32C2838", Offset = "0x32C2838", VA = "0x32C2838")]
			internal void <LoadSceneAsync>b__1(AsyncOperation _)
			{
			}
		}

		[Token(Token = "0x2000278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67BF0", Offset = "0xE67BF0")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Scene loadedScene;

			[Token(Token = "0x6000D46")]
			[Address(RVA = "0x32C28A0", Offset = "0x32C28A0", VA = "0x32C28A0")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6000D47")]
			[Address(RVA = "0x32C28A8", Offset = "0x32C28A8", VA = "0x32C28A8")]
			internal void <SwitchSceneMultiplePeer>b__0(Scene scene)
			{
			}
		}

		[Token(Token = "0x2000279")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67C00", Offset = "0xE67C00")]
		private sealed class <SwitchSceneMultiplePeer>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneRef prevScene;

			[Token(Token = "0x4000C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkSceneManagerDefault <>4__this;

			[Token(Token = "0x4000C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SceneRef newScene;

			[Token(Token = "0x4000C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass4_0 <>8__1;

			[Token(Token = "0x4000C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public FinishedLoadingDelegate finished;

			[Token(Token = "0x4000C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private LoadSceneParameters <loadSceneParameters>5__2;

			[Token(Token = "0x4000C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Scene <sceneToUnload>5__3;

			[Token(Token = "0x4000C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private GameObject[] <tempSceneSpawnedPrefabs>5__4;

			[Token(Token = "0x4000C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private List<NetworkObject> <sceneObjects>5__5;

			[Token(Token = "0x1700018C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D4B")]
				[Address(RVA = "0x32C2F64", Offset = "0x32C2F64", VA = "0x32C2F64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D4D")]
				[Address(RVA = "0x32C2FAC", Offset = "0x32C2FAC", VA = "0x32C2FAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D48")]
			[Address(RVA = "0x32C28C0", Offset = "0x32C28C0", VA = "0x32C28C0")]
			[DebuggerHidden]
			public <SwitchSceneMultiplePeer>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000D49")]
			[Address(RVA = "0x32C28EC", Offset = "0x32C28EC", VA = "0x32C28EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0x32C28F0", Offset = "0x32C28F0", VA = "0x32C28F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0x32C2F6C", Offset = "0x32C2F6C", VA = "0x32C2F6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200027A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67C10", Offset = "0xE67C10")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4000C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Scene loadedScene;

			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0x32C28B0", Offset = "0x32C28B0", VA = "0x32C28B0")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0x32C28B8", Offset = "0x32C28B8", VA = "0x32C28B8")]
			internal void <SwitchSceneSinglePeer>b__0(Scene scene)
			{
			}
		}

		[Token(Token = "0x200027B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67C20", Offset = "0xE67C20")]
		private sealed class <SwitchSceneSinglePeer>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneRef prevScene;

			[Token(Token = "0x4000C1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkSceneManagerDefault <>4__this;

			[Token(Token = "0x4000C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SceneRef newScene;

			[Token(Token = "0x4000C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass5_0 <>8__1;

			[Token(Token = "0x4000C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public FinishedLoadingDelegate finished;

			[Token(Token = "0x4000C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__2;

			[Token(Token = "0x1700018E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D53")]
				[Address(RVA = "0x32C32E8", Offset = "0x32C32E8", VA = "0x32C32E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D55")]
				[Address(RVA = "0x32C3330", Offset = "0x32C3330", VA = "0x32C3330", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D50")]
			[Address(RVA = "0x32C2FB4", Offset = "0x32C2FB4", VA = "0x32C2FB4")]
			[DebuggerHidden]
			public <SwitchSceneSinglePeer>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6000D51")]
			[Address(RVA = "0x32C2FE0", Offset = "0x32C2FE0", VA = "0x32C2FE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D52")]
			[Address(RVA = "0x32C2FE4", Offset = "0x32C2FE4", VA = "0x32C2FE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D54")]
			[Address(RVA = "0x32C32F0", Offset = "0x32C32F0", VA = "0x32C32F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7E12C", Offset = "0xE7E12C")]
		public int PostLoadDelayFrames;

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x1072DE0", Offset = "0x1072DE0", VA = "0x1072DE0", Slot = "13")]
		protected virtual YieldInstruction LoadSceneAsync(SceneRef sceneRef, LoadSceneParameters parameters, Action<Scene> loaded)
		{
			return null;
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x107304C", Offset = "0x107304C", VA = "0x107304C", Slot = "14")]
		protected virtual YieldInstruction UnloadSceneAsync(Scene scene)
		{
			return null;
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x10730B0", Offset = "0x10730B0", VA = "0x10730B0", Slot = "12")]
		protected override IEnumerator SwitchScene(SceneRef prevScene, SceneRef newScene, FinishedLoadingDelegate finished)
		{
			return null;
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x1073100", Offset = "0x1073100", VA = "0x1073100", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8DFF0", Offset = "0xE8DFF0")]
		protected virtual IEnumerator SwitchSceneMultiplePeer(SceneRef prevScene, SceneRef newScene, FinishedLoadingDelegate finished)
		{
			return null;
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x10731AC", Offset = "0x10731AC", VA = "0x10731AC", Slot = "16")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8E050", Offset = "0xE8E050")]
		protected virtual IEnumerator SwitchSceneSinglePeer(SceneRef prevScene, SceneRef newScene, FinishedLoadingDelegate finished)
		{
			return null;
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x1073258", Offset = "0x1073258", VA = "0x1073258")]
		public NetworkSceneManagerDefault()
		{
		}
	}
}
namespace Fusion.Editor
{
	[Token(Token = "0x200027C")]
	public static class BoundsTools
	{
		[Token(Token = "0x200027D")]
		public enum BoundsType
		{
			[Token(Token = "0x4000C29")]
			Both,
			[Token(Token = "0x4000C2A")]
			MeshRenderer,
			[Token(Token = "0x4000C2B")]
			Collider,
			[Token(Token = "0x4000C2C")]
			Manual
		}

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<MeshFilter> meshFilters;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<Renderer> meshRenderers;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly List<Collider> colliders;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly List<Collider> validColliders;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly List<SpriteRenderer> spriteRenderers;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly List<Collider2D> colliders2D;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly List<Collider2D> validColliders2D;

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x1201B2C", Offset = "0x1201B2C", VA = "0x1201B2C")]
		public static Bounds CollectMyBounds(this GameObject go, BoundsType factorIn, out int numOfBoundsFound, bool includeChildren = true, bool includeInactive = false)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x1202AE0", Offset = "0x1202AE0", VA = "0x1202AE0")]
		public static Bounds CollectMyBounds(GameObject go, BoundsType factorIn, bool includeChildren = true)
		{
			return default(Bounds);
		}
	}
}
namespace Fusion.StatsInternal
{
	[Token(Token = "0x200027E")]
	public interface IFusionStatsView
	{
		[Token(Token = "0x17000190")]
		bool isActiveAndEnabled
		{
			[Token(Token = "0x6000D5C")]
			get;
		}

		[Token(Token = "0x17000191")]
		Transform transform
		{
			[Token(Token = "0x6000D5D")]
			get;
		}

		[Token(Token = "0x6000D59")]
		void Initialize();

		[Token(Token = "0x6000D5A")]
		void CalculateLayout();

		[Token(Token = "0x6000D5B")]
		void Refresh();
	}
	[Token(Token = "0x200027F")]
	public static class FusionStatsUtilities
	{
		[Token(Token = "0x4000C2D")]
		public const int PAD = 10;

		[Token(Token = "0x4000C2E")]
		public const int MARGIN = 6;

		[Token(Token = "0x4000C2F")]
		public const int FONT_SIZE = 12;

		[Token(Token = "0x4000C30")]
		public const int FONT_SIZE_MIN = 4;

		[Token(Token = "0x4000C31")]
		public const int FONT_SIZE_MAX = 200;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<string> _cachedGraphVisualizationNames;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Font _font;

		[Token(Token = "0x4000C34")]
		private const int METER_TEXTURE_WIDTH = 512;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Texture2D _meterTexture;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Sprite _meterSprite;

		[Token(Token = "0x4000C37")]
		private const int R = 64;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Texture2D _circle32Texture;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Sprite _circle32Sprite;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Color DARK_GREEN;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Color DARK_BLUE;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Color DARK_RED;

		[Token(Token = "0x4000C3D")]
		public const float BTTN_LBL_NORM_HGHT = 0.175f;

		[Token(Token = "0x4000C3E")]
		private const int BTTN_FONT_SIZE_MAX = 100;

		[Token(Token = "0x4000C3F")]
		private const float BTTN_ALPHA = 0.925f;

		[Token(Token = "0x4000C40")]
		private const float GUIDE_MARGIN = 0.01f;

		[Token(Token = "0x4000C41")]
		private const float GUIDE_MARGIN_HALF = 0.005f;

		[Token(Token = "0x17000192")]
		public static List<string> CachedTelemetryNames
		{
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0x2870E14", Offset = "0x2870E14", VA = "0x2870E14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		public static Font Font
		{
			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0x287FA20", Offset = "0x287FA20", VA = "0x287FA20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		private static Texture2D MeterTexture
		{
			[Token(Token = "0x6000D60")]
			[Address(RVA = "0x287FB54", Offset = "0x287FB54", VA = "0x287FB54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		public static Sprite MeterSprite
		{
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0x287DC18", Offset = "0x287DC18", VA = "0x287DC18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		private static Texture2D Circle32Texture
		{
			[Token(Token = "0x6000D62")]
			[Address(RVA = "0x287FD50", Offset = "0x287FD50", VA = "0x287FD50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		public static Sprite CircleSprite
		{
			[Token(Token = "0x6000D63")]
			[Address(RVA = "0x2880014", Offset = "0x2880014", VA = "0x2880014")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x2877F08", Offset = "0x2877F08", VA = "0x2877F08")]
		public static bool TryFindActiveRunner(FusionStats fusionStats, out NetworkRunner runner, [Optional] SimulationModes? mode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x2871D4C", Offset = "0x2871D4C", VA = "0x2871D4C")]
		public static RectTransform CreateRectTransform(this Transform parent, string name, bool expand = false)
		{
			return null;
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x28801AC", Offset = "0x28801AC", VA = "0x28801AC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE8E170", Offset = "0xE8E170")]
		internal static RectTransform CreateRectTransform(string name, Transform parent, bool expand = false)
		{
			return null;
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x2875178", Offset = "0x2875178", VA = "0x2875178")]
		public static Dropdown CreateDropdown(this RectTransform rt, float padding, Color fontColor)
		{
			return null;
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x2871F2C", Offset = "0x2871F2C", VA = "0x2871F2C")]
		public static Text AddText(this RectTransform rt, string label, TextAnchor anchor, Color FontColor)
		{
			return null;
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x287A7EC", Offset = "0x287A7EC", VA = "0x287A7EC")]
		internal static void MakeButton(this RectTransform parent, ref Button button, string iconText, string labelText, out Text icon, out Text text, UnityAction action)
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x288033C", Offset = "0x288033C", VA = "0x288033C")]
		public static RectTransform AddHorizontalLayoutGroup(this RectTransform rt, float spacing, [Optional] int? rgtPad, [Optional] int? lftPad, [Optional] int? topPad, [Optional] int? botPad)
		{
			return null;
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x287AFE8", Offset = "0x287AFE8", VA = "0x287AFE8")]
		public static RectTransform AddVerticalLayoutGroup(this RectTransform rt, float spacing, [Optional] int? rgtPad, [Optional] int? lftPad, [Optional] int? topPad, [Optional] int? botPad)
		{
			return null;
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x287B214", Offset = "0x287B214", VA = "0x287B214")]
		public static GridLayoutGroup AddGridlLayoutGroup(this RectTransform rt, float spacing, [Optional] int? rgtPad, [Optional] int? lftPad, [Optional] int? topPad, [Optional] int? botPad)
		{
			return null;
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x288051C", Offset = "0x288051C", VA = "0x288051C")]
		public static RectTransform AddImage(this RectTransform rt, Color color)
		{
			return null;
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x287A748", Offset = "0x287A748", VA = "0x287A748")]
		public static RectTransform AddCircleSprite(this RectTransform rt, Color color)
		{
			return null;
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x287F350", Offset = "0x287F350", VA = "0x287F350")]
		public static RectTransform AddCircleSprite(this RectTransform rt, Color color, out Image image)
		{
			return null;
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x2875028", Offset = "0x2875028", VA = "0x2875028")]
		public static RectTransform ExpandAnchor(this RectTransform rt, [Optional] float? padding)
		{
			return null;
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x287AD7C", Offset = "0x287AD7C", VA = "0x287AD7C")]
		public static RectTransform ExpandTopAnchor(this RectTransform rt, [Optional] float? padding)
		{
			return null;
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x28805E4", Offset = "0x28805E4", VA = "0x28805E4")]
		public static RectTransform ExpandMiddleLeft(this RectTransform rt)
		{
			return null;
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x288030C", Offset = "0x288030C", VA = "0x288030C")]
		public static RectTransform SetSizeDelta(this RectTransform rt, float offsetX, float offsetY)
		{
			return null;
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x2871ED4", Offset = "0x2871ED4", VA = "0x2871ED4")]
		public static RectTransform SetOffsets(this RectTransform rt, float minX, float maxX, float minY, float maxY)
		{
			return null;
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x28802DC", Offset = "0x28802DC", VA = "0x28802DC")]
		public static RectTransform SetPivot(this RectTransform rt, float pivotX, float pivotY)
		{
			return null;
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x2871E7C", Offset = "0x2871E7C", VA = "0x2871E7C")]
		public static RectTransform SetAnchors(this RectTransform rt, float minX, float maxX, float minY, float maxY)
		{
			return null;
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x2880650", Offset = "0x2880650", VA = "0x2880650")]
		internal static RectTransform MakeGuides(this RectTransform parent)
		{
			return null;
		}
	}
}
namespace TheTide.utils
{
	[Token(Token = "0x2000280")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE67C50", Offset = "0xE67C50")]
	public class SerializeMesh : MonoBehaviour
	{
		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Vector2[] uv;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private Vector3[] verticies;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private int[] triangles;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private bool serialized;

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x32DA940", Offset = "0x32DA940", VA = "0x32DA940")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x32DAA70", Offset = "0x32DAA70", VA = "0x32DAA70")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x32DAA80", Offset = "0x32DAA80", VA = "0x32DAA80")]
		public void Serialize()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x32DA9C4", Offset = "0x32DA9C4", VA = "0x32DA9C4")]
		public Mesh Rebuild()
		{
			return null;
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x32DAB40", Offset = "0x32DAB40", VA = "0x32DAB40")]
		public SerializeMesh()
		{
		}
	}
}
namespace PKT.PlayerProfile
{
	[Token(Token = "0x2000281")]
	public class OculusPlayerProfile : IPlayerProfile
	{
		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7E244", Offset = "0xE7E244")]
		private PlayerProfileManager.UserData <userData>k__BackingField;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Action<bool> _onNameFetched;

		[Token(Token = "0x17000198")]
		public string ProviderName
		{
			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0x107A61C", Offset = "0x107A61C", VA = "0x107A61C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		public PlayerProfileManager.UserData userData
		{
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x107A660", Offset = "0x107A660", VA = "0x107A660", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8E290", Offset = "0xE8E290")]
			get
			{
				return default(PlayerProfileManager.UserData);
			}
			[Token(Token = "0x6000D80")]
			[Address(RVA = "0x107A674", Offset = "0x107A674", VA = "0x107A674", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8E2A0", Offset = "0xE8E2A0")]
			set
			{
			}
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x107A694", Offset = "0x107A694", VA = "0x107A694", Slot = "7")]
		public void SendFriendRequest(ulong userUI)
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x107A6A0", Offset = "0x107A6A0", VA = "0x107A6A0", Slot = "8")]
		public void FetchLocalUserID(Action<bool> onChanged)
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x107A7A4", Offset = "0x107A7A4", VA = "0x107A7A4")]
		public void GetLoggedInUserCallBack(Message msg)
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x107AB28", Offset = "0x107AB28", VA = "0x107AB28")]
		public OculusPlayerProfile()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class PhotonPlayerProfile : IPlayerProfile
	{
		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7E254", Offset = "0xE7E254")]
		private PlayerProfileManager.UserData <userData>k__BackingField;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NetworkRunner networkRunner;

		[Token(Token = "0x1700019A")]
		public string ProviderName
		{
			[Token(Token = "0x6000D85")]
			[Address(RVA = "0x107D9A4", Offset = "0x107D9A4", VA = "0x107D9A4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		public PlayerProfileManager.UserData userData
		{
			[Token(Token = "0x6000D86")]
			[Address(RVA = "0x107D9E8", Offset = "0x107D9E8", VA = "0x107D9E8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8E2B0", Offset = "0xE8E2B0")]
			get
			{
				return default(PlayerProfileManager.UserData);
			}
			[Token(Token = "0x6000D87")]
			[Address(RVA = "0x107D9FC", Offset = "0x107D9FC", VA = "0x107D9FC", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8E2C0", Offset = "0xE8E2C0")]
			set
			{
			}
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x107DA1C", Offset = "0x107DA1C", VA = "0x107DA1C", Slot = "7")]
		public void SendFriendRequest(ulong userUI)
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x107DA20", Offset = "0x107DA20", VA = "0x107DA20", Slot = "8")]
		public void FetchLocalUserID(Action<bool> onChanged)
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x107DBB8", Offset = "0x107DBB8", VA = "0x107DBB8")]
		public PhotonPlayerProfile()
		{
		}
	}
}
namespace Modules.PlayerController
{
	[Token(Token = "0x2000283")]
	public class ResetPlayerHeightOverride : MonoBehaviour
	{
		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x32CB7E0", Offset = "0x32CB7E0", VA = "0x32CB7E0")]
		public void SetResetOnLoadingScreen()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x32CB85C", Offset = "0x32CB85C", VA = "0x32CB85C")]
		public ResetPlayerHeightOverride()
		{
		}
	}
}
namespace HurricaneVR.TechDemo.Scripts
{
	[Token(Token = "0x2000284")]
	public class DemoBackpack : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000285")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67CC0", Offset = "0xE67CC0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__1_0;

			[Token(Token = "0x6000D92")]
			[Address(RVA = "0x102F384", Offset = "0x102F384", VA = "0x102F384")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D93")]
			[Address(RVA = "0x102F38C", Offset = "0x102F38C", VA = "0x102F38C")]
			internal bool <Start>b__1_0(Collider e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000286")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67CD0", Offset = "0xE67CD0")]
		private sealed class <IgnoreColliders>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DemoBackpack <>4__this;

			[Token(Token = "0x1700019C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D97")]
				[Address(RVA = "0x102F55C", Offset = "0x102F55C", VA = "0x102F55C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D99")]
				[Address(RVA = "0x102F5A4", Offset = "0x102F5A4", VA = "0x102F5A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D94")]
			[Address(RVA = "0x102F3B8", Offset = "0x102F3B8", VA = "0x102F3B8")]
			[DebuggerHidden]
			public <IgnoreColliders>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000D95")]
			[Address(RVA = "0x102F3E4", Offset = "0x102F3E4", VA = "0x102F3E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D96")]
			[Address(RVA = "0x102F3E8", Offset = "0x102F3E8", VA = "0x102F3E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D98")]
			[Address(RVA = "0x102F564", Offset = "0x102F564", VA = "0x102F564", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7E264", Offset = "0xE7E264")]
		public List<Collider> Colliders;

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x1000034", Offset = "0x1000034", VA = "0x1000034")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x1000218", Offset = "0x1000218", VA = "0x1000218")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8E2D0", Offset = "0xE8E2D0")]
		public IEnumerator IgnoreColliders()
		{
			return null;
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x1000290", Offset = "0x1000290", VA = "0x1000290")]
		public void IgnoreCollision(HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x10003E4", Offset = "0x10003E4", VA = "0x10003E4")]
		public DemoBackpack()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class DemoCodeGrabbing : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67CE0", Offset = "0xE67CE0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<HVRHandGrabber, bool> <>9__7_0;

			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0x102F610", Offset = "0x102F610", VA = "0x102F610")]
			public <>c()
			{
			}

			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0x102F618", Offset = "0x102F618", VA = "0x102F618")]
			internal bool <Start>b__7_0(HVRHandGrabber e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7E29C", Offset = "0xE7E29C")]
		private HVRHandGrabber <Grabber>k__BackingField;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HVRGrabbable Grabbable;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HVRGrabTrigger GrabTrigger;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HVRPosableGrabPoint GrabPoint;

		[Token(Token = "0x1700019E")]
		public HVRHandGrabber Grabber
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0x1000468", Offset = "0x1000468", VA = "0x1000468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8E380", Offset = "0xE8E380")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0x1000470", Offset = "0x1000470", VA = "0x1000470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8E390", Offset = "0xE8E390")]
			set
			{
			}
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x1000478", Offset = "0x1000478", VA = "0x1000478")]
		public void Start()
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x100060C", Offset = "0x100060C", VA = "0x100060C")]
		public void Grab()
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x1000770", Offset = "0x1000770", VA = "0x1000770")]
		public DemoCodeGrabbing()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class DemoCodeGrabbing_Left : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200028A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67CF0", Offset = "0xE67CF0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<HVRHandGrabber, bool> <>9__7_0;

			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0x102F6A8", Offset = "0x102F6A8", VA = "0x102F6A8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0x102F6B0", Offset = "0x102F6B0", VA = "0x102F6B0")]
			internal bool <Start>b__7_0(HVRHandGrabber e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7E2AC", Offset = "0xE7E2AC")]
		private HVRHandGrabber <Grabber>k__BackingField;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HVRGrabbable Grabbable;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HVRGrabTrigger GrabTrigger;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HVRPosableGrabPoint GrabPoint;

		[Token(Token = "0x1700019F")]
		public HVRHandGrabber Grabber
		{
			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0x1000778", Offset = "0x1000778", VA = "0x1000778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8E3A0", Offset = "0xE8E3A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0x1000780", Offset = "0x1000780", VA = "0x1000780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8E3B0", Offset = "0xE8E3B0")]
			set
			{
			}
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x1000788", Offset = "0x1000788", VA = "0x1000788")]
		public void Start()
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x100091C", Offset = "0x100091C", VA = "0x100091C")]
		public void Grab()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x1000A80", Offset = "0x1000A80", VA = "0x1000A80")]
		public DemoCodeGrabbing_Left()
		{
		}
	}
	[Token(Token = "0x200028B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE67D00", Offset = "0xE67D00")]
	public class DemoDummyArm : MonoBehaviour
	{
		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Anchor;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Length;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LineRenderer Rope;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform ArmRopeAnchor;

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x1000A88", Offset = "0x1000A88", VA = "0x1000A88")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x1000B54", Offset = "0x1000B54", VA = "0x1000B54")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x1000BC0", Offset = "0x1000BC0", VA = "0x1000BC0")]
		public DemoDummyArm()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class DemoFullStabConfetti : MonoBehaviour
	{
		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HVRStabbable Stabbable;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem Confetti;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool OnFullStab;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 point;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 normal;

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x1000BD0", Offset = "0x1000BD0", VA = "0x1000BD0")]
		public void Start()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x1000E30", Offset = "0x1000E30", VA = "0x1000E30")]
		private void FullStabbed(HVRStabber arg0, HVRStabbable arg1)
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x1000E48", Offset = "0x1000E48", VA = "0x1000E48")]
		private void PopConfetti(Vector3 dir)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x1000F98", Offset = "0x1000F98", VA = "0x1000F98")]
		private void Unstabbed(HVRStabber arg0, HVRStabbable arg1)
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x1000F9C", Offset = "0x1000F9C", VA = "0x1000F9C")]
		private void Stabbed(StabArgs stabArgs)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x100101C", Offset = "0x100101C", VA = "0x100101C")]
		public DemoFullStabConfetti()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class DemoGlassRotate : MonoBehaviour
	{
		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Timer;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Degrees;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool Unlocked;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool DoneRotating;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip SFXOpen;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _elapsed;

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x1001024", Offset = "0x1001024", VA = "0x1001024")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x1001028", Offset = "0x1001028", VA = "0x1001028")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x1001138", Offset = "0x1001138", VA = "0x1001138")]
		public void Unlock()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x100124C", Offset = "0x100124C", VA = "0x100124C")]
		public DemoGlassRotate()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class DemoHatchDoor : MonoBehaviour
	{
		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Timer;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Degrees;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool Unlocked;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool DoneRotating;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip SFXOpen;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _elapsed;

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x1001260", Offset = "0x1001260", VA = "0x1001260")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x1001370", Offset = "0x1001370", VA = "0x1001370")]
		public void Unlock()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x1001484", Offset = "0x1001484", VA = "0x1001484")]
		public DemoHatchDoor()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public class DemoHeavyDoor : MonoBehaviour
	{
		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody DoorRigidbody;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HVRRotationTracker ValveTracker;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HVRRotationLimiter Limiter;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float MaxAngle;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip[] SFX;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float SFXAngle;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float Angle;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion _startRotation;

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x1001498", Offset = "0x1001498", VA = "0x1001498")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x10014DC", Offset = "0x10014DC", VA = "0x10014DC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x1001710", Offset = "0x1001710", VA = "0x1001710")]
		public DemoHeavyDoor()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class DemoHelper : MonoBehaviour
	{
		[Token(Token = "0x2000291")]
		private class ResetState
		{
			[Token(Token = "0x4000C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HVRGrabbable Grabbable;

			[Token(Token = "0x4000C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HVRGrabbable Clone;

			[Token(Token = "0x4000C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 Position;

			[Token(Token = "0x4000C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion Rotation;

			[Token(Token = "0x4000C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7E2F4", Offset = "0xE7E2F4")]
			private Vector3 <Scale>k__BackingField;

			[Token(Token = "0x4000C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform Parent;

			[Token(Token = "0x170001A0")]
			public Vector3 Scale
			{
				[Token(Token = "0x6000DC5")]
				[Address(RVA = "0x102F784", Offset = "0x102F784", VA = "0x102F784")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8E3D0", Offset = "0xE8E3D0")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000DC6")]
				[Address(RVA = "0x102F790", Offset = "0x102F790", VA = "0x102F790")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8E3E0", Offset = "0xE8E3E0")]
				set
				{
				}
			}

			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0x102F79C", Offset = "0x102F79C", VA = "0x102F79C")]
			public ResetState()
			{
			}
		}

		[Token(Token = "0x2000292")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67D60", Offset = "0xE67D60")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform parent;

			[Token(Token = "0x4000C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<HVRGrabbable, bool> <>9__0;

			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x102F6DC", Offset = "0x102F6DC", VA = "0x102F6DC")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0x102F6E4", Offset = "0x102F6E4", VA = "0x102F6E4")]
			internal bool <AddResetGrabbable>b__0(HVRGrabbable e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> Parents;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<HVRGrabbable> Grabbables;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7E2BC", Offset = "0xE7E2BC")]
		public bool ForceReset;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<ResetState> _grabbableState;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<HVRGrabbable> _balls;

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x1001728", Offset = "0x1001728", VA = "0x1001728")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x10019E4", Offset = "0x10019E4", VA = "0x10019E4")]
		private void AddResetGrabbable(Transform parent)
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x1001DA8", Offset = "0x1001DA8", VA = "0x1001DA8")]
		private void SaveResetGrabbable(Transform parent, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x1001F60", Offset = "0x1001F60", VA = "0x1001F60")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x1002630", Offset = "0x1002630", VA = "0x1002630")]
		public void BallSpawned(HVRSocket socket, GameObject ball)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x1001F8C", Offset = "0x1001F8C", VA = "0x1001F8C")]
		public void ResetGrabbables()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x10026BC", Offset = "0x10026BC", VA = "0x10026BC")]
		public DemoHelper()
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x1002804", Offset = "0x1002804", VA = "0x1002804")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8E3C0", Offset = "0xE8E3C0")]
		private void <ResetGrabbables>b__11_0(HVRGrabbable grabbable)
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class DemoHolster : HVRSocket
	{
		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x1002868", Offset = "0x1002868", VA = "0x1002868", Slot = "61")]
		protected override Quaternion GetRotationOffset(HVRGrabbable grabbable)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x1002968", Offset = "0x1002968", VA = "0x1002968", Slot = "60")]
		protected override Vector3 GetPositionOffset(HVRGrabbable grabbable)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x1002A68", Offset = "0x1002A68", VA = "0x1002A68")]
		public DemoHolster()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class DemoHolsterOrientation : MonoBehaviour
	{
		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Orientation;

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x1002A70", Offset = "0x1002A70", VA = "0x1002A70")]
		public DemoHolsterOrientation()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public class DemoKeyHologram : MonoBehaviour
	{
		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Interval;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float LastMove;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Vector3> Positions;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Index;

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x1002A78", Offset = "0x1002A78", VA = "0x1002A78")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x1002A7C", Offset = "0x1002A7C", VA = "0x1002A7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x1002B8C", Offset = "0x1002B8C", VA = "0x1002B8C")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x1002C04", Offset = "0x1002C04", VA = "0x1002C04")]
		public DemoKeyHologram()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class DemoKeypad : MonoBehaviour
	{
		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent Unlocked;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Code;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro Display;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Entry;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool ForceUnlock;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _unlocked;

		[Token(Token = "0x170001A1")]
		public int Index
		{
			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0x1002C94", Offset = "0x1002C94", VA = "0x1002C94")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A2")]
		public int MaxLength
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0x1002CAC", Offset = "0x1002CAC", VA = "0x1002CAC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x1002CC4", Offset = "0x1002CC4", VA = "0x1002CC4", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x1003028", Offset = "0x1003028", VA = "0x1003028", Slot = "5")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x1003044", Offset = "0x1003044", VA = "0x1003044", Slot = "6")]
		protected virtual void OnButtonDown(HVRPhysicsButton button)
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x1003228", Offset = "0x1003228", VA = "0x1003228", Slot = "7")]
		protected virtual void Unlock()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x10032C4", Offset = "0x10032C4", VA = "0x10032C4")]
		public DemoKeypad()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class DemoKeypadButton : HVRPhysicsButton
	{
		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public char Key;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public TextMeshPro TextMeshPro;

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x1003358", Offset = "0x1003358", VA = "0x1003358", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x10033DC", Offset = "0x10033DC", VA = "0x10033DC")]
		public DemoKeypadButton()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public class DemoLeverDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _step;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _angle;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro _tm;

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x10033E4", Offset = "0x10033E4", VA = "0x10033E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x1003440", Offset = "0x1003440", VA = "0x1003440")]
		public void OnStepChanged(int step)
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x1003520", Offset = "0x1003520", VA = "0x1003520")]
		public void OnAngleChanged(float angle, float delta)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x1003614", Offset = "0x1003614", VA = "0x1003614")]
		public DemoLeverDisplay()
		{
		}
	}
	[Token(Token = "0x2000299")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE67D70", Offset = "0xE67D70")]
	public class DemoLock : MonoBehaviour
	{
		[Token(Token = "0x200029A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67DD0", Offset = "0xE67DD0")]
		private sealed class <MoveKey>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HVRGrabbable key;

			[Token(Token = "0x4000CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DemoLock <>4__this;

			[Token(Token = "0x4000CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <start>5__2;

			[Token(Token = "0x4000CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Quaternion <startRot>5__3;

			[Token(Token = "0x4000CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsed>5__4;

			[Token(Token = "0x170001A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DE7")]
				[Address(RVA = "0x102FB44", Offset = "0x102FB44", VA = "0x102FB44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DE9")]
				[Address(RVA = "0x102FB8C", Offset = "0x102FB8C", VA = "0x102FB8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0x102F7A4", Offset = "0x102F7A4", VA = "0x102F7A4")]
			[DebuggerHidden]
			public <MoveKey>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0x102F7D0", Offset = "0x102F7D0", VA = "0x102F7D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0x102F7D4", Offset = "0x102F7D4", VA = "0x102F7D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x102FB4C", Offset = "0x102FB4C", VA = "0x102FB4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoPassthroughSocket Socket;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HVRGrabbable FaceGrabbable;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Face;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform Key;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float AnimationTime;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip SFXUnlocked;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip SFXKeyInserted;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float LockThreshold;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent Unlocked;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _unlocked;

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x100361C", Offset = "0x100361C", VA = "0x100361C")]
		public void Start()
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x1003710", Offset = "0x1003710", VA = "0x1003710")]
		public void Update()
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x1003940", Offset = "0x1003940", VA = "0x1003940")]
		private void OnKeyGrabbed(HVRGrabberBase grabber, HVRGrabbable key)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x1003970", Offset = "0x1003970", VA = "0x1003970")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8E3F0", Offset = "0xE8E3F0")]
		private IEnumerator MoveKey(HVRGrabbable key)
		{
			return null;
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x1003A04", Offset = "0x1003A04", VA = "0x1003A04")]
		public DemoLock()
		{
		}
	}
	[Token(Token = "0x200029B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE67DE0", Offset = "0xE67DE0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE67DE0", Offset = "0xE67DE0")]
	public class DemoLockedDoor : MonoBehaviour
	{
		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HingeJoint _hinge;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MinAngle;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MaxAngle;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool LockOnStart;

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x1003A84", Offset = "0x1003A84", VA = "0x1003A84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x1003B2C", Offset = "0x1003B2C", VA = "0x1003B2C")]
		private void Lock()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x1003BEC", Offset = "0x1003BEC", VA = "0x1003BEC")]
		public void Unlock()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x1003CAC", Offset = "0x1003CAC", VA = "0x1003CAC")]
		public DemoLockedDoor()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class DemoManualTeleport : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200029D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67E74", Offset = "0xE67E74")]
		private sealed class <>c
		{
			[Token(Token = "0x4000CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<HVRTeleporter, bool> <>9__6_0;

			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0x102FBF8", Offset = "0x102FBF8", VA = "0x102FBF8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0x102FC00", Offset = "0x102FC00", VA = "0x102FC00")]
			internal bool <Start>b__6_0(HVRTeleporter e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform PositionOne;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform PositionTwo;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7E304", Offset = "0xE7E304")]
		private HVRTeleporter <Teleporter>k__BackingField;

		[Token(Token = "0x170001A5")]
		public HVRTeleporter Teleporter
		{
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0x1003CBC", Offset = "0x1003CBC", VA = "0x1003CBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8E4A0", Offset = "0xE8E4A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0x1003CC4", Offset = "0x1003CC4", VA = "0x1003CC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8E4B0", Offset = "0xE8E4B0")]
			set
			{
			}
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x1003CCC", Offset = "0x1003CCC", VA = "0x1003CCC")]
		public void Start()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x1003E60", Offset = "0x1003E60", VA = "0x1003E60")]
		public void GoToOne()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x1003F8C", Offset = "0x1003F8C", VA = "0x1003F8C")]
		public void GoToTwo()
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x10040B8", Offset = "0x10040B8", VA = "0x10040B8")]
		public DemoManualTeleport()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class DemoPassthroughSocket : HVRSocket
	{
		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x10040C0", Offset = "0x10040C0", VA = "0x10040C0", Slot = "25")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x10040F8", Offset = "0x10040F8", VA = "0x10040F8", Slot = "41")]
		protected override void OnGrabbed(HVRGrabArgs args)
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x10041B8", Offset = "0x10041B8", VA = "0x10041B8")]
		public DemoPassthroughSocket()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class DemoPowerUnit : MonoBehaviour
	{
		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent PoweredUp;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HVRSocket LeftSocket;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HVRSocket RightSocket;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshRenderer LeftLight;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshRenderer RightLight;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public HVRRotationTracker LeverRotation;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float RequiredAngle;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip SFXPoweredOn;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int RequiredCells;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int SocketedCellCount;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool Engaged;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material OnMaterial;

		[Token(Token = "0x170001A6")]
		public bool IsPoweredUp
		{
			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0x10041C0", Offset = "0x10041C0", VA = "0x10041C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x10041D0", Offset = "0x10041D0", VA = "0x10041D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x10042EC", Offset = "0x10042EC", VA = "0x10042EC")]
		private void OnRightSocketGrabbed(HVRGrabberBase arg0, HVRGrabbable arg1)
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x1004394", Offset = "0x1004394", VA = "0x1004394")]
		private void OnLeftSocketGrabbed(HVRGrabberBase arg0, HVRGrabbable arg1)
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x100443C", Offset = "0x100443C", VA = "0x100443C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x10045E0", Offset = "0x10045E0", VA = "0x10045E0")]
		public DemoPowerUnit()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public enum SafeDialState
	{
		[Token(Token = "0x4000CBE")]
		CamOne,
		[Token(Token = "0x4000CBF")]
		CamTwo,
		[Token(Token = "0x4000CC0")]
		CamThree,
		[Token(Token = "0x4000CC1")]
		Unlocked
	}
	[Token(Token = "0x20002A1")]
	public class DemoSafeDial : HVRRotationTracker
	{
		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TextMeshPro NumberLabel;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TextMeshPro DebugLabel;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool DisplayDebug;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int First;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int Second;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int Third;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int CurrentNumber;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float CamDistance;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float PreviousDistance;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float Tolerance;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float LowerBound;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float UpperBound;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int AccuracyAllowance;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UnityEvent Unlocked;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private SafeDialState _state;

		[Token(Token = "0x170001A7")]
		public SafeDialState State
		{
			[Token(Token = "0x6000E00")]
			[Address(RVA = "0x1004660", Offset = "0x1004660", VA = "0x1004660")]
			get
			{
				return default(SafeDialState);
			}
			[Token(Token = "0x6000E01")]
			[Address(RVA = "0x1004668", Offset = "0x1004668", VA = "0x1004668")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public int NumberOfRotations
		{
			[Token(Token = "0x6000E02")]
			[Address(RVA = "0x100471C", Offset = "0x100471C", VA = "0x100471C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A9")]
		public bool IsFirstInRange
		{
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0x1004B50", Offset = "0x1004B50", VA = "0x1004B50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AA")]
		public bool IsSecondInRange
		{
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0x1004B7C", Offset = "0x1004B7C", VA = "0x1004B7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AB")]
		public bool IsThirdInRange
		{
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0x1004BA8", Offset = "0x1004BA8", VA = "0x1004BA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x100475C", Offset = "0x100475C", VA = "0x100475C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x1004670", Offset = "0x1004670", VA = "0x1004670")]
		private void ComputeBounds()
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x1004B48", Offset = "0x1004B48", VA = "0x1004B48", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x1004B20", Offset = "0x1004B20", VA = "0x1004B20")]
		public void ResetLockState(SafeDialState state)
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x1004BD0", Offset = "0x1004BD0", VA = "0x1004BD0", Slot = "6")]
		protected override void OnStepChanged(int step, bool raiseEvents)
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x100500C", Offset = "0x100500C", VA = "0x100500C", Slot = "7")]
		protected override void OnAngleChanged(float angle, float delta)
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x10051BC", Offset = "0x10051BC", VA = "0x10051BC")]
		public DemoSafeDial()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class DemoSafeDoor : MonoBehaviour
	{
		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x100524C", Offset = "0x100524C", VA = "0x100524C")]
		public DemoSafeDoor()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class DemoSlidingDoor : MonoBehaviour
	{
		[Token(Token = "0x20002A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67E84", Offset = "0xE67E84")]
		private sealed class <OpenDoorRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DemoSlidingDoor <>4__this;

			[Token(Token = "0x4000CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsed>5__2;

			[Token(Token = "0x4000CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <LockRotateSpeed>5__3;

			[Token(Token = "0x4000CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <time>5__4;

			[Token(Token = "0x170001AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E15")]
				[Address(RVA = "0x102FFB4", Offset = "0x102FFB4", VA = "0x102FFB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E17")]
				[Address(RVA = "0x102FFFC", Offset = "0x102FFFC", VA = "0x102FFFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E12")]
			[Address(RVA = "0x102FC2C", Offset = "0x102FC2C", VA = "0x102FC2C")]
			[DebuggerHidden]
			public <OpenDoorRoutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000E13")]
			[Address(RVA = "0x102FC58", Offset = "0x102FC58", VA = "0x102FC58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E14")]
			[Address(RVA = "0x102FC5C", Offset = "0x102FC5C", VA = "0x102FC5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E16")]
			[Address(RVA = "0x102FFBC", Offset = "0x102FFBC", VA = "0x102FFBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody LeftDoor;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody RightDoor;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Lock;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float LockRotateTime;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float LockRotateAngles;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float OpenOffset;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float Speed;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip OpenedClip;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _opened;

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x1005254", Offset = "0x1005254", VA = "0x1005254")]
		public void Start()
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x1005258", Offset = "0x1005258", VA = "0x1005258")]
		public void OpenDoors()
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x100538C", Offset = "0x100538C", VA = "0x100538C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8E4C0", Offset = "0xE8E4C0")]
		private IEnumerator OpenDoorRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x1005404", Offset = "0x1005404", VA = "0x1005404")]
		public DemoSlidingDoor()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class DemoSocketFilter : HVREnumFlagsSocketFilter<DemoSocketableItems>
	{
		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x1005418", Offset = "0x1005418", VA = "0x1005418")]
		public DemoSocketFilter()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class DemoSocketables : HVREnumFlagsSocketable<DemoSocketableItems>
	{
		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x1005464", Offset = "0x1005464", VA = "0x1005464")]
		public DemoSocketables()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	[Flags]
	public enum DemoSocketableItems
	{
		[Token(Token = "0x4000CE1")]
		None = 0,
		[Token(Token = "0x4000CE2")]
		Pistol = 1,
		[Token(Token = "0x4000CE3")]
		PistolMagazine = 2,
		[Token(Token = "0x4000CE4")]
		SMG = 4,
		[Token(Token = "0x4000CE5")]
		SMGMagazine = 8,
		[Token(Token = "0x4000CE6")]
		PowerCell = 0x10,
		[Token(Token = "0x4000CE7")]
		SmallObject = 0x20,
		[Token(Token = "0x4000CE8")]
		LargeObject = 0x40,
		[Token(Token = "0x4000CE9")]
		DoorKey = 0x80,
		[Token(Token = "0x4000CEA")]
		ShotgunShell = 0x100,
		[Token(Token = "0x4000CEB")]
		Valve = 0x200,
		[Token(Token = "0x4000CEC")]
		Key = 0x400,
		[Token(Token = "0x4000CED")]
		All = -1
	}
	[Token(Token = "0x20002A8")]
	public class DemoUIManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67EA4", Offset = "0xE67EA4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<HVRPlayerController, bool> <>9__21_0;

			[Token(Token = "0x4000D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<HVRHandGrabber, bool> <>9__21_1;

			[Token(Token = "0x4000D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<HVRHandGrabber, bool> <>9__21_2;

			[Token(Token = "0x4000D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<HVRForceGrabber, bool> <>9__21_3;

			[Token(Token = "0x4000D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<HVRForceGrabber, bool> <>9__21_4;

			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0x1030068", Offset = "0x1030068", VA = "0x1030068")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0x1030070", Offset = "0x1030070", VA = "0x1030070")]
			internal bool <Start>b__21_0(HVRPlayerController e)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0x103009C", Offset = "0x103009C", VA = "0x103009C")]
			internal bool <Start>b__21_1(HVRHandGrabber e)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0x10300BC", Offset = "0x10300BC", VA = "0x10300BC")]
			internal bool <Start>b__21_2(HVRHandGrabber e)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0x10300DC", Offset = "0x10300DC", VA = "0x10300DC")]
			internal bool <Start>b__21_3(HVRForceGrabber e)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E30")]
			[Address(RVA = "0x1030108", Offset = "0x1030108", VA = "0x1030108")]
			internal bool <Start>b__21_4(HVRForceGrabber e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HVRPlayerController Player;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HVRCameraRig CameraRig;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HVRPlayerInputs Inputs;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI SitStandText;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI PauseText;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI ForceGrabText;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI LeftForceText;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshProUGUI RightForceText;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Slider TurnRateSlider;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Slider SnapTurnSlider;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshProUGUI TurnRateText;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshProUGUI SnapRateText;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEngine.UI.Toggle SmoothTurnToggle;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEngine.UI.Toggle LineGrabTrigger;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public HVRForceGrabber LeftForce;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public HVRForceGrabber RightForce;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public HVRJointHand LeftHand;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public HVRJointHand RightHand;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform leftparent;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform rightParent;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool Paused;

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x10054B0", Offset = "0x10054B0", VA = "0x10054B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x100629C", Offset = "0x100629C", VA = "0x100629C")]
		private void OnLineGrabTriggerChanged(bool arg0)
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x10062D0", Offset = "0x10062D0", VA = "0x10062D0")]
		public void CalibrateHeight()
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x100635C", Offset = "0x100635C", VA = "0x100635C")]
		public void OnSitStandClicked()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x10063A0", Offset = "0x10063A0", VA = "0x10063A0")]
		public void OnForceGrabClicked()
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x1006098", Offset = "0x1006098", VA = "0x1006098")]
		private void UpdateForceGrabButton()
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x1005FEC", Offset = "0x1005FEC", VA = "0x1005FEC")]
		private void UpdateSitStandButton()
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x10063CC", Offset = "0x10063CC", VA = "0x10063CC")]
		public void OnTurnRateChanged(float rate)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x1006424", Offset = "0x1006424", VA = "0x1006424")]
		public void OnSnapTurnRateChanged(float rate)
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x100647C", Offset = "0x100647C", VA = "0x100647C")]
		public void OnSmoothTurnChanged(bool smooth)
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x10064A0", Offset = "0x10064A0", VA = "0x10064A0")]
		public void OnLeftForceGrabModeClicked()
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x100653C", Offset = "0x100653C", VA = "0x100653C")]
		public void OnRightForceGrabModeClicked()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x1006144", Offset = "0x1006144", VA = "0x1006144")]
		private void UpdateLeftForceButton()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x10061F0", Offset = "0x10061F0", VA = "0x10061F0")]
		private void UpdateRightForceButton()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x10065D8", Offset = "0x10065D8", VA = "0x10065D8")]
		public void TogglePause()
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x1006794", Offset = "0x1006794", VA = "0x1006794")]
		public DemoUIManager()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class DemoValveHologram : MonoBehaviour
	{
		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Interval;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion StartRotation;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion EndRotation;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion _current;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion _next;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _elapsed;

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x100679C", Offset = "0x100679C", VA = "0x100679C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x10067B0", Offset = "0x10067B0", VA = "0x10067B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x1006858", Offset = "0x1006858", VA = "0x1006858")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x10068D0", Offset = "0x10068D0", VA = "0x10068D0")]
		public DemoValveHologram()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE67EB4", Offset = "0xE67EB4")]
	public class DemoValveLock : MonoBehaviour
	{
		[Token(Token = "0x20002AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE67F14", Offset = "0xE67F14")]
		private sealed class <MoveKey>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HVRGrabbable key;

			[Token(Token = "0x4000D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DemoValveLock <>4__this;

			[Token(Token = "0x4000D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <start>5__2;

			[Token(Token = "0x4000D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Quaternion <startRot>5__3;

			[Token(Token = "0x4000D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsed>5__4;

			[Token(Token = "0x170001AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E3D")]
				[Address(RVA = "0x103040C", Offset = "0x103040C", VA = "0x103040C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E3F")]
				[Address(RVA = "0x1030454", Offset = "0x1030454", VA = "0x1030454", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x1030134", Offset = "0x1030134", VA = "0x1030134")]
			[DebuggerHidden]
			public <MoveKey>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x1030160", Offset = "0x1030160", VA = "0x1030160", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0x1030164", Offset = "0x1030164", VA = "0x1030164", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0x1030414", Offset = "0x1030414", VA = "0x1030414", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoPassthroughSocket Socket;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HVRGrabbable FaceGrabbable;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AnimationTime;

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x10068E4", Offset = "0x10068E4", VA = "0x10068E4")]
		public void Start()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x10069D8", Offset = "0x10069D8", VA = "0x10069D8")]
		public void Update()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x10069DC", Offset = "0x10069DC", VA = "0x10069DC")]
		private void OnValveGrabbed(HVRGrabberBase grabber, HVRGrabbable key)
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x1006A0C", Offset = "0x1006A0C", VA = "0x1006A0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8E570", Offset = "0xE8E570")]
		private IEnumerator MoveKey(HVRGrabbable key)
		{
			return null;
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x1006AA0", Offset = "0x1006AA0", VA = "0x1006AA0")]
		public DemoValveLock()
		{
		}
	}
}
namespace HurricaneVR.Framework.Oculus
{
	[Token(Token = "0x20002AD")]
	public class HVROculusManager : MonoBehaviour
	{
		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MonoBehaviour[] ComponentsToDisable;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<MonoBehaviour, Vector3> Stuff;

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x10D89F8", Offset = "0x10D89F8", VA = "0x10D89F8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x10D8AE4", Offset = "0x10D8AE4", VA = "0x10D8AE4")]
		private void OnResume()
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x10D8BD4", Offset = "0x10D8BD4", VA = "0x10D8BD4")]
		private void OnPaused()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x10D8D0C", Offset = "0x10D8D0C", VA = "0x10D8D0C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x10D8DF8", Offset = "0x10D8DF8", VA = "0x10D8DF8")]
		public HVROculusManager()
		{
		}
	}
}
namespace HurricaneVR.MT_Extensions
{
	[Token(Token = "0x20002AE")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE67F24", Offset = "0xE67F24")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE67F24", Offset = "0xE67F24")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE67F24", Offset = "0xE67F24")]
	public sealed class HVRRotationEvent : MonoBehaviour
	{
		[Token(Token = "0x20002AF")]
		public enum TriggerType
		{
			[Token(Token = "0x4000D21")]
			OneShot,
			[Token(Token = "0x4000D22")]
			Repeat
		}

		[Serializable]
		[Token(Token = "0x20002B0")]
		public class RotationEvent
		{
			[Token(Token = "0x4000D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x4000D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TriggerType triggerType;

			[Token(Token = "0x4000D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEvent triggerEvent;

			[Token(Token = "0x4000D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int eventAngle;

			[Token(Token = "0x4000D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool clamped;

			[Token(Token = "0x4000D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
			private bool _triggered;

			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0x10319B4", Offset = "0x10319B4", VA = "0x10319B4")]
			public bool GetTriggered()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x10319BC", Offset = "0x10319BC", VA = "0x10319BC")]
			public void Trigger()
			{
			}

			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x10319F4", Offset = "0x10319F4", VA = "0x10319F4")]
			public RotationEvent()
			{
			}
		}

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HVRRotationTracker rotationTracker;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RotationEvent[] events;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _previousAngle;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _currentAngle;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _steps;

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x10D8E7C", Offset = "0x10D8E7C", VA = "0x10D8E7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x10D8F30", Offset = "0x10D8F30", VA = "0x10D8F30")]
		private void ClampRotationEventAngles()
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x10D8FBC", Offset = "0x10D8FBC", VA = "0x10D8FBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x10D90A4", Offset = "0x10D90A4", VA = "0x10D90A4")]
		private void CheckRotatorEvent(int index)
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x10D914C", Offset = "0x10D914C", VA = "0x10D914C")]
		public HVRRotationEvent()
		{
		}
	}
}
namespace Gridly
{
	[Token(Token = "0x20002B1")]
	public enum JSONNodeType
	{
		[Token(Token = "0x4000D2A")]
		Array = 1,
		[Token(Token = "0x4000D2B")]
		Object = 2,
		[Token(Token = "0x4000D2C")]
		String = 3,
		[Token(Token = "0x4000D2D")]
		Number = 4,
		[Token(Token = "0x4000D2E")]
		NullValue = 5,
		[Token(Token = "0x4000D2F")]
		Boolean = 6,
		[Token(Token = "0x4000D30")]
		None = 7,
		[Token(Token = "0x4000D31")]
		Custom = 255
	}
	[Token(Token = "0x20002B2")]
	public enum JSONTextMode
	{
		[Token(Token = "0x4000D33")]
		Compact,
		[Token(Token = "0x4000D34")]
		Indent
	}
	[Token(Token = "0x20002B3")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xE67FCC", Offset = "0xE67FCC")]
	public abstract class JSONNode
	{
		[Token(Token = "0x20002B4")]
		public struct Enumerator
		{
			[Token(Token = "0x20002B5")]
			private enum Type
			{
				[Token(Token = "0x4000D3B")]
				None,
				[Token(Token = "0x4000D3C")]
				Array,
				[Token(Token = "0x4000D3D")]
				Object
			}

			[Token(Token = "0x4000D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Type type;

			[Token(Token = "0x4000D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Dictionary<string, JSONNode>.Enumerator m_Object;

			[Token(Token = "0x4000D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator m_Array;

			[Token(Token = "0x170001C8")]
			public bool IsValid
			{
				[Token(Token = "0x6000E8A")]
				[Address(RVA = "0x1032F74", Offset = "0x1032F74", VA = "0x1032F74")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001C9")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6000E8D")]
				[Address(RVA = "0x1033000", Offset = "0x1033000", VA = "0x1033000")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0x1032F84", Offset = "0x1032F84", VA = "0x1032F84")]
			public Enumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0x1032FB8", Offset = "0x1032FB8", VA = "0x1032FB8")]
			public Enumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0x10330D4", Offset = "0x10330D4", VA = "0x10330D4")]
			public bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002B6")]
		public struct ValueEnumerator
		{
			[Token(Token = "0x4000D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170001CA")]
			public JSONNode Current
			{
				[Token(Token = "0x6000E92")]
				[Address(RVA = "0x1033784", Offset = "0x1033784", VA = "0x1033784")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0x1033658", Offset = "0x1033658", VA = "0x1033658")]
			public ValueEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x10336CC", Offset = "0x10336CC", VA = "0x10336CC")]
			public ValueEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6000E91")]
			[Address(RVA = "0x1033758", Offset = "0x1033758", VA = "0x1033758")]
			public ValueEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x10337CC", Offset = "0x10337CC", VA = "0x10337CC")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x10337D0", Offset = "0x10337D0", VA = "0x10337D0")]
			public ValueEnumerator GetEnumerator()
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x20002B7")]
		public struct KeyEnumerator
		{
			[Token(Token = "0x4000D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170001CB")]
			public JSONNode Current
			{
				[Token(Token = "0x6000E98")]
				[Address(RVA = "0x1033298", Offset = "0x1033298", VA = "0x1033298")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E95")]
			[Address(RVA = "0x103316C", Offset = "0x103316C", VA = "0x103316C")]
			public KeyEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6000E96")]
			[Address(RVA = "0x10331E0", Offset = "0x10331E0", VA = "0x10331E0")]
			public KeyEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6000E97")]
			[Address(RVA = "0x103326C", Offset = "0x103326C", VA = "0x103326C")]
			public KeyEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x6000E99")]
			[Address(RVA = "0x1033318", Offset = "0x1033318", VA = "0x1033318")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0x103331C", Offset = "0x103331C", VA = "0x103331C")]
			public KeyEnumerator GetEnumerator()
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x20002B8")]
		public class LinqEnumerator : IEnumerator<KeyValuePair<string, JSONNode>>, IEnumerator, IDisposable, IEnumerable<KeyValuePair<string, JSONNode>>, IEnumerable
		{
			[Token(Token = "0x4000D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private JSONNode m_Node;

			[Token(Token = "0x4000D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170001CC")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6000E9C")]
				[Address(RVA = "0x1033420", Offset = "0x1033420", VA = "0x1033420", Slot = "4")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x170001CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E9D")]
				[Address(RVA = "0x1033428", Offset = "0x1033428", VA = "0x1033428", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0x103332C", Offset = "0x103332C", VA = "0x103332C")]
			internal LinqEnumerator(JSONNode aNode)
			{
			}

			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0x1033490", Offset = "0x1033490", VA = "0x1033490", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0x1033498", Offset = "0x1033498", VA = "0x1033498", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x10334D0", Offset = "0x10334D0", VA = "0x10334D0", Slot = "9")]
			public IEnumerator<KeyValuePair<string, JSONNode>> GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0x1033530", Offset = "0x1033530", VA = "0x1033530", Slot = "8")]
			public void Reset()
			{
			}

			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0x10335F8", Offset = "0x10335F8", VA = "0x10335F8", Slot = "10")]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20002B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE68004", Offset = "0xE68004")]
		private sealed class <get_Children>d__39 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4000D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x170001CE")]
			private JSONNode System.Collections.Generic.IEnumerator<Gridly.JSONNode>.Current
			{
				[Token(Token = "0x6000EA6")]
				[Address(RVA = "0x10326DC", Offset = "0x10326DC", VA = "0x10326DC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EA8")]
				[Address(RVA = "0x1032724", Offset = "0x1032724", VA = "0x1032724", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0x1032688", Offset = "0x1032688", VA = "0x1032688")]
			[DebuggerHidden]
			public <get_Children>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x10326C0", Offset = "0x10326C0", VA = "0x10326C0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0x10326C4", Offset = "0x10326C4", VA = "0x10326C4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0x10326E4", Offset = "0x10326E4", VA = "0x10326E4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0x103272C", Offset = "0x103272C", VA = "0x103272C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<Gridly.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x10327C0", Offset = "0x10327C0", VA = "0x10327C0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20002BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE68014", Offset = "0xE68014")]
		private sealed class <get_DeepChildren>d__41 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4000D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4000D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4000D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x170001D0")]
			private JSONNode System.Collections.Generic.IEnumerator<Gridly.JSONNode>.Current
			{
				[Token(Token = "0x6000EB0")]
				[Address(RVA = "0x1032E70", Offset = "0x1032E70", VA = "0x1032E70", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EB2")]
				[Address(RVA = "0x1032EB8", Offset = "0x1032EB8", VA = "0x1032EB8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0x10327C4", Offset = "0x10327C4", VA = "0x10327C4")]
			[DebuggerHidden]
			public <get_DeepChildren>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x10327FC", Offset = "0x10327FC", VA = "0x10327FC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0x1032A04", Offset = "0x1032A04", VA = "0x1032A04", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x1032948", Offset = "0x1032948", VA = "0x1032948")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x103288C", Offset = "0x103288C", VA = "0x103288C")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0x1032E78", Offset = "0x1032E78", VA = "0x1032E78", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000EB3")]
			[Address(RVA = "0x1032EC0", Offset = "0x1032EC0", VA = "0x1032EC0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<Gridly.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x1032F70", Offset = "0x1032F70", VA = "0x1032F70", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool forceASCII;

		[Token(Token = "0x4000D36")]
		[ThreadStatic]
		private static StringBuilder m_EscapeBuilder;

		[Token(Token = "0x170001B0")]
		public abstract JSONNodeType Tag
		{
			[Token(Token = "0x6000E4D")]
			get;
		}

		[Token(Token = "0x170001B1")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0x10E1AFC", Offset = "0x10E1AFC", VA = "0x10E1AFC", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0x10E1B04", Offset = "0x10E1B04", VA = "0x10E1B04", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0x10E1B08", Offset = "0x10E1B08", VA = "0x10E1B08", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E51")]
			[Address(RVA = "0x10E1B10", Offset = "0x10E1B10", VA = "0x10E1B10", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public virtual string Value
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x10E1B14", Offset = "0x10E1B14", VA = "0x10E1B14", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x10E1B58", Offset = "0x10E1B58", VA = "0x10E1B58", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public virtual int Count
		{
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0x10E1B5C", Offset = "0x10E1B5C", VA = "0x10E1B5C", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001B5")]
		public virtual bool IsNumber
		{
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x10E1B64", Offset = "0x10E1B64", VA = "0x10E1B64", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B6")]
		public virtual bool IsString
		{
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x10E1B6C", Offset = "0x10E1B6C", VA = "0x10E1B6C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B7")]
		public virtual bool IsBoolean
		{
			[Token(Token = "0x6000E57")]
			[Address(RVA = "0x10E1B74", Offset = "0x10E1B74", VA = "0x10E1B74", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B8")]
		public virtual bool IsNull
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x10E1B7C", Offset = "0x10E1B7C", VA = "0x10E1B7C", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B9")]
		public virtual bool IsArray
		{
			[Token(Token = "0x6000E59")]
			[Address(RVA = "0x10E1B84", Offset = "0x10E1B84", VA = "0x10E1B84", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BA")]
		public virtual bool IsObject
		{
			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0x10E1B8C", Offset = "0x10E1B8C", VA = "0x10E1B8C", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BB")]
		public virtual bool Inline
		{
			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0x10E1B94", Offset = "0x10E1B94", VA = "0x10E1B94", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0x10E1B9C", Offset = "0x10E1B9C", VA = "0x10E1B9C", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000E62")]
			[Address(RVA = "0x10E1C24", Offset = "0x10E1C24", VA = "0x10E1C24", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8E620", Offset = "0xE8E620")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x6000E63")]
			[Address(RVA = "0x10E1C80", Offset = "0x10E1C80", VA = "0x10E1C80")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8E680", Offset = "0xE8E680")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		public IEnumerable<KeyValuePair<string, JSONNode>> Linq
		{
			[Token(Token = "0x6000E68")]
			[Address(RVA = "0x10E1E24", Offset = "0x10E1E24", VA = "0x10E1E24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		public KeyEnumerator Keys
		{
			[Token(Token = "0x6000E69")]
			[Address(RVA = "0x10E1E84", Offset = "0x10E1E84", VA = "0x10E1E84")]
			get
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x170001C0")]
		public ValueEnumerator Values
		{
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x10E1ED8", Offset = "0x10E1ED8", VA = "0x10E1ED8")]
			get
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x170001C1")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0x10E1F2C", Offset = "0x10E1F2C", VA = "0x10E1F2C", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0x10E1FCC", Offset = "0x10E1FCC", VA = "0x10E1FCC", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public virtual int AsInt
		{
			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0x10E200C", Offset = "0x10E200C", VA = "0x10E200C", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0x10E2044", Offset = "0x10E2044", VA = "0x10E2044", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x10E205C", Offset = "0x10E205C", VA = "0x10E205C", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E70")]
			[Address(RVA = "0x10E2080", Offset = "0x10E2080", VA = "0x10E2080", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6000E71")]
			[Address(RVA = "0x10E2094", Offset = "0x10E2094", VA = "0x10E2094", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E72")]
			[Address(RVA = "0x10E2158", Offset = "0x10E2158", VA = "0x10E2158", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6000E73")]
			[Address(RVA = "0x10E21DC", Offset = "0x10E21DC", VA = "0x10E21DC", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		public virtual JSONObject AsObject
		{
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x10E2258", Offset = "0x10E2258", VA = "0x10E2258", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		internal static StringBuilder EscapeBuilder
		{
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x10E28E0", Offset = "0x10E28E0", VA = "0x10E28E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x10E1BA0", Offset = "0x10E1BA0", VA = "0x10E1BA0", Slot = "20")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x10E1BA4", Offset = "0x10E1BA4", VA = "0x10E1BA4", Slot = "21")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x10E1C0C", Offset = "0x10E1C0C", VA = "0x10E1C0C", Slot = "22")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x10E1C14", Offset = "0x10E1C14", VA = "0x10E1C14", Slot = "23")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x10E1C1C", Offset = "0x10E1C1C", VA = "0x10E1C1C", Slot = "24")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x10E1CF8", Offset = "0x10E1CF8", VA = "0x10E1CF8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x10E1D88", Offset = "0x10E1D88", VA = "0x10E1D88", Slot = "26")]
		public virtual string ToString(int aIndent)
		{
			return null;
		}

		[Token(Token = "0x6000E66")]
		internal abstract void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode);

		[Token(Token = "0x6000E67")]
		public abstract Enumerator GetEnumerator();

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x10E22D4", Offset = "0x10E22D4", VA = "0x10E22D4")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x10E23B0", Offset = "0x10E23B0", VA = "0x10E23B0")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x10E2440", Offset = "0x10E2440", VA = "0x10E2440")]
		public static implicit operator JSONNode(double n)
		{
			return null;
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x10E24A4", Offset = "0x10E24A4", VA = "0x10E24A4")]
		public static implicit operator double(JSONNode d)
		{
			return default(double);
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x10E2538", Offset = "0x10E2538", VA = "0x10E2538")]
		public static implicit operator JSONNode(float n)
		{
			return null;
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x10E259C", Offset = "0x10E259C", VA = "0x10E259C")]
		public static implicit operator float(JSONNode d)
		{
			return default(float);
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x10E2630", Offset = "0x10E2630", VA = "0x10E2630")]
		public static implicit operator JSONNode(int n)
		{
			return null;
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x10E268C", Offset = "0x10E268C", VA = "0x10E268C")]
		public static implicit operator int(JSONNode d)
		{
			return default(int);
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x10E2720", Offset = "0x10E2720", VA = "0x10E2720")]
		public static implicit operator JSONNode(bool b)
		{
			return null;
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x10E277C", Offset = "0x10E277C", VA = "0x10E277C")]
		public static implicit operator bool(JSONNode d)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x10E2810", Offset = "0x10E2810", VA = "0x10E2810")]
		public static implicit operator JSONNode(KeyValuePair<string, JSONNode> aKeyValue)
		{
			return null;
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x10E05A0", Offset = "0x10E05A0", VA = "0x10E05A0")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x10E2850", Offset = "0x10E2850", VA = "0x10E2850")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x10E28CC", Offset = "0x10E28CC", VA = "0x10E28CC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x10E28D8", Offset = "0x10E28D8", VA = "0x10E28D8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x10E29C0", Offset = "0x10E29C0", VA = "0x10E29C0")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x10E2CC8", Offset = "0x10E2CC8", VA = "0x10E2CC8")]
		private static void ParseElement(JSONNode ctx, string token, string tokenName, bool quoted)
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x10DFC30", Offset = "0x10DFC30", VA = "0x10DFC30")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x10E0DF8", Offset = "0x10E0DF8", VA = "0x10E0DF8")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xE68024", Offset = "0xE68024")]
	public class JSONArray : JSONNode
	{
		[Token(Token = "0x20002BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6805C", Offset = "0xE6805C")]
		private sealed class <get_Children>d__22 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4000D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x4000D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170001D9")]
			private JSONNode System.Collections.Generic.IEnumerator<Gridly.JSONNode>.Current
			{
				[Token(Token = "0x6000EC9")]
				[Address(RVA = "0x1032584", Offset = "0x1032584", VA = "0x1032584", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000ECB")]
				[Address(RVA = "0x10325CC", Offset = "0x10325CC", VA = "0x10325CC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0x1032350", Offset = "0x1032350", VA = "0x1032350")]
			[DebuggerHidden]
			public <get_Children>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0x1032388", Offset = "0x1032388", VA = "0x1032388", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0x10323F8", Offset = "0x10323F8", VA = "0x10323F8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0x10323A4", Offset = "0x10323A4", VA = "0x10323A4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0x103258C", Offset = "0x103258C", VA = "0x103258C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0x10325D4", Offset = "0x10325D4", VA = "0x10325D4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<Gridly.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0x1032684", Offset = "0x1032684", VA = "0x1032684", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inline;

		[Token(Token = "0x170001D2")]
		public override bool Inline
		{
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0x10E027C", Offset = "0x10E027C", VA = "0x10E027C", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0x10E0284", Offset = "0x10E0284", VA = "0x10E0284", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0x10E0290", Offset = "0x10E0290", VA = "0x10E0290", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170001D4")]
		public override bool IsArray
		{
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x10E0298", Offset = "0x10E0298", VA = "0x10E0298", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D5")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0x10E0330", Offset = "0x10E0330", VA = "0x10E0330", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x10E0478", Offset = "0x10E0478", VA = "0x10E0478", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x10E07D4", Offset = "0x10E07D4", VA = "0x10E07D4", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x10E0830", Offset = "0x10E0830", VA = "0x10E0830", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public override int Count
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x10E0904", Offset = "0x10E0904", VA = "0x10E0904", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D8")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0x10E0B50", Offset = "0x10E0B50", VA = "0x10E0B50", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8E7C0", Offset = "0xE8E7C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x10E02A0", Offset = "0x10E02A0", VA = "0x10E02A0", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x10E0950", Offset = "0x10E0950", VA = "0x10E0950", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x10E0A24", Offset = "0x10E0A24", VA = "0x10E0A24", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x10E0AE4", Offset = "0x10E0AE4", VA = "0x10E0AE4", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x10E0BC8", Offset = "0x10E0BC8", VA = "0x10E0BC8", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x10E0D48", Offset = "0x10E0D48", VA = "0x10E0D48")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xE6806C", Offset = "0xE6806C")]
	public class JSONObject : JSONNode
	{
		[Token(Token = "0x20002BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE680A4", Offset = "0xE680A4")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4000D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0x10337E0", Offset = "0x10337E0", VA = "0x10337E0")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x10337E8", Offset = "0x10337E8", VA = "0x10337E8")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE680B4", Offset = "0xE680B4")]
		private sealed class <get_Children>d__23 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4000D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONObject <>4__this;

			[Token(Token = "0x4000D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170001E2")]
			private JSONNode System.Collections.Generic.IEnumerator<Gridly.JSONNode>.Current
			{
				[Token(Token = "0x6000EE5")]
				[Address(RVA = "0x1033AB4", Offset = "0x1033AB4", VA = "0x1033AB4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EE7")]
				[Address(RVA = "0x1033AFC", Offset = "0x1033AFC", VA = "0x1033AFC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0x103386C", Offset = "0x103386C", VA = "0x103386C")]
			[DebuggerHidden]
			public <get_Children>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x10338A4", Offset = "0x10338A4", VA = "0x10338A4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x1033914", Offset = "0x1033914", VA = "0x1033914", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x10338C0", Offset = "0x10338C0", VA = "0x10338C0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x1033ABC", Offset = "0x1033ABC", VA = "0x1033ABC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x1033B04", Offset = "0x1033B04", VA = "0x1033B04", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<Gridly.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0x1033BB4", Offset = "0x1033BB4", VA = "0x1033BB4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inline;

		[Token(Token = "0x170001DB")]
		public override bool Inline
		{
			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0x10E35A4", Offset = "0x10E35A4", VA = "0x10E35A4", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x10E35AC", Offset = "0x10E35AC", VA = "0x10E35AC", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x10E35B8", Offset = "0x10E35B8", VA = "0x10E35B8", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170001DD")]
		public override bool IsObject
		{
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0x10E35C0", Offset = "0x10E35C0", VA = "0x10E35C0", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DE")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0x10E3658", Offset = "0x10E3658", VA = "0x10E3658", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0x10E3728", Offset = "0x10E3728", VA = "0x10E3728", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0x10E3868", Offset = "0x10E3868", VA = "0x10E3868", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0x10E3914", Offset = "0x10E3914", VA = "0x10E3914", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public override int Count
		{
			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0x10E3A68", Offset = "0x10E3A68", VA = "0x10E3A68", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E1")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0x10E4014", Offset = "0x10E4014", VA = "0x10E4014", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8E890", Offset = "0xE8E890")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x10E35C8", Offset = "0x10E35C8", VA = "0x10E35C8", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x10E3ABC", Offset = "0x10E3ABC", VA = "0x10E3ABC", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x10E3C78", Offset = "0x10E3C78", VA = "0x10E3C78", Slot = "22")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x10E3D48", Offset = "0x10E3D48", VA = "0x10E3D48", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x10E3E30", Offset = "0x10E3E30", VA = "0x10E3E30", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x10E408C", Offset = "0x10E408C", VA = "0x10E408C", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x10E13FC", Offset = "0x10E13FC", VA = "0x10E13FC")]
		public JSONObject()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class JSONString : JSONNode
	{
		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x170001E4")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0x10E43AC", Offset = "0x10E43AC", VA = "0x10E43AC", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170001E5")]
		public override bool IsString
		{
			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0x10E43B4", Offset = "0x10E43B4", VA = "0x10E43B4", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E6")]
		public override string Value
		{
			[Token(Token = "0x6000EED")]
			[Address(RVA = "0x10E43DC", Offset = "0x10E43DC", VA = "0x10E43DC", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x10E43E4", Offset = "0x10E43E4", VA = "0x10E43E4", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x10E43BC", Offset = "0x10E43BC", VA = "0x10E43BC", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x10E2330", Offset = "0x10E2330", VA = "0x10E2330")]
		public JSONString(string aData)
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x10E43EC", Offset = "0x10E43EC", VA = "0x10E43EC", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x10E44A0", Offset = "0x10E44A0", VA = "0x10E44A0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x10E45C8", Offset = "0x10E45C8", VA = "0x10E45C8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002C1")]
	public class JSONNumber : JSONNode
	{
		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double m_Data;

		[Token(Token = "0x170001E7")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000EF3")]
			[Address(RVA = "0x10E313C", Offset = "0x10E313C", VA = "0x10E313C", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170001E8")]
		public override bool IsNumber
		{
			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0x10E3144", Offset = "0x10E3144", VA = "0x10E3144", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E9")]
		public override string Value
		{
			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x10E316C", Offset = "0x10E316C", VA = "0x10E316C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0x10E3178", Offset = "0x10E3178", VA = "0x10E3178", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public override double AsDouble
		{
			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0x10E3200", Offset = "0x10E3200", VA = "0x10E3200", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0x10E3208", Offset = "0x10E3208", VA = "0x10E3208", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x10E314C", Offset = "0x10E314C", VA = "0x10E314C", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x10E167C", Offset = "0x10E167C", VA = "0x10E167C")]
		public JSONNumber(double aData)
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x10E3210", Offset = "0x10E3210", VA = "0x10E3210")]
		public JSONNumber(string aData)
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x10E3294", Offset = "0x10E3294", VA = "0x10E3294", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x10E32B4", Offset = "0x10E32B4", VA = "0x10E32B4")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x10E3458", Offset = "0x10E3458", VA = "0x10E3458", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x10E3598", Offset = "0x10E3598", VA = "0x10E3598", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002C2")]
	public class JSONBool : JSONNode
	{
		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Data;

		[Token(Token = "0x170001EB")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x10E0E00", Offset = "0x10E0E00", VA = "0x10E0E00", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170001EC")]
		public override bool IsBoolean
		{
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x10E0E08", Offset = "0x10E0E08", VA = "0x10E0E08", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001ED")]
		public override string Value
		{
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x10E0E30", Offset = "0x10E0E30", VA = "0x10E0E30", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x10E0E3C", Offset = "0x10E0E3C", VA = "0x10E0E3C", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public override bool AsBool
		{
			[Token(Token = "0x6000F05")]
			[Address(RVA = "0x10E0EC4", Offset = "0x10E0EC4", VA = "0x10E0EC4", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F06")]
			[Address(RVA = "0x10E0ECC", Offset = "0x10E0ECC", VA = "0x10E0ECC", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x10E0E10", Offset = "0x10E0E10", VA = "0x10E0E10", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x10E0ED8", Offset = "0x10E0ED8", VA = "0x10E0ED8")]
		public JSONBool(bool aData)
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x10E0F54", Offset = "0x10E0F54", VA = "0x10E0F54")]
		public JSONBool(string aData)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x10E0FD8", Offset = "0x10E0FD8", VA = "0x10E0FD8", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x10E105C", Offset = "0x10E105C", VA = "0x10E105C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x10E10E0", Offset = "0x10E10E0", VA = "0x10E10E0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002C3")]
	public class JSONNull : JSONNode
	{
		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static JSONNull m_StaticInstance;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool reuseSameInstance;

		[Token(Token = "0x170001EF")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0x10E2F4C", Offset = "0x10E2F4C", VA = "0x10E2F4C", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170001F0")]
		public override bool IsNull
		{
			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0x10E2F54", Offset = "0x10E2F54", VA = "0x10E2F54", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F1")]
		public override string Value
		{
			[Token(Token = "0x6000F11")]
			[Address(RVA = "0x10E2F7C", Offset = "0x10E2F7C", VA = "0x10E2F7C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0x10E2FC0", Offset = "0x10E2FC0", VA = "0x10E2FC0", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public override bool AsBool
		{
			[Token(Token = "0x6000F13")]
			[Address(RVA = "0x10E2FC4", Offset = "0x10E2FC4", VA = "0x10E2FC4", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x10E2FCC", Offset = "0x10E2FCC", VA = "0x10E2FCC", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x10E0738", Offset = "0x10E0738", VA = "0x10E0738")]
		public static JSONNull CreateOrGet()
		{
			return null;
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x10E2EE8", Offset = "0x10E2EE8", VA = "0x10E2EE8")]
		private JSONNull()
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x10E2F5C", Offset = "0x10E2F5C", VA = "0x10E2F5C", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x10E2FD0", Offset = "0x10E2FD0", VA = "0x10E2FD0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x10E3068", Offset = "0x10E3068", VA = "0x10E3068", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x10E3070", Offset = "0x10E3070", VA = "0x10E3070", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x20002C4")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xE680C4", Offset = "0xE680C4")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x170001F3")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x10E10EC", Offset = "0x10E10EC", VA = "0x10E10EC", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170001F4")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0x10E121C", Offset = "0x10E121C", VA = "0x10E121C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0x10E1278", Offset = "0x10E1278", VA = "0x10E1278", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000F20")]
			[Address(RVA = "0x10E1300", Offset = "0x10E1300", VA = "0x10E1300", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F21")]
			[Address(RVA = "0x10E136C", Offset = "0x10E136C", VA = "0x10E136C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public override int AsInt
		{
			[Token(Token = "0x6000F28")]
			[Address(RVA = "0x10E1614", Offset = "0x10E1614", VA = "0x10E1614", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F29")]
			[Address(RVA = "0x10E16F4", Offset = "0x10E16F4", VA = "0x10E16F4", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public override float AsFloat
		{
			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0x10E1760", Offset = "0x10E1760", VA = "0x10E1760", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0x10E17C8", Offset = "0x10E17C8", VA = "0x10E17C8", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public override double AsDouble
		{
			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0x10E1834", Offset = "0x10E1834", VA = "0x10E1834", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0x10E189C", Offset = "0x10E189C", VA = "0x10E189C", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public override bool AsBool
		{
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0x10E1908", Offset = "0x10E1908", VA = "0x10E1908", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0x10E1970", Offset = "0x10E1970", VA = "0x10E1970", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6000F30")]
			[Address(RVA = "0x10E19DC", Offset = "0x10E19DC", VA = "0x10E19DC", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		public override JSONObject AsObject
		{
			[Token(Token = "0x6000F31")]
			[Address(RVA = "0x10E1A40", Offset = "0x10E1A40", VA = "0x10E1A40", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x10E10F4", Offset = "0x10E10F4", VA = "0x10E10F4", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x10E03E8", Offset = "0x10E03E8", VA = "0x10E03E8")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x10E1114", Offset = "0x10E1114", VA = "0x10E1114")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x10E11A8", Offset = "0x10E11A8", VA = "0x10E11A8")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x10E14AC", Offset = "0x10E14AC", VA = "0x10E14AC", Slot = "21")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x10E1534", Offset = "0x10E1534", VA = "0x10E1534", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x10E15C4", Offset = "0x10E15C4", VA = "0x10E15C4")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x10E15DC", Offset = "0x10E15DC", VA = "0x10E15DC")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x10E15F4", Offset = "0x10E15F4", VA = "0x10E15F4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x10E160C", Offset = "0x10E160C", VA = "0x10E160C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x10E1AA4", Offset = "0x10E1AA4", VA = "0x10E1AA4", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public static class JSON
	{
		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x10DFBD0", Offset = "0x10DFBD0", VA = "0x10DFBD0")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace Unity.IL2CPP.CompilerServices
{
	[Token(Token = "0x20002C6")]
	public enum Option
	{
		[Token(Token = "0x4000D62")]
		NullChecks = 1,
		[Token(Token = "0x4000D63")]
		ArrayBoundsChecks,
		[Token(Token = "0x4000D64")]
		DivideByZeroChecks
	}
	[Token(Token = "0x20002C7")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE680FC", Offset = "0xE680FC")]
	public class Il2CppSetOptionAttribute : Attribute
	{
		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7E344", Offset = "0xE7E344")]
		private Option <Option>k__BackingField;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7E354", Offset = "0xE7E354")]
		private object <Value>k__BackingField;

		[Token(Token = "0x170001FC")]
		public Option Option
		{
			[Token(Token = "0x6000F34")]
			[Address(RVA = "0x10DC4B4", Offset = "0x10DC4B4", VA = "0x10DC4B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8E960", Offset = "0xE8E960")]
			get
			{
				return default(Option);
			}
			[Token(Token = "0x6000F35")]
			[Address(RVA = "0x10DC4BC", Offset = "0x10DC4BC", VA = "0x10DC4BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8E970", Offset = "0xE8E970")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FD")]
		public object Value
		{
			[Token(Token = "0x6000F36")]
			[Address(RVA = "0x10DC4C4", Offset = "0x10DC4C4", VA = "0x10DC4C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8E980", Offset = "0xE8E980")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F37")]
			[Address(RVA = "0x10DC4CC", Offset = "0x10DC4CC", VA = "0x10DC4CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8E990", Offset = "0xE8E990")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x10DC4D4", Offset = "0x10DC4D4", VA = "0x10DC4D4")]
		public Il2CppSetOptionAttribute(Option option, object value)
		{
		}
	}
}
namespace PSH
{
	[Token(Token = "0x20002C8")]
	public static class VelocityExtention
	{
		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x135A91C", Offset = "0x135A91C", VA = "0x135A91C")]
		public static Vector3 AngularVelocityChange(this Quaternion previousRotation, Quaternion newRotation, float elapsedTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x135AA9C", Offset = "0x135AA9C", VA = "0x135AA9C")]
		public static Quaternion RotationFromAngularVelocity(this Transform transform, Vector3 angularVelocity, float time)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x135AB34", Offset = "0x135AB34", VA = "0x135AB34")]
		public static void VelocityFollow(this Rigidbody followerRb, Transform target, Vector3 positionOffset, Quaternion rotationOffset, float elapsedTime)
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x135AC00", Offset = "0x135AC00", VA = "0x135AC00")]
		public static void VelocityFollow(this Rigidbody followerRb, Vector3 targetPosition, Quaternion targetRotation, float elapsedTime)
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class CustomisationSelector : MonoBehaviour
	{
		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _selectionindex;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int _maxIndex;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7E364", Offset = "0xE7E364")]
		[SerializeField]
		private Image _selectionPreview;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7E3B0", Offset = "0xE7E3B0")]
		[SerializeField]
		private Button _leftArrow;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7E3FC", Offset = "0xE7E3FC")]
		[SerializeField]
		private Button _rightArrow;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7E448", Offset = "0xE7E448")]
		[SerializeField]
		private JournalButton_V2 _journalLeftArrow;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7E494", Offset = "0xE7E494")]
		[SerializeField]
		private JournalButton_V2 _journalRightArrow;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7E4E0", Offset = "0xE7E4E0")]
		[SerializeField]
		private List<Sprite> _selectableItems;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7E52C", Offset = "0xE7E52C")]
		[SerializeField]
		private bool _journalSelector;

		[Token(Token = "0x170001FE")]
		public int SelectionIndex
		{
			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0xFFCF8C", Offset = "0xFFCF8C", VA = "0xFFCF8C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xFFCF94", Offset = "0xFFCF94", VA = "0xFFCF94")]
		public void Init(IList<AvatarConfigurationOption> options, int currentIndex)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xFFD2EC", Offset = "0xFFD2EC", VA = "0xFFD2EC")]
		public void ClearSelectableItemList()
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xFFD340", Offset = "0xFFD340", VA = "0xFFD340")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xFFD490", Offset = "0xFFD490", VA = "0xFFD490")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xFFD5E0", Offset = "0xFFD5E0", VA = "0xFFD5E0")]
		private void LeftSelection()
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xFFD678", Offset = "0xFFD678", VA = "0xFFD678")]
		private void RightSelection()
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xFFD70C", Offset = "0xFFD70C", VA = "0xFFD70C")]
		public CustomisationSelector()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class MPErrorMessageUI : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI errorMessage;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button confirmButton;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject errorUI;

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x101C8F8", Offset = "0x101C8F8", VA = "0x101C8F8", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x101C93C", Offset = "0x101C93C", VA = "0x101C93C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x101C9D8", Offset = "0x101C9D8", VA = "0x101C9D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x101CA74", Offset = "0x101CA74", VA = "0x101CA74")]
		private void CloseMPErrorMessage()
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x101CAE0", Offset = "0x101CAE0", VA = "0x101CAE0")]
		private void HandleError()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x101CD50", Offset = "0x101CD50", VA = "0x101CD50", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x101CD8C", Offset = "0x101CD8C", VA = "0x101CD8C", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x101CDB4", Offset = "0x101CDB4", VA = "0x101CDB4")]
		public MPErrorMessageUI()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class SimpleStateAnimator : MonoBehaviour
	{
		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image _image;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Sprite> _graphicStates;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _timePerState;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _timer;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _state;

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x32DD960", Offset = "0x32DD960", VA = "0x32DD960")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x32DD9F0", Offset = "0x32DD9F0", VA = "0x32DD9F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x32DD96C", Offset = "0x32DD96C", VA = "0x32DD96C")]
		private void SetGraphicState(int currentState)
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x32DDA8C", Offset = "0x32DDA8C", VA = "0x32DDA8C")]
		public SimpleStateAnimator()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class PSH_Singleton<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x170001FF")]
		public static bool Exists
		{
			[Token(Token = "0x6000F51")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000200")]
		protected virtual bool DoNotDestroyOnLoad
		{
			[Token(Token = "0x6000F52")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000201")]
		public static T Instance
		{
			[Token(Token = "0x6000F53")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F54")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000F55")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000F56")]
		public PSH_Singleton()
		{
		}
	}
}
namespace PSH.Voice
{
	[Token(Token = "0x20002CD")]
	public interface ISpeakerAudioController
	{
		[Token(Token = "0x17000202")]
		int GetPlayerID
		{
			[Token(Token = "0x6000F57")]
			get;
		}

		[Token(Token = "0x17000203")]
		float Volume
		{
			[Token(Token = "0x6000F58")]
			get;
			[Token(Token = "0x6000F59")]
			set;
		}

		[Token(Token = "0x17000204")]
		bool Muted
		{
			[Token(Token = "0x6000F5A")]
			get;
			[Token(Token = "0x6000F5B")]
			set;
		}

		[Token(Token = "0x17000205")]
		bool Enabled
		{
			[Token(Token = "0x6000F5C")]
			get;
			[Token(Token = "0x6000F5D")]
			set;
		}
	}
	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE68144", Offset = "0xE68144")]
	public class SpeakerAudioController : MonoBehaviour, ISpeakerAudioController
	{
		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource _audioSource;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetworkObject _networkObject;

		[Token(Token = "0x17000206")]
		public int GetPlayerID
		{
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x32E0AA0", Offset = "0x32E0AA0", VA = "0x32E0AA0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000207")]
		public float Volume
		{
			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x32E0AC8", Offset = "0x32E0AC8", VA = "0x32E0AC8", Slot = "5")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x32E0AE4", Offset = "0x32E0AE4", VA = "0x32E0AE4", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public bool Muted
		{
			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x32E0B00", Offset = "0x32E0B00", VA = "0x32E0B00", Slot = "7")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F62")]
			[Address(RVA = "0x32E0B1C", Offset = "0x32E0B1C", VA = "0x32E0B1C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000209")]
		public bool Enabled
		{
			[Token(Token = "0x6000F63")]
			[Address(RVA = "0x32E0B3C", Offset = "0x32E0B3C", VA = "0x32E0B3C", Slot = "9")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F64")]
			[Address(RVA = "0x32E0B58", Offset = "0x32E0B58", VA = "0x32E0B58", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x32E0B78", Offset = "0x32E0B78", VA = "0x32E0B78")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x32E0CEC", Offset = "0x32E0CEC", VA = "0x32E0CEC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x32E0C0C", Offset = "0x32E0C0C", VA = "0x32E0C0C")]
		private void RegisterSpeaker()
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x32E0CF0", Offset = "0x32E0CF0", VA = "0x32E0CF0")]
		private void UnRegisterSpeaker()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x32E0D9C", Offset = "0x32E0D9C", VA = "0x32E0D9C")]
		public SpeakerAudioController()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class SpeakerAudioControllerMenuInterface : MonoBehaviour
	{
		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ISpeakerAudioController _controller;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI textMesh;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.UI.Toggle toggle;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Slider slider;

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x32E0DA4", Offset = "0x32E0DA4", VA = "0x32E0DA4")]
		public void Setup(ISpeakerAudioController controller)
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x32E10D0", Offset = "0x32E10D0", VA = "0x32E10D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x32E1128", Offset = "0x32E1128", VA = "0x32E1128")]
		private void UpdateMuteSetting(bool isMuted)
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x32E11E8", Offset = "0x32E11E8", VA = "0x32E11E8")]
		private void UpdateVolumeSettings(float volume)
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x32E12A8", Offset = "0x32E12A8", VA = "0x32E12A8")]
		public SpeakerAudioControllerMenuInterface()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE681A4", Offset = "0xE681A4")]
	public class SpeakerAudioManager : PSH_Singleton<SpeakerAudioManager>
	{
		[Token(Token = "0x20002D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6822C", Offset = "0xE6822C")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4000D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerRef playerRef;

			[Token(Token = "0x6000F85")]
			[Address(RVA = "0x32C9C14", Offset = "0x32C9C14", VA = "0x32C9C14")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6000F86")]
			[Address(RVA = "0x32C9C1C", Offset = "0x32C9C1C", VA = "0x32C9C1C")]
			internal bool <SetPlayerSpeakerAudioEnabled>b__0(ISpeakerAudioController speaker)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000D82")]
		public const float DefaultThresholdLevel = 0.01f;

		[Token(Token = "0x4000D83")]
		public const float DefaultVoiceVolume = 1f;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float ThresholdLevel;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float VoiceVolume;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly HashSet<ISpeakerAudioController> _playerSpeakerControllers;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Recorder _recorder;

		[Token(Token = "0x1700020A")]
		public IEnumerable<ISpeakerAudioController> GetCurrentAudioControllers
		{
			[Token(Token = "0x6000F6F")]
			[Address(RVA = "0x32E12B0", Offset = "0x32E12B0", VA = "0x32E12B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		public bool IsLocalPlayerMuted
		{
			[Token(Token = "0x6000F70")]
			[Address(RVA = "0x32E12B8", Offset = "0x32E12B8", VA = "0x32E12B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020C")]
		public bool IsLocalPlayerTalking
		{
			[Token(Token = "0x6000F71")]
			[Address(RVA = "0x32E12DC", Offset = "0x32E12DC", VA = "0x32E12DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020D")]
		protected override bool DoNotDestroyOnLoad
		{
			[Token(Token = "0x6000F72")]
			[Address(RVA = "0x32E12F8", Offset = "0x32E12F8", VA = "0x32E12F8", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020E")]
		public float PlayerVoiceDetectionThreshold
		{
			[Token(Token = "0x6000F73")]
			[Address(RVA = "0x32E1300", Offset = "0x32E1300", VA = "0x32E1300")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F74")]
			[Address(RVA = "0x32E131C", Offset = "0x32E131C", VA = "0x32E131C")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public bool PlayerVoiceDetection
		{
			[Token(Token = "0x6000F75")]
			[Address(RVA = "0x32E1338", Offset = "0x32E1338", VA = "0x32E1338")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F76")]
			[Address(RVA = "0x32E1354", Offset = "0x32E1354", VA = "0x32E1354")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		public float GetCurrentPeakAmplitude
		{
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0x32E17B8", Offset = "0x32E17B8", VA = "0x32E17B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x32E1374", Offset = "0x32E1374", VA = "0x32E1374")]
		public void ApplyMicThresholdSetting()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x32E1410", Offset = "0x32E1410", VA = "0x32E1410")]
		public void ApplyVoiceVolume()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x32E1878", Offset = "0x32E1878", VA = "0x32E1878")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x32E0D74", Offset = "0x32E0D74", VA = "0x32E0D74")]
		public void RegisterController(ISpeakerAudioController controller)
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x32E0D98", Offset = "0x32E0D98", VA = "0x32E0D98")]
		public void UnRegisterController(ISpeakerAudioController controller)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x32E1B5C", Offset = "0x32E1B5C", VA = "0x32E1B5C")]
		public void MuteLocalPlayerMicrophone(bool isMuted)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x32E1B80", Offset = "0x32E1B80", VA = "0x32E1B80")]
		public void SetLocalPlayerThreshold(float threshold)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x32E1B9C", Offset = "0x32E1B9C", VA = "0x32E1B9C")]
		public void SetPlayerSpeakerAudioEnabled(bool isEnabled, PlayerRef playerRef)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x32E1964", Offset = "0x32E1964", VA = "0x32E1964")]
		private void RegisterControllerInternal(ISpeakerAudioController controller)
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x32E1AF8", Offset = "0x32E1AF8", VA = "0x32E1AF8")]
		private void UnRegisterControllerInternal(ISpeakerAudioController controller)
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x32E18CC", Offset = "0x32E18CC", VA = "0x32E18CC")]
		private void InitRecorder()
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x32E1D10", Offset = "0x32E1D10", VA = "0x32E1D10")]
		public SpeakerAudioManager()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class VoiceOptionsState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Slider voiceVolumeSlider;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Slider voiceThresholdSlider;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button resetButton;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private VoiceThresholdPreviewer thresholdPreviewer;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Recorder mainMenuRecorder;

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x135B620", Offset = "0x135B620", VA = "0x135B620", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x135B664", Offset = "0x135B664", VA = "0x135B664")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x135B73C", Offset = "0x135B73C", VA = "0x135B73C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x135B80C", Offset = "0x135B80C", VA = "0x135B80C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x135B7E8", Offset = "0x135B7E8", VA = "0x135B7E8")]
		private void InitialiseSliders()
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x135B990", Offset = "0x135B990", VA = "0x135B990")]
		private void SaveVoiceSetting()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x135BCC0", Offset = "0x135BCC0", VA = "0x135BCC0")]
		private void SetVoiceVolume(float value)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x135BD98", Offset = "0x135BD98", VA = "0x135BD98")]
		private void SetMicThresholdLevel(float value)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x135BA28", Offset = "0x135BA28", VA = "0x135BA28")]
		private void SetupMicThresholdSlider()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x135BB74", Offset = "0x135BB74", VA = "0x135BB74")]
		private void SetupVoiceVolumeSlider()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x135BF34", Offset = "0x135BF34", VA = "0x135BF34", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x135BF5C", Offset = "0x135BF5C", VA = "0x135BF5C", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x135BF84", Offset = "0x135BF84", VA = "0x135BF84")]
		private void ResetToDefault()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x135BE6C", Offset = "0x135BE6C", VA = "0x135BE6C")]
		private void ApplySettingsToMainMenuRecorder()
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x135C04C", Offset = "0x135C04C", VA = "0x135C04C")]
		public VoiceOptionsState()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class VoiceThresholdPreviewer : MonoBehaviour
	{
		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image thresholdPreviewFill;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Recorder overrideRecorder;

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x135C054", Offset = "0x135C054", VA = "0x135C054")]
		public void SetOverrideRecorder(Recorder recorder)
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x135C05C", Offset = "0x135C05C", VA = "0x135C05C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x135C07C", Offset = "0x135C07C", VA = "0x135C07C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x135C1F8", Offset = "0x135C1F8", VA = "0x135C1F8")]
		public VoiceThresholdPreviewer()
		{
		}
	}
}
namespace PSH.Journal
{
	[Token(Token = "0x20002D4")]
	public interface IInteractableJournal
	{
		[Token(Token = "0x17000211")]
		List<JournalButton_V2> allJournalButtonsList
		{
			[Token(Token = "0x6000F9A")]
			get;
		}

		[Token(Token = "0x17000212")]
		bool isJournalOpen
		{
			[Token(Token = "0x6000F9B")]
			get;
		}

		[Token(Token = "0x17000213")]
		float minPointingThresholdValue
		{
			[Token(Token = "0x6000F9C")]
			get;
		}
	}
	[Token(Token = "0x20002D5")]
	public class MPAvatarJournalMenu : MonoBehaviour
	{
		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7E6B8", Offset = "0xE7E6B8")]
		[SerializeField]
		private MPJournalController _journalController;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7E704", Offset = "0xE7E704")]
		[SerializeField]
		private AvatarConfigurationOptionsSettings _avatarSettings;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7E750", Offset = "0xE7E750")]
		[SerializeField]
		private CustomisationSelector _hatSelector;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7E79C", Offset = "0xE7E79C")]
		[SerializeField]
		private CustomisationSelector _headSelector;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7E7E8", Offset = "0xE7E7E8")]
		[SerializeField]
		private CustomisationSelector _gloveSelector;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7E834", Offset = "0xE7E834")]
		[SerializeField]
		private CustomisationSelector _torsoSelector;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7E880", Offset = "0xE7E880")]
		[SerializeField]
		private JournalButton_V2 _applyChangesButton;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NetworkRunner _networkRunner;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RemoteAvatarViewConfiguration _viewConfiguration;

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x101B7C0", Offset = "0x101B7C0", VA = "0x101B7C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x101BBBC", Offset = "0x101BBBC", VA = "0x101BBBC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x101BCD8", Offset = "0x101BCD8", VA = "0x101BCD8")]
		private void ApplyAvatarChanges()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x101BDD0", Offset = "0x101BDD0", VA = "0x101BDD0")]
		private void GetPlayerAvatarController(NetworkRunner networkRunner)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x101B884", Offset = "0x101B884", VA = "0x101B884")]
		private void GetNetworkRunner()
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x101B998", Offset = "0x101B998", VA = "0x101B998")]
		public void InitSelectors()
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x101BC74", Offset = "0x101BC74", VA = "0x101BC74")]
		public void ResetSelectors()
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x101BF24", Offset = "0x101BF24", VA = "0x101BF24")]
		public MPAvatarJournalMenu()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class MPEmojiJournalMenu : MonoBehaviour
	{
		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7E8CC", Offset = "0xE7E8CC")]
		[SerializeField]
		private GameObject _emojiButtonPrefab;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7E918", Offset = "0xE7E918")]
		[SerializeField]
		private EmojiList _emojiList;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7E964", Offset = "0xE7E964")]
		[SerializeField]
		private Transform _containerTransform;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7E9B0", Offset = "0xE7E9B0")]
		[SerializeField]
		private MPJournalController _journalController;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<GameObject> _emojiButtonArray;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _playerObject;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private NetworkRunner _networkRunner;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RemoteEmojiViewConfiguration _viewConfiguration;

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x101BF2C", Offset = "0x101BF2C", VA = "0x101BF2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x101C5C4", Offset = "0x101C5C4", VA = "0x101C5C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x101C018", Offset = "0x101C018", VA = "0x101C018")]
		private void GetPlayerEmojiController(NetworkRunner networkRunner)
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x101C16C", Offset = "0x101C16C", VA = "0x101C16C")]
		private void SpawnEmojiButtons(GameObject emoteButtonPrefab, Transform containerPosition, NetworkRunner netRunner, RemoteEmojiViewConfiguration emojiViewConfig, EmojiList emoteList)
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x101C874", Offset = "0x101C874", VA = "0x101C874")]
		public MPEmojiJournalMenu()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class MPJournalController : MonoBehaviour, IInteractableJournal
	{
		[Token(Token = "0x20002D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6823C", Offset = "0xE6823C")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4000DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x4000DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MPJournalController <>4__this;

			[Token(Token = "0x6000FB9")]
			[Address(RVA = "0x1035530", Offset = "0x1035530", VA = "0x1035530")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0x1035538", Offset = "0x1035538", VA = "0x1035538")]
			internal void <SetUpEmojiListeners>b__0()
			{
			}
		}

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<JournalButton_V2> allJournalButtons;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public JournalButton_V2 emojiTabButton;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public JournalButton_V2 playerlistTabButton;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public JournalButton_V2 customisationTabButton;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public List<JournalButton_V2> allEmojiButtons;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7EA3C", Offset = "0xE7EA3C")]
		[SerializeField]
		private GameObject _emojiCanvas;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7EA88", Offset = "0xE7EA88")]
		[SerializeField]
		private GameObject _playerlistCanvas;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _playerlistCanvasRight;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7EAE4", Offset = "0xE7EAE4")]
		[SerializeField]
		private GameObject _customisationCanvas;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7EB30", Offset = "0xE7EB30")]
		[SerializeField]
		private GameObject _customisationCanvasRight;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7EB7C", Offset = "0xE7EB7C")]
		public float _minPointingThreshold;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7EBB4", Offset = "0xE7EBB4")]
		[SerializeField]
		public bool _journalOpen;

		[Token(Token = "0x17000214")]
		public List<JournalButton_V2> allJournalButtonsList
		{
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x101E22C", Offset = "0x101E22C", VA = "0x101E22C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000215")]
		public bool isJournalOpen
		{
			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0x101E234", Offset = "0x101E234", VA = "0x101E234", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000216")]
		public float minPointingThresholdValue
		{
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x101E23C", Offset = "0x101E23C", VA = "0x101E23C", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x101E244", Offset = "0x101E244", VA = "0x101E244")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x101E380", Offset = "0x101E380", VA = "0x101E380")]
		public void OnJournalOpened()
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x101E408", Offset = "0x101E408", VA = "0x101E408")]
		public void OnJournalClosed()
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x101E490", Offset = "0x101E490", VA = "0x101E490")]
		private void ResetHandAnimation()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x101E828", Offset = "0x101E828", VA = "0x101E828")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x101E964", Offset = "0x101E964", VA = "0x101E964")]
		public void OpenEmojiMenu()
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x101EA7C", Offset = "0x101EA7C", VA = "0x101EA7C")]
		private void OpenPlayerList()
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x101EAFC", Offset = "0x101EAFC", VA = "0x101EAFC")]
		private void OpenCustomisation()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x101EB7C", Offset = "0x101EB7C", VA = "0x101EB7C")]
		private void SpawnEmoji(int buttonNo)
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x101C470", Offset = "0x101C470", VA = "0x101C470")]
		public void SetUpEmojiListeners()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x101E9F4", Offset = "0x101E9F4", VA = "0x101E9F4")]
		private void DisableJournalButton(JournalButton_V2 button)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x101EC18", Offset = "0x101EC18", VA = "0x101EC18")]
		public MPJournalController()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class MPJournalPlayerUI : MonoBehaviour
	{
		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7EC00", Offset = "0xE7EC00")]
		private MPPlayerListJournalMenu <PlayerListMenu>k__BackingField;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI playerName;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RawImage playerImage;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isHost;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public PlayerRef playerRef;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject hostIcon;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject kickButtonObject;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject muteButtonsObject;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public JournalButton_V2 muteEmojiButton;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public JournalButton_V2 muteVoiceButton;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public JournalButton_V2 kickButton;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RemoteEmojiViewConfiguration _emojiConfig;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IEnumerable<ISpeakerAudioController> speakerAudioControllers;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ISpeakerAudioController buttonAudioController;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Texture defaultProfileImage;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _isEmojiMuted;

		[Token(Token = "0x17000217")]
		public MPPlayerListJournalMenu PlayerListMenu
		{
			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0x101ECD4", Offset = "0x101ECD4", VA = "0x101ECD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8E9E0", Offset = "0xE8E9E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x101ECDC", Offset = "0x101ECDC", VA = "0x101ECDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8E9F0", Offset = "0xE8E9F0")]
			set
			{
			}
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x101ECE4", Offset = "0x101ECE4", VA = "0x101ECE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x101ED08", Offset = "0x101ED08", VA = "0x101ED08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x101EF60", Offset = "0x101EF60", VA = "0x101EF60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x101F0BC", Offset = "0x101F0BC", VA = "0x101F0BC")]
		private void MutePlayerEmoji()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x101F178", Offset = "0x101F178", VA = "0x101F178")]
		private void MutePlayerVoice()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x101F384", Offset = "0x101F384", VA = "0x101F384")]
		private void KickPlayer()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x101F458", Offset = "0x101F458", VA = "0x101F458")]
		public void InitPlayerRef(PlayerRef player, NetworkRemotePlayer remotePlayer)
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x101EE4C", Offset = "0x101EE4C", VA = "0x101EE4C")]
		private void GetEmojiConfig()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x101F798", Offset = "0x101F798", VA = "0x101F798")]
		public MPJournalPlayerUI()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x101F7A0", Offset = "0x101F7A0", VA = "0x101F7A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EA00", Offset = "0xE8EA00")]
		private bool <InitPlayerRef>b__25_0(ISpeakerAudioController controller)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002DA")]
	public class MPPlayerListJournalMenu : MonoBehaviour
	{
		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MPJournalController _journalController;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetworkRemotePlayer _networkRemotePlayer;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject playerListUIPrefab;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI roomNameText;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<GameObject> playerListUIList;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform leftPageContainerTransform;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightPageContainerTransform;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform _currentContainerTransform;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _canKick;

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x101F9A8", Offset = "0x101F9A8", VA = "0x101F9A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x101FEA0", Offset = "0x101FEA0", VA = "0x101FEA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x101F9D4", Offset = "0x101F9D4", VA = "0x101F9D4")]
		public void SpawnPlayerListUIObjects()
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x101FF30", Offset = "0x101FF30", VA = "0x101FF30")]
		public void ClearPlayerListUIObjects()
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x10201A4", Offset = "0x10201A4", VA = "0x10201A4")]
		private void SetupKickButtons()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x10203E0", Offset = "0x10203E0", VA = "0x10203E0")]
		private void SetupLocalClient()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x1020098", Offset = "0x1020098", VA = "0x1020098")]
		private void SetRoomName(NetworkRunner netRunner)
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x10205B0", Offset = "0x10205B0", VA = "0x10205B0")]
		public MPPlayerListJournalMenu()
		{
		}
	}
}
namespace PSH.FreeSkU
{
	[Token(Token = "0x20002DB")]
	public class TrailerPauser : MonoBehaviour
	{
		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _pauseButton;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VideoPlayer _videoPlayer;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isMuted;

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x1353198", Offset = "0x1353198", VA = "0x1353198")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x1353234", Offset = "0x1353234", VA = "0x1353234")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x13532D0", Offset = "0x13532D0", VA = "0x13532D0")]
		private void OnVideoPaused()
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x1353340", Offset = "0x1353340", VA = "0x1353340")]
		public TrailerPauser()
		{
		}
	}
}
namespace PSH.Emoji
{
	[Token(Token = "0x20002DC")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE6824C", Offset = "0xE6824C")]
	public class EmojiItem : NetworkBehaviour
	{
		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ParticleSystem particle;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private NetworkObject networkObj;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool isDestroying;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public RemoteEmojiViewConfiguration remoteEmojiViewConfiguration;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Changed<EmojiItem> $IL2CPP_CHANGED;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static ChangedDelegate<EmojiItem> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static NetworkBehaviourCallbacks<EmojiItem> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x14000004")]
		public static event Action<PlayerRef> OnEmojiDestroyed
		{
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x100AE6C", Offset = "0x100AE6C", VA = "0x100AE6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EA10", Offset = "0xE8EA10")]
			add
			{
			}
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0x100AF28", Offset = "0x100AF28", VA = "0x100AF28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EA20", Offset = "0xE8EA20")]
			remove
			{
			}
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x100AFE4", Offset = "0x100AFE4", VA = "0x100AFE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x100B104", Offset = "0x100B104", VA = "0x100B104", Slot = "9")]
		public override void Render()
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x100B1E8", Offset = "0x100B1E8", VA = "0x100B1E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x100B2C0", Offset = "0x100B2C0", VA = "0x100B2C0")]
		public EmojiItem()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE68260", Offset = "0xE68260")]
	public class EmojiList : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20002DE")]
		public struct Emojis
		{
			[Token(Token = "0x4000DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject emojiObject;

			[Token(Token = "0x4000DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string emojiName;

			[Token(Token = "0x4000DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Sprite emojiThumbnail;
		}

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Emojis> emojis;

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x100B2D0", Offset = "0x100B2D0", VA = "0x100B2D0")]
		public EmojiList()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public class EmojiServerManager
	{
		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EmojiList emojiList;

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x100B594", Offset = "0x100B594", VA = "0x100B594")]
		public void CreateEmojiParticleFromData(NetworkRunner runner, PlayerRef playerRef, byte[] data)
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x100B7AC", Offset = "0x100B7AC", VA = "0x100B7AC")]
		public EmojiServerManager()
		{
		}
	}
	[Serializable]
	[StructLayout(LayoutKind.Explicit)]
	[Token(Token = "0x20002E0")]
	[AttributeAttribute(Name = "NetworkStructWeavedAttribute", RVA = "0xE682C0", Offset = "0xE682C0")]
	public struct EmojiViewData : INetworkStruct
	{
		[Token(Token = "0x4000DDA")]
		public const int EmojiIndex = 0;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Emoji;

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x100B7B4", Offset = "0x100B7B4", VA = "0x100B7B4")]
		private static byte[] ConvertToByteArray(EmojiViewData data)
		{
			return null;
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x100B868", Offset = "0x100B868", VA = "0x100B868")]
		public EmojiViewData(byte[] data)
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x100ADDC", Offset = "0x100ADDC", VA = "0x100ADDC")]
		public static byte[] GetSpawnNewEmojiDataPacket(EmojiViewData emojiViewData, PlayerRef playerRef)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E1")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE682D4", Offset = "0xE682D4")]
	public class RemoteEmojiViewConfiguration : NetworkBehaviour
	{
		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7EC70", Offset = "0xE7EC70")]
		private EmojiViewData <EmojiViewData>k__BackingField;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform emojiSpawnPosition;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xE7EC80", Offset = "0xE7EC80")]
		private int _spawnCount;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int spawnLimit;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<PlayerRef, bool> emojiMuteStatus;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<RemoteEmojiViewConfiguration> $IL2CPP_CHANGED;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<RemoteEmojiViewConfiguration> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<RemoteEmojiViewConfiguration> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000218")]
		public EmojiViewData EmojiViewData
		{
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0x32CAE60", Offset = "0x32CAE60", VA = "0x32CAE60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EA30", Offset = "0xE8EA30")]
			get
			{
				return default(EmojiViewData);
			}
			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0x32CAE68", Offset = "0x32CAE68", VA = "0x32CAE68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EA40", Offset = "0xE8EA40")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xE9A854", Offset = "0xE9A854")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xE9A854", Offset = "0xE9A854")]
		public int spawnCount
		{
			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0x32CAE70", Offset = "0x32CAE70", VA = "0x32CAE70")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0x32CAED4", Offset = "0x32CAED4", VA = "0x32CAED4")]
			set
			{
			}
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x32CAF38", Offset = "0x32CAF38", VA = "0x32CAF38", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x32CAFF8", Offset = "0x32CAFF8", VA = "0x32CAFF8")]
		public void SetEmojiMuted(PlayerRef playerID, bool muteStatus)
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x32CB0CC", Offset = "0x32CB0CC", VA = "0x32CB0CC")]
		public bool TryGetEmojiMuted(PlayerRef playerID, out bool muted)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x32CB138", Offset = "0x32CB138", VA = "0x32CB138", Slot = "17")]
		public override void Despawned(NetworkRunner runner, bool hasState)
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x32CB1EC", Offset = "0x32CB1EC", VA = "0x32CB1EC")]
		private void HandleDestroyedEmoji(PlayerRef playerRef)
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x32CB26C", Offset = "0x32CB26C", VA = "0x32CB26C")]
		public RemoteEmojiViewConfiguration()
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x32CB2F8", Offset = "0x32CB2F8", VA = "0x32CB2F8", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x32CB300", Offset = "0x32CB300", VA = "0x32CB300", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class EmojiButton : MonoBehaviour
	{
		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button emojiButton;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private JournalButton_V2 emojiJournalButton;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color disabledButtonColour;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI emojiLabel;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Image> emojiThumbnail;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int emojiDataIndex;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public NetworkObject objectToSpawn;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public NetworkRunner networkRunner;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RemoteEmojiViewConfiguration _viewConfiguration;

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x100A71C", Offset = "0x100A71C", VA = "0x100A71C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x100AC18", Offset = "0x100AC18", VA = "0x100AC18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x100ACB4", Offset = "0x100ACB4", VA = "0x100ACB4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x100AD50", Offset = "0x100AD50", VA = "0x100AD50")]
		public void SpawnEmoji()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x100AB18", Offset = "0x100AB18", VA = "0x100AB18")]
		private bool CanSpawn()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x100AE10", Offset = "0x100AE10", VA = "0x100AE10")]
		public EmojiButton()
		{
		}
	}
}
namespace PSH.Avatar
{
	[Token(Token = "0x20002E3")]
	public class AudioSourceLevelOutputMonitor : MonoBehaviour
	{
		[Token(Token = "0x4000DED")]
		private const int SampleSize = 128;

		[Token(Token = "0x4000DEE")]
		private const int Amplification = 1000;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7ED14", Offset = "0xE7ED14")]
		private float <currentAudioLevel>k__BackingField;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource audioSourceToMonitor;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Speaker speaker;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] _cachedArray;

		[Token(Token = "0x1700021A")]
		public float currentAudioLevel
		{
			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0x13C1370", Offset = "0x13C1370", VA = "0x13C1370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EA50", Offset = "0xE8EA50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0x13C1378", Offset = "0x13C1378", VA = "0x13C1378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EA60", Offset = "0xE8EA60")]
			private set
			{
			}
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x13C1380", Offset = "0x13C1380", VA = "0x13C1380")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x13C13DC", Offset = "0x13C13DC", VA = "0x13C13DC")]
		private float GetVoiceValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x13C148C", Offset = "0x13C148C", VA = "0x13C148C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x13C1428", Offset = "0x13C1428", VA = "0x13C1428")]
		private float CalculateAverageAmplitude()
		{
			return default(float);
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x13C14D0", Offset = "0x13C14D0", VA = "0x13C14D0")]
		public AudioSourceLevelOutputMonitor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E4")]
	public class AvatarConfigurationOption
	{
		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string localeStringId;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite menuSelectionSprite;

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x13C17D4", Offset = "0x13C17D4", VA = "0x13C17D4")]
		public AvatarConfigurationOption()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E5")]
	public class PrefabConfigurationOption : AvatarConfigurationOption
	{
		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject prefab;

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x1089B54", Offset = "0x1089B54", VA = "0x1089B54")]
		public PrefabConfigurationOption()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E6")]
	public class MaterialConfigurationOption : AvatarConfigurationOption
	{
		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material material;

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x1140928", Offset = "0x1140928", VA = "0x1140928")]
		public MaterialConfigurationOption()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE682E8", Offset = "0xE682E8")]
	public class AvatarConfigurationOptionsSettings : ScriptableObject
	{
		[Token(Token = "0x4000DF7")]
		private const string _addressablePath = "";

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<PrefabConfigurationOption> headConfigurationOptions;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<PrefabConfigurationOption> torsoConfigurationOptions;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<PrefabConfigurationOption> hatConfigurationOptions;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<MaterialConfigurationOption> gloveConfigurationOptions;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AvatarConfigurationOptionsSettings _instance;

		[Token(Token = "0x1700021B")]
		public static AvatarConfigurationOptionsSettings Instance
		{
			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0x13C17DC", Offset = "0x13C17DC", VA = "0x13C17DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x13C18BC", Offset = "0x13C18BC", VA = "0x13C18BC")]
			set
			{
			}
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x13C1910", Offset = "0x13C1910", VA = "0x13C1910")]
		public AvatarConfigurationOptionsSettings()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public static class AvatarOptimisationScheduler
	{
		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Type, OptimisationScheduler> m_optimsationSheduler;

		[Token(Token = "0x6000FFE")]
		public static int GetScheduleSlotID<T>()
		{
			return default(int);
		}

		[Token(Token = "0x6000FFF")]
		public static void ReleaseScheduleSlot<T>(int scheduleSlot)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x13C1918", Offset = "0x13C1918", VA = "0x13C1918")]
		public static bool IsScheduled(int scheduleSlot)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002E9")]
	internal class OptimisationScheduler
	{
		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<int> _scheduleSlots;

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x107B5F0", Offset = "0x107B5F0", VA = "0x107B5F0")]
		public OptimisationScheduler()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x107B6C0", Offset = "0x107B6C0", VA = "0x107B6C0")]
		public int GetScheduleSlot()
		{
			return default(int);
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x107B738", Offset = "0x107B738", VA = "0x107B738")]
		public void ReleaseScheduleSlot(int slot)
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class AvatarPositionValidator : PSH_Singleton<AvatarPositionValidator>
	{
		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Bounds _bounds;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _playerHasBeenMovedToRoom;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _playerIsBeingRemoved;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool _isActive;

		[Token(Token = "0x1700021C")]
		protected override bool DoNotDestroyOnLoad
		{
			[Token(Token = "0x6001005")]
			[Address(RVA = "0x13C19F0", Offset = "0x13C19F0", VA = "0x13C19F0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x13C19F8", Offset = "0x13C19F8", VA = "0x13C19F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x13C1AF4", Offset = "0x13C1AF4", VA = "0x13C1AF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x13C1BF0", Offset = "0x13C1BF0", VA = "0x13C1BF0")]
		public void RegisterBounds(Bounds bounds)
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x13C1C04", Offset = "0x13C1C04", VA = "0x13C1C04")]
		public void FlagPlayerHasEnteredRoom()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x13C1C14", Offset = "0x13C1C14", VA = "0x13C1C14")]
		public void FlagPlayerIsBeingRemoved()
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x13C1C20", Offset = "0x13C1C20", VA = "0x13C1C20")]
		private new void OnDestroy()
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x13C1C34", Offset = "0x13C1C34", VA = "0x13C1C34")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x13C1C94", Offset = "0x13C1C94", VA = "0x13C1C94")]
		private void ResetPlayerPosition()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x13C1C9C", Offset = "0x13C1C9C", VA = "0x13C1C9C")]
		private void OnPauseToggled(bool isPaused)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x13C1E28", Offset = "0x13C1E28", VA = "0x13C1E28")]
		public AvatarPositionValidator()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class AvatarServerManager
	{
		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NetworkObject _basePrefab;

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x13C1E74", Offset = "0x13C1E74", VA = "0x13C1E74")]
		public AvatarServerManager(NetworkObject basePlayerPrefab)
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x13C1EA8", Offset = "0x13C1EA8", VA = "0x13C1EA8")]
		public void CreatePlayerAvatarFromData(NetworkRunner runner, PlayerRef playerRef, byte[] data, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x13C2074", Offset = "0x13C2074", VA = "0x13C2074")]
		public void UpdatePlayerAvatarFromData(NetworkRunner runner, PlayerRef playerRef, byte[] data)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x13C2194", Offset = "0x13C2194", VA = "0x13C2194")]
		private void SendAvatarSpawnedPacket(NetworkRunner runner, PlayerRef playerRef)
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class AvatarValidationBounds : MonoBehaviour
	{
		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider _collider;

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x13C2324", Offset = "0x13C2324", VA = "0x13C2324")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x13C2380", Offset = "0x13C2380", VA = "0x13C2380")]
		private void Start()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x13C2438", Offset = "0x13C2438", VA = "0x13C2438")]
		public AvatarValidationBounds()
		{
		}
	}
	[Serializable]
	[StructLayout(LayoutKind.Explicit)]
	[Token(Token = "0x20002ED")]
	[AttributeAttribute(Name = "NetworkStructWeavedAttribute", RVA = "0xE68348", Offset = "0xE68348")]
	public struct AvatarViewData : INetworkStruct, IEquatable<AvatarViewData>
	{
		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Torso;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Gloves;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Hat;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Head;

		[Token(Token = "0x1700021D")]
		public static AvatarViewData Random
		{
			[Token(Token = "0x6001017")]
			[Address(RVA = "0x13C2440", Offset = "0x13C2440", VA = "0x13C2440")]
			get
			{
				return default(AvatarViewData);
			}
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x13C2564", Offset = "0x13C2564", VA = "0x13C2564", Slot = "4")]
		public bool Equals(AvatarViewData other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x13C25E4", Offset = "0x13C25E4", VA = "0x13C25E4")]
		private static byte[] ConvertToByteArray(AvatarViewData data)
		{
			return null;
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x13C2238", Offset = "0x13C2238", VA = "0x13C2238")]
		public AvatarViewData(byte[] data)
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x13C26F8", Offset = "0x13C26F8", VA = "0x13C26F8")]
		public static byte[] GetUpdateAvatarDataPacket(AvatarViewData avatarViewData, PlayerRef playerRef)
		{
			return null;
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x13C2728", Offset = "0x13C2728", VA = "0x13C2728")]
		public static byte[] GetSpawnNewAvatarDataPacket(AvatarViewData avatarViewData, PlayerRef playerRef)
		{
			return null;
		}
	}
	[Token(Token = "0x20002EE")]
	public class CigaretteMouthGrabPoint : MonoBehaviour
	{
		[Token(Token = "0x600101D")]
		[Address(RVA = "0x1208FEC", Offset = "0x1208FEC", VA = "0x1208FEC")]
		public CigaretteMouthGrabPoint()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class LocalAvatarViewConfiguration : MonoBehaviour
	{
		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SkinnedMeshRenderer _leftHand;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SkinnedMeshRenderer _rightHand;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _glovesCurrentSelected;

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x10181FC", Offset = "0x10181FC", VA = "0x10181FC")]
		private void Start()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x1018308", Offset = "0x1018308", VA = "0x1018308")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x1018260", Offset = "0x1018260", VA = "0x1018260")]
		public void SetupLocalGloves(AvatarViewData viewData)
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x101835C", Offset = "0x101835C", VA = "0x101835C")]
		private void SetGloveMaterial(Material gloveMaterial)
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x10183B0", Offset = "0x10183B0", VA = "0x10183B0")]
		private void ToggleMaterialSetup(SkinnedMeshRenderer skinnedMeshRenderer)
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x1018310", Offset = "0x1018310", VA = "0x1018310")]
		private void HideLocalGloves(bool isHidden)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x101841C", Offset = "0x101841C", VA = "0x101841C")]
		public LocalAvatarViewConfiguration()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class MouthCigaretteOverrideTransform : MonoBehaviour
	{
		[Token(Token = "0x6001025")]
		[Address(RVA = "0x1142E04", Offset = "0x1142E04", VA = "0x1142E04")]
		public MouthCigaretteOverrideTransform()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class NetworkTalkingMouth : MonoBehaviour
	{
		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float minMouthPosition;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float maxMouthPosition;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float resetRate;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _currentPosition;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _targetPosition;

		[Token(Token = "0x1700021E")]
		public float CurrentNormalisedMouthPosition
		{
			[Token(Token = "0x6001026")]
			[Address(RVA = "0x1075C04", Offset = "0x1075C04", VA = "0x1075C04")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x1075C0C", Offset = "0x1075C0C", VA = "0x1075C0C")]
		public void SetMouthPosition(float normalisedPositionTarget)
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x1075C34", Offset = "0x1075C34", VA = "0x1075C34")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x1075CE8", Offset = "0x1075CE8", VA = "0x1075CE8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x1075E34", Offset = "0x1075E34", VA = "0x1075E34")]
		private void Update()
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x1075ED4", Offset = "0x1075ED4", VA = "0x1075ED4")]
		private Vector3 GetPositionVector(float position)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x1075F0C", Offset = "0x1075F0C", VA = "0x1075F0C")]
		public NetworkTalkingMouth()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class NetworkTalkingMouthController : MonoBehaviour
	{
		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject SpeakerParent;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetworkTalkingMouth _mouth;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSourceLevelOutputMonitor _mouthMovementController;

		[Token(Token = "0x1700021F")]
		public float CurrentNormalisedMouthPosition
		{
			[Token(Token = "0x600102D")]
			[Address(RVA = "0x1071088", Offset = "0x1071088", VA = "0x1071088")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x1075F14", Offset = "0x1075F14", VA = "0x1075F14")]
		public void RegisterAvatarMouth(NetworkTalkingMouth mouth)
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x1075D98", Offset = "0x1075D98", VA = "0x1075D98")]
		public void UnRegisterAvatarMouth(NetworkTalkingMouth mouth)
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x1075F1C", Offset = "0x1075F1C", VA = "0x1075F1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x1075F80", Offset = "0x1075F80", VA = "0x1075F80")]
		private void Update()
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x1076048", Offset = "0x1076048", VA = "0x1076048")]
		public NetworkTalkingMouthController()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE6835C", Offset = "0xE6835C")]
	public class RemoteAvatarViewConfiguration : NetworkBehaviour
	{
		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xE7EDA4", Offset = "0xE7EDA4")]
		private AvatarViewData _AvatarViewData;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool PlayerRemoteAvatarExists;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Transform headRoot;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Transform torsoRoot;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform capRoot;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private SkinnedMeshRenderer _leftHand;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private SkinnedMeshRenderer _rightHand;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0xE7EE58", Offset = "0xE7EE58")]
		[SerializeField]
		private GameObject _head;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0xE7EE94", Offset = "0xE7EE94")]
		[SerializeField]
		private GameObject _torso;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0xE7EED0", Offset = "0xE7EED0")]
		[SerializeField]
		private GameObject _cap;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int _headCurrentSelected;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int _torsoCurrentSelected;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int _hatCurrentSelected;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int _glovesCurrentSelected;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Changed<RemoteAvatarViewConfiguration> $IL2CPP_CHANGED;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static ChangedDelegate<RemoteAvatarViewConfiguration> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static NetworkBehaviourCallbacks<RemoteAvatarViewConfiguration> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000220")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xE9A894", Offset = "0xE9A894")]
		[UnitySerializeField]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xE9A894", Offset = "0xE9A894")]
		public AvatarViewData AvatarViewData
		{
			[Token(Token = "0x6001033")]
			[Address(RVA = "0x109231C", Offset = "0x109231C", VA = "0x109231C")]
			get
			{
				return default(AvatarViewData);
			}
			[Token(Token = "0x6001034")]
			[Address(RVA = "0x1092380", Offset = "0x1092380", VA = "0x1092380")]
			set
			{
			}
		}

		[Token(Token = "0x14000005")]
		public event Action OnAvatarUpdated
		{
			[Token(Token = "0x6001035")]
			[Address(RVA = "0x10923E4", Offset = "0x10923E4", VA = "0x10923E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EA70", Offset = "0xE8EA70")]
			add
			{
			}
			[Token(Token = "0x6001036")]
			[Address(RVA = "0x1092484", Offset = "0x1092484", VA = "0x1092484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EA80", Offset = "0xE8EA80")]
			remove
			{
			}
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x1092524", Offset = "0x1092524", VA = "0x1092524", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x109279C", Offset = "0x109279C", VA = "0x109279C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x1092860", Offset = "0x1092860", VA = "0x1092860")]
		[Preserve]
		public static void OnViewDataChanged(Changed<RemoteAvatarViewConfiguration> change)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x10928D8", Offset = "0x10928D8", VA = "0x10928D8")]
		private void SetHead(PrefabConfigurationOption configurationOptionOption)
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x1092A78", Offset = "0x1092A78", VA = "0x1092A78")]
		private void SetTorso(PrefabConfigurationOption configurationOption)
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x1092B68", Offset = "0x1092B68", VA = "0x1092B68")]
		private void SetGloves(MaterialConfigurationOption configurationOptionOption)
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x1092BC4", Offset = "0x1092BC4", VA = "0x1092BC4")]
		private void ToggleMaterialSetup(SkinnedMeshRenderer skinnedMeshRenderer)
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x1092C30", Offset = "0x1092C30", VA = "0x1092C30")]
		private void SetHat(PrefabConfigurationOption configurationOption)
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x10925EC", Offset = "0x10925EC", VA = "0x10925EC")]
		private void SetupAvatar(AvatarViewData viewData, AvatarConfigurationOptionsSettings avatarConfigurationOptionsSettings)
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x10929C8", Offset = "0x10929C8", VA = "0x10929C8")]
		private void DestroyObject(GameObject gO)
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x1092D30", Offset = "0x1092D30", VA = "0x1092D30")]
		public RemoteAvatarViewConfiguration()
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x1092D40", Offset = "0x1092D40", VA = "0x1092D40", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x1092D48", Offset = "0x1092D48", VA = "0x1092D48", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
}
namespace PSH.PlayerProfile
{
	[Token(Token = "0x20002F4")]
	public class MPRuntimePlayerListDebugMenu : MonoBehaviour
	{
		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform containerTransform;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button closeMPPlayerListMenuButton;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayerInfoPlate playerInfoPrefab;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlayerProfileManager playerProfileManager;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<PlayerInfoPlate> playerInfoPrefabList;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NetworkRunner networkRunner;

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x10234BC", Offset = "0x10234BC", VA = "0x10234BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x1023A84", Offset = "0x1023A84", VA = "0x1023A84")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x1023C68", Offset = "0x1023C68", VA = "0x1023C68")]
		public void CloseMPDebugMenu()
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x102356C", Offset = "0x102356C", VA = "0x102356C")]
		private void GetNetworkRunner()
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x1023CF0", Offset = "0x1023CF0", VA = "0x1023CF0")]
		private void GetPlayerProfileManager()
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x1023674", Offset = "0x1023674", VA = "0x1023674")]
		private void CreatePlayerList(NetworkRunner runner)
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x1023D90", Offset = "0x1023D90", VA = "0x1023D90")]
		public MPRuntimePlayerListDebugMenu()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public interface IPlayerProfile
	{
		[Token(Token = "0x17000221")]
		string ProviderName
		{
			[Token(Token = "0x600104B")]
			get;
		}

		[Token(Token = "0x17000222")]
		PlayerProfileManager.UserData userData
		{
			[Token(Token = "0x600104C")]
			get;
			[Token(Token = "0x600104D")]
			set;
		}

		[Token(Token = "0x600104E")]
		void SendFriendRequest(ulong userUI);

		[Token(Token = "0x600104F")]
		void FetchLocalUserID(Action<bool> onChanged);
	}
	[Token(Token = "0x20002F6")]
	public class PlayerProfileManager
	{
		[Serializable]
		[Token(Token = "0x20002F7")]
		public struct UserData
		{
			[Token(Token = "0x4000E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ulong id;

			[Token(Token = "0x4000E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string name;

			[Token(Token = "0x4000E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string imageUrl;

			[Token(Token = "0x6001059")]
			[Address(RVA = "0x32C5E28", Offset = "0x32C5E28", VA = "0x32C5E28")]
			public UserData(byte[] data)
			{
			}

			[Token(Token = "0x600105A")]
			[Address(RVA = "0x32C61D4", Offset = "0x32C61D4", VA = "0x32C61D4")]
			public static byte[] ConvertToByteArray(UserData data)
			{
				return null;
			}

			[Token(Token = "0x600105B")]
			[Address(RVA = "0x32C6328", Offset = "0x32C6328", VA = "0x32C6328")]
			public bool Equals(UserData other)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPlayerProfile _provider;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7EF3C", Offset = "0xE7EF3C")]
		private bool <IsInitilized>k__BackingField;

		[Token(Token = "0x17000223")]
		public IPlayerProfile Provider
		{
			[Token(Token = "0x6001050")]
			[Address(RVA = "0x1087744", Offset = "0x1087744", VA = "0x1087744")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		public bool IsInitilized
		{
			[Token(Token = "0x6001051")]
			[Address(RVA = "0x108774C", Offset = "0x108774C", VA = "0x108774C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EAA0", Offset = "0xE8EAA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001052")]
			[Address(RVA = "0x1087754", Offset = "0x1087754", VA = "0x1087754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EAB0", Offset = "0xE8EAB0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x1087760", Offset = "0x1087760", VA = "0x1087760")]
		public void ConstructProvider()
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x10877F8", Offset = "0x10877F8", VA = "0x10877F8")]
		public void FetchLocalUserID(Action<bool> onChanged)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x1087928", Offset = "0x1087928", VA = "0x1087928")]
		public static byte[] GetPlayerIDDataPacket(UserData player, PlayerRef playerRef)
		{
			return null;
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x1087978", Offset = "0x1087978", VA = "0x1087978")]
		public void SendPlayerProfileInfoToServer(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x1087794", Offset = "0x1087794", VA = "0x1087794")]
		private void CreatePlatformProvider()
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x1087AA4", Offset = "0x1087AA4", VA = "0x1087AA4")]
		public PlayerProfileManager()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class PlayerProfilePlate : MonoBehaviour
	{
		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7EF4C", Offset = "0xE7EF4C")]
		[SerializeField]
		private TextMeshPro _playerName;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color _standardTextColour;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _talkingTextColour;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _hostIcon;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VoiceNetworkObject _voiceNetworkObject;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _ping;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _isBusy;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _playerNameString;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string localizedBusy;

		[Token(Token = "0x17000225")]
		public string PlayerUserName
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0x1087AAC", Offset = "0x1087AAC", VA = "0x1087AAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x1087AB4", Offset = "0x1087AB4", VA = "0x1087AB4")]
		public void Init(string userID)
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x1087B7C", Offset = "0x1087B7C", VA = "0x1087B7C")]
		public void SetBusy(bool isBusy)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x1087CA0", Offset = "0x1087CA0", VA = "0x1087CA0")]
		public void UpdatePing(int ping)
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x1087B88", Offset = "0x1087B88", VA = "0x1087B88")]
		public void UpdateNamePlateText()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x1087CA8", Offset = "0x1087CA8", VA = "0x1087CA8")]
		public void SetHostValueOfPlayer(bool isHost)
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x1087CC8", Offset = "0x1087CC8", VA = "0x1087CC8")]
		public void OnTalkingChange(bool isTalking)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x1087D2C", Offset = "0x1087D2C", VA = "0x1087D2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x1087D64", Offset = "0x1087D64", VA = "0x1087D64")]
		public PlayerProfilePlate()
		{
		}
	}
}
namespace PSH.Networking
{
	[Token(Token = "0x20002F9")]
	public class MPRuntimeFakeErrorsDebugMenu : MonoBehaviour
	{
		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button fakeUnkownError;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button fakeHostDisconectedError;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button fakePhotonError;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button fakeGameFullError;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button fakeConnectionRefusedError;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button fakeTimeOutError;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEngine.UI.Toggle forceShutdown;

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x1022F80", Offset = "0x1022F80", VA = "0x1022F80")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x10231AC", Offset = "0x10231AC", VA = "0x10231AC")]
		private void OnDisabled()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x1023258", Offset = "0x1023258", VA = "0x1023258")]
		private void FakeError(NetworkError error)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x10232B8", Offset = "0x10232B8", VA = "0x10232B8")]
		private void ForceShutdown(NetworkError error)
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x10233AC", Offset = "0x10233AC", VA = "0x10233AC")]
		public MPRuntimeFakeErrorsDebugMenu()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x10233B4", Offset = "0x10233B4", VA = "0x10233B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EAC0", Offset = "0xE8EAC0")]
		private void <OnEnable>b__7_0()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x10233E0", Offset = "0x10233E0", VA = "0x10233E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EAD0", Offset = "0xE8EAD0")]
		private void <OnEnable>b__7_1()
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x102340C", Offset = "0x102340C", VA = "0x102340C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EAE0", Offset = "0xE8EAE0")]
		private void <OnEnable>b__7_2()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x1023438", Offset = "0x1023438", VA = "0x1023438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EAF0", Offset = "0xE8EAF0")]
		private void <OnEnable>b__7_3()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x1023464", Offset = "0x1023464", VA = "0x1023464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EB00", Offset = "0xE8EB00")]
		private void <OnEnable>b__7_4()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x1023490", Offset = "0x1023490", VA = "0x1023490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EB10", Offset = "0xE8EB10")]
		private void <OnEnable>b__7_5()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public static class SocialVRVersion
	{
		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string Key;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int Version;
	}
	[Token(Token = "0x20002FB")]
	public static class SocialVRHostUserKey
	{
		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string HostKeyID;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string HostKeyName;
	}
	[Token(Token = "0x20002FC")]
	public enum PlayerRigType
	{
		[Token(Token = "0x4000E46")]
		None,
		[Token(Token = "0x4000E47")]
		SinglePlayer,
		[Token(Token = "0x4000E48")]
		Multiplayer
	}
	[Token(Token = "0x20002FD")]
	public enum GameModeType
	{
		[Token(Token = "0x4000E4A")]
		SinglePlayer,
		[Token(Token = "0x4000E4B")]
		Multiplayer
	}
	[Serializable]
	[Token(Token = "0x20002FE")]
	public class SocialVRSettings
	{
		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarViewData customizationData;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string roomName;

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x32DF9E4", Offset = "0x32DF9E4", VA = "0x32DF9E4")]
		public SocialVRSettings()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class MP_Eraser : MonoBehaviour
	{
		[Token(Token = "0x6001073")]
		[Address(RVA = "0x10262C4", Offset = "0x10262C4", VA = "0x10262C4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x1026570", Offset = "0x1026570", VA = "0x1026570")]
		public MP_Eraser()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class MP_MT_DrawableSurface : MT_DrawableSurface
	{
		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<LineRenderer> _drawnLines;

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x1026378", Offset = "0x1026378", VA = "0x1026378")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE8EB20", Offset = "0xE8EB20")]
		public void ClearLines()
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x1026578", Offset = "0x1026578", VA = "0x1026578")]
		public void AddLine(LineRenderer newLine)
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x10265DC", Offset = "0x10265DC", VA = "0x10265DC")]
		public MP_MT_DrawableSurface()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class MP_MT_Pen : MT_Pen
	{
		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private MPHVRGrabbable _mphvrGrabbable;

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x1026660", Offset = "0x1026660", VA = "0x1026660", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x10266D0", Offset = "0x10266D0", VA = "0x10266D0", Slot = "5")]
		protected override bool CanDraw()
		{
			return default(bool);
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x1026768", Offset = "0x1026768", VA = "0x1026768", Slot = "6")]
		protected override LineRenderer CreateLine(MT_DrawableSurface drawableSurface, Transform parent, bool isEraser)
		{
			return null;
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x1026874", Offset = "0x1026874", VA = "0x1026874")]
		public MP_MT_Pen()
		{
		}
	}
	[Token(Token = "0x2000302")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE68370", Offset = "0xE68370")]
	public class MP_MT_Pourable : MT_Pourable
	{
		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private NetworkGrabbable networkGrabbablePump;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private bool dontRemoveLiquid;

		[Token(Token = "0x17000226")]
		public bool DontRemoveLiquid
		{
			[Token(Token = "0x600107C")]
			[Address(RVA = "0x102687C", Offset = "0x102687C", VA = "0x102687C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x1026884", Offset = "0x1026884", VA = "0x1026884", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x1026980", Offset = "0x1026980", VA = "0x1026980")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x1026A70", Offset = "0x1026A70", VA = "0x1026A70")]
		private void OnNetworkUngrab()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x1026AF8", Offset = "0x1026AF8", VA = "0x1026AF8", Slot = "5")]
		protected override void RemoveLiquid(float amount)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x1026B0C", Offset = "0x1026B0C", VA = "0x1026B0C", Slot = "9")]
		public override void OnFilled(float addLiquidRate, string lqTag)
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x1026BB0", Offset = "0x1026BB0", VA = "0x1026BB0", Slot = "7")]
		public override void StartPour()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x1026C80", Offset = "0x1026C80", VA = "0x1026C80", Slot = "8")]
		public override void StopPour()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x1026CFC", Offset = "0x1026CFC", VA = "0x1026CFC", Slot = "10")]
		protected override void FireRay()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x102705C", Offset = "0x102705C", VA = "0x102705C")]
		public void SetLiquidFillAmountNetwork(float newValue)
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x1027064", Offset = "0x1027064", VA = "0x1027064", Slot = "11")]
		public override void SetFillAmount(float amount)
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x1027130", Offset = "0x1027130", VA = "0x1027130")]
		public MP_MT_Pourable()
		{
		}
	}
	[Token(Token = "0x2000303")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE683D0", Offset = "0xE683D0")]
	public class NetworkedTumbler : NetworkBehaviour, IAfterSpawned
	{
		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MP_MT_Pourable _pourable;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private MT_LiquidShader _liquidShader;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ParticleSystem _particleSystem;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private NetworkGrabbable _networkGrabbable;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool isBeerPump;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xE7F048", Offset = "0xE7F048")]
		private float _liquidFillAmount;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xE7F09C", Offset = "0xE7F09C")]
		private NetworkBool _particlesPlaying;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool isSpawned;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float startingPourValue;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isGrabbedByLocalPlayer;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkedTumbler> $IL2CPP_CHANGED;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkedTumbler> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkedTumbler> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000227")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xE9A90C", Offset = "0xE9A90C")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xE9A90C", Offset = "0xE9A90C")]
		public float liquidFillAmount
		{
			[Token(Token = "0x6001088")]
			[Address(RVA = "0x1076050", Offset = "0x1076050", VA = "0x1076050")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001089")]
			[Address(RVA = "0x10760C4", Offset = "0x10760C4", VA = "0x10760C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000228")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xE9A96C", Offset = "0xE9A96C")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xE9A96C", Offset = "0xE9A96C")]
		public NetworkBool particlesPlaying
		{
			[Token(Token = "0x600108A")]
			[Address(RVA = "0x1076170", Offset = "0x1076170", VA = "0x1076170")]
			get
			{
				return default(NetworkBool);
			}
			[Token(Token = "0x600108B")]
			[Address(RVA = "0x10761D4", Offset = "0x10761D4", VA = "0x10761D4")]
			set
			{
			}
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x1076238", Offset = "0x1076238", VA = "0x1076238", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x1076264", Offset = "0x1076264", VA = "0x1076264", Slot = "19")]
		public void AfterSpawned()
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x107627C", Offset = "0x107627C", VA = "0x107627C", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x107648C", Offset = "0x107648C", VA = "0x107648C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x1076570", Offset = "0x1076570", VA = "0x1076570")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x1076654", Offset = "0x1076654", VA = "0x1076654")]
		private void LocalLiquidChange(float amount)
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x1076668", Offset = "0x1076668", VA = "0x1076668")]
		[Preserve]
		public static void OnParticleSystemPlaying(Changed<NetworkedTumbler> changed)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x10767C4", Offset = "0x10767C4", VA = "0x10767C4")]
		[Preserve]
		public static void OnLiquidFillDataChange(Changed<NetworkedTumbler> changed)
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x1076710", Offset = "0x1076710", VA = "0x1076710")]
		private void OnParticleSystemValueChange(NetworkBool oldValue, NetworkBool newValue)
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x1076860", Offset = "0x1076860", VA = "0x1076860")]
		private void OnLiquidValueChange(float oldValue, float newValue)
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x10768B0", Offset = "0x10768B0", VA = "0x10768B0")]
		public NetworkedTumbler()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x10768C0", Offset = "0x10768C0", VA = "0x10768C0", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x10768EC", Offset = "0x10768EC", VA = "0x10768EC", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public enum CigaretteState
	{
		[Token(Token = "0x4000E60")]
		None,
		[Token(Token = "0x4000E61")]
		Socket,
		[Token(Token = "0x4000E62")]
		Held,
		[Token(Token = "0x4000E63")]
		InMonth,
		[Token(Token = "0x4000E64")]
		Dropped,
		[Token(Token = "0x4000E65")]
		TimedOut
	}
	[Token(Token = "0x2000305")]
	public enum CigaretteLitState
	{
		[Token(Token = "0x4000E67")]
		UnLit,
		[Token(Token = "0x4000E68")]
		Lit
	}
	[StructLayout(LayoutKind.Explicit)]
	[Token(Token = "0x2000306")]
	[AttributeAttribute(Name = "NetworkStructWeavedAttribute", RVA = "0xE683E4", Offset = "0xE683E4")]
	public struct CigaretteData : INetworkStruct
	{
		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CigaretteState state;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SqueezeState squeezeState;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public CigaretteLitState litState;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NetworkBool playAshPArticle;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 scale;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HVRHandSide handHolding;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion localAnchorRotation;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 localOffsetPosition;
	}
	[Token(Token = "0x2000307")]
	public class NetworkLocalCigarette : MonoBehaviour
	{
		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CigaretteTimer _cigaretteTimer;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HVRGrabbable _grabbable;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem _ashParticleSystem;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CigaretteData _cigaretteData;

		[Token(Token = "0x17000229")]
		public CigaretteData CigaretteData
		{
			[Token(Token = "0x6001099")]
			[Address(RVA = "0x106A2AC", Offset = "0x106A2AC", VA = "0x106A2AC")]
			get
			{
				return default(CigaretteData);
			}
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x106A338", Offset = "0x106A338", VA = "0x106A338")]
		private void Awake()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x106A574", Offset = "0x106A574", VA = "0x106A574")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x106A568", Offset = "0x106A568", VA = "0x106A568")]
		public void SetLitState(bool isLit)
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x106A744", Offset = "0x106A744", VA = "0x106A744")]
		public void SetInMouth()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x106A750", Offset = "0x106A750", VA = "0x106A750")]
		public void RemoveFromMouth()
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x106A75C", Offset = "0x106A75C", VA = "0x106A75C")]
		public void PlayAshParticle()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x106A788", Offset = "0x106A788", VA = "0x106A788")]
		public void StopPlayingAshParticle()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x106A7B4", Offset = "0x106A7B4", VA = "0x106A7B4")]
		private void OnGrabbed(HVRGrabberBase grabber, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x106AA40", Offset = "0x106AA40", VA = "0x106AA40")]
		private void UpdateGrabPosition(MPHVRGrabber mphvrGrabber)
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x106AAE4", Offset = "0x106AAE4", VA = "0x106AAE4")]
		private void OnReleased(HVRGrabberBase grabber, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x106A968", Offset = "0x106A968", VA = "0x106A968")]
		private void GetHandSide(HVRGrabberBase grabber)
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x106AC28", Offset = "0x106AC28", VA = "0x106AC28")]
		private void OnActivated(HVRGrabberBase grabber, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x106AC68", Offset = "0x106AC68", VA = "0x106AC68")]
		private void OnDeactivated(HVRGrabberBase grabber, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x106ACA4", Offset = "0x106ACA4", VA = "0x106ACA4")]
		public NetworkLocalCigarette()
		{
		}
	}
	[StructLayout(LayoutKind.Explicit)]
	[Token(Token = "0x2000308")]
	[AttributeAttribute(Name = "NetworkStructWeavedAttribute", RVA = "0xE683F8", Offset = "0xE683F8")]
	public struct GunNetworkData : INetworkStruct
	{
		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 slidePosition;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 position;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Quaternion rotation;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion localAnchorRotation;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 localOffsetPosition;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 scale;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public HVRHandSide handHolding;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float triggerSetValue;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public NetworkBool muzzelFlashActive;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public NetworkBool plumeFlashActive;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int firedBullets;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public NetworkBool hasAmmo;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GrabbedState grabbedState;
	}
	[Token(Token = "0x2000309")]
	public class NetworkLocalGun : MonoBehaviour
	{
		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GunNetworkData _gunNetworkData;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private HVRPistol _hvrPistol;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Transform slideTransform;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ParticleSystem _muzzleFlashParticleSystem;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ParticleSystem _plumeParticleSystem;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private HVRGrabbable _grabbable;

		[Token(Token = "0x1700022A")]
		public GunNetworkData GunNetworkData
		{
			[Token(Token = "0x60010A8")]
			[Address(RVA = "0x106ACAC", Offset = "0x106ACAC", VA = "0x106ACAC")]
			get
			{
				return default(GunNetworkData);
			}
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x106AEA0", Offset = "0x106AEA0", VA = "0x106AEA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x106AF2C", Offset = "0x106AF2C", VA = "0x106AF2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x106B0AC", Offset = "0x106B0AC", VA = "0x106B0AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x106B240", Offset = "0x106B240", VA = "0x106B240")]
		private void OnFired()
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x106B250", Offset = "0x106B250", VA = "0x106B250")]
		private void OnGrabbed(HVRGrabberBase grabber, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x106B460", Offset = "0x106B460", VA = "0x106B460")]
		private void OnReleased(HVRGrabberBase grabber, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x106B388", Offset = "0x106B388", VA = "0x106B388")]
		private void GetHandSide(HVRGrabberBase grabber)
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x106B464", Offset = "0x106B464", VA = "0x106B464")]
		public NetworkLocalGun()
		{
		}
	}
	[Serializable]
	[StructLayout(LayoutKind.Explicit)]
	[Token(Token = "0x200030A")]
	[AttributeAttribute(Name = "NetworkStructWeavedAttribute", RVA = "0xE6840C", Offset = "0xE6840C")]
	public struct HandInputs : INetworkStruct
	{
		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FingerInputs thumb;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public FingerInputs index;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FingerInputs middle;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public FingerInputs ring;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public FingerInputs pinky;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public NetworkBool poseHands;
	}
	[Serializable]
	[StructLayout(LayoutKind.Explicit)]
	[Token(Token = "0x200030B")]
	[AttributeAttribute(Name = "NetworkStructWeavedAttribute", RVA = "0xE68420", Offset = "0xE68420")]
	public struct FingerInputs : INetworkStruct
	{
		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BoneData boneOne;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BoneData boneTwo;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BoneData boneThree;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public BoneData boneFour;
	}
	[Serializable]
	[StructLayout(LayoutKind.Explicit)]
	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "NetworkStructWeavedAttribute", RVA = "0xE68434", Offset = "0xE68434")]
	public struct BoneData : INetworkStruct
	{
		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rotation;
	}
	[Token(Token = "0x200030D")]
	public class NetworkLocalHand : MonoBehaviour
	{
		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MPHVRGrabber grabber;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HVRHandAnimator handAnimator;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HandInputs _handInputs;

		[Token(Token = "0x1700022B")]
		public HandInputs HandInfo
		{
			[Token(Token = "0x60010B1")]
			[Address(RVA = "0x106B46C", Offset = "0x106B46C", VA = "0x106B46C")]
			get
			{
				return default(HandInputs);
			}
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x106B540", Offset = "0x106B540", VA = "0x106B540")]
		private void SetFinger(ref FingerInputs fingerData, ref HVRPosableFingerData updatedData)
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x106B768", Offset = "0x106B768", VA = "0x106B768")]
		public NetworkLocalHand()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class NetworkLocalHeadset : MonoBehaviour
	{
		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x106B770", Offset = "0x106B770", VA = "0x106B770")]
		public NetworkLocalHeadset()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public enum SqueezeState
	{
		[Token(Token = "0x4000E9A")]
		Empty,
		[Token(Token = "0x4000E9B")]
		Activated
	}
	[Token(Token = "0x2000310")]
	public enum GrabbedState
	{
		[Token(Token = "0x4000E9D")]
		Empty,
		[Token(Token = "0x4000E9E")]
		Grabbed,
		[Token(Token = "0x4000E9F")]
		Socket
	}
	[StructLayout(LayoutKind.Explicit)]
	[Token(Token = "0x2000311")]
	[AttributeAttribute(Name = "NetworkStructWeavedAttribute", RVA = "0xE68448", Offset = "0xE68448")]
	public struct LighterData : INetworkStruct
	{
		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 scale;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 position;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Quaternion rotation;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SqueezeState lighterSqueezeState;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public GrabbedState grabbedState;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HVRHandSide handHolding;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion localAnchorRotation;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 localOffsetPosition;
	}
	[Token(Token = "0x2000312")]
	public class NetworkLocalLighter : MonoBehaviour
	{
		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LighterData _lighterData;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HVRGrabbable _grabbable;

		[Token(Token = "0x1700022C")]
		public LighterData lighterData
		{
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x106B778", Offset = "0x106B778", VA = "0x106B778")]
			get
			{
				return default(LighterData);
			}
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x106B804", Offset = "0x106B804", VA = "0x106B804")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x106BA4C", Offset = "0x106BA4C", VA = "0x106BA4C")]
		private void OnGrabbed(HVRGrabberBase grabber, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x106BB84", Offset = "0x106BB84", VA = "0x106BB84")]
		private void GetHandSide(HVRGrabberBase grabber)
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x106BC5C", Offset = "0x106BC5C", VA = "0x106BC5C")]
		private void OnReleased(HVRGrabberBase grabber, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x106BC80", Offset = "0x106BC80", VA = "0x106BC80")]
		private void OnActivated(HVRGrabberBase grabber, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x106BCC0", Offset = "0x106BCC0", VA = "0x106BCC0")]
		private void OnRelease(HVRGrabberBase grabber, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x106BCE4", Offset = "0x106BCE4", VA = "0x106BCE4")]
		private void OnDeactivated(HVRGrabberBase grabber, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x106BD20", Offset = "0x106BD20", VA = "0x106BD20")]
		public NetworkLocalLighter()
		{
		}
	}
	[StructLayout(LayoutKind.Explicit)]
	[Token(Token = "0x2000313")]
	[AttributeAttribute(Name = "NetworkInputWeavedAttribute", RVA = "0xE6845C", Offset = "0xE6845C")]
	public struct NetworkLocalPlayerInput : INetworkInput
	{
		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 playAreaPosition;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion playAreaRotation;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 leftHandPosition;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion leftHandRotation;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 rightHandPosition;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion rightHandRotation;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 headsetPosition;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Quaternion headsetRotation;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 torsoPosition;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Quaternion torsoRotation;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public GrabInfo leftGrabInfo;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public GrabInfo rightGrabInfo;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public HandInputs leftHandsInputs;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		public HandInputs rightHandsInputs;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F4")]
		public LighterData lighterInputs;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x644")]
		public CigaretteData activeCig;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69C")]
		public MouthNetwork mouthData;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A4")]
		public GunNetworkData gunData;
	}
	[Token(Token = "0x2000314")]
	public class NetworkLocalPlayer : MonoBehaviour, INetworkRunnerCallbacks
	{
		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7F140", Offset = "0xE7F140")]
		private bool <isLocalPaused>k__BackingField;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkLocalHand leftHand;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NetworkLocalHand rightHand;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NetworkLocalTorso torso;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public NetworkLocalHeadset headset;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NetworkLocalLighter lighter;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public NetworkLocalCigarette activeCig;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public NetworkLocalPlayerMouth mouth;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public NetworkLocalGun gun;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NetworkRunner _networkRunner;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private HVRSocket ciggerateHolster;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _leftHandOffset;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _rightHandOffset;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private NetworkLocalPlayerInput _cachedPlayerInput;

		[Token(Token = "0x1700022D")]
		public bool isLocalPaused
		{
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x106BD28", Offset = "0x106BD28", VA = "0x106BD28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EB58", Offset = "0xE8EB58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0x106BD30", Offset = "0x106BD30", VA = "0x106BD30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EB68", Offset = "0xE8EB68")]
			set
			{
			}
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x106BD3C", Offset = "0x106BD3C", VA = "0x106BD3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x106BEB8", Offset = "0x106BEB8", VA = "0x106BEB8")]
		private void Start()
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x106BFF0", Offset = "0x106BFF0", VA = "0x106BFF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x106C138", Offset = "0x106C138", VA = "0x106C138")]
		private void OnCigaretteReleasedFromSocket(HVRGrabberBase socketGrabber, HVRGrabbable grabbedObject)
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x106BEBC", Offset = "0x106BEBC", VA = "0x106BEBC")]
		private void InitRigForMultiplayer()
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x106C224", Offset = "0x106C224", VA = "0x106C224", Slot = "6")]
		public void OnInput(NetworkRunner runner, NetworkInput input)
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x106C648", Offset = "0x106C648", VA = "0x106C648", Slot = "4")]
		public void OnPlayerJoined(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x106C64C", Offset = "0x106C64C", VA = "0x106C64C", Slot = "5")]
		public void OnPlayerLeft(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x106C650", Offset = "0x106C650", VA = "0x106C650", Slot = "7")]
		public void OnInputMissing(NetworkRunner runner, PlayerRef player, NetworkInput input)
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x106C654", Offset = "0x106C654", VA = "0x106C654", Slot = "8")]
		public void OnShutdown(NetworkRunner runner, ShutdownReason shutdownReason)
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x106C658", Offset = "0x106C658", VA = "0x106C658", Slot = "9")]
		public void OnConnectedToServer(NetworkRunner runner)
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x106C65C", Offset = "0x106C65C", VA = "0x106C65C", Slot = "10")]
		public void OnDisconnectedFromServer(NetworkRunner runner)
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x106C660", Offset = "0x106C660", VA = "0x106C660", Slot = "11")]
		public void OnConnectRequest(NetworkRunner runner, NetworkRunnerCallbackArgs.ConnectRequest request, byte[] token)
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x106C664", Offset = "0x106C664", VA = "0x106C664", Slot = "12")]
		public void OnConnectFailed(NetworkRunner runner, NetAddress remoteAddress, NetConnectFailedReason reason)
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x106C668", Offset = "0x106C668", VA = "0x106C668", Slot = "13")]
		public void OnUserSimulationMessage(NetworkRunner runner, SimulationMessagePtr message)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x106C66C", Offset = "0x106C66C", VA = "0x106C66C", Slot = "14")]
		public void OnSessionListUpdated(NetworkRunner runner, List<SessionInfo> sessionList)
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x106C670", Offset = "0x106C670", VA = "0x106C670", Slot = "15")]
		public void OnCustomAuthenticationResponse(NetworkRunner runner, Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x106C674", Offset = "0x106C674", VA = "0x106C674", Slot = "16")]
		public void OnHostMigration(NetworkRunner runner, HostMigrationToken hostMigrationToken)
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x106C678", Offset = "0x106C678", VA = "0x106C678", Slot = "17")]
		public void OnReliableDataReceived(NetworkRunner runner, PlayerRef player, ArraySegment<byte> data)
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x106C67C", Offset = "0x106C67C", VA = "0x106C67C", Slot = "18")]
		public void OnSceneLoadDone(NetworkRunner runner)
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x106C680", Offset = "0x106C680", VA = "0x106C680", Slot = "19")]
		public void OnSceneLoadStart(NetworkRunner runner)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x106C684", Offset = "0x106C684", VA = "0x106C684")]
		public NetworkLocalPlayer()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public enum InhaleState
	{
		[Token(Token = "0x4000ECB")]
		None,
		[Token(Token = "0x4000ECC")]
		Inhaling,
		[Token(Token = "0x4000ECD")]
		Exhaling
	}
	[StructLayout(LayoutKind.Explicit)]
	[Token(Token = "0x2000316")]
	[AttributeAttribute(Name = "NetworkStructWeavedAttribute", RVA = "0xE68470", Offset = "0xE68470")]
	public struct MouthNetwork : INetworkStruct
	{
		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InhaleState inhaleState;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public NetworkBool isExhaleParticlePlaying;
	}
	[Token(Token = "0x2000317")]
	public class NetworkLocalPlayerMouth : MonoBehaviour
	{
		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HVRSocket _socket;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem _exhaleSmoke;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayerMouth _playerMouth;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MouthNetwork _mouthData;

		[Token(Token = "0x1700022E")]
		public MouthNetwork MouthData
		{
			[Token(Token = "0x60010D6")]
			[Address(RVA = "0x106C68C", Offset = "0x106C68C", VA = "0x106C68C")]
			get
			{
				return default(MouthNetwork);
			}
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x106C694", Offset = "0x106C694", VA = "0x106C694")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x106C6F8", Offset = "0x106C6F8", VA = "0x106C6F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x106C738", Offset = "0x106C738", VA = "0x106C738")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x106C958", Offset = "0x106C958", VA = "0x106C958")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x106CB78", Offset = "0x106CB78", VA = "0x106CB78")]
		private void OnInhale()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x106CB84", Offset = "0x106CB84", VA = "0x106CB84")]
		private void OnExhale()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x106CB90", Offset = "0x106CB90", VA = "0x106CB90")]
		private void OnSocketGrabbed(HVRGrabberBase arg0, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x106CC3C", Offset = "0x106CC3C", VA = "0x106CC3C")]
		private void OnSocketReleased(HVRGrabberBase arg0, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x106CCE8", Offset = "0x106CCE8", VA = "0x106CCE8")]
		public NetworkLocalPlayerMouth()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class NetworkLocalTorso : MonoBehaviour
	{
		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7F1B0", Offset = "0xE7F1B0")]
		public Transform PlayerController;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform Neck;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7F1E8", Offset = "0xE7F1E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7F1E8", Offset = "0xE7F1E8")]
		public float NeckOffset;

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x106CCF0", Offset = "0x106CCF0", VA = "0x106CCF0")]
		public void Update()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x106CCF4", Offset = "0x106CCF4", VA = "0x106CCF4")]
		public void FollowPlayer()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x106CDB4", Offset = "0x106CDB4", VA = "0x106CDB4")]
		public NetworkLocalTorso()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class NetworkClientManager : PSH_Singleton<NetworkClientManager>, INetworkRunnerCallbacks
	{
		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NetworkLocalPlayer localPlayer;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetworkRunner _networkRunner;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NetworkPacketProcessor _packetProcessor;

		[Token(Token = "0x1700022F")]
		protected override bool DoNotDestroyOnLoad
		{
			[Token(Token = "0x60010E3")]
			[Address(RVA = "0x114CC00", Offset = "0x114CC00", VA = "0x114CC00", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x114CC08", Offset = "0x114CC08", VA = "0x114CC08", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x114CDA8", Offset = "0x114CDA8", VA = "0x114CDA8", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x114D018", Offset = "0x114D018", VA = "0x114D018")]
		private void OnClientDataReceived(PacketHelper.TypeID typeID, byte[] data)
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x114D090", Offset = "0x114D090", VA = "0x114D090")]
		public void OnPlayStart()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x114D094", Offset = "0x114D094", VA = "0x114D094")]
		private void Init()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x114D15C", Offset = "0x114D15C", VA = "0x114D15C")]
		private void ReturnToMainMenuOnError()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x114D22C", Offset = "0x114D22C", VA = "0x114D22C", Slot = "13")]
		public void OnDisconnectedFromServer(NetworkRunner runner)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x114D2B4", Offset = "0x114D2B4", VA = "0x114D2B4", Slot = "7")]
		public void OnPlayerJoined(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x114D2B8", Offset = "0x114D2B8", VA = "0x114D2B8", Slot = "8")]
		public void OnPlayerLeft(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x114D2BC", Offset = "0x114D2BC", VA = "0x114D2BC", Slot = "9")]
		public void OnInput(NetworkRunner runner, NetworkInput input)
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x114D2C0", Offset = "0x114D2C0", VA = "0x114D2C0", Slot = "10")]
		public void OnInputMissing(NetworkRunner runner, PlayerRef player, NetworkInput input)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x114D2C4", Offset = "0x114D2C4", VA = "0x114D2C4", Slot = "11")]
		public void OnShutdown(NetworkRunner runner, ShutdownReason shutdownReason)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x114D2C8", Offset = "0x114D2C8", VA = "0x114D2C8", Slot = "12")]
		public void OnConnectedToServer(NetworkRunner runner)
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x114D2CC", Offset = "0x114D2CC", VA = "0x114D2CC", Slot = "14")]
		public void OnConnectRequest(NetworkRunner runner, NetworkRunnerCallbackArgs.ConnectRequest request, byte[] token)
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x114D2D0", Offset = "0x114D2D0", VA = "0x114D2D0", Slot = "15")]
		public void OnConnectFailed(NetworkRunner runner, NetAddress remoteAddress, NetConnectFailedReason reason)
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x114D2D4", Offset = "0x114D2D4", VA = "0x114D2D4", Slot = "16")]
		public void OnUserSimulationMessage(NetworkRunner runner, SimulationMessagePtr message)
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x114D2D8", Offset = "0x114D2D8", VA = "0x114D2D8", Slot = "17")]
		public void OnSessionListUpdated(NetworkRunner runner, List<SessionInfo> sessionList)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x114D2DC", Offset = "0x114D2DC", VA = "0x114D2DC", Slot = "18")]
		public void OnCustomAuthenticationResponse(NetworkRunner runner, Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x114D2E0", Offset = "0x114D2E0", VA = "0x114D2E0", Slot = "19")]
		public void OnHostMigration(NetworkRunner runner, HostMigrationToken hostMigrationToken)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x114D2E4", Offset = "0x114D2E4", VA = "0x114D2E4", Slot = "20")]
		public void OnReliableDataReceived(NetworkRunner runner, PlayerRef player, ArraySegment<byte> data)
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x114D2E8", Offset = "0x114D2E8", VA = "0x114D2E8", Slot = "21")]
		public void OnSceneLoadDone(NetworkRunner runner)
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x114D2EC", Offset = "0x114D2EC", VA = "0x114D2EC", Slot = "22")]
		public void OnSceneLoadStart(NetworkRunner runner)
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x114D2F0", Offset = "0x114D2F0", VA = "0x114D2F0")]
		public NetworkClientManager()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public enum NetworkError
	{
		[Token(Token = "0x4000EDB")]
		None,
		[Token(Token = "0x4000EDC")]
		UnknownError,
		[Token(Token = "0x4000EDD")]
		HostDisconnected,
		[Token(Token = "0x4000EDE")]
		PhotonError,
		[Token(Token = "0x4000EDF")]
		GameFull,
		[Token(Token = "0x4000EE0")]
		ConnectionRefused,
		[Token(Token = "0x4000EE1")]
		TimeOut,
		[Token(Token = "0x4000EE2")]
		Kicked,
		[Token(Token = "0x4000EE3")]
		VersionMissMatch
	}
	[Token(Token = "0x200031B")]
	internal static class NetworkDefs
	{
		[Token(Token = "0x4000EE4")]
		public const string MULTI_PLAYER_LOBBY_SCENE = "Location_SH_GarrisonPub_MP";

		[Token(Token = "0x4000EE5")]
		public const int MAX_PLAYERS = 6;

		[Token(Token = "0x4000EE6")]
		public const int MAX_TIME_TO_JOIN_SECOND = 60;

		[Token(Token = "0x4000EE7")]
		public const int MAX_TIME_REMOVING_HEADSET_BEFORE_DISCONNECT_SECOND = 65;

		[Token(Token = "0x4000EE8")]
		public const int TIMED_OUT_WAITING_FOR_JOIN = 700;

		[Token(Token = "0x4000EE9")]
		public const int DEBUG_ERROR_CODE = -24;

		[Token(Token = "0x4000EEA")]
		public const int HEADSET_REMOVE_ERROR_CODE = 922;

		[Token(Token = "0x4000EEB")]
		public const int CONNECTION_REFUSED_ERROR_PREFIX = 200;

		[Token(Token = "0x4000EEC")]
		public const int SERVER_SHUTDOWN_ERROR_PREFIX = 300;

		[Token(Token = "0x4000EED")]
		public const int VERSION_MISS_MATCH_ERROR_CORE = 480;
	}
	[Token(Token = "0x200031C")]
	public class NetworkErrorTracker
	{
		[Token(Token = "0x200031D")]
		private struct ErrorRecord
		{
			[Token(Token = "0x4000EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DateTime localTimeStamp;

			[Token(Token = "0x4000EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public NetworkError errorCode;

			[Token(Token = "0x4000EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int customErrorData;
		}

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<ErrorRecord> errorBuffer;

		[Token(Token = "0x17000230")]
		public bool HasErrorOccured
		{
			[Token(Token = "0x60010FD")]
			[Address(RVA = "0x1066468", Offset = "0x1066468", VA = "0x1066468")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000006")]
		public event Action OnErrorOccured
		{
			[Token(Token = "0x60010FB")]
			[Address(RVA = "0x1066328", Offset = "0x1066328", VA = "0x1066328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EB78", Offset = "0xE8EB78")]
			add
			{
			}
			[Token(Token = "0x60010FC")]
			[Address(RVA = "0x10663C8", Offset = "0x10663C8", VA = "0x10663C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EB88", Offset = "0xE8EB88")]
			remove
			{
			}
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x10664BC", Offset = "0x10664BC", VA = "0x10664BC")]
		public NetworkErrorTracker()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x1066540", Offset = "0x1066540", VA = "0x1066540")]
		public bool GetErrorDetails(out NetworkError errorCode, out int customErrorCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x10665DC", Offset = "0x10665DC", VA = "0x10665DC")]
		public bool ProcessErrorsAndFlushBuffer(out NetworkError errorCode, out int customErrorCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x106660C", Offset = "0x106660C", VA = "0x106660C")]
		public void FlushTracker()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x1066660", Offset = "0x1066660", VA = "0x1066660")]
		public NetworkError OnShutdown(NetworkRunner runner, ShutdownReason shutdownReason)
		{
			return default(NetworkError);
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x1066864", Offset = "0x1066864", VA = "0x1066864")]
		public NetworkError OnConnectFailed(NetworkRunner runner, NetAddress remoteAddress, NetConnectFailedReason reason)
		{
			return default(NetworkError);
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x10669AC", Offset = "0x10669AC", VA = "0x10669AC")]
		public NetworkError OnCustomErrorOccured(NetworkError error, int customErrorCode)
		{
			return default(NetworkError);
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x1066798", Offset = "0x1066798", VA = "0x1066798")]
		private void RecordError(NetworkError error, int customErrorCode)
		{
		}
	}
	[Token(Token = "0x200031E")]
	public class NetworkHandShakeManager
	{
		[Token(Token = "0x200031F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE68484", Offset = "0xE68484")]
		private sealed class <TimeHandshakeRequest>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkHandShakeManager <>4__this;

			[Token(Token = "0x17000231")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001114")]
				[Address(RVA = "0x32C0AE0", Offset = "0x32C0AE0", VA = "0x32C0AE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000232")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001116")]
				[Address(RVA = "0x32C0B28", Offset = "0x32C0B28", VA = "0x32C0B28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001111")]
			[Address(RVA = "0x32C09F0", Offset = "0x32C09F0", VA = "0x32C09F0")]
			[DebuggerHidden]
			public <TimeHandshakeRequest>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001112")]
			[Address(RVA = "0x32C0A1C", Offset = "0x32C0A1C", VA = "0x32C0A1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001113")]
			[Address(RVA = "0x32C0A20", Offset = "0x32C0A20", VA = "0x32C0A20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001115")]
			[Address(RVA = "0x32C0AE8", Offset = "0x32C0AE8", VA = "0x32C0AE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly NetworkSessionManager _networkSessionManager;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly NetworkRunner _networkRunner;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _handshakeInProgress;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine _handshakeTimeoutTracker;

		[Token(Token = "0x14000007")]
		public event Action<bool> OnHandshakeComplete
		{
			[Token(Token = "0x6001106")]
			[Address(RVA = "0x1069508", Offset = "0x1069508", VA = "0x1069508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EB98", Offset = "0xE8EB98")]
			add
			{
			}
			[Token(Token = "0x6001107")]
			[Address(RVA = "0x10695A8", Offset = "0x10695A8", VA = "0x10695A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EBA8", Offset = "0xE8EBA8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x1069648", Offset = "0x1069648", VA = "0x1069648")]
		public NetworkHandShakeManager(NetworkSessionManager sessionManager)
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x10696A4", Offset = "0x10696A4", VA = "0x10696A4")]
		public void BeginHandShake()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x1069ABC", Offset = "0x1069ABC", VA = "0x1069ABC")]
		private void OnClientMessageReceived(PacketHelper.TypeID messageType, byte[] data)
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x1069C24", Offset = "0x1069C24", VA = "0x1069C24")]
		private void OnPlayerProfileFetched(bool success)
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x1069C34", Offset = "0x1069C34", VA = "0x1069C34")]
		private void RequestPlayerRemoteAvatar()
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x1069B28", Offset = "0x1069B28", VA = "0x1069B28")]
		private void RequestJoinGame()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x1069A44", Offset = "0x1069A44", VA = "0x1069A44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8EBB8", Offset = "0xE8EBB8")]
		private IEnumerator TimeHandshakeRequest()
		{
			return null;
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x1069880", Offset = "0x1069880", VA = "0x1069880")]
		private void HandShakeComplete(bool successful)
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x1069BD4", Offset = "0x1069BD4", VA = "0x1069BD4")]
		private void StopTimeoutCoroutine()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class NetworkLobbyController
	{
		[Token(Token = "0x2000321")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE68494", Offset = "0xE68494")]
		private sealed class <AttemptJoinLobby>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkLobbyController <>4__this;

			[Token(Token = "0x4000F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<bool> OnComplete;

			[Token(Token = "0x4000F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Task<StartGameResult> <joinLobbyTask>5__2;

			[Token(Token = "0x17000235")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001122")]
				[Address(RVA = "0x32C0D24", Offset = "0x32C0D24", VA = "0x32C0D24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000236")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001124")]
				[Address(RVA = "0x32C0D6C", Offset = "0x32C0D6C", VA = "0x32C0D6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600111F")]
			[Address(RVA = "0x32C0B5C", Offset = "0x32C0B5C", VA = "0x32C0B5C")]
			[DebuggerHidden]
			public <AttemptJoinLobby>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001120")]
			[Address(RVA = "0x32C0B88", Offset = "0x32C0B88", VA = "0x32C0B88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001121")]
			[Address(RVA = "0x32C0B8C", Offset = "0x32C0B8C", VA = "0x32C0B8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001123")]
			[Address(RVA = "0x32C0D2C", Offset = "0x32C0D2C", VA = "0x32C0D2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000322")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE684A4", Offset = "0xE684A4")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4000F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string roomName;

			[Token(Token = "0x6001125")]
			[Address(RVA = "0x32C0B30", Offset = "0x32C0B30", VA = "0x32C0B30")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001126")]
			[Address(RVA = "0x32C0B38", Offset = "0x32C0B38", VA = "0x32C0B38")]
			internal bool <DoesRoomExist>b__0(SessionInfo session)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<SessionInfo> _sessionInfos;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NetworkRunner _networkRunner;

		[Token(Token = "0x17000233")]
		public List<SessionInfo> SessionInfos
		{
			[Token(Token = "0x6001117")]
			[Address(RVA = "0x1069D9C", Offset = "0x1069D9C", VA = "0x1069D9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		public bool IsConnected
		{
			[Token(Token = "0x6001118")]
			[Address(RVA = "0x1069DA4", Offset = "0x1069DA4", VA = "0x1069DA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x1069DC0", Offset = "0x1069DC0", VA = "0x1069DC0")]
		public NetworkLobbyController(NetworkRunner networkRunner)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x1069E60", Offset = "0x1069E60", VA = "0x1069E60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8EC68", Offset = "0xE8EC68")]
		public IEnumerator AttemptJoinLobby(Action<bool> OnComplete)
		{
			return null;
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x1069EF4", Offset = "0x1069EF4", VA = "0x1069EF4")]
		public bool IsRoomAvailable(string roomName)
		{
			return default(bool);
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x106A17C", Offset = "0x106A17C", VA = "0x106A17C")]
		public bool IsValidRoomVersion(string roomName)
		{
			return default(bool);
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x106A03C", Offset = "0x106A03C", VA = "0x106A03C")]
		private bool DoesRoomExist(string roomName, out SessionInfo sessionInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x106A2A0", Offset = "0x106A2A0", VA = "0x106A2A0")]
		public void OnSessionListUpdated(NetworkRunner runner, List<SessionInfo> sessionList)
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class NetworkPacketProcessor
	{
		[Token(Token = "0x14000008")]
		public event Action<PacketHelper.TypeID, PlayerRef, byte[]> OnServerMessageReceived
		{
			[Token(Token = "0x6001127")]
			[Address(RVA = "0x106CDC8", Offset = "0x106CDC8", VA = "0x106CDC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8ED18", Offset = "0xE8ED18")]
			add
			{
			}
			[Token(Token = "0x6001128")]
			[Address(RVA = "0x106CE68", Offset = "0x106CE68", VA = "0x106CE68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8ED28", Offset = "0xE8ED28")]
			remove
			{
			}
		}

		[Token(Token = "0x14000009")]
		public event Action<PacketHelper.TypeID, byte[]> OnClientMessageReceived
		{
			[Token(Token = "0x6001129")]
			[Address(RVA = "0x10699A4", Offset = "0x10699A4", VA = "0x10699A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8ED38", Offset = "0xE8ED38")]
			add
			{
			}
			[Token(Token = "0x600112A")]
			[Address(RVA = "0x1069CD4", Offset = "0x1069CD4", VA = "0x1069CD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8ED48", Offset = "0xE8ED48")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000A")]
		public event Action<PacketHelper.TypeID, PlayerRef, byte[]> OnClientMessageReceivedFromOtherPlayer
		{
			[Token(Token = "0x600112B")]
			[Address(RVA = "0x106CF08", Offset = "0x106CF08", VA = "0x106CF08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8ED58", Offset = "0xE8ED58")]
			add
			{
			}
			[Token(Token = "0x600112C")]
			[Address(RVA = "0x106CFA8", Offset = "0x106CFA8", VA = "0x106CFA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8ED68", Offset = "0xE8ED68")]
			remove
			{
			}
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x106D048", Offset = "0x106D048", VA = "0x106D048")]
		public void OnPacketReceived(NetworkRunner runner, PlayerRef player, ArraySegment<byte> data)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x106D208", Offset = "0x106D208", VA = "0x106D208")]
		public NetworkPacketProcessor()
		{
		}
	}
	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE684B4", Offset = "0xE684B4")]
	public class NetworkRoomConnectionManager : PSH_Singleton<NetworkRoomConnectionManager>
	{
		[Token(Token = "0x2000325")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE68514", Offset = "0xE68514")]
		private sealed class <TryConnectToRoom>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameMode connectionType;

			[Token(Token = "0x4000F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string roomName;

			[Token(Token = "0x4000F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NetworkRoomConnectionManager <>4__this;

			[Token(Token = "0x4000F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Task<StartGameResult> <startRoomTask>5__2;

			[Token(Token = "0x17000238")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001139")]
				[Address(RVA = "0x32C1978", Offset = "0x32C1978", VA = "0x32C1978", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000239")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600113B")]
				[Address(RVA = "0x32C19C0", Offset = "0x32C19C0", VA = "0x32C19C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001136")]
			[Address(RVA = "0x32C13D4", Offset = "0x32C13D4", VA = "0x32C13D4")]
			[DebuggerHidden]
			public <TryConnectToRoom>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001137")]
			[Address(RVA = "0x32C1400", Offset = "0x32C1400", VA = "0x32C1400", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001138")]
			[Address(RVA = "0x32C1404", Offset = "0x32C1404", VA = "0x32C1404", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600113A")]
			[Address(RVA = "0x32C1980", Offset = "0x32C1980", VA = "0x32C1980", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetworkRunner _networkRunner;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NetworkSceneManagerDefault _networkSceneManager;

		[Token(Token = "0x17000237")]
		protected override bool DoNotDestroyOnLoad
		{
			[Token(Token = "0x6001131")]
			[Address(RVA = "0x10712F4", Offset = "0x10712F4", VA = "0x10712F4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400000B")]
		public event Action<bool> OnRoomConnected
		{
			[Token(Token = "0x600112F")]
			[Address(RVA = "0x10711B4", Offset = "0x10711B4", VA = "0x10711B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8ED78", Offset = "0xE8ED78")]
			add
			{
			}
			[Token(Token = "0x6001130")]
			[Address(RVA = "0x1071254", Offset = "0x1071254", VA = "0x1071254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8ED88", Offset = "0xE8ED88")]
			remove
			{
			}
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x10712FC", Offset = "0x10712FC", VA = "0x10712FC", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x10713AC", Offset = "0x10713AC", VA = "0x10713AC")]
		public void JoinRoom()
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x1071454", Offset = "0x1071454", VA = "0x1071454")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8ED98", Offset = "0xE8ED98")]
		private IEnumerator TryConnectToRoom(GameMode connectionType, string roomName)
		{
			return null;
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x10714F0", Offset = "0x10714F0", VA = "0x10714F0")]
		public NetworkRoomConnectionManager()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class NetworkSceneController : PSH_Singleton<NetworkSceneController>
	{
		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NetworkRunner networkRunner;

		[Token(Token = "0x1700023A")]
		protected override bool DoNotDestroyOnLoad
		{
			[Token(Token = "0x600113C")]
			[Address(RVA = "0x107174C", Offset = "0x107174C", VA = "0x107174C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x1071754", Offset = "0x1071754", VA = "0x1071754", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x10718A4", Offset = "0x10718A4", VA = "0x10718A4")]
		private new void OnDestroy()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x10719A0", Offset = "0x10719A0", VA = "0x10719A0")]
		public void SetBusyState(bool isBusy)
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x1071AD0", Offset = "0x1071AD0", VA = "0x1071AD0")]
		public void RequestAudioMuted(bool isMuted)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x1071E54", Offset = "0x1071E54", VA = "0x1071E54")]
		private void SetPausedState(bool isPaused)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x1071F8C", Offset = "0x1071F8C", VA = "0x1071F8C")]
		public NetworkSceneController()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class NetworkSceneTransitionManager
	{
		[Token(Token = "0x2000328")]
		public enum Destination
		{
			[Token(Token = "0x4000F14")]
			None,
			[Token(Token = "0x4000F15")]
			GameScene,
			[Token(Token = "0x4000F16")]
			MainMenu
		}

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Destination DestinationTarget;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _transitionInProgress;

		[Token(Token = "0x1700023B")]
		public bool TransitionInProgress
		{
			[Token(Token = "0x6001143")]
			[Address(RVA = "0x10732C8", Offset = "0x10732C8", VA = "0x10732C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400000C")]
		public event Action OnGameSceneLoaded
		{
			[Token(Token = "0x6001144")]
			[Address(RVA = "0x10732D0", Offset = "0x10732D0", VA = "0x10732D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EE48", Offset = "0xE8EE48")]
			add
			{
			}
			[Token(Token = "0x6001145")]
			[Address(RVA = "0x1073370", Offset = "0x1073370", VA = "0x1073370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8EE58", Offset = "0xE8EE58")]
			remove
			{
			}
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x1073410", Offset = "0x1073410", VA = "0x1073410")]
		public void TransitionToGameScene()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x1073514", Offset = "0x1073514", VA = "0x1073514")]
		public void TransitionToMainMenu()
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x1073B60", Offset = "0x1073B60", VA = "0x1073B60")]
		private void ShutdownSession()
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x1073C58", Offset = "0x1073C58", VA = "0x1073C58")]
		private void LoadMainMenu()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x1073D44", Offset = "0x1073D44", VA = "0x1073D44")]
		private void OnMainMenuLoaded(Scene scene, LoadSceneMode loadSceneMode)
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x1073E08", Offset = "0x1073E08", VA = "0x1073E08")]
		private void TransitionToGameStarted()
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x1073E84", Offset = "0x1073E84", VA = "0x1073E84")]
		private void TransitionToGameComplete()
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x1073F68", Offset = "0x1073F68", VA = "0x1073F68")]
		public NetworkSceneTransitionManager()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class NetworkServerManager : PSH_Singleton<NetworkServerManager>, INetworkRunnerCallbacks
	{
		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmojiList emojiList;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private NetworkObject _networkPlayerPrefab;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AvatarServerManager _avatarServerManager;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EmojiServerManager _emojiServerManager;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NetworkRunner _networkRunner;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NetworkPacketProcessor _packetProcessor;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private INetworkRunnerCallbacks _networkRunnerCallbacksImplementation;

		[Token(Token = "0x1700023C")]
		protected override bool DoNotDestroyOnLoad
		{
			[Token(Token = "0x600114E")]
			[Address(RVA = "0x1073F70", Offset = "0x1073F70", VA = "0x1073F70", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x1073F78", Offset = "0x1073F78", VA = "0x1073F78", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x1074014", Offset = "0x1074014", VA = "0x1074014", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x10741C0", Offset = "0x10741C0", VA = "0x10741C0", Slot = "7")]
		public void OnPlayerJoined(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x10742B8", Offset = "0x10742B8", VA = "0x10742B8", Slot = "8")]
		public void OnPlayerLeft(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x10743E0", Offset = "0x10743E0", VA = "0x10743E0")]
		public void KickPlayer(PlayerRef player)
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x1073874", Offset = "0x1073874", VA = "0x1073874")]
		public void KickAllPlayers()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x1074400", Offset = "0x1074400", VA = "0x1074400")]
		private void OnServerReceivedData(PacketHelper.TypeID typeID, PlayerRef playerRef, byte[] data)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x10746F0", Offset = "0x10746F0", VA = "0x10746F0")]
		public void OnPlayerEnterRoom()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x10746F4", Offset = "0x10746F4", VA = "0x10746F4")]
		public void Init()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x10748A8", Offset = "0x10748A8", VA = "0x10748A8")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x107490C", Offset = "0x107490C", VA = "0x107490C", Slot = "20")]
		public void OnReliableDataReceived(NetworkRunner runner, PlayerRef player, ArraySegment<byte> data)
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x1074910", Offset = "0x1074910", VA = "0x1074910", Slot = "9")]
		public void OnInput(NetworkRunner runner, NetworkInput input)
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x1074914", Offset = "0x1074914", VA = "0x1074914", Slot = "10")]
		public void OnInputMissing(NetworkRunner runner, PlayerRef player, NetworkInput input)
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x1074918", Offset = "0x1074918", VA = "0x1074918", Slot = "11")]
		public void OnShutdown(NetworkRunner runner, ShutdownReason shutdownReason)
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x107491C", Offset = "0x107491C", VA = "0x107491C", Slot = "12")]
		public void OnConnectedToServer(NetworkRunner runner)
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x1074920", Offset = "0x1074920", VA = "0x1074920", Slot = "13")]
		public void OnDisconnectedFromServer(NetworkRunner runner)
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x1074924", Offset = "0x1074924", VA = "0x1074924", Slot = "14")]
		public void OnConnectRequest(NetworkRunner runner, NetworkRunnerCallbackArgs.ConnectRequest request, byte[] token)
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x1074928", Offset = "0x1074928", VA = "0x1074928", Slot = "15")]
		public void OnConnectFailed(NetworkRunner runner, NetAddress remoteAddress, NetConnectFailedReason reason)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x107492C", Offset = "0x107492C", VA = "0x107492C", Slot = "16")]
		public void OnUserSimulationMessage(NetworkRunner runner, SimulationMessagePtr message)
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x1074930", Offset = "0x1074930", VA = "0x1074930", Slot = "17")]
		public void OnSessionListUpdated(NetworkRunner runner, List<SessionInfo> sessionList)
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x1074934", Offset = "0x1074934", VA = "0x1074934", Slot = "18")]
		public void OnCustomAuthenticationResponse(NetworkRunner runner, Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x1074938", Offset = "0x1074938", VA = "0x1074938", Slot = "19")]
		public void OnHostMigration(NetworkRunner runner, HostMigrationToken hostMigrationToken)
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x107493C", Offset = "0x107493C", VA = "0x107493C", Slot = "21")]
		public void OnSceneLoadDone(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x1074940", Offset = "0x1074940", VA = "0x1074940", Slot = "22")]
		public void OnSceneLoadStart(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x1074944", Offset = "0x1074944", VA = "0x1074944")]
		public NetworkServerManager()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class NetworkSessionManager : PSH_Singleton<NetworkSessionManager>, INetworkRunnerCallbacks
	{
		[Token(Token = "0x200032B")]
		public enum SessionState
		{
			[Token(Token = "0x4000F2B")]
			Offline,
			[Token(Token = "0x4000F2C")]
			Starting,
			[Token(Token = "0x4000F2D")]
			Lobby,
			[Token(Token = "0x4000F2E")]
			Joining,
			[Token(Token = "0x4000F2F")]
			Play,
			[Token(Token = "0x4000F30")]
			ShuttingDown
		}

		[Token(Token = "0x200032C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE68524", Offset = "0xE68524")]
		private sealed class <SwapToMultiplayerRig>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action onComplete;

			[Token(Token = "0x1700023E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001193")]
				[Address(RVA = "0x32C4044", Offset = "0x32C4044", VA = "0x32C4044", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001195")]
				[Address(RVA = "0x32C408C", Offset = "0x32C408C", VA = "0x32C408C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001190")]
			[Address(RVA = "0x32C3FA0", Offset = "0x32C3FA0", VA = "0x32C3FA0")]
			[DebuggerHidden]
			public <SwapToMultiplayerRig>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001191")]
			[Address(RVA = "0x32C3FCC", Offset = "0x32C3FCC", VA = "0x32C3FCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001192")]
			[Address(RVA = "0x32C3FD0", Offset = "0x32C3FD0", VA = "0x32C3FD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001194")]
			[Address(RVA = "0x32C404C", Offset = "0x32C404C", VA = "0x32C404C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200032D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE68534", Offset = "0xE68534")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__23_0;

			[Token(Token = "0x6001197")]
			[Address(RVA = "0x32C339C", Offset = "0x32C339C", VA = "0x32C339C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001198")]
			[Address(RVA = "0x32C33A4", Offset = "0x32C33A4", VA = "0x32C33A4")]
			internal bool <WaitForRemoteAvatar>b__23_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200032E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE68544", Offset = "0xE68544")]
		private sealed class <WaitForRemoteAvatar>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000240")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600119C")]
				[Address(RVA = "0x32C4238", Offset = "0x32C4238", VA = "0x32C4238", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000241")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600119E")]
				[Address(RVA = "0x32C4280", Offset = "0x32C4280", VA = "0x32C4280", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001199")]
			[Address(RVA = "0x32C4094", Offset = "0x32C4094", VA = "0x32C4094")]
			[DebuggerHidden]
			public <WaitForRemoteAvatar>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x600119A")]
			[Address(RVA = "0x32C40C0", Offset = "0x32C40C0", VA = "0x32C40C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600119B")]
			[Address(RVA = "0x32C40C4", Offset = "0x32C40C4", VA = "0x32C40C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600119D")]
			[Address(RVA = "0x32C4240", Offset = "0x32C4240", VA = "0x32C4240", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200032F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE68554", Offset = "0xE68554")]
		private sealed class <InitialiseNetworkRunner>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkSessionManager <>4__this;

			[Token(Token = "0x17000242")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011A2")]
				[Address(RVA = "0x32C3A1C", Offset = "0x32C3A1C", VA = "0x32C3A1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000243")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011A4")]
				[Address(RVA = "0x32C3A64", Offset = "0x32C3A64", VA = "0x32C3A64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600119F")]
			[Address(RVA = "0x32C376C", Offset = "0x32C376C", VA = "0x32C376C")]
			[DebuggerHidden]
			public <InitialiseNetworkRunner>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60011A0")]
			[Address(RVA = "0x32C3798", Offset = "0x32C3798", VA = "0x32C3798", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011A1")]
			[Address(RVA = "0x32C379C", Offset = "0x32C379C", VA = "0x32C379C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011A3")]
			[Address(RVA = "0x32C3A24", Offset = "0x32C3A24", VA = "0x32C3A24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE68564", Offset = "0xE68564")]
		private sealed class <StartRunnerAndConnectToLobby>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkSessionManager <>4__this;

			[Token(Token = "0x4000F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<bool> onSessionStarted;

			[Token(Token = "0x17000244")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011A8")]
				[Address(RVA = "0x32C3F50", Offset = "0x32C3F50", VA = "0x32C3F50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000245")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011AA")]
				[Address(RVA = "0x32C3F98", Offset = "0x32C3F98", VA = "0x32C3F98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011A5")]
			[Address(RVA = "0x32C3DD4", Offset = "0x32C3DD4", VA = "0x32C3DD4")]
			[DebuggerHidden]
			public <StartRunnerAndConnectToLobby>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x60011A6")]
			[Address(RVA = "0x32C3E00", Offset = "0x32C3E00", VA = "0x32C3E00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x32C3E04", Offset = "0x32C3E04", VA = "0x32C3E04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011A9")]
			[Address(RVA = "0x32C3F58", Offset = "0x32C3F58", VA = "0x32C3F58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000331")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE68574", Offset = "0xE68574")]
		private sealed class <ShutdownNetworkRunner>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkSessionManager <>4__this;

			[Token(Token = "0x4000F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ShutdownReason reason;

			[Token(Token = "0x4000F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action onShutdownComplete;

			[Token(Token = "0x4000F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private NetworkRunner <networkRunnerShuttingDown>5__2;

			[Token(Token = "0x17000246")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011AE")]
				[Address(RVA = "0x32C3D84", Offset = "0x32C3D84", VA = "0x32C3D84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000247")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011B0")]
				[Address(RVA = "0x32C3DCC", Offset = "0x32C3DCC", VA = "0x32C3DCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x32C3A6C", Offset = "0x32C3A6C", VA = "0x32C3A6C")]
			[DebuggerHidden]
			public <ShutdownNetworkRunner>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60011AC")]
			[Address(RVA = "0x32C3A98", Offset = "0x32C3A98", VA = "0x32C3A98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011AD")]
			[Address(RVA = "0x32C3A9C", Offset = "0x32C3A9C", VA = "0x32C3A9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011AF")]
			[Address(RVA = "0x32C3D8C", Offset = "0x32C3D8C", VA = "0x32C3D8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000332")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE68584", Offset = "0xE68584")]
		private sealed class <HMDEventsSubscriber>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkSessionManager <>4__this;

			[Token(Token = "0x17000248")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011B4")]
				[Address(RVA = "0x32C35D0", Offset = "0x32C35D0", VA = "0x32C35D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000249")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011B6")]
				[Address(RVA = "0x32C3618", Offset = "0x32C3618", VA = "0x32C3618", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011B1")]
			[Address(RVA = "0x32C33F0", Offset = "0x32C33F0", VA = "0x32C33F0")]
			[DebuggerHidden]
			public <HMDEventsSubscriber>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x60011B2")]
			[Address(RVA = "0x32C341C", Offset = "0x32C341C", VA = "0x32C341C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011B3")]
			[Address(RVA = "0x32C3420", Offset = "0x32C3420", VA = "0x32C3420", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011B5")]
			[Address(RVA = "0x32C35D8", Offset = "0x32C35D8", VA = "0x32C35D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000333")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE68594", Offset = "0xE68594")]
		private sealed class <HeadsetRemovedDisconnectCounter>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkSessionManager <>4__this;

			[Token(Token = "0x1700024A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011BA")]
				[Address(RVA = "0x32C371C", Offset = "0x32C371C", VA = "0x32C371C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011BC")]
				[Address(RVA = "0x32C3764", Offset = "0x32C3764", VA = "0x32C3764", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011B7")]
			[Address(RVA = "0x32C3620", Offset = "0x32C3620", VA = "0x32C3620")]
			[DebuggerHidden]
			public <HeadsetRemovedDisconnectCounter>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x60011B8")]
			[Address(RVA = "0x32C364C", Offset = "0x32C364C", VA = "0x32C364C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011B9")]
			[Address(RVA = "0x32C3650", Offset = "0x32C3650", VA = "0x32C3650", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011BB")]
			[Address(RVA = "0x32C3724", Offset = "0x32C3724", VA = "0x32C3724", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NetworkRunner NetworkRunner;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SocialVRSettings SocialVRSettings;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NetworkPacketProcessor NetworkPacketProcessor;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NetworkLobbyController NetworkLobbyController;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public NetworkErrorTracker NetworkErrorTracker;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PlayerProfileManager PlayerProfileManager;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public NetworkSceneTransitionManager SceneTransitionManager;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private NetworkRunner _networkRunnerPrefab;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private NetworkHandShakeManager HandShakeManager;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SessionState _currentState;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Coroutine _headsetRemovalDisonectCoroutine;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isHeadsetRemoved;

		[Token(Token = "0x1700023D")]
		public SessionState currentState
		{
			[Token(Token = "0x6001168")]
			[Address(RVA = "0x1074990", Offset = "0x1074990", VA = "0x1074990")]
			get
			{
				return default(SessionState);
			}
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x1074998", Offset = "0x1074998", VA = "0x1074998", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x1074B04", Offset = "0x1074B04", VA = "0x1074B04")]
		public bool IsFriendsInALobby()
		{
			return default(bool);
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x1074CC4", Offset = "0x1074CC4", VA = "0x1074CC4")]
		public void MoveToSocialVRSceneAndJoinRoom()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x1074DAC", Offset = "0x1074DAC", VA = "0x1074DAC")]
		private void StartSwapToMPRig()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x1074E34", Offset = "0x1074E34", VA = "0x1074E34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8EE68", Offset = "0xE8EE68")]
		private IEnumerator SwapToMultiplayerRig(Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x1074EAC", Offset = "0x1074EAC", VA = "0x1074EAC")]
		private void SocialVRSceneLoaded()
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x1074FE0", Offset = "0x1074FE0", VA = "0x1074FE0")]
		private void OnRoomConnected(bool success)
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x10751A4", Offset = "0x10751A4", VA = "0x10751A4")]
		private void OnHandShakeComplete(bool success)
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x10752C0", Offset = "0x10752C0", VA = "0x10752C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8EEC8", Offset = "0xE8EEC8")]
		private IEnumerator WaitForRemoteAvatar()
		{
			return null;
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x107531C", Offset = "0x107531C", VA = "0x107531C")]
		public void StartSession(Action<bool> OnSessionStarted)
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x10753DC", Offset = "0x10753DC", VA = "0x10753DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8EF28", Offset = "0xE8EF28")]
		private IEnumerator InitialiseNetworkRunner()
		{
			return null;
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x1073C24", Offset = "0x1073C24", VA = "0x1073C24")]
		public void ShutdownSession([Optional] Action onShutdownComplete)
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x10754F0", Offset = "0x10754F0", VA = "0x10754F0")]
		public void ShutdownWithCustomError(ShutdownReason error, [Optional] Action onShutdownComplete)
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x1075348", Offset = "0x1075348", VA = "0x1075348")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8EF88", Offset = "0xE8EF88")]
		private IEnumerator StartRunnerAndConnectToLobby(Action<bool> onSessionStarted)
		{
			return null;
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x1075454", Offset = "0x1075454", VA = "0x1075454")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8EFE8", Offset = "0xE8EFE8")]
		private IEnumerator ShutdownNetworkRunner(ShutdownReason reason = ShutdownReason.Ok, [Optional] Action onShutdownComplete)
		{
			return null;
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x1075550", Offset = "0x1075550", VA = "0x1075550", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x10757D8", Offset = "0x10757D8", VA = "0x10757D8", Slot = "17")]
		public void OnSessionListUpdated(NetworkRunner runner, List<SessionInfo> sessionInfoList)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x1075870", Offset = "0x1075870", VA = "0x1075870", Slot = "11")]
		public void OnShutdown(NetworkRunner runner, ShutdownReason shutdownReason)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x10758A0", Offset = "0x10758A0", VA = "0x10758A0", Slot = "15")]
		public void OnConnectFailed(NetworkRunner runner, NetAddress remoteAddress, NetConnectFailedReason reason)
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x10758B8", Offset = "0x10758B8", VA = "0x10758B8")]
		public void OnCustomErrorOccured(NetworkError error, int customErrorCode)
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x10758D0", Offset = "0x10758D0", VA = "0x10758D0", Slot = "20")]
		public void OnReliableDataReceived(NetworkRunner runner, PlayerRef player, ArraySegment<byte> data)
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x10758E8", Offset = "0x10758E8", VA = "0x10758E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8F048", Offset = "0xE8F048")]
		private IEnumerator HMDEventsSubscriber()
		{
			return null;
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x1075960", Offset = "0x1075960", VA = "0x1075960")]
		private void OnRemovedHeadSet()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x1075ACC", Offset = "0x1075ACC", VA = "0x1075ACC")]
		private void OnMountHeadSet()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x1075A54", Offset = "0x1075A54", VA = "0x1075A54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8F0A8", Offset = "0xE8F0A8")]
		private IEnumerator HeadsetRemovedDisconnectCounter()
		{
			return null;
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x1075AEC", Offset = "0x1075AEC", VA = "0x1075AEC", Slot = "7")]
		public void OnPlayerJoined(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x1075AF0", Offset = "0x1075AF0", VA = "0x1075AF0", Slot = "8")]
		public void OnPlayerLeft(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x1075AF4", Offset = "0x1075AF4", VA = "0x1075AF4", Slot = "13")]
		public void OnDisconnectedFromServer(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x1075AF8", Offset = "0x1075AF8", VA = "0x1075AF8", Slot = "9")]
		public void OnInput(NetworkRunner runner, NetworkInput input)
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x1075AFC", Offset = "0x1075AFC", VA = "0x1075AFC", Slot = "10")]
		public void OnInputMissing(NetworkRunner runner, PlayerRef player, NetworkInput input)
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x1075B00", Offset = "0x1075B00", VA = "0x1075B00", Slot = "12")]
		public void OnConnectedToServer(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x1075B04", Offset = "0x1075B04", VA = "0x1075B04", Slot = "14")]
		public void OnConnectRequest(NetworkRunner runner, NetworkRunnerCallbackArgs.ConnectRequest request, byte[] token)
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x1075B08", Offset = "0x1075B08", VA = "0x1075B08", Slot = "16")]
		public void OnUserSimulationMessage(NetworkRunner runner, SimulationMessagePtr message)
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x1075B0C", Offset = "0x1075B0C", VA = "0x1075B0C", Slot = "18")]
		public void OnCustomAuthenticationResponse(NetworkRunner runner, Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x1075B10", Offset = "0x1075B10", VA = "0x1075B10", Slot = "19")]
		public void OnHostMigration(NetworkRunner runner, HostMigrationToken hostMigrationToken)
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x1075B14", Offset = "0x1075B14", VA = "0x1075B14", Slot = "21")]
		public void OnSceneLoadDone(NetworkRunner runner)
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x1075B18", Offset = "0x1075B18", VA = "0x1075B18", Slot = "22")]
		public void OnSceneLoadStart(NetworkRunner runner)
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x1075B1C", Offset = "0x1075B1C", VA = "0x1075B1C")]
		public NetworkSessionManager()
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x1075B68", Offset = "0x1075B68", VA = "0x1075B68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8F108", Offset = "0xE8F108")]
		private void <StartSwapToMPRig>b__18_0()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public static class PacketHelper
	{
		[Token(Token = "0x2000335")]
		public enum TypeID
		{
			[Token(Token = "0x4000F4C")]
			Invalid = -1,
			[Token(Token = "0x4000F4D")]
			ClientRequestSpawnAvatar,
			[Token(Token = "0x4000F4E")]
			ClientRequestUpdateAvatar,
			[Token(Token = "0x4000F4F")]
			ClientRequestSpawnEmoji,
			[Token(Token = "0x4000F50")]
			ClientRequestSetProfileID,
			[Token(Token = "0x4000F51")]
			ClientRequestSetBusyState,
			[Token(Token = "0x4000F52")]
			ServerConfirmJoinSuccess,
			[Token(Token = "0x4000F53")]
			ServerConfirmAvatarSpawned,
			[Token(Token = "0x4000F54")]
			ClientRequestJoin,
			[Token(Token = "0x4000F55")]
			ClientRequestMuteMic
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x107C958", Offset = "0x107C958", VA = "0x107C958")]
		public static byte[] CreateDataPacket(TypeID typeID, int playerRef, byte[] data)
		{
			return null;
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x107CAEC", Offset = "0x107CAEC", VA = "0x107CAEC")]
		public static void GetDataFromPacket(ArraySegment<byte> packet, out TypeID typeID, out int playerID, out byte[] data)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x107CB54", Offset = "0x107CB54", VA = "0x107CB54")]
		public static void GetDataFromPacket(byte[] packet, out TypeID typeID, out int playerID, out byte[] data)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x107CC88", Offset = "0x107CC88", VA = "0x107CC88")]
		public static TypeID GetTypeFromData(ArraySegment<byte> data)
		{
			return default(TypeID);
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x107CC58", Offset = "0x107CC58", VA = "0x107CC58")]
		public static TypeID GetTypeFromData(byte[] data)
		{
			return default(TypeID);
		}
	}
	[Token(Token = "0x2000336")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE685A4", Offset = "0xE685A4")]
	public class BaseNetworkRemoteLocalItem : NetworkBehaviour
	{
		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public NetworkRemotePlayer _networkRemotePlayer;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected NetworkTransform _networkTransform;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<BaseNetworkRemoteLocalItem> $IL2CPP_CHANGED;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<BaseNetworkRemoteLocalItem> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<BaseNetworkRemoteLocalItem> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x13C2A54", Offset = "0x13C2A54", VA = "0x13C2A54")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x13C2AD0", Offset = "0x13C2AD0", VA = "0x13C2AD0")]
		public BaseNetworkRemoteLocalItem()
		{
		}
	}
	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "OrderAfterAttribute", RVA = "0xE685B8", Offset = "0xE685B8")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE685B8", Offset = "0xE685B8")]
	public class NetworkForceGrabber : NetworkGrabber
	{
		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkForceGrabber> $IL2CPP_CHANGED;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkForceGrabber> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkForceGrabber> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x1066A90", Offset = "0x1066A90", VA = "0x1066A90", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x1066AD0", Offset = "0x1066AD0", VA = "0x1066AD0")]
		public NetworkForceGrabber()
		{
		}
	}
	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "OrderAfterAttribute", RVA = "0xE686B8", Offset = "0xE686B8")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE686B8", Offset = "0xE686B8")]
	public class NetworkGrabbable : NetworkBehaviour
	{
		[Token(Token = "0x2000339")]
		public enum RenderState
		{
			[Token(Token = "0x4000F87")]
			None,
			[Token(Token = "0x4000F88")]
			Error,
			[Token(Token = "0x4000F89")]
			ForceGrab,
			[Token(Token = "0x4000F8A")]
			PredictedReleased,
			[Token(Token = "0x4000F8B")]
			Grab,
			[Token(Token = "0x4000F8C")]
			Merge,
			[Token(Token = "0x4000F8D")]
			Inverse,
			[Token(Token = "0x4000F8E")]
			Debug
		}

		[Serializable]
		[Token(Token = "0x200033A")]
		public class MergeVeloctyMultiplyerHolider
		{
			[Token(Token = "0x4000F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7F414", Offset = "0xE7F414")]
			public float lowPingVelocityPercentage;

			[Token(Token = "0x4000F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float lowPingMax;

			[Token(Token = "0x4000F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7F42C", Offset = "0xE7F42C")]
			public float mediumPingVelocityPercentage;

			[Token(Token = "0x4000F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float mediumPingMax;

			[Token(Token = "0x4000F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7F444", Offset = "0xE7F444")]
			public float highPingVelocityPercentage;

			[Token(Token = "0x60011DB")]
			[Address(RVA = "0x32C09D4", Offset = "0x32C09D4", VA = "0x32C09D4")]
			public MergeVeloctyMultiplyerHolider()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200033B")]
		public class MergeTimeTickMultiplerHolder
		{
			[Token(Token = "0x4000F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float lowPingMultiplyer;

			[Token(Token = "0x4000F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float lowPingMax;

			[Token(Token = "0x4000F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7F45C", Offset = "0xE7F45C")]
			public float mediumPingMutliplayer;

			[Token(Token = "0x4000F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float mediumPingMax;

			[Token(Token = "0x4000F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7F494", Offset = "0xE7F494")]
			public float highPingMultiplyer;

			[Token(Token = "0x60011DC")]
			[Address(RVA = "0x32C09B8", Offset = "0x32C09B8", VA = "0x32C09B8")]
			public MergeTimeTickMultiplerHolder()
			{
			}
		}

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7F2E8", Offset = "0xE7F2E8")]
		public UnityEvent onDidUngrab;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent<NetworkGrabber> onDidGrab;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7F320", Offset = "0xE7F320")]
		private MergeVeloctyMultiplyerHolider _mergeVeloctyMultiplyer;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE7F36C", Offset = "0xE7F36C")]
		private MergeTimeTickMultiplerHolder mergeTimeTickMultiplier;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _isGrabbed;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private NetworkRigidbody _networkRigidbody;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private NetworkTransform networkTransform;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private PlayerRef _currentPlayer;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private PlayerRef _lastPlayer;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MPHVRGrabbable _localGrabbable;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private NetworkGrabber _currentGrabber;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private NetworkGrabber _lastGrabber;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Transform _rbGrabAnchor;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform _rbOffsetAnchor;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform _grabbableVisual;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Transform _grabberVisual;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform _visualGrabPoint;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RenderState _currentRenderState;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Vector3 _releaseVelocity;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3 _releaseAngularVelocity;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Tick _predictTick;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Tick _mergeTick;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Tick _ticksToMerge;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float _mergeProgress;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Tick _networkGrabTick;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Tick _networkReleaseTick;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Quaternion _predictedReleaseRotation;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private Vector3 _predictedReleasePosition;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3 _offsetPredictPosition;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Dictionary<MeshRenderer, List<Material>> _materialMap;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Material _debugMaterial;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private RenderState _cachedRenderState;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private bool _debugDisablePredictionRender;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
		private bool _debugEnableDebugMaterials;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x166")]
		private bool _debugSetupInit;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7F3B8", Offset = "0xE7F3B8")]
		[SerializeField]
		private float minimumMagnatiudeForGravityEffectToApply;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[SerializeField]
		private float minMagnatiudeForGravityEffectToFullyEnforce;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkGrabbable> $IL2CPP_CHANGED;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkGrabbable> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkGrabbable> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x1700024C")]
		public Quaternion ClientVisualRotation
		{
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0x1066AE0", Offset = "0x1066AE0", VA = "0x1066AE0")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700024D")]
		public Vector3 ClientVisualPosition
		{
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0x1066B70", Offset = "0x1066B70", VA = "0x1066B70")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700024E")]
		public bool IsGrabbed
		{
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0x1066C00", Offset = "0x1066C00", VA = "0x1066C00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024F")]
		public PlayerRef CurrentPlayer
		{
			[Token(Token = "0x60011C9")]
			[Address(RVA = "0x1066C08", Offset = "0x1066C08", VA = "0x1066C08")]
			get
			{
				return default(PlayerRef);
			}
		}

		[Token(Token = "0x17000250")]
		public bool IsLocalPlayerMostRecentGrabber
		{
			[Token(Token = "0x60011CA")]
			[Address(RVA = "0x1066C10", Offset = "0x1066C10", VA = "0x1066C10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x1066CA8", Offset = "0x1066CA8", VA = "0x1066CA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x1066D48", Offset = "0x1066D48", VA = "0x1066D48")]
		public void UnGrab(NetworkGrabber grabber, GrabInfo newGrabInfo)
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x1066FE4", Offset = "0x1066FE4", VA = "0x1066FE4")]
		public void Grab(NetworkGrabber newGrabber, GrabInfo newGrabInfo)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x10672C0", Offset = "0x10672C0", VA = "0x10672C0", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x10675C8", Offset = "0x10675C8", VA = "0x10675C8")]
		private float GetMergeTimeMultiplyer()
		{
			return default(float);
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x10675E4", Offset = "0x10675E4", VA = "0x10675E4")]
		private float GetPedictedVelocityPercentage()
		{
			return default(float);
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x10675EC", Offset = "0x10675EC", VA = "0x10675EC", Slot = "9")]
		public override void Render()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x1067CE8", Offset = "0x1067CE8", VA = "0x1067CE8")]
		private float CaculatePredictedGravityImpact()
		{
			return default(float);
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x1066FD0", Offset = "0x1066FD0", VA = "0x1066FD0")]
		public void FireReleaseCallbacks()
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x1067260", Offset = "0x1067260", VA = "0x1067260")]
		public void FireGrabCallbacks()
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x1067D5C", Offset = "0x1067D5C", VA = "0x1067D5C")]
		public void ToggleItemLocalPredictionRender()
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x1067D6C", Offset = "0x1067D6C", VA = "0x1067D6C")]
		public void ToggleItemDebugMaterials()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x1067DA4", Offset = "0x1067DA4", VA = "0x1067DA4")]
		private void PrepareDebugHighlight()
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x10679F4", Offset = "0x10679F4", VA = "0x10679F4")]
		private void ApplyDebugMaterial()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x1067FC0", Offset = "0x1067FC0", VA = "0x1067FC0")]
		private bool TrySetupDebugMaterial(Material material)
		{
			return default(bool);
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x1068068", Offset = "0x1068068", VA = "0x1068068")]
		public NetworkGrabbable()
		{
		}
	}
	[StructLayout(LayoutKind.Explicit)]
	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "NetworkStructWeavedAttribute", RVA = "0xE6883C", Offset = "0xE6883C")]
	public struct GrabInfo : INetworkStruct
	{
		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NetworkBehaviourId grabbedObjectId;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Quaternion localAnchorRotationOffset;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 localGrabPositionOffset;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 inverseGrabPositionOffset;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion inverseGrabRotationOffset;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 ungrabPosition;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Quaternion ungrabRotation;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 unGrabVelocity;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 unGrabAngularVelocity;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int grabTick;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int ungrabTick;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public NetworkBool inverseGrab;
	}
	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE68850", Offset = "0xE68850")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE68850", Offset = "0xE68850")]
	[AttributeAttribute(Name = "OrderAfterAttribute", RVA = "0xE68850", Offset = "0xE68850")]
	public class NetworkGrabber : NetworkBehaviour
	{
		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xE7F4CC", Offset = "0xE7F4CC")]
		private GrabInfo _GrabInfo;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public NetworkTransform networkTransform;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public NetworkRemoteHand hand;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private NetworkGrabbable grabbedObject;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private GrabInfo _previousGrabInfo;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Transform RBGrabAnchor;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Transform RBOffsetAnchor;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkGrabber> $IL2CPP_CHANGED;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkGrabber> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkGrabber> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000251")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xE9A9CC", Offset = "0xE9A9CC")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xE9A9CC", Offset = "0xE9A9CC")]
		public GrabInfo GrabInfo
		{
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x1068138", Offset = "0x1068138", VA = "0x1068138")]
			get
			{
				return default(GrabInfo);
			}
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0x10681A0", Offset = "0x10681A0", VA = "0x10681A0")]
			set
			{
			}
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x1068210", Offset = "0x1068210", VA = "0x1068210", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x106834C", Offset = "0x106834C", VA = "0x106834C", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x10683E4", Offset = "0x10683E4", VA = "0x10683E4")]
		private void HandleGrabInfoChange(GrabInfo previousGrabInfo, GrabInfo newGrabInfo)
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x1066AD8", Offset = "0x1066AD8", VA = "0x1066AD8")]
		public NetworkGrabber()
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x10685C4", Offset = "0x10685C4", VA = "0x10685C4", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x1068604", Offset = "0x1068604", VA = "0x1068604", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE68978", Offset = "0xE68978")]
	public class NetworkHandPoser : NetworkBehaviour
	{
		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xE7F520", Offset = "0xE7F520")]
		private HandInputs _HandData;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		private HVRPosableHand _hand;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private HVRHandPoseData _currentPoseData;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkHandPoser> $IL2CPP_CHANGED;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkHandPoser> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkHandPoser> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000252")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xE9AA0C", Offset = "0xE9AA0C")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xE9AA0C", Offset = "0xE9AA0C")]
		public HandInputs HandData
		{
			[Token(Token = "0x60011E5")]
			[Address(RVA = "0x1068640", Offset = "0x1068640", VA = "0x1068640")]
			get
			{
				return default(HandInputs);
			}
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0x10686A8", Offset = "0x10686A8", VA = "0x10686A8")]
			set
			{
			}
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x1068718", Offset = "0x1068718", VA = "0x1068718")]
		private void Start()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x1068B14", Offset = "0x1068B14", VA = "0x1068B14")]
		[Preserve]
		private static void OnHandInfoChanged(Changed<NetworkHandPoser> changed)
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x1068BB8", Offset = "0x1068BB8", VA = "0x1068BB8")]
		private void HandleHandDataChange(HandInputs newHandInfo)
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x106871C", Offset = "0x106871C", VA = "0x106871C")]
		private void InitCurrentPose()
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x1068BF4", Offset = "0x1068BF4", VA = "0x1068BF4")]
		private void UpdateFingerPositions(HandInputs handInput)
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x1069484", Offset = "0x1069484", VA = "0x1069484")]
		public NetworkHandPoser()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x106948C", Offset = "0x106948C", VA = "0x106948C", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x10694CC", Offset = "0x10694CC", VA = "0x10694CC", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "OrderAfterAttribute", RVA = "0xE6898C", Offset = "0xE6898C")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE6898C", Offset = "0xE6898C")]
	public class NetworkRemoteCigarette : NetworkBehaviour
	{
		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] FireState;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UnityEvent OnGrabbed;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private UnityEvent OnReleased;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ParticleSystem _ashParticleSystem;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private MT_ObjToObj_Receiver _fireReceiver;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7F5C4", Offset = "0xE7F5C4")]
		[SerializeField]
		private NetworkRemoteSmokingMouth networkSmokingMouth;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private CigaretteMouthGrabPoint _mouthGrabPoint;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xE7F620", Offset = "0xE7F620")]
		private CigaretteData _CigaretteData;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public NetworkTransform networkTransform;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public NetworkRemotePlayer _networkRemotePlayer;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private NetworkGrabber _positionTracking;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Changed<NetworkRemoteCigarette> $IL2CPP_CHANGED;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static ChangedDelegate<NetworkRemoteCigarette> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static NetworkBehaviourCallbacks<NetworkRemoteCigarette> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000253")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xE9AA6C", Offset = "0xE9AA6C")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xE9AA6C", Offset = "0xE9AA6C")]
		public CigaretteData CigaretteData
		{
			[Token(Token = "0x60011EF")]
			[Address(RVA = "0x106DA48", Offset = "0x106DA48", VA = "0x106DA48")]
			get
			{
				return default(CigaretteData);
			}
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x106DAB0", Offset = "0x106DAB0", VA = "0x106DAB0")]
			set
			{
			}
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x106DB20", Offset = "0x106DB20", VA = "0x106DB20")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x106DBA4", Offset = "0x106DBA4", VA = "0x106DBA4")]
		[Preserve]
		private static void OnCigaretteDataChange(Changed<NetworkRemoteCigarette> changed)
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x106DCC4", Offset = "0x106DCC4", VA = "0x106DCC4")]
		private void HandleCigaretteChange(CigaretteData previousInfo, CigaretteData newInfo)
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x106DF30", Offset = "0x106DF30", VA = "0x106DF30", Slot = "9")]
		public override void Render()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x106DE68", Offset = "0x106DE68", VA = "0x106DE68")]
		private void OnLitStateChange(CigaretteLitState newState)
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x106DE64", Offset = "0x106DE64", VA = "0x106DE64")]
		private void OnSqueezeStateChange(SqueezeState newState)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x106E1CC", Offset = "0x106E1CC", VA = "0x106E1CC")]
		public NetworkRemoteCigarette()
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x106E2B4", Offset = "0x106E2B4", VA = "0x106E2B4", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x106E2F4", Offset = "0x106E2F4", VA = "0x106E2F4", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "OrderAfterAttribute", RVA = "0xE68AB8", Offset = "0xE68AB8")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE68AB8", Offset = "0xE68AB8")]
	public class NetworkRemoteGun : BaseNetworkRemoteLocalItem
	{
		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xE7F694", Offset = "0xE7F694")]
		private GunNetworkData _GunData;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private HVRTriggerAnimator _triggerAnimator;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Transform slideTransform;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private MPPlayerGunFire _playerGunFire;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private ParticleSystem _muzzleFlashParticleSystem;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private ParticleSystem _plumeParticleSystem;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GameObject _ammo;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private NetworkGrabber _positionTracking;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkRemoteGun> $IL2CPP_CHANGED;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkRemoteGun> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkRemoteGun> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000254")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xE9AACC", Offset = "0xE9AACC")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xE9AACC", Offset = "0xE9AACC")]
		public GunNetworkData GunData
		{
			[Token(Token = "0x60011FB")]
			[Address(RVA = "0x106E330", Offset = "0x106E330", VA = "0x106E330")]
			get
			{
				return default(GunNetworkData);
			}
			[Token(Token = "0x60011FC")]
			[Address(RVA = "0x106E398", Offset = "0x106E398", VA = "0x106E398")]
			set
			{
			}
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x106E408", Offset = "0x106E408", VA = "0x106E408")]
		private void Start()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x106E470", Offset = "0x106E470", VA = "0x106E470")]
		[Preserve]
		private static void OnGunDataChange(Changed<NetworkRemoteGun> changed)
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x106E688", Offset = "0x106E688", VA = "0x106E688", Slot = "9")]
		public override void Render()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x106E590", Offset = "0x106E590", VA = "0x106E590")]
		private void HandleGunChange(GunNetworkData previousInfo, GunNetworkData newInfo)
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x106E6CC", Offset = "0x106E6CC", VA = "0x106E6CC")]
		private void SetNetworkPosition(GunNetworkData newInfo)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x106E908", Offset = "0x106E908", VA = "0x106E908")]
		private void FireBulletsIfRequired(GunNetworkData previousInfo, GunNetworkData newInfo)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x106E93C", Offset = "0x106E93C", VA = "0x106E93C")]
		public NetworkRemoteGun()
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x106E944", Offset = "0x106E944", VA = "0x106E944", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x106E990", Offset = "0x106E990", VA = "0x106E990", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE68BE4", Offset = "0xE68BE4")]
	[AttributeAttribute(Name = "OrderAfterAttribute", RVA = "0xE68BE4", Offset = "0xE68BE4")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE68BE4", Offset = "0xE68BE4")]
	public class NetworkRemoteHand : NetworkBehaviour
	{
		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public HandType side;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private NetworkRemotePlayer _networkRemotePlayer;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private NetworkTransform _networkTransform;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkRemoteHand> $IL2CPP_CHANGED;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkRemoteHand> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkRemoteHand> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000255")]
		public NetworkTransform NetworkTransform
		{
			[Token(Token = "0x6001206")]
			[Address(RVA = "0x106E9D8", Offset = "0x106E9D8", VA = "0x106E9D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000256")]
		public NetworkLocalHand LocalHardwareHand
		{
			[Token(Token = "0x6001207")]
			[Address(RVA = "0x10682F4", Offset = "0x10682F4", VA = "0x10682F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		public bool IsLocalNetworkRig
		{
			[Token(Token = "0x6001208")]
			[Address(RVA = "0x1066AA8", Offset = "0x1066AA8", VA = "0x1066AA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x106E9FC", Offset = "0x106E9FC", VA = "0x106E9FC")]
		public NetworkRemoteHand()
		{
		}
	}
	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE68CC0", Offset = "0xE68CC0")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE68CC0", Offset = "0xE68CC0")]
	public class NetworkRemoteHeadset : NetworkBehaviour
	{
		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public NetworkTransform _networkTransform;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkRemoteHeadset> $IL2CPP_CHANGED;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkRemoteHeadset> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkRemoteHeadset> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000258")]
		public NetworkTransform NetworkTransform
		{
			[Token(Token = "0x600120A")]
			[Address(RVA = "0x106EA04", Offset = "0x106EA04", VA = "0x106EA04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x106EA0C", Offset = "0x106EA0C", VA = "0x106EA0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x106EA68", Offset = "0x106EA68", VA = "0x106EA68")]
		public NetworkRemoteHeadset()
		{
		}
	}
	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "OrderAfterAttribute", RVA = "0xE68D34", Offset = "0xE68D34")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE68D34", Offset = "0xE68D34")]
	public class NetworkRemoteLigher : NetworkBehaviour
	{
		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UnityEvent OnGrabbed;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private UnityEvent OnReleased;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public NetworkRemotePlayer _networkRemotePlayer;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private NetworkGrabber _positionTracking;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private NetworkTransform _networkTransform;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GrabbedState _grabbedState;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private MT_Squeezable _squeezable;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xE7F798", Offset = "0xE7F798")]
		private LighterData _LigherData;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkRemoteLigher> $IL2CPP_CHANGED;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkRemoteLigher> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkRemoteLigher> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000259")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xE9AB2C", Offset = "0xE9AB2C")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xE9AB2C", Offset = "0xE9AB2C")]
		public LighterData LigherData
		{
			[Token(Token = "0x600120D")]
			[Address(RVA = "0x106EA70", Offset = "0x106EA70", VA = "0x106EA70")]
			get
			{
				return default(LighterData);
			}
			[Token(Token = "0x600120E")]
			[Address(RVA = "0x106EAD8", Offset = "0x106EAD8", VA = "0x106EAD8")]
			set
			{
			}
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x106EB48", Offset = "0x106EB48", VA = "0x106EB48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x106EBFC", Offset = "0x106EBFC", VA = "0x106EBFC")]
		[Preserve]
		private static void OnLighterDataChange(Changed<NetworkRemoteLigher> changed)
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x106ED1C", Offset = "0x106ED1C", VA = "0x106ED1C")]
		private void HandleLighterChange(LighterData previousInfo, LighterData newInfo)
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x106EF04", Offset = "0x106EF04", VA = "0x106EF04", Slot = "9")]
		public override void Render()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x106ED94", Offset = "0x106ED94", VA = "0x106ED94")]
		private void OnGrabStateChange(SqueezeState newState)
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x106EDDC", Offset = "0x106EDDC", VA = "0x106EDDC")]
		private void OnGrabStateChanged(LighterData stateData)
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x106F0A0", Offset = "0x106F0A0", VA = "0x106F0A0")]
		public NetworkRemoteLigher()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x106F0A8", Offset = "0x106F0A8", VA = "0x106F0A8", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x106F0E8", Offset = "0x106F0E8", VA = "0x106F0E8", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x2000344")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE68E60", Offset = "0xE68E60")]
	[AttributeAttribute(Name = "OrderAfterAttribute", RVA = "0xE68E60", Offset = "0xE68E60")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE68E60", Offset = "0xE68E60")]
	public class NetworkRemotePlayer : NetworkBehaviour
	{
		[Token(Token = "0x2000345")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE68F5C", Offset = "0xE68F5C")]
		private sealed class <GetPlayerImage>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkRemotePlayer <>4__this;

			[Token(Token = "0x4001008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x17000263")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600123D")]
				[Address(RVA = "0x32C1384", Offset = "0x32C1384", VA = "0x32C1384", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000264")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600123F")]
				[Address(RVA = "0x32C13CC", Offset = "0x32C13CC", VA = "0x32C13CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600123A")]
			[Address(RVA = "0x32C109C", Offset = "0x32C109C", VA = "0x32C109C")]
			[DebuggerHidden]
			public <GetPlayerImage>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x600123B")]
			[Address(RVA = "0x32C10C8", Offset = "0x32C10C8", VA = "0x32C10C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600123C")]
			[Address(RVA = "0x32C10CC", Offset = "0x32C10CC", VA = "0x32C10CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600123E")]
			[Address(RVA = "0x32C138C", Offset = "0x32C138C", VA = "0x32C138C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public NetworkRemoteHand _leftHand;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public NetworkRemoteHand _rightHand;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public NetworkRemoteHeadset _headset;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public NetworkRemoteTorso _torso;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public NetworkGrabber _leftGrabber;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public NetworkGrabber _rightGrabber;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public NetworkHandPoser _leftHandPoser;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public NetworkHandPoser _rightHandPoser;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public NetworkRemoteLigher _ligher;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7F7EC", Offset = "0xE7F7EC")]
		public NetworkRemoteSmokingMouth smokingMouth;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public NetworkRemoteGun _gun;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public NetworkRemoteCigarette _activeCigerette;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public NetworkTransform _leftHandTarget;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public NetworkTransform _rightHandTarget;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7F824", Offset = "0xE7F824")]
		[SerializeField]
		private List<GameObject> _objectToHideOnLocalPlayer;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private PlayerProfileManager.UserData _userData;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xE7F870", Offset = "0xE7F870")]
		private NetworkString<_16> _userName;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xE7F8C4", Offset = "0xE7F8C4")]
		private ulong _UserID;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xE7F918", Offset = "0xE7F918")]
		private NetworkString<_512> _userTextureURL;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x954")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xE7F958", Offset = "0xE7F958")]
		private NetworkBool _isHost;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x958")]
		public PlayerProfilePlate playerProfilePlateUI;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x960")]
		private NetworkTransform _networkTransform;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x968")]
		[HideInInspector]
		public NetworkLocalPlayer networkLocalPlayer;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x970")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7F9BC", Offset = "0xE7F9BC")]
		[SerializeField]
		private AudioClip _onPlayerJoinedSFX;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x978")]
		[SerializeField]
		private AudioClip _onPlayerLeaveSFX;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x980")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xE7FA18", Offset = "0xE7FA18")]
		private NetworkBool _isBusy;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7FA6C", Offset = "0xE7FA6C")]
		private bool <isLocalPause>k__BackingField;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x988")]
		public Texture userImage;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x990")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xE7FA7C", Offset = "0xE7FA7C")]
		private ushort _Ping;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x994")]
		private int frameCounter;

		[Token(Token = "0x4001001")]
		private const int UPDATE_USER_PING_STRING = 120;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkRemotePlayer> $IL2CPP_CHANGED;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkRemotePlayer> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkRemotePlayer> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x1700025A")]
		public bool IsLocalNetworkRig
		{
			[Token(Token = "0x6001218")]
			[Address(RVA = "0x106E9E0", Offset = "0x106E9E0", VA = "0x106E9E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025B")]
		public PlayerProfileManager.UserData UserData
		{
			[Token(Token = "0x6001219")]
			[Address(RVA = "0x106F124", Offset = "0x106F124", VA = "0x106F124")]
			get
			{
				return default(PlayerProfileManager.UserData);
			}
			[Token(Token = "0x600121A")]
			[Address(RVA = "0x106F138", Offset = "0x106F138", VA = "0x106F138")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xE9AB8C", Offset = "0xE9AB8C")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xE9AB8C", Offset = "0xE9AB8C")]
		public NetworkString<_16> userName
		{
			[Token(Token = "0x600121B")]
			[Address(RVA = "0x106F26C", Offset = "0x106F26C", VA = "0x106F26C")]
			get
			{
				return default(NetworkString<_16>);
			}
			[Token(Token = "0x600121C")]
			[Address(RVA = "0x106F2D4", Offset = "0x106F2D4", VA = "0x106F2D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xE9ABEC", Offset = "0xE9ABEC")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xE9ABEC", Offset = "0xE9ABEC")]
		public ulong UserID
		{
			[Token(Token = "0x600121D")]
			[Address(RVA = "0x106F344", Offset = "0x106F344", VA = "0x106F344")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x600121E")]
			[Address(RVA = "0x106F3A8", Offset = "0x106F3A8", VA = "0x106F3A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xE9AC4C", Offset = "0xE9AC4C")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xE9AC4C", Offset = "0xE9AC4C")]
		private NetworkString<_512> userTextureURL
		{
			[Token(Token = "0x600121F")]
			[Address(RVA = "0x106F40C", Offset = "0x106F40C", VA = "0x106F40C")]
			get
			{
				return default(NetworkString<_512>);
			}
			[Token(Token = "0x6001220")]
			[Address(RVA = "0x106F478", Offset = "0x106F478", VA = "0x106F478")]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xE9ACAC", Offset = "0xE9ACAC")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xE9ACAC", Offset = "0xE9ACAC")]
		public NetworkBool isHost
		{
			[Token(Token = "0x6001221")]
			[Address(RVA = "0x106F4EC", Offset = "0x106F4EC", VA = "0x106F4EC")]
			get
			{
				return default(NetworkBool);
			}
			[Token(Token = "0x6001222")]
			[Address(RVA = "0x106F550", Offset = "0x106F550", VA = "0x106F550")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xE9AD0C", Offset = "0xE9AD0C")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xE9AD0C", Offset = "0xE9AD0C")]
		public NetworkBool isBusy
		{
			[Token(Token = "0x6001223")]
			[Address(RVA = "0x106F5B4", Offset = "0x106F5B4", VA = "0x106F5B4")]
			get
			{
				return default(NetworkBool);
			}
			[Token(Token = "0x6001224")]
			[Address(RVA = "0x106F618", Offset = "0x106F618", VA = "0x106F618")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public bool isLocalPause
		{
			[Token(Token = "0x6001225")]
			[Address(RVA = "0x106F67C", Offset = "0x106F67C", VA = "0x106F67C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8F388", Offset = "0xE8F388")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001226")]
			[Address(RVA = "0x106F684", Offset = "0x106F684", VA = "0x106F684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8F398", Offset = "0xE8F398")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xE9AD6C", Offset = "0xE9AD6C")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xE9AD6C", Offset = "0xE9AD6C")]
		public ushort Ping
		{
			[Token(Token = "0x6001227")]
			[Address(RVA = "0x106F690", Offset = "0x106F690", VA = "0x106F690")]
			get
			{
				return default(ushort);
			}
			[Token(Token = "0x6001228")]
			[Address(RVA = "0x106F6F4", Offset = "0x106F6F4", VA = "0x106F6F4")]
			set
			{
			}
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x106F758", Offset = "0x106F758", VA = "0x106F758")]
		private void Awake()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x106F7F8", Offset = "0x106F7F8", VA = "0x106F7F8", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x106F9F0", Offset = "0x106F9F0", VA = "0x106F9F0")]
		private void Update()
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x106FAB4", Offset = "0x106FAB4", VA = "0x106FAB4", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x106FFE4", Offset = "0x106FFE4", VA = "0x106FFE4", Slot = "9")]
		public override void Render()
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x106F860", Offset = "0x106F860", VA = "0x106F860")]
		private void HideLocalPlayer()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x107036C", Offset = "0x107036C", VA = "0x107036C")]
		[Preserve]
		private static void OnPauseValueChanged(Changed<NetworkRemotePlayer> changed)
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x10703D8", Offset = "0x10703D8", VA = "0x10703D8", Slot = "17")]
		public override void Despawned(NetworkRunner runner, bool hasState)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x1070538", Offset = "0x1070538", VA = "0x1070538")]
		[Preserve]
		private static void OnUserIDChanged(Changed<NetworkRemotePlayer> changed)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x107053C", Offset = "0x107053C", VA = "0x107053C")]
		[Preserve]
		private static void OnUserNameChanged(Changed<NetworkRemotePlayer> changed)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x10706F8", Offset = "0x10706F8", VA = "0x10706F8")]
		[Preserve]
		private static void OnUserImageChanged(Changed<NetworkRemotePlayer> changed)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x106F194", Offset = "0x106F194", VA = "0x106F194")]
		public void OnUserDataChanged(PlayerProfileManager.UserData userData)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x1070754", Offset = "0x1070754", VA = "0x1070754")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8F3E8", Offset = "0xE8F3E8")]
		private IEnumerator GetPlayerImage()
		{
			return null;
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x10707CC", Offset = "0x10707CC", VA = "0x10707CC")]
		[Preserve]
		private static void OnHostValueChange(Changed<NetworkRemotePlayer> changed)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x107089C", Offset = "0x107089C", VA = "0x107089C")]
		public NetworkRemotePlayer()
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x1070920", Offset = "0x1070920", VA = "0x1070920", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x10709A8", Offset = "0x10709A8", VA = "0x10709A8", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class NetworkRemotePlayerInputs : PlayerInputs
	{
		[Token(Token = "0x6001240")]
		[Address(RVA = "0x1070A30", Offset = "0x1070A30", VA = "0x1070A30", Slot = "4")]
		protected override void UpdateInput()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x1070A34", Offset = "0x1070A34", VA = "0x1070A34")]
		public NetworkRemotePlayerInputs()
		{
		}
	}
	[Token(Token = "0x2000347")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE68F6C", Offset = "0xE68F6C")]
	public class NetworkRemoteSmokingMouth : NetworkBehaviour
	{
		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ParticleSystem _exhaleSmoke;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private PlayerMouth _playerMouth;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private MouthCigaretteOverrideTransform _defaultMouthCigarettePosition;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private RemoteAvatarViewConfiguration _remoteAvatarViewConfiguration;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Transform _headParent;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private NetworkTalkingMouthController _mouthController;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE7FB30", Offset = "0xE7FB30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE7FB30", Offset = "0xE7FB30")]
		private float _maxCigRotationFromMouthOpen;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Quaternion _originalCigRotation;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform _overrideTransform;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xE7FB94", Offset = "0xE7FB94")]
		private MouthNetwork _MouthData;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkRemoteSmokingMouth> $IL2CPP_CHANGED;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkRemoteSmokingMouth> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkRemoteSmokingMouth> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000265")]
		public Transform CigaretteTransform
		{
			[Token(Token = "0x6001242")]
			[Address(RVA = "0x106E144", Offset = "0x106E144", VA = "0x106E144")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000266")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xE9ADAC", Offset = "0xE9ADAC")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xE9ADAC", Offset = "0xE9ADAC")]
		public MouthNetwork MouthData
		{
			[Token(Token = "0x6001243")]
			[Address(RVA = "0x1070A3C", Offset = "0x1070A3C", VA = "0x1070A3C")]
			get
			{
				return default(MouthNetwork);
			}
			[Token(Token = "0x6001244")]
			[Address(RVA = "0x106FF80", Offset = "0x106FF80", VA = "0x106FF80")]
			set
			{
			}
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x1070AA0", Offset = "0x1070AA0", VA = "0x1070AA0")]
		[Preserve]
		private static void OnMouthDataChange(Changed<NetworkRemoteSmokingMouth> changed)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x1070C24", Offset = "0x1070C24", VA = "0x1070C24", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x1070E5C", Offset = "0x1070E5C", VA = "0x1070E5C", Slot = "17")]
		public override void Despawned(NetworkRunner runner, bool hasState)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x1070D40", Offset = "0x1070D40", VA = "0x1070D40")]
		private void RefreshMouthPosition()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x1070B48", Offset = "0x1070B48", VA = "0x1070B48")]
		private void HandleMouthChange(MouthNetwork previousInfo, MouthNetwork newInfo)
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x1070F40", Offset = "0x1070F40", VA = "0x1070F40")]
		private void Update()
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x107110C", Offset = "0x107110C", VA = "0x107110C")]
		public NetworkRemoteSmokingMouth()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x107111C", Offset = "0x107111C", VA = "0x107111C", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x1071124", Offset = "0x1071124", VA = "0x1071124", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x2000348")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE68F80", Offset = "0xE68F80")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE68F80", Offset = "0xE68F80")]
	public class NetworkRemoteTorso : NetworkBehaviour
	{
		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public NetworkTransform _networkTransform;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkRemoteTorso> $IL2CPP_CHANGED;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkRemoteTorso> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkRemoteTorso> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000267")]
		public NetworkTransform NetworkTransform
		{
			[Token(Token = "0x600124E")]
			[Address(RVA = "0x1071148", Offset = "0x1071148", VA = "0x1071148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x1071150", Offset = "0x1071150", VA = "0x1071150")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x10711AC", Offset = "0x10711AC", VA = "0x10711AC")]
		public NetworkRemoteTorso()
		{
		}
	}
}
namespace PSH.Networking.Combat
{
	[Token(Token = "0x2000349")]
	public class MPPlayerGunFire : PlayerGunFire
	{
		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE7FBE8", Offset = "0xE7FBE8")]
		public NetworkRunner networkRunner;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private bool _isLocal;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private ZA_CombatSFX _combatSfx;

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x101F86C", Offset = "0x101F86C", VA = "0x101F86C", Slot = "5")]
		protected override void ApplyRigidBodyImpact(RaycastHit chosenHit, Vector3 gunBarrelPos)
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x101F954", Offset = "0x101F954", VA = "0x101F954", Slot = "4")]
		public override void Fire()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x101F9A0", Offset = "0x101F9A0", VA = "0x101F9A0")]
		public MPPlayerGunFire()
		{
		}
	}
}
namespace PSH.Networking.HurricaneVR
{
	[Token(Token = "0x200034A")]
	public class MPHVRForceGrabber : HVRForceGrabber
	{
		[Token(Token = "0x6001254")]
		[Address(RVA = "0x101CDBC", Offset = "0x101CDBC", VA = "0x101CDBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x101CDC0", Offset = "0x101CDC0", VA = "0x101CDC0", Slot = "48")]
		public override bool CanGrab(HVRGrabbable grabbable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x101CEB4", Offset = "0x101CEB4", VA = "0x101CEB4", Slot = "49")]
		public override bool CanHover(HVRGrabbable grabbable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x101CFA8", Offset = "0x101CFA8", VA = "0x101CFA8", Slot = "41")]
		protected override void OnGrabbed(HVRGrabArgs args)
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x101D278", Offset = "0x101D278", VA = "0x101D278")]
		public MPHVRForceGrabber()
		{
		}
	}
	[Token(Token = "0x200034B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE68FF4", Offset = "0xE68FF4")]
	public class MPHVRGrabbable : HVRGrabbable
	{
		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		public bool forceHandToObjectInNetwork;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		[HideInInspector]
		public HVRGrabberBase currentGrabber;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		[HideInInspector]
		public NetworkGrabbable networkGrabbable;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[HideInInspector]
		public NetworkRigidbody networkRigidbody;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[NaughtyAttributes.ReadOnly]
		public Vector3 inverseGrabLocalPosition;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
		[NaughtyAttributes.ReadOnly]
		public Quaternion inverseGrablocalRotation;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
		[NaughtyAttributes.ReadOnly]
		public Vector3 localPositionOffset;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		[NaughtyAttributes.ReadOnly]
		public Quaternion localAnchorRotation;

		[Token(Token = "0x17000268")]
		public Vector3 NetworkRbVelocity
		{
			[Token(Token = "0x6001259")]
			[Address(RVA = "0x101D280", Offset = "0x101D280", VA = "0x101D280")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000269")]
		public Vector3 NetworkRbAngularVelocity
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0x101D2E0", Offset = "0x101D2E0", VA = "0x101D2E0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x101D340", Offset = "0x101D340", VA = "0x101D340", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x101D3DC", Offset = "0x101D3DC", VA = "0x101D3DC", Slot = "18")]
		public override bool AnyGrabberNotMine()
		{
			return default(bool);
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x101D490", Offset = "0x101D490", VA = "0x101D490")]
		public void Grab(MPHVRGrabber newGrabber)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x101D698", Offset = "0x101D698", VA = "0x101D698")]
		public void Ungrab()
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x101D6AC", Offset = "0x101D6AC", VA = "0x101D6AC")]
		public MPHVRGrabbable()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class MPHVRGrabber : HVRHandGrabber
	{
		[Token(Token = "0x200034D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69054", Offset = "0xE69054")]
		private sealed class <SwapGrabPoint>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MPHVRGrabber <>4__this;

			[Token(Token = "0x4001033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HVRPosableGrabPoint grabPoint;

			[Token(Token = "0x4001034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float time;

			[Token(Token = "0x4001035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public HVRAxis axis;

			[Token(Token = "0x1700026B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600126E")]
				[Address(RVA = "0x10354E0", Offset = "0x10354E0", VA = "0x10354E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001270")]
				[Address(RVA = "0x1035528", Offset = "0x1035528", VA = "0x1035528", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600126B")]
			[Address(RVA = "0x10353F0", Offset = "0x10353F0", VA = "0x10353F0")]
			[DebuggerHidden]
			public <SwapGrabPoint>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x600126C")]
			[Address(RVA = "0x103541C", Offset = "0x103541C", VA = "0x103541C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600126D")]
			[Address(RVA = "0x1035420", Offset = "0x1035420", VA = "0x1035420", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600126F")]
			[Address(RVA = "0x10354E8", Offset = "0x10354E8", VA = "0x10354E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		public Action<MPHVRGrabber> OnGrabPointSwapped;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		[SerializeField]
		private GameObject _handModel;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		public MPHVRGrabbable grabbedObject;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		public Vector3 ungrabPosition;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
		public Quaternion ungrabRotation;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42C")]
		public Vector3 ungrabVelocity;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		public Vector3 ungrabAngularVelocity;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
		public Tick grabTick;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		public Tick releaseTick;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		[NaughtyAttributes.ReadOnly]
		public NetworkGrabber networkGrabber;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		private GrabInfo _grabInfo;

		[Token(Token = "0x1700026A")]
		public GrabInfo GrabInfo
		{
			[Token(Token = "0x6001260")]
			[Address(RVA = "0x101D6B4", Offset = "0x101D6B4", VA = "0x101D6B4")]
			get
			{
				return default(GrabInfo);
			}
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x101D80C", Offset = "0x101D80C", VA = "0x101D80C", Slot = "56")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x101D834", Offset = "0x101D834", VA = "0x101D834", Slot = "73")]
		protected override void Grab(HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x101DA3C", Offset = "0x101DA3C", VA = "0x101DA3C", Slot = "50")]
		protected override void OnReleased(HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x101DD98", Offset = "0x101DD98", VA = "0x101DD98", Slot = "27")]
		protected override void FixedUpdate()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x101DDDC", Offset = "0x101DDDC", VA = "0x101DDDC", Slot = "48")]
		public override bool CanGrab(HVRGrabbable grabbable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x101DECC", Offset = "0x101DECC", VA = "0x101DECC", Slot = "28")]
		protected override void CheckRelease()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x101DFB0", Offset = "0x101DFB0", VA = "0x101DFB0", Slot = "79")]
		public override bool TryAutoGrab(HVRGrabbable grabbable, HVRPosableGrabPoint grabPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x101E114", Offset = "0x101E114", VA = "0x101E114", Slot = "80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8F4B8", Offset = "0xE8F4B8")]
		protected override IEnumerator SwapGrabPoint(HVRPosableGrabPoint grabPoint, float time, HVRAxis axis)
		{
			return null;
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x101E1C0", Offset = "0x101E1C0", VA = "0x101E1C0")]
		public MPHVRGrabber()
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x101E224", Offset = "0x101E224", VA = "0x101E224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8F518", Offset = "0xE8F518")]
		[DebuggerHidden]
		private IEnumerator <>n__0(HVRPosableGrabPoint grabPoint, float time, HVRAxis axis)
		{
			return null;
		}
	}
}
namespace PSH.Networking.Audio
{
	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE69064", Offset = "0xE69064")]
	public class MP_AudioCollision : NetworkBehaviour
	{
		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ZA_AudioCollision _zacAudioCollision;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<MP_AudioCollision> $IL2CPP_CHANGED;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<MP_AudioCollision> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<MP_AudioCollision> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x1700026D")]
		public bool IsAvailable
		{
			[Token(Token = "0x6001271")]
			[Address(RVA = "0x102550C", Offset = "0x102550C", VA = "0x102550C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x10255C8", Offset = "0x10255C8", VA = "0x10255C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x1025684", Offset = "0x1025684", VA = "0x1025684")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xE8F5A0", Offset = "0xE8F5A0")]
		public void RPCBasicCollision()
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x102580C", Offset = "0x102580C", VA = "0x102580C")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xE8F5B8", Offset = "0xE8F5B8")]
		public void RPCCollisionWithOtherProp(PropMatParent propMat, float colVol)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x1025A10", Offset = "0x1025A10", VA = "0x1025A10")]
		public MP_AudioCollision()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x1025A18", Offset = "0x1025A18", VA = "0x1025A18")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xE8F5D0", Offset = "0xE8F5D0")]
		[Preserve]
		protected unsafe static void RPCBasicCollision@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x1025AA4", Offset = "0x1025AA4", VA = "0x1025AA4")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xE8F614", Offset = "0xE8F614")]
		[Preserve]
		protected unsafe static void RPCCollisionWithOtherProp@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xE69078", Offset = "0xE69078")]
	public class MP_AudioEvent : NetworkBehaviour
	{
		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ZA_AudioEvent _zaAudioEvent;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<MP_AudioEvent> $IL2CPP_CHANGED;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<MP_AudioEvent> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<MP_AudioEvent> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x1700026E")]
		public bool IsAvailable
		{
			[Token(Token = "0x6001278")]
			[Address(RVA = "0x1025B58", Offset = "0x1025B58", VA = "0x1025B58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x1025C14", Offset = "0x1025C14", VA = "0x1025C14")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xE8F658", Offset = "0xE8F658")]
		public void RPCPlayBank(string eventName)
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x1025DE0", Offset = "0x1025DE0", VA = "0x1025DE0")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xE8F670", Offset = "0xE8F670")]
		public void RPCPlayGenericGrab()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x1025F68", Offset = "0x1025F68", VA = "0x1025F68")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xE8F688", Offset = "0xE8F688")]
		public void RPCPlayGenericRelease()
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x10260F0", Offset = "0x10260F0", VA = "0x10260F0")]
		public MP_AudioEvent()
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x10260F8", Offset = "0x10260F8", VA = "0x10260F8")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xE8F6A0", Offset = "0xE8F6A0")]
		[Preserve]
		protected unsafe static void RPCPlayBank@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x10261AC", Offset = "0x10261AC", VA = "0x10261AC")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xE8F6E4", Offset = "0xE8F6E4")]
		[Preserve]
		protected unsafe static void RPCPlayGenericGrab@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x1026238", Offset = "0x1026238", VA = "0x1026238")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xE8F728", Offset = "0xE8F728")]
		[Preserve]
		protected unsafe static void RPCPlayGenericRelease@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
}
namespace Content.Design.Prefabs.Testing
{
	[Token(Token = "0x2000350")]
	public class testerSphereScript : MonoBehaviour
	{
		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material colorOne;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material colorTwo;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshRenderer mr;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool one;

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x169E0C4", Offset = "0x169E0C4", VA = "0x169E0C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x169E120", Offset = "0x169E120", VA = "0x169E120")]
		public void SwitchMaterials()
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x169E174", Offset = "0x169E174", VA = "0x169E174")]
		public testerSphereScript()
		{
		}
	}
}
namespace Content.Code.Animation
{
	[Token(Token = "0x2000351")]
	public class IKDebugVisualizer : MonoBehaviour
	{
		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool EnableIKDebugVisualizer;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float panelWdith;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[NaughtyAttributes.ReadOnly]
		public MT_LookAtIK lookAtIK;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[NaughtyAttributes.ReadOnly]
		public MT_EyeMicroMovement eyeMicroMovement;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[NaughtyAttributes.ReadOnly]
		public MT_NPCGameplay NPCGameplay;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[NaughtyAttributes.ReadOnly]
		public Canvas c;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[NaughtyAttributes.ReadOnly]
		public Text txt;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[NaughtyAttributes.ReadOnly]
		public static List<IKDebugVisualizer> debugPanels;

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x10DA728", Offset = "0x10DA728", VA = "0x10DA728")]
		private void Start()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x10DA78C", Offset = "0x10DA78C", VA = "0x10DA78C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x10DA818", Offset = "0x10DA818", VA = "0x10DA818")]
		public static void TurnIKDebugPanelsOnOrOff(bool value)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x10DAA8C", Offset = "0x10DAA8C", VA = "0x10DAA8C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x10DAECC", Offset = "0x10DAECC", VA = "0x10DAECC")]
		public void CreateCanvas()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x10DB388", Offset = "0x10DB388", VA = "0x10DB388")]
		public IKDebugVisualizer()
		{
		}
	}
}
namespace MazeTheory
{
	[Token(Token = "0x2000352")]
	public class CloudBuildManifest
	{
		[Token(Token = "0x600128A")]
		[Address(RVA = "0x12094C8", Offset = "0x12094C8", VA = "0x12094C8")]
		public CloudBuildManifest()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public sealed class CullAtDistance : MonoBehaviour
	{
		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer renderer;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float distance;

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xFFCB60", Offset = "0xFFCB60", VA = "0xFFCB60")]
		private void Update()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xFFCBF4", Offset = "0xFFCBF4", VA = "0xFFCBF4")]
		public CullAtDistance()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public sealed class CullOnTriggerEnter : MonoBehaviour
	{
		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer[] renderersToEnable;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer[] renderersToDisable;

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xFFCBFC", Offset = "0xFFCBFC", VA = "0xFFCBFC")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8F76C", Offset = "0xE8F76C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xFFCCD4", Offset = "0xFFCCD4", VA = "0xFFCCD4")]
		public CullOnTriggerEnter()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public sealed class CullOnTriggerExit : MonoBehaviour
	{
		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer[] renderersToEnable;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer[] renderersToDisable;

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xFFCCDC", Offset = "0xFFCCDC", VA = "0xFFCCDC")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8F7E4", Offset = "0xE8F7E4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xFFCDB4", Offset = "0xFFCDB4", VA = "0xFFCDB4")]
		public CullOnTriggerExit()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public static class OcclusionHelper
	{
		[Token(Token = "0x6001291")]
		[Address(RVA = "0x1077FC4", Offset = "0x1077FC4", VA = "0x1077FC4")]
		public static void DisableOcclusionCulling()
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x1077FF4", Offset = "0x1077FF4", VA = "0x1077FF4")]
		public static void EnableOcclusionCulling()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class LogDisable
	{
		[Token(Token = "0x6001293")]
		[Address(RVA = "0x1019CC8", Offset = "0x1019CC8", VA = "0x1019CC8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xE8F85C", Offset = "0xE8F85C")]
		public static void Init()
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x1019DE4", Offset = "0x1019DE4", VA = "0x1019DE4")]
		public LogDisable()
		{
		}
	}
	[Token(Token = "0x2000358")]
	public interface IGameModule
	{
		[Token(Token = "0x6001295")]
		void Initialize();

		[Token(Token = "0x6001296")]
		void Terminate();
	}
	[Token(Token = "0x2000359")]
	public static class MT_ModuleManager
	{
		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7FDB0", Offset = "0xE7FDB0")]
		private static bool <IsInitialized>k__BackingField;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityAction OnModuleManagerInitialized;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7FDC0", Offset = "0xE7FDC0")]
		private static MT_PlayerParameters <PlayerParameters>k__BackingField;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7FDD0", Offset = "0xE7FDD0")]
		private static ZA_AudioManager <AudioManager>k__BackingField;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7FDE0", Offset = "0xE7FDE0")]
		private static MT_NpcJournalMethods <NpcJournalMethods>k__BackingField;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7FDF0", Offset = "0xE7FDF0")]
		private static MT_JournalParameters <JournalParameters>k__BackingField;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7FE00", Offset = "0xE7FE00")]
		private static MT_SubtitleManager <SubtitleManager>k__BackingField;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly MT_CoroutineRunner CoroutineRunner;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly MT_GameplayManager GameplayManager;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly MT_VFXManager VFXManager;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly MT_SceneStreamingManager SceneStreamingManager;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly MT_OptionsManager OptionsManager;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly MT_DebugConsoleManager DebugConsoleManager;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static readonly MT_DialogueHandler DialogueHandler;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static readonly MT_SpawnPointsManager SpawnPointsManager;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static readonly MT_AudioDataHandler AudioDataHandler;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static readonly AnalyticsHandler AnalyticsHandler;

		[Token(Token = "0x1700026F")]
		public static bool IsInitialized
		{
			[Token(Token = "0x6001297")]
			[Address(RVA = "0x10F1C34", Offset = "0x10F1C34", VA = "0x10F1C34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8F86C", Offset = "0xE8F86C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001298")]
			[Address(RVA = "0x10F1C98", Offset = "0x10F1C98", VA = "0x10F1C98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8F87C", Offset = "0xE8F87C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public static MT_PlayerParameters PlayerParameters
		{
			[Token(Token = "0x600129B")]
			[Address(RVA = "0x10F205C", Offset = "0x10F205C", VA = "0x10F205C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8F8AC", Offset = "0xE8F8AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600129A")]
			[Address(RVA = "0x10F1FF0", Offset = "0x10F1FF0", VA = "0x10F1FF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8F89C", Offset = "0xE8F89C")]
			set
			{
			}
		}

		[Token(Token = "0x17000271")]
		public static ZA_AudioManager AudioManager
		{
			[Token(Token = "0x600129D")]
			[Address(RVA = "0x10F212C", Offset = "0x10F212C", VA = "0x10F212C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8F8CC", Offset = "0xE8F8CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600129C")]
			[Address(RVA = "0x10F20C0", Offset = "0x10F20C0", VA = "0x10F20C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8F8BC", Offset = "0xE8F8BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public static MT_NpcJournalMethods NpcJournalMethods
		{
			[Token(Token = "0x600129F")]
			[Address(RVA = "0x10F21FC", Offset = "0x10F21FC", VA = "0x10F21FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8F8EC", Offset = "0xE8F8EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600129E")]
			[Address(RVA = "0x10F2190", Offset = "0x10F2190", VA = "0x10F2190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8F8DC", Offset = "0xE8F8DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public static MT_JournalParameters JournalParameters
		{
			[Token(Token = "0x60012A1")]
			[Address(RVA = "0x10F22CC", Offset = "0x10F22CC", VA = "0x10F22CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8F90C", Offset = "0xE8F90C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012A0")]
			[Address(RVA = "0x10F2260", Offset = "0x10F2260", VA = "0x10F2260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8F8FC", Offset = "0xE8F8FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public static MT_SubtitleManager SubtitleManager
		{
			[Token(Token = "0x60012A3")]
			[Address(RVA = "0x10F239C", Offset = "0x10F239C", VA = "0x10F239C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8F92C", Offset = "0xE8F92C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012A2")]
			[Address(RVA = "0x10F2330", Offset = "0x10F2330", VA = "0x10F2330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8F91C", Offset = "0xE8F91C")]
			set
			{
			}
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x10F1D04", Offset = "0x10F1D04", VA = "0x10F1D04")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xE8F88C", Offset = "0xE8F88C")]
		private static void AppDomainReloadHandler()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x10F1DA0", Offset = "0x10F1DA0", VA = "0x10F1DA0")]
		private static void Initialize()
		{
		}
	}
}
namespace MazeTheory.Vibration
{
	[Token(Token = "0x200035A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6908C", Offset = "0xE6908C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6908C", Offset = "0xE6908C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6908C", Offset = "0xE6908C")]
	public class VibrateBothHandsNode : CallableActionNode<float, float>
	{
		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x135ACDC", Offset = "0x135ACDC", VA = "0x135ACDC", Slot = "12")]
		public override void Invoke(float amplitude, float duration)
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x135AE34", Offset = "0x135AE34", VA = "0x135AE34")]
		public VibrateBothHandsNode()
		{
		}
	}
	[Token(Token = "0x200035B")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE69114", Offset = "0xE69114")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE69114", Offset = "0xE69114")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE69114", Offset = "0xE69114")]
	public class VibrateLeftHandNode : CallableActionNode<float, float>
	{
		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x135AE80", Offset = "0x135AE80", VA = "0x135AE80", Slot = "12")]
		public override void Invoke(float amplitude, float duration)
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x135AF64", Offset = "0x135AF64", VA = "0x135AF64")]
		public VibrateLeftHandNode()
		{
		}
	}
	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6919C", Offset = "0xE6919C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6919C", Offset = "0xE6919C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6919C", Offset = "0xE6919C")]
	public class VibrateRightHandNode : CallableActionNode<float, float>
	{
		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x135AFB0", Offset = "0x135AFB0", VA = "0x135AFB0", Slot = "12")]
		public override void Invoke(float amplitude, float duration)
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x135B094", Offset = "0x135B094", VA = "0x135B094")]
		public VibrateRightHandNode()
		{
		}
	}
	[Token(Token = "0x200035D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE69224", Offset = "0xE69224")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE69224", Offset = "0xE69224")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE69224", Offset = "0xE69224")]
	public class StopVibrateBothHandsNode : CallableActionNode
	{
		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x32E3B78", Offset = "0x32E3B78", VA = "0x32E3B78", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x32E3B80", Offset = "0x32E3B80", VA = "0x32E3B80")]
		public StopVibrateBothHandsNode()
		{
		}
	}
	[Token(Token = "0x200035E")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE692AC", Offset = "0xE692AC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE692AC", Offset = "0xE692AC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE692AC", Offset = "0xE692AC")]
	public class StopVibrateLeftHandNode : CallableActionNode
	{
		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x32E3B88", Offset = "0x32E3B88", VA = "0x32E3B88", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x32E3B90", Offset = "0x32E3B90", VA = "0x32E3B90")]
		public StopVibrateLeftHandNode()
		{
		}
	}
	[Token(Token = "0x200035F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE69334", Offset = "0xE69334")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE69334", Offset = "0xE69334")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE69334", Offset = "0xE69334")]
	public class StopVibrateRightHandNode : CallableActionNode
	{
		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x32E3B98", Offset = "0x32E3B98", VA = "0x32E3B98", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x32E3BA0", Offset = "0x32E3BA0", VA = "0x32E3BA0")]
		public StopVibrateRightHandNode()
		{
		}
	}
}
namespace MazeTheory.Constants
{
	[Token(Token = "0x2000360")]
	public static class Platform
	{
		[Token(Token = "0x4001061")]
		public const string DevelopmentBuild = "DEVELOPMENT_BUILD";

		[Token(Token = "0x4001062")]
		public const string Rift = "RIFT";

		[Token(Token = "0x4001063")]
		public const string Quest = "QUEST";

		[Token(Token = "0x4001064")]
		public const string Oculus = "OCULUS";

		[Token(Token = "0x4001065")]
		public const string Steam = "STEAM";

		[Token(Token = "0x4001066")]
		public const string UnityGameSimulation = "UNITY_GAME_SIMULATION";

		[Token(Token = "0x4001067")]
		public const string Editor = "UNITY_EDITOR";

		[Token(Token = "0x4001068")]
		public const string EditorWindows = "UNITY_EDITOR_WIN";

		[Token(Token = "0x4001069")]
		public const string EditorMac = "UNITY_EDITOR_OSX";

		[Token(Token = "0x400106A")]
		public const string CloudBuild = "UNITY_CLOUD_BUILD";

		[Token(Token = "0x400106B")]
		public const string Android = "UNITY_ANDROID";

		[Token(Token = "0x400106C")]
		public const string Windows = "UNITY_STANDALONE_WIN";
	}
	[Token(Token = "0x2000361")]
	public static class Resources
	{
		[Token(Token = "0x400106D")]
		public const string Popup = "UI/MenuPopup";
	}
	[Token(Token = "0x2000362")]
	public static class LocalisationIds
	{
		[Token(Token = "0x400106E")]
		public const string EmptyId = "MENU_Any_Empty";

		[Token(Token = "0x400106F")]
		public const string NewGame = "MENU_NewGame";

		[Token(Token = "0x4001070")]
		public const string SaveGameSlotNameId = "MENU_SaveGameSlot_Name";

		[Token(Token = "0x4001071")]
		public const string SaveGameSlotActId = "MENU_SaveGameSlot_Act";

		[Token(Token = "0x4001072")]
		public const string SaveGameSlotDateStampId = "MENU_SaveGameSlot_DateStamp";

		[Token(Token = "0x4001073")]
		public const string SaveGameSlotPlaytimeId = "MENU_SaveGameSlot_Playtime";

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Dictionary<MT_LocalisationManager.Language, string> SupportedLanguagesIds;
	}
	[Token(Token = "0x2000363")]
	public static class SceneStreaming
	{
		[Token(Token = "0x2000364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE693BC", Offset = "0xE693BC")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x400107F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string sceneName;

			[Token(Token = "0x60012B5")]
			[Address(RVA = "0x32C83CC", Offset = "0x32C83CC", VA = "0x32C83CC")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60012B6")]
			[Address(RVA = "0x32C83D4", Offset = "0x32C83D4", VA = "0x32C83D4")]
			internal bool <IsSceneOnWhitelist>b__0(string whitelistScene)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001075")]
		public const string FirstSceneName = "Region_FactoryWay_A1S01";

		[Token(Token = "0x4001076")]
		public const string MainMenuSceneName = "MainMenu";

		[Token(Token = "0x4001077")]
		public const string DebugMainMenuSceneName = "Debug_MainMenu";

		[Token(Token = "0x4001078")]
		public const string RegionName = "Region_";

		[Token(Token = "0x4001079")]
		public const string LocationName = "Location_";

		[Token(Token = "0x400107A")]
		public const string GymName = "_Gym";

		[Token(Token = "0x400107B")]
		public const string ParentName = "_Parent";

		[Token(Token = "0x400107C")]
		public const string BlockoutName = "_Blockout";

		[Token(Token = "0x400107D")]
		public const string LightingName = "_Environment";

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] ChunkSceneWhitelist;

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x32D77B8", Offset = "0x32D77B8", VA = "0x32D77B8")]
		public static bool IsSceneOnWhitelist(string sceneName)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000365")]
	public static class Tags
	{
		[Token(Token = "0x4001080")]
		public const string Player = "Player";
	}
	[Token(Token = "0x2000366")]
	public static class Tutorials
	{
		[Token(Token = "0x4001081")]
		public const string TutorialsFolder = "Tutorials/";
	}
	[Token(Token = "0x2000367")]
	public static class NavMeshAreas
	{
		[Token(Token = "0x4001082")]
		public const string Walkable = "Walkable";
	}
	[Token(Token = "0x2000368")]
	public static class Localisation
	{
		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] UISpreadsheetURLs;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string[] UISpreadsheetPaths;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string[] DialogueSpreadsheetURLs;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string[] DialogueSpreadsheetPaths;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string[] PeakyStoriesSpreadsheetURLs;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly string[] PeakyStoriesSpreadsheetPaths;
	}
	[Token(Token = "0x2000369")]
	public static class Achievements
	{
		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string AchievementsSpreadsheetURL;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string AchievementsSpreadsheetPath;
	}
	[Token(Token = "0x200036A")]
	public static class FrameRateConstants
	{
		[Token(Token = "0x400108B")]
		public const float High = 70f;

		[Token(Token = "0x400108C")]
		public const float Medium = 50f;

		[Token(Token = "0x400108D")]
		public const float Low = 30f;

		[Token(Token = "0x400108E")]
		public const float BadFrametime = 13f;

		[Token(Token = "0x400108F")]
		public const float GoodFrametime = 10f;
	}
	[Token(Token = "0x200036B")]
	public static class ProgressionConstants
	{
		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string CurrentLocation;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string CurrentChapter;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string IsGameStarted;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string GameProgress;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string CurrentAct;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string CurrentScene;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string CurrentSubScene;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string PlayerPos;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string PlayerRot;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string Playtime;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string ContinueSpawnPointId;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string ContinueMethodID;
	}
	[Token(Token = "0x200036C")]
	public static class OptionsConstants
	{
		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MovementType;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string RotationType;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string SnapTurnAngle;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string SmoothTurnSpeed;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string MovementSpeed;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string RunSpeed;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string HeightAdjustment;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string HasSubtitles;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string Language;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string Vibration;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string HasVignette;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string VignetteSize;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string AudioVolume;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string AimAssist;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string ThresholdVolume;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string VoiceVolume;
	}
}
namespace MazeTheory.Toolbox
{
	[Token(Token = "0x200036D")]
	public static class CompassUtils
	{
		[Token(Token = "0x200036E")]
		public enum CompassDirection
		{
			[Token(Token = "0x40010B7")]
			North = 0,
			[Token(Token = "0x40010B8")]
			South = 1,
			[Token(Token = "0x40010B9")]
			East = 2,
			[Token(Token = "0x40010BA")]
			West = 3,
			[Token(Token = "0x40010BB")]
			NorthEast = 4,
			[Token(Token = "0x40010BC")]
			NorthWest = 5,
			[Token(Token = "0x40010BD")]
			SouthEast = 6,
			[Token(Token = "0x40010BE")]
			SouthWest = 7,
			[Token(Token = "0x40010BF")]
			Unset = 99
		}

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3 North;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly Vector3 South;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Vector3 East;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly Vector3 West;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly Vector3 NorthEast;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static readonly Vector3 SouthEast;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly Vector3 NorthWest;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public static readonly Vector3 SouthWest;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly Dictionary<CompassDirection, string> DirectionNameDic;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly Vector3[] _compassDirectionsVector3s;

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xFF8050", Offset = "0xFF8050", VA = "0xFF8050")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8F93C", Offset = "0xE8F93C")]
		public static CompassDirection CalculateCompassDir(Vector3 dir)
		{
			return default(CompassDirection);
		}
	}
	[Token(Token = "0x200036F")]
	public static class CoroutineUtils
	{
		[Token(Token = "0x2000370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE693CC", Offset = "0xE693CC")]
		private sealed class <WaitUntil>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<bool> isTrue;

			[Token(Token = "0x17000275")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012C4")]
				[Address(RVA = "0x102F2D0", Offset = "0x102F2D0", VA = "0x102F2D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000276")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012C6")]
				[Address(RVA = "0x102F318", Offset = "0x102F318", VA = "0x102F318", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012C1")]
			[Address(RVA = "0x102F210", Offset = "0x102F210", VA = "0x102F210")]
			[DebuggerHidden]
			public <WaitUntil>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60012C2")]
			[Address(RVA = "0x102F23C", Offset = "0x102F23C", VA = "0x102F23C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012C3")]
			[Address(RVA = "0x102F240", Offset = "0x102F240", VA = "0x102F240", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012C5")]
			[Address(RVA = "0x102F2D8", Offset = "0x102F2D8", VA = "0x102F2D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000371")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE693DC", Offset = "0xE693DC")]
		private sealed class <WaitForSeconds>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float secs;

			[Token(Token = "0x40010C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <start>5__2;

			[Token(Token = "0x17000277")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012CA")]
				[Address(RVA = "0x102F0BC", Offset = "0x102F0BC", VA = "0x102F0BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000278")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012CC")]
				[Address(RVA = "0x102F104", Offset = "0x102F104", VA = "0x102F104", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012C7")]
			[Address(RVA = "0x102F008", Offset = "0x102F008", VA = "0x102F008")]
			[DebuggerHidden]
			public <WaitForSeconds>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60012C8")]
			[Address(RVA = "0x102F034", Offset = "0x102F034", VA = "0x102F034", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012C9")]
			[Address(RVA = "0x102F038", Offset = "0x102F038", VA = "0x102F038", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012CB")]
			[Address(RVA = "0x102F0C4", Offset = "0x102F0C4", VA = "0x102F0C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000372")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE693EC", Offset = "0xE693EC")]
		private sealed class <WaitForSecondsRealtime>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float secs;

			[Token(Token = "0x40010CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <start>5__2;

			[Token(Token = "0x17000279")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012D0")]
				[Address(RVA = "0x102F1C0", Offset = "0x102F1C0", VA = "0x102F1C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012D2")]
				[Address(RVA = "0x102F208", Offset = "0x102F208", VA = "0x102F208", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012CD")]
			[Address(RVA = "0x102F10C", Offset = "0x102F10C", VA = "0x102F10C")]
			[DebuggerHidden]
			public <WaitForSecondsRealtime>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60012CE")]
			[Address(RVA = "0x102F138", Offset = "0x102F138", VA = "0x102F138", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012CF")]
			[Address(RVA = "0x102F13C", Offset = "0x102F13C", VA = "0x102F13C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012D1")]
			[Address(RVA = "0x102F1C8", Offset = "0x102F1C8", VA = "0x102F1C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000373")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE693FC", Offset = "0xE693FC")]
		private sealed class <WaitFor>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<bool> condition;

			[Token(Token = "0x40010CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action action;

			[Token(Token = "0x1700027B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012D6")]
				[Address(RVA = "0x102EFB8", Offset = "0x102EFB8", VA = "0x102EFB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012D8")]
				[Address(RVA = "0x102F000", Offset = "0x102F000", VA = "0x102F000", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012D3")]
			[Address(RVA = "0x102EEE8", Offset = "0x102EEE8", VA = "0x102EEE8")]
			[DebuggerHidden]
			public <WaitFor>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60012D4")]
			[Address(RVA = "0x102EF14", Offset = "0x102EF14", VA = "0x102EF14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012D5")]
			[Address(RVA = "0x102EF18", Offset = "0x102EF18", VA = "0x102EF18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012D7")]
			[Address(RVA = "0x102EFC0", Offset = "0x102EFC0", VA = "0x102EFC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xFFB66C", Offset = "0xFFB66C", VA = "0xFFB66C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8F9B4", Offset = "0xE8F9B4")]
		public static IEnumerator WaitUntil(Func<bool> isTrue)
		{
			return null;
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xFFB6E4", Offset = "0xFFB6E4", VA = "0xFFB6E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8FA14", Offset = "0xE8FA14")]
		public static IEnumerator WaitForSeconds(float secs)
		{
			return null;
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xFFB758", Offset = "0xFFB758", VA = "0xFFB758")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8FA74", Offset = "0xE8FA74")]
		public static IEnumerator WaitForSecondsRealtime(float secs)
		{
			return null;
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xFFB7CC", Offset = "0xFFB7CC", VA = "0xFFB7CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8FAD4", Offset = "0xE8FAD4")]
		public static IEnumerator WaitFor(Func<bool> condition, Action action)
		{
			return null;
		}
	}
	[Token(Token = "0x2000374")]
	public class DestroyAtRuntime : MonoBehaviour
	{
		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject objectToDestroy;

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x1006AB0", Offset = "0x1006AB0", VA = "0x1006AB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x1006B18", Offset = "0x1006B18", VA = "0x1006B18")]
		public DestroyAtRuntime()
		{
		}
	}
	[Token(Token = "0x2000375")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6940C", Offset = "0xE6940C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6940C", Offset = "0xE6940C")]
	public sealed class ParentObjectNode : CallableActionNode<GameObject, Transform>
	{
		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x107CDE0", Offset = "0x107CDE0", VA = "0x107CDE0", Slot = "12")]
		public override void Invoke(GameObject go, Transform parent)
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x107CE70", Offset = "0x107CE70", VA = "0x107CE70")]
		public ParentObjectNode()
		{
		}
	}
	[Token(Token = "0x2000376")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE69470", Offset = "0xE69470")]
	public class MT_DebugControllerButtons : MonoBehaviour
	{
		[Token(Token = "0x2000377")]
		private enum Buttons
		{
			[Token(Token = "0x40010D7")]
			A,
			[Token(Token = "0x40010D8")]
			B,
			[Token(Token = "0x40010D9")]
			X,
			[Token(Token = "0x40010DA")]
			Y,
			[Token(Token = "0x40010DB")]
			LeftGrip,
			[Token(Token = "0x40010DC")]
			LeftTrigger,
			[Token(Token = "0x40010DD")]
			LeftStickButton,
			[Token(Token = "0x40010DE")]
			RightGrip,
			[Token(Token = "0x40010DF")]
			RightTrigger,
			[Token(Token = "0x40010E0")]
			RightStickButton,
			[Token(Token = "0x40010E1")]
			MenuButton
		}

		[Serializable]
		[Token(Token = "0x2000378")]
		private struct ButtonPress
		{
			[Token(Token = "0x40010E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Buttons button;

			[Token(Token = "0x40010E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public UnityEvent onPressed;
		}

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ButtonPress[] buttonPresses;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<Buttons, bool> _isPressed;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Buttons, bool> _wasPressed;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UnityEngine.XR.InputDevice> _leftHandDevices;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<UnityEngine.XR.InputDevice> _rightHandDevices;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isInitialized;

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x1130354", Offset = "0x1130354", VA = "0x1130354")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x1130358", Offset = "0x1130358", VA = "0x1130358")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x113035C", Offset = "0x113035C", VA = "0x113035C")]
		private void OnNodeChanged(XRNodeState nodeState)
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x1130360", Offset = "0x1130360", VA = "0x1130360")]
		private void CheckControllers()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x11304AC", Offset = "0x11304AC", VA = "0x11304AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x11304B0", Offset = "0x11304B0", VA = "0x11304B0")]
		private void GetButtonStatus()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x11307C8", Offset = "0x11307C8", VA = "0x11307C8")]
		private bool IsButtonPressed(Buttons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x1130A7C", Offset = "0x1130A7C", VA = "0x1130A7C")]
		[PublicAPI]
		public void TriggerEvent(int index)
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x1130B8C", Offset = "0x1130B8C", VA = "0x1130B8C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x1130B90", Offset = "0x1130B90", VA = "0x1130B90")]
		public MT_DebugControllerButtons()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public static class MoveHelper
	{
		[Token(Token = "0x200037A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE694A8", Offset = "0xE694A8")]
		private sealed class <MoveToTargetOverSecondsCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform transform;

			[Token(Token = "0x40010E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float timeToMove;

			[Token(Token = "0x40010E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 targetPos;

			[Token(Token = "0x40010EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action onReachedTarget;

			[Token(Token = "0x40010EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 <currentPos>5__2;

			[Token(Token = "0x40010EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <t>5__3;

			[Token(Token = "0x1700027E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012F0")]
				[Address(RVA = "0x32BBE88", Offset = "0x32BBE88", VA = "0x32BBE88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012F2")]
				[Address(RVA = "0x32BBED0", Offset = "0x32BBED0", VA = "0x32BBED0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012ED")]
			[Address(RVA = "0x32BBD3C", Offset = "0x32BBD3C", VA = "0x32BBD3C")]
			[DebuggerHidden]
			public <MoveToTargetOverSecondsCoroutine>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60012EE")]
			[Address(RVA = "0x32BBD68", Offset = "0x32BBD68", VA = "0x32BBD68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012EF")]
			[Address(RVA = "0x32BBD6C", Offset = "0x32BBD6C", VA = "0x32BBD6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012F1")]
			[Address(RVA = "0x32BBE90", Offset = "0x32BBE90", VA = "0x32BBE90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200037B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE694B8", Offset = "0xE694B8")]
		private sealed class <MoveToTargetOverSecondsWithCurveCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform transform;

			[Token(Token = "0x40010F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float timeToMove;

			[Token(Token = "0x40010F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnimationCurve curve;

			[Token(Token = "0x40010F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 targetPos;

			[Token(Token = "0x40010F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action onReachedTarget;

			[Token(Token = "0x40010F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Vector3 <currentPos>5__2;

			[Token(Token = "0x40010F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private float <t>5__3;

			[Token(Token = "0x17000280")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012F6")]
				[Address(RVA = "0x32BC02C", Offset = "0x32BC02C", VA = "0x32BC02C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000281")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012F8")]
				[Address(RVA = "0x32BC074", Offset = "0x32BC074", VA = "0x32BC074", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012F3")]
			[Address(RVA = "0x32BBED8", Offset = "0x32BBED8", VA = "0x32BBED8")]
			[DebuggerHidden]
			public <MoveToTargetOverSecondsWithCurveCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60012F4")]
			[Address(RVA = "0x32BBF04", Offset = "0x32BBF04", VA = "0x32BBF04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012F5")]
			[Address(RVA = "0x32BBF08", Offset = "0x32BBF08", VA = "0x32BBF08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012F7")]
			[Address(RVA = "0x32BC034", Offset = "0x32BC034", VA = "0x32BC034", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MT_CoroutineRunner _internalCoroutineRunner;

		[Token(Token = "0x1700027D")]
		private static MT_CoroutineRunner CoroutineRunner
		{
			[Token(Token = "0x60012E7")]
			[Address(RVA = "0x1142EF4", Offset = "0x1142EF4", VA = "0x1142EF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x1142F58", Offset = "0x1142F58", VA = "0x1142F58")]
		public static void MoveToTargetOverSeconds(Transform transform, Vector3 targetPos, float timeToMove, [Optional] Action onReachedTarget)
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x1143024", Offset = "0x1143024", VA = "0x1143024")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8FC84", Offset = "0xE8FC84")]
		private static IEnumerator MoveToTargetOverSecondsCoroutine(Transform transform, Vector3 targetPos, float timeToMove, Action onReachedTarget)
		{
			return null;
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x11430E0", Offset = "0x11430E0", VA = "0x11430E0")]
		public static void MoveToTargetOverSecondsWithCurve(Transform transform, Vector3 targetPos, float timeToMove, AnimationCurve curve, [Optional] Action onReachedTarget)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x11431B4", Offset = "0x11431B4", VA = "0x11431B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8FCE4", Offset = "0xE8FCE4")]
		private static IEnumerator MoveToTargetOverSecondsWithCurveCoroutine(Transform transform, Vector3 targetPos, float timeToMove, AnimationCurve curve, Action onReachedTarget)
		{
			return null;
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x1143288", Offset = "0x1143288", VA = "0x1143288")]
		public static void StopCoroutine()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class OnUpdateLoop : MonoBehaviour
	{
		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<float> OnUpdate;

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x107B40C", Offset = "0x107B40C", VA = "0x107B40C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x107B474", Offset = "0x107B474", VA = "0x107B474")]
		public OnUpdateLoop()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class ReadOnlyAttribute : UnityEngine.PropertyAttribute
	{
		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x109182C", Offset = "0x109182C", VA = "0x109182C")]
		public ReadOnlyAttribute()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public static class RuntimeAssert
	{
		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x32CC928", Offset = "0x32CC928", VA = "0x32CC928")]
		public static void Assert(Func<bool> isTrue, string message)
		{
		}
	}
	[Token(Token = "0x200037F")]
	public class ShowOnlyAttribute : UnityEngine.PropertyAttribute
	{
		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x32DCF3C", Offset = "0x32DCF3C", VA = "0x32DCF3C")]
		public ShowOnlyAttribute()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public abstract class Singleton<T> : MonoBehaviour where T : Component
	{
		[Serializable]
		[Token(Token = "0x2000381")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE694C8", Offset = "0xE694C8")]
		private sealed class <>c
		{
			[Token(Token = "0x40010F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<T> <>9__3_0;

			[Token(Token = "0x6001304")]
			public <>c()
			{
			}

			[Token(Token = "0x6001305")]
			internal void <CreateInstance>b__3_0(T x)
			{
			}
		}

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _internalInstance;

		[Token(Token = "0x17000282")]
		public static T Instance
		{
			[Token(Token = "0x60012FE")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012FF")]
		private static void CreateInstance()
		{
		}

		[Token(Token = "0x6001300")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001301")]
		protected Singleton()
		{
		}
	}
}
namespace MazeTheory.TechArt
{
	[Token(Token = "0x2000382")]
	public sealed class MT_Volume : Volume
	{
		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Texture2D lutTexture;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D _neutralLUT;

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x113F70C", Offset = "0x113F70C", VA = "0x113F70C")]
		public void GenerateLUT()
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x113F82C", Offset = "0x113F82C", VA = "0x113F82C")]
		public MT_Volume()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public sealed class ShaderWarmup : MonoBehaviour
	{
		[Token(Token = "0x2000384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE694D8", Offset = "0xE694D8")]
		private sealed class <WarmupCo>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderWarmup <>4__this;

			[Token(Token = "0x4001102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <count>5__2;

			[Token(Token = "0x4001103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__3;

			[Token(Token = "0x17000283")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600130E")]
				[Address(RVA = "0x32C86E4", Offset = "0x32C86E4", VA = "0x32C86E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000284")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001310")]
				[Address(RVA = "0x32C872C", Offset = "0x32C872C", VA = "0x32C872C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600130B")]
			[Address(RVA = "0x32C8548", Offset = "0x32C8548", VA = "0x32C8548")]
			[DebuggerHidden]
			public <WarmupCo>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600130C")]
			[Address(RVA = "0x32C8574", Offset = "0x32C8574", VA = "0x32C8574", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600130D")]
			[Address(RVA = "0x32C8578", Offset = "0x32C8578", VA = "0x32C8578", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600130F")]
			[Address(RVA = "0x32C86EC", Offset = "0x32C86EC", VA = "0x32C86EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ShaderVariantCollection[] shaderVariantCollections;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image image;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _progress;

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x32DBFB8", Offset = "0x32DBFB8", VA = "0x32DBFB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8FDE4", Offset = "0xE8FDE4")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8FDE4", Offset = "0xE8FDE4")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE8FDE4", Offset = "0xE8FDE4")]
		public IEnumerator WarmupCo()
		{
			return null;
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x32DC028", Offset = "0x32DC028", VA = "0x32DC028")]
		private void Update()
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x32DC04C", Offset = "0x32DC04C", VA = "0x32DC04C")]
		public ShaderWarmup()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class Screenshot
	{
		[Token(Token = "0x6001311")]
		[Address(RVA = "0x32D7954", Offset = "0x32D7954", VA = "0x32D7954")]
		public static void TakeTransparentScreenshot(Camera cam, int width, int height, string savePath)
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x32D7BA8", Offset = "0x32D7BA8", VA = "0x32D7BA8")]
		public Screenshot()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public sealed class SpriteAnimCreator : MonoBehaviour
	{
		[Token(Token = "0x2000387")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE694E8", Offset = "0xE694E8")]
		private sealed class <DoLogicCo>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400110C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400110D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400110E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpriteAnimCreator <>4__this;

			[Token(Token = "0x17000285")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001319")]
				[Address(RVA = "0x21652F0", Offset = "0x21652F0", VA = "0x21652F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000286")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600131B")]
				[Address(RVA = "0x2165338", Offset = "0x2165338", VA = "0x2165338", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001316")]
			[Address(RVA = "0x2165080", Offset = "0x2165080", VA = "0x2165080")]
			[DebuggerHidden]
			public <DoLogicCo>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001317")]
			[Address(RVA = "0x21650AC", Offset = "0x21650AC", VA = "0x21650AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001318")]
			[Address(RVA = "0x21650B0", Offset = "0x21650B0", VA = "0x21650B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600131A")]
			[Address(RVA = "0x21652F8", Offset = "0x21652F8", VA = "0x21652F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Camera cam;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string spriteName;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string animName;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int framesToCapture;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float secsToCapture;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _captureTime;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _folderName;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _numOfFramesRendered;

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x32E2468", Offset = "0x32E2468", VA = "0x32E2468")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x32E26B0", Offset = "0x32E26B0", VA = "0x32E26B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE8FF0C", Offset = "0xE8FF0C")]
		private IEnumerator DoLogicCo()
		{
			return null;
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x32E2728", Offset = "0x32E2728", VA = "0x32E2728")]
		public SpriteAnimCreator()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public class TMPRO_DontRenderAlphaZero : MonoBehaviour
	{
		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer _renderer;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro _tmPro;

		[Token(Token = "0x4001111")]
		private const float MinVal = 0.02f;

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x32E4824", Offset = "0x32E4824", VA = "0x32E4824")]
		private void Awake()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x32E48B0", Offset = "0x32E48B0", VA = "0x32E48B0")]
		private void Update()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x32E4900", Offset = "0x32E4900", VA = "0x32E4900")]
		public TMPRO_DontRenderAlphaZero()
		{
		}
	}
	[Token(Token = "0x2000389")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE694F8", Offset = "0xE694F8")]
	public class TA_BottleLiquidWobble : MT_LiquidShader
	{
		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[MazeTheory.Toolbox.ReadOnly]
		private float fillLevel;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float avMin;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float avMax;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float lvMin;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lvMax;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[MazeTheory.Toolbox.ReadOnly]
		private float av;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[MazeTheory.Toolbox.ReadOnly]
		private float lv;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion _rot;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion _rotLast;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _pos;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _posLast;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[MazeTheory.Toolbox.ReadOnly]
		private float wobbleCoeff;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _lastWobbleCoeff;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float wobbleDiminishRate;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int DynFillLevel;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int DynWobbleCoeff;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool noMeshRenderer;

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x32E3BA8", Offset = "0x32E3BA8", VA = "0x32E3BA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x32E3C50", Offset = "0x32E3C50", VA = "0x32E3C50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x32E3CAC", Offset = "0x32E3CAC", VA = "0x32E3CAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x32E3E7C", Offset = "0x32E3E7C", VA = "0x32E3E7C")]
		private float derivedVelocity()
		{
			return default(float);
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x32E405C", Offset = "0x32E405C", VA = "0x32E405C", Slot = "4")]
		public override void SetFillLevel(float fillAmount)
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x32E41E4", Offset = "0x32E41E4", VA = "0x32E41E4")]
		[PublicAPI]
		public void SetMaterial()
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x32E4318", Offset = "0x32E4318", VA = "0x32E4318")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE8FFCC", Offset = "0xE8FFCC")]
		public void IncFill()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x32E4334", Offset = "0x32E4334", VA = "0x32E4334")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE8FFE4", Offset = "0xE8FFE4")]
		public void DecFill()
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x32E4350", Offset = "0x32E4350", VA = "0x32E4350", Slot = "5")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x32E44EC", Offset = "0x32E44EC", VA = "0x32E44EC")]
		public TA_BottleLiquidWobble()
		{
		}
	}
}
namespace MazeTheory.SavingAndProgression
{
	[Token(Token = "0x200038A")]
	public static class ChapterList
	{
		[Token(Token = "0x4001124")]
		private const string Location_SH_GarrisonLane = "Location_SH_GarrisonLane";

		[Token(Token = "0x4001125")]
		private const string Location_SH_GarrisonPub = "Location_SH_GarrisonPub";

		[Token(Token = "0x4001126")]
		private const string Location_SH_WateryLane = "Location_SH_WateryLane";

		[Token(Token = "0x4001127")]
		private const string Location_SH_BettingShop = "Location_SH_BettingShop";

		[Token(Token = "0x4001128")]
		private const string Location_SH_CharliesYard = "Location_SH_CharliesYard";

		[Token(Token = "0x4001129")]
		private const string Location_LH_Barge = "Location_LH_Barge";

		[Token(Token = "0x400112A")]
		private const string Location_LH_DockYard = "Location_LH_DockYard";

		[Token(Token = "0x400112B")]
		private const string Location_LH_PennyfieldsStreets = "Location_LH_PennyfieldsStreets";

		[Token(Token = "0x400112C")]
		private const string Location_LH_PeakyHideout = "Location_LH_PeakyHideout";

		[Token(Token = "0x400112D")]
		private const string Location_LH_OpiumDen = "Location_LH_OpiumDen";

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly ChapterInfo[] Chapters;

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x12066CC", Offset = "0x12066CC", VA = "0x12066CC")]
		public static string GetChapterNameId(string location, int act, int scene, int subscene)
		{
			return null;
		}
	}
	[Token(Token = "0x200038B")]
	public class ChapterInfo
	{
		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string LocationSceneName;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int Act;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly int Scene;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int Subscene;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string LocationLocalisationId;

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x1206660", Offset = "0x1206660", VA = "0x1206660")]
		public ChapterInfo(string locationSceneName, int act, int scene, int subscene, string locationLocalisationId)
		{
		}
	}
}
namespace MazeTheory.SaveLoad
{
	[Token(Token = "0x200038C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE69558", Offset = "0xE69558")]
	public class DebugSaveData : ScriptableObject
	{
		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> Flags;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<string, int> IntDic;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, float> FloatDic;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, string> StringDic;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<string, Vector3> Vector3Dic;

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xFFE160", Offset = "0xFFE160", VA = "0xFFE160")]
		public DebugSaveData()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public static class DebugSaveDataUtils
	{
		[Token(Token = "0x600132E")]
		[Address(RVA = "0xFFE314", Offset = "0xFFE314", VA = "0xFFE314")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE8FFFC", Offset = "0xE8FFFC")]
		public static void LoadDebugSaveData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038E")]
	public sealed class GenericSaveData
	{
		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xE7FF90", Offset = "0xE7FF90")]
		public HashSet<string> Flags;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xE7FFA0", Offset = "0xE7FFA0")]
		public Dictionary<string, int> IntDic;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xE7FFB0", Offset = "0xE7FFB0")]
		public Dictionary<string, float> FloatDic;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xE7FFC0", Offset = "0xE7FFC0")]
		public Dictionary<string, string> StringDic;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xE7FFD0", Offset = "0xE7FFD0")]
		public Dictionary<string, Vector3> Vector3Dic;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xE7FFE0", Offset = "0xE7FFE0")]
		public Dictionary<string, Transform> TransformDic;

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x10D178C", Offset = "0x10D178C", VA = "0x10D178C")]
		public GenericSaveData()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public static class SaveUtils
	{
		[Token(Token = "0x6001330")]
		[Address(RVA = "0x32CFBA4", Offset = "0x32CFBA4", VA = "0x32CFBA4")]
		public static GenericSaveData DeepClone(GenericSaveData data)
		{
			return null;
		}
	}
	[Token(Token = "0x2000390")]
	public interface ISavePlatform
	{
		[Token(Token = "0x6001331")]
		bool IsInitialized();

		[Token(Token = "0x6001332")]
		void Initialize(Action onComplete, Action error);

		[Token(Token = "0x6001333")]
		void GetFilenames(Action<List<string>> onComplete, Action error);

		[Token(Token = "0x6001334")]
		void SaveGameFile(string optionsData, List<string> progressData, List<string> collectablesData, List<string> slotInfoData, Action onComplete, Action error);

		[Token(Token = "0x6001335")]
		void LoadGameFile(Action<string, List<string>, List<string>, List<string>> onComplete, Action error);
	}
	[Token(Token = "0x2000391")]
	public class MT_SaveDefaultPlatform : ISavePlatform
	{
		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MT_SaveFileSystem _saveFileSystem;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _initialized;

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x12A5E40", Offset = "0x12A5E40", VA = "0x12A5E40", Slot = "4")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x12A5E48", Offset = "0x12A5E48", VA = "0x12A5E48", Slot = "5")]
		public void Initialize(Action onComplete, Action error)
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x12A5F28", Offset = "0x12A5F28", VA = "0x12A5F28", Slot = "6")]
		public void GetFilenames(Action<List<string>> onComplete, Action error)
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x12A6124", Offset = "0x12A6124", VA = "0x12A6124", Slot = "7")]
		public void SaveGameFile(string optionsData, List<string> progressData, List<string> collectablesData, List<string> slotInfoData, Action onComplete, Action error)
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x12A6528", Offset = "0x12A6528", VA = "0x12A6528", Slot = "8")]
		public void LoadGameFile(Action<string, List<string>, List<string>, List<string>> onComplete, Action error)
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x12A6C88", Offset = "0x12A6C88", VA = "0x12A6C88")]
		public MT_SaveDefaultPlatform()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class MT_SaveFileSystem
	{
		[Token(Token = "0x4001141")]
		private const string FileExtension = ".json";

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string _filePath;

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x12A6C90", Offset = "0x12A6C90", VA = "0x12A6C90")]
		private string FilePathWithExt(string filename)
		{
			return null;
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x12A5EF4", Offset = "0x12A5EF4", VA = "0x12A5EF4")]
		public MT_SaveFileSystem(string filePath)
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x12A5F40", Offset = "0x12A5F40", VA = "0x12A5F40")]
		public void GetFilenames(Action<List<string>> onComplete, Action error)
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x12A613C", Offset = "0x12A613C", VA = "0x12A613C")]
		public void SaveGame(string optionsData, List<string> progressData, List<string> collectablesData, List<string> slotInfoData, Action onComplete, Action error)
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x12A6540", Offset = "0x12A6540", VA = "0x12A6540")]
		public void LoadGame(Action<string, List<string>, List<string>, List<string>> onComplete, Action error)
		{
		}
	}
	[Token(Token = "0x2000393")]
	public sealed class ProgressFlagComponent : MonoBehaviour
	{
		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string flag;

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x108C6E8", Offset = "0x108C6E8", VA = "0x108C6E8")]
		public void Add()
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x108C754", Offset = "0x108C754", VA = "0x108C754")]
		public void Remove()
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x108C954", Offset = "0x108C954", VA = "0x108C954")]
		public ProgressFlagComponent()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public static class ProgressionHandler
	{
		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GenericSaveData _progressData;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static GenericSaveData _collectablesData;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static bool Resuming;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static bool IsProgressionDataLoaded;

		[Token(Token = "0x1400000D")]
		public static event Action<string> OnFlagAdded
		{
			[Token(Token = "0x6001346")]
			[Address(RVA = "0x108CC48", Offset = "0x108CC48", VA = "0x108CC48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90034", Offset = "0xE90034")]
			add
			{
			}
			[Token(Token = "0x6001347")]
			[Address(RVA = "0x108CD40", Offset = "0x108CD40", VA = "0x108CD40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90044", Offset = "0xE90044")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000E")]
		public static event Action<string> OnFlagRemoved
		{
			[Token(Token = "0x6001348")]
			[Address(RVA = "0x108CE38", Offset = "0x108CE38", VA = "0x108CE38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90054", Offset = "0xE90054")]
			add
			{
			}
			[Token(Token = "0x6001349")]
			[Address(RVA = "0x108CF30", Offset = "0x108CF30", VA = "0x108CF30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90064", Offset = "0xE90064")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000F")]
		public static event Action<string, int> OnIntSet
		{
			[Token(Token = "0x600134A")]
			[Address(RVA = "0x108D028", Offset = "0x108D028", VA = "0x108D028")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90074", Offset = "0xE90074")]
			add
			{
			}
			[Token(Token = "0x600134B")]
			[Address(RVA = "0x108D120", Offset = "0x108D120", VA = "0x108D120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90084", Offset = "0xE90084")]
			remove
			{
			}
		}

		[Token(Token = "0x14000010")]
		public static event Action<string, float> OnFloatSet
		{
			[Token(Token = "0x600134C")]
			[Address(RVA = "0x108D218", Offset = "0x108D218", VA = "0x108D218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90094", Offset = "0xE90094")]
			add
			{
			}
			[Token(Token = "0x600134D")]
			[Address(RVA = "0x108D310", Offset = "0x108D310", VA = "0x108D310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE900A4", Offset = "0xE900A4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public static event Action<string, string> OnStringSet
		{
			[Token(Token = "0x600134E")]
			[Address(RVA = "0x108D408", Offset = "0x108D408", VA = "0x108D408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE900B4", Offset = "0xE900B4")]
			add
			{
			}
			[Token(Token = "0x600134F")]
			[Address(RVA = "0x108D500", Offset = "0x108D500", VA = "0x108D500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE900C4", Offset = "0xE900C4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public static event Action<string, Vector3> OnVec3Set
		{
			[Token(Token = "0x6001350")]
			[Address(RVA = "0x108D5F8", Offset = "0x108D5F8", VA = "0x108D5F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE900D4", Offset = "0xE900D4")]
			add
			{
			}
			[Token(Token = "0x6001351")]
			[Address(RVA = "0x108D6F0", Offset = "0x108D6F0", VA = "0x108D6F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE900E4", Offset = "0xE900E4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public static event Action<string, Transform> OnTransformSet
		{
			[Token(Token = "0x6001352")]
			[Address(RVA = "0x108D7E8", Offset = "0x108D7E8", VA = "0x108D7E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE900F4", Offset = "0xE900F4")]
			add
			{
			}
			[Token(Token = "0x6001353")]
			[Address(RVA = "0x108D8E0", Offset = "0x108D8E0", VA = "0x108D8E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90104", Offset = "0xE90104")]
			remove
			{
			}
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x108CB78", Offset = "0x108CB78", VA = "0x108CB78")]
		public static GenericSaveData GetCurrentProgressCopy()
		{
			return null;
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x108CBE0", Offset = "0x108CBE0", VA = "0x108CBE0")]
		public static GenericSaveData GetCurrentCollectablesCopy()
		{
			return null;
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x108D9D8", Offset = "0x108D9D8", VA = "0x108D9D8")]
		public static void SetProgress(GenericSaveData data, bool deepCopy)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x108DA94", Offset = "0x108DA94", VA = "0x108DA94")]
		public static void SetCollectablesProgress(GenericSaveData data, bool deepCopy)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x108DB50", Offset = "0x108DB50", VA = "0x108DB50")]
		public static void Clear(bool justCollectables)
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x108DC40", Offset = "0x108DC40", VA = "0x108DC40")]
		public static void Load(SaveSlotData slot)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x108DD2C", Offset = "0x108DD2C", VA = "0x108DD2C")]
		public static void Load(SaveSlotData slot, HashSet<string> progressionFlagsToInclude)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x107DEE4", Offset = "0x107DEE4", VA = "0x107DEE4")]
		public static void AddFlag(string flagName, bool autoSave = false, bool justCollectables = false)
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x108C7C0", Offset = "0x108C7C0", VA = "0x108C7C0")]
		public static void RemoveFlag(string flagName, bool autoSave = false, bool justCollectables = false)
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x108DDD4", Offset = "0x108DDD4", VA = "0x108DDD4")]
		public static bool HasFlag(string flagName)
		{
			return default(bool);
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x108DEC4", Offset = "0x108DEC4", VA = "0x108DEC4")]
		public static void SetInt(string intName, int value, bool autoSave = false, bool justCollectables = false)
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x108E038", Offset = "0x108E038", VA = "0x108E038")]
		public static bool TryGetInt(string name, out int value, bool isCollectable = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x108E148", Offset = "0x108E148", VA = "0x108E148")]
		public static void SetFloat(string floatName, float value, bool autoSave = false, bool justCollectables = false)
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x108E2BC", Offset = "0x108E2BC", VA = "0x108E2BC")]
		public static bool TryGetFloat(string name, out float value, bool isCollectable = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x108E3D0", Offset = "0x108E3D0", VA = "0x108E3D0")]
		public static void RemoveFloat(string floatName, bool isCollectable = false)
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x108E4D0", Offset = "0x108E4D0", VA = "0x108E4D0")]
		public static void RemoveTransform(string floatName, bool isCollectable = false)
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x108E5D0", Offset = "0x108E5D0", VA = "0x108E5D0")]
		public static void SetTransform(string floatName, Transform value, bool isCollectable = false)
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x108E6F8", Offset = "0x108E6F8", VA = "0x108E6F8")]
		public static bool TryGetTransform(string name, out Transform value, bool isCollectable = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x108E81C", Offset = "0x108E81C", VA = "0x108E81C")]
		public static void SetString(string name, string value, bool autoSave = false, bool justCollectables = false)
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x108E990", Offset = "0x108E990", VA = "0x108E990")]
		public static bool TryGetString(string name, out string value, bool isCollectable = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x108EACC", Offset = "0x108EACC", VA = "0x108EACC")]
		public static void SetVector(string name, Vector3 value, bool isCollectable = false)
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x108EC24", Offset = "0x108EC24", VA = "0x108EC24")]
		public static bool TryGetVector(string name, out Vector3 value, bool isCollectable = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x108ED40", Offset = "0x108ED40", VA = "0x108ED40")]
		public static bool HasGoldenPathProgress()
		{
			return default(bool);
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x108EF18", Offset = "0x108EF18", VA = "0x108EF18")]
		public static void SetGoldenPathProgress(string location, int act, int scene, int subscene)
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x108F270", Offset = "0x108F270", VA = "0x108F270")]
		public static void GetGoldenPathProgress(out string location, out int act, out int scene, out int subscene)
		{
		}
	}
	[Token(Token = "0x2000395")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6959C", Offset = "0xE6959C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6959C", Offset = "0xE6959C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6959C", Offset = "0xE6959C")]
	public class AddProgressionFlagNode : CallableActionNode<string>
	{
		[Token(Token = "0x600136C")]
		[Address(RVA = "0x13BCB0C", Offset = "0x13BCB0C", VA = "0x13BCB0C", Slot = "12")]
		public override void Invoke(string flagName)
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x13BCB78", Offset = "0x13BCB78", VA = "0x13BCB78")]
		public AddProgressionFlagNode()
		{
		}
	}
	[Token(Token = "0x2000396")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE69624", Offset = "0xE69624")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE69624", Offset = "0xE69624")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE69624", Offset = "0xE69624")]
	public class RemoveProgressionFlagNode : CallableActionNode<string>
	{
		[Token(Token = "0x600136E")]
		[Address(RVA = "0x32CB41C", Offset = "0x32CB41C", VA = "0x32CB41C", Slot = "12")]
		public override void Invoke(string flagName)
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x32CB488", Offset = "0x32CB488", VA = "0x32CB488")]
		public RemoveProgressionFlagNode()
		{
		}
	}
	[Token(Token = "0x2000397")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE696AC", Offset = "0xE696AC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE696AC", Offset = "0xE696AC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE696AC", Offset = "0xE696AC")]
	public class HasProgressionFlagNode : CallableFunctionNode<bool, string>
	{
		[Token(Token = "0x6001370")]
		[Address(RVA = "0x10D9A14", Offset = "0x10D9A14", VA = "0x10D9A14", Slot = "12")]
		public override bool Invoke(string flagName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x10D9A78", Offset = "0x10D9A78", VA = "0x10D9A78")]
		public HasProgressionFlagNode()
		{
		}
	}
	[Token(Token = "0x2000398")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE69734", Offset = "0xE69734")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE69734", Offset = "0xE69734")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE69734", Offset = "0xE69734")]
	public class HasProgressionIntNode : CallableFunctionNode<bool, string>
	{
		[Token(Token = "0x6001372")]
		[Address(RVA = "0x10D9B90", Offset = "0x10D9B90", VA = "0x10D9B90", Slot = "12")]
		public override bool Invoke(string id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x10D9C10", Offset = "0x10D9C10", VA = "0x10D9C10")]
		public HasProgressionIntNode()
		{
		}
	}
	[Token(Token = "0x2000399")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE697BC", Offset = "0xE697BC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE697BC", Offset = "0xE697BC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE697BC", Offset = "0xE697BC")]
	public class HasProgressionStringNode : CallableFunctionNode<bool, string>
	{
		[Token(Token = "0x6001374")]
		[Address(RVA = "0x10D9C5C", Offset = "0x10D9C5C", VA = "0x10D9C5C", Slot = "12")]
		public override bool Invoke(string id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x10D9CDC", Offset = "0x10D9CDC", VA = "0x10D9CDC")]
		public HasProgressionStringNode()
		{
		}
	}
	[Token(Token = "0x200039A")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE69844", Offset = "0xE69844")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE69844", Offset = "0xE69844")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE69844", Offset = "0xE69844")]
	public class HasProgressionVectorNode : CallableFunctionNode<bool, string>
	{
		[Token(Token = "0x6001376")]
		[Address(RVA = "0x10D9D28", Offset = "0x10D9D28", VA = "0x10D9D28", Slot = "12")]
		public override bool Invoke(string id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x10D9DAC", Offset = "0x10D9DAC", VA = "0x10D9DAC")]
		public HasProgressionVectorNode()
		{
		}
	}
	[Token(Token = "0x200039B")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE698CC", Offset = "0xE698CC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE698CC", Offset = "0xE698CC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE698CC", Offset = "0xE698CC")]
	public class HasProgressionFloatNode : CallableFunctionNode<bool, string>
	{
		[Token(Token = "0x6001378")]
		[Address(RVA = "0x10D9AC4", Offset = "0x10D9AC4", VA = "0x10D9AC4", Slot = "12")]
		public override bool Invoke(string id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x10D9B44", Offset = "0x10D9B44", VA = "0x10D9B44")]
		public HasProgressionFloatNode()
		{
		}
	}
	[Token(Token = "0x200039C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE69954", Offset = "0xE69954")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE69954", Offset = "0xE69954")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE69954", Offset = "0xE69954")]
	public class SetProgressiontIntNode : CallableActionNode<string, int, bool, bool>
	{
		[Token(Token = "0x600137A")]
		[Address(RVA = "0x32DBBFC", Offset = "0x32DBBFC", VA = "0x32DBBFC", Slot = "12")]
		public override void Invoke(string intName, int value, bool autoSave = false, bool isCollectable = false)
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x32DBC88", Offset = "0x32DBC88", VA = "0x32DBC88")]
		public SetProgressiontIntNode()
		{
		}
	}
	[Token(Token = "0x200039D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE699DC", Offset = "0xE699DC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE699DC", Offset = "0xE699DC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE699DC", Offset = "0xE699DC")]
	public class TryGetProgressionIntNode : CallableFunctionNode<int, string>
	{
		[Token(Token = "0x600137C")]
		[Address(RVA = "0x135354C", Offset = "0x135354C", VA = "0x135354C", Slot = "12")]
		public override int Invoke(string intName)
		{
			return default(int);
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x13535CC", Offset = "0x13535CC", VA = "0x13535CC")]
		public TryGetProgressionIntNode()
		{
		}
	}
	[Token(Token = "0x200039E")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE69A64", Offset = "0xE69A64")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE69A64", Offset = "0xE69A64")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE69A64", Offset = "0xE69A64")]
	public class SetProgressionFloatNode : CallableActionNode<string, float, bool, bool>
	{
		[Token(Token = "0x600137E")]
		[Address(RVA = "0x32DB8AC", Offset = "0x32DB8AC", VA = "0x32DB8AC", Slot = "12")]
		public override void Invoke(string floatName, float value, bool autoSave = false, bool isCollectable = false)
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x32DB938", Offset = "0x32DB938", VA = "0x32DB938")]
		public SetProgressionFloatNode()
		{
		}
	}
	[Token(Token = "0x200039F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE69AEC", Offset = "0xE69AEC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE69AEC", Offset = "0xE69AEC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE69AEC", Offset = "0xE69AEC")]
	public class TryGetProgressionFloatNode : CallableFunctionNode<float, string>
	{
		[Token(Token = "0x6001380")]
		[Address(RVA = "0x1353480", Offset = "0x1353480", VA = "0x1353480", Slot = "12")]
		public override float Invoke(string fName)
		{
			return default(float);
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x1353500", Offset = "0x1353500", VA = "0x1353500")]
		public TryGetProgressionFloatNode()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE69B74", Offset = "0xE69B74")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE69B74", Offset = "0xE69B74")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE69B74", Offset = "0xE69B74")]
	public class SetProgressionStringNode : CallableActionNode<string, string, bool, bool>
	{
		[Token(Token = "0x6001382")]
		[Address(RVA = "0x32DB984", Offset = "0x32DB984", VA = "0x32DB984", Slot = "12")]
		public override void Invoke(string key, string value, bool autoSave = false, bool isCollectable = false)
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x32DBA10", Offset = "0x32DBA10", VA = "0x32DBA10")]
		public SetProgressionStringNode()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE69BFC", Offset = "0xE69BFC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE69BFC", Offset = "0xE69BFC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE69BFC", Offset = "0xE69BFC")]
	public class TryGetProgressionStringNode : CallableFunctionNode<string, string>
	{
		[Token(Token = "0x6001384")]
		[Address(RVA = "0x1353618", Offset = "0x1353618", VA = "0x1353618", Slot = "12")]
		public override string Invoke(string sName)
		{
			return null;
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x1353698", Offset = "0x1353698", VA = "0x1353698")]
		public TryGetProgressionStringNode()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE69C84", Offset = "0xE69C84")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE69C84", Offset = "0xE69C84")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE69C84", Offset = "0xE69C84")]
	public class SetProgressionVectorNode : CallableActionNode<string, Vector3>
	{
		[Token(Token = "0x6001386")]
		[Address(RVA = "0x32DBB20", Offset = "0x32DBB20", VA = "0x32DBB20", Slot = "12")]
		public override void Invoke(string key, Vector3 value)
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x32DBBB0", Offset = "0x32DBBB0", VA = "0x32DBBB0")]
		public SetProgressionVectorNode()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE69D0C", Offset = "0xE69D0C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE69D0C", Offset = "0xE69D0C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE69D0C", Offset = "0xE69D0C")]
	public class TryGetProgressionVectorNode : CallableFunctionNode<Vector3, string>
	{
		[Token(Token = "0x6001388")]
		[Address(RVA = "0x13537B0", Offset = "0x13537B0", VA = "0x13537B0", Slot = "12")]
		public override Vector3 Invoke(string vName)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x1353838", Offset = "0x1353838", VA = "0x1353838")]
		public TryGetProgressionVectorNode()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE69D94", Offset = "0xE69D94")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE69D94", Offset = "0xE69D94")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE69D94", Offset = "0xE69D94")]
	public class SetProgressionTransformNode : CallableActionNode<string, Transform>
	{
		[Token(Token = "0x600138A")]
		[Address(RVA = "0x32DBA5C", Offset = "0x32DBA5C", VA = "0x32DBA5C", Slot = "12")]
		public override void Invoke(string key, Transform value)
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x32DBAD4", Offset = "0x32DBAD4", VA = "0x32DBAD4")]
		public SetProgressionTransformNode()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE69E1C", Offset = "0xE69E1C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE69E1C", Offset = "0xE69E1C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE69E1C", Offset = "0xE69E1C")]
	public class TryGetProgressionTransformNode : CallableFunctionNode<Transform, string>
	{
		[Token(Token = "0x600138C")]
		[Address(RVA = "0x13536E4", Offset = "0x13536E4", VA = "0x13536E4", Slot = "12")]
		public override Transform Invoke(string vName)
		{
			return null;
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x1353764", Offset = "0x1353764", VA = "0x1353764")]
		public TryGetProgressionTransformNode()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE69EA4", Offset = "0xE69EA4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE69EA4", Offset = "0xE69EA4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE69EA4", Offset = "0xE69EA4")]
	public class SetGoldenPathProgressNode : CallableActionNode<string, int, int, int, TimeOfDay>
	{
		[Token(Token = "0x600138E")]
		[Address(RVA = "0x32DB3C4", Offset = "0x32DB3C4", VA = "0x32DB3C4", Slot = "12")]
		public override void Invoke(string location, int act, int scene, int subscene, TimeOfDay timeOfDay)
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x32DB3C8", Offset = "0x32DB3C8", VA = "0x32DB3C8")]
		public SetGoldenPathProgressNode()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE69F2C", Offset = "0xE69F2C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE69F2C", Offset = "0xE69F2C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE69F2C", Offset = "0xE69F2C")]
	public class IsGamePausedNode : CallableFunctionNode<bool>
	{
		[Token(Token = "0x6001390")]
		[Address(RVA = "0x10DF89C", Offset = "0x10DF89C", VA = "0x10DF89C", Slot = "12")]
		public override bool Invoke()
		{
			return default(bool);
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x10DF938", Offset = "0x10DF938", VA = "0x10DF938")]
		public IsGamePausedNode()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE69FB4", Offset = "0xE69FB4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE69FB4", Offset = "0xE69FB4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE69FB4", Offset = "0xE69FB4")]
	public class UpdatePlayerPosAndRotNode : CallableActionNode
	{
		[Token(Token = "0x6001392")]
		[Address(RVA = "0x1357700", Offset = "0x1357700", VA = "0x1357700", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x1357848", Offset = "0x1357848", VA = "0x1357848")]
		public UpdatePlayerPosAndRotNode()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6A03C", Offset = "0xE6A03C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6A03C", Offset = "0xE6A03C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6A03C", Offset = "0xE6A03C")]
	public class SaveNode : CallableActionNode
	{
		[Token(Token = "0x6001394")]
		[Address(RVA = "0x32D1560", Offset = "0x32D1560", VA = "0x32D1560", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x32D15BC", Offset = "0x32D15BC", VA = "0x32D15BC")]
		public SaveNode()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public static class SaveHandler
	{
		[Serializable]
		[Token(Token = "0x20003AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A0C4", Offset = "0xE6A0C4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400115A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__16_0;

			[Token(Token = "0x400115B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__16_1;

			[Token(Token = "0x400115C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action <>9__26_0;

			[Token(Token = "0x400115D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action <>9__26_1;

			[Token(Token = "0x60013AE")]
			[Address(RVA = "0x32C69AC", Offset = "0x32C69AC", VA = "0x32C69AC")]
			public <>c()
			{
			}

			[Token(Token = "0x60013AF")]
			[Address(RVA = "0x32C69B4", Offset = "0x32C69B4", VA = "0x32C69B4")]
			internal void <get_CurrentPlatform>b__16_0()
			{
			}

			[Token(Token = "0x60013B0")]
			[Address(RVA = "0x32C6A4C", Offset = "0x32C6A4C", VA = "0x32C6A4C")]
			internal void <get_CurrentPlatform>b__16_1()
			{
			}

			[Token(Token = "0x60013B1")]
			[Address(RVA = "0x32C6A9C", Offset = "0x32C6A9C", VA = "0x32C6A9C")]
			internal void <SaveCurrentData>b__26_0()
			{
			}

			[Token(Token = "0x60013B2")]
			[Address(RVA = "0x32C6B34", Offset = "0x32C6B34", VA = "0x32C6B34")]
			internal void <SaveCurrentData>b__26_1()
			{
			}
		}

		[Token(Token = "0x20003AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A0D4", Offset = "0xE6A0D4")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x400115E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onComplete;

			[Token(Token = "0x400115F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool showUI;

			[Token(Token = "0x60013B3")]
			[Address(RVA = "0x32C6BC0", Offset = "0x32C6BC0", VA = "0x32C6BC0")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60013B4")]
			[Address(RVA = "0x32C6BC8", Offset = "0x32C6BC8", VA = "0x32C6BC8")]
			internal void <LoadSaveProfile>b__0(string unparsedOptions, List<string> unparsedProgress, List<string> unparsedColl, List<string> unparsedSlotInfo)
			{
			}

			[Token(Token = "0x60013B5")]
			[Address(RVA = "0x32C72DC", Offset = "0x32C72DC", VA = "0x32C72DC")]
			internal void <LoadSaveProfile>b__1()
			{
			}
		}

		[Token(Token = "0x20003AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A0E4", Offset = "0xE6A0E4")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4001160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SaveSlotData slot;

			[Token(Token = "0x4001161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action OnLoadComplete;

			[Token(Token = "0x60013B6")]
			[Address(RVA = "0x32C7378", Offset = "0x32C7378", VA = "0x32C7378")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x60013B7")]
			[Address(RVA = "0x32C7380", Offset = "0x32C7380", VA = "0x32C7380")]
			internal void <LoadDataFromSlot>b__0()
			{
			}
		}

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _saveEnabled;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly fsSerializer serializer;

		[Token(Token = "0x4001151")]
		public const string OptionsDataFileName = "PeakyOptions";

		[Token(Token = "0x4001152")]
		public const string SlotProgressDataBaseName = "PeakyProgressSlot_";

		[Token(Token = "0x4001153")]
		public const string SlotCollectablesDataBaseName = "PeakyCollectablesSlot_";

		[Token(Token = "0x4001154")]
		public const string SlotInfoBaseName = "PeakySlot_";

		[Token(Token = "0x4001155")]
		public const int MaxNumberOfSlots = 3;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE80070", Offset = "0xE80070")]
		private static int <currentSlotIndex>k__BackingField;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static ISavePlatform _internalPlatform;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static SaveProfileData _internalCurrentData;

		[Token(Token = "0x17000287")]
		public static bool SaveEnabled
		{
			[Token(Token = "0x6001396")]
			[Address(RVA = "0x32CE740", Offset = "0x32CE740", VA = "0x32CE740")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001397")]
			[Address(RVA = "0x32CE7A4", Offset = "0x32CE7A4", VA = "0x32CE7A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public static int currentSlotIndex
		{
			[Token(Token = "0x6001398")]
			[Address(RVA = "0x32CE810", Offset = "0x32CE810", VA = "0x32CE810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90114", Offset = "0xE90114")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001399")]
			[Address(RVA = "0x32CE874", Offset = "0x32CE874", VA = "0x32CE874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90124", Offset = "0xE90124")]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		private static ISavePlatform CurrentPlatform
		{
			[Token(Token = "0x600139A")]
			[Address(RVA = "0x32CE8DC", Offset = "0x32CE8DC", VA = "0x32CE8DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028A")]
		public static SaveProfileData CurrentData
		{
			[Token(Token = "0x600139C")]
			[Address(RVA = "0x32CECE8", Offset = "0x32CECE8", VA = "0x32CECE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139B")]
			[Address(RVA = "0x32CEC7C", Offset = "0x32CEC7C", VA = "0x32CEC7C")]
			private set
			{
			}
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x32CEE08", Offset = "0x32CEE08", VA = "0x32CEE08")]
		public static void LoadSaveProfile(Action onComplete, bool showUI = true)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x32CF0A0", Offset = "0x32CF0A0", VA = "0x32CF0A0")]
		public static void SaveOptions()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x32CFB04", Offset = "0x32CFB04", VA = "0x32CFB04")]
		public static GenericSaveData GetOptions()
		{
			return null;
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x32D02DC", Offset = "0x32D02DC", VA = "0x32D02DC")]
		public static void AutoSave(bool justCollectables = false)
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x32D038C", Offset = "0x32D038C", VA = "0x32D038C")]
		public static void SaveInSlot(int index, bool overwrite = false, bool justCollectables = false)
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x32CF1B8", Offset = "0x32CF1B8", VA = "0x32CF1B8")]
		private static void SaveCurrentData()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x32D0FB4", Offset = "0x32D0FB4", VA = "0x32D0FB4")]
		public static void LoadDataFromSlot(SaveSlotData slot, Action OnLoadComplete)
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x32D11D0", Offset = "0x32D11D0", VA = "0x32D11D0")]
		public static SaveSlotData GetDataFromSlot(int index)
		{
			return null;
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x32D0B50", Offset = "0x32D0B50", VA = "0x32D0B50")]
		public static bool TryGetSlotInfoFromSlot(int index, out List<string> slotInfo, out int act)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x32D12B4", Offset = "0x32D12B4", VA = "0x32D12B4")]
		public static bool HasAnySlot()
		{
			return default(bool);
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x32D13E0", Offset = "0x32D13E0", VA = "0x32D13E0")]
		public static bool HasSlot(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x32D0FB0", Offset = "0x32D0FB0", VA = "0x32D0FB0")]
		private static void ShowSavingUI()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x32D14CC", Offset = "0x32D14CC", VA = "0x32D14CC")]
		private static void HideSavingUI()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x32D14D0", Offset = "0x32D14D0", VA = "0x32D14D0")]
		private static void ShowLoadFailedUI()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x32D14D4", Offset = "0x32D14D4", VA = "0x32D14D4")]
		private static void ShowSaveFailedUI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AE")]
	public sealed class SaveProfileData
	{
		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GenericSaveData OptionsData;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SaveSlotData> SaveSlots;

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x32CEFE4", Offset = "0x32CEFE4", VA = "0x32CEFE4")]
		public SaveProfileData()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public static class SaveProfileUtils
	{
		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x32D15C4", Offset = "0x32D15C4", VA = "0x32D15C4")]
		public static SaveSlotData GetLatest(SaveProfileData data)
		{
			return null;
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x32D1890", Offset = "0x32D1890", VA = "0x32D1890")]
		public static int GetLatestSlotIndex()
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x20003B0")]
	public sealed class SaveSlotData
	{
		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xE80080", Offset = "0xE80080")]
		public GenericSaveData ProgressData;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xE80090", Offset = "0xE80090")]
		public GenericSaveData CollectableData;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xE800A0", Offset = "0xE800A0")]
		public List<string> slotInfoData;

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x32D0A68", Offset = "0x32D0A68", VA = "0x32D0A68")]
		public SaveSlotData()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public class SavingNodes : MonoBehaviour
	{
		[Token(Token = "0x20003B2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6A0F4", Offset = "0xE6A0F4")]
		[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6A0F4", Offset = "0xE6A0F4")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6A0F4", Offset = "0xE6A0F4")]
		public class SaveSlotNode : CallableActionNode
		{
			[Token(Token = "0x60013BD")]
			[Address(RVA = "0x32C758C", Offset = "0x32C758C", VA = "0x32C758C", Slot = "12")]
			public override void Invoke()
			{
			}

			[Token(Token = "0x60013BE")]
			[Address(RVA = "0x32C7590", Offset = "0x32C7590", VA = "0x32C7590")]
			public SaveSlotNode()
			{
			}
		}

		[Token(Token = "0x20003B3")]
		[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6A17C", Offset = "0xE6A17C")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6A17C", Offset = "0xE6A17C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6A17C", Offset = "0xE6A17C")]
		public class EnableSavingNode : CallableActionNode
		{
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0x32C74E4", Offset = "0x32C74E4", VA = "0x32C74E4", Slot = "12")]
			public override void Invoke()
			{
			}

			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x32C7584", Offset = "0x32C7584", VA = "0x32C7584")]
			public EnableSavingNode()
			{
			}
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x32D2C24", Offset = "0x32D2C24", VA = "0x32D2C24")]
		public SavingNodes()
		{
		}
	}
}
namespace MazeTheory.PlatformFeatures
{
	[Token(Token = "0x20003B4")]
	public class OculusAbstractPlatformHandler : AbstractPlatformHandler
	{
		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Action _onInitializationComplete;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Action _onInitializationError;

		[Token(Token = "0x4001169")]
		private const string AppID = "3732099523498937";

		[Token(Token = "0x400116A")]
		private const ulong PremiumID = 0uL;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _hasPremiumContent;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<string> purchaseSKUs;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string _userID;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string _userName;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<ulong> _friendList;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public ProductList productList;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE800B0", Offset = "0xE800B0")]
		private bool <HMDEventsAssigned>k__BackingField;

		[Token(Token = "0x1700028B")]
		public override bool HasFoveatedRendering
		{
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0x1078024", Offset = "0x1078024", VA = "0x1078024", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028C")]
		public override bool HMDEventsAssigned
		{
			[Token(Token = "0x60013D0")]
			[Address(RVA = "0x1079D04", Offset = "0x1079D04", VA = "0x1079D04", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90134", Offset = "0xE90134")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013D1")]
			[Address(RVA = "0x1079D0C", Offset = "0x1079D0C", VA = "0x1079D0C", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90144", Offset = "0xE90144")]
			set
			{
			}
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x107802C", Offset = "0x107802C", VA = "0x107802C")]
		private void FetchLocalUserID()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x10780F4", Offset = "0x10780F4", VA = "0x10780F4")]
		private void FetchLocalUserFriends()
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x10781BC", Offset = "0x10781BC", VA = "0x10781BC")]
		private void GetLoggedInUserFriendsCallBack(Message msg)
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x10784CC", Offset = "0x10784CC", VA = "0x10784CC")]
		private void GetLoggedInUserCallBack(Message msg)
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x1078548", Offset = "0x1078548", VA = "0x1078548", Slot = "5")]
		public override void SetFoveatedRenderingLevel(FoveationLevel level)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x10785B8", Offset = "0x10785B8", VA = "0x10785B8", Slot = "6")]
		public override void Initialize(Action onComplete, Action onError)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x10787B4", Offset = "0x10787B4", VA = "0x10787B4")]
		private void CheckPurchasesList(Message<PurchaseList> message)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x1079140", Offset = "0x1079140", VA = "0x1079140")]
		private void CheckProductsList(Message<ProductList> message)
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x1079998", Offset = "0x1079998", VA = "0x1079998", Slot = "7")]
		public override bool HasPremiumContent()
		{
			return default(bool);
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x10799A0", Offset = "0x10799A0", VA = "0x10799A0", Slot = "8")]
		public override int RetrieveDeviceLanguageSetting()
		{
			return default(int);
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x1079B48", Offset = "0x1079B48", VA = "0x1079B48", Slot = "9")]
		public override bool HasVRFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x1079BA4", Offset = "0x1079BA4", VA = "0x1079BA4", Slot = "10")]
		public override bool IsHMDPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x1079C00", Offset = "0x1079C00", VA = "0x1079C00", Slot = "11")]
		public override bool IsUserPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x1079CA8", Offset = "0x1079CA8", VA = "0x1079CA8", Slot = "12")]
		public override bool HasInputFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x1079D18", Offset = "0x1079D18", VA = "0x1079D18", Slot = "15")]
		public override void EnableSpaceWarp()
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x1079DA0", Offset = "0x1079DA0", VA = "0x1079DA0", Slot = "16")]
		public override void DisableSpaceWarp()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x1079E00", Offset = "0x1079E00", VA = "0x1079E00", Slot = "17")]
		public override string GetUserID()
		{
			return null;
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x1079E08", Offset = "0x1079E08", VA = "0x1079E08", Slot = "18")]
		public override string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x1079E10", Offset = "0x1079E10", VA = "0x1079E10", Slot = "19")]
		public override List<ulong> GetFriendsList()
		{
			return null;
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x10799A4", Offset = "0x10799A4", VA = "0x10799A4")]
		private static int ExtractLocFromSystemLanguage()
		{
			return default(int);
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x1079E18", Offset = "0x1079E18", VA = "0x1079E18")]
		private void AssignEvents()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x107A200", Offset = "0x107A200", VA = "0x107A200")]
		private void HMDAcquiredInvoker()
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x107A214", Offset = "0x107A214", VA = "0x107A214")]
		private void HMDLostInvoker()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x107A228", Offset = "0x107A228", VA = "0x107A228")]
		private void HMDMountedInvoker()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x107A23C", Offset = "0x107A23C", VA = "0x107A23C")]
		private void HMDUnmountedInvoker()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x107A250", Offset = "0x107A250", VA = "0x107A250")]
		private void VrFocusAcquiredInvoker()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x107A264", Offset = "0x107A264", VA = "0x107A264")]
		private void VrFocusLostInvoker()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x107A278", Offset = "0x107A278", VA = "0x107A278")]
		private void InputFocusAcquiredInvoker()
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x107A28C", Offset = "0x107A28C", VA = "0x107A28C")]
		private void InputFocusLostInvoker()
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x107A2A0", Offset = "0x107A2A0", VA = "0x107A2A0")]
		private void AudioOutChangedInvoker()
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x107A2B4", Offset = "0x107A2B4", VA = "0x107A2B4")]
		private void AudioInChangedInvoker()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x107A2C8", Offset = "0x107A2C8", VA = "0x107A2C8")]
		private void TrackingAcquiredInvoker()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x107A2DC", Offset = "0x107A2DC", VA = "0x107A2DC")]
		private void TrackingLostInvoker()
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x107A2F0", Offset = "0x107A2F0", VA = "0x107A2F0")]
		private void DisplayRefreshRateChangedInvoker(float arg0, float arg1)
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x107A368", Offset = "0x107A368", VA = "0x107A368")]
		public OculusAbstractPlatformHandler()
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x107A438", Offset = "0x107A438", VA = "0x107A438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90154", Offset = "0xE90154")]
		private void <Initialize>b__17_0(Message message)
		{
		}
	}
	[Token(Token = "0x20003B5")]
	public class Psvr2AbstractPlatformHandler : AbstractPlatformHandler
	{
		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE800C0", Offset = "0xE800C0")]
		private readonly bool <HasFoveatedRendering>k__BackingField;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE800D0", Offset = "0xE800D0")]
		private bool <HMDEventsAssigned>k__BackingField;

		[Token(Token = "0x1700028D")]
		public override bool HasFoveatedRendering
		{
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0x108F4C0", Offset = "0x108F4C0", VA = "0x108F4C0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90164", Offset = "0xE90164")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028E")]
		public override bool HMDEventsAssigned
		{
			[Token(Token = "0x60013F1")]
			[Address(RVA = "0x108F690", Offset = "0x108F690", VA = "0x108F690", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90174", Offset = "0xE90174")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013F2")]
			[Address(RVA = "0x108F698", Offset = "0x108F698", VA = "0x108F698", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90184", Offset = "0xE90184")]
			set
			{
			}
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x108F4C8", Offset = "0x108F4C8", VA = "0x108F4C8", Slot = "5")]
		public override void SetFoveatedRenderingLevel(FoveationLevel level)
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x108F508", Offset = "0x108F508", VA = "0x108F508", Slot = "6")]
		public override void Initialize(Action onComplete, Action onError)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x108F548", Offset = "0x108F548", VA = "0x108F548", Slot = "7")]
		public override bool HasPremiumContent()
		{
			return default(bool);
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x108F588", Offset = "0x108F588", VA = "0x108F588", Slot = "8")]
		public override int RetrieveDeviceLanguageSetting()
		{
			return default(int);
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x108F590", Offset = "0x108F590", VA = "0x108F590", Slot = "9")]
		public override bool HasVRFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x108F5D0", Offset = "0x108F5D0", VA = "0x108F5D0", Slot = "10")]
		public override bool IsHMDPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x108F610", Offset = "0x108F610", VA = "0x108F610", Slot = "11")]
		public override bool IsUserPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x108F650", Offset = "0x108F650", VA = "0x108F650", Slot = "12")]
		public override bool HasInputFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x108F6A4", Offset = "0x108F6A4", VA = "0x108F6A4", Slot = "15")]
		public override void EnableSpaceWarp()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x108F6E4", Offset = "0x108F6E4", VA = "0x108F6E4", Slot = "16")]
		public override void DisableSpaceWarp()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x108F724", Offset = "0x108F724", VA = "0x108F724", Slot = "17")]
		public override string GetUserID()
		{
			return null;
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x108F770", Offset = "0x108F770", VA = "0x108F770", Slot = "18")]
		public override string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x108F7B4", Offset = "0x108F7B4", VA = "0x108F7B4", Slot = "19")]
		public override List<ulong> GetFriendsList()
		{
			return null;
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x108F820", Offset = "0x108F820", VA = "0x108F820")]
		public Psvr2AbstractPlatformHandler()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public class PicoAbstractPlatformHandler : AbstractPlatformHandler
	{
		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE800E0", Offset = "0xE800E0")]
		private bool <HMDEventsAssigned>k__BackingField;

		[Token(Token = "0x1700028F")]
		public override bool HasFoveatedRendering
		{
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0x107FBE8", Offset = "0x107FBE8", VA = "0x107FBE8", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000290")]
		public override bool HMDEventsAssigned
		{
			[Token(Token = "0x6001402")]
			[Address(RVA = "0x107FF1C", Offset = "0x107FF1C", VA = "0x107FF1C", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90194", Offset = "0xE90194")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001403")]
			[Address(RVA = "0x107FF24", Offset = "0x107FF24", VA = "0x107FF24", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE901A4", Offset = "0xE901A4")]
			set
			{
			}
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x107FBF0", Offset = "0x107FBF0", VA = "0x107FBF0", Slot = "5")]
		public override void SetFoveatedRenderingLevel(FoveationLevel level)
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x107FBF4", Offset = "0x107FBF4", VA = "0x107FBF4", Slot = "6")]
		public override void Initialize(Action onComplete, Action onError)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x107FC34", Offset = "0x107FC34", VA = "0x107FC34", Slot = "7")]
		public override bool HasPremiumContent()
		{
			return default(bool);
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x107FC74", Offset = "0x107FC74", VA = "0x107FC74", Slot = "8")]
		public override int RetrieveDeviceLanguageSetting()
		{
			return default(int);
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x107FE1C", Offset = "0x107FE1C", VA = "0x107FE1C", Slot = "9")]
		public override bool HasVRFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x107FE5C", Offset = "0x107FE5C", VA = "0x107FE5C", Slot = "10")]
		public override bool IsHMDPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x107FE9C", Offset = "0x107FE9C", VA = "0x107FE9C", Slot = "11")]
		public override bool IsUserPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x107FEDC", Offset = "0x107FEDC", VA = "0x107FEDC", Slot = "12")]
		public override bool HasInputFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x107FF30", Offset = "0x107FF30", VA = "0x107FF30", Slot = "15")]
		public override void EnableSpaceWarp()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x107FF34", Offset = "0x107FF34", VA = "0x107FF34", Slot = "16")]
		public override void DisableSpaceWarp()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x107FC78", Offset = "0x107FC78", VA = "0x107FC78")]
		private static int ExtractLocFromSystemLanguage()
		{
			return default(int);
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x107FF38", Offset = "0x107FF38", VA = "0x107FF38", Slot = "17")]
		public override string GetUserID()
		{
			return null;
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x107FF84", Offset = "0x107FF84", VA = "0x107FF84", Slot = "18")]
		public override string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x107FFC8", Offset = "0x107FFC8", VA = "0x107FFC8", Slot = "19")]
		public override List<ulong> GetFriendsList()
		{
			return null;
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x1080034", Offset = "0x1080034", VA = "0x1080034")]
		public PicoAbstractPlatformHandler()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public enum FoveationLevel
	{
		[Token(Token = "0x4001176")]
		None,
		[Token(Token = "0x4001177")]
		Low,
		[Token(Token = "0x4001178")]
		Med,
		[Token(Token = "0x4001179")]
		High,
		[Token(Token = "0x400117A")]
		TopHigh
	}
	[Token(Token = "0x20003B8")]
	public abstract class AbstractPlatformHandler
	{
		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action HMDAcquired;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action HMDLost;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action HMDMounted;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action HMDUnmounted;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action VrFocusAcquired;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action VrFocusLost;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action InputFocusAcquired;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action InputFocusLost;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action AudioOutChanged;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action AudioInChanged;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action TrackingAcquired;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action TrackingLost;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Action<float, float> DisplayRefreshRateChanged;

		[Token(Token = "0x17000291")]
		public abstract bool HasFoveatedRendering
		{
			[Token(Token = "0x600140B")]
			get;
		}

		[Token(Token = "0x17000292")]
		public abstract bool HMDEventsAssigned
		{
			[Token(Token = "0x6001414")]
			get;
			[Token(Token = "0x6001415")]
			set;
		}

		[Token(Token = "0x600140C")]
		public abstract void SetFoveatedRenderingLevel(FoveationLevel level);

		[Token(Token = "0x600140D")]
		public abstract void Initialize(Action onComplete, Action onError);

		[Token(Token = "0x600140E")]
		public abstract bool HasPremiumContent();

		[Token(Token = "0x600140F")]
		public abstract int RetrieveDeviceLanguageSetting();

		[Token(Token = "0x6001410")]
		public abstract bool HasVRFocus();

		[Token(Token = "0x6001411")]
		public abstract bool IsHMDPresent();

		[Token(Token = "0x6001412")]
		public abstract bool IsUserPresent();

		[Token(Token = "0x6001413")]
		public abstract bool HasInputFocus();

		[Token(Token = "0x6001416")]
		public abstract void EnableSpaceWarp();

		[Token(Token = "0x6001417")]
		public abstract void DisableSpaceWarp();

		[Token(Token = "0x6001418")]
		public abstract string GetUserID();

		[Token(Token = "0x6001419")]
		public abstract string GetUserName();

		[Token(Token = "0x600141A")]
		public abstract List<ulong> GetFriendsList();

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x13BBF90", Offset = "0x13BBF90", VA = "0x13BBF90")]
		protected AbstractPlatformHandler()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	public static class PlatformHandler
	{
		[Serializable]
		[Token(Token = "0x20003BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A204", Offset = "0xE6A204")]
		private sealed class <>c
		{
			[Token(Token = "0x400118B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400118C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__6_0;

			[Token(Token = "0x400118D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__6_1;

			[Token(Token = "0x6001421")]
			[Address(RVA = "0x32C4B80", Offset = "0x32C4B80", VA = "0x32C4B80")]
			public <>c()
			{
			}

			[Token(Token = "0x6001422")]
			[Address(RVA = "0x32C4B88", Offset = "0x32C4B88", VA = "0x32C4B88")]
			internal void <Init>b__6_0()
			{
			}

			[Token(Token = "0x6001423")]
			[Address(RVA = "0x32C4BE4", Offset = "0x32C4BE4", VA = "0x32C4BE4")]
			internal void <Init>b__6_1()
			{
			}
		}

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _isInitialised;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _isInitializing;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AbstractPlatformHandler _internalCurrentAbstractPlatform;

		[Token(Token = "0x17000293")]
		public static AbstractPlatformHandler CurrentPlatform
		{
			[Token(Token = "0x600141D")]
			[Address(RVA = "0x1080090", Offset = "0x1080090", VA = "0x1080090")]
			get
			{
				return null;
			}
			[Token(Token = "0x600141C")]
			[Address(RVA = "0x108003C", Offset = "0x108003C", VA = "0x108003C")]
			private set
			{
			}
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x10800F0", Offset = "0x10800F0", VA = "0x10800F0")]
		public static void Init()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x1080364", Offset = "0x1080364", VA = "0x1080364")]
		public static void SetFoveatedRenderingLevel(FoveationLevel level)
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public sealed class SpaceWarpComponent : MonoBehaviour
	{
		[Token(Token = "0x6001424")]
		[Address(RVA = "0x32E0A40", Offset = "0x32E0A40", VA = "0x32E0A40")]
		public void EnableSpaceWarp()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x32E0A6C", Offset = "0x32E0A6C", VA = "0x32E0A6C")]
		public void DisableSpaceWarp()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x32E0A98", Offset = "0x32E0A98", VA = "0x32E0A98")]
		public SpaceWarpComponent()
		{
		}
	}
}
namespace MazeTheory.Pausing
{
	[Token(Token = "0x20003BC")]
	public class AnimationPause : IPauseable
	{
		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HybridAnimancerComponent[] _hybridAnimancers;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityEngine.Animation[] _animations;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator[] _animators;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly float[] _hybridAnimancerSpeeds;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<float> _animationSpeeds;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly float[] _animatorSpeeds;

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x13BF8C8", Offset = "0x13BF8C8", VA = "0x13BF8C8")]
		public AnimationPause(HybridAnimancerComponent[] hybridAnimancers, UnityEngine.Animation[] animations, Animator[] animators)
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x13BF9F0", Offset = "0x13BF9F0", VA = "0x13BF9F0", Slot = "4")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x13C00D0", Offset = "0x13C00D0", VA = "0x13C00D0", Slot = "5")]
		public void Unpause()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public class CharacterPause : IPauseable
	{
		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MT_NPCAudio[] _npcAudios;

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x120829C", Offset = "0x120829C", VA = "0x120829C")]
		public CharacterPause(MT_NPCAudio[] npcAudios)
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x12082D0", Offset = "0x12082D0", VA = "0x12082D0", Slot = "4")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE901B4", Offset = "0xE901B4")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE901B4", Offset = "0xE901B4")]
		public void Pause()
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x1208338", Offset = "0x1208338", VA = "0x1208338", Slot = "5")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE90244", Offset = "0xE90244")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE90244", Offset = "0xE90244")]
		public void Unpause()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public class CombatPause : IPauseable
	{
		[Token(Token = "0x600142D")]
		[Address(RVA = "0x1215008", Offset = "0x1215008", VA = "0x1215008", Slot = "4")]
		public void Pause()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x12150F0", Offset = "0x12150F0", VA = "0x12150F0", Slot = "5")]
		public void Unpause()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x12151D4", Offset = "0x12151D4", VA = "0x12151D4")]
		public CombatPause()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class FlowScriptPause : IPauseable
	{
		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private FlowScriptController[] _flowScriptControllers;

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x100E2E0", Offset = "0x100E2E0", VA = "0x100E2E0")]
		public FlowScriptPause(FlowScriptController[] flowScriptControllers)
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x100E314", Offset = "0x100E314", VA = "0x100E314", Slot = "4")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x100E4C0", Offset = "0x100E4C0", VA = "0x100E4C0", Slot = "5")]
		public void Unpause()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class LookAtIKPause : IPauseable
	{
		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly MT_LookAtIK[] _lookAtIks;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Transform[] _eyeLookAtTargets;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Transform[] _headLookAtTargets;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Transform[] _aimLookAtTargets;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly EyeLookAround[] _eyeLookArounds;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly bool[] _eyeLookAroundWasPaused;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _eyePlaceholder;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject _headPlaceholder;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject _aimPlaceholder;

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x101A9BC", Offset = "0x101A9BC", VA = "0x101A9BC")]
		public LookAtIKPause(MT_LookAtIK[] lookAtIks, EyeLookAround[] eyeLookArounds)
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x101AAF0", Offset = "0x101AAF0", VA = "0x101AAF0", Slot = "4")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x101B25C", Offset = "0x101B25C", VA = "0x101B25C", Slot = "5")]
		public void Unpause()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public class ScenePauseManager : MonoBehaviour
	{
		[Token(Token = "0x20003C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A214", Offset = "0xE6A214")]
		private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScenePauseManager <>4__this;

			[Token(Token = "0x17000295")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001441")]
				[Address(RVA = "0x32C7B64", Offset = "0x32C7B64", VA = "0x32C7B64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000296")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001443")]
				[Address(RVA = "0x32C7BAC", Offset = "0x32C7BAC", VA = "0x32C7BAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600143E")]
			[Address(RVA = "0x32C75F8", Offset = "0x32C75F8", VA = "0x32C75F8")]
			[DebuggerHidden]
			public <Start>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600143F")]
			[Address(RVA = "0x32C7624", Offset = "0x32C7624", VA = "0x32C7624", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001440")]
			[Address(RVA = "0x32C7628", Offset = "0x32C7628", VA = "0x32C7628", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001442")]
			[Address(RVA = "0x32C7B6C", Offset = "0x32C7B6C", VA = "0x32C7B6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[NaughtyAttributes.ReadOnly]
		[SerializeField]
		private readonly List<IPauseable> _pauseables;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _playerRideTransform;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE80128", Offset = "0xE80128")]
		private bool <isInitialised>k__BackingField;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<bool> onPauseStateChanged;

		[Token(Token = "0x17000294")]
		public bool isInitialised
		{
			[Token(Token = "0x6001436")]
			[Address(RVA = "0x32D373C", Offset = "0x32D373C", VA = "0x32D373C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE902D4", Offset = "0xE902D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001437")]
			[Address(RVA = "0x32D3744", Offset = "0x32D3744", VA = "0x32D3744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE902E4", Offset = "0xE902E4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x32D3750", Offset = "0x32D3750", VA = "0x32D3750")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE902F4", Offset = "0xE902F4")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x32D37C8", Offset = "0x32D37C8", VA = "0x32D37C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x32D3834", Offset = "0x32D3834", VA = "0x32D3834")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x32D3920", Offset = "0x32D3920", VA = "0x32D3920")]
		public void Pause()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x32D3D08", Offset = "0x32D3D08", VA = "0x32D3D08")]
		public void Unpause()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x32D3FF8", Offset = "0x32D3FF8", VA = "0x32D3FF8")]
		public ScenePauseManager()
		{
		}
	}
}
namespace MazeTheory.Core
{
	[Token(Token = "0x20003C3")]
	public class SetFFROnAwake : MonoBehaviour
	{
		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FoveationLevel _foveationLevel;

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x32DAFB8", Offset = "0x32DAFB8", VA = "0x32DAFB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x32DAFC4", Offset = "0x32DAFC4", VA = "0x32DAFC4")]
		public SetFFROnAwake()
		{
		}
	}
}
namespace MazeTheory.Tutorials
{
	[Token(Token = "0x20003C4")]
	public class MT_Tutorial : MonoBehaviour
	{
		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Transform lineStart;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _lineEndTransform;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isRunning;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _canShowLine;

		[Token(Token = "0x14000014")]
		public event Action OnComplete
		{
			[Token(Token = "0x6001446")]
			[Address(RVA = "0x12B6E5C", Offset = "0x12B6E5C", VA = "0x12B6E5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE903A4", Offset = "0xE903A4")]
			add
			{
			}
			[Token(Token = "0x6001447")]
			[Address(RVA = "0x12B6EFC", Offset = "0x12B6EFC", VA = "0x12B6EFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE903B4", Offset = "0xE903B4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x12B6F9C", Offset = "0x12B6F9C", VA = "0x12B6F9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x12B7064", Offset = "0x12B7064", VA = "0x12B7064")]
		private void Update()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x12B71A8", Offset = "0x12B71A8", VA = "0x12B71A8")]
		public void SetScaleAndText(float scale, string stringId)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x12B72DC", Offset = "0x12B72DC", VA = "0x12B72DC")]
		public void SetObjectToFollow(Transform objectToFollow)
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x12B7400", Offset = "0x12B7400", VA = "0x12B7400")]
		public void SetLineEnd(Transform lineEnd)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x12B7498", Offset = "0x12B7498", VA = "0x12B7498")]
		public void Show()
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x12B75AC", Offset = "0x12B75AC", VA = "0x12B75AC")]
		public void Hide()
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x12B74B4", Offset = "0x12B74B4", VA = "0x12B74B4")]
		private void SetTutorialVisuals(bool isStarting)
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x12B75EC", Offset = "0x12B75EC", VA = "0x12B75EC")]
		public MT_Tutorial()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public enum RigTransform
	{
		[Token(Token = "0x40011AE")]
		None,
		[Token(Token = "0x40011AF")]
		RightHand,
		[Token(Token = "0x40011B0")]
		LeftHand
	}
	[Token(Token = "0x20003C6")]
	public class MT_TutorialManager : IGameModule
	{
		[Token(Token = "0x20003C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A224", Offset = "0xE6A224")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x40011B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string uniqueTutorialId;

			[Token(Token = "0x40011B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MT_Tutorial tutorial;

			[Token(Token = "0x600145D")]
			[Address(RVA = "0x32B9CF8", Offset = "0x32B9CF8", VA = "0x32B9CF8")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x600145E")]
			[Address(RVA = "0x32B9D00", Offset = "0x32B9D00", VA = "0x32B9D00")]
			internal void <DestroyTutorial>b__0()
			{
			}
		}

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, MT_Tutorial> _currentTutorialDictionary;

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x12B7728", Offset = "0x12B7728", VA = "0x12B7728", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x12B77B4", Offset = "0x12B77B4", VA = "0x12B77B4")]
		public static Transform GetRigTransform(RigTransform rigTransform)
		{
			return null;
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x12B7808", Offset = "0x12B7808", VA = "0x12B7808")]
		public static bool IsTutorialShowing(string uniqueTutorialId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x12B787C", Offset = "0x12B787C", VA = "0x12B787C")]
		public static void MoveTutorialToPosition(string uniqueTutorialId, Vector3 newPosition)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x12B7978", Offset = "0x12B7978", VA = "0x12B7978")]
		public static void MoveTutorialToPosition(string uniqueTutorialId, Transform destination)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x12AFF00", Offset = "0x12AFF00", VA = "0x12AFF00")]
		public static void SpawnTutorial(string uniqueTutorialId, float scale, string stringId, GameObject tutorialResource, Transform objectToFollow, Transform lineEnd)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x12B7A6C", Offset = "0x12B7A6C", VA = "0x12B7A6C")]
		private static MT_Tutorial CreateTutorial(MT_Tutorial tutorial)
		{
			return null;
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x12B7AF4", Offset = "0x12B7AF4", VA = "0x12B7AF4")]
		private static void ShowTutorial(float scale, string stringId, MT_Tutorial tutorial, Transform objectToFollow, Transform lineEnd)
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x12B7B74", Offset = "0x12B7B74", VA = "0x12B7B74")]
		public static void DestroyTutorial(string uniqueTutorialId)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x12B7CEC", Offset = "0x12B7CEC", VA = "0x12B7CEC")]
		public static void HideCurrentTutorial(string uniqueTutorialId)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x12B7DA8", Offset = "0x12B7DA8", VA = "0x12B7DA8", Slot = "5")]
		public void Terminate()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x12B7DAC", Offset = "0x12B7DAC", VA = "0x12B7DAC")]
		public MT_TutorialManager()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE6A234", Offset = "0xE6A234")]
	public class MT_TutorialTrigger : MonoBehaviour
	{
		[Token(Token = "0x20003C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A294", Offset = "0xE6A294")]
		private sealed class <DestroyAfterDelay>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_TutorialTrigger <>4__this;

			[Token(Token = "0x40011C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string uniqueTutorialId;

			[Token(Token = "0x17000297")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001468")]
				[Address(RVA = "0x32B9EB4", Offset = "0x32B9EB4", VA = "0x32B9EB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000298")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600146A")]
				[Address(RVA = "0x32B9EFC", Offset = "0x32B9EFC", VA = "0x32B9EFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001465")]
			[Address(RVA = "0x32B9DC4", Offset = "0x32B9DC4", VA = "0x32B9DC4")]
			[DebuggerHidden]
			public <DestroyAfterDelay>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001466")]
			[Address(RVA = "0x32B9DF0", Offset = "0x32B9DF0", VA = "0x32B9DF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001467")]
			[Address(RVA = "0x32B9DF4", Offset = "0x32B9DF4", VA = "0x32B9DF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001469")]
			[Address(RVA = "0x32B9EBC", Offset = "0x32B9EBC", VA = "0x32B9EBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool canBeReused;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE801A0", Offset = "0xE801A0")]
		[SerializeField]
		private GameObject tutorialResourceToSpawn;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string stringId;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float scale;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE801F8", Offset = "0xE801F8")]
		private float duration;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE80238", Offset = "0xE80238")]
		[SerializeField]
		private bool willFollowSpawned;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform objectToFollow;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RigTransform transformToFollow;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE80290", Offset = "0xE80290")]
		[SerializeField]
		private bool willLineEndOnSpawned;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform lineEnd;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private RigTransform lineEndSpawned;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Coroutine _destructionDelay;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _tutorialInstances;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool _isTriggered;

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x11387F8", Offset = "0x11387F8", VA = "0x11387F8")]
		private void DisableCollider()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x1138878", Offset = "0x1138878", VA = "0x1138878")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x1138900", Offset = "0x1138900", VA = "0x1138900")]
		public void SpawnTutorial()
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x1138A50", Offset = "0x1138A50", VA = "0x1138A50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE903C4", Offset = "0xE903C4")]
		private IEnumerator DestroyAfterDelay(string uniqueTutorialId)
		{
			return null;
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x1138AE4", Offset = "0x1138AE4", VA = "0x1138AE4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x1138AF8", Offset = "0x1138AF8", VA = "0x1138AF8")]
		public MT_TutorialTrigger()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public sealed class TutorialText : MonoBehaviour
	{
		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshPro textMeshPro;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEngine.Animation animation;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GridlyLocalizer _gridLoc;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isGridlyLocalizerSet;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool isOn;

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x1353C14", Offset = "0x1353C14", VA = "0x1353C14")]
		private void Awake()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x1353E14", Offset = "0x1353E14", VA = "0x1353E14")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x1353EDC", Offset = "0x1353EDC", VA = "0x1353EDC")]
		private void Update()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x1353F14", Offset = "0x1353F14", VA = "0x1353F14")]
		private void ToggleThis()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x1353FAC", Offset = "0x1353FAC", VA = "0x1353FAC")]
		public void ShowTextAndAnimation(string textID)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x1354328", Offset = "0x1354328", VA = "0x1354328")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x1354388", Offset = "0x1354388", VA = "0x1354388")]
		public TutorialText()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public static class TutorialManager
	{
		[Token(Token = "0x20003CC")]
		public enum TutState
		{
			[Token(Token = "0x40011CD")]
			Idle,
			[Token(Token = "0x40011CE")]
			Running,
			[Token(Token = "0x40011CF")]
			Finished
		}

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, TutState> _tutDics;

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x1353924", Offset = "0x1353924", VA = "0x1353924")]
		public static void StartTutorial(string id)
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x13539B4", Offset = "0x13539B4", VA = "0x13539B4")]
		public static bool IsTutorialRunning(string id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x1353AA0", Offset = "0x1353AA0", VA = "0x1353AA0")]
		public static void CompleteTutorial(string id)
		{
		}
	}
	[Token(Token = "0x20003CD")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6A2A4", Offset = "0xE6A2A4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6A2A4", Offset = "0xE6A2A4")]
	public class StatTutorialNode : CallableActionNode<string>
	{
		[Token(Token = "0x6001476")]
		[Address(RVA = "0x32E352C", Offset = "0x32E352C", VA = "0x32E352C", Slot = "12")]
		public override void Invoke(string id)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x32E3590", Offset = "0x32E3590", VA = "0x32E3590")]
		public StatTutorialNode()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6A308", Offset = "0xE6A308")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6A308", Offset = "0xE6A308")]
	public class IsTutorialRunning : CallableFunctionNode<bool, string>
	{
		[Token(Token = "0x6001478")]
		[Address(RVA = "0x10DFA80", Offset = "0x10DFA80", VA = "0x10DFA80", Slot = "12")]
		public override bool Invoke(string id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x10DFB6C", Offset = "0x10DFB6C", VA = "0x10DFB6C")]
		public IsTutorialRunning()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6A36C", Offset = "0xE6A36C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6A36C", Offset = "0xE6A36C")]
	public class WaitUntilTutorialFinishedNode : LatentActionNode<string>
	{
		[Token(Token = "0x20003D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A3D0", Offset = "0xE6A3D0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40011D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x600147C")]
			[Address(RVA = "0x2168108", Offset = "0x2168108", VA = "0x2168108")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600147D")]
			[Address(RVA = "0x2168110", Offset = "0x2168110", VA = "0x2168110")]
			internal bool <Invoke>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A3E0", Offset = "0xE6A3E0")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string id;

			[Token(Token = "0x17000299")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001481")]
				[Address(RVA = "0x21682D0", Offset = "0x21682D0", VA = "0x21682D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001483")]
				[Address(RVA = "0x2168318", Offset = "0x2168318", VA = "0x2168318", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600147E")]
			[Address(RVA = "0x2168184", Offset = "0x2168184", VA = "0x2168184")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600147F")]
			[Address(RVA = "0x21681B0", Offset = "0x21681B0", VA = "0x21681B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001480")]
			[Address(RVA = "0x21681B4", Offset = "0x21681B4", VA = "0x21681B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001482")]
			[Address(RVA = "0x21682D8", Offset = "0x21682D8", VA = "0x21682D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x135C768", Offset = "0x135C768", VA = "0x135C768", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE90474", Offset = "0xE90474")]
		public override IEnumerator Invoke(string id)
		{
			return null;
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x135C7E0", Offset = "0x135C7E0", VA = "0x135C7E0")]
		public WaitUntilTutorialFinishedNode()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6A3F0", Offset = "0xE6A3F0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6A3F0", Offset = "0xE6A3F0")]
	public class EndTutorialNode : CallableActionNode<string>
	{
		[Token(Token = "0x6001484")]
		[Address(RVA = "0x100C0D4", Offset = "0x100C0D4", VA = "0x100C0D4", Slot = "12")]
		public override void Invoke(string id)
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x100C138", Offset = "0x100C138", VA = "0x100C138")]
		public EndTutorialNode()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6A454", Offset = "0xE6A454")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6A454", Offset = "0xE6A454")]
	public class ToggleLeftControllerNode : CallableActionNode<bool>
	{
		[Token(Token = "0x6001486")]
		[Address(RVA = "0x13521C0", Offset = "0x13521C0", VA = "0x13521C0", Slot = "12")]
		public override void Invoke(bool enabled)
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x135228C", Offset = "0x135228C", VA = "0x135228C")]
		public ToggleLeftControllerNode()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6A4B8", Offset = "0xE6A4B8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6A4B8", Offset = "0xE6A4B8")]
	public class ToggleRightControllerNode : CallableActionNode<bool>
	{
		[Token(Token = "0x6001488")]
		[Address(RVA = "0x1352388", Offset = "0x1352388", VA = "0x1352388", Slot = "12")]
		public override void Invoke(bool enabled)
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x1352454", Offset = "0x1352454", VA = "0x1352454")]
		public ToggleRightControllerNode()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6A51C", Offset = "0xE6A51C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6A51C", Offset = "0xE6A51C")]
	public class ShowTutorialTextNode : CallableActionNode<TutorialText, string>
	{
		[Token(Token = "0x600148A")]
		[Address(RVA = "0x32DCFD8", Offset = "0x32DCFD8", VA = "0x32DCFD8", Slot = "12")]
		public override void Invoke(TutorialText tutorialText, string text)
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x32DCFF8", Offset = "0x32DCFF8", VA = "0x32DCFF8")]
		public ShowTutorialTextNode()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6A580", Offset = "0xE6A580")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6A580", Offset = "0xE6A580")]
	public class HideTutorialTextNode : CallableActionNode<TutorialText>
	{
		[Token(Token = "0x600148C")]
		[Address(RVA = "0x10DA6B8", Offset = "0x10DA6B8", VA = "0x10DA6B8", Slot = "12")]
		public override void Invoke(TutorialText tutorialText)
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x10DA6D4", Offset = "0x10DA6D4", VA = "0x10DA6D4")]
		public HideTutorialTextNode()
		{
		}
	}
}
namespace MazeTheory.Localisation
{
	[Token(Token = "0x20003D7")]
	public class MT_LocalisationManager : IGameModule
	{
		[Token(Token = "0x20003D8")]
		public enum Language
		{
			[Token(Token = "0x40011DF")]
			English,
			[Token(Token = "0x40011E0")]
			French,
			[Token(Token = "0x40011E1")]
			Italian,
			[Token(Token = "0x40011E2")]
			German,
			[Token(Token = "0x40011E3")]
			Spanish,
			[Token(Token = "0x40011E4")]
			Japanese,
			[Token(Token = "0x40011E5")]
			ChineseSimplified,
			[Token(Token = "0x40011E6")]
			ChineseTraditional,
			[Token(Token = "0x40011E7")]
			Korean,
			[Token(Token = "0x40011E8")]
			Russian,
			[Token(Token = "0x40011E9")]
			Portuguese_Brazil,
			[Token(Token = "0x40011EA")]
			Polish,
			[Token(Token = "0x40011EB")]
			Spanish_LatinAmerica
		}

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Language, Dictionary<string, string>> _allDialogueText;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<Language, Dictionary<string, string>> _allUIText;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Dictionary<string, string> _currentDialogueText;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Dictionary<string, string> _currentUIText;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Language _currentLanguage;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static List<MT_LocalisationText> _localisationTextComponents;

		[Token(Token = "0x40011DB")]
		private const char RowSplit = '\n';

		[Token(Token = "0x40011DC")]
		private const char ColumnSplit = '\t';

		[Token(Token = "0x40011DD")]
		private const int ColumnCharacterName = 1;

		[Token(Token = "0x1700029B")]
		private static List<MT_LocalisationText> LocalisationTextComponents
		{
			[Token(Token = "0x6001490")]
			[Address(RVA = "0x125B9B8", Offset = "0x125B9B8", VA = "0x125B9B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000015")]
		public static event Action<Language> OnLanguageSet
		{
			[Token(Token = "0x600148E")]
			[Address(RVA = "0x125B7D0", Offset = "0x125B7D0", VA = "0x125B7D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90524", Offset = "0xE90524")]
			add
			{
			}
			[Token(Token = "0x600148F")]
			[Address(RVA = "0x125B8C4", Offset = "0x125B8C4", VA = "0x125B8C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90534", Offset = "0xE90534")]
			remove
			{
			}
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x125BA8C", Offset = "0x125BA8C", VA = "0x125BA8C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xE90544", Offset = "0xE90544")]
		private static void AppDomainReloadHandler()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x125BA90", Offset = "0x125BA90", VA = "0x125BA90", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x125BA94", Offset = "0x125BA94", VA = "0x125BA94", Slot = "5")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x125BA98", Offset = "0x125BA98", VA = "0x125BA98")]
		private void AutoDetectLanguage()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x125BE4C", Offset = "0x125BE4C", VA = "0x125BE4C")]
		public static Language GetCurrentLanguage()
		{
			return default(Language);
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x125BCC4", Offset = "0x125BCC4", VA = "0x125BCC4")]
		public static void SetLanguage(Language language)
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x125BFF4", Offset = "0x125BFF4", VA = "0x125BFF4")]
		private static Dictionary<Language, Dictionary<string, string>> CreateDictionaries()
		{
			return null;
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x125C194", Offset = "0x125C194", VA = "0x125C194")]
		private static void PopulateUIDictionaries()
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x125CB1C", Offset = "0x125CB1C", VA = "0x125CB1C")]
		private static void PopulateDialogueDictionaries()
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x125C304", Offset = "0x125C304", VA = "0x125C304")]
		private static void PopulateDictionary(string shortPath, ref Dictionary<Language, Dictionary<string, string>> dictionary, bool isDialogue)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x125CC8C", Offset = "0x125CC8C", VA = "0x125CC8C")]
		private static int GetLanguageColumnIndex(Language language, string data)
		{
			return default(int);
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x125CDB0", Offset = "0x125CDB0", VA = "0x125CDB0")]
		private static string GetLanguageID(Language language)
		{
			return null;
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x125CF08", Offset = "0x125CF08", VA = "0x125CF08")]
		public static string GetDialogueText(string dialogueID)
		{
			return null;
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x1251640", Offset = "0x1251640", VA = "0x1251640")]
		public static string GetUIText(string uiTextID)
		{
			return null;
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x125BEB0", Offset = "0x125BEB0", VA = "0x125BEB0")]
		private static void UpdateLocalisationTextComponents()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x125D3F0", Offset = "0x125D3F0", VA = "0x125D3F0")]
		public static void AddLocalisationTextComponent(MT_LocalisationText localisationTextComponent)
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x125D51C", Offset = "0x125D51C", VA = "0x125D51C")]
		public static void RemoveLocalisationTextComponent(MT_LocalisationText localisationTextComponent)
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x125D648", Offset = "0x125D648", VA = "0x125D648")]
		public MT_LocalisationManager()
		{
		}
	}
}
namespace MazeTheory.Hurricane
{
	[Token(Token = "0x20003D9")]
	public class MT_HVRCollisionEvent : HVRCollisionEvents
	{
		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE80318", Offset = "0xE80318")]
		[SerializeField]
		private string[] acceptedTags;

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x15C7960", Offset = "0x15C7960", VA = "0x15C7960")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE90558", Offset = "0xE90558")]
		private bool IsTagValid(string t)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x15C79E0", Offset = "0x15C79E0", VA = "0x15C79E0", Slot = "4")]
		protected override void OnCollisionEnter(UnityEngine.Collision other)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x15C7A48", Offset = "0x15C7A48", VA = "0x15C7A48")]
		public MT_HVRCollisionEvent()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6A5E4", Offset = "0xE6A5E4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6A5E4", Offset = "0xE6A5E4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6A5E4", Offset = "0xE6A5E4")]
	public sealed class EnableDisplayDotNode : CallableActionNode<HVRGrabbable>
	{
		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x100B9A8", Offset = "0x100B9A8", VA = "0x100B9A8", Slot = "12")]
		public override void Invoke(HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x100B9C4", Offset = "0x100B9C4", VA = "0x100B9C4")]
		public EnableDisplayDotNode()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6A66C", Offset = "0xE6A66C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6A66C", Offset = "0xE6A66C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6A66C", Offset = "0xE6A66C")]
	public sealed class DisableDisplayDotNode : CallableActionNode<HVRGrabbable>
	{
		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x1008AD0", Offset = "0x1008AD0", VA = "0x1008AD0", Slot = "12")]
		public override void Invoke(HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x1008AE8", Offset = "0x1008AE8", VA = "0x1008AE8")]
		public DisableDisplayDotNode()
		{
		}
	}
}
namespace MazeTheory.Coroutines
{
	[Token(Token = "0x20003DC")]
	public class CoroutineRunnerBehaviour : MonoBehaviour
	{
		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xFFB5EC", Offset = "0xFFB5EC", VA = "0xFFB5EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xFFB664", Offset = "0xFFB664", VA = "0xFFB664")]
		public CoroutineRunnerBehaviour()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class MT_CoroutineRunner : IGameModule
	{
		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE80364", Offset = "0xE80364")]
		private CoroutineRunnerBehaviour <Runner>k__BackingField;

		[Token(Token = "0x1700029C")]
		public CoroutineRunnerBehaviour Runner
		{
			[Token(Token = "0x60014AE")]
			[Address(RVA = "0x112D770", Offset = "0x112D770", VA = "0x112D770")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE905E0", Offset = "0xE905E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0x112D768", Offset = "0x112D768", VA = "0x112D768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE905D0", Offset = "0xE905D0")]
			private set
			{
			}
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x112D778", Offset = "0x112D778", VA = "0x112D778", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x112D81C", Offset = "0x112D81C", VA = "0x112D81C", Slot = "5")]
		public void Terminate()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x112D884", Offset = "0x112D884", VA = "0x112D884")]
		public MT_CoroutineRunner()
		{
		}
	}
}
namespace MazeTheory.UI
{
	[Token(Token = "0x20003DE")]
	public class MT_LocalHandNotification : MonoBehaviour
	{
		[Token(Token = "0x20003DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A6F4", Offset = "0xE6A6F4")]
		private sealed class <HideNotification>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_LocalHandNotification <>4__this;

			[Token(Token = "0x4001207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool targetGiven;

			[Token(Token = "0x1700029D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014BC")]
				[Address(RVA = "0x1039940", Offset = "0x1039940", VA = "0x1039940", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014BE")]
				[Address(RVA = "0x1039988", Offset = "0x1039988", VA = "0x1039988", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014B9")]
			[Address(RVA = "0x1039708", Offset = "0x1039708", VA = "0x1039708")]
			[DebuggerHidden]
			public <HideNotification>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x60014BA")]
			[Address(RVA = "0x1039734", Offset = "0x1039734", VA = "0x1039734", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014BB")]
			[Address(RVA = "0x1039738", Offset = "0x1039738", VA = "0x1039738", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014BD")]
			[Address(RVA = "0x1039948", Offset = "0x1039948", VA = "0x1039948", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject notificationGameObject;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text notificationText;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SpriteRenderer notificationIcon;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip[] _defaultNotifClip;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public MT_HandPopup MTHandPopup;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HVRHandGrabber _handGrabber;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HVRHandGrabber _secondHandGrabber;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isBodyNotification;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 _startLocalPosition;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Coroutine _hidingRoutine;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly Queue<Notification> _notifications;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _doingNotification;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _timeElapsedSinceEndOfLastNotification;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Tween _fadeText;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Tween _fadeIcon;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Tween _move;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Renderer _textRenderer;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Renderer _spriteRenderer;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool _hasAudioSource;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool _hidingRoutineRunning;

		[Token(Token = "0x4001203")]
		private const float MinAlpha = 0.001f;

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x125AE1C", Offset = "0x125AE1C", VA = "0x125AE1C")]
		public void HandPopupAwake(MT_HandPopup hp, float minimumTime)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x125B090", Offset = "0x125B090", VA = "0x125B090")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x125B5E4", Offset = "0x125B5E4", VA = "0x125B5E4")]
		public void EnqueueNotification(Notification n)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x125B1B0", Offset = "0x125B1B0", VA = "0x125B1B0")]
		private void DoNotification(Notification notification)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x125B648", Offset = "0x125B648", VA = "0x125B648")]
		private void SetSpriteAlpha(float targetAlpha)
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x125B6C0", Offset = "0x125B6C0", VA = "0x125B6C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE905F0", Offset = "0xE905F0")]
		private IEnumerator HideNotification(bool targetGiven)
		{
			return null;
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x125B74C", Offset = "0x125B74C", VA = "0x125B74C")]
		public MT_LocalHandNotification()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class HandGrabIndicator : HVRGrabbableHoverBase
	{
		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer renderer;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer journalIconRenderer;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float distanceFromObject;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private HVRGrabberBase grabber;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int CurrentDistance;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int Dot;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HVRGrabbable _currentGrabbable;

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x10D9154", Offset = "0x10D9154", VA = "0x10D9154")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x10D9160", Offset = "0x10D9160", VA = "0x10D9160")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x10D927C", Offset = "0x10D927C", VA = "0x10D927C")]
		private void GrabberHoverEnter(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x10D9280", Offset = "0x10D9280", VA = "0x10D9280")]
		private void GrabberHoverExit(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x10D9284", Offset = "0x10D9284", VA = "0x10D9284", Slot = "6")]
		public override void Hover(bool isJournalGrabbable = false, [Optional] HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x10D9290", Offset = "0x10D9290", VA = "0x10D9290", Slot = "7")]
		public override void Unhover()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x10D929C", Offset = "0x10D929C", VA = "0x10D929C", Slot = "8")]
		public override void Enable(bool isJournalGrabbable = false)
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x10D92A0", Offset = "0x10D92A0", VA = "0x10D92A0", Slot = "9")]
		public override void Disable()
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x10D92E4", Offset = "0x10D92E4", VA = "0x10D92E4", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x10D9548", Offset = "0x10D9548", VA = "0x10D9548")]
		public HandGrabIndicator()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public static class HandPopupConstants
	{
		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Dictionary<FontColorNotifEnum, Color32> FontColorCodes;
	}
	[Token(Token = "0x20003E2")]
	public class Notification
	{
		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Text;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip SFXClip;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool HasSFX;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Target;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool HasTarget;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Sprite Icon;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool HasIcon;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Color32 FontColor;

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x1077FBC", Offset = "0x1077FBC", VA = "0x1077FBC")]
		public Notification()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public enum IconNotifEnum
	{
		[Token(Token = "0x400121A")]
		NONE = -1,
		[Token(Token = "0x400121B")]
		Journal,
		[Token(Token = "0x400121C")]
		JournalUpdate,
		[Token(Token = "0x400121D")]
		JournalItem
	}
	[Token(Token = "0x20003E4")]
	public enum FontColorNotifEnum
	{
		[Token(Token = "0x400121F")]
		White,
		[Token(Token = "0x4001220")]
		Orange
	}
	[Token(Token = "0x20003E5")]
	public sealed class MT_HandPopup : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003E6")]
		private class IconData
		{
			[Token(Token = "0x400122C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IconNotifEnum icon;

			[Token(Token = "0x400122D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Sprite sprite;

			[Token(Token = "0x60014D5")]
			[Address(RVA = "0x1037C7C", Offset = "0x1037C7C", VA = "0x1037C7C")]
			public IconData()
			{
			}
		}

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_LocalHandNotification RightNotifs;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_LocalHandNotification LeftNotifs;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MT_LocalHandNotification bodyNotifs;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float notificationDuration;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minTimeBetweenNotifications;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float notificationVibrationAmplitude;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float notificationVibrationDuration;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource notificationAudioSource;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE80454", Offset = "0xE80454")]
		private AudioClip <defaultNotifClip>k__BackingField;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader notifShader;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private IconData[] icons;

		[Token(Token = "0x1700029F")]
		public AudioClip defaultNotifClip
		{
			[Token(Token = "0x60014CC")]
			[Address(RVA = "0x15CCB08", Offset = "0x15CCB08", VA = "0x15CCB08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE906A0", Offset = "0xE906A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014CD")]
			[Address(RVA = "0x15CCB10", Offset = "0x15CCB10", VA = "0x15CCB10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE906B0", Offset = "0xE906B0")]
			private set
			{
			}
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x15CCB18", Offset = "0x15CCB18", VA = "0x15CCB18")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x15CCCF0", Offset = "0x15CCCF0", VA = "0x15CCCF0")]
		public void ShowNotification(string text, IconNotifEnum iconEnum, [Optional] AudioClip sfxClip, [Optional] HVRHandGrabber handGrabber, [Optional] Transform target, FontColorNotifEnum fontColor = FontColorNotifEnum.White, [Optional] (string, bool)[] textPrams)
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x15CCCFC", Offset = "0x15CCCFC", VA = "0x15CCCFC")]
		public void ShowBodyNotification(string text, IconNotifEnum iconEnum, [Optional] AudioClip sfxClip, FontColorNotifEnum fontColor = FontColorNotifEnum.White, [Optional] (string, bool)[] textPrams)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x15CCEC8", Offset = "0x15CCEC8", VA = "0x15CCEC8")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE906C0", Offset = "0xE906C0")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE906C0", Offset = "0xE906C0")]
		private Sprite IconSelection(IconNotifEnum iconEnum)
		{
			return null;
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x15CCF0C", Offset = "0x15CCF0C", VA = "0x15CCF0C")]
		private Color ColorSelection(FontColorNotifEnum fontColor)
		{
			return default(Color);
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x15CCFA0", Offset = "0x15CCFA0", VA = "0x15CCFA0")]
		private MT_LocalHandNotification WhichHand(HVRHandGrabber handGrabber)
		{
			return null;
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x15CD118", Offset = "0x15CD118", VA = "0x15CD118")]
		public MT_HandPopup()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class SliderText : MonoBehaviour
	{
		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider slider;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI text;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool isPercent;

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x32DEC28", Offset = "0x32DEC28", VA = "0x32DEC28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x32DEDB0", Offset = "0x32DEDB0", VA = "0x32DEDB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x32DED0C", Offset = "0x32DED0C", VA = "0x32DED0C")]
		private void HandleOnValueChanged(float value)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x32DEE74", Offset = "0x32DEE74", VA = "0x32DEE74")]
		public SliderText()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class Spinner : MonoBehaviour
	{
		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x32E1EC8", Offset = "0x32E1EC8", VA = "0x32E1EC8")]
		public void Update()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x32E1F40", Offset = "0x32E1F40", VA = "0x32E1F40")]
		public Spinner()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class UIButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button button;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color textHighlightColor;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI text;

		[Token(Token = "0x4001235")]
		private const float Duration = 0.2f;

		[Token(Token = "0x4001236")]
		private const float TargetScale = 1.1f;

		[Token(Token = "0x4001237")]
		private const float TargetZ = -0.02f;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color _originalColor;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _originalZ;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _originalScale;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Tween _tween;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _lastInteractableValue;

		[Token(Token = "0x14000016")]
		private event Action<bool> OnButtonInteractableChanged
		{
			[Token(Token = "0x60014DC")]
			[Address(RVA = "0x1355DA4", Offset = "0x1355DA4", VA = "0x1355DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90764", Offset = "0xE90764")]
			add
			{
			}
			[Token(Token = "0x60014DD")]
			[Address(RVA = "0x1355E44", Offset = "0x1355E44", VA = "0x1355E44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90774", Offset = "0xE90774")]
			remove
			{
			}
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x1355EE4", Offset = "0x1355EE4", VA = "0x1355EE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x1355F54", Offset = "0x1355F54", VA = "0x1355F54")]
		private void Update()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x1355FEC", Offset = "0x1355FEC", VA = "0x1355FEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x135612C", Offset = "0x135612C", VA = "0x135612C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x13561C4", Offset = "0x13561C4", VA = "0x13561C4")]
		private void ResetToOriginal()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x1356244", Offset = "0x1356244", VA = "0x1356244", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x135632C", Offset = "0x135632C", VA = "0x135632C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x1356098", Offset = "0x1356098", VA = "0x1356098")]
		private void SetEnabledTextColor(bool isEnabled)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x1356454", Offset = "0x1356454", VA = "0x1356454")]
		public UIButton()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class UICarousel : MonoBehaviour
	{
		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button previousButton;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button nextButton;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GridlyLocalizer carouselText;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _isLanguagesCarousel;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[NaughtyAttributes.ReadOnly]
		public string[] _carouselOptions;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _currentIndex;

		[Token(Token = "0x14000017")]
		public event Action<int> OnValueChanged
		{
			[Token(Token = "0x60014E7")]
			[Address(RVA = "0x135645C", Offset = "0x135645C", VA = "0x135645C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90784", Offset = "0xE90784")]
			add
			{
			}
			[Token(Token = "0x60014E8")]
			[Address(RVA = "0x13564FC", Offset = "0x13564FC", VA = "0x13564FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90794", Offset = "0xE90794")]
			remove
			{
			}
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x135659C", Offset = "0x135659C", VA = "0x135659C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x13566EC", Offset = "0x13566EC", VA = "0x13566EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x135683C", Offset = "0x135683C", VA = "0x135683C")]
		private void HandlePreviousButtonClick()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x13568C0", Offset = "0x13568C0", VA = "0x13568C0")]
		private void HandleNextButtonClick()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x1356948", Offset = "0x1356948", VA = "0x1356948")]
		private void UpdateCarouselText(int index)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x13569A0", Offset = "0x13569A0", VA = "0x13569A0")]
		private void SetTextLanguageOption(int index)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x1356C98", Offset = "0x1356C98", VA = "0x1356C98")]
		public void SetCarouselOptions(string[] options, int currentIndex = 0)
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x1356CCC", Offset = "0x1356CCC", VA = "0x1356CCC")]
		public UICarousel()
		{
		}
	}
}
namespace MazeTheory.Analytics
{
	[Token(Token = "0x20003EB")]
	public class AnalyticsHandler
	{
		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _isInitialised;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<string, object> _paramsDic;

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x13BDAB4", Offset = "0x13BDAB4", VA = "0x13BDAB4")]
		public void Init()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x13BDB44", Offset = "0x13BDB44", VA = "0x13BDB44")]
		public void OnInitComplete()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x13BDB50", Offset = "0x13BDB50", VA = "0x13BDB50")]
		public void OnCollectItem(string id)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x13BDD18", Offset = "0x13BDD18", VA = "0x13BDD18")]
		public void OnPlayerDie(string scene)
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x13BDEE0", Offset = "0x13BDEE0", VA = "0x13BDEE0")]
		public void OnEnterSinglePlayer()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x13BE064", Offset = "0x13BE064", VA = "0x13BE064")]
		public void OnEnterMultiplayer()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x13BE1E8", Offset = "0x13BE1E8", VA = "0x13BE1E8")]
		public void SendGoldenPathProgress(string progress)
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x13BE3B0", Offset = "0x13BE3B0", VA = "0x13BE3B0")]
		public void OnPlayerSettingsUpdate(GenericSaveData options)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x13BEE50", Offset = "0x13BEE50", VA = "0x13BEE50")]
		public void Flush()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x13BEF64", Offset = "0x13BEF64", VA = "0x13BEF64")]
		public AnalyticsHandler()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class AnalyticsInit : MonoBehaviour
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20003ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A704", Offset = "0xE6A704")]
		private struct <Start>d__0 : IAsyncStateMachine
		{
			[Token(Token = "0x4001247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnalyticsInit <>4__this;

			[Token(Token = "0x400124A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x400124B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<List<string>> <>u__2;

			[Token(Token = "0x60014FD")]
			[Address(RVA = "0x169E320", Offset = "0x169E320", VA = "0x169E320", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x169E86C", Offset = "0x169E86C", VA = "0x169E86C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x13BEFE8", Offset = "0x13BEFE8", VA = "0x13BEFE8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xE907A4", Offset = "0xE907A4")]
		private void Start()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x13BF0C8", Offset = "0x13BF0C8", VA = "0x13BF0C8")]
		public AnalyticsInit()
		{
		}
	}
}
namespace MazeTheory.Achievements
{
	[Token(Token = "0x20003EE")]
	public enum UnlockType
	{
		[Token(Token = "0x400124D")]
		String,
		[Token(Token = "0x400124E")]
		Integer
	}
	[Serializable]
	[Token(Token = "0x20003EF")]
	public class AchievementData
	{
		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ID;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ProgressDataID;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnlockType UnlockType;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int IntegerValue;

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x13BBF98", Offset = "0x13BBF98", VA = "0x13BBF98")]
		public AchievementData()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE6A714", Offset = "0xE6A714")]
	public sealed class AchievementDatabase : ScriptableObject
	{
		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AchievementData[] Data;

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x13BBFA0", Offset = "0x13BBFA0", VA = "0x13BBFA0")]
		public AchievementDatabase()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public sealed class AchievementsManager : MonoBehaviour
	{
		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AchievementDatabase _database;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _dataCount;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly HashSet<string> _unlockedAchievements;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IAchievementsPlatform _platform;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialised;

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x13BC034", Offset = "0x13BC034", VA = "0x13BC034")]
		public static void Init()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x13BC148", Offset = "0x13BC148", VA = "0x13BC148")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x13BC210", Offset = "0x13BC210", VA = "0x13BC210")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE90814", Offset = "0xE90814")]
		private void Update()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x13BC3F4", Offset = "0x13BC3F4", VA = "0x13BC3F4")]
		private void TryUnlockAchievement(string id)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x13BC4B8", Offset = "0x13BC4B8", VA = "0x13BC4B8")]
		public AchievementsManager()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public interface IAchievementsPlatform
	{
		[Token(Token = "0x6001506")]
		void Initialize(Action onComplete, Action error);

		[Token(Token = "0x6001507")]
		void EarnAchievement(string platformAchievementID, Action onComplete);

		[Token(Token = "0x6001508")]
		void DebugResetAchievements();
	}
	[Token(Token = "0x20003F3")]
	public class MT_AchievementsEditor : IAchievementsPlatform
	{
		[Token(Token = "0x6001509")]
		[Address(RVA = "0x1122AD8", Offset = "0x1122AD8", VA = "0x1122AD8", Slot = "4")]
		public void Initialize(Action onComplete, Action error)
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x1122AEC", Offset = "0x1122AEC", VA = "0x1122AEC", Slot = "5")]
		public void EarnAchievement(string platformAchievementID, Action onComplete)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x1122B4C", Offset = "0x1122B4C", VA = "0x1122B4C", Slot = "6")]
		public void DebugResetAchievements()
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x1122B9C", Offset = "0x1122B9C", VA = "0x1122B9C")]
		public MT_AchievementsEditor()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class MT_AchievementsOculus : IAchievementsPlatform
	{
		[Token(Token = "0x20003F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A774", Offset = "0xE6A774")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onComplete;

			[Token(Token = "0x6001511")]
			[Address(RVA = "0x1035810", Offset = "0x1035810", VA = "0x1035810")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001512")]
			[Address(RVA = "0x1035818", Offset = "0x1035818", VA = "0x1035818")]
			internal void <EarnAchievement>b__0(Message<AchievementUpdate> message)
			{
			}
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x1122BA4", Offset = "0x1122BA4", VA = "0x1122BA4", Slot = "4")]
		public void Initialize(Action onComplete, Action error)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x1122BB8", Offset = "0x1122BB8", VA = "0x1122BB8", Slot = "5")]
		public void EarnAchievement(string platformAchievementID, Action onComplete)
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x1122CC4", Offset = "0x1122CC4", VA = "0x1122CC4", Slot = "6")]
		public void DebugResetAchievements()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x1122D14", Offset = "0x1122D14", VA = "0x1122D14")]
		public MT_AchievementsOculus()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public class MT_AchievementsPlatformIDs
	{
		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<string, string> _currentPlatformAchievementIDDictionary;

		[Token(Token = "0x400125B")]
		private const char RowSplit = '\n';

		[Token(Token = "0x400125C")]
		private const char ColumnSplit = '\t';

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x1122D1C", Offset = "0x1122D1C", VA = "0x1122D1C")]
		public void SetupPlatformAchievementDictionary()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x1123078", Offset = "0x1123078", VA = "0x1123078")]
		public string GetPlatformAchievementID(string achievementID)
		{
			return null;
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x1123170", Offset = "0x1123170", VA = "0x1123170")]
		public MT_AchievementsPlatformIDs()
		{
		}
	}
}
namespace MazeTheory.Peaky.MiniGames
{
	[Token(Token = "0x20003F7")]
	public sealed class ShootingGallery : MonoBehaviour
	{
		[Token(Token = "0x20003F8")]
		public enum ScoreRank
		{
			[Token(Token = "0x4001267")]
			Fail,
			[Token(Token = "0x4001268")]
			Bronze,
			[Token(Token = "0x4001269")]
			Silver,
			[Token(Token = "0x400126A")]
			Gold
		}

		[Serializable]
		[Token(Token = "0x20003F9")]
		private class ScoreRankData
		{
			[Token(Token = "0x400126B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int RequiredScore;

			[Token(Token = "0x400126C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ScoreRank ScoreRank;

			[Token(Token = "0x600151E")]
			[Address(RVA = "0x32C87B8", Offset = "0x32C87B8", VA = "0x32C87B8")]
			public ScoreRankData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A784", Offset = "0xE6A784")]
		private sealed class <>c
		{
			[Token(Token = "0x400126D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400126E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ScoreRankData, int> <>9__18_0;

			[Token(Token = "0x6001520")]
			[Address(RVA = "0x32C8798", Offset = "0x32C8798", VA = "0x32C8798")]
			public <>c()
			{
			}

			[Token(Token = "0x6001521")]
			[Address(RVA = "0x32C87A0", Offset = "0x32C87A0", VA = "0x32C87A0")]
			internal int <GetScoreRank>b__18_0(ScoreRankData x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScoreRankData[] rankData;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string shootingGalleryID;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _bronzeMedal;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _silverMedal;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _goldMedal;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshPro currentScoreText;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshPro highScoreText;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _currentScore;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _highScore;

		[Token(Token = "0x170002A0")]
		private string ProgressionID
		{
			[Token(Token = "0x6001516")]
			[Address(RVA = "0x32DC0AC", Offset = "0x32DC0AC", VA = "0x32DC0AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x32DC0FC", Offset = "0x32DC0FC", VA = "0x32DC0FC")]
		public void ResetScore()
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x32DC194", Offset = "0x32DC194", VA = "0x32DC194")]
		public void IncreaseScore(int amount)
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x32DC2E4", Offset = "0x32DC2E4", VA = "0x32DC2E4")]
		public void UpdateHighScore()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x32DC5C4", Offset = "0x32DC5C4", VA = "0x32DC5C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x32DC460", Offset = "0x32DC460", VA = "0x32DC460")]
		private void UpdateMedal()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x32DC6CC", Offset = "0x32DC6CC", VA = "0x32DC6CC")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE9088C", Offset = "0xE9088C")]
		public ScoreRank GetScoreRank()
		{
			return default(ScoreRank);
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x32DC864", Offset = "0x32DC864", VA = "0x32DC864")]
		public ShootingGallery()
		{
		}
	}
}
namespace MazeTheory.MenuSystem
{
	[Token(Token = "0x20003FB")]
	public class EndOfDemoMenuController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A794", Offset = "0xE6A794")]
		private sealed class <>c
		{
			[Token(Token = "0x400126F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__1_0;

			[Token(Token = "0x6001526")]
			[Address(RVA = "0x103077C", Offset = "0x103077C", VA = "0x103077C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001527")]
			[Address(RVA = "0x1030784", Offset = "0x1030784", VA = "0x1030784")]
			internal void <OnMainMenu>b__1_0()
			{
			}
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x100BD60", Offset = "0x100BD60", VA = "0x100BD60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x100BF14", Offset = "0x100BF14", VA = "0x100BF14")]
		public void OnMainMenu()
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x100C0CC", Offset = "0x100C0CC", VA = "0x100C0CC")]
		public EndOfDemoMenuController()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public static class GameOverBridge
	{
		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string ReasonID;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string LocationName;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Chapter Chapter;
	}
	[Token(Token = "0x20003FE")]
	public class GameOverMenuController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A7A4", Offset = "0xE6A7A4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__6_0;

			[Token(Token = "0x6001532")]
			[Address(RVA = "0x1031514", Offset = "0x1031514", VA = "0x1031514")]
			public <>c()
			{
			}

			[Token(Token = "0x6001533")]
			[Address(RVA = "0x103151C", Offset = "0x103151C", VA = "0x103151C")]
			internal bool <ReleaseItemsAndDisableHolsters>b__6_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A7B4", Offset = "0xE6A7B4")]
		private sealed class <ReleaseItemsAndDisableHolsters>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001277")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001278")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001537")]
				[Address(RVA = "0x10317AC", Offset = "0x10317AC", VA = "0x10317AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001539")]
				[Address(RVA = "0x10317F4", Offset = "0x10317F4", VA = "0x10317F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001534")]
			[Address(RVA = "0x1031580", Offset = "0x1031580", VA = "0x1031580")]
			[DebuggerHidden]
			public <ReleaseItemsAndDisableHolsters>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001535")]
			[Address(RVA = "0x10315AC", Offset = "0x10315AC", VA = "0x10315AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001536")]
			[Address(RVA = "0x10315B0", Offset = "0x10315B0", VA = "0x10315B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001538")]
			[Address(RVA = "0x10317B4", Offset = "0x10317B4", VA = "0x10317B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshPro reasonText;

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x10D0F78", Offset = "0x10D0F78", VA = "0x10D0F78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x10D1210", Offset = "0x10D1210", VA = "0x10D1210")]
		private void Start()
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x10D134C", Offset = "0x10D134C", VA = "0x10D134C")]
		public void OnContinue()
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x10D1460", Offset = "0x10D1460", VA = "0x10D1460")]
		public void OnLoad()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x10D14C8", Offset = "0x10D14C8", VA = "0x10D14C8")]
		public void OnMainMenu()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x10D11B4", Offset = "0x10D11B4", VA = "0x10D11B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE90904", Offset = "0xE90904")]
		private IEnumerator ReleaseItemsAndDisableHolsters()
		{
			return null;
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x10D1428", Offset = "0x10D1428", VA = "0x10D1428")]
		private void ReactivateHolsters()
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x10D154C", Offset = "0x10D154C", VA = "0x10D154C")]
		public void ToggleIdlePointers(bool enabled)
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x10D15B8", Offset = "0x10D15B8", VA = "0x10D15B8")]
		public GameOverMenuController()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public class HeightOptionsMenu : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000402")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A7C4", Offset = "0xE6A7C4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__13_0;

			[Token(Token = "0x6001547")]
			[Address(RVA = "0x1031C50", Offset = "0x1031C50", VA = "0x1031C50")]
			public <>c()
			{
			}

			[Token(Token = "0x6001548")]
			[Address(RVA = "0x1031C58", Offset = "0x1031C58", VA = "0x1031C58")]
			internal bool <DisplayMenu>b__13_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000403")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A7D4", Offset = "0xE6A7D4")]
		private sealed class <DisplayMenu>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HeightOptionsMenu <>4__this;

			[Token(Token = "0x170002A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600154C")]
				[Address(RVA = "0x1031F0C", Offset = "0x1031F0C", VA = "0x1031F0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600154E")]
				[Address(RVA = "0x1031F54", Offset = "0x1031F54", VA = "0x1031F54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001549")]
			[Address(RVA = "0x1031CF4", Offset = "0x1031CF4", VA = "0x1031CF4")]
			[DebuggerHidden]
			public <DisplayMenu>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600154A")]
			[Address(RVA = "0x1031D20", Offset = "0x1031D20", VA = "0x1031D20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600154B")]
			[Address(RVA = "0x1031D24", Offset = "0x1031D24", VA = "0x1031D24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600154D")]
			[Address(RVA = "0x1031F14", Offset = "0x1031F14", VA = "0x1031F14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject menuParent;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject menu;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button standingButton;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button sittingButton;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject optionSelect;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject standingResult;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject sittingResult;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform _cameraTransform;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool HasBeenSet;

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x10D9E00", Offset = "0x10D9E00", VA = "0x10D9E00")]
		private void Awake()
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x10D9E28", Offset = "0x10D9E28", VA = "0x10D9E28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x10D9F14", Offset = "0x10D9F14", VA = "0x10D9F14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x10DA000", Offset = "0x10DA000", VA = "0x10DA000")]
		public void Show()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x10DA04C", Offset = "0x10DA04C", VA = "0x10DA04C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE909B4", Offset = "0xE909B4")]
		private IEnumerator DisplayMenu()
		{
			return null;
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x10DA0C4", Offset = "0x10DA0C4", VA = "0x10DA0C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x10DA154", Offset = "0x10DA154", VA = "0x10DA154")]
		private void CloseMenu()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x10DA174", Offset = "0x10DA174", VA = "0x10DA174")]
		public void OnStandingButtonClicked()
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x10DA254", Offset = "0x10DA254", VA = "0x10DA254")]
		public void OnSittingButtonClicked()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x10DA250", Offset = "0x10DA250", VA = "0x10DA250")]
		private void ShowStandingResult()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x10DA354", Offset = "0x10DA354", VA = "0x10DA354")]
		private void ShowSittingResult()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x10DA358", Offset = "0x10DA358", VA = "0x10DA358")]
		public HeightOptionsMenu()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class MT_DialMenuOption : MonoBehaviour
	{
		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_UIButton decrease;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_UIButton increase;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image illustrationImage;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI dialText;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string spriteRootFolder;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<bool> OnButton;

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x11357B8", Offset = "0x11357B8", VA = "0x11357B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x11358A4", Offset = "0x11358A4", VA = "0x11358A4")]
		private void HandleOnButton(bool willIncrease)
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x1135914", Offset = "0x1135914", VA = "0x1135914")]
		public void UpdateDial(string newText)
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x1135A04", Offset = "0x1135A04", VA = "0x1135A04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x1135A40", Offset = "0x1135A40", VA = "0x1135A40")]
		public void ResetOption()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x1135A4C", Offset = "0x1135A4C", VA = "0x1135A4C")]
		public MT_DialMenuOption()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x1135A54", Offset = "0x1135A54", VA = "0x1135A54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90A64", Offset = "0xE90A64")]
		private void <Awake>b__6_0()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x1135A5C", Offset = "0x1135A5C", VA = "0x1135A5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90A74", Offset = "0xE90A74")]
		private void <Awake>b__6_1()
		{
		}
	}
	[Token(Token = "0x2000405")]
	public class MT_DropdownMenuOption : MonoBehaviour
	{
		[Token(Token = "0x2000406")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A7E4", Offset = "0xE6A7E4")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index1;

			[Token(Token = "0x4001294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MT_DropdownMenuOption <>4__this;

			[Token(Token = "0x6001563")]
			[Address(RVA = "0x10369D4", Offset = "0x10369D4", VA = "0x10369D4")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001564")]
			[Address(RVA = "0x10369DC", Offset = "0x10369DC", VA = "0x10369DC")]
			internal void <InitializeButtons>b__0()
			{
			}
		}

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_UIButton currentSelected;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_UIToggleButton optionTemplate;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject optionsBody;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MT_UIToggleButton[] _buttons;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] _options;

		[Token(Token = "0x14000018")]
		public event Action<int> OnButton
		{
			[Token(Token = "0x6001557")]
			[Address(RVA = "0x15BCCDC", Offset = "0x15BCCDC", VA = "0x15BCCDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90A84", Offset = "0xE90A84")]
			add
			{
			}
			[Token(Token = "0x6001558")]
			[Address(RVA = "0x15BCD7C", Offset = "0x15BCD7C", VA = "0x15BCD7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90A94", Offset = "0xE90A94")]
			remove
			{
			}
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x15BCE1C", Offset = "0x15BCE1C", VA = "0x15BCE1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x15BCEB8", Offset = "0x15BCEB8", VA = "0x15BCEB8")]
		public void ResetOption()
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x15BCEC4", Offset = "0x15BCEC4", VA = "0x15BCEC4")]
		private void HandleOnCurrentClicked()
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x15BCF24", Offset = "0x15BCF24", VA = "0x15BCF24")]
		public void InitializeButtons(int current, string[] options)
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x15BD188", Offset = "0x15BD188", VA = "0x15BD188")]
		private void HandleOnButton(int buttonIndex)
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x15BD230", Offset = "0x15BD230", VA = "0x15BD230")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x15BD2A8", Offset = "0x15BD2A8", VA = "0x15BD2A8")]
		public void SetButtons(IReadOnlyList<bool> selectedList)
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x15BD470", Offset = "0x15BD470", VA = "0x15BD470")]
		public bool[] GetButtonsBooleans(int selectedIndex = -1)
		{
			return null;
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x15BCECC", Offset = "0x15BCECC", VA = "0x15BCECC")]
		private void SetOptionsBodyActive(bool isActive)
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x15BD550", Offset = "0x15BD550", VA = "0x15BD550")]
		public MT_DropdownMenuOption()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public static class MT_MenuSaveSlots
	{
		[Serializable]
		[Token(Token = "0x2000408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A7F4", Offset = "0xE6A7F4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__6_0;

			[Token(Token = "0x600156D")]
			[Address(RVA = "0x103B5DC", Offset = "0x103B5DC", VA = "0x103B5DC")]
			public <>c()
			{
			}

			[Token(Token = "0x600156E")]
			[Address(RVA = "0x103B5E4", Offset = "0x103B5E4", VA = "0x103B5E4")]
			internal void <Load>b__6_0()
			{
			}
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x10F035C", Offset = "0x10F035C", VA = "0x10F035C")]
		public static bool HasPlayData(int saveGameSlotIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x10F03CC", Offset = "0x10F03CC", VA = "0x10F03CC")]
		public static string GetSaveSlotNameString(int saveGameSlotIndex, bool canReturnEmpty)
		{
			return null;
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x10F04E4", Offset = "0x10F04E4", VA = "0x10F04E4")]
		public static string GetSaveSlotActString(int saveGameSlotIndex)
		{
			return null;
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x10F0700", Offset = "0x10F0700", VA = "0x10F0700")]
		public static string GetSaveSlotPlaytimeString(int saveGameSlotIndex)
		{
			return null;
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x10EDF7C", Offset = "0x10EDF7C", VA = "0x10EDF7C")]
		public static void ContinueLatest()
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x10EE004", Offset = "0x10EE004", VA = "0x10EE004")]
		public static void LoadSaveGameSlot(int saveGameSlotIndex)
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x10F0870", Offset = "0x10F0870", VA = "0x10F0870")]
		private static void Load(SaveSlotData slot)
		{
		}
	}
	[Token(Token = "0x2000409")]
	public abstract class MT_MenuScreen : MonoBehaviour
	{
		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_UIButton backButton;

		[Token(Token = "0x170002A5")]
		public abstract string ScreenId
		{
			[Token(Token = "0x6001571")]
			get;
		}

		[Token(Token = "0x14000019")]
		public event Action OnBack
		{
			[Token(Token = "0x600156F")]
			[Address(RVA = "0x10ED640", Offset = "0x10ED640", VA = "0x10ED640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90AA4", Offset = "0xE90AA4")]
			add
			{
			}
			[Token(Token = "0x6001570")]
			[Address(RVA = "0x10F09D0", Offset = "0x10F09D0", VA = "0x10F09D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90AB4", Offset = "0xE90AB4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x10F0A70", Offset = "0x10F0A70", VA = "0x10F0A70", Slot = "5")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x10F0B60", Offset = "0x10F0B60", VA = "0x10F0B60", Slot = "6")]
		public virtual void ResetScreen()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x10F0B6C", Offset = "0x10F0B6C", VA = "0x10F0B6C")]
		protected MT_MenuScreen()
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x10F0B74", Offset = "0x10F0B74", VA = "0x10F0B74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90AC4", Offset = "0xE90AC4")]
		private void <Initialize>b__6_0()
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class MT_MenuStateMachine : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200040B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A804", Offset = "0xE6A804")]
		private sealed class <>c__8<T> where T : MT_MenuScreen
		{
			[Token(Token = "0x400129C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__8<T> <>9;

			[Token(Token = "0x400129D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<MT_MenuScreen, bool> <>9__8_0;

			[Token(Token = "0x6001581")]
			public <>c__8()
			{
			}

			[Token(Token = "0x6001582")]
			internal bool <GetScreen>b__8_0(MT_MenuScreen mainScreen)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected MT_MenuScreen[] mainScreens;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isInitialized;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MT_MenuScreen _currentScreen;

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x10F0B88", Offset = "0x10F0B88", VA = "0x10F0B88")]
		protected void Initialize(bool willReleaseSystemResources)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x10ED2C4", Offset = "0x10ED2C4", VA = "0x10ED2C4")]
		protected void Initialize(bool isMenuModeOn, bool isToggleMenuAffected, bool willReleaseSystemResources)
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x10F0C78", Offset = "0x10F0C78", VA = "0x10F0C78")]
		protected MT_MenuScreen GetCurrentScreen()
		{
			return null;
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x10F0C80", Offset = "0x10F0C80", VA = "0x10F0C80")]
		protected string GetCurrentScreenName()
		{
			return null;
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x10F0D30", Offset = "0x10F0D30", VA = "0x10F0D30")]
		protected Type GetCurrentScreenType()
		{
			return null;
		}

		[Token(Token = "0x600157B")]
		protected T GetScreen<T>() where T : MT_MenuScreen
		{
			return null;
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x10F0C14", Offset = "0x10F0C14", VA = "0x10F0C14")]
		private void ReleaseSystemResources()
		{
		}

		[Token(Token = "0x600157D")]
		protected T SetActiveScreen<T>() where T : MT_MenuScreen
		{
			return null;
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x10F0DC4", Offset = "0x10F0DC4", VA = "0x10F0DC4")]
		protected MT_MenuScreen SetActiveScreen(int screenIndex)
		{
			return null;
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x10EE084", Offset = "0x10EE084", VA = "0x10EE084")]
		public MT_MenuStateMachine()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class MT_SaveGameSlotElement : MonoBehaviour
	{
		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI header;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI info1;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI info2;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_UIButton slotButton;

		[Token(Token = "0x170002A6")]
		public TextMeshProUGUI Header
		{
			[Token(Token = "0x6001583")]
			[Address(RVA = "0x12A6D34", Offset = "0x12A6D34", VA = "0x12A6D34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A7")]
		public TextMeshProUGUI Info1
		{
			[Token(Token = "0x6001584")]
			[Address(RVA = "0x12A6D3C", Offset = "0x12A6D3C", VA = "0x12A6D3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A8")]
		public TextMeshProUGUI Info2
		{
			[Token(Token = "0x6001585")]
			[Address(RVA = "0x12A6D44", Offset = "0x12A6D44", VA = "0x12A6D44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A9")]
		public MT_UIButton SlotButton
		{
			[Token(Token = "0x6001586")]
			[Address(RVA = "0x12A6D4C", Offset = "0x12A6D4C", VA = "0x12A6D4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x12A6D54", Offset = "0x12A6D54", VA = "0x12A6D54")]
		public MT_SaveGameSlotElement()
		{
		}
	}
	[Token(Token = "0x200040D")]
	public class MT_SliderMenuOption : MonoBehaviour
	{
		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_UIButton decrease;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_UIButton increase;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform barRectTransform;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RectTransform handle;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<bool> OnButton;

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x12AB674", Offset = "0x12AB674", VA = "0x12AB674")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x12AB760", Offset = "0x12AB760", VA = "0x12AB760")]
		private void HandleOnButton(bool willIncrease)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x12AB7D0", Offset = "0x12AB7D0", VA = "0x12AB7D0")]
		public void ResetOption()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x12AB7DC", Offset = "0x12AB7DC", VA = "0x12AB7DC")]
		public void UpdateSlider(float newPositionPercentage, float actualValue)
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x12AB860", Offset = "0x12AB860", VA = "0x12AB860")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x12AB89C", Offset = "0x12AB89C", VA = "0x12AB89C")]
		public MT_SliderMenuOption()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x12AB8A4", Offset = "0x12AB8A4", VA = "0x12AB8A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90AD4", Offset = "0xE90AD4")]
		private void <Awake>b__5_0()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x12AB8AC", Offset = "0x12AB8AC", VA = "0x12AB8AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90AE4", Offset = "0xE90AE4")]
		private void <Awake>b__5_1()
		{
		}
	}
	[Token(Token = "0x200040E")]
	public class MT_ToggleMenuOption : MonoBehaviour
	{
		[Token(Token = "0x200040F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A814", Offset = "0xE6A814")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40012A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index1;

			[Token(Token = "0x40012AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MT_ToggleMenuOption <>4__this;

			[Token(Token = "0x6001599")]
			[Address(RVA = "0x32B9C84", Offset = "0x32B9C84", VA = "0x32B9C84")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600159A")]
			[Address(RVA = "0x32B9C8C", Offset = "0x32B9C8C", VA = "0x32B9C8C")]
			internal void <Awake>b__0()
			{
			}
		}

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_UIToggleButton[] buttons;

		[Token(Token = "0x170002AA")]
		public int ButtonsLength
		{
			[Token(Token = "0x6001590")]
			[Address(RVA = "0x12B5B3C", Offset = "0x12B5B3C", VA = "0x12B5B3C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400001A")]
		public event Action<int> OnButton
		{
			[Token(Token = "0x6001591")]
			[Address(RVA = "0x12B5B54", Offset = "0x12B5B54", VA = "0x12B5B54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90AF4", Offset = "0xE90AF4")]
			add
			{
			}
			[Token(Token = "0x6001592")]
			[Address(RVA = "0x12B5BF4", Offset = "0x12B5BF4", VA = "0x12B5BF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90B04", Offset = "0xE90B04")]
			remove
			{
			}
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x12B5C94", Offset = "0x12B5C94", VA = "0x12B5C94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x12B5DD0", Offset = "0x12B5DD0", VA = "0x12B5DD0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x12B5E3C", Offset = "0x12B5E3C", VA = "0x12B5E3C")]
		public void ResetOption()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x12B5E48", Offset = "0x12B5E48", VA = "0x12B5E48")]
		public void SetButtons(IReadOnlyList<bool> selectedList)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x12B5F5C", Offset = "0x12B5F5C", VA = "0x12B5F5C")]
		public bool[] GetButtonsBooleans(int selectedIndex = -1)
		{
			return null;
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x12B6020", Offset = "0x12B6020", VA = "0x12B6020")]
		public MT_ToggleMenuOption()
		{
		}
	}
	[Token(Token = "0x2000410")]
	public class MT_ExitGameScreen : MT_MenuScreen
	{
		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE80794", Offset = "0xE80794")]
		private readonly string <ScreenId>k__BackingField;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_UIButton exitGame;

		[Token(Token = "0x170002AB")]
		public override string ScreenId
		{
			[Token(Token = "0x600159B")]
			[Address(RVA = "0x15BD8F4", Offset = "0x15BD8F4", VA = "0x15BD8F4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90B14", Offset = "0xE90B14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001B")]
		public event Action OnExit
		{
			[Token(Token = "0x600159C")]
			[Address(RVA = "0x15BD8FC", Offset = "0x15BD8FC", VA = "0x15BD8FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90B24", Offset = "0xE90B24")]
			add
			{
			}
			[Token(Token = "0x600159D")]
			[Address(RVA = "0x15BD99C", Offset = "0x15BD99C", VA = "0x15BD99C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90B34", Offset = "0xE90B34")]
			remove
			{
			}
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x15BDA3C", Offset = "0x15BDA3C", VA = "0x15BDA3C", Slot = "5")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x15BDAE4", Offset = "0x15BDAE4", VA = "0x15BDAE4", Slot = "6")]
		public override void ResetScreen()
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x15BDB14", Offset = "0x15BDB14", VA = "0x15BDB14")]
		public MT_ExitGameScreen()
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x15BDB70", Offset = "0x15BDB70", VA = "0x15BDB70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90B44", Offset = "0xE90B44")]
		private void <Initialize>b__7_0()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class MT_LoadGameConfirmationScreen : MT_MenuScreen
	{
		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE807C4", Offset = "0xE807C4")]
		private readonly string <ScreenId>k__BackingField;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_SaveGameSlotElement saveGameSlotElement;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MT_UIButton confirmLoadGame;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI warningText;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _saveGameIndex;

		[Token(Token = "0x170002AC")]
		public override string ScreenId
		{
			[Token(Token = "0x60015A2")]
			[Address(RVA = "0x125A1B0", Offset = "0x125A1B0", VA = "0x125A1B0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90B54", Offset = "0xE90B54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001C")]
		public event Action<int> OnConfirmLoadGame
		{
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0x125A1B8", Offset = "0x125A1B8", VA = "0x125A1B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90B64", Offset = "0xE90B64")]
			add
			{
			}
			[Token(Token = "0x60015A4")]
			[Address(RVA = "0x125A258", Offset = "0x125A258", VA = "0x125A258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90B74", Offset = "0xE90B74")]
			remove
			{
			}
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x125A2F8", Offset = "0x125A2F8", VA = "0x125A2F8", Slot = "5")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x125A3A0", Offset = "0x125A3A0", VA = "0x125A3A0", Slot = "6")]
		public override void ResetScreen()
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x125A3D0", Offset = "0x125A3D0", VA = "0x125A3D0")]
		public void SetSaveGameIndex(int saveGameIndex)
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x125A490", Offset = "0x125A490", VA = "0x125A490")]
		private void SetUpSaveGameSlot(MT_SaveGameSlotElement slotElement, int index)
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x125A5C8", Offset = "0x125A5C8", VA = "0x125A5C8")]
		public MT_LoadGameConfirmationScreen()
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x125A624", Offset = "0x125A624", VA = "0x125A624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90B84", Offset = "0xE90B84")]
		private void <Initialize>b__10_0()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class MT_LoadGameScreen : MT_MenuScreen
	{
		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A824", Offset = "0xE6A824")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x40012B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_LoadGameScreen <>4__this;

			[Token(Token = "0x40012BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int index;

			[Token(Token = "0x60015B2")]
			[Address(RVA = "0x1039694", Offset = "0x1039694", VA = "0x1039694")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x60015B3")]
			[Address(RVA = "0x103969C", Offset = "0x103969C", VA = "0x103969C")]
			internal void <SetUpSaveGameSlot>b__0()
			{
			}
		}

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE80814", Offset = "0xE80814")]
		private readonly string <ScreenId>k__BackingField;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform savedGamesContainer;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MT_SaveGameSlotElement autoSaveGameSlot;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MT_SaveGameSlotElement[] saveGameSlots;

		[Token(Token = "0x170002AD")]
		public override string ScreenId
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0x125A684", Offset = "0x125A684", VA = "0x125A684", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90B94", Offset = "0xE90B94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001D")]
		public event Action<int> OnSaveGameSlotButton
		{
			[Token(Token = "0x60015AC")]
			[Address(RVA = "0x125A68C", Offset = "0x125A68C", VA = "0x125A68C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90BA4", Offset = "0xE90BA4")]
			add
			{
			}
			[Token(Token = "0x60015AD")]
			[Address(RVA = "0x125A72C", Offset = "0x125A72C", VA = "0x125A72C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90BB4", Offset = "0xE90BB4")]
			remove
			{
			}
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x125A7CC", Offset = "0x125A7CC", VA = "0x125A7CC", Slot = "5")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x125AA44", Offset = "0x125AA44", VA = "0x125AA44", Slot = "6")]
		public override void ResetScreen()
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x125A840", Offset = "0x125A840", VA = "0x125A840")]
		private void SetUpSaveGameSlot(MT_SaveGameSlotElement saveGameSlotElement, int index)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x125AA74", Offset = "0x125AA74", VA = "0x125AA74")]
		public MT_LoadGameScreen()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class MT_MainMenu : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000415")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A834", Offset = "0xE6A834")]
		private sealed class <>c
		{
			[Token(Token = "0x40012BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__6_0;

			[Token(Token = "0x60015BD")]
			[Address(RVA = "0x103AF54", Offset = "0x103AF54", VA = "0x103AF54")]
			public <>c()
			{
			}

			[Token(Token = "0x60015BE")]
			[Address(RVA = "0x103AF5C", Offset = "0x103AF5C", VA = "0x103AF5C")]
			internal bool <Init>b__6_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000416")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A844", Offset = "0xE6A844")]
		private sealed class <Init>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_MainMenu <>4__this;

			[Token(Token = "0x170002AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015C2")]
				[Address(RVA = "0x103B494", Offset = "0x103B494", VA = "0x103B494", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015C4")]
				[Address(RVA = "0x103B4DC", Offset = "0x103B4DC", VA = "0x103B4DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015BF")]
			[Address(RVA = "0x103AFF8", Offset = "0x103AFF8", VA = "0x103AFF8")]
			[DebuggerHidden]
			public <Init>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60015C0")]
			[Address(RVA = "0x103B024", Offset = "0x103B024", VA = "0x103B024", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015C1")]
			[Address(RVA = "0x103B028", Offset = "0x103B028", VA = "0x103B028", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015C3")]
			[Address(RVA = "0x103B49C", Offset = "0x103B49C", VA = "0x103B49C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_MenuLogo _menuLogo;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MenuStateMachine _menuStateMachine;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform spawnPoint;

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x10EC544", Offset = "0x10EC544", VA = "0x10EC544")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x10EC588", Offset = "0x10EC588", VA = "0x10EC588")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x10EC6CC", Offset = "0x10EC6CC", VA = "0x10EC6CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x10EC654", Offset = "0x10EC654", VA = "0x10EC654")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE90BC4", Offset = "0xE90BC4")]
		private IEnumerator Init()
		{
			return null;
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x10EC8B0", Offset = "0x10EC8B0", VA = "0x10EC8B0")]
		private void ResetPlayerPosition()
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x10EC744", Offset = "0x10EC744", VA = "0x10EC744")]
		public void ToggleIdlePointers(bool enabled)
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x10EC7B0", Offset = "0x10EC7B0", VA = "0x10EC7B0")]
		public void DisableRecenterPose()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x10ECB44", Offset = "0x10ECB44", VA = "0x10ECB44")]
		public MT_MainMenu()
		{
		}
	}
	[Token(Token = "0x2000417")]
	public class MT_MainMenuStateMachine : MT_MenuStateMachine
	{
		[Token(Token = "0x2000418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A854", Offset = "0xE6A854")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40012C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_MainMenuStateMachine <>4__this;

			[Token(Token = "0x40012C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int slotIndex;

			[Token(Token = "0x60015DB")]
			[Address(RVA = "0x103B4E4", Offset = "0x103B4E4", VA = "0x103B4E4")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60015DC")]
			[Address(RVA = "0x103B4EC", Offset = "0x103B4EC", VA = "0x103B4EC")]
			internal void <SetUpNewGameConfirmationScreen>b__0()
			{
			}
		}

		[Token(Token = "0x40012C3")]
		private const string FirstScene = "Location_SH_FactoryWay";

		[Token(Token = "0x40012C4")]
		private const string FirstWaypoint = "SpawnPoint";

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x10ED294", Offset = "0x10ED294", VA = "0x10ED294")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x10ED370", Offset = "0x10ED370", VA = "0x10ED370")]
		private void SetUpTitleScreen()
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x10ED528", Offset = "0x10ED528", VA = "0x10ED528")]
		private void SetUpNewGameScreen()
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x10ED780", Offset = "0x10ED780", VA = "0x10ED780")]
		private void SetUpNewGameOptionsScreen(int slotIndex)
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x10ED960", Offset = "0x10ED960", VA = "0x10ED960")]
		private void SetUpNewGameConfirmationScreen(int slotIndex)
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x10EDB80", Offset = "0x10EDB80", VA = "0x10EDB80")]
		private void SetUpLoadGameScreen()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x10EDC9C", Offset = "0x10EDC9C", VA = "0x10EDC9C")]
		private void SetUpLoadGameConfirmationScreen(int slotIndex)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x10EDDCC", Offset = "0x10EDDCC", VA = "0x10EDDCC")]
		private void SetUpOptionsScreen()
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x10EDE80", Offset = "0x10EDE80", VA = "0x10EDE80")]
		private void SetUpExitGameScreen()
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x10EDF74", Offset = "0x10EDF74", VA = "0x10EDF74")]
		private void HandleBackToTitleScreen()
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x10EDF78", Offset = "0x10EDF78", VA = "0x10EDF78")]
		private void HandleOnContinueGame()
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x10EDFE4", Offset = "0x10EDFE4", VA = "0x10EDFE4")]
		private void HandleOnNewGame()
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x10EDFE8", Offset = "0x10EDFE8", VA = "0x10EDFE8")]
		private void HandleOnNewGameSaveGameSlotButton(int saveGameIndex)
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x10EDFEC", Offset = "0x10EDFEC", VA = "0x10EDFEC")]
		private void HandleOnNewGameStartButton(int saveGameIndex)
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x10EDFF0", Offset = "0x10EDFF0", VA = "0x10EDFF0")]
		private void HandleOnNewGameConfirmedButton(int saveGameIndex)
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x10EDFF4", Offset = "0x10EDFF4", VA = "0x10EDFF4")]
		private void HandleOnLoadGame()
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x10EDFF8", Offset = "0x10EDFF8", VA = "0x10EDFF8")]
		private void HandleOnLoadGameSaveGameSlotButton(int saveGameIndex)
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x10EDFFC", Offset = "0x10EDFFC", VA = "0x10EDFFC")]
		private void HandleOnLoadGameConfirmedButton(int saveGameIndex)
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x10EE06C", Offset = "0x10EE06C", VA = "0x10EE06C")]
		private void HandleOnOptions()
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x10EE070", Offset = "0x10EE070", VA = "0x10EE070")]
		private void HandleOnExitGame()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x10EE074", Offset = "0x10EE074", VA = "0x10EE074")]
		private void HandleOnExitGameConfirmed()
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x10EE07C", Offset = "0x10EE07C", VA = "0x10EE07C")]
		public MT_MainMenuStateMachine()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class MT_MenuLogo : MonoBehaviour
	{
		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEngine.Animation animation;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer renderer;

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x10EF1C0", Offset = "0x10EF1C0", VA = "0x10EF1C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x10EC56C", Offset = "0x10EC56C", VA = "0x10EC56C")]
		public void ShowLogo()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x10EF22C", Offset = "0x10EF22C", VA = "0x10EF22C")]
		public MT_MenuLogo()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class MT_NewGameConfirmationScreen : MT_MenuScreen
	{
		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE808B4", Offset = "0xE808B4")]
		private readonly string <ScreenId>k__BackingField;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_SaveGameSlotElement saveGameSlotElement;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MT_UIButton confirmStartNewGame;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _saveGameIndex;

		[Token(Token = "0x170002B0")]
		public override string ScreenId
		{
			[Token(Token = "0x60015E0")]
			[Address(RVA = "0x10F9C44", Offset = "0x10F9C44", VA = "0x10F9C44", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90C74", Offset = "0xE90C74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001E")]
		public event Action<int> OnConfirmStartNewGame
		{
			[Token(Token = "0x60015E1")]
			[Address(RVA = "0x10EDAE0", Offset = "0x10EDAE0", VA = "0x10EDAE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90C84", Offset = "0xE90C84")]
			add
			{
			}
			[Token(Token = "0x60015E2")]
			[Address(RVA = "0x10F9C4C", Offset = "0x10F9C4C", VA = "0x10F9C4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90C94", Offset = "0xE90C94")]
			remove
			{
			}
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x10F9CEC", Offset = "0x10F9CEC", VA = "0x10F9CEC", Slot = "5")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x10F9D90", Offset = "0x10F9D90", VA = "0x10F9D90", Slot = "6")]
		public override void ResetScreen()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x10EDACC", Offset = "0x10EDACC", VA = "0x10EDACC")]
		public void SetSaveGameIndex(int saveGameIndex)
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x10F9DC4", Offset = "0x10F9DC4", VA = "0x10F9DC4")]
		private void SetUpSaveGameSlot(MT_SaveGameSlotElement slotElement, int index)
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x10F9EEC", Offset = "0x10F9EEC", VA = "0x10F9EEC")]
		public MT_NewGameConfirmationScreen()
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x10F9F48", Offset = "0x10F9F48", VA = "0x10F9F48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90CA4", Offset = "0xE90CA4")]
		private void <Initialize>b__9_0()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class MT_NewGameOptionsScreen : MT_MenuScreen
	{
		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE808F4", Offset = "0xE808F4")]
		private readonly string <ScreenId>k__BackingField;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_ToggleMenuOption movementType;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MT_ToggleMenuOption turnType;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MT_ToggleMenuOption heightAdjustmentType;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MT_ToggleMenuOption subtitles;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MT_SaveGameSlotElement saveGameSlotElement;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MT_UIButton startNewGame;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _saveGameIndex;

		[Token(Token = "0x170002B1")]
		public override string ScreenId
		{
			[Token(Token = "0x60015E9")]
			[Address(RVA = "0x10F9FA8", Offset = "0x10F9FA8", VA = "0x10F9FA8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90CB4", Offset = "0xE90CB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001F")]
		public event Action<int> OnStartNewGame
		{
			[Token(Token = "0x60015EA")]
			[Address(RVA = "0x10ED8C0", Offset = "0x10ED8C0", VA = "0x10ED8C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90CC4", Offset = "0xE90CC4")]
			add
			{
			}
			[Token(Token = "0x60015EB")]
			[Address(RVA = "0x10F9FB0", Offset = "0x10F9FB0", VA = "0x10F9FB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90CD4", Offset = "0xE90CD4")]
			remove
			{
			}
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x10FA050", Offset = "0x10FA050", VA = "0x10FA050", Slot = "5")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x10FA144", Offset = "0x10FA144", VA = "0x10FA144")]
		private void HandleOnStartNewGame()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x10FA67C", Offset = "0x10FA67C", VA = "0x10FA67C", Slot = "6")]
		public override void ResetScreen()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x10ED8AC", Offset = "0x10ED8AC", VA = "0x10ED8AC")]
		public void SetSaveGameIndex(int saveGameIndex)
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x10FA688", Offset = "0x10FA688", VA = "0x10FA688")]
		private void SetUpSaveGameSlot(MT_SaveGameSlotElement slotElement, int index)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x10FA7B0", Offset = "0x10FA7B0", VA = "0x10FA7B0")]
		private void HandleMovementTypeButtonPressed(int buttonIndex)
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x10FA7B4", Offset = "0x10FA7B4", VA = "0x10FA7B4")]
		private void HandleTurnTypeButtonPressed(int buttonIndex)
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x10FA7B8", Offset = "0x10FA7B8", VA = "0x10FA7B8")]
		private void HandleHeightAdjustmentTypeButtonPressed(int buttonIndex)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x10FA7BC", Offset = "0x10FA7BC", VA = "0x10FA7BC")]
		private void HandleSubtitlesButtonPressed(int buttonIndex)
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x10FA7C0", Offset = "0x10FA7C0", VA = "0x10FA7C0")]
		public MT_NewGameOptionsScreen()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x10FA81C", Offset = "0x10FA81C", VA = "0x10FA81C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90CE4", Offset = "0xE90CE4")]
		private void <Initialize>b__13_0()
		{
		}
	}
	[Token(Token = "0x200041C")]
	public class MT_NewGameScreen : MT_MenuScreen
	{
		[Token(Token = "0x200041D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A864", Offset = "0xE6A864")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40012DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_NewGameScreen <>4__this;

			[Token(Token = "0x40012DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int index;

			[Token(Token = "0x60015FE")]
			[Address(RVA = "0x103DCAC", Offset = "0x103DCAC", VA = "0x103DCAC")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60015FF")]
			[Address(RVA = "0x103DCB4", Offset = "0x103DCB4", VA = "0x103DCB4")]
			internal void <SetUpSaveGameSlot>b__0()
			{
			}
		}

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE80974", Offset = "0xE80974")]
		private readonly string <ScreenId>k__BackingField;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform savedGamesContainer;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MT_SaveGameSlotElement[] saveGameSlots;

		[Token(Token = "0x170002B2")]
		public override string ScreenId
		{
			[Token(Token = "0x60015F7")]
			[Address(RVA = "0x10FA87C", Offset = "0x10FA87C", VA = "0x10FA87C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90CF4", Offset = "0xE90CF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000020")]
		public event Action<int> OnSaveGameSlotButton
		{
			[Token(Token = "0x60015F8")]
			[Address(RVA = "0x10ED6E0", Offset = "0x10ED6E0", VA = "0x10ED6E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90D04", Offset = "0xE90D04")]
			add
			{
			}
			[Token(Token = "0x60015F9")]
			[Address(RVA = "0x10FA884", Offset = "0x10FA884", VA = "0x10FA884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90D14", Offset = "0xE90D14")]
			remove
			{
			}
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x10FA924", Offset = "0x10FA924", VA = "0x10FA924", Slot = "5")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x10FAB88", Offset = "0x10FAB88", VA = "0x10FAB88", Slot = "6")]
		public override void ResetScreen()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x10FA994", Offset = "0x10FA994", VA = "0x10FA994")]
		private void SetUpSaveGameSlot(MT_SaveGameSlotElement saveGameSlotElement, int index)
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x10FABBC", Offset = "0x10FABBC", VA = "0x10FABBC")]
		public MT_NewGameScreen()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public class MT_OptionsScreen : MT_MenuScreen
	{
		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE809B4", Offset = "0xE809B4")]
		private readonly string <ScreenId>k__BackingField;

		[Token(Token = "0x170002B3")]
		public override string ScreenId
		{
			[Token(Token = "0x6001600")]
			[Address(RVA = "0x11050C8", Offset = "0x11050C8", VA = "0x11050C8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90D24", Offset = "0xE90D24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x11050D0", Offset = "0x11050D0", VA = "0x11050D0")]
		public MT_OptionsScreen()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class MT_TitleScreen : MT_MenuScreen
	{
		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE809C4", Offset = "0xE809C4")]
		private readonly string <ScreenId>k__BackingField;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject continueGameObject;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject continueGamePaddingObject;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MT_UIButton continueGameButton;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MT_UIButton newGameButton;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MT_UIButton loadGameButton;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MT_UIButton optionsButton;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MT_UIButton exitGameButton;

		[Token(Token = "0x170002B4")]
		public override string ScreenId
		{
			[Token(Token = "0x6001602")]
			[Address(RVA = "0x12B5190", Offset = "0x12B5190", VA = "0x12B5190", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90D34", Offset = "0xE90D34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000021")]
		public event Action OnContinueGame
		{
			[Token(Token = "0x6001603")]
			[Address(RVA = "0x12B5198", Offset = "0x12B5198", VA = "0x12B5198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90D44", Offset = "0xE90D44")]
			add
			{
			}
			[Token(Token = "0x6001604")]
			[Address(RVA = "0x12B5238", Offset = "0x12B5238", VA = "0x12B5238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90D54", Offset = "0xE90D54")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event Action OnNewGame
		{
			[Token(Token = "0x6001605")]
			[Address(RVA = "0x12B52D8", Offset = "0x12B52D8", VA = "0x12B52D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90D64", Offset = "0xE90D64")]
			add
			{
			}
			[Token(Token = "0x6001606")]
			[Address(RVA = "0x12B5378", Offset = "0x12B5378", VA = "0x12B5378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90D74", Offset = "0xE90D74")]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event Action OnLoadGame
		{
			[Token(Token = "0x6001607")]
			[Address(RVA = "0x12B5418", Offset = "0x12B5418", VA = "0x12B5418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90D84", Offset = "0xE90D84")]
			add
			{
			}
			[Token(Token = "0x6001608")]
			[Address(RVA = "0x12B54B8", Offset = "0x12B54B8", VA = "0x12B54B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90D94", Offset = "0xE90D94")]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event Action OnOptions
		{
			[Token(Token = "0x6001609")]
			[Address(RVA = "0x12B5558", Offset = "0x12B5558", VA = "0x12B5558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90DA4", Offset = "0xE90DA4")]
			add
			{
			}
			[Token(Token = "0x600160A")]
			[Address(RVA = "0x12B55F8", Offset = "0x12B55F8", VA = "0x12B55F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90DB4", Offset = "0xE90DB4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event Action OnExitGame
		{
			[Token(Token = "0x600160B")]
			[Address(RVA = "0x12B5698", Offset = "0x12B5698", VA = "0x12B5698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90DC4", Offset = "0xE90DC4")]
			add
			{
			}
			[Token(Token = "0x600160C")]
			[Address(RVA = "0x12B5738", Offset = "0x12B5738", VA = "0x12B5738")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90DD4", Offset = "0xE90DD4")]
			remove
			{
			}
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x12B57D8", Offset = "0x12B57D8", VA = "0x12B57D8", Slot = "5")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x12B59C0", Offset = "0x12B59C0", VA = "0x12B59C0", Slot = "6")]
		public override void ResetScreen()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x12B5A30", Offset = "0x12B5A30", VA = "0x12B5A30")]
		public void ActivateContinueButton(bool isActive = true)
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x12B5A7C", Offset = "0x12B5A7C", VA = "0x12B5A7C")]
		public MT_TitleScreen()
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x12B5AD8", Offset = "0x12B5AD8", VA = "0x12B5AD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90DE4", Offset = "0xE90DE4")]
		private void <Initialize>b__25_0()
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x12B5AEC", Offset = "0x12B5AEC", VA = "0x12B5AEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90DF4", Offset = "0xE90DF4")]
		private void <Initialize>b__25_1()
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x12B5B00", Offset = "0x12B5B00", VA = "0x12B5B00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90E04", Offset = "0xE90E04")]
		private void <Initialize>b__25_2()
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x12B5B14", Offset = "0x12B5B14", VA = "0x12B5B14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90E14", Offset = "0xE90E14")]
		private void <Initialize>b__25_3()
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x12B5B28", Offset = "0x12B5B28", VA = "0x12B5B28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90E24", Offset = "0xE90E24")]
		private void <Initialize>b__25_4()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class AudioOptionsState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Slider mainVolumeSlider;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Slider effectsVolumeSlider;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Slider musicVolumeSlider;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button resetButton;

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x13C0980", Offset = "0x13C0980", VA = "0x13C0980", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x13C09C4", Offset = "0x13C09C4", VA = "0x13C09C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x13C0BC8", Offset = "0x13C0BC8", VA = "0x13C0BC8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x13C0D98", Offset = "0x13C0D98", VA = "0x13C0D98", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x13C0DC0", Offset = "0x13C0DC0", VA = "0x13C0DC0", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x13C0DE8", Offset = "0x13C0DE8", VA = "0x13C0DE8")]
		private void HandleMainVolumeSliderChanged(float value)
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x13C0EA0", Offset = "0x13C0EA0", VA = "0x13C0EA0")]
		private void HandleEffectsVolumeSliderChanged(float value)
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x13C0F58", Offset = "0x13C0F58", VA = "0x13C0F58")]
		private void HandleMusicVolumeSliderChanged(float value)
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x13C1010", Offset = "0x13C1010", VA = "0x13C1010")]
		private void HandleResetAllToDefaults()
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x13C0B9C", Offset = "0x13C0B9C", VA = "0x13C0B9C")]
		private void Setup()
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x13C11AC", Offset = "0x13C11AC", VA = "0x13C11AC")]
		private void SetupMasterVolumeSlider()
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x13C1240", Offset = "0x13C1240", VA = "0x13C1240")]
		private void SetupEffectsVolumeSlider()
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x13C12D4", Offset = "0x13C12D4", VA = "0x13C12D4")]
		private void SetupMusicVolumeSlider()
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x13C1368", Offset = "0x13C1368", VA = "0x13C1368")]
		public AudioOptionsState()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class ChapterSelectState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button backButton;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject chapterButtonTemplate;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RectTransform chapterButtonTemplateRectTransform;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RectTransform scrollContent;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private VerticalLayoutGroup verticalLayoutGroup;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _startChapterClicked;

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x12076B4", Offset = "0x12076B4", VA = "0x12076B4", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x12076F8", Offset = "0x12076F8", VA = "0x12076F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x1207878", Offset = "0x1207878", VA = "0x1207878")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x1207914", Offset = "0x1207914", VA = "0x1207914")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x12079B0", Offset = "0x12079B0", VA = "0x12079B0", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x12079D8", Offset = "0x12079D8", VA = "0x12079D8", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x1207A00", Offset = "0x1207A00", VA = "0x1207A00")]
		private void HandleBackButtonClick()
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x1207A58", Offset = "0x1207A58", VA = "0x1207A58")]
		private void HandleChapterButtonClick(ChapterInfo chapterInfo)
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x12076FC", Offset = "0x12076FC", VA = "0x12076FC")]
		private void CreateChapterButtons()
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x1207BD8", Offset = "0x1207BD8", VA = "0x1207BD8")]
		private void CreateChapterButton(ChapterInfo chapterInfo)
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x1207D0C", Offset = "0x1207D0C", VA = "0x1207D0C")]
		public ChapterSelectState()
		{
		}
	}
	[Token(Token = "0x2000422")]
	public class ComfortOptionsState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEngine.UI.Toggle postureToggle;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEngine.UI.Toggle vibrationToggle;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEngine.UI.Toggle vignetteToggle;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button resetButton;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityEngine.UI.Toggle postureToggleTwin;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private UnityEngine.UI.Toggle vibrationToggleTwin;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityEngine.UI.Toggle vignetteToggleTwin;

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x12151EC", Offset = "0x12151EC", VA = "0x12151EC", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x1215230", Offset = "0x1215230", VA = "0x1215230")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x1215434", Offset = "0x1215434", VA = "0x1215434")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x1215604", Offset = "0x1215604", VA = "0x1215604", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x121562C", Offset = "0x121562C", VA = "0x121562C", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x1215654", Offset = "0x1215654", VA = "0x1215654")]
		private void HandlePostureToggleChanged(bool value)
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x1215820", Offset = "0x1215820", VA = "0x1215820")]
		private void HandleVibrationToggleChanged(bool value)
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x1215904", Offset = "0x1215904", VA = "0x1215904")]
		private void HandleVignetteToggleChanged(bool value)
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x12159E8", Offset = "0x12159E8", VA = "0x12159E8")]
		private void HandleResetAllToDefaults()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x1215408", Offset = "0x1215408", VA = "0x1215408")]
		private void Setup()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x1215B5C", Offset = "0x1215B5C", VA = "0x1215B5C")]
		private void SetupPostureToggle()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x1215D1C", Offset = "0x1215D1C", VA = "0x1215D1C")]
		private void SetupVibrationToggle()
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x1215EDC", Offset = "0x1215EDC", VA = "0x1215EDC")]
		private void SetupVignetteToggle()
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x121609C", Offset = "0x121609C", VA = "0x121609C")]
		public ComfortOptionsState()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class CreditsState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button backButton;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject creditsControllerPrefab;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject ccp;

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xFFC818", Offset = "0xFFC818", VA = "0xFFC818", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xFFC85C", Offset = "0xFFC85C", VA = "0xFFC85C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xFFC9D8", Offset = "0xFFC9D8", VA = "0xFFC9D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xFFCAB0", Offset = "0xFFCAB0", VA = "0xFFCAB0", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xFFCAD8", Offset = "0xFFCAD8", VA = "0xFFCAD8", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xFFCB00", Offset = "0xFFCB00", VA = "0xFFCB00")]
		private void HandleBackButtonClick()
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xFFCB58", Offset = "0xFFCB58", VA = "0xFFCB58")]
		public CreditsState()
		{
		}
	}
	[Token(Token = "0x2000424")]
	public class CustomisationState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button confirmButton;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button backButton;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AvatarConfigurationOptionsSettings avatarSettings;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CustomisationSelector hatSelector;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CustomisationSelector headSelector;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CustomisationSelector gloveSelector;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private CustomisationSelector torsoSelector;

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xFFD714", Offset = "0xFFD714", VA = "0xFFD714", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xFFD758", Offset = "0xFFD758", VA = "0xFFD758")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xFFD9B4", Offset = "0xFFD9B4", VA = "0xFFD9B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xFFDAD0", Offset = "0xFFDAD0", VA = "0xFFDAD0", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xFFDAF8", Offset = "0xFFDAF8", VA = "0xFFDAF8", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xFFDB20", Offset = "0xFFDB20", VA = "0xFFDB20")]
		private void MoveToSocialVR()
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xFFDC68", Offset = "0xFFDC68", VA = "0xFFDC68")]
		private void ExitMPSession()
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xFFDD1C", Offset = "0xFFDD1C", VA = "0xFFDD1C")]
		private void HandleBackButtonClick()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xFFDD74", Offset = "0xFFDD74", VA = "0xFFDD74")]
		public CustomisationState()
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xFFDD7C", Offset = "0xFFDD7C", VA = "0xFFDD7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90E34", Offset = "0xE90E34")]
		private void <ExitMPSession>b__16_0()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class MiscOptionsState : MonoBehaviour, IMenuState
	{
		[Serializable]
		[Token(Token = "0x2000426")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A874", Offset = "0xE6A874")]
		private sealed class <>c
		{
			[Token(Token = "0x4001322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<LangSupport, string> <>9__26_0;

			[Token(Token = "0x6001660")]
			[Address(RVA = "0x32BBAEC", Offset = "0x32BBAEC", VA = "0x32BBAEC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001661")]
			[Address(RVA = "0x32BBAF4", Offset = "0x32BBAF4", VA = "0x32BBAF4")]
			internal string <SetupLanguageCarousel>b__26_0(LangSupport x)
			{
				return null;
			}
		}

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UICarousel languageCarousel;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button credits;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button premiumContentButton;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button resetButton;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEngine.UI.Toggle subtitleToggle;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UnityEngine.UI.Toggle subtitleToggleTwin;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UnityEngine.UI.Toggle aimAssistToggle;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private UnityEngine.UI.Toggle aimAssistToggleTwin;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool isInMainMenu;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[SerializeField]
		private bool DEBUGPremiumButton;

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x11412DC", Offset = "0x11412DC", VA = "0x11412DC", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x1141320", Offset = "0x1141320", VA = "0x1141320")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x11415EC", Offset = "0x11415EC", VA = "0x11415EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x1141884", Offset = "0x1141884", VA = "0x1141884", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x11418AC", Offset = "0x11418AC", VA = "0x11418AC", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x11418D4", Offset = "0x11418D4", VA = "0x11418D4")]
		private void HandlePremiumContentClicked()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x1141928", Offset = "0x1141928", VA = "0x1141928")]
		private void HandleLanguageCarouselChanged(int index)
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x11419C0", Offset = "0x11419C0", VA = "0x11419C0")]
		private void HandleCreditsClicked()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x1141A14", Offset = "0x1141A14", VA = "0x1141A14")]
		private void HandleSubtitlesToggleChanged(bool value)
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x1141AF8", Offset = "0x1141AF8", VA = "0x1141AF8")]
		private void HandleAimAssistToggleChanged(bool value)
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x1141BDC", Offset = "0x1141BDC", VA = "0x1141BDC")]
		private void HandleResetAllToDefaults()
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x11415B8", Offset = "0x11415B8", VA = "0x11415B8")]
		private void Setup()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x1141F5C", Offset = "0x1141F5C", VA = "0x1141F5C")]
		private void SetupPremiumContentButton()
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x1141D8C", Offset = "0x1141D8C", VA = "0x1141D8C")]
		private void SetupLanguageCarousel()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x1141FEC", Offset = "0x1141FEC", VA = "0x1141FEC")]
		private void SetupSubtitleToggle()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x11421E8", Offset = "0x11421E8", VA = "0x11421E8")]
		private void SetUpAimAssistToggle()
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x11423E4", Offset = "0x11423E4", VA = "0x11423E4")]
		public MiscOptionsState()
		{
		}
	}
	[Token(Token = "0x2000427")]
	public class MovementOptionsState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEngine.UI.Toggle blinkToggle;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEngine.UI.Toggle snapToggle;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Slider snapSlider;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Slider smoothSlider;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Slider movementSpeedSlider;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button resetButton;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityEngine.UI.Toggle blinkToggleTwin;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UnityEngine.UI.Toggle snapToggleTwin;

		[Token(Token = "0x400132F")]
		private const float MinMoveSpeed = 0.75f;

		[Token(Token = "0x4001330")]
		private const float MaxMoveSpeed = 1.5f;

		[Token(Token = "0x4001331")]
		private const float RunSpeedModifier = 1f;

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x114328C", Offset = "0x114328C", VA = "0x114328C", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x11432D0", Offset = "0x11432D0", VA = "0x11432D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x11435C0", Offset = "0x11435C0", VA = "0x11435C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x114386C", Offset = "0x114386C", VA = "0x114386C", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x1143894", Offset = "0x1143894", VA = "0x1143894", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x11438BC", Offset = "0x11438BC", VA = "0x11438BC")]
		private void HandleBlinkToggleChanged(bool value)
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x11439A4", Offset = "0x11439A4", VA = "0x11439A4")]
		private void HandleSnapToggleChanged(bool value)
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x1143A88", Offset = "0x1143A88", VA = "0x1143A88")]
		private void HandleSnapSliderChanged(float value)
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x1143B68", Offset = "0x1143B68", VA = "0x1143B68")]
		private void HandleSmoothSliderChanged(float value)
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x1143C48", Offset = "0x1143C48", VA = "0x1143C48")]
		private void HandleMovementSpeedSliderChanged(float value)
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x1143DAC", Offset = "0x1143DAC", VA = "0x1143DAC")]
		private void HandleResetAllToDefaults()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x1143584", Offset = "0x1143584", VA = "0x1143584")]
		private void Setup()
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x114400C", Offset = "0x114400C", VA = "0x114400C")]
		private void SetupBlinkToggle()
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x11441CC", Offset = "0x11441CC", VA = "0x11441CC")]
		private void SetupSnapToggle()
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x114438C", Offset = "0x114438C", VA = "0x114438C")]
		private void SetupSnapSlider()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x1144458", Offset = "0x1144458", VA = "0x1144458")]
		private void SetupSmoothSlider()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x1144524", Offset = "0x1144524", VA = "0x1144524")]
		private void SetupMovementSpeedSlider()
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x1144614", Offset = "0x1144614", VA = "0x1144614")]
		public MovementOptionsState()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class MultiplayerConnectingState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x114461C", Offset = "0x114461C", VA = "0x114461C", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x1144660", Offset = "0x1144660", VA = "0x1144660", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x1144744", Offset = "0x1144744", VA = "0x1144744", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x1144784", Offset = "0x1144784", VA = "0x1144784")]
		public void OnAttemptComplete(bool isSuccessful)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x11447FC", Offset = "0x11447FC", VA = "0x11447FC")]
		private void ExitMPSession()
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x11448B0", Offset = "0x11448B0", VA = "0x11448B0")]
		public MultiplayerConnectingState()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x11448B8", Offset = "0x11448B8", VA = "0x11448B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90E44", Offset = "0xE90E44")]
		private void <ExitMPSession>b__7_0()
		{
		}
	}
	[Token(Token = "0x2000429")]
	public class MultiplayerLobbyState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool keyboardActive;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TouchScreenKeyboard overlayKeyboard;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button backButton;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button hostJoinButton;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button joinFriendLobby;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TMP_InputField inputField;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color joinActiveImageColor;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color joinDisabledImageColor;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Image joinButton;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int frameCount;

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x114490C", Offset = "0x114490C", VA = "0x114490C", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x1144950", Offset = "0x1144950", VA = "0x1144950")]
		private void Update()
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x1144C24", Offset = "0x1144C24", VA = "0x1144C24")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x1144E58", Offset = "0x1144E58", VA = "0x1144E58")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x1145030", Offset = "0x1145030", VA = "0x1145030", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x1145058", Offset = "0x1145058", VA = "0x1145058", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x1145080", Offset = "0x1145080", VA = "0x1145080")]
		private void HandleJoinFriendLobby()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x11453C4", Offset = "0x11453C4", VA = "0x11453C4")]
		private void HandleBackButtonClick()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x1145444", Offset = "0x1145444", VA = "0x1145444")]
		private void HandleHostJoinClick()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x11455F8", Offset = "0x11455F8", VA = "0x11455F8")]
		public void DisableOnScreenKeyboard(string text)
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x1144A40", Offset = "0x1144A40", VA = "0x1144A40")]
		private void EnableOnScreenKeyboard()
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x1144AB4", Offset = "0x1144AB4", VA = "0x1144AB4")]
		private void HandleKeyboardClosed()
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x1144B74", Offset = "0x1144B74", VA = "0x1144B74")]
		private void UpdateKeyboardText()
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x114562C", Offset = "0x114562C", VA = "0x114562C")]
		private void SetPlayerRigHands(bool isActive)
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x11456E0", Offset = "0x11456E0", VA = "0x11456E0")]
		private void SetHostButtonInteractable(bool isInteractable)
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x1145310", Offset = "0x1145310", VA = "0x1145310")]
		private void ExitMPSession()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x1145700", Offset = "0x1145700", VA = "0x1145700")]
		public MultiplayerLobbyState()
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x1145708", Offset = "0x1145708", VA = "0x1145708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90E54", Offset = "0xE90E54")]
		private void <ExitMPSession>b__28_0()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public class NewGameConfirmState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button backButton;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button confirmButton;

		[Token(Token = "0x14000026")]
		public event Action OnConfirm
		{
			[Token(Token = "0x600168E")]
			[Address(RVA = "0x1076960", Offset = "0x1076960", VA = "0x1076960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90E64", Offset = "0xE90E64")]
			add
			{
			}
			[Token(Token = "0x600168F")]
			[Address(RVA = "0x1076A00", Offset = "0x1076A00", VA = "0x1076A00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90E74", Offset = "0xE90E74")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event Action OnBack
		{
			[Token(Token = "0x6001690")]
			[Address(RVA = "0x1076AA0", Offset = "0x1076AA0", VA = "0x1076AA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90E84", Offset = "0xE90E84")]
			add
			{
			}
			[Token(Token = "0x6001691")]
			[Address(RVA = "0x1076B40", Offset = "0x1076B40", VA = "0x1076B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90E94", Offset = "0xE90E94")]
			remove
			{
			}
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x107691C", Offset = "0x107691C", VA = "0x107691C", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x1076BE0", Offset = "0x1076BE0", VA = "0x1076BE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x1076CCC", Offset = "0x1076CCC", VA = "0x1076CCC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x1076DD8", Offset = "0x1076DD8", VA = "0x1076DD8", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x1076E00", Offset = "0x1076E00", VA = "0x1076E00", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x1076E28", Offset = "0x1076E28", VA = "0x1076E28")]
		private void HandleBackButtonClick()
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x1076E3C", Offset = "0x1076E3C", VA = "0x1076E3C")]
		private void HandleConfirmButtonClick()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x1076E50", Offset = "0x1076E50", VA = "0x1076E50")]
		public NewGameConfirmState()
		{
		}
	}
	[Token(Token = "0x200042B")]
	public class NewGameSlotState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x200042C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A884", Offset = "0xE6A884")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x400135D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NewGameSlotState <>4__this;

			[Token(Token = "0x400135E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int index;

			[Token(Token = "0x60016A7")]
			[Address(RVA = "0x32C43D4", Offset = "0x32C43D4", VA = "0x32C43D4")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x60016A8")]
			[Address(RVA = "0x32C43DC", Offset = "0x32C43DC", VA = "0x32C43DC")]
			internal void <HandleSlotSelected>b__0()
			{
			}

			[Token(Token = "0x60016A9")]
			[Address(RVA = "0x32C443C", Offset = "0x32C443C", VA = "0x32C443C")]
			internal void <HandleSlotSelected>b__1()
			{
			}
		}

		[Token(Token = "0x200042D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A894", Offset = "0xE6A894")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x400135F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NewGameSlotState <>4__this;

			[Token(Token = "0x4001360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int index;

			[Token(Token = "0x60016AA")]
			[Address(RVA = "0x32C4460", Offset = "0x32C4460", VA = "0x32C4460")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x60016AB")]
			[Address(RVA = "0x32C4468", Offset = "0x32C4468", VA = "0x32C4468")]
			internal void <SelectPosture>b__0()
			{
			}

			[Token(Token = "0x60016AC")]
			[Address(RVA = "0x32C44C8", Offset = "0x32C44C8", VA = "0x32C44C8")]
			internal void <SelectPosture>b__1()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200042E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A8A4", Offset = "0xE6A8A4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__31_0;

			[Token(Token = "0x60016AE")]
			[Address(RVA = "0x32C42EC", Offset = "0x32C42EC", VA = "0x32C42EC")]
			public <>c()
			{
			}

			[Token(Token = "0x60016AF")]
			[Address(RVA = "0x32C42F4", Offset = "0x32C42F4", VA = "0x32C42F4")]
			internal void <HandleStartNewGameButtonClick>b__31_0()
			{
			}
		}

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NewGameConfirmState newGameConfirmState;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectPostureState selectPostureState;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button backButton;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button newSlot1Button;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button newSlot2Button;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button newSlot3Button;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GridlyLocalizer slot1SceneName;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshProUGUI slot1SaveTime;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GridlyLocalizer slot2SceneName;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TextMeshProUGUI slot2SaveTime;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GridlyLocalizer slot3SceneName;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TextMeshProUGUI slot3SaveTime;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string emptySlotID;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject[] slotHats;

		[Token(Token = "0x400135A")]
		private const string FirstScene = "Location_SH_GarrisonLane";

		[Token(Token = "0x400135B")]
		private const string FirstWaypoint = "SpawnPoint";

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _startNewGameClicked;

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x1076E58", Offset = "0x1076E58", VA = "0x1076E58", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x1076E9C", Offset = "0x1076E9C", VA = "0x1076E9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x107750C", Offset = "0x107750C", VA = "0x107750C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x1077698", Offset = "0x1077698", VA = "0x1077698", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x10776C0", Offset = "0x10776C0", VA = "0x10776C0", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x10776E8", Offset = "0x10776E8", VA = "0x10776E8")]
		private void HandleBackButtonClick()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x1077740", Offset = "0x1077740", VA = "0x1077740")]
		private void HandleNewSlot1ButtonClick()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x10778EC", Offset = "0x10778EC", VA = "0x10778EC")]
		private void HandleNewSlot2ButtonClick()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x10778F4", Offset = "0x10778F4", VA = "0x10778F4")]
		private void HandleNewSlot3ButtonClick()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x1077748", Offset = "0x1077748", VA = "0x1077748")]
		private void HandleSlotSelected(int index)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x10778FC", Offset = "0x10778FC", VA = "0x10778FC")]
		private void SelectPosture(int index)
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x1077A4C", Offset = "0x1077A4C", VA = "0x1077A4C")]
		private void HandleStartNewGameButtonClick(int slotNumber)
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x1077030", Offset = "0x1077030", VA = "0x1077030")]
		private void FillSlotInfo()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x1077D40", Offset = "0x1077D40", VA = "0x1077D40")]
		public NewGameSlotState()
		{
		}
	}
	[Token(Token = "0x200042F")]
	public class OptionsNavigation : MonoBehaviour
	{
		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string backState;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button movementButton;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button comfortButton;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button audioButton;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button miscButton;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button voiceButton;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button backButton;

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x107BA58", Offset = "0x107BA58", VA = "0x107BA58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x107BCA4", Offset = "0x107BCA4", VA = "0x107BCA4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x107BF7C", Offset = "0x107BF7C", VA = "0x107BF7C")]
		private void HandleBackButtonClick()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x107BFA0", Offset = "0x107BFA0", VA = "0x107BFA0")]
		private void HandleMovementButtonClick()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x107BFF8", Offset = "0x107BFF8", VA = "0x107BFF8")]
		private void HandleComfortButtonClick()
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x107C050", Offset = "0x107C050", VA = "0x107C050")]
		private void HandleAudioButtonClick()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x107C0A8", Offset = "0x107C0A8", VA = "0x107C0A8")]
		private void HandleMiscButtonClick()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x107C100", Offset = "0x107C100", VA = "0x107C100")]
		private void HandleVoiceButtonClick()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x107C158", Offset = "0x107C158", VA = "0x107C158")]
		public OptionsNavigation()
		{
		}
	}
	[Token(Token = "0x2000430")]
	public class PlayState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button backButton;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button continueButton;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button newGameButton;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button loadGameButton;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button sceneSelectButton;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button optionsButton;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button multiplayerButton;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MT_LocalisationText centreButtonText;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject mainLogoGameobject;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private SelectPlaymodeState selectPlaymodeState;

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x1080D9C", Offset = "0x1080D9C", VA = "0x1080D9C", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x1080DE0", Offset = "0x1080DE0", VA = "0x1080DE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x10810EC", Offset = "0x10810EC", VA = "0x10810EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x108137C", Offset = "0x108137C", VA = "0x108137C", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x1081438", Offset = "0x1081438", VA = "0x1081438", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x1081460", Offset = "0x1081460", VA = "0x1081460")]
		private void HandleBackButtonClick()
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x10814B8", Offset = "0x10814B8", VA = "0x10814B8")]
		private void HandleContinueButtonClick()
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x1081610", Offset = "0x1081610", VA = "0x1081610")]
		private void HandleNewGameButtonClick()
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x1081668", Offset = "0x1081668", VA = "0x1081668")]
		private void HandleLoadGameButtonClick()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x10816C0", Offset = "0x10816C0", VA = "0x10816C0")]
		private void HandleSceneSelectClick()
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x1081718", Offset = "0x1081718", VA = "0x1081718")]
		private void HandleOptionsButtonClick()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x1081770", Offset = "0x1081770", VA = "0x1081770")]
		private void HandleMultiplayerButtonClick()
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x10817C8", Offset = "0x10817C8", VA = "0x10817C8")]
		public PlayState()
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x10817D0", Offset = "0x10817D0", VA = "0x10817D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90EA4", Offset = "0xE90EA4")]
		private void <HandleContinueButtonClick>b__19_0()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public class PremiumContentState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button backButton;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<UnityEngine.UI.Toggle> gloveToggles;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<UnityEngine.UI.Toggle> lighterToggles;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<UnityEngine.UI.Toggle> gunToggles;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE81254", Offset = "0xE81254")]
		[SerializeField]
		private List<Material> gloveMaterials;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<Material> lighterMaterials;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<Material> gunMaterials;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE812C0", Offset = "0xE812C0")]
		[NaughtyAttributes.ReadOnly]
		public SkinnedMeshRenderer[] gloveSMRs;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[NaughtyAttributes.ReadOnly]
		public MeshRenderer[] lighterMRs;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[NaughtyAttributes.ReadOnly]
		public MeshRenderer[] gunMRs;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material gloveSharedMat;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material lighterSharedMat;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material gunSharedMat;

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x108A9A4", Offset = "0x108A9A4", VA = "0x108A9A4", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x108A9E8", Offset = "0x108A9E8", VA = "0x108A9E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x108AAD0", Offset = "0x108AAD0", VA = "0x108AAD0")]
		private void ToggleSubscriber()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x108AEEC", Offset = "0x108AEEC", VA = "0x108AEEC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x108AF90", Offset = "0x108AF90", VA = "0x108AF90")]
		private void ToggleUnsubscriber()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x108B3AC", Offset = "0x108B3AC", VA = "0x108B3AC", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x108B3D4", Offset = "0x108B3D4", VA = "0x108B3D4", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x108B3FC", Offset = "0x108B3FC", VA = "0x108B3FC")]
		private void HandleBackButtonClick()
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x108B454", Offset = "0x108B454", VA = "0x108B454")]
		private void HandleGloveToggleChanged(bool value)
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x108B758", Offset = "0x108B758", VA = "0x108B758")]
		private void HandleLighterToggleChanged(bool value)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x108B99C", Offset = "0x108B99C", VA = "0x108B99C")]
		private void HandleGunToggleChanged(bool value)
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x108AA94", Offset = "0x108AA94", VA = "0x108AA94")]
		private void Setup()
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x108BBE0", Offset = "0x108BBE0", VA = "0x108BBE0")]
		private void StoreMeshRenderers()
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x108B698", Offset = "0x108B698", VA = "0x108B698")]
		private void StoreMatInstances()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x108BEE8", Offset = "0x108BEE8", VA = "0x108BEE8")]
		private void SetupGlovesOptions()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x108C118", Offset = "0x108C118", VA = "0x108C118")]
		private void SetupLighterOptions()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x108C348", Offset = "0x108C348", VA = "0x108C348")]
		private void SetupGunOptions()
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x108C578", Offset = "0x108C578", VA = "0x108C578")]
		public PremiumContentState()
		{
		}
	}
	[Token(Token = "0x2000432")]
	public class SaveSlotSelectState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x2000433")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A8B4", Offset = "0xE6A8B4")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4001399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SaveSlotSelectState <>4__this;

			[Token(Token = "0x400139A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int index;

			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x32C7410", Offset = "0x32C7410", VA = "0x32C7410")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x60016E6")]
			[Address(RVA = "0x32C7418", Offset = "0x32C7418", VA = "0x32C7418")]
			internal void <HandleSlotSelected>b__0()
			{
			}

			[Token(Token = "0x60016E7")]
			[Address(RVA = "0x32C7478", Offset = "0x32C7478", VA = "0x32C7478")]
			internal void <HandleSlotSelected>b__1()
			{
			}

			[Token(Token = "0x60016E8")]
			[Address(RVA = "0x32C74D8", Offset = "0x32C74D8", VA = "0x32C74D8")]
			internal void <HandleSlotSelected>b__2()
			{
			}
		}

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SelectPostureState selectPostureState;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectPlaymodeState selectPlaymodeState;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button backButton;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button slot1Button;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button slot2Button;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button slot3Button;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GridlyLocalizer slot1SceneName;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshProUGUI slot1SaveTime;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GridlyLocalizer slot2SceneName;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TextMeshProUGUI slot2SaveTime;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GridlyLocalizer slot3SceneName;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TextMeshProUGUI slot3SaveTime;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string emptySlotID;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject[] slotHats;

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x32D1AAC", Offset = "0x32D1AAC", VA = "0x32D1AAC", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x32D1AF0", Offset = "0x32D1AF0", VA = "0x32D1AF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x32D2280", Offset = "0x32D2280", VA = "0x32D2280")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x32D240C", Offset = "0x32D240C", VA = "0x32D240C", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x32D242C", Offset = "0x32D242C", VA = "0x32D242C", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x32D244C", Offset = "0x32D244C", VA = "0x32D244C")]
		private void HandleBackButtonClick()
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x32D24A4", Offset = "0x32D24A4", VA = "0x32D24A4")]
		private void HandleSlot1ButtonClick()
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x32D2748", Offset = "0x32D2748", VA = "0x32D2748")]
		private void HandleSlot2ButtonClick()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x32D2750", Offset = "0x32D2750", VA = "0x32D2750")]
		private void HandleSlot3ButtonClick()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x32D24AC", Offset = "0x32D24AC", VA = "0x32D24AC")]
		private void HandleSlotSelected(int index)
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x32D1D48", Offset = "0x32D1D48", VA = "0x32D1D48")]
		private void FillSlotInfo()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x32D2938", Offset = "0x32D2938", VA = "0x32D2938")]
		public SaveSlotSelectState()
		{
		}
	}
	[Token(Token = "0x2000434")]
	public class SceneSelectLoadSlotState : MonoBehaviour, IMenuState
	{
		[Serializable]
		[Token(Token = "0x2000435")]
		private class SaveSlot
		{
			[Token(Token = "0x40013A0")]
			private const string emptySlotID = "UI_General_Menu_Slot_00";

			[Token(Token = "0x40013A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Button button;

			[Token(Token = "0x40013A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GridlyLocalizer sceneName;

			[Token(Token = "0x40013A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProUGUI saveTime;

			[Token(Token = "0x60016F1")]
			[Address(RVA = "0x32C7BE8", Offset = "0x32C7BE8", VA = "0x32C7BE8")]
			public void ConfigureWith(int index, Action<int> onSlotSelected)
			{
			}

			[Token(Token = "0x60016F2")]
			[Address(RVA = "0x32C7DA4", Offset = "0x32C7DA4", VA = "0x32C7DA4")]
			public SaveSlot()
			{
			}
		}

		[Token(Token = "0x2000436")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A8C4", Offset = "0xE6A8C4")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40013A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SceneSelectLoadSlotState <>4__this;

			[Token(Token = "0x40013A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int index;

			[Token(Token = "0x60016F3")]
			[Address(RVA = "0x32C7BBC", Offset = "0x32C7BBC", VA = "0x32C7BBC")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60016F4")]
			[Address(RVA = "0x32C7BC4", Offset = "0x32C7BC4", VA = "0x32C7BC4")]
			internal void <BindButtonCallback>b__0()
			{
			}
		}

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine _stateMachine;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition _stateTransition;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup _canvasGroup;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button backButton;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SaveSlot[] slots;

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x32D4084", Offset = "0x32D4084", VA = "0x32D4084")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x32D4184", Offset = "0x32D4184", VA = "0x32D4184")]
		private void BindButtonCallback(Button button, int index)
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x32D4270", Offset = "0x32D4270", VA = "0x32D4270", Slot = "5")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE90EB4", Offset = "0xE90EB4")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x32D4384", Offset = "0x32D4384", VA = "0x32D4384")]
		private void OnSlotSelected(int slotIndex)
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x32D4458", Offset = "0x32D4458", VA = "0x32D4458", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x32D4478", Offset = "0x32D4478", VA = "0x32D4478")]
		private void OnBackButtonPressed()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x32D4494", Offset = "0x32D4494", VA = "0x32D4494", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x32D44D8", Offset = "0x32D44D8", VA = "0x32D44D8")]
		public SceneSelectLoadSlotState()
		{
		}
	}
	[Token(Token = "0x2000437")]
	public class SceneSelectState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x2000438")]
		private struct SceneRef
		{
			[Token(Token = "0x40013B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x40013B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Path;

			[Token(Token = "0x40013B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string SpawnPointID;

			[Token(Token = "0x40013B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string GridlyID;

			[Token(Token = "0x6001706")]
			[Address(RVA = "0x32C8308", Offset = "0x32C8308", VA = "0x32C8308")]
			public SceneRef(string name, string path, string gridlyID)
			{
			}

			[Token(Token = "0x6001707")]
			[Address(RVA = "0x32C8368", Offset = "0x32C8368", VA = "0x32C8368")]
			public SceneRef(string name, string path, string spawnPointID, string gridlyID)
			{
			}
		}

		[Token(Token = "0x2000439")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A8D4", Offset = "0xE6A8D4")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x40013B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SceneSelectState <>4__this;

			[Token(Token = "0x40013B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SaveSlotData slot;

			[Token(Token = "0x6001708")]
			[Address(RVA = "0x32C7FB8", Offset = "0x32C7FB8", VA = "0x32C7FB8")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6001709")]
			[Address(RVA = "0x32C7FC0", Offset = "0x32C7FC0", VA = "0x32C7FC0")]
			internal void <PlayFromChapterSelect>b__0()
			{
			}
		}

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SceneRef[] _allScenes;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8148C", Offset = "0xE8148C")]
		private static int <slotIndex>k__BackingField;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine _stateMachine;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition _stateTransition;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup _canvasGroup;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button _backButton;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _playButton;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UICarousel _carousel;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SceneSelectJournalEntry _journalEntries;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SelectPostureState _selectPostureState;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _selectedSceneIndex;

		[Token(Token = "0x170002B5")]
		public static int slotIndex
		{
			[Token(Token = "0x60016F5")]
			[Address(RVA = "0x32D5C28", Offset = "0x32D5C28", VA = "0x32D5C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90F2C", Offset = "0xE90F2C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016F6")]
			[Address(RVA = "0x32D5C8C", Offset = "0x32D5C8C", VA = "0x32D5C8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90F3C", Offset = "0xE90F3C")]
			set
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event Action OnBack
		{
			[Token(Token = "0x60016F7")]
			[Address(RVA = "0x32D5CF4", Offset = "0x32D5CF4", VA = "0x32D5CF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90F4C", Offset = "0xE90F4C")]
			add
			{
			}
			[Token(Token = "0x60016F8")]
			[Address(RVA = "0x32D5D94", Offset = "0x32D5D94", VA = "0x32D5D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90F5C", Offset = "0xE90F5C")]
			remove
			{
			}
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x32D5E34", Offset = "0x32D5E34", VA = "0x32D5E34", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x32D5E78", Offset = "0x32D5E78", VA = "0x32D5E78")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x32D5FD4", Offset = "0x32D5FD4", VA = "0x32D5FD4", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x32D64B4", Offset = "0x32D64B4", VA = "0x32D64B4")]
		private void OnBackButtonPressed()
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x32D653C", Offset = "0x32D653C", VA = "0x32D653C")]
		private void OnCarouselUpdated(int index)
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x32D65A4", Offset = "0x32D65A4", VA = "0x32D65A4")]
		private void OnPlayButtonPressed()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x32D66A0", Offset = "0x32D66A0", VA = "0x32D66A0")]
		private void PlayFromChapterSelect()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x32D6864", Offset = "0x32D6864", VA = "0x32D6864")]
		private void OnLoadJournalComplete()
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x32D6C30", Offset = "0x32D6C30", VA = "0x32D6C30", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x32D600C", Offset = "0x32D600C", VA = "0x32D600C")]
		private void PopulateSceneRefsAndCarousel()
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x32D6C50", Offset = "0x32D6C50", VA = "0x32D6C50")]
		public SceneSelectState()
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x32D7760", Offset = "0x32D7760", VA = "0x32D7760")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90F6C", Offset = "0xE90F6C")]
		private void <OnPlayButtonPressed>b__22_0()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public class SelectPlaymodeState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button exploreButton;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button chapterSelectButton;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button backButton;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SceneSelectState selectChapterState;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SelectPostureState selectPostureState;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int selectedSlot;

		[Token(Token = "0x14000029")]
		public event Action OnBack
		{
			[Token(Token = "0x600170B")]
			[Address(RVA = "0x32D2758", Offset = "0x32D2758", VA = "0x32D2758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90F7C", Offset = "0xE90F7C")]
			add
			{
			}
			[Token(Token = "0x600170C")]
			[Address(RVA = "0x32D9C84", Offset = "0x32D9C84", VA = "0x32D9C84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90F8C", Offset = "0xE90F8C")]
			remove
			{
			}
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x32D9C40", Offset = "0x32D9C40", VA = "0x32D9C40", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x32D9D24", Offset = "0x32D9D24", VA = "0x32D9D24")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x32D9E60", Offset = "0x32D9E60", VA = "0x32D9E60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x32D9F9C", Offset = "0x32D9F9C", VA = "0x32D9F9C", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x32D9FBC", Offset = "0x32D9FBC", VA = "0x32D9FBC", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x32D9FDC", Offset = "0x32D9FDC", VA = "0x32D9FDC")]
		private void HandleExploreClick()
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x32DA0D8", Offset = "0x32DA0D8", VA = "0x32DA0D8")]
		private void HandleChapterClick()
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x32DA204", Offset = "0x32DA204", VA = "0x32DA204")]
		private void HandleBackButtonClick()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x32DA218", Offset = "0x32DA218", VA = "0x32DA218")]
		public void ClearBackEvent()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x32DA224", Offset = "0x32DA224", VA = "0x32DA224")]
		public void SetSaveSlot(int s)
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x32DA22C", Offset = "0x32DA22C", VA = "0x32DA22C")]
		public SelectPlaymodeState()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x32DA234", Offset = "0x32DA234", VA = "0x32DA234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90F9C", Offset = "0xE90F9C")]
		private void <HandleExploreClick>b__17_0()
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x32DA28C", Offset = "0x32DA28C", VA = "0x32DA28C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90FAC", Offset = "0xE90FAC")]
		private void <HandleExploreClick>b__17_1()
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x32DA298", Offset = "0x32DA298", VA = "0x32DA298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90FBC", Offset = "0xE90FBC")]
		private void <HandleChapterClick>b__18_0()
		{
		}
	}
	[Token(Token = "0x200043B")]
	public class SelectPostureState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button standingButton;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button sittingButton;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button backButton;

		[Token(Token = "0x1400002A")]
		public event Action OnPostureSelected
		{
			[Token(Token = "0x600171B")]
			[Address(RVA = "0x32D2898", Offset = "0x32D2898", VA = "0x32D2898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90FCC", Offset = "0xE90FCC")]
			add
			{
			}
			[Token(Token = "0x600171C")]
			[Address(RVA = "0x32DA334", Offset = "0x32DA334", VA = "0x32DA334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90FDC", Offset = "0xE90FDC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event Action OnBack
		{
			[Token(Token = "0x600171D")]
			[Address(RVA = "0x32D27F8", Offset = "0x32D27F8", VA = "0x32D27F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90FEC", Offset = "0xE90FEC")]
			add
			{
			}
			[Token(Token = "0x600171E")]
			[Address(RVA = "0x32DA3D4", Offset = "0x32DA3D4", VA = "0x32DA3D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE90FFC", Offset = "0xE90FFC")]
			remove
			{
			}
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x32DA2F0", Offset = "0x32DA2F0", VA = "0x32DA2F0", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x32DA474", Offset = "0x32DA474", VA = "0x32DA474")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x32DA5B0", Offset = "0x32DA5B0", VA = "0x32DA5B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x32DA70C", Offset = "0x32DA70C", VA = "0x32DA70C", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x32DA72C", Offset = "0x32DA72C", VA = "0x32DA72C", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x32DA74C", Offset = "0x32DA74C", VA = "0x32DA74C")]
		private void HandleStandingButtonClick()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x32DA830", Offset = "0x32DA830", VA = "0x32DA830")]
		private void HandleSittingButtonClick()
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x32DA924", Offset = "0x32DA924", VA = "0x32DA924")]
		private void HandleBackButtonClick()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x32DA81C", Offset = "0x32DA81C", VA = "0x32DA81C")]
		private void StartGame()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x32DA938", Offset = "0x32DA938", VA = "0x32DA938")]
		public SelectPostureState()
		{
		}
	}
	[Token(Token = "0x200043C")]
	public class StartState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button playButton;

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x32E3078", Offset = "0x32E3078", VA = "0x32E3078", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x32E30BC", Offset = "0x32E30BC", VA = "0x32E30BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x32E3158", Offset = "0x32E3158", VA = "0x32E3158")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x32E31F4", Offset = "0x32E31F4", VA = "0x32E31F4", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x32E3214", Offset = "0x32E3214", VA = "0x32E3214", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x32E3234", Offset = "0x32E3234", VA = "0x32E3234")]
		private void HandlePlayButtonClick()
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x32E328C", Offset = "0x32E328C", VA = "0x32E328C")]
		private void HandleOptionsButtonClick()
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x32E32E4", Offset = "0x32E32E4", VA = "0x32E32E4")]
		private void HandleChapterSelectButtonClick()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x32E333C", Offset = "0x32E333C", VA = "0x32E333C")]
		public StartState()
		{
		}
	}
	[Token(Token = "0x200043D")]
	public class StateTransition : MonoBehaviour
	{
		[Token(Token = "0x200043E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A8E4", Offset = "0xE6A8E4")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40013CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onComplete;

			[Token(Token = "0x6001734")]
			[Address(RVA = "0x2166878", Offset = "0x2166878", VA = "0x2166878")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001735")]
			[Address(RVA = "0x2166880", Offset = "0x2166880", VA = "0x2166880")]
			internal void <EnterTransition>b__0()
			{
			}
		}

		[Token(Token = "0x200043F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A8F4", Offset = "0xE6A8F4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40013CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.CanvasGroup canvasGroup;

			[Token(Token = "0x40013D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onComplete;

			[Token(Token = "0x6001736")]
			[Address(RVA = "0x2166894", Offset = "0x2166894", VA = "0x2166894")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001737")]
			[Address(RVA = "0x216689C", Offset = "0x216689C", VA = "0x216689C")]
			internal void <ExitTransition>b__0()
			{
			}
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x32CBC60", Offset = "0x32CBC60", VA = "0x32CBC60")]
		public void EnterTransition(UnityEngine.CanvasGroup canvasGroup, Action onComplete)
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x32CBDA0", Offset = "0x32CBDA0", VA = "0x32CBDA0")]
		public void ExitTransition(UnityEngine.CanvasGroup canvasGroup, Action onComplete)
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x32E35DC", Offset = "0x32E35DC", VA = "0x32E35DC")]
		public StateTransition()
		{
		}
	}
	[Token(Token = "0x2000440")]
	public interface IMenuState
	{
		[Token(Token = "0x6001738")]
		string GetStateName();

		[Token(Token = "0x6001739")]
		void OnEnterState(Action onComplete);

		[Token(Token = "0x600173A")]
		void OnExitState(Action onComplete);
	}
	[Token(Token = "0x2000441")]
	public class MenuStateConstants
	{
		[Token(Token = "0x40013D1")]
		public const string Start = "Start";

		[Token(Token = "0x40013D2")]
		public const string Play = "Play";

		[Token(Token = "0x40013D3")]
		public const string SelectPostureState = "SelectPostureState";

		[Token(Token = "0x40013D4")]
		public const string NewGameSlots = "NewGameSlots";

		[Token(Token = "0x40013D5")]
		public const string NewGameConfirm = "NewGameConfirm";

		[Token(Token = "0x40013D6")]
		public const string SaveSlotSelect = "SaveSlotSelect";

		[Token(Token = "0x40013D7")]
		public const string ChapterSelect = "ChapterSelect";

		[Token(Token = "0x40013D8")]
		public const string MovementOptions = "MovementOptions";

		[Token(Token = "0x40013D9")]
		public const string ComfortOptions = "ComfortOptions";

		[Token(Token = "0x40013DA")]
		public const string AudioOptions = "AudioOptions";

		[Token(Token = "0x40013DB")]
		public const string MiscOptions = "MiscOptions";

		[Token(Token = "0x40013DC")]
		public const string VoiceOptions = "VoiceOptions";

		[Token(Token = "0x40013DD")]
		public const string Credits = "Credits";

		[Token(Token = "0x40013DE")]
		public const string PremiumContent = "PremiumContent";

		[Token(Token = "0x40013DF")]
		public const string Pause = "Pause";

		[Token(Token = "0x40013E0")]
		public const string MainMenuConfirm = "MainMenuConfirm";

		[Token(Token = "0x40013E1")]
		public const string ReturnToLastCheckpointConfirm = "ReturnToLastCheckpointConfirm";

		[Token(Token = "0x40013E2")]
		public const string MultiplayerLobby = "MultiplayerLobby";

		[Token(Token = "0x40013E3")]
		public const string Customisation = "Customisation";

		[Token(Token = "0x40013E4")]
		public const string Error = "Error";

		[Token(Token = "0x40013E5")]
		public const string MultiplayerConnecting = "MultiplayerConnecting";

		[Token(Token = "0x40013E6")]
		public const string SceneSelect = "SceneSelect";

		[Token(Token = "0x40013E7")]
		public const string SceneSelectLoadSlots = "SceneSelectLoadSlots";

		[Token(Token = "0x40013E8")]
		public const string PlayModeSelection = "PlayModeSelection";

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x1140D84", Offset = "0x1140D84", VA = "0x1140D84")]
		public MenuStateConstants()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class MenuStateMachine : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000443")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A904", Offset = "0xE6A904")]
		private sealed class <>c
		{
			[Token(Token = "0x40013F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40013F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__9_0;

			[Token(Token = "0x6001743")]
			[Address(RVA = "0x32BAF74", Offset = "0x32BAF74", VA = "0x32BAF74")]
			public <>c()
			{
			}

			[Token(Token = "0x6001744")]
			[Address(RVA = "0x32BAF7C", Offset = "0x32BAF7C", VA = "0x32BAF7C")]
			internal bool <MoveToStartingState>b__9_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A914", Offset = "0xE6A914")]
		private sealed class <MoveToStartingState>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuStateMachine <>4__this;

			[Token(Token = "0x170002B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001748")]
				[Address(RVA = "0x32BB468", Offset = "0x32BB468", VA = "0x32BB468", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600174A")]
				[Address(RVA = "0x32BB4B0", Offset = "0x32BB4B0", VA = "0x32BB4B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001745")]
			[Address(RVA = "0x32BB194", Offset = "0x32BB194", VA = "0x32BB194")]
			[DebuggerHidden]
			public <MoveToStartingState>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001746")]
			[Address(RVA = "0x32BB1C0", Offset = "0x32BB1C0", VA = "0x32BB1C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001747")]
			[Address(RVA = "0x32BB1C4", Offset = "0x32BB1C4", VA = "0x32BB1C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001749")]
			[Address(RVA = "0x32BB470", Offset = "0x32BB470", VA = "0x32BB470", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000445")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A924", Offset = "0xE6A924")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40013F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string state;

			[Token(Token = "0x40013F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IMenuState stateToMoveTo;

			[Token(Token = "0x600174B")]
			[Address(RVA = "0x32BB018", Offset = "0x32BB018", VA = "0x32BB018")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x600174C")]
			[Address(RVA = "0x32BB020", Offset = "0x32BB020", VA = "0x32BB020")]
			internal bool <MoveToState>b__0(IMenuState s)
			{
				return default(bool);
			}

			[Token(Token = "0x600174D")]
			[Address(RVA = "0x32BB0E0", Offset = "0x32BB0E0", VA = "0x32BB0E0")]
			internal void <MoveToState>b__1()
			{
			}
		}

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string startingState;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject logo;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool isMainMenu;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<IMenuState> _states;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IMenuState _currentState;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool logoSet;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SceneSelectState sceneSelectState;

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x1140D8C", Offset = "0x1140D8C", VA = "0x1140D8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x1140EFC", Offset = "0x1140EFC", VA = "0x1140EFC")]
		public void MoveToStartState()
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x1140F28", Offset = "0x1140F28", VA = "0x1140F28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9100C", Offset = "0xE9100C")]
		private IEnumerator MoveToStartingState()
		{
			return null;
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x11402B4", Offset = "0x11402B4", VA = "0x11402B4")]
		public void MoveToState(string state)
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x1140FA0", Offset = "0x1140FA0", VA = "0x1140FA0")]
		public MenuStateMachine()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x1141024", Offset = "0x1141024", VA = "0x1141024")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9106C", Offset = "0xE9106C")]
		private void <MoveToStartingState>b__9_1()
		{
		}
	}
	[Token(Token = "0x2000446")]
	public class MT_AccessibilityOptionsScreen : MT_MenuScreen
	{
		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE816CC", Offset = "0xE816CC")]
		private readonly string <ScreenId>k__BackingField;

		[Token(Token = "0x170002B8")]
		public override string ScreenId
		{
			[Token(Token = "0x600174E")]
			[Address(RVA = "0x1122A74", Offset = "0x1122A74", VA = "0x1122A74", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE910CC", Offset = "0xE910CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x1122A7C", Offset = "0x1122A7C", VA = "0x1122A7C")]
		public MT_AccessibilityOptionsScreen()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public class MT_AudioOptionsScreen : MT_MenuScreen
	{
		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE816DC", Offset = "0xE816DC")]
		private readonly string <ScreenId>k__BackingField;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_UIButton confirmButton;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MT_SliderMenuOption musicVolume;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MT_SliderMenuOption sfxVolume;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MT_UIButton resetToDefault;

		[Token(Token = "0x170002B9")]
		public override string ScreenId
		{
			[Token(Token = "0x6001750")]
			[Address(RVA = "0x1125C78", Offset = "0x1125C78", VA = "0x1125C78", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE910DC", Offset = "0xE910DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x1125C80", Offset = "0x1125C80", VA = "0x1125C80", Slot = "5")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x1125C84", Offset = "0x1125C84", VA = "0x1125C84")]
		public MT_AudioOptionsScreen()
		{
		}
	}
	[Token(Token = "0x2000448")]
	public class MT_ControlsOptionsScreen : MT_MenuScreen
	{
		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8172C", Offset = "0xE8172C")]
		private readonly string <ScreenId>k__BackingField;

		[Token(Token = "0x170002BA")]
		public override string ScreenId
		{
			[Token(Token = "0x6001753")]
			[Address(RVA = "0x112D704", Offset = "0x112D704", VA = "0x112D704", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE910EC", Offset = "0xE910EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x112D70C", Offset = "0x112D70C", VA = "0x112D70C")]
		public MT_ControlsOptionsScreen()
		{
		}
	}
	[Token(Token = "0x2000449")]
	public class MT_GeneralOptionsScreen : MT_MenuScreen
	{
		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8173C", Offset = "0xE8173C")]
		private readonly string <ScreenId>k__BackingField;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_UIButton confirmButton;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MT_ToggleMenuOption movementType;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MT_ToggleMenuOption turnType;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MT_ToggleMenuOption heightAdjustmentType;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MT_DialMenuOption snapTurnDegrees;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MT_ToggleMenuOption subtitles;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MT_DropdownMenuOption subtitlesLanguage;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MT_ToggleMenuOption comfortVignette;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MT_ToggleMenuOption comfortVignetteSize;

		[Token(Token = "0x170002BB")]
		public override string ScreenId
		{
			[Token(Token = "0x6001755")]
			[Address(RVA = "0x15C40FC", Offset = "0x15C40FC", VA = "0x15C40FC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE910FC", Offset = "0xE910FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x15C4104", Offset = "0x15C4104", VA = "0x15C4104", Slot = "5")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x15C41F8", Offset = "0x15C41F8", VA = "0x15C41F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x15C42AC", Offset = "0x15C42AC", VA = "0x15C42AC")]
		private void HandleOnConfirm()
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x15C41F4", Offset = "0x15C41F4", VA = "0x15C41F4")]
		private void SetUpLanguages()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x15C42B0", Offset = "0x15C42B0", VA = "0x15C42B0", Slot = "6")]
		public override void ResetScreen()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x15C42B8", Offset = "0x15C42B8", VA = "0x15C42B8")]
		private void HandleOnSnapTurnButton(bool isIncreasing)
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x15C42BC", Offset = "0x15C42BC", VA = "0x15C42BC")]
		private void HandleMovementTypeButtonPressed(int buttonIndex)
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x15C42C0", Offset = "0x15C42C0", VA = "0x15C42C0")]
		private void HandleSubtitlesLanguageButtonPressed(int buttonIndex)
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x15C42C4", Offset = "0x15C42C4", VA = "0x15C42C4")]
		public MT_GeneralOptionsScreen()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public class MT_OptionsMenuStateMachine : MT_MenuStateMachine
	{
		[Token(Token = "0x200044B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A934", Offset = "0xE6A934")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x400140A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index1;

			[Token(Token = "0x400140B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MT_OptionsMenuStateMachine <>4__this;

			[Token(Token = "0x6001765")]
			[Address(RVA = "0x32B6FDC", Offset = "0x32B6FDC", VA = "0x32B6FDC")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001766")]
			[Address(RVA = "0x32B6FE4", Offset = "0x32B6FE4", VA = "0x32B6FE4")]
			internal void <SetUpTabButtons>b__0()
			{
			}
		}

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_UIToggleButton[] tabButtons;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform tabButtonContainer;

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x1104E6C", Offset = "0x1104E6C", VA = "0x1104E6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x1104FE8", Offset = "0x1104FE8", VA = "0x1104FE8")]
		private void SetUpGeneralOptionsScreen()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x1105014", Offset = "0x1105014", VA = "0x1105014")]
		private void HandleTabButtonPressed(int index)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x1105040", Offset = "0x1105040", VA = "0x1105040")]
		private void UpdateTabButtons(int selectedIndex)
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x1104EAC", Offset = "0x1104EAC", VA = "0x1104EAC")]
		private void SetUpTabButtons()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x11050C0", Offset = "0x11050C0", VA = "0x11050C0")]
		public MT_OptionsMenuStateMachine()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public class MT_VisualOptionsScreen : MT_MenuScreen
	{
		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE817FC", Offset = "0xE817FC")]
		private readonly string <ScreenId>k__BackingField;

		[Token(Token = "0x170002BC")]
		public override string ScreenId
		{
			[Token(Token = "0x6001767")]
			[Address(RVA = "0x113F01C", Offset = "0x113F01C", VA = "0x113F01C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9110C", Offset = "0xE9110C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x113F024", Offset = "0x113F024", VA = "0x113F024")]
		public MT_VisualOptionsScreen()
		{
		}
	}
	[Token(Token = "0x200044D")]
	public class MT_PauseMainMenuScreen : MT_MenuScreen
	{
		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8180C", Offset = "0xE8180C")]
		private readonly string <ScreenId>k__BackingField;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_UIButton confirmButton;

		[Token(Token = "0x170002BD")]
		public override string ScreenId
		{
			[Token(Token = "0x6001769")]
			[Address(RVA = "0x1106484", Offset = "0x1106484", VA = "0x1106484", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9111C", Offset = "0xE9111C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400002C")]
		public event Action OnConfirmButton
		{
			[Token(Token = "0x600176A")]
			[Address(RVA = "0x110648C", Offset = "0x110648C", VA = "0x110648C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9112C", Offset = "0xE9112C")]
			add
			{
			}
			[Token(Token = "0x600176B")]
			[Address(RVA = "0x110652C", Offset = "0x110652C", VA = "0x110652C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9113C", Offset = "0xE9113C")]
			remove
			{
			}
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x11065CC", Offset = "0x11065CC", VA = "0x11065CC", Slot = "5")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x1106670", Offset = "0x1106670", VA = "0x1106670", Slot = "6")]
		public override void ResetScreen()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x11066A4", Offset = "0x11066A4", VA = "0x11066A4")]
		public MT_PauseMainMenuScreen()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x1106700", Offset = "0x1106700", VA = "0x1106700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9114C", Offset = "0xE9114C")]
		private void <Initialize>b__7_0()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public class MT_PauseMenuStateMachine : MT_MenuStateMachine
	{
		[Serializable]
		[Token(Token = "0x200044F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A944", Offset = "0xE6A944")]
		private sealed class <>c
		{
			[Token(Token = "0x4001411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__12_0;

			[Token(Token = "0x6001781")]
			[Address(RVA = "0x32B7074", Offset = "0x32B7074", VA = "0x32B7074")]
			public <>c()
			{
			}

			[Token(Token = "0x6001782")]
			[Address(RVA = "0x32B707C", Offset = "0x32B707C", VA = "0x32B707C")]
			internal void <HandleOnMainMenuConfirm>b__12_0()
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event Action OnResumeGame
		{
			[Token(Token = "0x6001770")]
			[Address(RVA = "0x1106C04", Offset = "0x1106C04", VA = "0x1106C04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9115C", Offset = "0xE9115C")]
			add
			{
			}
			[Token(Token = "0x6001771")]
			[Address(RVA = "0x1106CA4", Offset = "0x1106CA4", VA = "0x1106CA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9116C", Offset = "0xE9116C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x1106D44", Offset = "0x1106D44", VA = "0x1106D44")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x1106EEC", Offset = "0x1106EEC", VA = "0x1106EEC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x1106D74", Offset = "0x1106D74", VA = "0x1106D74")]
		private void SetUpPauseScreen()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x1106F50", Offset = "0x1106F50", VA = "0x1106F50")]
		private void SetUpOptionsScreen()
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x1107004", Offset = "0x1107004", VA = "0x1107004")]
		private void SetUpPauseMainMenuScreen()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x11070F4", Offset = "0x11070F4", VA = "0x11070F4")]
		private void SetUpPauseReturnToLastCheckpointScreen()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x11071E8", Offset = "0x11071E8", VA = "0x11071E8")]
		private void HandleBackToPauseScreen()
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x11071EC", Offset = "0x11071EC", VA = "0x11071EC")]
		private void HandleOnResumeGame()
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x1107200", Offset = "0x1107200", VA = "0x1107200")]
		private void HandleOnMainMenu()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x1107204", Offset = "0x1107204", VA = "0x1107204")]
		private void HandleOnMainMenuConfirm()
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x1107384", Offset = "0x1107384", VA = "0x1107384")]
		private void HandleOnReturnToLastCheckpoint()
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x1107388", Offset = "0x1107388", VA = "0x1107388")]
		private void HandleOnReturnToLastCheckpointConfirm()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x110748C", Offset = "0x110748C", VA = "0x110748C")]
		private void HandleOnOptions()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x1107490", Offset = "0x1107490", VA = "0x1107490")]
		public MT_PauseMenuStateMachine()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public class MT_PauseOptionsScreen : MT_MenuScreen
	{
		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8184C", Offset = "0xE8184C")]
		private readonly string <ScreenId>k__BackingField;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_ToggleMenuOption movementType;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MT_ToggleMenuOption turnType;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MT_ToggleMenuOption heightAdjustmentType;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MT_DialMenuOption snapTurnDegrees;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MT_ToggleMenuOption subtitles;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MT_DropdownMenuOption subtitlesLanguage;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MT_ToggleMenuOption comfortVignette;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MT_ToggleMenuOption comfortVignetteSize;

		[Token(Token = "0x170002BE")]
		public override string ScreenId
		{
			[Token(Token = "0x6001783")]
			[Address(RVA = "0x132389C", Offset = "0x132389C", VA = "0x132389C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9117C", Offset = "0xE9117C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x13238A4", Offset = "0x13238A4", VA = "0x13238A4", Slot = "5")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x1323998", Offset = "0x1323998", VA = "0x1323998")]
		private void SaveSettings()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x1323994", Offset = "0x1323994", VA = "0x1323994")]
		private void SetUpLanguages()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x132399C", Offset = "0x132399C", VA = "0x132399C", Slot = "6")]
		public override void ResetScreen()
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x13239A4", Offset = "0x13239A4", VA = "0x13239A4")]
		private void HandleOnSnapTurnButton(bool isIncreasing)
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x13239A8", Offset = "0x13239A8", VA = "0x13239A8")]
		private void HandleMovementTypeButtonPressed(int buttonIndex)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x13239AC", Offset = "0x13239AC", VA = "0x13239AC")]
		private void HandleSubtitlesLanguageButtonPressed(int buttonIndex)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x13239B0", Offset = "0x13239B0", VA = "0x13239B0")]
		public MT_PauseOptionsScreen()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class MT_PauseReturnToLastCheckpointScreen : MT_MenuScreen
	{
		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE818DC", Offset = "0xE818DC")]
		private readonly string <ScreenId>k__BackingField;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_UIButton confirmButton;

		[Token(Token = "0x170002BF")]
		public override string ScreenId
		{
			[Token(Token = "0x600178C")]
			[Address(RVA = "0x1323A0C", Offset = "0x1323A0C", VA = "0x1323A0C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9118C", Offset = "0xE9118C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400002E")]
		public event Action OnConfirmButton
		{
			[Token(Token = "0x600178D")]
			[Address(RVA = "0x1323A14", Offset = "0x1323A14", VA = "0x1323A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9119C", Offset = "0xE9119C")]
			add
			{
			}
			[Token(Token = "0x600178E")]
			[Address(RVA = "0x1323AB4", Offset = "0x1323AB4", VA = "0x1323AB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE911AC", Offset = "0xE911AC")]
			remove
			{
			}
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x1323B54", Offset = "0x1323B54", VA = "0x1323B54", Slot = "5")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x1323BFC", Offset = "0x1323BFC", VA = "0x1323BFC", Slot = "6")]
		public override void ResetScreen()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x1323C2C", Offset = "0x1323C2C", VA = "0x1323C2C")]
		public MT_PauseReturnToLastCheckpointScreen()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x1323C88", Offset = "0x1323C88", VA = "0x1323C88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE911BC", Offset = "0xE911BC")]
		private void <Initialize>b__7_0()
		{
		}
	}
	[Token(Token = "0x2000452")]
	public class MT_PauseScreen : MT_MenuScreen
	{
		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8190C", Offset = "0xE8190C")]
		private readonly string <ScreenId>k__BackingField;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button resumeGameButton;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button optionsButton;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button mainMenuButton;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button returnToLastCheckpointButton;

		[Token(Token = "0x170002C0")]
		public override string ScreenId
		{
			[Token(Token = "0x6001793")]
			[Address(RVA = "0x1323C9C", Offset = "0x1323C9C", VA = "0x1323C9C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE911CC", Offset = "0xE911CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400002F")]
		public event Action OnResumeGame
		{
			[Token(Token = "0x6001794")]
			[Address(RVA = "0x1323CA4", Offset = "0x1323CA4", VA = "0x1323CA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE911DC", Offset = "0xE911DC")]
			add
			{
			}
			[Token(Token = "0x6001795")]
			[Address(RVA = "0x1323D44", Offset = "0x1323D44", VA = "0x1323D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE911EC", Offset = "0xE911EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event Action OnOptions
		{
			[Token(Token = "0x6001796")]
			[Address(RVA = "0x1323DE4", Offset = "0x1323DE4", VA = "0x1323DE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE911FC", Offset = "0xE911FC")]
			add
			{
			}
			[Token(Token = "0x6001797")]
			[Address(RVA = "0x1323E84", Offset = "0x1323E84", VA = "0x1323E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9120C", Offset = "0xE9120C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event Action OnMainMenu
		{
			[Token(Token = "0x6001798")]
			[Address(RVA = "0x1323F24", Offset = "0x1323F24", VA = "0x1323F24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9121C", Offset = "0xE9121C")]
			add
			{
			}
			[Token(Token = "0x6001799")]
			[Address(RVA = "0x1323FC4", Offset = "0x1323FC4", VA = "0x1323FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9122C", Offset = "0xE9122C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event Action OnReturnToLastCheckpoint
		{
			[Token(Token = "0x600179A")]
			[Address(RVA = "0x1324064", Offset = "0x1324064", VA = "0x1324064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9123C", Offset = "0xE9123C")]
			add
			{
			}
			[Token(Token = "0x600179B")]
			[Address(RVA = "0x1324104", Offset = "0x1324104", VA = "0x1324104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9124C", Offset = "0xE9124C")]
			remove
			{
			}
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x13241A4", Offset = "0x13241A4", VA = "0x13241A4", Slot = "5")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x1324330", Offset = "0x1324330", VA = "0x1324330", Slot = "6")]
		public override void ResetScreen()
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x1324390", Offset = "0x1324390", VA = "0x1324390")]
		public MT_PauseScreen()
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x13243EC", Offset = "0x13243EC", VA = "0x13243EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9125C", Offset = "0xE9125C")]
		private void <Initialize>b__19_0()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x1324400", Offset = "0x1324400", VA = "0x1324400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9126C", Offset = "0xE9126C")]
		private void <Initialize>b__19_1()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x1324414", Offset = "0x1324414", VA = "0x1324414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9127C", Offset = "0xE9127C")]
		private void <Initialize>b__19_2()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x1324428", Offset = "0x1324428", VA = "0x1324428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9128C", Offset = "0xE9128C")]
		private void <Initialize>b__19_3()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class PauseMenu : MonoBehaviour
	{
		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine _menuStateMachine;

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x107D0EC", Offset = "0x107D0EC", VA = "0x107D0EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x107D168", Offset = "0x107D168", VA = "0x107D168")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x107D1CC", Offset = "0x107D1CC", VA = "0x107D1CC")]
		public PauseMenu()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class MainMenuConfirmState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button confirmButton;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button backButton;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GridlyLocalizer confirmationText;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[MazeTheory.Toolbox.ReadOnly]
		public MT_UIOpenMenu uiOpenMenu;

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x113F974", Offset = "0x113F974", VA = "0x113F974", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x113F9B8", Offset = "0x113F9B8", VA = "0x113F9B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x113FAAC", Offset = "0x113FAAC", VA = "0x113FAAC")]
		private void SetConfirmationText()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x113FB94", Offset = "0x113FB94", VA = "0x113FB94")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x113FC94", Offset = "0x113FC94", VA = "0x113FC94")]
		private void SetButtonInteraction(bool isInteractable)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x113FCDC", Offset = "0x113FCDC", VA = "0x113FCDC", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x113FD04", Offset = "0x113FD04", VA = "0x113FD04", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x113FD2C", Offset = "0x113FD2C", VA = "0x113FD2C")]
		private void HandleConfirmButtonClick()
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x11407B8", Offset = "0x11407B8", VA = "0x11407B8")]
		private void ReturnToMainMenu()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x114086C", Offset = "0x114086C", VA = "0x114086C")]
		private void LoadMainMenu()
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x11408C4", Offset = "0x11408C4", VA = "0x11408C4")]
		private void HandleBackButtonClick()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x1140918", Offset = "0x1140918", VA = "0x1140918")]
		public MainMenuConfirmState()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class PauseState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button resumeButton;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button optionsButton;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button mainMenuButton;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button returnToLastCheckpointButton;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MT_UIOpenMenu uiOpenMenu;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ReturnToLastCheckpointConfirmState rtlccs;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MainMenuConfirmState mmcs;

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x107D1D4", Offset = "0x107D1D4", VA = "0x107D1D4", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x107D218", Offset = "0x107D218", VA = "0x107D218")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x107D5F8", Offset = "0x107D5F8", VA = "0x107D5F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x107D3CC", Offset = "0x107D3CC", VA = "0x107D3CC")]
		private void ConfirmMenusUiOpenMenuSetter()
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x107D798", Offset = "0x107D798", VA = "0x107D798", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x107D7C0", Offset = "0x107D7C0", VA = "0x107D7C0", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x107D7E8", Offset = "0x107D7E8", VA = "0x107D7E8")]
		private void HandleResumeButtonClick()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x107D808", Offset = "0x107D808", VA = "0x107D808")]
		private void HandleOptionsButtonClick()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x107D860", Offset = "0x107D860", VA = "0x107D860")]
		private void HandleMainMenuButtonClick()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x107D8B8", Offset = "0x107D8B8", VA = "0x107D8B8")]
		private void HandleReturnToLastCheckpointButtonClick()
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x107D910", Offset = "0x107D910", VA = "0x107D910")]
		public PauseState()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class ReturnToLastCheckpointConfirmState : MonoBehaviour, IMenuState
	{
		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuStateMachine stateMachine;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StateTransition stateTransition;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button confirmButton;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button backButton;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[NaughtyAttributes.ReadOnly]
		public MT_UIOpenMenu uiOpenMenu;

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x32CBA24", Offset = "0x32CBA24", VA = "0x32CBA24", Slot = "4")]
		public string GetStateName()
		{
			return null;
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x32CBA68", Offset = "0x32CBA68", VA = "0x32CBA68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x32CBB54", Offset = "0x32CBB54", VA = "0x32CBB54")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x32CBC40", Offset = "0x32CBC40", VA = "0x32CBC40", Slot = "5")]
		public void OnEnterState(Action onComplete)
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x32CBD80", Offset = "0x32CBD80", VA = "0x32CBD80", Slot = "6")]
		public void OnExitState(Action onComplete)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x32CBEB4", Offset = "0x32CBEB4", VA = "0x32CBEB4")]
		private void HandleConfirmButtonClick()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x32CBEE0", Offset = "0x32CBEE0", VA = "0x32CBEE0")]
		private void HandleBackButtonClick()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x32CBF38", Offset = "0x32CBF38", VA = "0x32CBF38")]
		public ReturnToLastCheckpointConfirmState()
		{
		}
	}
	[Token(Token = "0x2000457")]
	public class MT_MenuPopup : MonoBehaviour
	{
		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_UIButton button1;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_UIButton button2;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI title;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI description;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MT_MenuPopupData _data;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _wasMenuModeActiveOnStartup;

		[Token(Token = "0x14000033")]
		public event Action OnButton1
		{
			[Token(Token = "0x60017C5")]
			[Address(RVA = "0x10EF234", Offset = "0x10EF234", VA = "0x10EF234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9129C", Offset = "0xE9129C")]
			add
			{
			}
			[Token(Token = "0x60017C6")]
			[Address(RVA = "0x10EF2D4", Offset = "0x10EF2D4", VA = "0x10EF2D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE912AC", Offset = "0xE912AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public event Action OnButton2
		{
			[Token(Token = "0x60017C7")]
			[Address(RVA = "0x10EF374", Offset = "0x10EF374", VA = "0x10EF374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE912BC", Offset = "0xE912BC")]
			add
			{
			}
			[Token(Token = "0x60017C8")]
			[Address(RVA = "0x10EF414", Offset = "0x10EF414", VA = "0x10EF414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE912CC", Offset = "0xE912CC")]
			remove
			{
			}
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x10EF4B4", Offset = "0x10EF4B4", VA = "0x10EF4B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x10EF554", Offset = "0x10EF554", VA = "0x10EF554")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x10EF5D0", Offset = "0x10EF5D0", VA = "0x10EF5D0")]
		public void SetUp([Optional] object args)
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x10EF894", Offset = "0x10EF894", VA = "0x10EF894")]
		public void EnableButtons(bool showButton1 = true, bool showButton2 = true)
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x10EF674", Offset = "0x10EF674", VA = "0x10EF674")]
		private void SetInfo()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x10EF7A8", Offset = "0x10EF7A8", VA = "0x10EF7A8")]
		private void SetButtons()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x10EF900", Offset = "0x10EF900", VA = "0x10EF900")]
		private void HandleButton1Pressed()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x10EF9EC", Offset = "0x10EF9EC", VA = "0x10EF9EC")]
		private void HandleButton2Pressed()
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x10EF930", Offset = "0x10EF930", VA = "0x10EF930")]
		private void ClosePopup()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x10EFA1C", Offset = "0x10EFA1C", VA = "0x10EFA1C")]
		public MT_MenuPopup()
		{
		}
	}
	[Token(Token = "0x2000458")]
	public class MT_MenuPopupData
	{
		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE81B5C", Offset = "0xE81B5C")]
		private readonly string <TitleId>k__BackingField;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE81B6C", Offset = "0xE81B6C")]
		private readonly string <DescriptionId>k__BackingField;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE81B7C", Offset = "0xE81B7C")]
		private readonly string <Button1Id>k__BackingField;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE81B8C", Offset = "0xE81B8C")]
		private readonly string <Button2Id>k__BackingField;

		[Token(Token = "0x170002C1")]
		public string TitleId
		{
			[Token(Token = "0x60017D3")]
			[Address(RVA = "0x10EFA24", Offset = "0x10EFA24", VA = "0x10EFA24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE912DC", Offset = "0xE912DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C2")]
		public string DescriptionId
		{
			[Token(Token = "0x60017D4")]
			[Address(RVA = "0x10EFA2C", Offset = "0x10EFA2C", VA = "0x10EFA2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE912EC", Offset = "0xE912EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C3")]
		public string Button1Id
		{
			[Token(Token = "0x60017D5")]
			[Address(RVA = "0x10EFA34", Offset = "0x10EFA34", VA = "0x10EFA34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE912FC", Offset = "0xE912FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C4")]
		public string Button2Id
		{
			[Token(Token = "0x60017D6")]
			[Address(RVA = "0x10EFA3C", Offset = "0x10EFA3C", VA = "0x10EFA3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9130C", Offset = "0xE9130C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x10EFA44", Offset = "0x10EFA44", VA = "0x10EFA44")]
		public MT_MenuPopupData(string titleId, string descriptionId, string button1Id, string button2Id)
		{
		}
	}
	[Token(Token = "0x2000459")]
	public class MT_MenuPopupManager : IGameModule
	{
		[Token(Token = "0x200045A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A954", Offset = "0xE6A954")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x400144F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onButton1;

			[Token(Token = "0x4001450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onButton2;

			[Token(Token = "0x60017E3")]
			[Address(RVA = "0x103B510", Offset = "0x103B510", VA = "0x103B510")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60017E4")]
			[Address(RVA = "0x103B518", Offset = "0x103B518", VA = "0x103B518")]
			internal void <CreateTwoButtonPopup>b__0()
			{
			}

			[Token(Token = "0x60017E5")]
			[Address(RVA = "0x103B52C", Offset = "0x103B52C", VA = "0x103B52C")]
			internal void <CreateTwoButtonPopup>b__1()
			{
			}
		}

		[Token(Token = "0x200045B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A964", Offset = "0xE6A964")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onButton1;

			[Token(Token = "0x60017E6")]
			[Address(RVA = "0x103B540", Offset = "0x103B540", VA = "0x103B540")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60017E7")]
			[Address(RVA = "0x103B548", Offset = "0x103B548", VA = "0x103B548")]
			internal void <CreateButton1Popup>b__0()
			{
			}
		}

		[Token(Token = "0x200045C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A974", Offset = "0xE6A974")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onButton2;

			[Token(Token = "0x60017E8")]
			[Address(RVA = "0x103B55C", Offset = "0x103B55C", VA = "0x103B55C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60017E9")]
			[Address(RVA = "0x103B564", Offset = "0x103B564", VA = "0x103B564")]
			internal void <CreateButton2Popup>b__0()
			{
			}
		}

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 PopupPosition;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly Vector3 PopupPositionWithOculus;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static MT_MenuPopup _menuPopupPrefab;

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x10EFAC4", Offset = "0x10EFAC4", VA = "0x10EFAC4", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x10EFB68", Offset = "0x10EFB68", VA = "0x10EFB68")]
		public static void CreateTwoButtonPopup(MT_MenuPopupData data, [Optional] Action onButton1, [Optional] Action onButton2)
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x10EFD9C", Offset = "0x10EFD9C", VA = "0x10EFD9C")]
		public static void CreateButton1Popup(MT_MenuPopupData data, [Optional] Action onButton1)
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x10EFEAC", Offset = "0x10EFEAC", VA = "0x10EFEAC")]
		public static void CreateButton2Popup(MT_MenuPopupData data, [Optional] Action onButton2)
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x10EFFBC", Offset = "0x10EFFBC", VA = "0x10EFFBC")]
		public static void CreateNoButtonPopup(MT_MenuPopupData data)
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x10EFCC8", Offset = "0x10EFCC8", VA = "0x10EFCC8")]
		private static MT_MenuPopup CreatePopup(MT_MenuPopupData data)
		{
			return null;
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x10F0030", Offset = "0x10F0030", VA = "0x10F0030")]
		private static MT_MenuPopup CreateEditorPopup()
		{
			return null;
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x10F0160", Offset = "0x10F0160", VA = "0x10F0160")]
		private static MT_MenuPopup CreateVRPopup()
		{
			return null;
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x10F02D8", Offset = "0x10F02D8", VA = "0x10F02D8", Slot = "5")]
		public void Terminate()
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x10F02DC", Offset = "0x10F02DC", VA = "0x10F02DC")]
		public MT_MenuPopupManager()
		{
		}
	}
	[Token(Token = "0x200045D")]
	public sealed class SplashCube : MonoBehaviour
	{
		[Token(Token = "0x200045E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A984", Offset = "0xE6A984")]
		private sealed class <RunCo>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SplashCube <>4__this;

			[Token(Token = "0x170002C5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017EF")]
				[Address(RVA = "0x32C9E24", Offset = "0x32C9E24", VA = "0x32C9E24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017F1")]
				[Address(RVA = "0x32C9E6C", Offset = "0x32C9E6C", VA = "0x32C9E6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017EC")]
			[Address(RVA = "0x32C9CE8", Offset = "0x32C9CE8", VA = "0x32C9CE8")]
			[DebuggerHidden]
			public <RunCo>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60017ED")]
			[Address(RVA = "0x32C9D14", Offset = "0x32C9D14", VA = "0x32C9D14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017EE")]
			[Address(RVA = "0x32C9D18", Offset = "0x32C9D18", VA = "0x32C9D18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017F0")]
			[Address(RVA = "0x32C9E2C", Offset = "0x32C9E2C", VA = "0x32C9E2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEngine.Animation animator;

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x32E1F48", Offset = "0x32E1F48", VA = "0x32E1F48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9131C", Offset = "0xE9131C")]
		public IEnumerator RunCo()
		{
			return null;
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x32E1FC0", Offset = "0x32E1FC0", VA = "0x32E1FC0")]
		public SplashCube()
		{
		}
	}
	[Token(Token = "0x200045F")]
	public class SplashFlow : MonoBehaviour
	{
		[Token(Token = "0x2000460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A994", Offset = "0xE6A994")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SplashFlow <>4__this;

			[Token(Token = "0x4001466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AsyncOperation activateOp;

			[Token(Token = "0x4001467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncOperation unloadOp;

			[Token(Token = "0x60017F7")]
			[Address(RVA = "0x32CA018", Offset = "0x32CA018", VA = "0x32CA018")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x60017F8")]
			[Address(RVA = "0x32CA020", Offset = "0x32CA020", VA = "0x32CA020")]
			internal bool <SplashCo>b__2()
			{
				return default(bool);
			}

			[Token(Token = "0x60017F9")]
			[Address(RVA = "0x32CA0A0", Offset = "0x32CA0A0", VA = "0x32CA0A0")]
			internal bool <SplashCo>b__3()
			{
				return default(bool);
			}

			[Token(Token = "0x60017FA")]
			[Address(RVA = "0x32CA0D0", Offset = "0x32CA0D0", VA = "0x32CA0D0")]
			internal bool <SplashCo>b__4()
			{
				return default(bool);
			}

			[Token(Token = "0x60017FB")]
			[Address(RVA = "0x32CA0EC", Offset = "0x32CA0EC", VA = "0x32CA0EC")]
			internal bool <SplashCo>b__5()
			{
				return default(bool);
			}

			[Token(Token = "0x60017FC")]
			[Address(RVA = "0x32CA108", Offset = "0x32CA108", VA = "0x32CA108")]
			internal bool <SplashCo>b__6()
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000461")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A9A4", Offset = "0xE6A9A4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__16_0;

			[Token(Token = "0x400146A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<bool> <>9__16_1;

			[Token(Token = "0x60017FE")]
			[Address(RVA = "0x32C9ED8", Offset = "0x32C9ED8", VA = "0x32C9ED8")]
			public <>c()
			{
			}

			[Token(Token = "0x60017FF")]
			[Address(RVA = "0x32C9EE0", Offset = "0x32C9EE0", VA = "0x32C9EE0")]
			internal bool <SplashCo>b__16_0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001800")]
			[Address(RVA = "0x32C9F7C", Offset = "0x32C9F7C", VA = "0x32C9F7C")]
			internal bool <SplashCo>b__16_1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000462")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A9B4", Offset = "0xE6A9B4")]
		private sealed class <SplashCo>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400146B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400146C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400146D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SplashFlow <>4__this;

			[Token(Token = "0x400146E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass16_0 <>8__1;

			[Token(Token = "0x400146F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Scene splashScene;

			[Token(Token = "0x170002C7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001804")]
				[Address(RVA = "0x32CAE10", Offset = "0x32CAE10", VA = "0x32CAE10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001806")]
				[Address(RVA = "0x32CAE58", Offset = "0x32CAE58", VA = "0x32CAE58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001801")]
			[Address(RVA = "0x32CA124", Offset = "0x32CA124", VA = "0x32CA124")]
			[DebuggerHidden]
			public <SplashCo>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001802")]
			[Address(RVA = "0x32CA150", Offset = "0x32CA150", VA = "0x32CA150", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001803")]
			[Address(RVA = "0x32CA154", Offset = "0x32CA154", VA = "0x32CA154", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001805")]
			[Address(RVA = "0x32CAE18", Offset = "0x32CAE18", VA = "0x32CAE18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SplashCube splashCube;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float timeBeforeAsyncLoad;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float loadCoPercentageComplete;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject loadScreen;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ShaderWarmup shaderWarmup;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RectTransform shaderImage;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject shaderWarmupMsg;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject particles;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform loadingPoint;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public MT_Fade slimFade;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AsyncOperationHandle<SceneInstance> mainMenuLoadOp;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static SceneInstance mainMenuSceneInstance;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _canActivateMenu;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AudioMixer _mainMixer;

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x32E1FC8", Offset = "0x32E1FC8", VA = "0x32E1FC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x32E2040", Offset = "0x32E2040", VA = "0x32E2040")]
		public void Run(Scene splashScene)
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x32E2070", Offset = "0x32E2070", VA = "0x32E2070")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE913CC", Offset = "0xE913CC")]
		private IEnumerator SplashCo(Scene splashScene)
		{
			return null;
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x32E20F8", Offset = "0x32E20F8", VA = "0x32E20F8")]
		private void StoreAsyncOperationHandle(AsyncOperationHandle<SceneInstance> asyncOperationHandle)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x32E21B4", Offset = "0x32E21B4", VA = "0x32E21B4")]
		public SplashFlow()
		{
		}
	}
	[Token(Token = "0x2000463")]
	public class MT_CalibrationScreen : MT_MenuScreen
	{
		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE81C3C", Offset = "0xE81C3C")]
		private readonly string <ScreenId>k__BackingField;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_UIButton continueButton;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE81C5C", Offset = "0xE81C5C")]
		private float inputDelay;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _inputEnabledTime;

		[Token(Token = "0x170002C9")]
		public override string ScreenId
		{
			[Token(Token = "0x6001807")]
			[Address(RVA = "0x1128608", Offset = "0x1128608", VA = "0x1128608", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9147C", Offset = "0xE9147C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000035")]
		public event Action OnContinue
		{
			[Token(Token = "0x6001808")]
			[Address(RVA = "0x1128610", Offset = "0x1128610", VA = "0x1128610")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9148C", Offset = "0xE9148C")]
			add
			{
			}
			[Token(Token = "0x6001809")]
			[Address(RVA = "0x11286B0", Offset = "0x11286B0", VA = "0x11286B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9149C", Offset = "0xE9149C")]
			remove
			{
			}
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x1128750", Offset = "0x1128750", VA = "0x1128750")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x1128780", Offset = "0x1128780", VA = "0x1128780")]
		private void Update()
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x11287E0", Offset = "0x11287E0", VA = "0x11287E0", Slot = "6")]
		public override void ResetScreen()
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x1128810", Offset = "0x1128810", VA = "0x1128810")]
		public MT_CalibrationScreen()
		{
		}
	}
	[Token(Token = "0x2000464")]
	public sealed class SplashScreen : MonoBehaviour
	{
		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject splashObject;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static AudioListener splashListener;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SplashFlow flow;

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x32E21C8", Offset = "0x32E21C8", VA = "0x32E21C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x32E2218", Offset = "0x32E2218", VA = "0x32E2218")]
		public SplashScreen()
		{
		}
	}
}
namespace MazeTheory.Loading
{
	[Token(Token = "0x2000465")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6A9C4", Offset = "0xE6A9C4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6A9C4", Offset = "0xE6A9C4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6A9C4", Offset = "0xE6A9C4")]
	public sealed class ToggleLoadingLogo : CallableActionNode<bool>
	{
		[Token(Token = "0x6001810")]
		[Address(RVA = "0x13522D8", Offset = "0x13522D8", VA = "0x13522D8", Slot = "12")]
		public override void Invoke(bool value)
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x135233C", Offset = "0x135233C", VA = "0x135233C")]
		public ToggleLoadingLogo()
		{
		}
	}
}
namespace MazeTheory.LightBaking
{
	[Token(Token = "0x2000466")]
	public sealed class DisableOnLightBake : MonoBehaviour
	{
		[Token(Token = "0x6001812")]
		[Address(RVA = "0x1008DC8", Offset = "0x1008DC8", VA = "0x1008DC8")]
		public DisableOnLightBake()
		{
		}
	}
	[Token(Token = "0x2000467")]
	public sealed class EnableOnLightBake : MonoBehaviour
	{
		[Token(Token = "0x6001813")]
		[Address(RVA = "0x100BD00", Offset = "0x100BD00", VA = "0x100BD00")]
		public EnableOnLightBake()
		{
		}
	}
}
namespace MazeTheory.Journal
{
	[Token(Token = "0x2000468")]
	public class MT_CollectibleUI : MonoBehaviour
	{
		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string collectibleElementTag;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE81CD0", Offset = "0xE81CD0")]
		[SerializeField]
		private List<GameObject> unresolvedState;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<GameObject> resolvedState;

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x112C580", Offset = "0x112C580", VA = "0x112C580")]
		public string GetTag()
		{
			return null;
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x112C588", Offset = "0x112C588", VA = "0x112C588")]
		public void SetState(CollectibleElementState state)
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x112C5F8", Offset = "0x112C5F8", VA = "0x112C5F8")]
		private void SetActiveList(List<GameObject> list, bool isActive)
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x112C724", Offset = "0x112C724", VA = "0x112C724")]
		public MT_CollectibleUI()
		{
		}
	}
	[Token(Token = "0x2000469")]
	public enum CollectibleElementState
	{
		[Token(Token = "0x400147C")]
		Unresolved,
		[Token(Token = "0x400147D")]
		Resolved
	}
	[Token(Token = "0x200046A")]
	public class MT_MissionUI : MonoBehaviour
	{
		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string missionId;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string title;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI titleText;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<MT_CollectibleUI> collectibles;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<GameObject> missionCompleteItems;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _numberOfCollectibles;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _collectedItems;

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x10F1544", Offset = "0x10F1544", VA = "0x10F1544")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x10F17F4", Offset = "0x10F17F4", VA = "0x10F17F4")]
		public string GetMissionId()
		{
			return null;
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x10F17FC", Offset = "0x10F17FC", VA = "0x10F17FC")]
		public void SetCollectibleElementResolved(string collectibleId, CollectibleElementState state)
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x10F1B04", Offset = "0x10F1B04", VA = "0x10F1B04")]
		private void CheckForMissionComplete()
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x10F1C2C", Offset = "0x10F1C2C", VA = "0x10F1C2C")]
		public MT_MissionUI()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public sealed class JournalController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200046C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AA4C", Offset = "0xE6AA4C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<JournalData.JournalPage, bool> <>9__16_0;

			[Token(Token = "0x4001494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<JournalData.JournalPage, bool> <>9__16_1;

			[Token(Token = "0x4001495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<JournalData.JournalPage, bool> <>9__16_2;

			[Token(Token = "0x4001496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<JournalData.JournalPage, bool> <>9__16_3;

			[Token(Token = "0x4001497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<JournalData.JournalPage, int> <>9__16_4;

			[Token(Token = "0x4001498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<JournalData.JournalPage, int> <>9__16_5;

			[Token(Token = "0x4001499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<JournalData.JournalPage, int> <>9__16_6;

			[Token(Token = "0x400149A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<JournalData.JournalPage, int> <>9__16_7;

			[Token(Token = "0x600182D")]
			[Address(RVA = "0x1033E70", Offset = "0x1033E70", VA = "0x1033E70")]
			public <>c()
			{
			}

			[Token(Token = "0x600182E")]
			[Address(RVA = "0x1033E78", Offset = "0x1033E78", VA = "0x1033E78")]
			internal bool <Setup>b__16_0(JournalData.JournalPage x)
			{
				return default(bool);
			}

			[Token(Token = "0x600182F")]
			[Address(RVA = "0x1033E98", Offset = "0x1033E98", VA = "0x1033E98")]
			internal bool <Setup>b__16_1(JournalData.JournalPage x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001830")]
			[Address(RVA = "0x1033EB8", Offset = "0x1033EB8", VA = "0x1033EB8")]
			internal bool <Setup>b__16_2(JournalData.JournalPage x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001831")]
			[Address(RVA = "0x1033ED8", Offset = "0x1033ED8", VA = "0x1033ED8")]
			internal bool <Setup>b__16_3(JournalData.JournalPage x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001832")]
			[Address(RVA = "0x1033EF8", Offset = "0x1033EF8", VA = "0x1033EF8")]
			internal int <Setup>b__16_4(JournalData.JournalPage x)
			{
				return default(int);
			}

			[Token(Token = "0x6001833")]
			[Address(RVA = "0x1033F10", Offset = "0x1033F10", VA = "0x1033F10")]
			internal int <Setup>b__16_5(JournalData.JournalPage x)
			{
				return default(int);
			}

			[Token(Token = "0x6001834")]
			[Address(RVA = "0x1033F28", Offset = "0x1033F28", VA = "0x1033F28")]
			internal int <Setup>b__16_6(JournalData.JournalPage x)
			{
				return default(int);
			}

			[Token(Token = "0x6001835")]
			[Address(RVA = "0x1033F40", Offset = "0x1033F40", VA = "0x1033F40")]
			internal int <Setup>b__16_7(JournalData.JournalPage x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x200046D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AA5C", Offset = "0xE6AA5C")]
		private sealed class <MovingPageCo>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400149B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400149C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400149D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JournalController <>4__this;

			[Token(Token = "0x170002CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001839")]
				[Address(RVA = "0x1034070", Offset = "0x1034070", VA = "0x1034070", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600183B")]
				[Address(RVA = "0x10340B8", Offset = "0x10340B8", VA = "0x10340B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001836")]
			[Address(RVA = "0x1033F58", Offset = "0x1033F58", VA = "0x1033F58")]
			[DebuggerHidden]
			public <MovingPageCo>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001837")]
			[Address(RVA = "0x1033F84", Offset = "0x1033F84", VA = "0x1033F84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001838")]
			[Address(RVA = "0x1033F88", Offset = "0x1033F88", VA = "0x1033F88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600183A")]
			[Address(RVA = "0x1034078", Offset = "0x1034078", VA = "0x1034078", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private JournalData data;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private JournalSectionType[] sectionOrder;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private JournalFlagUnlockTracker journalFlagUnlockTracker;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform pagesParent;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<JournalSectionType, IEnumerable<JournalData.JournalPage>> _pagesDic;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<JournalSectionType, JournalData.JournalPage> FirstPageDic;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Dictionary<JournalSectionType, JournalData.JournalPage> LastPageDic;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private JournalData.JournalPage[] _allPages;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _currentIndex;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JournalData.JournalPage _currentPage;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _isMovingPage;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string _latestPageName;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string _seenNewPageName;

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x10E6EF8", Offset = "0x10E6EF8", VA = "0x10E6EF8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x10E703C", Offset = "0x10E703C", VA = "0x10E703C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x10E7180", Offset = "0x10E7180", VA = "0x10E7180")]
		private void Start()
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x10E7184", Offset = "0x10E7184", VA = "0x10E7184")]
		public void Setup()
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x10E8020", Offset = "0x10E8020", VA = "0x10E8020")]
		public void OnJournalOpen()
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x10E817C", Offset = "0x10E817C", VA = "0x10E817C")]
		public void Next()
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x10E85B0", Offset = "0x10E85B0", VA = "0x10E85B0")]
		public void Previous()
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x10E86E8", Offset = "0x10E86E8", VA = "0x10E86E8")]
		public void GoToFirstUnlockedSectionPage(JournalSectionType section)
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x10E82CC", Offset = "0x10E82CC", VA = "0x10E82CC")]
		private void GoToCurrentPage()
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x10E88E0", Offset = "0x10E88E0", VA = "0x10E88E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE914AC", Offset = "0xE914AC")]
		private IEnumerator MovingPageCo()
		{
			return null;
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x10E8958", Offset = "0x10E8958", VA = "0x10E8958")]
		private void UpdateLatestFlag(JournalData.JournalPage addedJournalPage)
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x10E8998", Offset = "0x10E8998", VA = "0x10E8998")]
		public JournalController()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x10E8AD8", Offset = "0x10E8AD8", VA = "0x10E8AD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9150C", Offset = "0xE9150C")]
		private bool <OnJournalOpen>b__17_0(JournalData.JournalPage page)
		{
			return default(bool);
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x10E8B14", Offset = "0x10E8B14", VA = "0x10E8B14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9151C", Offset = "0xE9151C")]
		private void <MovingPageCo>b__22_0()
		{
		}
	}
	[Token(Token = "0x200046E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE6AA6C", Offset = "0xE6AA6C")]
	public class JournalData : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200046F")]
		public class JournalPage
		{
			[Token(Token = "0x400149F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JournalPageVisuals JournalPageGo;

			[Token(Token = "0x40014A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public JournalPageVisuals Visuals;

			[Token(Token = "0x40014A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JournalUnlockableItems UnlockableItems;

			[Token(Token = "0x40014A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool NeedsToBeUnlocked;

			[Token(Token = "0x40014A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string ProgressFlag;

			[Token(Token = "0x40014A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string NotificationLocalisedId;

			[Token(Token = "0x40014A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int PositionInSection;

			[Token(Token = "0x40014A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public JournalSectionType Section;

			[Token(Token = "0x600183D")]
			[Address(RVA = "0x10340C0", Offset = "0x10340C0", VA = "0x10340C0")]
			public JournalPage()
			{
			}
		}

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JournalPage[] journalPages;

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x10E8B1C", Offset = "0x10E8B1C", VA = "0x10E8B1C")]
		public JournalData()
		{
		}
	}
	[Token(Token = "0x2000470")]
	public class JournalFlagUnlockTracker : MonoBehaviour
	{
		[Token(Token = "0x2000471")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AAB0", Offset = "0xE6AAB0")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x40014AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string pageName;

			[Token(Token = "0x6001848")]
			[Address(RVA = "0x10341A4", Offset = "0x10341A4", VA = "0x10341A4")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001849")]
			[Address(RVA = "0x10341AC", Offset = "0x10341AC", VA = "0x10341AC")]
			internal bool <CheckItemFlagsForPageName>b__0(KeyValuePair<string, string> p)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000472")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AAC0", Offset = "0xE6AAC0")]
		private sealed class <>c
		{
			[Token(Token = "0x40014AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<string, string>, bool> <>9__14_1;

			[Token(Token = "0x600184B")]
			[Address(RVA = "0x103412C", Offset = "0x103412C", VA = "0x103412C")]
			public <>c()
			{
			}

			[Token(Token = "0x600184C")]
			[Address(RVA = "0x1034134", Offset = "0x1034134", VA = "0x1034134")]
			internal bool <CheckItemFlagsForPageName>b__14_1(KeyValuePair<string, string> itemFlag)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private JournalData data;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<string, string> _itemFlagPageFlagDictionary;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<string, string> _itemFlagPageNameDictionary;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly Dictionary<string, string> _itemFlagNotificationDictionary;

		[Token(Token = "0x14000036")]
		public event Action<JournalData.JournalPage> JournalPageUnlocked
		{
			[Token(Token = "0x600183E")]
			[Address(RVA = "0x10E6F9C", Offset = "0x10E6F9C", VA = "0x10E6F9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9157C", Offset = "0xE9157C")]
			add
			{
			}
			[Token(Token = "0x600183F")]
			[Address(RVA = "0x10E70E0", Offset = "0x10E70E0", VA = "0x10E70E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9158C", Offset = "0xE9158C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public event Action<string> JournalPageItemUnlocked
		{
			[Token(Token = "0x6001840")]
			[Address(RVA = "0x10E8B2C", Offset = "0x10E8B2C", VA = "0x10E8B2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9159C", Offset = "0xE9159C")]
			add
			{
			}
			[Token(Token = "0x6001841")]
			[Address(RVA = "0x10E8BCC", Offset = "0x10E8BCC", VA = "0x10E8BCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE915AC", Offset = "0xE915AC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x10E8C6C", Offset = "0x10E8C6C", VA = "0x10E8C6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x10E8DDC", Offset = "0x10E8DDC", VA = "0x10E8DDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x10E8E98", Offset = "0x10E8E98", VA = "0x10E8E98")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x10E8F54", Offset = "0x10E8F54", VA = "0x10E8F54")]
		private void ProgressionHandlerOnOnFlagAdded(string addedFlag)
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x10E83E0", Offset = "0x10E83E0", VA = "0x10E83E0")]
		public bool CheckItemFlagsForPageName(string pageName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x10E9138", Offset = "0x10E9138", VA = "0x10E9138")]
		public JournalFlagUnlockTracker()
		{
		}
	}
	[Token(Token = "0x2000473")]
	public sealed class JournalPageVisuals : MonoBehaviour
	{
		[Token(Token = "0x600184D")]
		[Address(RVA = "0x10106F0", Offset = "0x10106F0", VA = "0x10106F0")]
		public void Close()
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x1010718", Offset = "0x1010718", VA = "0x1010718")]
		public void Open(Action onOpen)
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x1010768", Offset = "0x1010768", VA = "0x1010768")]
		public JournalPageVisuals()
		{
		}
	}
	[Token(Token = "0x2000474")]
	public sealed class JournalPopup : MonoBehaviour
	{
		[Token(Token = "0x2000475")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AAD0", Offset = "0xE6AAD0")]
		private sealed class <ShowCo>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x40014B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JournalPopup <>4__this;

			[Token(Token = "0x170002CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001859")]
				[Address(RVA = "0x10347F8", Offset = "0x10347F8", VA = "0x10347F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600185B")]
				[Address(RVA = "0x1034840", Offset = "0x1034840", VA = "0x1034840", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001856")]
			[Address(RVA = "0x103474C", Offset = "0x103474C", VA = "0x103474C")]
			[DebuggerHidden]
			public <ShowCo>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001857")]
			[Address(RVA = "0x1034778", Offset = "0x1034778", VA = "0x1034778", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001858")]
			[Address(RVA = "0x103477C", Offset = "0x103477C", VA = "0x103477C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600185A")]
			[Address(RVA = "0x1034800", Offset = "0x1034800", VA = "0x1034800", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject background;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI text;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine _currentCo;

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x1010770", Offset = "0x1010770", VA = "0x1010770")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x1010848", Offset = "0x1010848", VA = "0x1010848")]
		public void Show(string text)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x1010898", Offset = "0x1010898", VA = "0x1010898")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x1010914", Offset = "0x1010914", VA = "0x1010914")]
		public void Show(string text, float time)
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x1010998", Offset = "0x1010998", VA = "0x1010998")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE915BC", Offset = "0xE915BC")]
		private IEnumerator ShowCo(float time)
		{
			return null;
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x1010A20", Offset = "0x1010A20", VA = "0x1010A20")]
		public JournalPopup()
		{
		}
	}
	[Token(Token = "0x2000476")]
	public static class JournalPublic
	{
		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE81E08", Offset = "0xE81E08")]
		private static JournalPopup <Popup>k__BackingField;

		[Token(Token = "0x170002CE")]
		public static JournalPopup Popup
		{
			[Token(Token = "0x600185D")]
			[Address(RVA = "0x1010C38", Offset = "0x1010C38", VA = "0x1010C38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9167C", Offset = "0xE9167C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600185C")]
			[Address(RVA = "0x1010BE4", Offset = "0x1010BE4", VA = "0x1010BE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9166C", Offset = "0xE9166C")]
			private set
			{
			}
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x10107F4", Offset = "0x10107F4", VA = "0x10107F4")]
		public static void RegisterPopup(JournalPopup p)
		{
		}
	}
	[Token(Token = "0x2000477")]
	public class JournalTab : MonoBehaviour
	{
		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private JournalSectionType section;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private JournalController controller;

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x1014028", Offset = "0x1014028", VA = "0x1014028")]
		public void OnSelect()
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x101404C", Offset = "0x101404C", VA = "0x101404C")]
		public JournalTab()
		{
		}
	}
	[Token(Token = "0x2000478")]
	public class JournalUnlockableItems : MonoBehaviour
	{
		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FlagObjectPair[] FlagObjectPairs;

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x1014054", Offset = "0x1014054", VA = "0x1014054")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x10140D0", Offset = "0x10140D0", VA = "0x10140D0")]
		public void Update()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x10141B4", Offset = "0x10141B4", VA = "0x10141B4")]
		public JournalUnlockableItems()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000479")]
	public struct FlagObjectPair
	{
		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string ProgressFlag;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject ObjectToEnable;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject ObjectTODisable;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string NotificationLocalisedId;

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x100D508", Offset = "0x100D508", VA = "0x100D508")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x200047A")]
	public class JournalUpdateNotification : MonoBehaviour
	{
		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private JournalHandler handler;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_HandPopup handPopup;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string defaultJournalNotificationId;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _lastFlagAdded;

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x10141BC", Offset = "0x10141BC", VA = "0x10141BC")]
		private void UpdateLatestPageFlag(JournalData.JournalPage addedPage)
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x10142B8", Offset = "0x10142B8", VA = "0x10142B8")]
		private void UpdateLatestItemFlag(string notificationId)
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x1014364", Offset = "0x1014364", VA = "0x1014364")]
		public JournalUpdateNotification()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public class CollectableInstanceEntry : ElementEntry
	{
		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CollectableThresholdChecker[] collectableThresholdCheckers;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public MT_Collectable collectableObj;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public HVRSocket socket;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private HVRSocketHoverScale[] scaleScripts;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool displayed;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private JournalCollectibleChecker jcc;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CollectableInstanceEntry example;

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x12097C0", Offset = "0x12097C0", VA = "0x12097C0")]
		private void InspectorAutoSetUp()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x1209B78", Offset = "0x1209B78", VA = "0x1209B78", Slot = "4")]
		public override void SetUp(SectionElement thisElement)
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x1209E90", Offset = "0x1209E90", VA = "0x1209E90", Slot = "6")]
		public override void SetUnlocked(bool isUnlocked, bool notify = true)
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x120A088", Offset = "0x120A088", VA = "0x120A088")]
		public void DisplayCollectableEntry()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x120A3D8", Offset = "0x120A3D8", VA = "0x120A3D8")]
		private void DisplaySocketedObj()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x120A32C", Offset = "0x120A32C", VA = "0x120A32C")]
		public void UndisplayCollectableEntry()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x120A970", Offset = "0x120A970", VA = "0x120A970")]
		private void UndisplaySocketObj()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x120A8CC", Offset = "0x120A8CC", VA = "0x120A8CC")]
		public void ToggleSocket(bool active)
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x120AE78", Offset = "0x120AE78", VA = "0x120AE78", Slot = "7")]
		public override void LoadEntry()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x120AEB8", Offset = "0x120AEB8", VA = "0x120AEB8")]
		public CollectableInstanceEntry()
		{
		}
	}
	[Token(Token = "0x200047C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE6AAE0", Offset = "0xE6AAE0")]
	public class CollectableTextEntry : MonoBehaviour
	{
		[Token(Token = "0x6001872")]
		[Address(RVA = "0x120AEC0", Offset = "0x120AEC0", VA = "0x120AEC0")]
		public CollectableTextEntry()
		{
		}
	}
	[Token(Token = "0x200047D")]
	public class ElementEntry : MonoBehaviour
	{
		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string entryFlag;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string thisEntryNotificationID;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool unlocked;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[NaughtyAttributes.ReadOnly]
		public SectionElement element;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool setUp;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE81EB8", Offset = "0xE81EB8")]
		private bool <_startsUnlocked>k__BackingField;

		[Token(Token = "0x170002CF")]
		protected bool _startsUnlocked
		{
			[Token(Token = "0x6001873")]
			[Address(RVA = "0x1009C84", Offset = "0x1009C84", VA = "0x1009C84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9168C", Offset = "0xE9168C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001874")]
			[Address(RVA = "0x1009C8C", Offset = "0x1009C8C", VA = "0x1009C8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9169C", Offset = "0xE9169C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x1009C98", Offset = "0x1009C98", VA = "0x1009C98", Slot = "4")]
		public virtual void SetUp(SectionElement thisElement)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x1009E64", Offset = "0x1009E64", VA = "0x1009E64")]
		public void FlagEventSubscriber()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x1009F4C", Offset = "0x1009F4C", VA = "0x1009F4C")]
		public void FlagEventUnSubscriber()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x100A034", Offset = "0x100A034", VA = "0x100A034")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x100A038", Offset = "0x100A038", VA = "0x100A038", Slot = "5")]
		public virtual void CheckFlagAddedOrRemoved(string flag)
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x100A300", Offset = "0x100A300", VA = "0x100A300")]
		public void SetUnlocked(bool isUnlocked)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x100A314", Offset = "0x100A314", VA = "0x100A314", Slot = "6")]
		public virtual void SetUnlocked(bool isUnlocked, bool notify = true)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x100A5E8", Offset = "0x100A5E8", VA = "0x100A5E8", Slot = "7")]
		public virtual void LoadEntry()
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x100A708", Offset = "0x100A708", VA = "0x100A708")]
		public void SaveStartingLockStatus()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x100A714", Offset = "0x100A714", VA = "0x100A714")]
		public ElementEntry()
		{
		}
	}
	[Token(Token = "0x200047E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE6AB68", Offset = "0xE6AB68")]
	public class IndexJournalPointer : MonoBehaviour
	{
		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HVRHandGrabber hand;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[NaughtyAttributes.ReadOnly]
		public IInteractableJournal jHandler;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[NaughtyAttributes.ReadOnly]
		public JournalButton_V2 closestButton;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[NaughtyAttributes.ReadOnly]
		public bool inPointRange;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[HideInInspector]
		public bool wasInPointRange;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public CapsuleCollider col;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _noButtonsErrorMessageTriggered;

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x10DCAC8", Offset = "0x10DCAC8", VA = "0x10DCAC8", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x10DCB70", Offset = "0x10DCB70", VA = "0x10DCB70")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x10DCD68", Offset = "0x10DCD68", VA = "0x10DCD68")]
		public void GetPointingRangeAndClosestButton()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x10DD294", Offset = "0x10DD294", VA = "0x10DD294")]
		public void HandlePointing()
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x10DD310", Offset = "0x10DD310", VA = "0x10DD310")]
		public void HandleHighlighting()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x10DD7C4", Offset = "0x10DD7C4", VA = "0x10DD7C4")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x10DD5B4", Offset = "0x10DD5B4", VA = "0x10DD5B4")]
		public bool PointRangeChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x10DD88C", Offset = "0x10DD88C", VA = "0x10DD88C")]
		public IndexJournalPointer()
		{
		}
	}
	[Token(Token = "0x200047F")]
	public class JournalButton_V2 : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6ABC8", Offset = "0xE6ABC8")]
		private sealed class <>c
		{
			[Token(Token = "0x40014F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<JournalButtonTextElement> <>9__29_0;

			[Token(Token = "0x6001893")]
			[Address(RVA = "0x1033DEC", Offset = "0x1033DEC", VA = "0x1033DEC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001894")]
			[Address(RVA = "0x1033DF4", Offset = "0x1033DF4", VA = "0x1033DF4")]
			internal bool <Start>b__29_0(JournalButtonTextElement x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image defaultImage;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image highlightedImage;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image selectedImage;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Pressed onPressed;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Hover onHover;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool canStaySelected;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool buttonDisabled;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool forceSelected;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE81F18", Offset = "0xE81F18")]
		public JournalSection watchedSection;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE81F50", Offset = "0xE81F50")]
		[NaughtyAttributes.ReadOnly]
		public List<JournalButtonTextElement> buttonTexts;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[NaughtyAttributes.ReadOnly]
		public bool isHighlighted;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[NaughtyAttributes.ReadOnly]
		public bool leftWasInRange;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		[NaughtyAttributes.ReadOnly]
		public bool rightWasInRange;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[NaughtyAttributes.ReadOnly]
		public HVRHandGrabber leftHand;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[NaughtyAttributes.ReadOnly]
		public HVRHandGrabber rightHand;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[NaughtyAttributes.ReadOnly]
		public IndexJournalPointer leftIndex;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[NaughtyAttributes.ReadOnly]
		public IndexJournalPointer rightIndex;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[NaughtyAttributes.ReadOnly]
		public MT_PoseHand poseHand;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[NaughtyAttributes.ReadOnly]
		public bool inClickRange;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[NaughtyAttributes.ReadOnly]
		public bool wasInClickRange;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[NaughtyAttributes.ReadOnly]
		public Collider col;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool colSet;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public elementButton linkedEB;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public bool hasLinkedEB;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private IInteractableJournal IInterJournal;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private JournalHandler handler;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static JournalButton_V2 currentPressed;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _watchingSection;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool isSPHandler;

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x10E4B54", Offset = "0x10E4B54", VA = "0x10E4B54")]
		private void Start()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x10E5078", Offset = "0x10E5078", VA = "0x10E5078")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x10E5610", Offset = "0x10E5610", VA = "0x10E5610")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x10E53AC", Offset = "0x10E53AC", VA = "0x10E53AC")]
		private void CheckFingerOverlap()
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x10DD5F0", Offset = "0x10DD5F0", VA = "0x10DD5F0")]
		public bool ClickRangeChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x10DD5D4", Offset = "0x10DD5D4", VA = "0x10DD5D4")]
		public void HighlightUpdate()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x10DD610", Offset = "0x10DD610", VA = "0x10DD610")]
		public void ToggleHighlightButton()
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x10E591C", Offset = "0x10E591C", VA = "0x10E591C")]
		public void SetButtonAppearanceTo(JournalButtonState state)
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x10E5A7C", Offset = "0x10E5A7C", VA = "0x10E5A7C")]
		public void PressButton()
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x10E5B60", Offset = "0x10E5B60", VA = "0x10E5B60")]
		public void HandleAltButtonPress(Button button)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x10E5B84", Offset = "0x10E5B84", VA = "0x10E5B84")]
		public JournalButton_V2()
		{
		}
	}
	[Token(Token = "0x2000481")]
	public enum JournalButtonState
	{
		[Token(Token = "0x40014F7")]
		DEFAULT,
		[Token(Token = "0x40014F8")]
		HIGHLIGHTED,
		[Token(Token = "0x40014F9")]
		SELECTED
	}
	[Serializable]
	[Token(Token = "0x2000482")]
	public class Pressed : UnityEvent
	{
		[Token(Token = "0x6001895")]
		[Address(RVA = "0x108C6E0", Offset = "0x108C6E0", VA = "0x108C6E0")]
		public Pressed()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000483")]
	public class Hover : UnityEvent
	{
		[Token(Token = "0x6001896")]
		[Address(RVA = "0x10DA720", Offset = "0x10DA720", VA = "0x10DA720")]
		public Hover()
		{
		}
	}
	[Token(Token = "0x2000484")]
	public sealed class JournalCollectibleChecker : SectionElement
	{
		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private int totalCount;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[NaughtyAttributes.ReadOnly]
		public int progressInt;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[HideInInspector]
		public int displayedEntryIndex;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public CollectableInstanceEntry currentDisplayedInstanceEntry;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private MT_CollectableManager cm;

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x10E5C10", Offset = "0x10E5C10", VA = "0x10E5C10", Slot = "4")]
		public override void ElementSetup(JournalSection sectionToSet, Action OnLinkingComplete)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x10E5E08", Offset = "0x10E5E08", VA = "0x10E5E08", Slot = "5")]
		public override void FlagEventSubscriber(bool subscribeEntries)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x10E5F40", Offset = "0x10E5F40", VA = "0x10E5F40", Slot = "6")]
		public override void FlagEventUnSubscriber()
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x10E6070", Offset = "0x10E6070", VA = "0x10E6070", Slot = "9")]
		public override void DisplayThisElement()
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x10E64F4", Offset = "0x10E64F4", VA = "0x10E64F4", Slot = "10")]
		public override void UnDisplayElement()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x10E6658", Offset = "0x10E6658", VA = "0x10E6658")]
		public void CheckIntSet(string flag, int value)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x10E6694", Offset = "0x10E6694", VA = "0x10E6694", Slot = "8")]
		public override void CheckFlagAddedOrRemoved(string flag)
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x10E683C", Offset = "0x10E683C", VA = "0x10E683C", Slot = "11")]
		protected override void AddToSectionList(bool notifyPlayer)
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x10E69F0", Offset = "0x10E69F0", VA = "0x10E69F0", Slot = "12")]
		public override void LoadElement()
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x10E6B68", Offset = "0x10E6B68", VA = "0x10E6B68")]
		public void ScrolLeft()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x10E6D20", Offset = "0x10E6D20", VA = "0x10E6D20")]
		public void ScrollRight()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x10E6ED4", Offset = "0x10E6ED4", VA = "0x10E6ED4", Slot = "13")]
		public override void SaveStartingAvailability()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x10E6EF0", Offset = "0x10E6EF0", VA = "0x10E6EF0")]
		public JournalCollectibleChecker()
		{
		}
	}
	[Token(Token = "0x2000485")]
	public class JournalElementSocket : SectionElement
	{
		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x10E8B24", Offset = "0x10E8B24", VA = "0x10E8B24")]
		public JournalElementSocket()
		{
		}
	}
	[Token(Token = "0x2000486")]
	public class JournalHandler : MonoBehaviour, IInteractableJournal
	{
		[Token(Token = "0x2000487")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6ABD8", Offset = "0xE6ABD8")]
		private sealed class <Setup>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400151D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400151E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400151F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JournalHandler <>4__this;

			[Token(Token = "0x4001520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action OnResetComplete;

			[Token(Token = "0x170002D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018C2")]
				[Address(RVA = "0x1034670", Offset = "0x1034670", VA = "0x1034670", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018C4")]
				[Address(RVA = "0x10346B8", Offset = "0x10346B8", VA = "0x10346B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018BF")]
			[Address(RVA = "0x1034360", Offset = "0x1034360", VA = "0x1034360")]
			[DebuggerHidden]
			public <Setup>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x60018C0")]
			[Address(RVA = "0x103438C", Offset = "0x103438C", VA = "0x103438C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018C1")]
			[Address(RVA = "0x1034390", Offset = "0x1034390", VA = "0x1034390", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018C3")]
			[Address(RVA = "0x1034678", Offset = "0x1034678", VA = "0x1034678", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6ABE8", Offset = "0xE6ABE8")]
		private sealed class <JournalSocketLinker>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JournalSocket socket;

			[Token(Token = "0x4001524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action OnLinkingComplete;

			[Token(Token = "0x170002D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018C8")]
				[Address(RVA = "0x1034310", Offset = "0x1034310", VA = "0x1034310", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018CA")]
				[Address(RVA = "0x1034358", Offset = "0x1034358", VA = "0x1034358", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018C5")]
			[Address(RVA = "0x1034200", Offset = "0x1034200", VA = "0x1034200")]
			[DebuggerHidden]
			public <JournalSocketLinker>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x60018C6")]
			[Address(RVA = "0x103422C", Offset = "0x103422C", VA = "0x103422C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018C7")]
			[Address(RVA = "0x1034230", Offset = "0x1034230", VA = "0x1034230", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018C9")]
			[Address(RVA = "0x1034318", Offset = "0x1034318", VA = "0x1034318", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE820AC", Offset = "0xE820AC")]
		public List<JournalSection> journalSections;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI sectionTitle;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VerticalLayoutGroup elementList;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int numberOfElementsToList;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button downNavButton;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button upNavButton;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float minPointingThreshold;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshProUGUI elementName;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject elementButtonPrefab;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject elementSocketPrefab;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ZA_AudioEvent audioManager;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public HVRSocket journalHolster;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<JournalStoryItem> JournalStoryItemPrefabs;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string journalUpdateNotifTextID;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string itemReturnedToInventoryNotifTextID;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string itemRemovedFromInventoryID;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE820E4", Offset = "0xE820E4")]
		[NaughtyAttributes.ReadOnly]
		public JournalSection currentSection;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[NaughtyAttributes.ReadOnly]
		public SectionElement currentlyDisplayedElement;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public bool displayingElement;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		[NaughtyAttributes.ReadOnly]
		public bool journalOpen;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		[NaughtyAttributes.ReadOnly]
		public bool updated;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[NaughtyAttributes.ReadOnly]
		public SectionElement latestElementAdded;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[NaughtyAttributes.ReadOnly]
		public List<elementButton> elementButtons;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[NaughtyAttributes.ReadOnly]
		public List<JournalButton_V2> allJournalButtons;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[NaughtyAttributes.ReadOnly]
		public List<List<elementButton>> pages;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public string notifTxt;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[NaughtyAttributes.ReadOnly]
		public bool journalStarted;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		[NaughtyAttributes.ReadOnly]
		public bool journalSaveLoaded;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		[NaughtyAttributes.ReadOnly]
		public bool journalSetUpComplete;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE821F0", Offset = "0xE821F0")]
		private bool <editor>k__BackingField;

		[Token(Token = "0x170002D0")]
		public List<JournalButton_V2> allJournalButtonsList
		{
			[Token(Token = "0x60018A5")]
			[Address(RVA = "0x10E920C", Offset = "0x10E920C", VA = "0x10E920C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D1")]
		public bool isJournalOpen
		{
			[Token(Token = "0x60018A6")]
			[Address(RVA = "0x10E9214", Offset = "0x10E9214", VA = "0x10E9214", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D2")]
		public float minPointingThresholdValue
		{
			[Token(Token = "0x60018A7")]
			[Address(RVA = "0x10E921C", Offset = "0x10E921C", VA = "0x10E921C", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D3")]
		public bool editor
		{
			[Token(Token = "0x60018A8")]
			[Address(RVA = "0x10E9224", Offset = "0x10E9224", VA = "0x10E9224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE916AC", Offset = "0xE916AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018A9")]
			[Address(RVA = "0x10E922C", Offset = "0x10E922C", VA = "0x10E922C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE916BC", Offset = "0xE916BC")]
			private set
			{
			}
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x10E9238", Offset = "0x10E9238", VA = "0x10E9238")]
		private void Start()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x10E9248", Offset = "0x10E9248", VA = "0x10E9248")]
		public void JournalStart()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x10E937C", Offset = "0x10E937C", VA = "0x10E937C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE916CC", Offset = "0xE916CC")]
		public IEnumerator Setup(Action OnResetComplete)
		{
			return null;
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x10E9410", Offset = "0x10E9410", VA = "0x10E9410")]
		public GameObject CreateElementButton()
		{
			return null;
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x10E951C", Offset = "0x10E951C", VA = "0x10E951C")]
		public void OnJournalOpen()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x10E9520", Offset = "0x10E9520", VA = "0x10E9520")]
		private void JournalOpenRoutine()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x10E95C8", Offset = "0x10E95C8", VA = "0x10E95C8")]
		public void OnJournalClose()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x10E95F8", Offset = "0x10E95F8", VA = "0x10E95F8")]
		private void ResetHandAnimation()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x10E9990", Offset = "0x10E9990", VA = "0x10E9990")]
		public void PopulateListPages(JournalSection section)
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x10E9C8C", Offset = "0x10E9C8C", VA = "0x10E9C8C")]
		public void SelectElementToDisplayOnOpening(JournalSection section)
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x10E9E50", Offset = "0x10E9E50", VA = "0x10E9E50")]
		public void DisplayListPage(JournalSection section, int pageToDisplay)
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x10EA0C4", Offset = "0x10EA0C4", VA = "0x10EA0C4")]
		private void SetListNavButtons(int pageToDisplay)
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x10EA1AC", Offset = "0x10EA1AC", VA = "0x10EA1AC")]
		public void LoadJournal(Action OnLoadComplete, [Optional] List<JournalStoryItem> itemsToUnlockOverride)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x10EA6B8", Offset = "0x10EA6B8", VA = "0x10EA6B8")]
		public void LinkJournalSocket(JournalSocket socket, Action OnLinkingComplete)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x10EA6E4", Offset = "0x10EA6E4", VA = "0x10EA6E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9172C", Offset = "0xE9172C")]
		private IEnumerator JournalSocketLinker(JournalSocket socket, Action OnLinkingComplete)
		{
			return null;
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x10EA778", Offset = "0x10EA778", VA = "0x10EA778")]
		public void ResetJournal(Action OnResetComplete)
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x10EAA70", Offset = "0x10EAA70", VA = "0x10EAA70")]
		public void OnJournalDestroy()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x10EAB10", Offset = "0x10EAB10", VA = "0x10EAB10")]
		public JournalStoryItem FindItemInJournalByFlag(string flag)
		{
			return null;
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x10EAE54", Offset = "0x10EAE54", VA = "0x10EAE54")]
		public void MarkAsKeyItemFromFlag(string elementFlag, bool isKeyItem)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x10EB158", Offset = "0x10EB158", VA = "0x10EB158")]
		public void MarkAsKeyItemFromElement(SectionElement element, bool isKeyItem)
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x10EB37C", Offset = "0x10EB37C", VA = "0x10EB37C")]
		public JournalHandler()
		{
		}
	}
	[Token(Token = "0x2000489")]
	public enum JournalSectionType
	{
		[Token(Token = "0x4001526")]
		Objectives,
		[Token(Token = "0x4001527")]
		Maps,
		[Token(Token = "0x4001528")]
		Bios,
		[Token(Token = "0x4001529")]
		Collections,
		[Token(Token = "0x400152A")]
		Items,
		[Token(Token = "0x400152B")]
		Entries
	}
	[Token(Token = "0x200048A")]
	public class JournalSection : MonoBehaviour
	{
		[Token(Token = "0x200048B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6ABF8", Offset = "0xE6ABF8")]
		private sealed class <LinkageChecker>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400153A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400153B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400153C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JournalSection <>4__this;

			[Token(Token = "0x400153D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action OnLinkageComplete;

			[Token(Token = "0x400153E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <allLinked>5__2;

			[Token(Token = "0x170002D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018DB")]
				[Address(RVA = "0x1034A10", Offset = "0x1034A10", VA = "0x1034A10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018DD")]
				[Address(RVA = "0x1034A58", Offset = "0x1034A58", VA = "0x1034A58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018D8")]
			[Address(RVA = "0x1034848", Offset = "0x1034848", VA = "0x1034848")]
			[DebuggerHidden]
			public <LinkageChecker>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60018D9")]
			[Address(RVA = "0x1034874", Offset = "0x1034874", VA = "0x1034874", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018DA")]
			[Address(RVA = "0x1034878", Offset = "0x1034878", VA = "0x1034878", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018DC")]
			[Address(RVA = "0x1034A18", Offset = "0x1034A18", VA = "0x1034A18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE82200", Offset = "0xE82200")]
		public JournalSectionType section;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string SectionNameStringID;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject unreadDot;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool newToOld;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool linearProgress;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE82238", Offset = "0xE82238")]
		[NaughtyAttributes.ReadOnly]
		public List<SectionElement> allSectionElements;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[NaughtyAttributes.ReadOnly]
		public List<SectionElement> availableSectionElements;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[NaughtyAttributes.ReadOnly]
		public int displayedPage;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[NaughtyAttributes.ReadOnly]
		public SectionElement lastElementSeen;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public JournalButton_V2 tabForSection;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool tabSet;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public JournalHandler handler;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public int indexInHandler;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private VerticalLayoutGroup _sectionList;

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x1010C84", Offset = "0x1010C84", VA = "0x1010C84", Slot = "4")]
		public virtual void SectionSetup(JournalHandler Jhandler, int index)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x1011008", Offset = "0x1011008", VA = "0x1011008", Slot = "5")]
		public virtual void OpenSection()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x1011404", Offset = "0x1011404", VA = "0x1011404", Slot = "6")]
		public virtual void CloseSection()
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x1011658", Offset = "0x1011658", VA = "0x1011658")]
		public void ToggleSubscription(bool on)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x1011714", Offset = "0x1011714", VA = "0x1011714")]
		public void LoadSection(Action OnJournalItemsLoadComplete, List<JournalStoryItem> itemsToUnlockOverride)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x1011960", Offset = "0x1011960", VA = "0x1011960")]
		public void LoadJournalItemsFromSection(Action OnJournalItemsLoadComplete)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x1011820", Offset = "0x1011820", VA = "0x1011820")]
		private void LoadJournalItemsFromSection(Action OnJournalItemsLoadComplete, List<JournalStoryItem> itemsToUnlock)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x1011C10", Offset = "0x1011C10", VA = "0x1011C10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9182C", Offset = "0xE9182C")]
		private IEnumerator LinkageChecker(Action OnLinkageComplete)
		{
			return null;
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x1011B24", Offset = "0x1011B24", VA = "0x1011B24")]
		private SectionElement PreloadJournalItem(JournalStoryItem prefab)
		{
			return null;
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x1011CF4", Offset = "0x1011CF4", VA = "0x1011CF4")]
		public void ScrollDown()
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x1011D74", Offset = "0x1011D74", VA = "0x1011D74")]
		public void ScrollUp()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x1011DA8", Offset = "0x1011DA8", VA = "0x1011DA8")]
		public void OnSectionDestroy()
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x1011E4C", Offset = "0x1011E4C", VA = "0x1011E4C")]
		public JournalSection()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class JournalSocket : HVRSocket
	{
		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[SerializeField]
		private Vector3 smallScale;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private HVRSocketHoverScale[] scaleScripts;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public HVRGrabbable grabbable;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Collider[] grabbablePhysicsColliders;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[HideInInspector]
		public bool isActive;

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x1011F04", Offset = "0x1011F04", VA = "0x1011F04")]
		public void SocketSetup(Action OnLinkingComplete)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x1012504", Offset = "0x1012504", VA = "0x1012504")]
		private new void Update()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x1012524", Offset = "0x1012524", VA = "0x1012524")]
		private new void OnEnable()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x1012630", Offset = "0x1012630", VA = "0x1012630")]
		private new void OnDisable()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x1012634", Offset = "0x1012634", VA = "0x1012634", Slot = "24")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x101203C", Offset = "0x101203C", VA = "0x101203C")]
		public void ToggleSocket(bool active)
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x101274C", Offset = "0x101274C", VA = "0x101274C")]
		public void OnObjectGrabbed(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x10127B0", Offset = "0x10127B0", VA = "0x10127B0")]
		public void OnObjectReleased(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x1012804", Offset = "0x1012804", VA = "0x1012804")]
		public void RegisterGrabbable(HVRGrabbable newGrabbable)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x10128A4", Offset = "0x10128A4", VA = "0x10128A4")]
		public void ClearGrabbable()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x10128F4", Offset = "0x10128F4", VA = "0x10128F4")]
		public JournalSocket()
		{
		}
	}
	[Token(Token = "0x200048D")]
	public class SectionElement : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200048E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AC08", Offset = "0xE6AC08")]
		private sealed class <>c
		{
			[Token(Token = "0x4001558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001559")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<JournalSection> <>9__32_0;

			[Token(Token = "0x60018FF")]
			[Address(RVA = "0x32C845C", Offset = "0x32C845C", VA = "0x32C845C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001900")]
			[Address(RVA = "0x32C8464", Offset = "0x32C8464", VA = "0x32C8464")]
			internal bool <MarkFlagAsCurrentObjective>b__32_0(JournalSection x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE82314", Offset = "0xE82314")]
		public string elementTitleID;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string thisElementFlag;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string elementButtonTextID;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string thisElementNotificationID;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool available;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<ElementEntry> entries;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE8234C", Offset = "0xE8234C")]
		[NaughtyAttributes.ReadOnly]
		public JournalSection section;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[NaughtyAttributes.ReadOnly]
		[SerializeField]
		protected bool completed;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[NaughtyAttributes.ReadOnly]
		public List<ElementEntry> unlockedEntries;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool _setUp;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[NaughtyAttributes.ReadOnly]
		public bool displayed;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[NaughtyAttributes.ReadOnly]
		public bool isKeyItem;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public elementButton button;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public bool buttonAssigned;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public HVRHandGrabber lastHandThatGrabbed;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public JournalSocket socket;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public bool isLinked;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static JournalHandler handler;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private protected bool breakOutOfFlagCheck;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE82460", Offset = "0xE82460")]
		private bool <_startsAvailable>k__BackingField;

		[Token(Token = "0x170002DA")]
		public bool _startsAvailable
		{
			[Token(Token = "0x60018E9")]
			[Address(RVA = "0x32D8024", Offset = "0x32D8024", VA = "0x32D8024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE918DC", Offset = "0xE918DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018EA")]
			[Address(RVA = "0x32D802C", Offset = "0x32D802C", VA = "0x32D802C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE918EC", Offset = "0xE918EC")]
			protected set
			{
			}
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x32D8038", Offset = "0x32D8038", VA = "0x32D8038", Slot = "4")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE918FC", Offset = "0xE918FC")]
		public virtual void ElementSetup(JournalSection sectionToSet, Action OnLinkingComplete)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x32D84F4", Offset = "0x32D84F4", VA = "0x32D84F4", Slot = "5")]
		public virtual void FlagEventSubscriber(bool subscribeEntries)
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x32D8654", Offset = "0x32D8654", VA = "0x32D8654", Slot = "6")]
		public virtual void FlagEventUnSubscriber()
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x32D87A4", Offset = "0x32D87A4", VA = "0x32D87A4")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x32D87B0", Offset = "0x32D87B0", VA = "0x32D87B0", Slot = "7")]
		public virtual void StringChecker()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x32D893C", Offset = "0x32D893C", VA = "0x32D893C", Slot = "8")]
		public virtual void CheckFlagAddedOrRemoved(string flag)
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x32D8B7C", Offset = "0x32D8B7C", VA = "0x32D8B7C", Slot = "9")]
		public virtual void DisplayThisElement()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x32D8DAC", Offset = "0x32D8DAC", VA = "0x32D8DAC", Slot = "10")]
		public virtual void UnDisplayElement()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x32D8ED0", Offset = "0x32D8ED0", VA = "0x32D8ED0")]
		public void MarkElementAsCurrentObjective()
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x32D8FD0", Offset = "0x32D8FD0", VA = "0x32D8FD0")]
		public static void MarkFlagAsCurrentObjective(string elementFlag)
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x32D8A88", Offset = "0x32D8A88", VA = "0x32D8A88")]
		public void SetElementAvailability(bool unlocked, bool notifyPlayer = true)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x32D9228", Offset = "0x32D9228", VA = "0x32D9228")]
		private void SetUnavailable()
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x32D94C0", Offset = "0x32D94C0", VA = "0x32D94C0")]
		private void CheckAndSetElementCompletion()
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x32D97C4", Offset = "0x32D97C4", VA = "0x32D97C4", Slot = "11")]
		protected virtual void AddToSectionList(bool notifyPlayer)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x32D9638", Offset = "0x32D9638", VA = "0x32D9638")]
		private void RemoveFromSectionList(bool notifyPlayer)
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x32D99F4", Offset = "0x32D99F4", VA = "0x32D99F4", Slot = "12")]
		public virtual void LoadElement()
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x32D9B84", Offset = "0x32D9B84", VA = "0x32D9B84", Slot = "13")]
		public virtual void SaveStartingAvailability()
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x32D8444", Offset = "0x32D8444", VA = "0x32D8444")]
		private bool TryCheckSocket()
		{
			return default(bool);
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x32D9B90", Offset = "0x32D9B90", VA = "0x32D9B90")]
		public SectionElement()
		{
		}
	}
	[Token(Token = "0x200048F")]
	public class MT_Journal : MT_Switchable
	{
		[Token(Token = "0x2000490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AC18", Offset = "0xE6AC18")]
		private sealed class <WaitToDisableRenderTexture>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001573")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_Journal <>4__this;

			[Token(Token = "0x170002DC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001924")]
				[Address(RVA = "0x10391AC", Offset = "0x10391AC", VA = "0x10391AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001926")]
				[Address(RVA = "0x10391F4", Offset = "0x10391F4", VA = "0x10391F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001921")]
			[Address(RVA = "0x10390B0", Offset = "0x10390B0", VA = "0x10390B0")]
			[DebuggerHidden]
			public <WaitToDisableRenderTexture>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6001922")]
			[Address(RVA = "0x10390DC", Offset = "0x10390DC", VA = "0x10390DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001923")]
			[Address(RVA = "0x10390E0", Offset = "0x10390E0", VA = "0x10390E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001925")]
			[Address(RVA = "0x10391B4", Offset = "0x10391B4", VA = "0x10391B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000491")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AC28", Offset = "0xE6AC28")]
		private sealed class <>c__DisplayClass49_0
		{
			[Token(Token = "0x4001576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<GameObject> pageObjectRange;

			[Token(Token = "0x4001577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MT_Journal <>4__this;

			[Token(Token = "0x6001927")]
			[Address(RVA = "0x1038CFC", Offset = "0x1038CFC", VA = "0x1038CFC")]
			public <>c__DisplayClass49_0()
			{
			}

			[Token(Token = "0x6001928")]
			[Address(RVA = "0x1038D04", Offset = "0x1038D04", VA = "0x1038D04")]
			internal void <OpenJournalHomePage>b__0()
			{
			}
		}

		[Token(Token = "0x2000492")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AC38", Offset = "0xE6AC38")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x4001578")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<GameObject> pageObjectRange;

			[Token(Token = "0x4001579")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MT_Journal <>4__this;

			[Token(Token = "0x6001929")]
			[Address(RVA = "0x1038ED0", Offset = "0x1038ED0", VA = "0x1038ED0")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x600192A")]
			[Address(RVA = "0x1038ED8", Offset = "0x1038ED8", VA = "0x1038ED8")]
			internal void <CloseJournal>b__0()
			{
			}
		}

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE82470", Offset = "0xE82470")]
		[SerializeField]
		private List<GameObject> pages;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MT_JournalPage rightPage;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MT_JournalPage leftPage;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE824C8", Offset = "0xE824C8")]
		[SerializeField]
		private float pageOffset;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float frontCoverOffset;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float backCoverOffset;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE82520", Offset = "0xE82520")]
		[SerializeField]
		private float openCloseSpeed;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE82558", Offset = "0xE82558")]
		private int homePage;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Camera renderTextureCamera;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Camera secondRenderTextureCamera;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE82598", Offset = "0xE82598")]
		public Material renderTextureMat;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Material secondRenderTextureMat;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform renderTextureCanvas;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform secondRenderTextureCanvas;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTexture _renderTexture;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture _secondRenderTexture;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Canvas _canvas;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Canvas _secondCanvas;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<GameObject> _activePages;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int _currentPage;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool _isAnimated;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private DG.Tweening.Sequence _openCloseTween;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Coroutine _disableRenderTexture;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int _grabbedPage;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public bool IsGrabbedByNpc;

		[Token(Token = "0x170002DB")]
		public int GrabbedPage
		{
			[Token(Token = "0x6001901")]
			[Address(RVA = "0x1253204", Offset = "0x1253204", VA = "0x1253204")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001902")]
			[Address(RVA = "0x125320C", Offset = "0x125320C", VA = "0x125320C")]
			set
			{
			}
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x1253214", Offset = "0x1253214", VA = "0x1253214")]
		public bool IsGrabbable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x125321C", Offset = "0x125321C", VA = "0x125321C")]
		public bool IsGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x1253224", Offset = "0x1253224", VA = "0x1253224")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x1253A48", Offset = "0x1253A48", VA = "0x1253A48", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x1253B18", Offset = "0x1253B18", VA = "0x1253B18")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x1253258", Offset = "0x1253258", VA = "0x1253258")]
		private void CreateRenderTextures()
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x1253428", Offset = "0x1253428", VA = "0x1253428")]
		public void DisableAllContent()
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x1253BDC", Offset = "0x1253BDC", VA = "0x1253BDC")]
		protected void OnGrab(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x1253698", Offset = "0x1253698", VA = "0x1253698")]
		private void SetActivePages()
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x1253BE0", Offset = "0x1253BE0", VA = "0x1253BE0")]
		public GameObject GetPageObject(int page)
		{
			return null;
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x1253C74", Offset = "0x1253C74", VA = "0x1253C74")]
		public GameObject GetPageObjectByPageNumber(int pageNumber)
		{
			return null;
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x1253E70", Offset = "0x1253E70", VA = "0x1253E70")]
		public List<GameObject> GetPageObjectRange(int min, int max)
		{
			return null;
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x1253F98", Offset = "0x1253F98", VA = "0x1253F98")]
		public List<GameObject> GetAllPages()
		{
			return null;
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x1253FA0", Offset = "0x1253FA0", VA = "0x1253FA0")]
		public int GetCurrentPage()
		{
			return default(int);
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x1253FA8", Offset = "0x1253FA8", VA = "0x1253FA8")]
		public int GetNumberOfPages()
		{
			return default(int);
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x1253FF4", Offset = "0x1253FF4", VA = "0x1253FF4")]
		public void SetNextPage()
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x1254004", Offset = "0x1254004", VA = "0x1254004")]
		public void SetPrevPage()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x1254014", Offset = "0x1254014", VA = "0x1254014")]
		public void SetNewCurrentPage(int newPage)
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x125401C", Offset = "0x125401C", VA = "0x125401C")]
		public void SetNewHomePage(int newHomePage)
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x1254024", Offset = "0x1254024", VA = "0x1254024")]
		public void UpdateRenderTexture()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x12540C8", Offset = "0x12540C8", VA = "0x12540C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE91974", Offset = "0xE91974")]
		private IEnumerator WaitToDisableRenderTexture()
		{
			return null;
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x1254140", Offset = "0x1254140", VA = "0x1254140")]
		public void OpenJournalHomePage()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x12546A4", Offset = "0x12546A4", VA = "0x12546A4")]
		private void EnablePageContent()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x12549C0", Offset = "0x12549C0", VA = "0x12549C0")]
		public void CloseJournal()
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x1254D38", Offset = "0x1254D38", VA = "0x1254D38")]
		public void SetToggleState()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x1254D4C", Offset = "0x1254D4C", VA = "0x1254D4C")]
		public void SetPagesActive()
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x1254DC0", Offset = "0x1254DC0", VA = "0x1254DC0")]
		public void AddPage(int pageNumber)
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x1254FC0", Offset = "0x1254FC0", VA = "0x1254FC0")]
		public void AddPage(string pageId)
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x12551C8", Offset = "0x12551C8", VA = "0x12551C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x1255268", Offset = "0x1255268", VA = "0x1255268")]
		public MT_Journal()
		{
		}
	}
	[Token(Token = "0x2000493")]
	public class MT_JournalMarker : MT_Interactable
	{
		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private MT_Journal journal;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private MT_JournalPage rightPage;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private MT_JournalPage leftPage;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private int page;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private MT_JournalPage _currentPage;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private List<GameObject> _pageObjectRange;

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x1255394", Offset = "0x1255394", VA = "0x1255394", Slot = "21")]
		protected override void OnGrab()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x1255724", Offset = "0x1255724", VA = "0x1255724", Slot = "20")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x1255824", Offset = "0x1255824", VA = "0x1255824")]
		public MT_JournalMarker()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x1255848", Offset = "0x1255848", VA = "0x1255848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE91A24", Offset = "0xE91A24")]
		private void <OnDrop>b__7_0()
		{
		}
	}
	[Token(Token = "0x2000494")]
	public class MT_JournalPage : MT_Interactable
	{
		[Token(Token = "0x2000495")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AC48", Offset = "0xE6AC48")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4001597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_JournalPage <>4__this;

			[Token(Token = "0x4001598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onAutoOpenFinish;

			[Token(Token = "0x600193B")]
			[Address(RVA = "0x10391FC", Offset = "0x10391FC", VA = "0x10391FC")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x600193C")]
			[Address(RVA = "0x1039204", Offset = "0x1039204", VA = "0x1039204")]
			internal void <AutoOpen>b__0()
			{
			}
		}

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private MT_Journal journal;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private bool isRightPage;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE82608", Offset = "0xE82608")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE82608", Offset = "0xE82608")]
		private float autoOpenAngle;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8265C", Offset = "0xE8265C")]
		private float autoOpenSpeed;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public UnityEvent onPageTurnFinish;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public UnityEvent onJournalOpen;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public UnityEvent onJournalClosed;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Vector3 _lastHandInteractorPos;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private float _startAngle;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private float _currentAngle;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private bool _isOpening;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private DG.Tweening.Sequence _autoOpenTween;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private GameObject _currentPageObject;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Transform _prevPageParent;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private Transform _prevAttachPointParent;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Vector3 _startAttachPointPos;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		private Quaternion _startAttachPointRot;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private IPageBlend _pageBlend;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private bool _hasBlend;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private int _activeContentPage;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private bool _isMat;

		[Token(Token = "0x4001595")]
		private const float MaxAngle = 180f;

		[Token(Token = "0x4001596")]
		private const float AngleThreshold = 1f;

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x1257F84", Offset = "0x1257F84", VA = "0x1257F84", Slot = "21")]
		protected override void OnGrab()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x1255648", Offset = "0x1255648", VA = "0x1255648")]
		public void RemoteGrab(Transform handInteractorTransform)
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x12580BC", Offset = "0x12580BC", VA = "0x12580BC")]
		private void SetUpPageContent(bool isRemoteGrab)
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x1258B74", Offset = "0x1258B74", VA = "0x1258B74", Slot = "20")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x12557BC", Offset = "0x12557BC", VA = "0x12557BC")]
		public void RemoteDrop(int newPage, [Optional] Action onAutoOpenFinish)
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x1258570", Offset = "0x1258570", VA = "0x1258570")]
		private void EnablePageContent()
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x1258F98", Offset = "0x1258F98", VA = "0x1258F98")]
		private void DisablePageContent()
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x1259688", Offset = "0x1259688", VA = "0x1259688", Slot = "22")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x12596C8", Offset = "0x12596C8", VA = "0x12596C8")]
		private void UpdatePage()
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x1258CC0", Offset = "0x1258CC0", VA = "0x1258CC0")]
		private void AutoOpen([Optional] Action onAutoOpenFinish)
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x1259904", Offset = "0x1259904", VA = "0x1259904")]
		public bool IsPageOpening()
		{
			return default(bool);
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x125990C", Offset = "0x125990C", VA = "0x125990C")]
		public MT_JournalPage()
		{
		}
	}
	[Token(Token = "0x2000496")]
	public class MT_JournalParameters : MonoBehaviour, IGameModule
	{
		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MT_Journal journal;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_MapController map;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MT_CollectiblesController collectibles;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MT_GrabJournalController grabJournalController;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<IPageBlend> _pageBlends;

		[Token(Token = "0x170002DE")]
		public List<IPageBlend> PageBlends
		{
			[Token(Token = "0x600193D")]
			[Address(RVA = "0x1259940", Offset = "0x1259940", VA = "0x1259940")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x1259948", Offset = "0x1259948", VA = "0x1259948")]
		public void Awake()
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x12599F4", Offset = "0x12599F4", VA = "0x12599F4", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x1255CD4", Offset = "0x1255CD4", VA = "0x1255CD4")]
		public static MT_JournalParameters Instance()
		{
			return null;
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x1259BF8", Offset = "0x1259BF8", VA = "0x1259BF8", Slot = "5")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x1259C5C", Offset = "0x1259C5C", VA = "0x1259C5C")]
		public MT_JournalParameters()
		{
		}
	}
	[Token(Token = "0x2000497")]
	public interface IPageBlend
	{
		[Token(Token = "0x6001943")]
		string GetPageId();

		[Token(Token = "0x6001944")]
		int GetPageNumber();

		[Token(Token = "0x6001945")]
		void SetPageMaterial(Material material, bool isFirstMat, Transform parent);

		[Token(Token = "0x6001946")]
		void EnableFrontPageContent(bool isEnabled);

		[Token(Token = "0x6001947")]
		void EnableBackPageContent(bool isEnabled);

		[Token(Token = "0x6001948")]
		void BlendPage(float distance, bool isRightPage);

		[Token(Token = "0x6001949")]
		void ResetPage(float duration);

		[Token(Token = "0x600194A")]
		Transform GetHandAttachBone();

		[Token(Token = "0x600194B")]
		Dictionary<TextMeshProUGUI, int> GetFrontTextFields();

		[Token(Token = "0x600194C")]
		Dictionary<Image, int> GetFrontImages();

		[Token(Token = "0x600194D")]
		Dictionary<TextMeshProUGUI, int> GetBackTextFields();

		[Token(Token = "0x600194E")]
		Dictionary<Image, int> GetBackImages();
	}
	[Token(Token = "0x2000498")]
	public class MT_PageBlend : MonoBehaviour, IPageBlend
	{
		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string pageId;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int pageNumber;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject frontPageBehaviours;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject backPageBehaviours;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE826DC", Offset = "0xE826DC")]
		[SerializeField]
		private GameObject frontPage;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject backPage;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SkinnedMeshRenderer frontPageRenderer;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SkinnedMeshRenderer backPageRenderer;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE82744", Offset = "0xE82744")]
		[SerializeField]
		private List<TextMeshProUGUI> frontTextFields;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<Image> frontImages;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE8278C", Offset = "0xE8278C")]
		[SerializeField]
		private List<TextMeshProUGUI> backTextFields;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private List<Image> backImages;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform handAttachBone;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform[] pageBones;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE827F4", Offset = "0xE827F4")]
		private float minBoneRot;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE82838", Offset = "0xE82838")]
		private float maxBoneRot;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 _frontContentLocalPos;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 _backContentLocalPos;

		[Token(Token = "0x40015B0")]
		private const float MinDistance = 0.12f;

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x11053B8", Offset = "0x11053B8", VA = "0x11053B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x1105698", Offset = "0x1105698", VA = "0x1105698", Slot = "4")]
		public string GetPageId()
		{
			return null;
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x11056A0", Offset = "0x11056A0", VA = "0x11056A0", Slot = "5")]
		public int GetPageNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x11056A8", Offset = "0x11056A8", VA = "0x11056A8", Slot = "6")]
		public void SetPageMaterial(Material material, bool isFirstMat, Transform parent)
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x11054C8", Offset = "0x11054C8", VA = "0x11054C8", Slot = "7")]
		public void EnableFrontPageContent(bool isEnabled)
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x11055B0", Offset = "0x11055B0", VA = "0x11055B0", Slot = "8")]
		public void EnableBackPageContent(bool isEnabled)
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x1105898", Offset = "0x1105898", VA = "0x1105898", Slot = "9")]
		public void BlendPage(float distance, bool isRightPage)
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x110595C", Offset = "0x110595C", VA = "0x110595C", Slot = "10")]
		public void ResetPage(float duration)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x1105A30", Offset = "0x1105A30", VA = "0x1105A30", Slot = "11")]
		public Transform GetHandAttachBone()
		{
			return null;
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x1105A38", Offset = "0x1105A38", VA = "0x1105A38", Slot = "12")]
		public Dictionary<TextMeshProUGUI, int> GetFrontTextFields()
		{
			return null;
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x1105BB4", Offset = "0x1105BB4", VA = "0x1105BB4", Slot = "13")]
		public Dictionary<Image, int> GetFrontImages()
		{
			return null;
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x1105D30", Offset = "0x1105D30", VA = "0x1105D30", Slot = "14")]
		public Dictionary<TextMeshProUGUI, int> GetBackTextFields()
		{
			return null;
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x1105EAC", Offset = "0x1105EAC", VA = "0x1105EAC", Slot = "15")]
		public Dictionary<Image, int> GetBackImages()
		{
			return null;
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x1106028", Offset = "0x1106028", VA = "0x1106028")]
		public MT_PageBlend()
		{
		}
	}
	[Token(Token = "0x2000499")]
	public class MT_Pen : MonoBehaviour
	{
		[Token(Token = "0x200049A")]
		private enum SurfaceType
		{
			[Token(Token = "0x40015D1")]
			Opaque,
			[Token(Token = "0x40015D2")]
			Transparent
		}

		[Token(Token = "0x200049B")]
		private enum BlendMode
		{
			[Token(Token = "0x40015D4")]
			Alpha,
			[Token(Token = "0x40015D5")]
			Premultiply,
			[Token(Token = "0x40015D6")]
			Additive,
			[Token(Token = "0x40015D7")]
			Multiply
		}

		[Token(Token = "0x200049C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AC58", Offset = "0xE6AC58")]
		private sealed class <DustMotesOff>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_Pen <>4__this;

			[Token(Token = "0x170002DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001968")]
				[Address(RVA = "0x32B71E8", Offset = "0x32B71E8", VA = "0x32B71E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600196A")]
				[Address(RVA = "0x32B7230", Offset = "0x32B7230", VA = "0x32B7230", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001965")]
			[Address(RVA = "0x32B70D4", Offset = "0x32B70D4", VA = "0x32B70D4")]
			[DebuggerHidden]
			public <DustMotesOff>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001966")]
			[Address(RVA = "0x32B7100", Offset = "0x32B7100", VA = "0x32B7100", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001967")]
			[Address(RVA = "0x32B7104", Offset = "0x32B7104", VA = "0x32B7104", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001969")]
			[Address(RVA = "0x32B71F0", Offset = "0x32B71F0", VA = "0x32B71F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform penPoint;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform eraserPoint;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject linePrefab;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Material penMaterial;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material eraserMaterial;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem dustMotes;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float penLineWidth;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float eraserWidth;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _currentMaterial;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _penLineExists;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _eraserLineExists;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 _prevPoint;

		[Token(Token = "0x40015BE")]
		private const string PaintableTag = "Paintable";

		[Token(Token = "0x40015BF")]
		private const string PaintableName = "Paint_Sheet";

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ParticleSystemRenderer particleRenderer_DustMotes;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine _turnMotesOff;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private WaitForSeconds _waitToTurnOff;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _isPenAudioPlaying;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _isEraserAudioPlaying;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float _minAudioVolume;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float _maxAudioVolume;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float _minPitch;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float _maxPitch;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ZA_AudioEvent _audioEvents;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private ZA_DrawableAudio _frictionAudio;

		[Token(Token = "0x40015CB")]
		private const float _minMoveDistance = 0.001f;

		[Token(Token = "0x40015CC")]
		private const float _maxMoveDistance = 0.05f;

		[Token(Token = "0x40015CD")]
		private const float _minVelocity = 0f;

		[Token(Token = "0x40015CE")]
		private const float _maxVelocity = 3f;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected HVRGrabbable _hvrGrabbable;

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x132443C", Offset = "0x132443C", VA = "0x132443C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x1324498", Offset = "0x1324498", VA = "0x1324498")]
		private void Update()
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x1324C24", Offset = "0x1324C24", VA = "0x1324C24", Slot = "5")]
		protected virtual bool CanDraw()
		{
			return default(bool);
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x1324CB4", Offset = "0x1324CB4", VA = "0x1324CB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE91A34", Offset = "0xE91A34")]
		private IEnumerator DustMotesOff()
		{
			return null;
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x1324588", Offset = "0x1324588", VA = "0x1324588")]
		private void CheckHit(Vector3 start, Vector3 direction, bool isEraser)
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x1324D2C", Offset = "0x1324D2C", VA = "0x1324D2C")]
		private void SetupMaterialBlendMode(Material material)
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x1325200", Offset = "0x1325200", VA = "0x1325200", Slot = "6")]
		protected virtual LineRenderer CreateLine(MT_DrawableSurface drawableSurface, Transform parent, bool isEraser)
		{
			return null;
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x13254BC", Offset = "0x13254BC", VA = "0x13254BC")]
		public MT_Pen()
		{
		}
	}
	[Token(Token = "0x200049D")]
	public class MT_Map : MonoBehaviour
	{
		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string mapId;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector2 floorSize;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector2 canvasSize;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector2 realCentre;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool isRotated;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE829AC", Offset = "0xE829AC")]
		[SerializeField]
		private MT_MapUI mapUI;

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x10EE08C", Offset = "0x10EE08C", VA = "0x10EE08C")]
		public Vector2 GetScale()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x10EE09C", Offset = "0x10EE09C", VA = "0x10EE09C")]
		public Vector2 GetOffset()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x10EE0A4", Offset = "0x10EE0A4", VA = "0x10EE0A4")]
		public string GetId()
		{
			return null;
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x10EE0AC", Offset = "0x10EE0AC", VA = "0x10EE0AC")]
		public bool IsRotated()
		{
			return default(bool);
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x10EE0B4", Offset = "0x10EE0B4", VA = "0x10EE0B4")]
		public MT_MapUI GetMapUI()
		{
			return null;
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x10EE0BC", Offset = "0x10EE0BC", VA = "0x10EE0BC")]
		public MT_Map()
		{
		}
	}
	[Token(Token = "0x200049E")]
	public class MT_MapController : MonoBehaviour
	{
		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_MapScenePairObject mapIdScenePairSO;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE829F4", Offset = "0xE829F4")]
		[SerializeField]
		private RectTransform pullOutPagePlayerMapRectTransf;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<MT_Map> pullOutPageMaps;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE82A3C", Offset = "0xE82A3C")]
		[SerializeField]
		private RectTransform pagePlayerMapRectTransf;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<MT_Map> pageMaps;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE82A84", Offset = "0xE82A84")]
		[SerializeField]
		private TextMeshProUGUI mapObjectiveText;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MT_MapUI _currentPulloutPageMapUI;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MT_MapUI _currentPageMapUI;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 _scale;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector2 _offset;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isMapRotated;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string _sceneName;

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x10EE0C4", Offset = "0x10EE0C4", VA = "0x10EE0C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x10EE180", Offset = "0x10EE180", VA = "0x10EE180")]
		private void UpdatePlayerPos()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x10EE184", Offset = "0x10EE184", VA = "0x10EE184")]
		private void UpdatePlayerDir()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x10EE188", Offset = "0x10EE188", VA = "0x10EE188")]
		private void ChangeMap(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x10EE2E8", Offset = "0x10EE2E8", VA = "0x10EE2E8")]
		private void SetActivePullOutPageMap(string id)
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x10EE4B8", Offset = "0x10EE4B8", VA = "0x10EE4B8")]
		private void SetActivePageMap(string id)
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x10EE680", Offset = "0x10EE680", VA = "0x10EE680")]
		public MT_MapUI GetCurrentPulloutPageMapUI()
		{
			return null;
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x10EE688", Offset = "0x10EE688", VA = "0x10EE688")]
		public MT_MapUI GetCurrentPageMapUI()
		{
			return null;
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x10EE690", Offset = "0x10EE690", VA = "0x10EE690")]
		public Vector2 GetCurrentScale()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x10EE698", Offset = "0x10EE698", VA = "0x10EE698")]
		public Vector2 GetCurrentOffset()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x10EE6A0", Offset = "0x10EE6A0", VA = "0x10EE6A0")]
		public bool IsCurrentlyRotated()
		{
			return default(bool);
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x10EE6A8", Offset = "0x10EE6A8", VA = "0x10EE6A8")]
		public void UpdateObjective(string objText)
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x10EE754", Offset = "0x10EE754", VA = "0x10EE754")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE91AE4", Offset = "0xE91AE4")]
		public void CheckCurrentScene()
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x10EE7F4", Offset = "0x10EE7F4", VA = "0x10EE7F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x10EE8B0", Offset = "0x10EE8B0", VA = "0x10EE8B0")]
		public MT_MapController()
		{
		}
	}
	[Token(Token = "0x200049F")]
	public class MT_MapPointOfInterest : MonoBehaviour
	{
		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string pointOfInterestId;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _currentPos;

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x10EE8B8", Offset = "0x10EE8B8", VA = "0x10EE8B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x10EE8F4", Offset = "0x10EE8F4", VA = "0x10EE8F4")]
		public void SetPOIResolved(bool isResolved)
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x10EEBA8", Offset = "0x10EEBA8", VA = "0x10EEBA8")]
		public void SetPOIHighlighted(bool isHighlighted)
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x10EECE0", Offset = "0x10EECE0", VA = "0x10EECE0")]
		public void SetPOIState(POIState state)
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x10EEDA0", Offset = "0x10EEDA0", VA = "0x10EEDA0")]
		public MT_MapPointOfInterest()
		{
		}
	}
	[Token(Token = "0x20004A0")]
	public class MT_MapPointOfInterestUI : MonoBehaviour
	{
		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string pointOfInterestId;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE82ADC", Offset = "0xE82ADC")]
		[SerializeField]
		private GameObject unresolvedState;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject resolvedState;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject highlightedState;

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x10EEDA8", Offset = "0x10EEDA8", VA = "0x10EEDA8")]
		public string GetId()
		{
			return null;
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x10EEDB0", Offset = "0x10EEDB0", VA = "0x10EEDB0")]
		public void SetState(POIState state)
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x10EEE6C", Offset = "0x10EEE6C", VA = "0x10EEE6C")]
		public void SetMapPosition(Vector3 realPos)
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x10EEF9C", Offset = "0x10EEF9C", VA = "0x10EEF9C")]
		public MT_MapPointOfInterestUI()
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public enum POIState
	{
		[Token(Token = "0x40015F4")]
		Unresolved,
		[Token(Token = "0x40015F5")]
		Resolved,
		[Token(Token = "0x40015F6")]
		Normal,
		[Token(Token = "0x40015F7")]
		Highlighted
	}
	[Token(Token = "0x20004A2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE6AC68", Offset = "0xE6AC68")]
	public class MT_MapScenePairObject : ScriptableObject
	{
		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MapIdScenePair> mapIdScenePair;

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x10EEFA4", Offset = "0x10EEFA4", VA = "0x10EEFA4")]
		public MT_MapScenePairObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A3")]
	public class MapIdScenePair
	{
		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string mapId;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string sceneId;

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x1140920", Offset = "0x1140920", VA = "0x1140920")]
		public MapIdScenePair()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class MT_MapUI : MonoBehaviour
	{
		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<MT_MapPointOfInterestUI> pointsOfInterest;

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x10EEA34", Offset = "0x10EEA34", VA = "0x10EEA34")]
		public void SetPOIResolved(string pointOfInterestId, POIState state, Vector3 realPos)
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x10EEFAC", Offset = "0x10EEFAC", VA = "0x10EEFAC")]
		public MT_MapUI()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public class MT_SavePage : MonoBehaviour
	{
		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Collider[] buttonColliders;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image[] images;

		[Token(Token = "0x14000038")]
		public event Action<int> OnSaveSlotChosen
		{
			[Token(Token = "0x600198D")]
			[Address(RVA = "0x12A6D5C", Offset = "0x12A6D5C", VA = "0x12A6D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE91AFC", Offset = "0xE91AFC")]
			add
			{
			}
			[Token(Token = "0x600198E")]
			[Address(RVA = "0x12A6DFC", Offset = "0x12A6DFC", VA = "0x12A6DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE91B0C", Offset = "0xE91B0C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event Action<int> OnLoadSlotChosen
		{
			[Token(Token = "0x600198F")]
			[Address(RVA = "0x12A6E9C", Offset = "0x12A6E9C", VA = "0x12A6E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE91B1C", Offset = "0xE91B1C")]
			add
			{
			}
			[Token(Token = "0x6001990")]
			[Address(RVA = "0x12A6F3C", Offset = "0x12A6F3C", VA = "0x12A6F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE91B2C", Offset = "0xE91B2C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x12A6FDC", Offset = "0x12A6FDC", VA = "0x12A6FDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x12A7084", Offset = "0x12A7084", VA = "0x12A7084")]
		private void SetImagesEnabled(bool enable)
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x12A7008", Offset = "0x12A7008", VA = "0x12A7008")]
		public void SetButtonCollidersEnabled(bool enable)
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x12A7100", Offset = "0x12A7100", VA = "0x12A7100")]
		public void SetAsSlotToSave(int slot)
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x12A71B8", Offset = "0x12A71B8", VA = "0x12A71B8")]
		public void LoadSlot(int slot)
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x12A7228", Offset = "0x12A7228", VA = "0x12A7228")]
		public MT_SavePage()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	public class MT_GrabJournalController : MonoBehaviour, Controls.IJournalActions
	{
		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Controls _controls;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isJournalInitialised;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FixedJoint _joint;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _startJournalPos;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool _isOpened;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool _isInRightHand;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		private bool _journalBlocked;

		[Token(Token = "0x4001607")]
		private const string JournalNotification = "Press B/Y to access your journal";

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x15C4694", Offset = "0x15C4694", VA = "0x15C4694")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x15C4784", Offset = "0x15C4784", VA = "0x15C4784", Slot = "4")]
		public void OnGrabRightHand(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x15C47FC", Offset = "0x15C47FC", VA = "0x15C47FC", Slot = "5")]
		public void OnGrabLeftHand(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x15C4874", Offset = "0x15C4874", VA = "0x15C4874")]
		public void Grab(MT_HandInteractor interactor, bool isRightHand)
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x15C4D54", Offset = "0x15C4D54", VA = "0x15C4D54")]
		public void Drop(MT_HandInteractor interactor)
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x15C5088", Offset = "0x15C5088", VA = "0x15C5088")]
		public void ResetBools()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x15C5090", Offset = "0x15C5090", VA = "0x15C5090")]
		public void BlockJournalOpen()
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x15C509C", Offset = "0x15C509C", VA = "0x15C509C")]
		public void UnblockJournalOpen()
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x15C50A4", Offset = "0x15C50A4", VA = "0x15C50A4")]
		public void InitJournal()
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x15C50B0", Offset = "0x15C50B0", VA = "0x15C50B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x15C514C", Offset = "0x15C514C", VA = "0x15C514C")]
		public MT_GrabJournalController()
		{
		}
	}
}
namespace MazeTheory.Inventory
{
	[Token(Token = "0x20004A7")]
	public enum ItemType
	{
		[Token(Token = "0x4001609")]
		Item,
		[Token(Token = "0x400160A")]
		CollectibleBullet,
		[Token(Token = "0x400160B")]
		CollectibleLetters,
		[Token(Token = "0x400160C")]
		CollectiblePhotos,
		[Token(Token = "0x400160D")]
		CollectibleOthers,
		[Token(Token = "0x400160E")]
		Clothing
	}
	[Token(Token = "0x20004A8")]
	public static class ItemTypeExtensions
	{
		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x10DFBB8", Offset = "0x10DFBB8", VA = "0x10DFBB8")]
		public static bool IsCollectible(this ItemType itemType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004A9")]
	public class MT_InventoryItem : MonoBehaviour
	{
		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public MT_InventoryItemObject inventoryItem;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onItemAdded;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MT_ObjectHaptics _haptics;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MT_HandHaptics _handHaptics;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MT_HandInteractor _handInteractor;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MT_ObjectInteractionBase _grabbable;

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x124DDBC", Offset = "0x124DDBC", VA = "0x124DDBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x124DE48", Offset = "0x124DE48", VA = "0x124DE48")]
		public string GetItemNameId()
		{
			return null;
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x124DE64", Offset = "0x124DE64", VA = "0x124DE64")]
		private bool CanBeAdded()
		{
			return default(bool);
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x124DF70", Offset = "0x124DF70", VA = "0x124DF70")]
		private void AddItemToInventoryOnGrab(GameObject go)
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x124E0F4", Offset = "0x124E0F4", VA = "0x124E0F4")]
		private void AddItemToInventory()
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x124E084", Offset = "0x124E084", VA = "0x124E084")]
		private void AddItemNotification()
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x124E31C", Offset = "0x124E31C", VA = "0x124E31C")]
		public MT_InventoryItem()
		{
		}
	}
	[Token(Token = "0x20004AA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE6ACD8", Offset = "0xE6ACD8")]
	public class MT_InventoryItemObject : ScriptableObject
	{
		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemType itemType;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE82BA4", Offset = "0xE82BA4")]
		public string itemNameId;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string itemDescriptionId;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string itemClueId;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE82BB4", Offset = "0xE82BB4")]
		public GameObject itemDisplayModel;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool overridePosition;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 modelPositionOverride;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool overrideRotation;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 modelRotationOverride;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE82BC4", Offset = "0xE82BC4")]
		public GameObject itemObject;

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x124E4D8", Offset = "0x124E4D8", VA = "0x124E4D8")]
		public MT_InventoryItemObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004AB")]
	public class InventoryData
	{
		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> Items;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> Bullets;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> Letters;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> Photos;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<string> Others;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<string> Clothing;

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x10DF75C", Offset = "0x10DF75C", VA = "0x10DF75C")]
		public InventoryData()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	public class MT_InventoryMethods : IGameModule
	{
		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InventoryData _inventoryData;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<string> AllBulletCollectibles;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly List<string> AllLettersCollectibles;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly List<string> AllPhotosCollectibles;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly List<string> AllOthersCollectibles;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static UnityAction<MT_InventoryItemObject, GameObject> OnAddItem;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static UnityAction<string> OnRemoveItem;

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x124E4E0", Offset = "0x124E4E0", VA = "0x124E4E0")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xE91B4C", Offset = "0xE91B4C")]
		private static void AppDomainReloadHandler()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x124E548", Offset = "0x124E548", VA = "0x124E548", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x124E5DC", Offset = "0x124E5DC", VA = "0x124E5DC", Slot = "5")]
		public void Terminate()
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x124E5E0", Offset = "0x124E5E0", VA = "0x124E5E0")]
		public static InventoryData GetInventoryData()
		{
			return null;
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x124E644", Offset = "0x124E644", VA = "0x124E644")]
		private static List<string> GetInventory(ItemType type)
		{
			return null;
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x124E6B0", Offset = "0x124E6B0", VA = "0x124E6B0")]
		public static void SetData(SaveSlotData slot)
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x124E5D8", Offset = "0x124E5D8", VA = "0x124E5D8")]
		private void LoadAllCollectibles()
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x124E198", Offset = "0x124E198", VA = "0x124E198")]
		public static void AddToInventory(MT_InventoryItemObject item, [Optional] GameObject itemGameObject)
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x124E384", Offset = "0x124E384", VA = "0x124E384")]
		public static void RemoveFromInventory(string itemNameId)
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x124E8C8", Offset = "0x124E8C8", VA = "0x124E8C8")]
		public static int GetInventoryCountForType(ItemType type)
		{
			return default(int);
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x124E6B4", Offset = "0x124E6B4", VA = "0x124E6B4")]
		public static ItemType GetTypeForItemNameIdInCurrentInventory(string itemNameId)
		{
			return default(ItemType);
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x124E938", Offset = "0x124E938", VA = "0x124E938")]
		public static string GetInventoryItemIdAt(int index, ItemType type)
		{
			return null;
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x124E9E8", Offset = "0x124E9E8", VA = "0x124E9E8")]
		public static MT_InventoryItemObject LoadInventoryItemFromId(string itemNameId)
		{
			return null;
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x124EAF8", Offset = "0x124EAF8", VA = "0x124EAF8")]
		public static bool DoesInventoryContain(MT_InventoryItemObject item)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x124EB80", Offset = "0x124EB80", VA = "0x124EB80")]
		public static MT_InventoryItemObject LoadCollectibleItem(int index, ItemType type)
		{
			return null;
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x124ECC4", Offset = "0x124ECC4", VA = "0x124ECC4")]
		private static List<string> GetCollectibleList(ItemType type)
		{
			return null;
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x124EE0C", Offset = "0x124EE0C", VA = "0x124EE0C")]
		public MT_InventoryMethods()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public class MT_InventoryOpenClose : MonoBehaviour
	{
		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_FollowRotation followRotation;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator bagModelAnimator;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float canvasFadeTime;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject inventory;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MT_InventoryUI inventoryUI;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Open;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int Close;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE82C34", Offset = "0xE82C34")]
		private bool <IsOpen>k__BackingField;

		[Token(Token = "0x170002E1")]
		public bool IsOpen
		{
			[Token(Token = "0x60019BE")]
			[Address(RVA = "0x124EF20", Offset = "0x124EF20", VA = "0x124EF20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE91B60", Offset = "0xE91B60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019BF")]
			[Address(RVA = "0x124EF28", Offset = "0x124EF28", VA = "0x124EF28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE91B70", Offset = "0xE91B70")]
			private set
			{
			}
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x124EF34", Offset = "0x124EF34", VA = "0x124EF34")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x124EF78", Offset = "0x124EF78", VA = "0x124EF78")]
		public void OpenInventory()
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x124F040", Offset = "0x124F040", VA = "0x124F040")]
		public void CloseInventory()
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x124F1B0", Offset = "0x124F1B0", VA = "0x124F1B0")]
		public MT_InventoryOpenClose()
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x124F25C", Offset = "0x124F25C", VA = "0x124F25C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE91B80", Offset = "0xE91B80")]
		private void <CloseInventory>b__14_0()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	public class MT_InventoryOpenController : MonoBehaviour, Controls.IInventoryActions
	{
		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject inventoryParent;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_InventoryOpenClose inventoryOpenClose;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE82C64", Offset = "0xE82C64")]
		private static Controls <StaticControls>k__BackingField;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Controls _controls;

		[Token(Token = "0x170002E2")]
		public static Controls StaticControls
		{
			[Token(Token = "0x60019C6")]
			[Address(RVA = "0x124F27C", Offset = "0x124F27C", VA = "0x124F27C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE91B90", Offset = "0xE91B90")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C7")]
			[Address(RVA = "0x124F2C8", Offset = "0x124F2C8", VA = "0x124F2C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE91BA0", Offset = "0xE91BA0")]
			private set
			{
			}
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x124F31C", Offset = "0x124F31C", VA = "0x124F31C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x124F424", Offset = "0x124F424", VA = "0x124F424", Slot = "4")]
		public void OnOpenLeftHand(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x124F498", Offset = "0x124F498", VA = "0x124F498")]
		private void OpenInventory()
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x124F480", Offset = "0x124F480", VA = "0x124F480")]
		private void CloseInventory()
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x124F56C", Offset = "0x124F56C", VA = "0x124F56C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x124F5DC", Offset = "0x124F5DC", VA = "0x124F5DC")]
		public MT_InventoryOpenController()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public class MT_InventorySpawnedItems : MonoBehaviour
	{
		[Token(Token = "0x20004B0")]
		private class SpawnedItem
		{
			[Token(Token = "0x400163A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject SpawnedGameObject;

			[Token(Token = "0x400163B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ItemType ItemType;

			[Token(Token = "0x60019D6")]
			[Address(RVA = "0x10384CC", Offset = "0x10384CC", VA = "0x10384CC")]
			public SpawnedItem()
			{
			}
		}

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<string, SpawnedItem> _spawnedItems;

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x124F5E4", Offset = "0x124F5E4", VA = "0x124F5E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x124F748", Offset = "0x124F748", VA = "0x124F748")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x124F8AC", Offset = "0x124F8AC", VA = "0x124F8AC")]
		private void AddSpawnedGrabbedItem(MT_InventoryItemObject item, GameObject itemGameObject)
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x124F8CC", Offset = "0x124F8CC", VA = "0x124F8CC")]
		public void AddSpawnedGrabbedItem(string nameId, GameObject spawnedItem, ItemType itemType)
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x124F9DC", Offset = "0x124F9DC", VA = "0x124F9DC")]
		public void RemoveSpawnedGrabbedItem(string nameId)
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x124FA40", Offset = "0x124FA40", VA = "0x124FA40")]
		private void ClearSpawnedItemsOnSceneChange()
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x124FA44", Offset = "0x124FA44", VA = "0x124FA44")]
		public GameObject GetSpawnedItemGameObject(string nameId)
		{
			return null;
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x124FACC", Offset = "0x124FACC", VA = "0x124FACC")]
		public MT_InventorySpawnedItems()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class MT_InventoryUI : MonoBehaviour
	{
		[Token(Token = "0x20004B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AD38", Offset = "0xE6AD38")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x400164B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_InventoryUI <>4__this;

			[Token(Token = "0x400164C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onComplete;

			[Token(Token = "0x60019F0")]
			[Address(RVA = "0x10384D4", Offset = "0x10384D4", VA = "0x10384D4")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x60019F1")]
			[Address(RVA = "0x10384DC", Offset = "0x10384DC", VA = "0x10384DC")]
			internal void <DoRemoveAllSlots>b__0()
			{
			}
		}

		[Token(Token = "0x20004B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AD48", Offset = "0xE6AD48")]
		private sealed class <>c__DisplayClass29_1
		{
			[Token(Token = "0x400164D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyValuePair<string, GameObject> slot;

			[Token(Token = "0x60019F2")]
			[Address(RVA = "0x1038560", Offset = "0x1038560", VA = "0x1038560")]
			public <>c__DisplayClass29_1()
			{
			}

			[Token(Token = "0x60019F3")]
			[Address(RVA = "0x1038568", Offset = "0x1038568", VA = "0x1038568")]
			internal void <DoRemoveAllSlots>b__1()
			{
			}
		}

		[Token(Token = "0x20004B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AD58", Offset = "0xE6AD58")]
		private sealed class <DoRemoveAllSlots>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400164E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400164F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_InventoryUI <>4__this;

			[Token(Token = "0x4001651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onComplete;

			[Token(Token = "0x4001652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass29_0 <>8__1;

			[Token(Token = "0x170002E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019F7")]
				[Address(RVA = "0x10389EC", Offset = "0x10389EC", VA = "0x10389EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019F9")]
				[Address(RVA = "0x1038A34", Offset = "0x1038A34", VA = "0x1038A34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019F4")]
			[Address(RVA = "0x10385E8", Offset = "0x10385E8", VA = "0x10385E8")]
			[DebuggerHidden]
			public <DoRemoveAllSlots>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60019F5")]
			[Address(RVA = "0x1038614", Offset = "0x1038614", VA = "0x1038614", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019F6")]
			[Address(RVA = "0x1038618", Offset = "0x1038618", VA = "0x1038618", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019F8")]
			[Address(RVA = "0x10389F4", Offset = "0x10389F4", VA = "0x10389F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] uiSlots;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector2 gridSize;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MT_InventorySpawnedItems inventorySpawnedItems;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI itemDescriptionText;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI itemNameText;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject previousPageButton;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject nextPageButton;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float slotScaleDuration;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _areFavouritesOpen;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _emptySlotNumber;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly Dictionary<string, GameObject> _slots;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _currentPage;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int _maxPageSlots;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ItemType _currentTabType;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private DG.Tweening.Sequence _sequence;

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x124FB50", Offset = "0x124FB50", VA = "0x124FB50")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x124FBBC", Offset = "0x124FBBC", VA = "0x124FBBC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x124FE98", Offset = "0x124FE98", VA = "0x124FE98")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x1250050", Offset = "0x1250050", VA = "0x1250050")]
		public void OpenItemsTabButtonPressed()
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x1250078", Offset = "0x1250078", VA = "0x1250078")]
		public void OpenCollectibleBulletsTabButtonPressed()
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x1250098", Offset = "0x1250098", VA = "0x1250098")]
		public void OpenCollectibleLettersTabButtonPressed()
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x12500BC", Offset = "0x12500BC", VA = "0x12500BC")]
		public void OpenCollectiblePhotosTabButtonPressed()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x12500E0", Offset = "0x12500E0", VA = "0x12500E0")]
		public void OpenCollectibleOthersTabButtonPressed()
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x1250104", Offset = "0x1250104", VA = "0x1250104")]
		public void OpenClothesTabButtonPressed()
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x125006C", Offset = "0x125006C", VA = "0x125006C")]
		private void OpenTab()
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x1250128", Offset = "0x1250128", VA = "0x1250128")]
		private void SetupUISlot(MT_InventoryItemObject item, [Optional] GameObject itemGameObject)
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x1250F64", Offset = "0x1250F64", VA = "0x1250F64")]
		private void RemoveExpendedItemFromSlot(string itemId)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x124FE0C", Offset = "0x124FE0C", VA = "0x124FE0C")]
		private void SetupSlotsForCurrentPage()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x124F184", Offset = "0x124F184", VA = "0x124F184")]
		public void RemoveAllSlots(Action onComplete)
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x1251240", Offset = "0x1251240", VA = "0x1251240")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE91BB0", Offset = "0xE91BB0")]
		private IEnumerator DoRemoveAllSlots(Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x12512D4", Offset = "0x12512D4", VA = "0x12512D4")]
		private void SetupPageChangeButtons()
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x1251370", Offset = "0x1251370", VA = "0x1251370")]
		public void AddSpawnedGrabbedItem(string nameId, GameObject spawnedItem, ItemType itemType)
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x1251388", Offset = "0x1251388", VA = "0x1251388")]
		public void RemoveSpawnedGrabbedItem(string nameId)
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x12513A0", Offset = "0x12513A0", VA = "0x12513A0")]
		private void SetItemText(MT_InventoryItemObject item)
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x124FD90", Offset = "0x124FD90", VA = "0x124FD90")]
		private void ClearItemText()
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x1251A18", Offset = "0x1251A18", VA = "0x1251A18")]
		public void GoToNextPage()
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x1251AA0", Offset = "0x1251AA0", VA = "0x1251AA0")]
		public void GoToPrevPage()
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x1251B28", Offset = "0x1251B28", VA = "0x1251B28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x1251B58", Offset = "0x1251B58", VA = "0x1251B58")]
		public MT_InventoryUI()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x1251BE8", Offset = "0x1251BE8", VA = "0x1251BE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE91C10", Offset = "0xE91C10")]
		private void <SetupSlotsForCurrentPage>b__26_0()
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public class MT_InventoryUISlot : MonoBehaviour, IGrabbable, IHoverable
	{
		[Token(Token = "0x20004B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AD68", Offset = "0xE6AD68")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x400166D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_InventoryUISlot <>4__this;

			[Token(Token = "0x400166E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject item;

			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0x1038A3C", Offset = "0x1038A3C", VA = "0x1038A3C")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0x1038A44", Offset = "0x1038A44", VA = "0x1038A44")]
			internal void <ReturnToUISlotWhenDropped>b__0()
			{
			}
		}

		[Token(Token = "0x20004B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AD78", Offset = "0xE6AD78")]
		private sealed class <MoveToItemUIPosition>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400166F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001671")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_InventoryUISlot <>4__this;

			[Token(Token = "0x4001672")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float timeToMove;

			[Token(Token = "0x4001673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform itemTransform;

			[Token(Token = "0x4001674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action onReachedTarget;

			[Token(Token = "0x4001675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 <offset>5__2;

			[Token(Token = "0x4001676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <t>5__3;

			[Token(Token = "0x170002E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A1F")]
				[Address(RVA = "0x1038CAC", Offset = "0x1038CAC", VA = "0x1038CAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A21")]
				[Address(RVA = "0x1038CF4", Offset = "0x1038CF4", VA = "0x1038CF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0x1038AC0", Offset = "0x1038AC0", VA = "0x1038AC0")]
			[DebuggerHidden]
			public <MoveToItemUIPosition>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0x1038AEC", Offset = "0x1038AEC", VA = "0x1038AEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0x1038AF0", Offset = "0x1038AF0", VA = "0x1038AF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A20")]
			[Address(RVA = "0x1038CB4", Offset = "0x1038CB4", VA = "0x1038CB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int priority;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool hasUniqueHoverPose;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject questionMarkPrefab;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material greyedOutMaterial;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider slotCollider;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform itemUIPosition;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform itemSpawnPosition;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float itemModelScale;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onHoverEnter;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onHoverExit;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isGrabbed;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _isGrabbable;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MT_InventoryUI _inventoryUI;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MT_InventoryItemObject _item;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject _itemModel;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject _questionMarkModel;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject _spawnedItemGameObject;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private MT_Grabbable _grabbable;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Tween _scaleTween;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 _originalScale;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 _modelPosition;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 _modelRotation;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Renderer[] _renderers;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly List<Material> _materials;

		[Token(Token = "0x1400003A")]
		public event Action<MT_InventoryItemObject> OnItemHoverEnter
		{
			[Token(Token = "0x60019FA")]
			[Address(RVA = "0x1250D9C", Offset = "0x1250D9C", VA = "0x1250D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE91C70", Offset = "0xE91C70")]
			add
			{
			}
			[Token(Token = "0x60019FB")]
			[Address(RVA = "0x1251D04", Offset = "0x1251D04", VA = "0x1251D04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE91C80", Offset = "0xE91C80")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event Action<string> OnItemGrabbed
		{
			[Token(Token = "0x60019FC")]
			[Address(RVA = "0x1251DA4", Offset = "0x1251DA4", VA = "0x1251DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE91C90", Offset = "0xE91C90")]
			add
			{
			}
			[Token(Token = "0x60019FD")]
			[Address(RVA = "0x1251E44", Offset = "0x1251E44", VA = "0x1251E44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE91CA0", Offset = "0xE91CA0")]
			remove
			{
			}
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x1251EE4", Offset = "0x1251EE4", VA = "0x1251EE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x1251F04", Offset = "0x1251F04", VA = "0x1251F04", Slot = "8")]
		public void Grab(MT_HandInteractor handInteractor)
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x125234C", Offset = "0x125234C", VA = "0x125234C", Slot = "9")]
		public void Drop(MT_HandInteractor handInteractor)
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x1252630", Offset = "0x1252630", VA = "0x1252630")]
		private void ReturnToUISlotWhenDropped(GameObject item)
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x12507D0", Offset = "0x12507D0", VA = "0x12507D0")]
		public void SetItemObjectUI(MT_InventoryItemObject item, MT_InventoryUI inventoryUI, GameObject alreadySpawnedItem)
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x1250E3C", Offset = "0x1250E3C", VA = "0x1250E3C")]
		public void TurnOffQuestionMark()
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x1250ED0", Offset = "0x1250ED0", VA = "0x1250ED0")]
		public void TurnOffCollider()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x1252B6C", Offset = "0x1252B6C", VA = "0x1252B6C")]
		public void TurnOnCollider()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x1252C00", Offset = "0x1252C00", VA = "0x1252C00")]
		private void GetRenderersAndMaterials()
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x12524D4", Offset = "0x12524D4", VA = "0x12524D4")]
		private void SetModelTaken()
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x1252CF8", Offset = "0x1252CF8", VA = "0x1252CF8")]
		private void SetModelNotTaken()
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x1252DE8", Offset = "0x1252DE8", VA = "0x1252DE8")]
		private void ScaleUpModel()
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x1252550", Offset = "0x1252550", VA = "0x1252550")]
		private void ScaleDownModel()
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x125100C", Offset = "0x125100C", VA = "0x125100C")]
		public void ResetUISlot()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x1252EE4", Offset = "0x1252EE4", VA = "0x1252EE4")]
		public string GetItemId()
		{
			return null;
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x1252F00", Offset = "0x1252F00", VA = "0x1252F00", Slot = "4")]
		public bool IsGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x1252F08", Offset = "0x1252F08", VA = "0x1252F08", Slot = "5")]
		public bool IsGrabbable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x1252F10", Offset = "0x1252F10", VA = "0x1252F10", Slot = "6")]
		public GrabType GetGrabType()
		{
			return default(GrabType);
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x1252F18", Offset = "0x1252F18", VA = "0x1252F18", Slot = "7")]
		public Transform GetObjectGrabCenter()
		{
			return null;
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x1252F20", Offset = "0x1252F20", VA = "0x1252F20", Slot = "10")]
		public UnityEvent GetHoverEnter()
		{
			return null;
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x1252F28", Offset = "0x1252F28", VA = "0x1252F28", Slot = "11")]
		public UnityEvent GetHoverExit()
		{
			return null;
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x1252F30", Offset = "0x1252F30", VA = "0x1252F30", Slot = "12")]
		public void InvokeHoverEnter()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x1252FA8", Offset = "0x1252FA8", VA = "0x1252FA8", Slot = "13")]
		public void InvokeHoverExit()
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x1252FE0", Offset = "0x1252FE0", VA = "0x1252FE0", Slot = "14")]
		public int GetPriority()
		{
			return default(int);
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x1252FE8", Offset = "0x1252FE8", VA = "0x1252FE8", Slot = "15")]
		public bool HasUniqueHoverPose()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x1252FF0", Offset = "0x1252FF0", VA = "0x1252FF0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x1252AB4", Offset = "0x1252AB4", VA = "0x1252AB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE91CB0", Offset = "0xE91CB0")]
		private IEnumerator MoveToItemUIPosition(Transform itemTransform, float timeToMove, Action onReachedTarget)
		{
			return null;
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x1253100", Offset = "0x1253100", VA = "0x1253100")]
		public MT_InventoryUISlot()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public class MT_FollowRotation : MonoBehaviour
	{
		[Token(Token = "0x20004B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AD88", Offset = "0xE6AD88")]
		private sealed class <LerpToPosition>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001682")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001683")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001684")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_FollowRotation <>4__this;

			[Token(Token = "0x170002E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A2B")]
				[Address(RVA = "0x1037188", Offset = "0x1037188", VA = "0x1037188", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A2D")]
				[Address(RVA = "0x10371D0", Offset = "0x10371D0", VA = "0x10371D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A28")]
			[Address(RVA = "0x1036C4C", Offset = "0x1036C4C", VA = "0x1036C4C")]
			[DebuggerHidden]
			public <LerpToPosition>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001A29")]
			[Address(RVA = "0x1036C78", Offset = "0x1036C78", VA = "0x1036C78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0x1036C7C", Offset = "0x1036C7C", VA = "0x1036C7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0x1037190", Offset = "0x1037190", VA = "0x1037190", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float rotationDeadZoneSize;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float positionDeadZoneSize;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float followSpeed;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float cameraOffset;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject pause;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject debug;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject heightMenu;

		[Token(Token = "0x400167E")]
		private const float FollowRotationTolerance = 1f;

		[Token(Token = "0x400167F")]
		private const float FollowPositionTolerance = 0.1f;

		[Token(Token = "0x4001680")]
		private const float MaxThreshold = 5f;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isMoving;

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x15C00E4", Offset = "0x15C00E4", VA = "0x15C00E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x15C0150", Offset = "0x15C0150", VA = "0x15C0150")]
		private void Follow()
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x15C0224", Offset = "0x15C0224", VA = "0x15C0224")]
		private bool IsInRotationDeadZone(float cameraY)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x15C029C", Offset = "0x15C029C", VA = "0x15C029C")]
		private bool IsInDistanceDeadZone(Vector3 cameraPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x15C030C", Offset = "0x15C030C", VA = "0x15C030C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE91D60", Offset = "0xE91D60")]
		private IEnumerator LerpToPosition()
		{
			return null;
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x15C0384", Offset = "0x15C0384", VA = "0x15C0384")]
		public MT_FollowRotation()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class MT_HoverButton : MonoBehaviour, IButton
	{
		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int priority;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool hasUniqueHoverPose;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		private bool useHoverTimer;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MT_UIRadialBar radialBar;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float hoverTimer;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onHoverEnter;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onHoverExit;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isFillingBar;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tween _tween;

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x124AC2C", Offset = "0x124AC2C", VA = "0x124AC2C", Slot = "4")]
		public UnityEvent GetHoverEnter()
		{
			return null;
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x124AC34", Offset = "0x124AC34", VA = "0x124AC34", Slot = "5")]
		public UnityEvent GetHoverExit()
		{
			return null;
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x124AC3C", Offset = "0x124AC3C", VA = "0x124AC3C", Slot = "6")]
		public void InvokeHoverEnter()
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x124AD58", Offset = "0x124AD58", VA = "0x124AD58", Slot = "7")]
		public void InvokeHoverExit()
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x124ADC8", Offset = "0x124ADC8", VA = "0x124ADC8", Slot = "8")]
		public int GetPriority()
		{
			return default(int);
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x124ADD0", Offset = "0x124ADD0", VA = "0x124ADD0", Slot = "9")]
		public bool HasUniqueHoverPose()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x124ADD8", Offset = "0x124ADD8", VA = "0x124ADD8")]
		public MT_HoverButton()
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x124ADE0", Offset = "0x124ADE0", VA = "0x124ADE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE91E10", Offset = "0xE91E10")]
		private void <InvokeHoverEnter>b__11_0()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public class MT_InventoryFollow : MonoBehaviour
	{
		[Token(Token = "0x20004BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AD98", Offset = "0xE6AD98")]
		private sealed class <LerpToPosition>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001692")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001693")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001694")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_InventoryFollow <>4__this;

			[Token(Token = "0x170002E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A3E")]
				[Address(RVA = "0x103847C", Offset = "0x103847C", VA = "0x103847C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A40")]
				[Address(RVA = "0x10384C4", Offset = "0x10384C4", VA = "0x10384C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0x1038210", Offset = "0x1038210", VA = "0x1038210")]
			[DebuggerHidden]
			public <LerpToPosition>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0x103823C", Offset = "0x103823C", VA = "0x103823C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0x1038240", Offset = "0x1038240", VA = "0x1038240", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0x1038484", Offset = "0x1038484", VA = "0x1038484", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float deadZoneSize;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float followDuration;

		[Token(Token = "0x4001690")]
		private const float FollowTolerance = 1f;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isMoving;

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x124DC20", Offset = "0x124DC20", VA = "0x124DC20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x124DC24", Offset = "0x124DC24", VA = "0x124DC24")]
		private void Follow()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x124DCC4", Offset = "0x124DCC4", VA = "0x124DCC4")]
		private bool IsInDeadZone(float cameraY)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x124DD3C", Offset = "0x124DD3C", VA = "0x124DD3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE91E20", Offset = "0xE91E20")]
		private IEnumerator LerpToPosition()
		{
			return null;
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x124DDB4", Offset = "0x124DDB4", VA = "0x124DDB4")]
		public MT_InventoryFollow()
		{
		}
	}
}
namespace MazeTheory.PlayerInput
{
	[Token(Token = "0x20004BD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE6ADA8", Offset = "0xE6ADA8")]
	public class ActionSettings : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20004BE")]
		public struct ControlButton
		{
			[Token(Token = "0x40016A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public HVRHandSide Side;

			[Token(Token = "0x40016A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public HVRButtons Button;

			[Token(Token = "0x40016A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float HoldDuration;

			[Token(Token = "0x40016A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float ButtonAxisThreshold;
		}

		[Serializable]
		[Token(Token = "0x20004BF")]
		public struct ControlAxis
		{
			[Token(Token = "0x40016AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public HVRHandSide Side;

			[Token(Token = "0x40016AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float XAxisThreshold;

			[Token(Token = "0x40016AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float YAxisThreshold;
		}

		[Serializable]
		[Token(Token = "0x20004C0")]
		public struct ControlSide
		{
			[Token(Token = "0x40016AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public HVRHandSide Side;
		}

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControlSide Move;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ControlAxis Turn;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControlAxis TeleportDeactivated;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public ControlAxis TeleportActivated;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ControlAxis DirectionalTeleportDeactivated;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public ControlAxis DirectionalTeleportActivated;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControlButton TeleportTriggered;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ControlButton Sprint;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ControlAxis Stand;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public ControlButton StandButton;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public ControlAxis Crouch;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ControlButton CrouchButton;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private HVRButtonState _joystickStand;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private HVRButtonState _joystickCrouch;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float _standHeldDuration;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool _standHasTriggered;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector2 _lastDirectionalTeleportActivated;

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x13BC53C", Offset = "0x13BC53C", VA = "0x13BC53C")]
		public bool GetStand()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x13BC544", Offset = "0x13BC544", VA = "0x13BC544")]
		public Vector2 GetMovementAxis(bool swapSide)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x13BC6D8", Offset = "0x13BC6D8", VA = "0x13BC6D8")]
		public Vector2 GetTurnAxis(bool swapSide)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x13BC768", Offset = "0x13BC768", VA = "0x13BC768")]
		public bool GetDirectionalTeleportDeactivated(bool swapSide)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x13BC7C8", Offset = "0x13BC7C8", VA = "0x13BC7C8")]
		public Vector2 GetDirectionalTeleportActivated(bool swapSide)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x13BC894", Offset = "0x13BC894", VA = "0x13BC894")]
		public bool GetTeleportDeactivated()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x13BC8D4", Offset = "0x13BC8D4", VA = "0x13BC8D4")]
		public bool GetTeleportActivated()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x13BC938", Offset = "0x13BC938", VA = "0x13BC938")]
		public bool GetTeleportTriggered(bool swapSide)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x13BC9D4", Offset = "0x13BC9D4", VA = "0x13BC9D4")]
		public bool GetSprinting()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x13BCA50", Offset = "0x13BCA50", VA = "0x13BCA50")]
		public bool GetCrouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x13BC5FC", Offset = "0x13BC5FC", VA = "0x13BC5FC")]
		private HVRController GetControllerForSide(HVRHandSide side)
		{
			return null;
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x13BCACC", Offset = "0x13BCACC", VA = "0x13BCACC")]
		private void SetButtonState(ref HVRButtonState buttonState, bool pressed)
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x13BCAF8", Offset = "0x13BCAF8", VA = "0x13BCAF8")]
		protected void ResetButton(ref HVRButtonState buttonState)
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x13BC5A0", Offset = "0x13BC5A0", VA = "0x13BC5A0")]
		private HVRHandSide SwapSide(HVRHandSide side)
		{
			return default(HVRHandSide);
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x13BCB04", Offset = "0x13BCB04", VA = "0x13BCB04")]
		public ActionSettings()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public class PlayerInputs : HVRPlayerInputs
	{
		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE82E04", Offset = "0xE82E04")]
		[SerializeField]
		private ActionSettings oculusActionSettings;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ActionSettings psvrActionSettings;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ActionSettings psvr2ActionSettings;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ActionSettings wmrActionSettings;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private ActionSettings viveActionSettings;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private ActionSettings knucklesActionSettings;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private ActionSettings cosmosActionSettings;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private ActionSettings reverbG2ActionSettings;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ActionSettings _currentActionSettings;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE82EC0", Offset = "0xE82EC0")]
		public bool IsTeleportTriggered;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		public bool IsDirectionalTeleportDeactivated;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public Vector2 DirectionalTeleportActivated;

		[Token(Token = "0x170002EB")]
		private static bool AllowContinuous
		{
			[Token(Token = "0x6001A50")]
			[Address(RVA = "0x108636C", Offset = "0x108636C", VA = "0x108636C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x1086398", Offset = "0x1086398", VA = "0x1086398")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x108653C", Offset = "0x108653C", VA = "0x108653C", Slot = "4")]
		protected override void UpdateInput()
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x1086658", Offset = "0x1086658", VA = "0x1086658", Slot = "6")]
		protected override bool GetStand()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x1086674", Offset = "0x1086674", VA = "0x1086674", Slot = "14")]
		protected override Vector2 GetMovementAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x1086710", Offset = "0x1086710", VA = "0x1086710", Slot = "15")]
		protected override Vector2 GetTurnAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x10865F0", Offset = "0x10865F0", VA = "0x10865F0")]
		private bool GetDirectionalTeleportDeactivated()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x1086624", Offset = "0x1086624", VA = "0x1086624")]
		private Vector2 GetDirectionalTeleportActivated()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x1086734", Offset = "0x1086734", VA = "0x1086734", Slot = "16")]
		protected override bool GetTeleportDeactivated()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x108673C", Offset = "0x108673C", VA = "0x108673C", Slot = "17")]
		protected override bool GetTeleportActivated()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x108658C", Offset = "0x108658C", VA = "0x108658C")]
		private bool GetTeleportTriggered()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x1086744", Offset = "0x1086744", VA = "0x1086744", Slot = "18")]
		protected override bool GetSprinting()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x108678C", Offset = "0x108678C", VA = "0x108678C", Slot = "19")]
		protected override bool GetCrouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x108639C", Offset = "0x108639C", VA = "0x108639C")]
		private void SetUpSettingsForCurrentPlatform()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x10867A8", Offset = "0x10867A8", VA = "0x10867A8")]
		public PlayerInputs()
		{
		}
	}
}
namespace MazeTheory.FlowCanvas
{
	[Token(Token = "0x20004C2")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6AE08", Offset = "0xE6AE08")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6AE08", Offset = "0xE6AE08")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6AE08", Offset = "0xE6AE08")]
	public sealed class CallRegisteredFlowscriptFunctionNode : CallableActionNode<string, string>
	{
		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x120583C", Offset = "0x120583C", VA = "0x120583C", Slot = "12")]
		public override void Invoke(string flowScriptID, string functionName)
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x12058B0", Offset = "0x12058B0", VA = "0x12058B0")]
		public CallRegisteredFlowscriptFunctionNode()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6AE90", Offset = "0xE6AE90")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6AE90", Offset = "0xE6AE90")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6AE90", Offset = "0xE6AE90")]
	public sealed class CallFlowscriptFunctionNode : CallableActionNode<FlowScriptController, string>
	{
		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x1205738", Offset = "0x1205738", VA = "0x1205738", Slot = "12")]
		public override void Invoke(FlowScriptController fs, string functionName)
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x1205758", Offset = "0x1205758", VA = "0x1205758")]
		public CallFlowscriptFunctionNode()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public static class FlowCanvasCrossComms
	{
		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, FlowScriptController> FlowScriptDic;

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x100D960", Offset = "0x100D960", VA = "0x100D960")]
		public static void Register(string id, FlowScriptController flowScriptController)
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x100DA58", Offset = "0x100DA58", VA = "0x100DA58")]
		public static void Deregister(string id)
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x100DB3C", Offset = "0x100DB3C", VA = "0x100DB3C")]
		public static void CallFunction(string flowScriptID, string functionName)
		{
		}
	}
	[Token(Token = "0x20004C5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE6AF18", Offset = "0xE6AF18")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE6AF18", Offset = "0xE6AF18")]
	public sealed class FlowCanvasRegister : MonoBehaviour
	{
		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string id;

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x100DE94", Offset = "0x100DE94", VA = "0x100DE94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x100DF24", Offset = "0x100DF24", VA = "0x100DF24")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x100DF88", Offset = "0x100DF88", VA = "0x100DF88")]
		public FlowCanvasRegister()
		{
		}
	}
}
namespace MazeTheory.EnvironmentObjects
{
	[Token(Token = "0x20004C6")]
	public abstract class CreatureController : MonoBehaviour
	{
		[Token(Token = "0x20004C7")]
		protected enum State
		{
			[Token(Token = "0x40016C1")]
			RunningIdleBehaviour,
			[Token(Token = "0x40016C2")]
			TriggeredByPlayer,
			[Token(Token = "0x40016C3")]
			RunningTriggeredLogic
		}

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected State _currentState;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool _triggerOnStart;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve _curve;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xFFB9D0", Offset = "0xFFB9D0", VA = "0xFFB9D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xFFB9F0", Offset = "0xFFB9F0", VA = "0xFFB9F0")]
		public void Trigger()
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xFFBA08", Offset = "0xFFBA08", VA = "0xFFBA08")]
		public void MoveToTarget(Vector3 target, float duration)
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xFFBA68", Offset = "0xFFBA68", VA = "0xFFBA68")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xFFBAA8", Offset = "0xFFBAA8", VA = "0xFFBAA8", Slot = "4")]
		protected virtual void IdleUpdate()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xFFBAAC", Offset = "0xFFBAAC", VA = "0xFFBAAC", Slot = "5")]
		protected virtual void OnTriggeredByPlayer()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xFFBAB8", Offset = "0xFFBAB8", VA = "0xFFBAB8", Slot = "6")]
		protected virtual void TriggeredUpdate()
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xFFBABC", Offset = "0xFFBABC", VA = "0xFFBABC")]
		public void PlayIdle()
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xFFBB20", Offset = "0xFFBB20", VA = "0xFFBB20")]
		public void PlayRun()
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xFFBB84", Offset = "0xFFBB84", VA = "0xFFBB84")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xFFBB88", Offset = "0xFFBB88", VA = "0xFFBB88")]
		protected CreatureController()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class RatController : CreatureController
	{
		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _target;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x10911E0", Offset = "0x10911E0", VA = "0x10911E0", Slot = "6")]
		protected override void TriggeredUpdate()
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x109121C", Offset = "0x109121C", VA = "0x109121C")]
		public RatController()
		{
		}
	}
}
namespace MazeTheory.Dialogue
{
	[Token(Token = "0x20004C9")]
	public sealed class DialogueDataComponent : MonoBehaviour
	{
		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayableDirector Director;

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x1007388", Offset = "0x1007388", VA = "0x1007388")]
		public DialogueDataComponent()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	public abstract class DialogueEventTrigger : MonoBehaviour
	{
		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string eventID;

		[Token(Token = "0x170002EC")]
		public string EventID
		{
			[Token(Token = "0x6001A78")]
			[Address(RVA = "0x1007D10", Offset = "0x1007D10", VA = "0x1007D10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002ED")]
		protected MT_DialogueHandler DialogueHandler
		{
			[Token(Token = "0x6001A79")]
			[Address(RVA = "0x1007D18", Offset = "0x1007D18", VA = "0x1007D18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x1007D7C", Offset = "0x1007D7C", VA = "0x1007D7C", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x1007DF4", Offset = "0x1007DF4", VA = "0x1007DF4")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001A7C")]
		public abstract void Trigger();

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x1007E6C", Offset = "0x1007E6C", VA = "0x1007E6C")]
		protected DialogueEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004CB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE6AF8C", Offset = "0xE6AF8C")]
	public sealed class MT_NPCDialogueRegistration : MonoBehaviour
	{
		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MT_NPCGameplay _npc;

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x10F4340", Offset = "0x10F4340", VA = "0x10F4340")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x10F43EC", Offset = "0x10F43EC", VA = "0x10F43EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x10F4464", Offset = "0x10F4464", VA = "0x10F4464")]
		public MT_NPCDialogueRegistration()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE6AFEC", Offset = "0xE6AFEC")]
	public class CustomTimelineObject : ScriptableObject
	{
		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<CharacterGroup> CharacterGroups;

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xFFCF84", Offset = "0xFFCF84", VA = "0xFFCF84")]
		public CustomTimelineObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004CD")]
	public struct AnimationTrackParameters
	{
		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimationClip clip;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double startFrame;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE82F68", Offset = "0xE82F68")]
		public double clipDuration;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double clipInTime;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE82F78", Offset = "0xE82F78")]
		public Vector3 offsetPosition;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion offsetRotation;
	}
	[Serializable]
	[Token(Token = "0x20004CE")]
	public class AnimPair
	{
		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AnimationClip> clips;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AnimationTrackParameters> animParameters;

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x13BF0D8", Offset = "0x13BF0D8", VA = "0x13BF0D8")]
		public void UpdateAnimParametersList()
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x13BF268", Offset = "0x13BF268", VA = "0x13BF268")]
		public AnimPair()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004CF")]
	public struct DialogueTimelineParam
	{
		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TimelineAsset asset;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double startFrame;
	}
	[Serializable]
	[Token(Token = "0x20004D0")]
	public class TimelinePair
	{
		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<TimelineAsset> timelineAssets;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<DialogueTimelineParam> dialogueParam;

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x134FD90", Offset = "0x134FD90", VA = "0x134FD90")]
		public void UpdateDialogueParametersList()
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x134FEE4", Offset = "0x134FEE4", VA = "0x134FEE4")]
		public TimelinePair()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D1")]
	public class TimelineEventPair
	{
		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<TimelineEvent> TimelineEvents;

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x134FD88", Offset = "0x134FD88", VA = "0x134FD88")]
		public TimelineEventPair()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D2")]
	public class TimelineEvent
	{
		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TimelineEventType EventType;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string FunctionName;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float LookAtPlayerTransitionTime;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float LookAtPlayerTransitionTimeEyesOnly;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LookAtTransitionTime;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform LookAtObjTransf;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform AimAtObjTransf;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float LookAtTransitionTimeEyesOnly;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform LookAtObjTransfEyesOnly;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MT_PlayerHeightType PlayerHeightType;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform SitLocation;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public double startFrame;

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x134FD80", Offset = "0x134FD80", VA = "0x134FD80")]
		public TimelineEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D3")]
	public class CharacterGroup
	{
		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string characterName;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimPair animationClips;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimelinePair timelines;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TimelineEventPair timelineEvents;

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x1208294", Offset = "0x1208294", VA = "0x1208294")]
		public CharacterGroup()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE6B04C", Offset = "0xE6B04C")]
	public sealed class DialogueBus : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20004D5")]
		private class CharaToDialogueEvent
		{
			[Token(Token = "0x40016E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string CharaID;

			[Token(Token = "0x40016E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string BusID;

			[Token(Token = "0x6001A8B")]
			[Address(RVA = "0x103045C", Offset = "0x103045C", VA = "0x103045C")]
			public CharaToDialogueEvent()
			{
			}
		}

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharaToDialogueEvent[] _dialoguePlayEvents;

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x10072A4", Offset = "0x10072A4", VA = "0x10072A4")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE91ED0", Offset = "0xE91ED0")]
		public string GetBusID(string charaID)
		{
			return null;
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x1007380", Offset = "0x1007380", VA = "0x1007380")]
		public DialogueBus()
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public sealed class DialogueDatabase
	{
		[Token(Token = "0x20004D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B090", Offset = "0xE6B090")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40016EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x6001A8F")]
			[Address(RVA = "0x1030464", Offset = "0x1030464", VA = "0x1030464")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001A90")]
			[Address(RVA = "0x103046C", Offset = "0x103046C", VA = "0x103046C")]
			internal bool <GetDialoguePlayableAsset>b__0(PlayableAsset x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PlayableAsset[] _dialogueLinePrefabs;

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x1007390", Offset = "0x1007390", VA = "0x1007390")]
		public void Initialise()
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x1007400", Offset = "0x1007400", VA = "0x1007400")]
		public PlayableAsset GetDialoguePlayableAsset(string name)
		{
			return null;
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x1007580", Offset = "0x1007580", VA = "0x1007580")]
		public DialogueDatabase()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6B0A0", Offset = "0xE6B0A0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6B0A0", Offset = "0xE6B0A0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6B0A0", Offset = "0xE6B0A0")]
	public sealed class RunDialogueLineNode : LatentActionNode<string, string>
	{
		[Token(Token = "0x20004D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B128", Offset = "0xE6B128")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40016EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool hasFinished;

			[Token(Token = "0x6001A94")]
			[Address(RVA = "0x32C6698", Offset = "0x32C6698", VA = "0x32C6698")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001A95")]
			[Address(RVA = "0x32C66A0", Offset = "0x32C66A0", VA = "0x32C66A0")]
			internal void <Invoke>g__ONComplete|0()
			{
			}

			[Token(Token = "0x6001A96")]
			[Address(RVA = "0x32C66AC", Offset = "0x32C66AC", VA = "0x32C66AC")]
			internal bool <Invoke>g__IsTrue|1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B138", Offset = "0xE6B138")]
		private sealed class <Invoke>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string npcId;

			[Token(Token = "0x40016F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string dialogueId;

			[Token(Token = "0x170002EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A9A")]
				[Address(RVA = "0x32C68F8", Offset = "0x32C68F8", VA = "0x32C68F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A9C")]
				[Address(RVA = "0x32C6940", Offset = "0x32C6940", VA = "0x32C6940", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A97")]
			[Address(RVA = "0x32C66B4", Offset = "0x32C66B4", VA = "0x32C66B4")]
			[DebuggerHidden]
			public <Invoke>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001A98")]
			[Address(RVA = "0x32C66E0", Offset = "0x32C66E0", VA = "0x32C66E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A99")]
			[Address(RVA = "0x32C66E4", Offset = "0x32C66E4", VA = "0x32C66E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0x32C6900", Offset = "0x32C6900", VA = "0x32C6900", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x170002EE")]
		private static MT_DialogueHandler DialogueHandler
		{
			[Token(Token = "0x6001A91")]
			[Address(RVA = "0x32CC7E4", Offset = "0x32CC7E4", VA = "0x32CC7E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x32CC848", Offset = "0x32CC848", VA = "0x32CC848", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE91F48", Offset = "0xE91F48")]
		public override IEnumerator Invoke(string npcId, string dialogueId)
		{
			return null;
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x32CC8DC", Offset = "0x32CC8DC", VA = "0x32CC8DC")]
		public RunDialogueLineNode()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6B148", Offset = "0xE6B148")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6B148", Offset = "0xE6B148")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6B148", Offset = "0xE6B148")]
	public sealed class PlayDialogueNode : LatentActionNode<string, AudioClip>
	{
		[Token(Token = "0x20004DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B1D0", Offset = "0xE6B1D0")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string npcId;

			[Token(Token = "0x40016F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip track;

			[Token(Token = "0x40016F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <time>5__2;

			[Token(Token = "0x40016F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool <canFinish>5__3;

			[Token(Token = "0x170002F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AA2")]
				[Address(RVA = "0x32C50A4", Offset = "0x32C50A4", VA = "0x32C50A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AA4")]
				[Address(RVA = "0x32C50EC", Offset = "0x32C50EC", VA = "0x32C50EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0x32C4E7C", Offset = "0x32C4E7C", VA = "0x32C4E7C")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001AA0")]
			[Address(RVA = "0x32C4EA8", Offset = "0x32C4EA8", VA = "0x32C4EA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0x32C4EAC", Offset = "0x32C4EAC", VA = "0x32C4EAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AA3")]
			[Address(RVA = "0x32C50AC", Offset = "0x32C50AC", VA = "0x32C50AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x1080B64", Offset = "0x1080B64", VA = "0x1080B64", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE91FF8", Offset = "0xE91FF8")]
		public override IEnumerator Invoke(string npcId, AudioClip track)
		{
			return null;
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x1080BF8", Offset = "0x1080BF8", VA = "0x1080BF8")]
		public PlayDialogueNode()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public sealed class MT_SubtitleManager : MonoBehaviour
	{
		[Token(Token = "0x20004DE")]
		private class GameplayReference
		{
			[Token(Token = "0x400171A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_NPCGameplay GameplayScript;

			[Token(Token = "0x400171B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string GridlyID;

			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0x32B9A60", Offset = "0x32B9A60", VA = "0x32B9A60")]
			public GameplayReference(MT_NPCGameplay gameplay, string id)
			{
			}
		}

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE82F98", Offset = "0xE82F98")]
		private static bool <IsInitialised>k__BackingField;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayerPublic _playerPublic;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _subtitleParentTransform;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _longestExtent;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _speakerID;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _oldSpeakerID;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _updatedLastFrame;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float lerpSpeed;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float playerOffset;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int maxLinesOnScreen;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject subtitleParent;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject subtitleActivationObject;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool SubtitlesEnabled;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject subtitlePrefab;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform targetTransform;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform indicatorArrow;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Shader subtitleShader;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float minDistance;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float npcHeadOffset;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float maxSubtitleDistance;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float minSubtitleDistance;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float maxTargetDistance;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE83078", Offset = "0xE83078")]
		[SerializeField]
		private GameObject safeZoneParent;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Transform topRightSafeZone;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Transform bottomLeftSafeZone;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE830E4", Offset = "0xE830E4")]
		[SerializeField]
		private float faceSafeZoneBoundsX;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private float faceSafeZoneBoundsY;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[NaughtyAttributes.ReadOnly]
		public List<MT_SubtitleLine> lines;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private MT_SubtitleLine[] _lineArray;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int _lineCount;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly Dictionary<string, GameplayReference> _speakerDictionary;

		[Token(Token = "0x4001716")]
		private const string closedCaptionKey = "ClosedCaption";

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public Transform eyesTransform;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public bool returningToMainMenu;

		[Token(Token = "0x4001719")]
		private const string SubtitleManagerPath = "SubtitleManager";

		[Token(Token = "0x170002F3")]
		public static bool IsInitialised
		{
			[Token(Token = "0x6001AA6")]
			[Address(RVA = "0x12B1870", Offset = "0x12B1870", VA = "0x12B1870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE920B8", Offset = "0xE920B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AA5")]
			[Address(RVA = "0x12B181C", Offset = "0x12B181C", VA = "0x12B181C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE920A8", Offset = "0xE920A8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x12B18BC", Offset = "0x12B18BC", VA = "0x12B18BC")]
		public static void Init()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x12B1B48", Offset = "0x12B1B48", VA = "0x12B1B48")]
		public void Register(MT_NPCGameplay npc)
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x12B1C94", Offset = "0x12B1C94", VA = "0x12B1C94")]
		public void Deregister(MT_NPCGameplay npc)
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x12B1D80", Offset = "0x12B1D80", VA = "0x12B1D80")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x12B1F68", Offset = "0x12B1F68", VA = "0x12B1F68")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE920C8", Offset = "0xE920C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x12B26B0", Offset = "0x12B26B0", VA = "0x12B26B0")]
		private void TargetMoveToSpeaker(Vector3 speakerPos, Vector3 playerPos)
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x12B2D08", Offset = "0x12B2D08", VA = "0x12B2D08")]
		private bool MakeSureTargetIsInFrontOfPlayer(Vector3 targetWorldPos, out Vector3 correctedTargetWorldPos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x12B2F04", Offset = "0x12B2F04", VA = "0x12B2F04")]
		public bool IsWorldPosInSafeZone(Vector3 srcWorldPos, Vector3 playerWorldPos, out Vector3 safeWorldPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x12B29AC", Offset = "0x12B29AC", VA = "0x12B29AC")]
		public void MoveTextBoxToTarget(bool updateInstantly = false)
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x12B2C1C", Offset = "0x12B2C1C", VA = "0x12B2C1C")]
		private void RotateIndicator(Transform speaker, Vector3 playerPosition)
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x12B31B8", Offset = "0x12B31B8", VA = "0x12B31B8")]
		private Vector3 LerpObject(float speed, Vector3 position, Vector3 newPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x12B3234", Offset = "0x12B3234", VA = "0x12B3234")]
		public void CreateSubtitle(string newText, float duration, string speakerID, [Optional] string newSpeaker, int speakerIndex = 0)
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x12B3B0C", Offset = "0x12B3B0C", VA = "0x12B3B0C")]
		public void CreateClosedCaption(string newText, float duration)
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x12B39A4", Offset = "0x12B39A4", VA = "0x12B39A4")]
		public void DisplayNewSubtitleOrder()
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x12B3778", Offset = "0x12B3778", VA = "0x12B3778")]
		private static string FirstLetterToUpperCaseOrConvertNullToEmptyString(string s)
		{
			return null;
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x12B3868", Offset = "0x12B3868", VA = "0x12B3868")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE92140", Offset = "0xE92140")]
		private void PopulateLinesArray()
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x12B3E28", Offset = "0x12B3E28", VA = "0x12B3E28")]
		private void DrawSafeZone()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x12B4334", Offset = "0x12B4334", VA = "0x12B4334")]
		private void DrawDistanceToSpeaker()
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x12B2E94", Offset = "0x12B2E94", VA = "0x12B2E94")]
		private Vector3 GetPointAlongLine(Vector3 pt1, Vector3 pt2, float distance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x12B4658", Offset = "0x12B4658", VA = "0x12B4658")]
		private void DrawNpcHeadOffset()
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x12B479C", Offset = "0x12B479C", VA = "0x12B479C")]
		public MT_SubtitleManager()
		{
		}
	}
}
namespace MazeTheory.Utilities
{
	[Token(Token = "0x20004DF")]
	public sealed class MT_PauseMenuObjectListToggle : MonoBehaviour
	{
		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> gameObjects;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<bool> _previouslyActive;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _wasPaused;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _previouslyPaused;

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x1106714", Offset = "0x1106714", VA = "0x1106714")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x11067E8", Offset = "0x11067E8", VA = "0x11067E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x110691C", Offset = "0x110691C", VA = "0x110691C")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x1106A58", Offset = "0x1106A58", VA = "0x1106A58")]
		public void Unpause()
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x1106B34", Offset = "0x1106B34", VA = "0x1106B34")]
		public MT_PauseMenuObjectListToggle()
		{
		}
	}
}
namespace MazeTheory.SceneStreaming
{
	[Token(Token = "0x20004E0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6B1E0", Offset = "0xE6B1E0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6B1E0", Offset = "0xE6B1E0")]
	public sealed class GetCurrentChapterName : CallableFunctionNode<string>
	{
		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x10D1C80", Offset = "0x10D1C80", VA = "0x10D1C80", Slot = "12")]
		public override string Invoke()
		{
			return null;
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x10D1CD8", Offset = "0x10D1CD8", VA = "0x10D1CD8")]
		public GetCurrentChapterName()
		{
		}
	}
	[Token(Token = "0x20004E1")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6B244", Offset = "0xE6B244")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6B244", Offset = "0xE6B244")]
	public sealed class GetCurrentLocationSceneName : CallableFunctionNode<string>
	{
		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x10D1D24", Offset = "0x10D1D24", VA = "0x10D1D24", Slot = "12")]
		public override string Invoke()
		{
			return null;
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x10D1D70", Offset = "0x10D1D70", VA = "0x10D1D70")]
		public GetCurrentLocationSceneName()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE6B2A8", Offset = "0xE6B2A8")]
	public class SceneSelectJournalEntry : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20004E3")]
		public class JournalPart
		{
			[Token(Token = "0x4001721")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4001722")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public JournalStoryItem[] items;

			[Token(Token = "0x4001723")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string[] potentialProgressionFlags;

			[Token(Token = "0x6001AC7")]
			[Address(RVA = "0x32C7BB4", Offset = "0x32C7BB4", VA = "0x32C7BB4")]
			public JournalPart()
			{
			}
		}

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JournalPart[] parts;

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x32D407C", Offset = "0x32D407C", VA = "0x32D407C")]
		public SceneSelectJournalEntry()
		{
		}
	}
	[Token(Token = "0x20004E4")]
	public class MT_BlockoutSceneParent : MonoBehaviour
	{
		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x112776C", Offset = "0x112776C", VA = "0x112776C")]
		public MT_BlockoutSceneParent()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public sealed class MT_LocationSceneParent : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B2EC", Offset = "0xE6B2EC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001739")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__32_0;

			[Token(Token = "0x400173A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<bool> <>9__34_0;

			[Token(Token = "0x400173B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<bool> <>9__34_1;

			[Token(Token = "0x400173C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<OnInitialisedFunction> <>9__34_2;

			[Token(Token = "0x400173D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Predicate<string> <>9__39_0;

			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0x10399F4", Offset = "0x10399F4", VA = "0x10399F4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0x10399FC", Offset = "0x10399FC", VA = "0x10399FC")]
			internal bool <SceneManagerOnSceneLoaded>b__32_0(GameObject x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0x1039A5C", Offset = "0x1039A5C", VA = "0x1039A5C")]
			internal bool <OnLoadCo>b__34_0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0x1039AF8", Offset = "0x1039AF8", VA = "0x1039AF8")]
			internal bool <OnLoadCo>b__34_1()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0x1039B20", Offset = "0x1039B20", VA = "0x1039B20")]
			internal void <OnLoadCo>b__34_2(OnInitialisedFunction x)
			{
			}

			[Token(Token = "0x6001AEB")]
			[Address(RVA = "0x1039B3C", Offset = "0x1039B3C", VA = "0x1039B3C")]
			internal bool <LoadScenesForLocation>b__39_0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B2FC", Offset = "0xE6B2FC")]
		private sealed class <OnLoadCo>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400173E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400173F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001740")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_LocationSceneParent <>4__this;

			[Token(Token = "0x170002F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AEF")]
				[Address(RVA = "0x103AC8C", Offset = "0x103AC8C", VA = "0x103AC8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AF1")]
				[Address(RVA = "0x103ACD4", Offset = "0x103ACD4", VA = "0x103ACD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0x103A440", Offset = "0x103A440", VA = "0x103A440")]
			[DebuggerHidden]
			public <OnLoadCo>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001AED")]
			[Address(RVA = "0x103A46C", Offset = "0x103A46C", VA = "0x103A46C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AEE")]
			[Address(RVA = "0x103A470", Offset = "0x103A470", VA = "0x103A470", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0x103AC94", Offset = "0x103AC94", VA = "0x103AC94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B30C", Offset = "0xE6B30C")]
		private sealed class <CheckScenePauseManager>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001741")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001742")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001743")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_LocationSceneParent <>4__this;

			[Token(Token = "0x170002F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AF5")]
				[Address(RVA = "0x1039E88", Offset = "0x1039E88", VA = "0x1039E88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AF7")]
				[Address(RVA = "0x1039ED0", Offset = "0x1039ED0", VA = "0x1039ED0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0x1039C74", Offset = "0x1039C74", VA = "0x1039C74")]
			[DebuggerHidden]
			public <CheckScenePauseManager>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0x1039CA0", Offset = "0x1039CA0", VA = "0x1039CA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0x1039CA4", Offset = "0x1039CA4", VA = "0x1039CA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0x1039E90", Offset = "0x1039E90", VA = "0x1039E90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B31C", Offset = "0xE6B31C")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4001744")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string currentChapterWithSubscene;

			[Token(Token = "0x6001AF8")]
			[Address(RVA = "0x1039B94", Offset = "0x1039B94", VA = "0x1039B94")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6001AF9")]
			[Address(RVA = "0x1039B9C", Offset = "0x1039B9C", VA = "0x1039B9C")]
			internal bool <GetCurrentChapter>b__0(Chapter x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B32C", Offset = "0xE6B32C")]
		private sealed class <>c__DisplayClass38_1
		{
			[Token(Token = "0x4001745")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string freeRoamChapter;

			[Token(Token = "0x6001AFA")]
			[Address(RVA = "0x1039BC0", Offset = "0x1039BC0", VA = "0x1039BC0")]
			public <>c__DisplayClass38_1()
			{
			}

			[Token(Token = "0x6001AFB")]
			[Address(RVA = "0x1039BC8", Offset = "0x1039BC8", VA = "0x1039BC8")]
			internal bool <GetCurrentChapter>b__1(Chapter x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B33C", Offset = "0xE6B33C")]
		private sealed class <LoadAllLocationScenes>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001746")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001747")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001748")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_LocationSceneParent <>4__this;

			[Token(Token = "0x4001749")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int length;

			[Token(Token = "0x400174A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action onComplete;

			[Token(Token = "0x400174B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__2;

			[Token(Token = "0x170002FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AFF")]
				[Address(RVA = "0x103A140", Offset = "0x103A140", VA = "0x103A140", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B01")]
				[Address(RVA = "0x103A188", Offset = "0x103A188", VA = "0x103A188", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AFC")]
			[Address(RVA = "0x1039ED8", Offset = "0x1039ED8", VA = "0x1039ED8")]
			[DebuggerHidden]
			public <LoadAllLocationScenes>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6001AFD")]
			[Address(RVA = "0x1039F04", Offset = "0x1039F04", VA = "0x1039F04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AFE")]
			[Address(RVA = "0x1039F08", Offset = "0x1039F08", VA = "0x1039F08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B00")]
			[Address(RVA = "0x103A148", Offset = "0x103A148", VA = "0x103A148", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B34C", Offset = "0xE6B34C")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x400174C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AsyncOperationHandle<SceneInstance> asyncLoad;

			[Token(Token = "0x6001B02")]
			[Address(RVA = "0x1039C20", Offset = "0x1039C20", VA = "0x1039C20")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x6001B03")]
			[Address(RVA = "0x1039C28", Offset = "0x1039C28", VA = "0x1039C28")]
			internal bool <LoadLocationSceneAsync>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B35C", Offset = "0xE6B35C")]
		private sealed class <LoadLocationSceneAsync>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400174D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400174E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400174F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string scene;

			[Token(Token = "0x4001750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MT_LocationSceneParent <>4__this;

			[Token(Token = "0x4001751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int index;

			[Token(Token = "0x4001752")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <initTime>5__2;

			[Token(Token = "0x170002FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B07")]
				[Address(RVA = "0x103A3F0", Offset = "0x103A3F0", VA = "0x103A3F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B09")]
				[Address(RVA = "0x103A438", Offset = "0x103A438", VA = "0x103A438", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B04")]
			[Address(RVA = "0x103A190", Offset = "0x103A190", VA = "0x103A190")]
			[DebuggerHidden]
			public <LoadLocationSceneAsync>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6001B05")]
			[Address(RVA = "0x103A1BC", Offset = "0x103A1BC", VA = "0x103A1BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B06")]
			[Address(RVA = "0x103A1C0", Offset = "0x103A1C0", VA = "0x103A1C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B08")]
			[Address(RVA = "0x103A3F8", Offset = "0x103A3F8", VA = "0x103A3F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B36C", Offset = "0xE6B36C")]
		private sealed class <PrewarmTimelinesCo>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001753")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001754")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001755")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_LocationSceneParent <>4__this;

			[Token(Token = "0x4001756")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private PlayableDirector[] <directors>5__2;

			[Token(Token = "0x4001757")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <directorsCount>5__3;

			[Token(Token = "0x4001758")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <i>5__4;

			[Token(Token = "0x170002FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B0D")]
				[Address(RVA = "0x103AEA0", Offset = "0x103AEA0", VA = "0x103AEA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000300")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B0F")]
				[Address(RVA = "0x103AEE8", Offset = "0x103AEE8", VA = "0x103AEE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B0A")]
			[Address(RVA = "0x103ACDC", Offset = "0x103ACDC", VA = "0x103ACDC")]
			[DebuggerHidden]
			public <PrewarmTimelinesCo>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6001B0B")]
			[Address(RVA = "0x103AD08", Offset = "0x103AD08", VA = "0x103AD08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B0C")]
			[Address(RVA = "0x103AD0C", Offset = "0x103AD0C", VA = "0x103AD0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B0E")]
			[Address(RVA = "0x103AEA8", Offset = "0x103AEA8", VA = "0x103AEA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly List<OnInitialisedFunction> OnInitialisedFunctions;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE83180", Offset = "0xE83180")]
		private bool <CallingFunctions>k__BackingField;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Chapter> chapters;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] commonScenesName;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool playerHasBeenSpawnedIn;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE831B0", Offset = "0xE831B0")]
		private static string <LocationSceneName>k__BackingField;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE831C0", Offset = "0xE831C0")]
		private static Chapter <CurrentChapter>k__BackingField;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string[] _scenesToLoad;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool[] _sceneLoadedFlags;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Scene _environmentScene;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _environmentSceneLoaded;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _currentScene;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _currentAct;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _currentSubScene;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool IsSittingStart;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private static bool _setChapterExternally;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _gameplayParent;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _gameplayParentSet;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private FoveationLevel foveationLevel;

		[Token(Token = "0x170002F4")]
		public bool CallingFunctions
		{
			[Token(Token = "0x6001ACA")]
			[Address(RVA = "0x125D7D4", Offset = "0x125D7D4", VA = "0x125D7D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE921C8", Offset = "0xE921C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AC9")]
			[Address(RVA = "0x125D7C8", Offset = "0x125D7C8", VA = "0x125D7C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE921B8", Offset = "0xE921B8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F5")]
		public static string LocationSceneName
		{
			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0x125D9A8", Offset = "0x125D9A8", VA = "0x125D9A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92208", Offset = "0xE92208")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ACD")]
			[Address(RVA = "0x125D954", Offset = "0x125D954", VA = "0x125D954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE921F8", Offset = "0xE921F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F6")]
		public static Chapter CurrentChapter
		{
			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0x125D9F4", Offset = "0x125D9F4", VA = "0x125D9F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92218", Offset = "0xE92218")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AD0")]
			[Address(RVA = "0x125DA40", Offset = "0x125DA40", VA = "0x125DA40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92228", Offset = "0xE92228")]
			private set
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public static event Action OnLocationInitialised
		{
			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0x125D7DC", Offset = "0x125D7DC", VA = "0x125D7DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE921D8", Offset = "0xE921D8")]
			add
			{
			}
			[Token(Token = "0x6001ACC")]
			[Address(RVA = "0x125D898", Offset = "0x125D898", VA = "0x125D898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE921E8", Offset = "0xE921E8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x125DA94", Offset = "0x125DA94", VA = "0x125DA94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x125E708", Offset = "0x125E708", VA = "0x125E708")]
		private void SceneManagerOnSceneLoaded(Scene s, LoadSceneMode m)
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x125E928", Offset = "0x125E928", VA = "0x125E928")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x125EFB0", Offset = "0x125EFB0", VA = "0x125EFB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE92238", Offset = "0xE92238")]
		private IEnumerator OnLoadCo()
		{
			return null;
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x125F028", Offset = "0x125F028", VA = "0x125F028")]
		private static void TryEnableSpaceWarp()
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x125F10C", Offset = "0x125F10C", VA = "0x125F10C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE92298", Offset = "0xE92298")]
		private IEnumerator CheckScenePauseManager()
		{
			return null;
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x125F184", Offset = "0x125F184", VA = "0x125F184")]
		private void SetupCollectables()
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x125DB10", Offset = "0x125DB10", VA = "0x125DB10")]
		private void GetCurrentChapter()
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x125EB94", Offset = "0x125EB94", VA = "0x125EB94")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE922F8", Offset = "0xE922F8")]
		public void LoadScenesForLocation(Action onComplete)
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x125F300", Offset = "0x125F300", VA = "0x125F300")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE92370", Offset = "0xE92370")]
		private IEnumerator LoadAllLocationScenes(int length, Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x125F39C", Offset = "0x125F39C", VA = "0x125F39C")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE923D0", Offset = "0xE923D0")]
		private bool AllSceneFlagsTrue()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x125F3E8", Offset = "0x125F3E8", VA = "0x125F3E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE92448", Offset = "0xE92448")]
		private IEnumerator LoadLocationSceneAsync(string scene, int index)
		{
			return null;
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x125F484", Offset = "0x125F484", VA = "0x125F484")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE924A8", Offset = "0xE924A8")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE924A8", Offset = "0xE924A8")]
		private IEnumerator PrewarmTimelinesCo()
		{
			return null;
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x125E440", Offset = "0x125E440", VA = "0x125E440")]
		private void SpawnPlayerRigIfRequired()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x125E570", Offset = "0x125E570", VA = "0x125E570")]
		private void ResetCombatState()
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x125F4FC", Offset = "0x125F4FC", VA = "0x125F4FC")]
		public void WrapUpSpawningIn()
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x125F5AC", Offset = "0x125F5AC", VA = "0x125F5AC")]
		public static void SetCurrentChapter(Chapter chapter)
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x125F634", Offset = "0x125F634", VA = "0x125F634")]
		public MT_LocationSceneParent()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x125F6C0", Offset = "0x125F6C0", VA = "0x125F6C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92554", Offset = "0xE92554")]
		private void <Start>b__33_0()
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x125F6EC", Offset = "0x125F6EC", VA = "0x125F6EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92564", Offset = "0xE92564")]
		private bool <CheckScenePauseManager>b__36_0()
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20004EF")]
	public class Chapter
	{
		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ChapterName;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] SceneNames;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeOfDay TimeOfDay;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool SpaceWarpEnabled;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform ChapterStartSpawnPoint;

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x12063F8", Offset = "0x12063F8", VA = "0x12063F8")]
		public Chapter()
		{
		}
	}
	[Token(Token = "0x20004F0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE6B37C", Offset = "0xE6B37C")]
	public class MT_Portal : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B3DC", Offset = "0xE6B3DC")]
		private sealed class <>c
		{
			[Token(Token = "0x400176B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400176C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__15_0;

			[Token(Token = "0x6001B17")]
			[Address(RVA = "0x32B86F0", Offset = "0x32B86F0", VA = "0x32B86F0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B18")]
			[Address(RVA = "0x32B86F8", Offset = "0x32B86F8", VA = "0x32B86F8")]
			internal void <LoadNextScene>b__15_0()
			{
			}
		}

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string spawnPointId;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string nextSceneName;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int nextActNumber;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int nextSceneNumber;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int nextSubSceneNumber;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[MazeTheory.Toolbox.ReadOnly]
		public string currentSceneName;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _enterPlayerPosition;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _exitPlayerPosition;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _sceneToLoad;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _isPortalUsed;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _isLoading;

		[Token(Token = "0x4001769")]
		private const string PlayerTag = "Player";

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent OnBeforePortal;

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x1335B74", Offset = "0x1335B74", VA = "0x1335B74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x1335C58", Offset = "0x1335C58", VA = "0x1335C58")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x1335CF8", Offset = "0x1335CF8", VA = "0x1335CF8")]
		private void LoadNextScene()
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x133601C", Offset = "0x133601C", VA = "0x133601C")]
		public void LoadNextSceneViaTeleport()
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x133602C", Offset = "0x133602C", VA = "0x133602C")]
		public MT_Portal()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	public sealed class MT_SceneStreamingManager : IGameModule
	{
		[Token(Token = "0x20004F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B3EC", Offset = "0xE6B3EC")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4001775")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string locationName;

			[Token(Token = "0x6001B28")]
			[Address(RVA = "0x32B8DE4", Offset = "0x32B8DE4", VA = "0x32B8DE4")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6001B29")]
			[Address(RVA = "0x32B8DEC", Offset = "0x32B8DEC", VA = "0x32B8DEC")]
			internal void <GoToLocation>b__0()
			{
			}
		}

		[Token(Token = "0x20004F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B3FC", Offset = "0xE6B3FC")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001776")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string sceneName1;

			[Token(Token = "0x4001777")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LoadSceneMode loadSceneMode1;

			[Token(Token = "0x6001B2A")]
			[Address(RVA = "0x32B8F58", Offset = "0x32B8F58", VA = "0x32B8F58")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001B2B")]
			[Address(RVA = "0x32B8F60", Offset = "0x32B8F60", VA = "0x32B8F60")]
			internal void <LoadSceneAsync>b__0()
			{
			}
		}

		[Token(Token = "0x400176D")]
		private const float FadeTime = 0.4f;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE83240", Offset = "0xE83240")]
		private static MT_LocationSceneParent <CurrentLocation>k__BackingField;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE83250", Offset = "0xE83250")]
		private static string <CurrentLocationName>k__BackingField;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string ChapterOverride;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static bool PlayingFromChapterSelect;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string LastLoadedScene;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE83260", Offset = "0xE83260")]
		private static SceneNameData <SceneNameData>k__BackingField;

		[Token(Token = "0x17000301")]
		public static MT_LocationSceneParent CurrentLocation
		{
			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0x12A79B8", Offset = "0x12A79B8", VA = "0x12A79B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92724", Offset = "0xE92724")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B1C")]
			[Address(RVA = "0x12A7A04", Offset = "0x12A7A04", VA = "0x12A7A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92734", Offset = "0xE92734")]
			set
			{
			}
		}

		[Token(Token = "0x17000302")]
		public static string CurrentLocationName
		{
			[Token(Token = "0x6001B1D")]
			[Address(RVA = "0x12A7A58", Offset = "0x12A7A58", VA = "0x12A7A58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92744", Offset = "0xE92744")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B1E")]
			[Address(RVA = "0x12A7AA4", Offset = "0x12A7AA4", VA = "0x12A7AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92754", Offset = "0xE92754")]
			set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public static SceneNameData SceneNameData
		{
			[Token(Token = "0x6001B20")]
			[Address(RVA = "0x12A7B4C", Offset = "0x12A7B4C", VA = "0x12A7B4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92774", Offset = "0xE92774")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B1F")]
			[Address(RVA = "0x12A7AF8", Offset = "0x12A7AF8", VA = "0x12A7AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92764", Offset = "0xE92764")]
			private set
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public static event Action OnStartChangeLocation
		{
			[Token(Token = "0x6001B19")]
			[Address(RVA = "0x12A7840", Offset = "0x12A7840", VA = "0x12A7840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92704", Offset = "0xE92704")]
			add
			{
			}
			[Token(Token = "0x6001B1A")]
			[Address(RVA = "0x12A78FC", Offset = "0x12A78FC", VA = "0x12A78FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92714", Offset = "0xE92714")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x12A7B98", Offset = "0x12A7B98", VA = "0x12A7B98")]
		public static void GoToLocationChapter(string location, int act, int scene, int subscene)
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x12A7CAC", Offset = "0x12A7CAC", VA = "0x12A7CAC")]
		public static void GoToLocation(string locationName)
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x12A81D4", Offset = "0x12A81D4", VA = "0x12A81D4")]
		public static void LoadSceneAsync(string sceneName, LoadSceneMode loadSceneMode, bool destroyRig, [Optional] Action<Scene, LoadSceneMode> onLoaded, bool stopAudio = true)
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x12A8478", Offset = "0x12A8478", VA = "0x12A8478")]
		public static Transform GetMainSceneParent()
		{
			return null;
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x12A8568", Offset = "0x12A8568", VA = "0x12A8568", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x12A8604", Offset = "0x12A8604", VA = "0x12A8604", Slot = "5")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x12A8608", Offset = "0x12A8608", VA = "0x12A8608")]
		public MT_SceneStreamingManager()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public class MT_SpawnPoint : MonoBehaviour
	{
		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x12AFB40", Offset = "0x12AFB40", VA = "0x12AFB40")]
		public MT_SpawnPoint()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	public class MT_DebugMainMenu : MonoBehaviour
	{
		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject mainMenu;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_SelectDebugMenu debugMenu;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MT_UIButton debugMenuButton;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI blockoutVisibilityText;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MT_UIButton blockoutVisibilityToggle;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject blockoutVisibilityToggleImage;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject sceneSelectMenu;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI buildVersionText;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _hasBlockoutVisibility;

		[Token(Token = "0x4001781")]
		private const string FirstScene = "Location_SH_GarrisonLane";

		[Token(Token = "0x4001782")]
		private const string FirstWaypoint = "SpawnPoint";

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x1132784", Offset = "0x1132784", VA = "0x1132784")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x1132808", Offset = "0x1132808", VA = "0x1132808")]
		private void SpawnAudioInitializer()
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x113280C", Offset = "0x113280C", VA = "0x113280C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x11329BC", Offset = "0x11329BC", VA = "0x11329BC")]
		public void StartGame()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x1132B40", Offset = "0x1132B40", VA = "0x1132B40")]
		public void OpenSceneSelect()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x1132B84", Offset = "0x1132B84", VA = "0x1132B84")]
		private void FillMenuInfo()
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x1132D5C", Offset = "0x1132D5C", VA = "0x1132D5C")]
		private void OpenDebugMenu()
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x1132CD0", Offset = "0x1132CD0", VA = "0x1132CD0")]
		private void ToggleBlockoutVisibility()
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x1132DBC", Offset = "0x1132DBC", VA = "0x1132DBC")]
		public MT_DebugMainMenu()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	public class MT_DebugMenuButton : MonoBehaviour
	{
		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI buttonLabel;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _scenePath;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _act;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _scene;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _subscene;

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x1132DC4", Offset = "0x1132DC4", VA = "0x1132DC4")]
		public void Initialize(string sceneName, string scenePath)
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x113307C", Offset = "0x113307C", VA = "0x113307C")]
		public void Pressed()
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x1133150", Offset = "0x1133150", VA = "0x1133150")]
		public MT_DebugMenuButton()
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x1133158", Offset = "0x1133158", VA = "0x1133158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92784", Offset = "0xE92784")]
		private void <Pressed>b__6_0()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public sealed class SceneSelectMenu : MonoBehaviour, IDebugMenu
	{
		[Token(Token = "0x20004F9")]
		private struct SceneRef
		{
			[Token(Token = "0x4001791")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x4001792")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Path;

			[Token(Token = "0x4001793")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string SpawnPointID;

			[Token(Token = "0x4001794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string PlayerFacingID;

			[Token(Token = "0x6001B45")]
			[Address(RVA = "0x32C7EF4", Offset = "0x32C7EF4", VA = "0x32C7EF4")]
			public SceneRef(string name, string path, string playerFacingID)
			{
			}

			[Token(Token = "0x6001B46")]
			[Address(RVA = "0x32C7F54", Offset = "0x32C7F54", VA = "0x32C7F54")]
			public SceneRef(string name, string path, string spawnPointID, string playerFacingID)
			{
			}
		}

		[Token(Token = "0x20004FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B40C", Offset = "0xE6B40C")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4001795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string[] sceneArray;

			[Token(Token = "0x6001B47")]
			[Address(RVA = "0x32C7EB0", Offset = "0x32C7EB0", VA = "0x32C7EB0")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001B48")]
			[Address(RVA = "0x32C7EB8", Offset = "0x32C7EB8", VA = "0x32C7EB8")]
			internal bool <Play>b__1(SceneRef se)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20004FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B41C", Offset = "0xE6B41C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001796")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001797")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__14_2;

			[Token(Token = "0x6001B4A")]
			[Address(RVA = "0x32C7E10", Offset = "0x32C7E10", VA = "0x32C7E10")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B4B")]
			[Address(RVA = "0x32C7E18", Offset = "0x32C7E18", VA = "0x32C7E18")]
			internal void <Play>b__14_2()
			{
			}
		}

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _sceneText;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject objsToDiable;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<SceneRef> sceneEntries;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _selectedScene;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _selectedSceneName;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _act;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _scene;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _subscene;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _currentIndex;

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x32D4540", Offset = "0x32D4540", VA = "0x32D4540")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x32D45B8", Offset = "0x32D45B8", VA = "0x32D45B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x32D5398", Offset = "0x32D5398", VA = "0x32D5398")]
		public void Next()
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x32D5400", Offset = "0x32D5400", VA = "0x32D5400")]
		public void Previous()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x32D5194", Offset = "0x32D5194", VA = "0x32D5194")]
		private void UpdateSceneEntry()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x32D5468", Offset = "0x32D5468", VA = "0x32D5468")]
		public void Play()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x32D551C", Offset = "0x32D551C", VA = "0x32D551C", Slot = "4")]
		public void SetUpMenu()
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x32D5544", Offset = "0x32D5544", VA = "0x32D5544", Slot = "5")]
		public void CloseMenu()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x32D556C", Offset = "0x32D556C", VA = "0x32D556C", Slot = "6")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x32D55B0", Offset = "0x32D55B0", VA = "0x32D55B0")]
		public SceneSelectMenu()
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x32D5634", Offset = "0x32D5634", VA = "0x32D5634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92794", Offset = "0xE92794")]
		private void <Play>b__14_0()
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public sealed class PlayerAndAudioSpawner : MonoBehaviour
	{
		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x10819FC", Offset = "0x10819FC", VA = "0x10819FC")]
		public PlayerAndAudioSpawner()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public class PlayerSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform SpawnPoint;

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x1088AF8", Offset = "0x1088AF8", VA = "0x1088AF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x1088BD4", Offset = "0x1088BD4", VA = "0x1088BD4")]
		public PlayerSpawner()
		{
		}
	}
	[Token(Token = "0x20004FE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE6B42C", Offset = "0xE6B42C")]
	public sealed class SceneNameData : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20004FF")]
		private class NamingData
		{
			[Token(Token = "0x400179A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string SceneName;

			[Token(Token = "0x400179B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string EnglishName;

			[Token(Token = "0x400179C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string LocalisationId;

			[Token(Token = "0x6001B52")]
			[Address(RVA = "0x32C75F0", Offset = "0x32C75F0", VA = "0x32C75F0")]
			public NamingData()
			{
			}
		}

		[Token(Token = "0x2000500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B470", Offset = "0xE6B470")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400179D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string sceneName;

			[Token(Token = "0x6001B53")]
			[Address(RVA = "0x32C7598", Offset = "0x32C7598", VA = "0x32C7598")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001B54")]
			[Address(RVA = "0x32C75A0", Offset = "0x32C75A0", VA = "0x32C75A0")]
			internal bool <GetName>b__0(NamingData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000501")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B480", Offset = "0xE6B480")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x400179E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string sceneName;

			[Token(Token = "0x6001B55")]
			[Address(RVA = "0x32C75C4", Offset = "0x32C75C4", VA = "0x32C75C4")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001B56")]
			[Address(RVA = "0x32C75CC", Offset = "0x32C75CC", VA = "0x32C75CC")]
			internal bool <GetID>b__0(NamingData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NamingData[] data;

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x32D3060", Offset = "0x32D3060", VA = "0x32D3060")]
		public string GetName(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x32D3188", Offset = "0x32D3188", VA = "0x32D3188")]
		public string GetID(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x32D32B0", Offset = "0x32D32B0", VA = "0x32D32B0")]
		public SceneNameData()
		{
		}
	}
	[Token(Token = "0x2000502")]
	public sealed class MT_SpawnPointsManager : IGameModule
	{
		[Token(Token = "0x2000503")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B490", Offset = "0xE6B490")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40017A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string spawnPointName;

			[Token(Token = "0x6001B5F")]
			[Address(RVA = "0x32B9774", Offset = "0x32B9774", VA = "0x32B9774")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001B60")]
			[Address(RVA = "0x32B977C", Offset = "0x32B977C", VA = "0x32B977C")]
			internal bool <MovePlayerToSpawnPoint>b__0(MT_SpawnPoint x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE83320", Offset = "0xE83320")]
		private static string <NextSpawnPointID>k__BackingField;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool SetNextSpawnPointExternally;

		[Token(Token = "0x17000304")]
		public static string NextSpawnPointID
		{
			[Token(Token = "0x6001B58")]
			[Address(RVA = "0x12AFB9C", Offset = "0x12AFB9C", VA = "0x12AFB9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE927B4", Offset = "0xE927B4")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001B57")]
			[Address(RVA = "0x12AFB48", Offset = "0x12AFB48", VA = "0x12AFB48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE927A4", Offset = "0xE927A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000305")]
		private static MT_SpawnPoint[] SpawnPoints
		{
			[Token(Token = "0x6001B59")]
			[Address(RVA = "0x12AFBE8", Offset = "0x12AFBE8", VA = "0x12AFBE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x12AFC58", Offset = "0x12AFC58", VA = "0x12AFC58", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x12AFC5C", Offset = "0x12AFC5C", VA = "0x12AFC5C", Slot = "5")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x12AFC60", Offset = "0x12AFC60", VA = "0x12AFC60")]
		public static void MovePlayerToNextSpawnPoint()
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x12AFCF8", Offset = "0x12AFCF8", VA = "0x12AFCF8")]
		public static void MovePlayerToSpawnPoint(string spawnPointName)
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x12AFEE0", Offset = "0x12AFEE0", VA = "0x12AFEE0")]
		public MT_SpawnPointsManager()
		{
		}
	}
}
namespace MazeTheory.Animation
{
	[Token(Token = "0x2000504")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE6B4A0", Offset = "0xE6B4A0")]
	public class MT_AnimationTransitionEvents : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000505")]
		private class AnimationTransitionEvent
		{
			[Token(Token = "0x40017A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string fromStateName;

			[Token(Token = "0x40017A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string toStateName;

			[Token(Token = "0x40017A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEvent onTransition;

			[Token(Token = "0x40017A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool _hasPlayed;

			[Token(Token = "0x17000306")]
			public bool HasPlayed
			{
				[Token(Token = "0x6001B65")]
				[Address(RVA = "0x1035C04", Offset = "0x1035C04", VA = "0x1035C04")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001B66")]
				[Address(RVA = "0x1035C0C", Offset = "0x1035C0C", VA = "0x1035C0C")]
				set
				{
				}
			}

			[Token(Token = "0x6001B67")]
			[Address(RVA = "0x1035C18", Offset = "0x1035C18", VA = "0x1035C18")]
			public AnimationTransitionEvent()
			{
			}
		}

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int animatorLayerIndex;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationTransitionEvent[] transitionEvents;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator _animator;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isInitialized;

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x1123C58", Offset = "0x1123C58", VA = "0x1123C58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x1123D60", Offset = "0x1123D60", VA = "0x1123D60")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x11240C0", Offset = "0x11240C0", VA = "0x11240C0")]
		[PublicAPI]
		public void TriggerEvent(int index)
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x11241A0", Offset = "0x11241A0", VA = "0x11241A0")]
		public MT_AnimationTransitionEvents()
		{
		}
	}
	[Token(Token = "0x2000506")]
	public class OnTimelineCompletePlayAnimation : MonoBehaviour
	{
		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableDirector director;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationClip clip;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string npcId;

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x107B2C8", Offset = "0x107B2C8", VA = "0x107B2C8")]
		public void StartTrackingTimeline()
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x107B370", Offset = "0x107B370", VA = "0x107B370")]
		private void OnPlayableDirectorStopped(PlayableDirector aDirector)
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x107B404", Offset = "0x107B404", VA = "0x107B404")]
		public OnTimelineCompletePlayAnimation()
		{
		}
	}
}
namespace MazeTheory.DeveloperTools
{
	[Token(Token = "0x2000507")]
	public class MT_DebugConsoleUI : MonoBehaviour, IDebugMenu
	{
		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI stackTraceText;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject logItemPrefab;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform parent;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int maxLogs;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image logsToggleImage;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image warningToggleImage;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image errorsToggleImage;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Stack<GameObject> _logItems;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly HashSet<UnityEngine.LogType> _activeLogTypes;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MT_DebugConsoleManager _manager;

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x112F638", Offset = "0x112F638", VA = "0x112F638", Slot = "6")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x112F67C", Offset = "0x112F67C", VA = "0x112F67C", Slot = "4")]
		public void SetUpMenu()
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x112FAD4", Offset = "0x112FAD4", VA = "0x112FAD4", Slot = "5")]
		public void CloseMenu()
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x112FD40", Offset = "0x112FD40", VA = "0x112FD40")]
		private void ManagerOnLogRecieved(MazeTheory.DebugTools.Log log)
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x112FD70", Offset = "0x112FD70", VA = "0x112FD70")]
		public void SetStackTraceText(MazeTheory.DebugTools.Log l)
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x112F8D0", Offset = "0x112F8D0", VA = "0x112F8D0")]
		private void CreateLogItem(MazeTheory.DebugTools.Log log)
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x112FD98", Offset = "0x112FD98", VA = "0x112FD98")]
		public void ToggleErrors()
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x112FE74", Offset = "0x112FE74", VA = "0x112FE74")]
		public void ToggleWarnings()
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x112FF50", Offset = "0x112FF50", VA = "0x112FF50")]
		public void ToggleLogs()
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x113002C", Offset = "0x113002C", VA = "0x113002C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x1130208", Offset = "0x1130208", VA = "0x1130208")]
		public MT_DebugConsoleUI()
		{
		}
	}
	[Token(Token = "0x2000508")]
	public interface IDebugMenu
	{
		[Token(Token = "0x6001B76")]
		void SetUpMenu();

		[Token(Token = "0x6001B77")]
		void CloseMenu();

		[Token(Token = "0x6001B78")]
		string GetName();
	}
	[Token(Token = "0x2000509")]
	public class MT_CharacterSpawnMenu : MonoBehaviour, IDebugMenu
	{
		[Token(Token = "0x200050A")]
		public readonly struct SpawnPoint
		{
			[Token(Token = "0x40017BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly string name;

			[Token(Token = "0x40017C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly Transform location;

			[Token(Token = "0x6001B84")]
			[Address(RVA = "0x10361C8", Offset = "0x10361C8", VA = "0x10361C8")]
			public SpawnPoint(string name, Transform location)
			{
			}
		}

		[Token(Token = "0x200050B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B510", Offset = "0xE6B510")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40017C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string spawnPointName;

			[Token(Token = "0x6001B85")]
			[Address(RVA = "0x1036108", Offset = "0x1036108", VA = "0x1036108")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001B86")]
			[Address(RVA = "0x1036110", Offset = "0x1036110", VA = "0x1036110")]
			internal bool <AddToDictionary>b__0(SpawnPoint x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200050C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B520", Offset = "0xE6B520")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x40017C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string key;

			[Token(Token = "0x40017C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MT_CharacterSpawnMenu <>4__this;

			[Token(Token = "0x6001B87")]
			[Address(RVA = "0x1036124", Offset = "0x1036124", VA = "0x1036124")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001B88")]
			[Address(RVA = "0x103612C", Offset = "0x103612C", VA = "0x103612C")]
			internal void <FillMenuInfo>b__0()
			{
			}
		}

		[Token(Token = "0x200050D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B530", Offset = "0xE6B530")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x40017C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpawnPoint spawnPoint;

			[Token(Token = "0x6001B89")]
			[Address(RVA = "0x1036150", Offset = "0x1036150", VA = "0x1036150")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6001B8A")]
			[Address(RVA = "0x1036158", Offset = "0x1036158", VA = "0x1036158")]
			internal void <AddSpawnPointButtons>b__0()
			{
			}
		}

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI currentPositionName;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject sceneButton;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject spawnPointButton;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, List<SpawnPoint>> _spawnPointsDictionary;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _currentSceneName;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _currentSpawnPointName;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<GameObject> _sceneButtons;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<GameObject> _spawnPointButtons;

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x11296EC", Offset = "0x11296EC", VA = "0x11296EC")]
		public void SetCurrentSpawnPoint(string sceneName, string spawnPointName)
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x1129720", Offset = "0x1129720", VA = "0x1129720")]
		public void AddToDictionary(string sceneName, string spawnPointName, Transform spawnPointTransform)
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x1129A5C", Offset = "0x1129A5C", VA = "0x1129A5C", Slot = "4")]
		public void SetUpMenu()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x1129EF8", Offset = "0x1129EF8", VA = "0x1129EF8", Slot = "5")]
		public void CloseMenu()
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x112A30C", Offset = "0x112A30C", VA = "0x112A30C", Slot = "6")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x1129A98", Offset = "0x1129A98", VA = "0x1129A98")]
		private void FillMenuInfo()
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x112A350", Offset = "0x112A350", VA = "0x112A350")]
		private void CreateSpawnPointButtons(string sceneName)
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x112A37C", Offset = "0x112A37C", VA = "0x112A37C")]
		private void AddSpawnPointButtons(string sceneName)
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x1129F3C", Offset = "0x1129F3C", VA = "0x1129F3C")]
		private void CleanSceneButtons()
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x112A124", Offset = "0x112A124", VA = "0x112A124")]
		public void CleanSpawnPointButtons()
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x112A6E4", Offset = "0x112A6E4", VA = "0x112A6E4")]
		public MT_CharacterSpawnMenu()
		{
		}
	}
	[Token(Token = "0x200050E")]
	public class MT_DebugGizmosMenu : MonoBehaviour, IDebugMenu
	{
		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject toolPrefab;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_UIButton pointerToggle;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MT_UIButton matAndTexToggle;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_UIButton physicToggle;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MT_UIButton navMeshToggle;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MT_UIButton wayPointsToggle;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MT_UIButton LeftHandToggle;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MT_UIButton RightHandToggle;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MT_UIButton centerOfMassToggle;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject pointerToggleImage;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject matAndTexToggleImage;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject physicToggleImage;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject navMeshToggleImage;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject wayPointsToggleImage;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject LeftHandToggleImage;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject RightHandToggleImage;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject centerOfMassImage;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _enablePointer;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool _enableMatAndTex;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		private bool _enablePhysic;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		private bool _enableNavMesh;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _enableWayPoints;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		private bool _enableCenter;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject _toolInstance;

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x1130B98", Offset = "0x1130B98", VA = "0x1130B98", Slot = "4")]
		public void SetUpMenu()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x1130F6C", Offset = "0x1130F6C", VA = "0x1130F6C", Slot = "5")]
		public void CloseMenu()
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x11310C0", Offset = "0x11310C0", VA = "0x11310C0", Slot = "6")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x1130CA0", Offset = "0x1130CA0", VA = "0x1130CA0")]
		private void FillMenuInfo()
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x1131104", Offset = "0x1131104", VA = "0x1131104")]
		private void ToggleCenter()
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0x1131188", Offset = "0x1131188", VA = "0x1131188")]
		private void TogglePointer()
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0x1131220", Offset = "0x1131220", VA = "0x1131220")]
		private void ToggleMatAndTex()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x11312C4", Offset = "0x11312C4", VA = "0x11312C4")]
		private void TogglePhysic()
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x1131364", Offset = "0x1131364", VA = "0x1131364")]
		private void ToggleWayPoints()
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x11313F0", Offset = "0x11313F0", VA = "0x11313F0")]
		private void ToggleNavMesh()
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x1131478", Offset = "0x1131478", VA = "0x1131478")]
		private void LeftHand()
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x1131518", Offset = "0x1131518", VA = "0x1131518")]
		private void RightHand()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x1130FFC", Offset = "0x1130FFC", VA = "0x1130FFC")]
		private void ResetButtons()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x11315B4", Offset = "0x11315B4", VA = "0x11315B4")]
		public MT_DebugGizmosMenu()
		{
		}
	}
	[Token(Token = "0x200050F")]
	public class MT_DebugLODMenu : MonoBehaviour, IDebugMenu
	{
		[Token(Token = "0x2000510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B540", Offset = "0xE6B540")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x40017E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LODGroup group;

			[Token(Token = "0x40017E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MT_DebugLODMenu <>4__this;

			[Token(Token = "0x6001BA3")]
			[Address(RVA = "0x10363C8", Offset = "0x10363C8", VA = "0x10363C8")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001BA4")]
			[Address(RVA = "0x10363D0", Offset = "0x10363D0", VA = "0x10363D0")]
			internal void <FillMenuInfo>b__0()
			{
			}
		}

		[Token(Token = "0x2000511")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B550", Offset = "0xE6B550")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40017E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_DebugLODMenu <>4__this;

			[Token(Token = "0x40017E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LODGroup group;

			[Token(Token = "0x6001BA5")]
			[Address(RVA = "0x10363F4", Offset = "0x10363F4", VA = "0x10363F4")]
			public <>c__DisplayClass12_0()
			{
			}
		}

		[Token(Token = "0x2000512")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B560", Offset = "0xE6B560")]
		private sealed class <>c__DisplayClass12_1
		{
			[Token(Token = "0x40017E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LOD lod;

			[Token(Token = "0x40017EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass12_0 CS$<>8__locals1;

			[Token(Token = "0x6001BA6")]
			[Address(RVA = "0x10363FC", Offset = "0x10363FC", VA = "0x10363FC")]
			public <>c__DisplayClass12_1()
			{
			}

			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0x1036404", Offset = "0x1036404", VA = "0x1036404")]
			internal void <CreateLODButtons>b__0()
			{
			}
		}

		[Token(Token = "0x2000513")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B570", Offset = "0xE6B570")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x40017EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_DebugLODMenu <>4__this;

			[Token(Token = "0x40017EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LOD lod;

			[Token(Token = "0x40017ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LODGroup group;

			[Token(Token = "0x6001BA8")]
			[Address(RVA = "0x1036438", Offset = "0x1036438", VA = "0x1036438")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6001BA9")]
			[Address(RVA = "0x1036440", Offset = "0x1036440", VA = "0x1036440")]
			internal void <CreatePercentageButtons>b__0()
			{
			}

			[Token(Token = "0x6001BAA")]
			[Address(RVA = "0x1036470", Offset = "0x1036470", VA = "0x1036470")]
			internal void <CreatePercentageButtons>b__1()
			{
			}
		}

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject objectButton;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject lodButton;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject percentageButton;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI objectName;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<LODGroup> _LODObjects;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GameObject> _LODObjectsButtons;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<GameObject> _LODsButtons;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _currentPercentage;

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x11315CC", Offset = "0x11315CC", VA = "0x11315CC", Slot = "4")]
		public void SetUpMenu()
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x1131AF4", Offset = "0x1131AF4", VA = "0x1131AF4", Slot = "5")]
		public void CloseMenu()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x1131F08", Offset = "0x1131F08", VA = "0x1131F08", Slot = "6")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x1131608", Offset = "0x1131608", VA = "0x1131608")]
		private void FillMenuInfo()
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x1131F4C", Offset = "0x1131F4C", VA = "0x1131F4C")]
		private void CreateLODButtons(LODGroup group)
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x1132320", Offset = "0x1132320", VA = "0x1132320")]
		private void CreatePercentageButtons(LOD lod, LODGroup group)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x11324F4", Offset = "0x11324F4", VA = "0x11324F4")]
		private void ChangePercentage(LOD currentLod, LODGroup group, float amount)
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x1131B38", Offset = "0x1131B38", VA = "0x1131B38")]
		private void CleanLODObjectsButtons()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x1131D20", Offset = "0x1131D20", VA = "0x1131D20")]
		private void CleanLODButtons()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x113277C", Offset = "0x113277C", VA = "0x113277C")]
		public MT_DebugLODMenu()
		{
		}
	}
	[Token(Token = "0x2000514")]
	public class MT_DebugMenuManager : MonoBehaviour
	{
		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button prevButton;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button nextButton;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button closeButton;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button pauseMenuButton;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button popupTestButton;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI menuNameText;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject commonElements;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject demoMenu;

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x1133224", Offset = "0x1133224", VA = "0x1133224")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x1133228", Offset = "0x1133228", VA = "0x1133228")]
		private void SetUpDemoMode()
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x1133310", Offset = "0x1133310", VA = "0x1133310")]
		public void OpenCanvas(string menuName)
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x11333C4", Offset = "0x11333C4", VA = "0x11333C4")]
		public void CloseCanvas()
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x1133448", Offset = "0x1133448", VA = "0x1133448")]
		public MT_DebugMenuManager()
		{
		}
	}
	[Token(Token = "0x2000515")]
	public class MT_DebugOptionsMenu : MonoBehaviour, IDebugMenu
	{
		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject pauseEditorButton;

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x1133450", Offset = "0x1133450", VA = "0x1133450", Slot = "4")]
		public void SetUpMenu()
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x11334A8", Offset = "0x11334A8", VA = "0x11334A8", Slot = "5")]
		public void CloseMenu()
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x11334D0", Offset = "0x11334D0", VA = "0x11334D0", Slot = "6")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x1133514", Offset = "0x1133514", VA = "0x1133514")]
		public void PauseEditor()
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x1133518", Offset = "0x1133518", VA = "0x1133518")]
		public MT_DebugOptionsMenu()
		{
		}
	}
	[Token(Token = "0x2000516")]
	public class MT_DebugStats : MonoBehaviour
	{
		[Token(Token = "0x40017F7")]
		private const string TextFieldsLabel = "TextFields";

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_FrameRateBarGraph barGraph;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image backgroundImage;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI framerateText;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI memoryText;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI buildVersionText;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI sceneNameText;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI posText;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI moveEnabledText;

		[Token(Token = "0x4001800")]
		private const int AverageCount = 10;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _avgCountFloat;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly List<float> _averageFps;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string _gameSequence;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly Color _lowMemColor;

		[Token(Token = "0x4001805")]
		private const float BadMemory = 3000f;

		[Token(Token = "0x4001806")]
		private const float WarningMemory = 2000f;

		[Token(Token = "0x4001807")]
		private const long BytesInMb = 1000000L;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _frameRate;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _averageFrames;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _minFrameRateInPeriod;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _maxFrameRateInPeriod;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _deviceMaxRefreshRate;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _notUsingUi;

		[Token(Token = "0x400180E")]
		private const int MaxFrameTimings = 128;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FrameTiming[] _frameTimings;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private long _usedMemory;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private long _systemMemory;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform _mainCamTransform;

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x1133520", Offset = "0x1133520", VA = "0x1133520")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x1133548", Offset = "0x1133548", VA = "0x1133548")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x1133590", Offset = "0x1133590", VA = "0x1133590")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x11336BC", Offset = "0x11336BC", VA = "0x11336BC")]
		private float CalculateTotalFPS()
		{
			return default(float);
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x11337B4", Offset = "0x11337B4", VA = "0x11337B4")]
		private void UpdateFPSText(float fps)
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x1133750", Offset = "0x1133750", VA = "0x1133750")]
		private void UpdateMinMaxFrameRate()
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x1133C58", Offset = "0x1133C58", VA = "0x1133C58")]
		private void UpdateMemoryText()
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x1133830", Offset = "0x1133830", VA = "0x1133830")]
		private void UpdateSceneNameText()
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x11338D4", Offset = "0x11338D4", VA = "0x11338D4")]
		private void UpdatePositionAndHeadingText()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x1133DD4", Offset = "0x1133DD4", VA = "0x1133DD4")]
		private void UpdateMoveEnabledText()
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x1133E3C", Offset = "0x1133E3C", VA = "0x1133E3C")]
		private void OnLowMemory()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x1133EDC", Offset = "0x1133EDC", VA = "0x1133EDC")]
		public void SetNotUsingUi()
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x1133EE8", Offset = "0x1133EE8", VA = "0x1133EE8")]
		public float GetAverageFrameRate()
		{
			return default(float);
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x1133EF0", Offset = "0x1133EF0", VA = "0x1133EF0")]
		public float GetMinFrameRateSinceLastChecked()
		{
			return default(float);
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x1133EFC", Offset = "0x1133EFC", VA = "0x1133EFC")]
		public float GetMaxFrameRateSinceLastChecked()
		{
			return default(float);
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x1133F08", Offset = "0x1133F08", VA = "0x1133F08")]
		public string GetHeading()
		{
			return null;
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x1133FD8", Offset = "0x1133FD8", VA = "0x1133FD8")]
		public long GetMemoryUsed()
		{
			return default(long);
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x1133FE0", Offset = "0x1133FE0", VA = "0x1133FE0")]
		public MT_DebugStats()
		{
		}
	}
	[Token(Token = "0x2000517")]
	public class MT_DebugViewsMenu : MonoBehaviour, IDebugMenu
	{
		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_UIButton noneButton;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_UIButton shadedWireframeButton;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MT_UIButton overdrawButton;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_UIButton uV0CheckerButton;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MT_UIButton uV1CheckerButton;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MT_UIButton shadowCascadesButton;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MT_UIButton vertexColorRButton;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MT_UIButton vertexColorGButton;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MT_UIButton vertexColorBButton;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MT_UIButton vertexColorAButton;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MT_UIButton vertexColorRGBButton;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MT_UIButton worldNormalsButton;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private MT_UIButton worldTangentsButton;

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x11341F8", Offset = "0x11341F8", VA = "0x11341F8", Slot = "4")]
		public void SetUpMenu()
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x1134224", Offset = "0x1134224", VA = "0x1134224", Slot = "5")]
		public void CloseMenu()
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x11343B4", Offset = "0x11343B4", VA = "0x11343B4", Slot = "6")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x1134220", Offset = "0x1134220", VA = "0x1134220")]
		private void FillMenuInfo()
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x1134260", Offset = "0x1134260", VA = "0x1134260")]
		private void ResetButtons()
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x11343F8", Offset = "0x11343F8", VA = "0x11343F8")]
		public MT_DebugViewsMenu()
		{
		}
	}
	[Token(Token = "0x2000518")]
	public class MT_DemoDebugMenu : MonoBehaviour, IDebugMenu
	{
		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_UIButton returnToMainMenuButton;

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x11348F4", Offset = "0x11348F4", VA = "0x11348F4", Slot = "4")]
		public void SetUpMenu()
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x11349AC", Offset = "0x11349AC", VA = "0x11349AC", Slot = "5")]
		public void CloseMenu()
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x1134A10", Offset = "0x1134A10", VA = "0x1134A10", Slot = "6")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x1134A54", Offset = "0x1134A54", VA = "0x1134A54")]
		private void RestartGame()
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x11349E8", Offset = "0x11349E8", VA = "0x11349E8")]
		private void ResetButtons()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x1134ABC", Offset = "0x1134ABC", VA = "0x1134ABC")]
		public MT_DemoDebugMenu()
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class MT_FrameRateBarGraph : MonoBehaviour
	{
		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform parentRect;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color _green;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color _red;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color _yellow;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color _orange;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly List<RectTransform> _barRects;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly List<Image> _barImages;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _fpsPercentage;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _percentageHeight;

		[Token(Token = "0x400182A")]
		private const float Alpha = 0.75f;

		[Token(Token = "0x17000307")]
		public Color Green
		{
			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0x15C038C", Offset = "0x15C038C", VA = "0x15C038C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000308")]
		public Color Red
		{
			[Token(Token = "0x6001BD4")]
			[Address(RVA = "0x15C0398", Offset = "0x15C0398", VA = "0x15C0398")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000309")]
		public Color Yellow
		{
			[Token(Token = "0x6001BD5")]
			[Address(RVA = "0x15C03A4", Offset = "0x15C03A4", VA = "0x15C03A4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x15C03B0", Offset = "0x15C03B0", VA = "0x15C03B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x15C0704", Offset = "0x15C0704", VA = "0x15C0704")]
		public void UpdateBars(float fps)
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x15C098C", Offset = "0x15C098C", VA = "0x15C098C")]
		public void SetColors(float fps, Graphic bar)
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x15C0A3C", Offset = "0x15C0A3C", VA = "0x15C0A3C")]
		public MT_FrameRateBarGraph()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public class MT_MainMenuDemoSceneSelection : MonoBehaviour, IDebugMenu
	{
		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string menuName;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScenePaletteConfig paletteConfig;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject buttonPrefab;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform sectionParent;

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x10ECB4C", Offset = "0x10ECB4C", VA = "0x10ECB4C", Slot = "6")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x10ECB54", Offset = "0x10ECB54", VA = "0x10ECB54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x10ECDB8", Offset = "0x10ECDB8", VA = "0x10ECDB8", Slot = "4")]
		public void SetUpMenu()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x10ECDE0", Offset = "0x10ECDE0", VA = "0x10ECDE0", Slot = "5")]
		public void CloseMenu()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x10ECBB0", Offset = "0x10ECBB0", VA = "0x10ECBB0")]
		private void AddSubSectionButtons(PaletteSubSection subSection, Transform sectionParent)
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x10ECE08", Offset = "0x10ECE08", VA = "0x10ECE08")]
		public MT_MainMenuDemoSceneSelection()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class MT_MainMenuSceneSelection : MonoBehaviour, IDebugMenu
	{
		[Token(Token = "0x200051C")]
		private enum SceneType
		{
			[Token(Token = "0x4001835")]
			Region = 0,
			[Token(Token = "0x4001836")]
			Location = 1,
			[Token(Token = "0x4001837")]
			Gym = 2,
			[Token(Token = "0x4001838")]
			MainMenu = 3,
			[Token(Token = "0x4001839")]
			None = 99
		}

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string menuName;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SceneType sceneType;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScenePaletteConfig paletteConfig;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject buttonPrefab;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform[] sectionParents;

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x10ECE10", Offset = "0x10ECE10", VA = "0x10ECE10", Slot = "6")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x10ECE18", Offset = "0x10ECE18", VA = "0x10ECE18")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x10ED23C", Offset = "0x10ED23C", VA = "0x10ED23C", Slot = "4")]
		public void SetUpMenu()
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x10ED264", Offset = "0x10ED264", VA = "0x10ED264", Slot = "5")]
		public void CloseMenu()
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x10ECFE4", Offset = "0x10ECFE4", VA = "0x10ECFE4")]
		private void AddSubSectionButtons(PaletteSubSection subSection, Transform sectionParent)
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x10ED28C", Offset = "0x10ED28C", VA = "0x10ED28C")]
		public MT_MainMenuSceneSelection()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public class MT_OptionsManager : IGameModule
	{
		[Token(Token = "0x200051E")]
		public enum VignetteSize
		{
			[Token(Token = "0x4001861")]
			Small = 90,
			[Token(Token = "0x4001862")]
			Medium = 100,
			[Token(Token = "0x4001863")]
			Large = 110
		}

		[Serializable]
		[Token(Token = "0x200051F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B580", Offset = "0xE6B580")]
		private sealed class <>c
		{
			[Token(Token = "0x4001864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__96_0;

			[Token(Token = "0x6001C75")]
			[Address(RVA = "0x103DFC4", Offset = "0x103DFC4", VA = "0x103DFC4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C76")]
			[Address(RVA = "0x103DFCC", Offset = "0x103DFCC", VA = "0x103DFCC")]
			internal bool <WaitAndLoad>b__96_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B590", Offset = "0xE6B590")]
		private sealed class <WaitAndLoad>d__96 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001867")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700031B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C7A")]
				[Address(RVA = "0x103E344", Offset = "0x103E344", VA = "0x103E344", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C7C")]
				[Address(RVA = "0x103E38C", Offset = "0x103E38C", VA = "0x103E38C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C77")]
			[Address(RVA = "0x103E068", Offset = "0x103E068", VA = "0x103E068")]
			[DebuggerHidden]
			public <WaitAndLoad>d__96(int <>1__state)
			{
			}

			[Token(Token = "0x6001C78")]
			[Address(RVA = "0x103E094", Offset = "0x103E094", VA = "0x103E094", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C79")]
			[Address(RVA = "0x103E098", Offset = "0x103E098", VA = "0x103E098", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0x103E34C", Offset = "0x103E34C", VA = "0x103E34C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GenericSaveData _optionsData;

		[Token(Token = "0x400183B")]
		private const int Debug_SaveGameIndexWithData = 1;

		[Token(Token = "0x400183C")]
		private const float VignetteSizePercentageMedium = 1f;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MovementType _movementTypeTemp;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static RotationType _rotationTypeTemp;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float _snapTurnAngleTemp;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static float _smoothTurnSpeedTemp;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float _movementSpeedTemp;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static float _runSpeedTemp;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static HeightAdjustmentType _heightAdjustmentTypeTemp;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static bool _hasSubtitlesTemp;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private static bool _vibrationTemp;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		private static bool _hasVignetteTemp;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static VignetteSize _vignetteSizeTemp;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static float _musicVolumeTemp;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static float _masterVolumeTemp;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static float _effectsVolumeTemp;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static int _languageTemp;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static bool _aimAssistTemp;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static float _thresholdVolumeTemp;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private static float _voiceMicThresholdLevel;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE83720", Offset = "0xE83720")]
		private static MovementType <_movementTypeInit>k__BackingField;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE83730", Offset = "0xE83730")]
		private static RotationType <_rotationTypeInit>k__BackingField;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE83740", Offset = "0xE83740")]
		private static float <_snapTurnAngleInit>k__BackingField;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE83750", Offset = "0xE83750")]
		private static float <_smoothTurnSpeedInit>k__BackingField;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE83760", Offset = "0xE83760")]
		private static float <_movementSpeedInit>k__BackingField;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE83770", Offset = "0xE83770")]
		private static float <_runSpeedInit>k__BackingField;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE83780", Offset = "0xE83780")]
		private static HeightAdjustmentType <_heightAdjustmentTypeInit>k__BackingField;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE83790", Offset = "0xE83790")]
		private static HeightAdjustmentType <_heightAdjustmentTypeSaved>k__BackingField;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE837A0", Offset = "0xE837A0")]
		private static bool <_hasSubtitlesInit>k__BackingField;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE837B0", Offset = "0xE837B0")]
		private static bool <_vibrationInit>k__BackingField;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE837C0", Offset = "0xE837C0")]
		private static bool <_hasVignetteInit>k__BackingField;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE837D0", Offset = "0xE837D0")]
		private static VignetteSize <_vignetteSizeInit>k__BackingField;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE837E0", Offset = "0xE837E0")]
		private static float <_musicVolumeInit>k__BackingField;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE837F0", Offset = "0xE837F0")]
		private static float <_masterVolumeInit>k__BackingField;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE83800", Offset = "0xE83800")]
		private static float <_effectsVolumeInit>k__BackingField;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE83810", Offset = "0xE83810")]
		private static int <_languageInit>k__BackingField;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE83820", Offset = "0xE83820")]
		private static bool <_hasAimAssistInit>k__BackingField;

		[Token(Token = "0x1700030A")]
		public static MovementType _movementTypeInit
		{
			[Token(Token = "0x6001BE6")]
			[Address(RVA = "0x10FE37C", Offset = "0x10FE37C", VA = "0x10FE37C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE927D4", Offset = "0xE927D4")]
			get
			{
				return default(MovementType);
			}
			[Token(Token = "0x6001BE7")]
			[Address(RVA = "0x10FE3E0", Offset = "0x10FE3E0", VA = "0x10FE3E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE927E4", Offset = "0xE927E4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030B")]
		public static RotationType _rotationTypeInit
		{
			[Token(Token = "0x6001BE8")]
			[Address(RVA = "0x10FE448", Offset = "0x10FE448", VA = "0x10FE448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE927F4", Offset = "0xE927F4")]
			get
			{
				return default(RotationType);
			}
			[Token(Token = "0x6001BE9")]
			[Address(RVA = "0x10FE4AC", Offset = "0x10FE4AC", VA = "0x10FE4AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92804", Offset = "0xE92804")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030C")]
		public static float _snapTurnAngleInit
		{
			[Token(Token = "0x6001BEA")]
			[Address(RVA = "0x10FE514", Offset = "0x10FE514", VA = "0x10FE514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92814", Offset = "0xE92814")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BEB")]
			[Address(RVA = "0x10FE578", Offset = "0x10FE578", VA = "0x10FE578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92824", Offset = "0xE92824")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		public static float _smoothTurnSpeedInit
		{
			[Token(Token = "0x6001BEC")]
			[Address(RVA = "0x10FE5E8", Offset = "0x10FE5E8", VA = "0x10FE5E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92834", Offset = "0xE92834")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BED")]
			[Address(RVA = "0x10FE64C", Offset = "0x10FE64C", VA = "0x10FE64C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92844", Offset = "0xE92844")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public static float _movementSpeedInit
		{
			[Token(Token = "0x6001BEE")]
			[Address(RVA = "0x10FE6BC", Offset = "0x10FE6BC", VA = "0x10FE6BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92854", Offset = "0xE92854")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BEF")]
			[Address(RVA = "0x10FE720", Offset = "0x10FE720", VA = "0x10FE720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92864", Offset = "0xE92864")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030F")]
		public static float _runSpeedInit
		{
			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0x10FE790", Offset = "0x10FE790", VA = "0x10FE790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92874", Offset = "0xE92874")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0x10FE7F4", Offset = "0x10FE7F4", VA = "0x10FE7F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92884", Offset = "0xE92884")]
			private set
			{
			}
		}

		[Token(Token = "0x17000310")]
		public static HeightAdjustmentType _heightAdjustmentTypeInit
		{
			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0x10FE864", Offset = "0x10FE864", VA = "0x10FE864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92894", Offset = "0xE92894")]
			get
			{
				return default(HeightAdjustmentType);
			}
			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0x10FE8C8", Offset = "0x10FE8C8", VA = "0x10FE8C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE928A4", Offset = "0xE928A4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000311")]
		public static HeightAdjustmentType _heightAdjustmentTypeSaved
		{
			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0x10FE930", Offset = "0x10FE930", VA = "0x10FE930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE928B4", Offset = "0xE928B4")]
			get
			{
				return default(HeightAdjustmentType);
			}
			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0x10FE994", Offset = "0x10FE994", VA = "0x10FE994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE928C4", Offset = "0xE928C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000312")]
		public static bool _hasSubtitlesInit
		{
			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0x10FE9FC", Offset = "0x10FE9FC", VA = "0x10FE9FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE928D4", Offset = "0xE928D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0x10FEA60", Offset = "0x10FEA60", VA = "0x10FEA60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE928E4", Offset = "0xE928E4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000313")]
		public static bool _vibrationInit
		{
			[Token(Token = "0x6001BF8")]
			[Address(RVA = "0x10FEACC", Offset = "0x10FEACC", VA = "0x10FEACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE928F4", Offset = "0xE928F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BF9")]
			[Address(RVA = "0x10FEB30", Offset = "0x10FEB30", VA = "0x10FEB30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92904", Offset = "0xE92904")]
			private set
			{
			}
		}

		[Token(Token = "0x17000314")]
		public static bool _hasVignetteInit
		{
			[Token(Token = "0x6001BFA")]
			[Address(RVA = "0x10FEB9C", Offset = "0x10FEB9C", VA = "0x10FEB9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92914", Offset = "0xE92914")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0x10FEC00", Offset = "0x10FEC00", VA = "0x10FEC00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92924", Offset = "0xE92924")]
			private set
			{
			}
		}

		[Token(Token = "0x17000315")]
		public static VignetteSize _vignetteSizeInit
		{
			[Token(Token = "0x6001BFC")]
			[Address(RVA = "0x10FEC6C", Offset = "0x10FEC6C", VA = "0x10FEC6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92934", Offset = "0xE92934")]
			get
			{
				return default(VignetteSize);
			}
			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0x10FECD0", Offset = "0x10FECD0", VA = "0x10FECD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92944", Offset = "0xE92944")]
			private set
			{
			}
		}

		[Token(Token = "0x17000316")]
		public static float _musicVolumeInit
		{
			[Token(Token = "0x6001BFE")]
			[Address(RVA = "0x10FED38", Offset = "0x10FED38", VA = "0x10FED38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92954", Offset = "0xE92954")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0x10FED9C", Offset = "0x10FED9C", VA = "0x10FED9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92964", Offset = "0xE92964")]
			private set
			{
			}
		}

		[Token(Token = "0x17000317")]
		public static float _masterVolumeInit
		{
			[Token(Token = "0x6001C00")]
			[Address(RVA = "0x10FEE0C", Offset = "0x10FEE0C", VA = "0x10FEE0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92974", Offset = "0xE92974")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C01")]
			[Address(RVA = "0x10FEE70", Offset = "0x10FEE70", VA = "0x10FEE70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92984", Offset = "0xE92984")]
			private set
			{
			}
		}

		[Token(Token = "0x17000318")]
		public static float _effectsVolumeInit
		{
			[Token(Token = "0x6001C02")]
			[Address(RVA = "0x10FEEE0", Offset = "0x10FEEE0", VA = "0x10FEEE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92994", Offset = "0xE92994")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C03")]
			[Address(RVA = "0x10FEF44", Offset = "0x10FEF44", VA = "0x10FEF44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE929A4", Offset = "0xE929A4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000319")]
		public static int _languageInit
		{
			[Token(Token = "0x6001C04")]
			[Address(RVA = "0x10FEFB4", Offset = "0x10FEFB4", VA = "0x10FEFB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE929B4", Offset = "0xE929B4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C05")]
			[Address(RVA = "0x10FF018", Offset = "0x10FF018", VA = "0x10FF018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE929C4", Offset = "0xE929C4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700031A")]
		public static bool _hasAimAssistInit
		{
			[Token(Token = "0x6001C06")]
			[Address(RVA = "0x10FF080", Offset = "0x10FF080", VA = "0x10FF080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE929D4", Offset = "0xE929D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C07")]
			[Address(RVA = "0x10FF0E4", Offset = "0x10FF0E4", VA = "0x10FF0E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE929E4", Offset = "0xE929E4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x10F2400", Offset = "0x10F2400", VA = "0x10F2400", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x10FF2C0", Offset = "0x10FF2C0", VA = "0x10FF2C0")]
		private void InitialLoader()
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x10FF344", Offset = "0x10FF344", VA = "0x10FF344")]
		private void StoreOriginalOptionsValues()
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x1100164", Offset = "0x1100164", VA = "0x1100164")]
		public static GenericSaveData GetOptionsData()
		{
			return null;
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x11001CC", Offset = "0x11001CC", VA = "0x11001CC")]
		private static void ApplyAllToOptionsData()
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x10FF23C", Offset = "0x10FF23C", VA = "0x10FF23C")]
		private void LoadSavedOptions()
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x1101488", Offset = "0x1101488", VA = "0x1101488")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE929F4", Offset = "0xE929F4")]
		private IEnumerator WaitAndLoad()
		{
			return null;
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x10FF3D4", Offset = "0x10FF3D4", VA = "0x10FF3D4")]
		public static void StoreOriginalMovementType()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x11014E4", Offset = "0x11014E4", VA = "0x11014E4")]
		private static void LoadSavedMovementType()
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x1100274", Offset = "0x1100274", VA = "0x1100274")]
		public static void ApplyMovementTypeToOptionsData()
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x1101660", Offset = "0x1101660", VA = "0x1101660")]
		public static void SetMovementTypeTemp(MovementType movementType)
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x11016C8", Offset = "0x11016C8", VA = "0x11016C8")]
		public static MovementType GetMovementTypeTemp()
		{
			return default(MovementType);
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x10FA1A8", Offset = "0x10FA1A8", VA = "0x10FA1A8")]
		public static void SetMovementTypeSetting()
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x10FF4E8", Offset = "0x10FF4E8", VA = "0x10FF4E8")]
		private static void StoreOriginalTurnType()
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x110172C", Offset = "0x110172C", VA = "0x110172C")]
		private static void LoadSavedSnapTurn()
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x11003AC", Offset = "0x11003AC", VA = "0x11003AC")]
		public static void ApplyIsSnapTurnSettingToOptionsData()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x11018A8", Offset = "0x11018A8", VA = "0x11018A8")]
		public static void SetIsSnapTurnTemp(RotationType rotationType)
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x1101910", Offset = "0x1101910", VA = "0x1101910")]
		public static RotationType GetIsSnapTurnTemp()
		{
			return default(RotationType);
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x10FA320", Offset = "0x10FA320", VA = "0x10FA320")]
		public static void SetIsSnapTurnSetting()
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x10FF5A8", Offset = "0x10FF5A8", VA = "0x10FF5A8")]
		private static void StoreOriginalSnapTurnAngle()
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x1101974", Offset = "0x1101974", VA = "0x1101974")]
		private static void LoadSavedSnapTurnAngle()
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x11004A8", Offset = "0x11004A8", VA = "0x11004A8")]
		public static void ApplySnapTurnAngleSettingToOptionsData()
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x1101BF0", Offset = "0x1101BF0", VA = "0x1101BF0")]
		public static void SetSnapTurnAngleTemp(float value)
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x1101C60", Offset = "0x1101C60", VA = "0x1101C60")]
		public static float GetSnapTurnAngleTemp()
		{
			return default(float);
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x1101AF0", Offset = "0x1101AF0", VA = "0x1101AF0")]
		public static void SetSnapTurnAngleSetting()
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x10FF668", Offset = "0x10FF668", VA = "0x10FF668")]
		private static void StoreOriginalSmoothTurnSpeed()
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x1101CC4", Offset = "0x1101CC4", VA = "0x1101CC4")]
		private static void LoadSavedSmoothTurnSpeed()
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x11005A4", Offset = "0x11005A4", VA = "0x11005A4")]
		public static void ApplySmoothTurnSpeedSettingToOptionsData()
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x1101F40", Offset = "0x1101F40", VA = "0x1101F40")]
		public static void SetSmoothTurnSpeedTemp(float value)
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x1101FB0", Offset = "0x1101FB0", VA = "0x1101FB0")]
		public static float GetSmoothTurnSpeedTemp()
		{
			return default(float);
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x1101E40", Offset = "0x1101E40", VA = "0x1101E40")]
		public static void SetSmoothTurnSpeedSetting()
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x10FF728", Offset = "0x10FF728", VA = "0x10FF728")]
		public static void StoreOriginalWalkSpeed()
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x1102014", Offset = "0x1102014", VA = "0x1102014")]
		private static void LoadSavedMovementSpeed()
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x11006A0", Offset = "0x11006A0", VA = "0x11006A0")]
		public static void ApplyMovementSpeedSettingToOptionsData()
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x1102304", Offset = "0x1102304", VA = "0x1102304")]
		public static void SetMovementSpeedTemp(float value)
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x1102374", Offset = "0x1102374", VA = "0x1102374")]
		public static float GetMovementSpeedTemp()
		{
			return default(float);
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x1102190", Offset = "0x1102190", VA = "0x1102190")]
		public static void SetMovementSpeedSetting()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x10FF808", Offset = "0x10FF808", VA = "0x10FF808")]
		public void StoreOriginalRunSpeed()
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x11023D8", Offset = "0x11023D8", VA = "0x11023D8")]
		private static void LoadSavedRunSpeed()
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x11007C4", Offset = "0x11007C4", VA = "0x11007C4")]
		public static void ApplyRunSpeedSettingToOptionsData()
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x11026C8", Offset = "0x11026C8", VA = "0x11026C8")]
		public static void SetRunSpeedTemp(float value)
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x1102738", Offset = "0x1102738", VA = "0x1102738")]
		public static float GetRunSpeedTemp()
		{
			return default(float);
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x1102554", Offset = "0x1102554", VA = "0x1102554")]
		public static void SetRunSpeedSetting()
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x10FF8E8", Offset = "0x10FF8E8", VA = "0x10FF8E8")]
		public static void StoreOriginalHeightAdjustmentType()
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x110279C", Offset = "0x110279C", VA = "0x110279C")]
		private static void LoadSavedHeightAdjustment()
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x11008E8", Offset = "0x11008E8", VA = "0x11008E8")]
		public static void ApplyHeightAdjustmentSettingToOptionsData()
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x110295C", Offset = "0x110295C", VA = "0x110295C")]
		public static void SetHeightAdjustmentTemp(HeightAdjustmentType heightAdjustmentType)
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x11029C4", Offset = "0x11029C4", VA = "0x11029C4")]
		public static void SetHeightAdjustmentTempToSaved()
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x1102A64", Offset = "0x1102A64", VA = "0x1102A64")]
		public static HeightAdjustmentType GetHeightAdjustmentTemp()
		{
			return default(HeightAdjustmentType);
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x10FA420", Offset = "0x10FA420", VA = "0x10FA420")]
		public static void SetHeightAdjustmentSetting()
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x10FF9A8", Offset = "0x10FF9A8", VA = "0x10FF9A8")]
		public static void StoreOriginalSubtitlesSetting()
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x1102AC8", Offset = "0x1102AC8", VA = "0x1102AC8")]
		private static void LoadSavedHasSubtitles()
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x1100A0C", Offset = "0x1100A0C", VA = "0x1100A0C")]
		public static void ApplyHasSubtitlesSettingToOptionsData()
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x1102C4C", Offset = "0x1102C4C", VA = "0x1102C4C")]
		public static void SetHasSubtitlesTemp(bool isEnabled)
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x1102CB8", Offset = "0x1102CB8", VA = "0x1102CB8")]
		public static bool GetHasSubtitlesTemp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x10FA554", Offset = "0x10FA554", VA = "0x10FA554")]
		public static void SetHasSubtitlesSetting()
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x10FF150", Offset = "0x10FF150", VA = "0x10FF150")]
		public static void LanguageInitialize()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x1102D1C", Offset = "0x1102D1C", VA = "0x1102D1C")]
		public static void StoreOriginalLanguageSetting()
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x1102E48", Offset = "0x1102E48", VA = "0x1102E48")]
		private static void LoadSavedLanguage()
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x1103144", Offset = "0x1103144", VA = "0x1103144")]
		public static void SetLanguageTemp(int value)
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x1100B50", Offset = "0x1100B50", VA = "0x1100B50")]
		public static void ApplyLanguageSettingToOptionsData()
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x1103028", Offset = "0x1103028", VA = "0x1103028")]
		public static void SetLanguageSetting(int index)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x10FFAAC", Offset = "0x10FFAAC", VA = "0x10FFAAC")]
		public static void StoreOriginalVibration()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x11031AC", Offset = "0x11031AC", VA = "0x11031AC")]
		private static void LoadSavedVibration()
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x1100C74", Offset = "0x1100C74", VA = "0x1100C74")]
		public static void ApplyVibrationSettingToOptionsData()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x1103458", Offset = "0x1103458", VA = "0x1103458")]
		public static void SetVibrationTemp(bool value)
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x11034C4", Offset = "0x11034C4", VA = "0x11034C4")]
		public static bool GetVibrationTemp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x1103330", Offset = "0x1103330", VA = "0x1103330")]
		public static void SetVibrationSetting()
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x10FFB8C", Offset = "0x10FFB8C", VA = "0x10FFB8C")]
		public static void StoreOriginalVignette()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x1103528", Offset = "0x1103528", VA = "0x1103528")]
		public static void LoadSavedHasVignette()
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x1100D94", Offset = "0x1100D94", VA = "0x1100D94")]
		public static void ApplyHasVignetteSettingToOptionsData()
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x11037B8", Offset = "0x11037B8", VA = "0x11037B8")]
		public static void SetHasVignetteTemp(bool value)
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x1103824", Offset = "0x1103824", VA = "0x1103824")]
		public static bool GetHasVignetteTemp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x11036AC", Offset = "0x11036AC", VA = "0x11036AC")]
		public static void SetHasVignetteSetting()
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x10FFC5C", Offset = "0x10FFC5C", VA = "0x10FFC5C")]
		public static void StoreOriginalVignetteSize()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x1103908", Offset = "0x1103908", VA = "0x1103908")]
		private static void LoadSavedHasVignetteSize()
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x1103888", Offset = "0x1103888", VA = "0x1103888")]
		private static VignetteSize GetVignetteSizeFromFloat(float amount)
		{
			return default(VignetteSize);
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x1100EA0", Offset = "0x1100EA0", VA = "0x1100EA0")]
		public static void ApplyVignetteSizeSettingToOptionsData()
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x1103BA0", Offset = "0x1103BA0", VA = "0x1103BA0")]
		public static void SetVignetteSizeTemp(VignetteSize vignetteSize)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x1103C08", Offset = "0x1103C08", VA = "0x1103C08")]
		public static VignetteSize GetVignetteSizeTemp()
		{
			return default(VignetteSize);
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x1103A84", Offset = "0x1103A84", VA = "0x1103A84")]
		public static void SetVignetteSizeSetting()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x10FFD38", Offset = "0x10FFD38", VA = "0x10FFD38")]
		public static void StoreOriginalAudioVolumes()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x1103C6C", Offset = "0x1103C6C", VA = "0x1103C6C")]
		private static void LoadSavedAudioVolume(AudioVolumeType type)
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x1100FB4", Offset = "0x1100FB4", VA = "0x1100FB4")]
		public static void ApplyAudioVolumeSettingToOptionsData(AudioVolumeType type)
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x1103E38", Offset = "0x1103E38", VA = "0x1103E38")]
		public static void SetAudioVolumeTemp(AudioVolumeType type, float value)
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x1104200", Offset = "0x1104200", VA = "0x1104200")]
		public static float GetAudioVolumeTemp(AudioVolumeType type)
		{
			return default(float);
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x1103EA8", Offset = "0x1103EA8", VA = "0x1103EA8")]
		public static void SetAudioVolumeSetting(AudioVolumeType type)
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x11040AC", Offset = "0x11040AC", VA = "0x11040AC")]
		private static void SetVolumeTemp(AudioVolumeType type, float value)
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x10FFEE4", Offset = "0x10FFEE4", VA = "0x10FFEE4")]
		public static void StoreOriginalAimAssistSetting()
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x1104354", Offset = "0x1104354", VA = "0x1104354")]
		private static void LoadSavedHasAimAssist()
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x1101144", Offset = "0x1101144", VA = "0x1101144")]
		public static void ApplyHasAimAssistSettingToOptionsData()
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x1104634", Offset = "0x1104634", VA = "0x1104634")]
		public static void SetHasAimAssistTemp(bool isEnabled)
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x11046A0", Offset = "0x11046A0", VA = "0x11046A0")]
		public static bool GetHasAimAssistTemp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x11044D8", Offset = "0x11044D8", VA = "0x11044D8")]
		public static void SetHasAimAssistSetting()
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x1104704", Offset = "0x1104704", VA = "0x1104704")]
		public static void LoadMicThresholdLevelSettings()
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x11048C4", Offset = "0x11048C4", VA = "0x11048C4")]
		public static void ApplyMicThresholdLevel()
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x1104844", Offset = "0x1104844", VA = "0x1104844")]
		public static void SetMicThresholdLevel(float value)
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x1101268", Offset = "0x1101268", VA = "0x1101268")]
		public static void ApplyMicThresholdLevelToOptionData()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x1100094", Offset = "0x1100094", VA = "0x1100094")]
		private static void StoreOriginalThresholdLevel()
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x11049D4", Offset = "0x11049D4", VA = "0x11049D4")]
		public static void LoadVoiceVolumeSettings()
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x1104B94", Offset = "0x1104B94", VA = "0x1104B94")]
		public static void ApplyVoiceVolume()
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x1104B14", Offset = "0x1104B14", VA = "0x1104B14")]
		public static void SetVoiceVolume(float value)
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x1101378", Offset = "0x1101378", VA = "0x1101378")]
		public static void ApplyVoiceVolumeToOptionData()
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x10FFFC8", Offset = "0x10FFFC8", VA = "0x10FFFC8")]
		private static void StoreOriginalVoiceVolume()
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x1104CA4", Offset = "0x1104CA4", VA = "0x1104CA4", Slot = "5")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x10F2804", Offset = "0x10F2804", VA = "0x10F2804")]
		public MT_OptionsManager()
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x1104D44", Offset = "0x1104D44", VA = "0x1104D44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92A54", Offset = "0xE92A54")]
		private void <LoadSavedOptions>b__95_0()
		{
		}
	}
	[Token(Token = "0x2000521")]
	public class MT_PercentageButtonDebug : MonoBehaviour
	{
		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MT_UIButton upButton;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_UIButton downButton;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI percentageText;

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x1325554", Offset = "0x1325554", VA = "0x1325554")]
		public MT_PercentageButtonDebug()
		{
		}
	}
	[Token(Token = "0x2000522")]
	public class MT_PlayerAccessibilityMenu : MonoBehaviour, IDebugMenu
	{
		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_UIButton grabTypeToggle;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE83840", Offset = "0xE83840")]
		[SerializeField]
		private TextMeshProUGUI grabType;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE83878", Offset = "0xE83878")]
		[SerializeField]
		private GameObject grabTypeToggleImage;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_UIButton cooldownToggle;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE838C0", Offset = "0xE838C0")]
		[SerializeField]
		private TextMeshProUGUI cooldown;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE838F8", Offset = "0xE838F8")]
		[SerializeField]
		private GameObject cooldownToggleImage;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MT_UIButton colourBlindToggle;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE83940", Offset = "0xE83940")]
		[SerializeField]
		private TextMeshProUGUI colourBlind;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE83978", Offset = "0xE83978")]
		[SerializeField]
		private GameObject colourBlindToggleImage;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MT_UIButton increaseSubtitleSize;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MT_UIButton decreaseSubtitleSize;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMeshProUGUI currentSubtitleSize;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private MT_UIButton increaseHapticsMult;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private MT_UIButton decreaseHapticsMult;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TextMeshProUGUI currentHapticsMult;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private MT_UIButton increaseBrightness;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private MT_UIButton decreaseBrightness;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TextMeshProUGUI currentBrightness;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private MT_UIButton increaseContrast;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private MT_UIButton decreaseContrast;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TextMeshProUGUI currentContrast;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _triggerToGrabRelease;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _cooldownEnabled;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private static bool _switchInputs;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		private static bool _coloudBlindEnabled;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool setupMenu;

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x132B94C", Offset = "0x132B94C", VA = "0x132B94C", Slot = "4")]
		public void SetUpMenu()
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x132BEF0", Offset = "0x132BEF0", VA = "0x132BEF0", Slot = "5")]
		public void CloseMenu()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x132C0D8", Offset = "0x132C0D8", VA = "0x132C0D8", Slot = "6")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x132B988", Offset = "0x132B988", VA = "0x132B988")]
		private void FillMenuInfo()
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x132C11C", Offset = "0x132C11C", VA = "0x132C11C")]
		private void ToggleGrabType()
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x132C238", Offset = "0x132C238", VA = "0x132C238")]
		private void Cooldown()
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x132C33C", Offset = "0x132C33C", VA = "0x132C33C")]
		private void Colourblind()
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x132C488", Offset = "0x132C488", VA = "0x132C488")]
		private void ChangeSubtitleSize(float amount = 0f)
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x132C564", Offset = "0x132C564", VA = "0x132C564")]
		private void ChangeHapticsMult(float amount = 0f)
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x132C640", Offset = "0x132C640", VA = "0x132C640")]
		private void ChangeBrightness(float amount = 0f)
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x132C76C", Offset = "0x132C76C", VA = "0x132C76C")]
		private void ChangeContrast(float amount = 0f)
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x132BF2C", Offset = "0x132BF2C", VA = "0x132BF2C")]
		private void ResetButtons()
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x132C8A0", Offset = "0x132C8A0", VA = "0x132C8A0")]
		public MT_PlayerAccessibilityMenu()
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x132C8A8", Offset = "0x132C8A8", VA = "0x132C8A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92AB4", Offset = "0xE92AB4")]
		private void <FillMenuInfo>b__29_0()
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x132C8B4", Offset = "0x132C8B4", VA = "0x132C8B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92AC4", Offset = "0xE92AC4")]
		private void <FillMenuInfo>b__29_1()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x132C8C0", Offset = "0x132C8C0", VA = "0x132C8C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92AD4", Offset = "0xE92AD4")]
		private void <FillMenuInfo>b__29_2()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x132C8CC", Offset = "0x132C8CC", VA = "0x132C8CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92AE4", Offset = "0xE92AE4")]
		private void <FillMenuInfo>b__29_3()
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x132C8D8", Offset = "0x132C8D8", VA = "0x132C8D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92AF4", Offset = "0xE92AF4")]
		private void <FillMenuInfo>b__29_4()
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x132C8E0", Offset = "0x132C8E0", VA = "0x132C8E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92B04", Offset = "0xE92B04")]
		private void <FillMenuInfo>b__29_5()
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x132C8E8", Offset = "0x132C8E8", VA = "0x132C8E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92B14", Offset = "0xE92B14")]
		private void <FillMenuInfo>b__29_6()
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x132C8F0", Offset = "0x132C8F0", VA = "0x132C8F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92B24", Offset = "0xE92B24")]
		private void <FillMenuInfo>b__29_7()
		{
		}
	}
	[Token(Token = "0x2000523")]
	public class MT_PlayerOptionsMenu : MonoBehaviour, IDebugMenu
	{
		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI walkBlinkersText;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI teleportBlinkersText;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MT_UIButton walkBlinkersToggle;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_UIButton teleportBlinkersToggle;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject walkBlinkersToggleImage;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject teleportBlinkersToggleImage;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MT_UIButton setPlayerRealHeightButton;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MT_UIButton setPlayerInGameHeightButton;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MT_UIButton addPlayerInGameHeightButton;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MT_UIButton removePlayerInGameHeightButton;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshProUGUI currentPlayerInGameHeight;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MT_TrackedPoseDriver trackedPoseDriver;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private MT_UIButton increasePlayerWalkSpeedButton;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private MT_UIButton decreasePlayerWalkSpeedButton;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private MT_UIButton resetPlayerWalkSpeedButton;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private TextMeshProUGUI currentPlayerWalkSpeed;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private MT_UIButton restartGameButton;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE83B80", Offset = "0xE83B80")]
		[SerializeField]
		private TextMeshProUGUI blockoutVisibilityText;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private MT_UIButton blockoutVisibilityToggle;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GameObject blockoutVisibilityToggleImage;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE83BD8", Offset = "0xE83BD8")]
		[SerializeField]
		private TextMeshProUGUI playerSpeedText;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private MT_UIButton playerSpeedToggle;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private GameObject playerSpeedToggleImage;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE83C30", Offset = "0xE83C30")]
		[SerializeField]
		private TextMeshProUGUI navMeshText;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private MT_UIButton navMeshToggle;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject navMeshToggleImage;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE83C88", Offset = "0xE83C88")]
		[SerializeField]
		private TextMeshProUGUI teleportTypeText;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private MT_UIButton teleportTypeToggle;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private GameObject teleportTypeToggleImage;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE83CE0", Offset = "0xE83CE0")]
		[SerializeField]
		private TextMeshProUGUI hideAllNpcsText;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private MT_UIButton hideAllNpcsToggle;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE83D28", Offset = "0xE83D28")]
		[SerializeField]
		private TextMeshProUGUI forceGrabText;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private MT_UIButton forceGrabToggle;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private GameObject forceGrabToggleImage;

		[Token(Token = "0x40018A7")]
		private const string WalkingLabel = "Walking";

		[Token(Token = "0x40018A8")]
		private const string RunningLabel = "Running";

		[Token(Token = "0x40018A9")]
		private const string ForceGrabLabel = "Enable ForceGrab";

		[Token(Token = "0x40018AA")]
		private const string NavMeshTeleportLabel = "NavMesh + Collider Teleport";

		[Token(Token = "0x40018AB")]
		private const string ColliderTeleportLabel = "Collider Teleport";

		[Token(Token = "0x40018AC")]
		private const float WalkSpeedAmendStep = 0.1f;

		[Token(Token = "0x40018AD")]
		private const string HideNpcLabel = "Hide All Npcs";

		[Token(Token = "0x40018AE")]
		private const string ShowAllNpcLabel = "Show All Npcs";

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool _hasWalkBlinkers;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		private bool _hasTeleportBlinkers;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
		private bool _hasBlockoutVisibility;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12B")]
		private bool _isWalking;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private bool _isNavMeshVisible;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
		private bool _areNpcsHidden;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12E")]
		private bool _forceGrabOn;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private MT_RenderNavMesh _renderNavmesh;

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x1330840", Offset = "0x1330840", VA = "0x1330840", Slot = "4")]
		public void SetUpMenu()
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x1331004", Offset = "0x1331004", VA = "0x1331004", Slot = "5")]
		public void CloseMenu()
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x13311AC", Offset = "0x13311AC", VA = "0x13311AC", Slot = "6")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x133087C", Offset = "0x133087C", VA = "0x133087C")]
		private void FillMenuInfo()
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x1331288", Offset = "0x1331288", VA = "0x1331288")]
		private void ToggleWalkBlinkers()
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x1331314", Offset = "0x1331314", VA = "0x1331314")]
		private void ToggleForceGrab()
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x133139C", Offset = "0x133139C", VA = "0x133139C")]
		private void ToggleTeleportBlinkers()
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x1331428", Offset = "0x1331428", VA = "0x1331428")]
		private void ToggleBlockoutVisibility()
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x13314B4", Offset = "0x13314B4", VA = "0x13314B4")]
		private void TogglePlayerSpeed()
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x1331570", Offset = "0x1331570", VA = "0x1331570")]
		private void ToggleNavMesh()
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x1331574", Offset = "0x1331574", VA = "0x1331574")]
		private void SetPlayerRealHeight()
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x1331578", Offset = "0x1331578", VA = "0x1331578")]
		private void SetPlayerInGameHeight()
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x133164C", Offset = "0x133164C", VA = "0x133164C")]
		private void AddPlayerInGameHeight()
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x133172C", Offset = "0x133172C", VA = "0x133172C")]
		private void RemovePlayerInGameHeight()
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x13311F0", Offset = "0x13311F0", VA = "0x13311F0")]
		private void ChangePlayerWalkSpeed(float amount = 0f)
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x133180C", Offset = "0x133180C", VA = "0x133180C")]
		private void ResetPlayerWalkSpeed()
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x133189C", Offset = "0x133189C", VA = "0x133189C")]
		private void RestartGame()
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x1331904", Offset = "0x1331904", VA = "0x1331904")]
		private void HideAllNpcs()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x1331040", Offset = "0x1331040", VA = "0x1331040")]
		private void ResetButtons()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x1331B7C", Offset = "0x1331B7C", VA = "0x1331B7C")]
		public MT_PlayerOptionsMenu()
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x1331B84", Offset = "0x1331B84", VA = "0x1331B84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92B34", Offset = "0xE92B34")]
		private void <FillMenuInfo>b__53_0()
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x1331B90", Offset = "0x1331B90", VA = "0x1331B90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92B44", Offset = "0xE92B44")]
		private void <FillMenuInfo>b__53_1()
		{
		}
	}
	[Token(Token = "0x2000524")]
	public class MT_PlayerPerformanceMenu : MonoBehaviour, IDebugMenu
	{
		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI currentFFRLevel;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_UIButton increaseFFRLevel;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MT_UIButton decreaseFFRLevel;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI currentCPULevel;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MT_UIButton increaseCPULevel;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MT_UIButton decreaseCPULevel;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI currentGPULevel;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MT_UIButton increaseGPULevel;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MT_UIButton decreaseGPULevel;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject enableDRSTickImage;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MT_UIButton enableDRSButton;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject drsParent;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject autoDRSTickImage;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private MT_UIButton autoDRSButton;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject drsLevelParent;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private TextMeshProUGUI drsLevel;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private MT_UIButton increaseDRSLevel;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private MT_UIButton decreaseDRSLevel;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool _drsEnabled;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool _autoDrsEnabled;

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x13326B0", Offset = "0x13326B0", VA = "0x13326B0", Slot = "6")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x13326F4", Offset = "0x13326F4", VA = "0x13326F4", Slot = "4")]
		public void SetUpMenu()
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x1332D18", Offset = "0x1332D18", VA = "0x1332D18", Slot = "5")]
		public void CloseMenu()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x1332AEC", Offset = "0x1332AEC", VA = "0x1332AEC")]
		private void FillMenuInfo()
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x1332D54", Offset = "0x1332D54", VA = "0x1332D54")]
		private void ResetButtons()
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x1332E60", Offset = "0x1332E60", VA = "0x1332E60")]
		private void SetFFRLevel(int amount)
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x1332F64", Offset = "0x1332F64", VA = "0x1332F64")]
		private void SetCPULevel(int amount)
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x1333068", Offset = "0x1333068", VA = "0x1333068")]
		private void SetGPULevel(int amount)
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x133316C", Offset = "0x133316C", VA = "0x133316C")]
		private void ToggleDRS()
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x13331A4", Offset = "0x13331A4", VA = "0x13331A4")]
		private void ToggleAutoDRS()
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x13331DC", Offset = "0x13331DC", VA = "0x13331DC")]
		private void IncreaseResolution()
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x1333200", Offset = "0x1333200", VA = "0x1333200")]
		private void DecreaseResolution()
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x1333224", Offset = "0x1333224", VA = "0x1333224")]
		public MT_PlayerPerformanceMenu()
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x133322C", Offset = "0x133322C", VA = "0x133322C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92B54", Offset = "0xE92B54")]
		private void <SetUpMenu>b__21_0()
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x1333234", Offset = "0x1333234", VA = "0x1333234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92B64", Offset = "0xE92B64")]
		private void <SetUpMenu>b__21_1()
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x133323C", Offset = "0x133323C", VA = "0x133323C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92B74", Offset = "0xE92B74")]
		private void <SetUpMenu>b__21_2()
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x1333244", Offset = "0x1333244", VA = "0x1333244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92B84", Offset = "0xE92B84")]
		private void <SetUpMenu>b__21_3()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x133324C", Offset = "0x133324C", VA = "0x133324C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92B94", Offset = "0xE92B94")]
		private void <SetUpMenu>b__21_4()
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x1333254", Offset = "0x1333254", VA = "0x1333254")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92BA4", Offset = "0xE92BA4")]
		private void <SetUpMenu>b__21_5()
		{
		}
	}
	[Token(Token = "0x2000525")]
	public class MT_SelectDebugMenu : MonoBehaviour
	{
		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_DebugMenuManager debugMenuManager;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<IDebugMenu> _debugMenus;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _currentMenuPos;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IDebugMenu _currentMenu;

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x12A8610", Offset = "0x12A8610", VA = "0x12A8610")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x12A8634", Offset = "0x12A8634", VA = "0x12A8634")]
		private void InitialiseDebugMenus()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x12A8CB4", Offset = "0x12A8CB4", VA = "0x12A8CB4")]
		private void SetUpMenuManager()
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x12A8E28", Offset = "0x12A8E28", VA = "0x12A8E28")]
		private void CloseDebugMenu()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x12A8F34", Offset = "0x12A8F34", VA = "0x12A8F34")]
		private void SetAndOpenMenu(bool isPrev)
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x12A9000", Offset = "0x12A9000", VA = "0x12A9000")]
		private void SetMenu(bool isPrev)
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x12A90C0", Offset = "0x12A90C0", VA = "0x12A90C0")]
		public void OpenSelectedMenu()
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x12A9258", Offset = "0x12A9258", VA = "0x12A9258")]
		public MT_SelectDebugMenu()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x12A9260", Offset = "0x12A9260", VA = "0x12A9260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92BB4", Offset = "0xE92BB4")]
		private void <SetUpMenuManager>b__6_0()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x12A9268", Offset = "0x12A9268", VA = "0x12A9268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92BC4", Offset = "0xE92BC4")]
		private void <SetUpMenuManager>b__6_1()
		{
		}
	}
}
namespace MazeTheory.DebugTools
{
	[Token(Token = "0x2000526")]
	public sealed class DebugLogItem : MonoBehaviour
	{
		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _text;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE83EC0", Offset = "0xE83EC0")]
		private Log <Log>k__BackingField;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Action<Log> _onClick;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<UnityEngine.LogType, Color> LogTypeColors;

		[Token(Token = "0x1700031D")]
		public Log Log
		{
			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0xFFDDF4", Offset = "0xFFDDF4", VA = "0xFFDDF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92BE4", Offset = "0xE92BE4")]
			get
			{
				return default(Log);
			}
			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0xFFDDD4", Offset = "0xFFDDD4", VA = "0xFFDDD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92BD4", Offset = "0xE92BD4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xFFDE08", Offset = "0xFFDE08", VA = "0xFFDE08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xFFDEC0", Offset = "0xFFDEC0", VA = "0xFFDEC0")]
		private void Call()
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xFFDF30", Offset = "0xFFDF30", VA = "0xFFDF30")]
		public void Init(Log log, Action<Log> onClick)
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xFFE038", Offset = "0xFFE038", VA = "0xFFE038")]
		public DebugLogItem()
		{
		}
	}
	[Token(Token = "0x2000527")]
	public sealed class MT_LogHandler
	{
		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x12603E0", Offset = "0x12603E0", VA = "0x12603E0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x12604FC", Offset = "0x12604FC", VA = "0x12604FC")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x125F280", Offset = "0x125F280", VA = "0x125F280")]
		public static void Log(string msg, [Optional] UnityEngine.Object context, LogHandler.ChannelID channel = LogHandler.ChannelID.General)
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x124AE80", Offset = "0x124AE80", VA = "0x124AE80")]
		public static void LogWarning(string msg, [Optional] UnityEngine.Object context, LogHandler.ChannelID channel = LogHandler.ChannelID.General)
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x124EE08", Offset = "0x124EE08", VA = "0x124EE08")]
		public static void LogError(string msg, [Optional] UnityEngine.Object context, LogHandler.ChannelID channel = LogHandler.ChannelID.General)
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x1260500", Offset = "0x1260500", VA = "0x1260500")]
		public static void LogError(Exception exception, [Optional] UnityEngine.Object context, LogHandler.ChannelID channel = LogHandler.ChannelID.General)
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x125F284", Offset = "0x125F284", VA = "0x125F284")]
		public static void LogException(Exception exception, [Optional] UnityEngine.Object context, LogHandler.ChannelID channel = LogHandler.ChannelID.General)
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x126057C", Offset = "0x126057C", VA = "0x126057C")]
		public MT_LogHandler()
		{
		}
	}
	[Token(Token = "0x2000528")]
	public static class LogHandler
	{
		[Token(Token = "0x2000529")]
		public enum ChannelID
		{
			[Token(Token = "0x40018D6")]
			General,
			[Token(Token = "0x40018D7")]
			PremiumContent,
			[Token(Token = "0x40018D8")]
			Journal,
			[Token(Token = "0x40018D9")]
			Localization,
			[Token(Token = "0x40018DA")]
			PlatformHandling,
			[Token(Token = "0x40018DB")]
			Tools,
			[Token(Token = "0x40018DC")]
			Audio,
			[Token(Token = "0x40018DD")]
			SceneLoadingAndSetup,
			[Token(Token = "0x40018DE")]
			SaveAndLoad,
			[Token(Token = "0x40018DF")]
			Networking,
			[Token(Token = "0x40018E0")]
			Photon,
			[Token(Token = "0x40018E1")]
			Pausing
		}

		[Token(Token = "0x200052A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B5A0", Offset = "0xE6B5A0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40018E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ChannelID channel;

			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0x1035378", Offset = "0x1035378", VA = "0x1035378")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0x1035380", Offset = "0x1035380", VA = "0x1035380")]
			internal bool <Log>b__0(ChannelID debugChannel)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200052B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B5B0", Offset = "0xE6B5B0")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40018E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ChannelID channel;

			[Token(Token = "0x6001CDD")]
			[Address(RVA = "0x1035390", Offset = "0x1035390", VA = "0x1035390")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0x1035398", Offset = "0x1035398", VA = "0x1035398")]
			internal bool <LogWarning>b__0(ChannelID debugChannel)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200052C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B5C0", Offset = "0xE6B5C0")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40018E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ChannelID channel;

			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0x10353A8", Offset = "0x10353A8", VA = "0x10353A8")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001CE0")]
			[Address(RVA = "0x10353B0", Offset = "0x10353B0", VA = "0x10353B0")]
			internal bool <LogError>b__0(ChannelID debugChannel)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200052D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B5D0", Offset = "0xE6B5D0")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40018E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ChannelID channel;

			[Token(Token = "0x6001CE1")]
			[Address(RVA = "0x10353C0", Offset = "0x10353C0", VA = "0x10353C0")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001CE2")]
			[Address(RVA = "0x10353C8", Offset = "0x10353C8", VA = "0x10353C8")]
			internal bool <LogError>b__0(ChannelID debugChannel)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200052E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B5E0", Offset = "0xE6B5E0")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40018E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ChannelID channel;

			[Token(Token = "0x6001CE3")]
			[Address(RVA = "0x10353D8", Offset = "0x10353D8", VA = "0x10353D8")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0x10353E0", Offset = "0x10353E0", VA = "0x10353E0")]
			internal bool <LogException>b__0(ChannelID debugChannel)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool debuggingLogsOn;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly ChannelID[] channels;

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x1019DEC", Offset = "0x1019DEC", VA = "0x1019DEC")]
		public static void Log(string msg, UnityEngine.Object context, ChannelID channel)
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x101A05C", Offset = "0x101A05C", VA = "0x101A05C")]
		public static void LogWarning(string msg, UnityEngine.Object context, ChannelID channel)
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x101A2CC", Offset = "0x101A2CC", VA = "0x101A2CC")]
		public static void LogError(string msg, UnityEngine.Object context, ChannelID channel)
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x101A53C", Offset = "0x101A53C", VA = "0x101A53C")]
		public static void LogError(Exception exception, UnityEngine.Object context, ChannelID channel)
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x101A72C", Offset = "0x101A72C", VA = "0x101A72C")]
		public static void LogException(Exception exception, UnityEngine.Object context, ChannelID channel)
		{
		}
	}
	[Token(Token = "0x200052F")]
	public struct Log
	{
		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Message;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string StackTrace;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEngine.LogType LogType;
	}
	[Token(Token = "0x2000530")]
	public sealed class MT_DebugConsoleManager : IGameModule
	{
		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly List<Log> Logs;

		[Token(Token = "0x1400003E")]
		public event Action<Log> OnLogRecieved
		{
			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0x112F264", Offset = "0x112F264", VA = "0x112F264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92BF4", Offset = "0xE92BF4")]
			add
			{
			}
			[Token(Token = "0x6001CE6")]
			[Address(RVA = "0x112F304", Offset = "0x112F304", VA = "0x112F304")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92C04", Offset = "0xE92C04")]
			remove
			{
			}
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x112F3A4", Offset = "0x112F3A4", VA = "0x112F3A4", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x112F420", Offset = "0x112F420", VA = "0x112F420", Slot = "5")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x112F49C", Offset = "0x112F49C", VA = "0x112F49C")]
		private void ApplicationOnlogMessageReceived(string message, string stacktrace, UnityEngine.LogType type)
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x112F5B4", Offset = "0x112F5B4", VA = "0x112F5B4")]
		public MT_DebugConsoleManager()
		{
		}
	}
	[Token(Token = "0x2000531")]
	public class RuntimeDebugMenu : MonoBehaviour
	{
		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Canvas[] _canvArr;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ParticleSystem[] _psArr;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static MT_NPCGameplay[] _npcArr;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Renderer[] _unStaticArr;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Light[] _lightsArr;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static ReflectionProbe[] _refProbArr;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static float originalFarClipPlane;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static bool UIon;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static UnityEvent UIToggled;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.UI.Toggle canvases;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.UI.Toggle particles;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.UI.Toggle characters;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.UI.Toggle nonStatics;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEngine.UI.Toggle lights;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEngine.UI.Toggle refProbe;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEngine.UI.Toggle debugIK;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEngine.UI.Toggle UIToggle;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Slider farClipPlane;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Slider foveationLevel;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Button openMPDebugMenuButton;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject MPDebugMenu;

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x32CC9E4", Offset = "0x32CC9E4", VA = "0x32CC9E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x32CCE78", Offset = "0x32CCE78", VA = "0x32CCE78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x32CD2B4", Offset = "0x32CD2B4", VA = "0x32CD2B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x32CD314", Offset = "0x32CD314", VA = "0x32CD314")]
		public static void ToggleCanvases(bool value)
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x32CD590", Offset = "0x32CD590", VA = "0x32CD590")]
		public static void ToggleParticles(bool value)
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x32CD78C", Offset = "0x32CD78C", VA = "0x32CD78C")]
		public static void ToggleCharacters(bool value)
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x32CD988", Offset = "0x32CD988", VA = "0x32CD988")]
		public static void ToggleUnstaticObjects(bool value)
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x32CDD30", Offset = "0x32CDD30", VA = "0x32CDD30")]
		public static void ToggleDynamicLights(bool value)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x32CDF2C", Offset = "0x32CDF2C", VA = "0x32CDF2C")]
		public static void ToggleReflectionProbes(bool value)
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x32CE128", Offset = "0x32CE128", VA = "0x32CE128")]
		public static void ToggleDebugIK(bool value)
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x32CE18C", Offset = "0x32CE18C", VA = "0x32CE18C")]
		public static void ToggleUI(bool value)
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x32CE27C", Offset = "0x32CE27C", VA = "0x32CE27C")]
		public static void ChangeCameraDrawDistance(float value)
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x32CE39C", Offset = "0x32CE39C", VA = "0x32CE39C")]
		public void ResetClipPlaneToDefault()
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x32CE43C", Offset = "0x32CE43C", VA = "0x32CE43C")]
		public static void ChangeFoveationLevel(float value)
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x32CE4D4", Offset = "0x32CE4D4", VA = "0x32CE4D4")]
		public void OpenMPDebugMenu()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x32CE554", Offset = "0x32CE554", VA = "0x32CE554")]
		public RuntimeDebugMenu()
		{
		}
	}
	[Token(Token = "0x2000532")]
	public class UIDebugToggle : MonoBehaviour
	{
		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isOn;

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x1356CD4", Offset = "0x1356CD4", VA = "0x1356CD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x1356D9C", Offset = "0x1356D9C", VA = "0x1356D9C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x1356E64", Offset = "0x1356E64", VA = "0x1356E64")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x1356E9C", Offset = "0x1356E9C", VA = "0x1356E9C")]
		private void ToggleThis()
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x1356F34", Offset = "0x1356F34", VA = "0x1356F34")]
		public UIDebugToggle()
		{
		}
	}
	[Token(Token = "0x2000533")]
	public static class DrawArrow
	{
		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x100909C", Offset = "0x100909C", VA = "0x100909C")]
		public static void ForGizmo(Vector3 pos, Vector3 direction, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x100926C", Offset = "0x100926C", VA = "0x100926C")]
		public static void ForGizmo(Vector3 pos, Vector3 direction, Color color, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x100947C", Offset = "0x100947C", VA = "0x100947C")]
		public static void ForDebug(Vector3 pos, Vector3 direction, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x10096B4", Offset = "0x10096B4", VA = "0x10096B4")]
		public static void ForDebug(Vector3 pos, Vector3 direction, Color color, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
		{
		}
	}
}
namespace MazeTheory.Performance
{
	[Token(Token = "0x2000534")]
	public class CanvasManager : MonoBehaviour
	{
		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _created;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly HashSet<DisableCanvasesWithinDistance> CanvasSet;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static DisableCanvasesWithinDistance[] _canvasArray;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _canvasCount;

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x1205C0C", Offset = "0x1205C0C", VA = "0x1205C0C")]
		public static void Register(DisableCanvasesWithinDistance c)
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x1206088", Offset = "0x1206088", VA = "0x1206088")]
		public static void Deregister(DisableCanvasesWithinDistance c)
		{
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x1205CF8", Offset = "0x1205CF8", VA = "0x1205CF8")]
		private static void TryCreate()
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x1206170", Offset = "0x1206170", VA = "0x1206170")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE92C14", Offset = "0xE92C14")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x1205E28", Offset = "0x1205E28", VA = "0x1205E28")]
		private static void ToArray()
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x1206358", Offset = "0x1206358", VA = "0x1206358")]
		private static float3 ToFloat3(Vector3 vec)
		{
			return default(float3);
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x120635C", Offset = "0x120635C", VA = "0x120635C")]
		public CanvasManager()
		{
		}
	}
	[Token(Token = "0x2000535")]
	public sealed class DisableCanvasesWithinDistance : MonoBehaviour
	{
		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minDist;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x10089F8", Offset = "0x10089F8", VA = "0x10089F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x1008A5C", Offset = "0x1008A5C", VA = "0x1008A5C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x1008AC0", Offset = "0x1008AC0", VA = "0x1008AC0")]
		public DisableCanvasesWithinDistance()
		{
		}
	}
	[Token(Token = "0x2000536")]
	public class MT_PerformanceManager : IGameModule
	{
		[Token(Token = "0x2000537")]
		public enum PerformanceLevel
		{
			[Token(Token = "0x4001913")]
			Lowest,
			[Token(Token = "0x4001914")]
			Low,
			[Token(Token = "0x4001915")]
			Medium,
			[Token(Token = "0x4001916")]
			High,
			[Token(Token = "0x4001917")]
			Max
		}

		[Token(Token = "0x2000538")]
		public enum FFRLevel
		{
			[Token(Token = "0x4001919")]
			Off,
			[Token(Token = "0x400191A")]
			Low,
			[Token(Token = "0x400191B")]
			Medium,
			[Token(Token = "0x400191C")]
			High,
			[Token(Token = "0x400191D")]
			HighTop,
			[Token(Token = "0x400191E")]
			Dynamic
		}

		[Token(Token = "0x4001908")]
		private const float MinResolutionScale = 0f;

		[Token(Token = "0x4001909")]
		private const float MaxResolutionScale = 1f;

		[Token(Token = "0x400190A")]
		private const float ScaleIncrement = 0.005f;

		[Token(Token = "0x400190B")]
		private const float GPUFrameTimeLimit = 0.015f;

		[Token(Token = "0x400190C")]
		private const uint NumOfFramesInAverage = 5u;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject _go;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static OnUpdateLoop _update;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<float> _frameTimes;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool _useDynamicResolution;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private static bool _autoScaleResolution;

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x1325624", Offset = "0x1325624", VA = "0x1325624", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x13258D0", Offset = "0x13258D0", VA = "0x13258D0", Slot = "5")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x1325860", Offset = "0x1325860", VA = "0x1325860")]
		private void SetupForOculusQuest()
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x1325A34", Offset = "0x1325A34", VA = "0x1325A34")]
		private void SetupForPSVR()
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x1325A90", Offset = "0x1325A90", VA = "0x1325A90")]
		public static bool IsThrottling()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x1325AEC", Offset = "0x1325AEC", VA = "0x1325AEC")]
		public static PerformanceLevel GetCPULevel()
		{
			return default(PerformanceLevel);
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x1325B48", Offset = "0x1325B48", VA = "0x1325B48")]
		public static void SetCPULevel(PerformanceLevel level)
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x1325BC8", Offset = "0x1325BC8", VA = "0x1325BC8")]
		public static PerformanceLevel GetGPULevel()
		{
			return default(PerformanceLevel);
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x1325C24", Offset = "0x1325C24", VA = "0x1325C24")]
		public static void SetGPULevel(PerformanceLevel level)
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x1325CA4", Offset = "0x1325CA4", VA = "0x1325CA4")]
		public static FFRLevel GetFFRLevel()
		{
			return default(FFRLevel);
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x13258D4", Offset = "0x13258D4", VA = "0x13258D4")]
		public static void SetFFRLevel(FFRLevel level)
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x1325D34", Offset = "0x1325D34", VA = "0x1325D34")]
		public static bool GetDRSEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x1325D80", Offset = "0x1325D80", VA = "0x1325D80")]
		public static bool GetAutoDRSEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x1325DCC", Offset = "0x1325DCC", VA = "0x1325DCC")]
		public static void EnableDynamicResolutionScaling(bool enabled)
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x1325E2C", Offset = "0x1325E2C", VA = "0x1325E2C")]
		public static void SetAutoScaleResolution(bool enabled)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x1325E8C", Offset = "0x1325E8C", VA = "0x1325E8C")]
		public static void IncreaseResolution()
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x1325F24", Offset = "0x1325F24", VA = "0x1325F24")]
		public static void DecreaseResolution()
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x1325FBC", Offset = "0x1325FBC", VA = "0x1325FBC")]
		public static float GetResolutionScale()
		{
			return default(float);
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x13258C4", Offset = "0x13258C4", VA = "0x13258C4")]
		private static void ResetDRS()
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x1325FC4", Offset = "0x1325FC4", VA = "0x1325FC4")]
		private void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x132603C", Offset = "0x132603C", VA = "0x132603C")]
		private void DetermineResolution(float deltaTime)
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x13263A4", Offset = "0x13263A4", VA = "0x13263A4")]
		public MT_PerformanceManager()
		{
		}
	}
}
namespace MazeTheory.Credits
{
	[Token(Token = "0x2000539")]
	public sealed class CreditsController : MonoBehaviour, Controls.ICreditsActions
	{
		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MenuStateMachine stateMachine;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro creditsText;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject spawnPoint;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE83F20", Offset = "0xE83F20")]
		private Action <OnComplete>k__BackingField;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MT_UIRadialBar skipRadial;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float endY;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Controls _controls;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _creditsEnded;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RectTransform _creditsRT;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform playerInitTransform;

		[Token(Token = "0x1700031E")]
		public Action OnComplete
		{
			[Token(Token = "0x6001D27")]
			[Address(RVA = "0xFFBB98", Offset = "0xFFBB98", VA = "0xFFBB98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92C9C", Offset = "0xE92C9C")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001D26")]
			[Address(RVA = "0xFFBB90", Offset = "0xFFBB90", VA = "0xFFBB90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92C8C", Offset = "0xE92C8C")]
			set
			{
			}
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xFFBBA0", Offset = "0xFFBBA0", VA = "0xFFBBA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xFFC030", Offset = "0xFFC030", VA = "0xFFC030")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xFFC12C", Offset = "0xFFC12C", VA = "0xFFC12C")]
		private void OnTeleportedToCredits()
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xFFC20C", Offset = "0xFFC20C", VA = "0xFFC20C")]
		private void OnPauseStateChanged(bool isPaused)
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xFFC28C", Offset = "0xFFC28C", VA = "0xFFC28C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xFFC3C8", Offset = "0xFFC3C8", VA = "0xFFC3C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xFFC524", Offset = "0xFFC524", VA = "0xFFC524")]
		private void EndCredits()
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xFFC704", Offset = "0xFFC704", VA = "0xFFC704", Slot = "4")]
		public void OnSkip(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xFFC800", Offset = "0xFFC800", VA = "0xFFC800")]
		public CreditsController()
		{
		}
	}
	[Token(Token = "0x200053A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6B5F0", Offset = "0xE6B5F0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6B5F0", Offset = "0xE6B5F0")]
	public class ShowCreditsNode : LatentActionNode<CreditsController>
	{
		[Token(Token = "0x200053B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B654", Offset = "0xE6B654")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400192A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool finished;

			[Token(Token = "0x6001D33")]
			[Address(RVA = "0x32C8A74", Offset = "0x32C8A74", VA = "0x32C8A74")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001D34")]
			[Address(RVA = "0x32C8A7C", Offset = "0x32C8A7C", VA = "0x32C8A7C")]
			internal void <Invoke>b__0()
			{
			}

			[Token(Token = "0x6001D35")]
			[Address(RVA = "0x32C8A88", Offset = "0x32C8A88", VA = "0x32C8A88")]
			internal bool <Invoke>g__IsFinished|1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200053C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B664", Offset = "0xE6B664")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400192B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400192C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400192D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CreditsController creditsObject;

			[Token(Token = "0x1700031F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D39")]
				[Address(RVA = "0x32C8C60", Offset = "0x32C8C60", VA = "0x32C8C60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000320")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D3B")]
				[Address(RVA = "0x32C8CA8", Offset = "0x32C8CA8", VA = "0x32C8CA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D36")]
			[Address(RVA = "0x32C8A90", Offset = "0x32C8A90", VA = "0x32C8A90")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001D37")]
			[Address(RVA = "0x32C8ABC", Offset = "0x32C8ABC", VA = "0x32C8ABC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D38")]
			[Address(RVA = "0x32C8AC0", Offset = "0x32C8AC0", VA = "0x32C8AC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D3A")]
			[Address(RVA = "0x32C8C68", Offset = "0x32C8C68", VA = "0x32C8C68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x32DCBB0", Offset = "0x32DCBB0", VA = "0x32DCBB0", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE92CAC", Offset = "0xE92CAC")]
		public override IEnumerator Invoke(CreditsController creditsObject)
		{
			return null;
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x32DCC28", Offset = "0x32DCC28", VA = "0x32DCC28")]
		public ShowCreditsNode()
		{
		}
	}
}
namespace MazeTheory.DesignTools
{
	[Token(Token = "0x200053D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE6B674", Offset = "0xE6B674")]
	public class MT_SpawnerList : ScriptableObject
	{
		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MT_InteractableObject> InteractableObjects;

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x12B01D8", Offset = "0x12B01D8", VA = "0x12B01D8")]
		public MT_SpawnerList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200053E")]
	public class MT_InteractableObject
	{
		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject interactable;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int amount;

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x124CFC4", Offset = "0x124CFC4", VA = "0x124CFC4")]
		public MT_InteractableObject()
		{
		}
	}
	[Token(Token = "0x200053F")]
	public class MT_SpawnerManager : MonoBehaviour
	{
		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_SpawnerList interactablesList;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Transform> positionsList;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> _interactables;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject> _instances;

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x12B01E0", Offset = "0x12B01E0", VA = "0x12B01E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x12B03F0", Offset = "0x12B03F0", VA = "0x12B03F0")]
		private void ShuffleInteractables()
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x12B0624", Offset = "0x12B0624", VA = "0x12B0624")]
		private void ShufflePositions()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x12B01E4", Offset = "0x12B01E4", VA = "0x12B01E4")]
		private void SpawnInteractables()
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x12B0670", Offset = "0x12B0670", VA = "0x12B0670")]
		public MT_SpawnerManager()
		{
		}
	}
}
namespace MazeTheory.DesignTools.Player
{
	[Token(Token = "0x2000540")]
	public class PlayerDamageCollider : MonoBehaviour
	{
		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int damage;

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x10837CC", Offset = "0x10837CC", VA = "0x10837CC")]
		public void DamagePlayer()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x10838AC", Offset = "0x10838AC", VA = "0x10838AC")]
		public PlayerDamageCollider()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000541")]
	public struct PlayerToObjInteraction
	{
		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MT_PlayerToObj_Sender.PlayerColliderTag playerColliderTag;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnityEvent onInteraction;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEvent onInteractionExit;
	}
	[Token(Token = "0x2000542")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE6B6D4", Offset = "0xE6B6D4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE6B6D4", Offset = "0xE6B6D4")]
	public class MT_PlayerToObj_Receiver : MonoBehaviour
	{
		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ShouldTriggerHaptics;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayerToObjInteraction[] objectInteractions;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider _collider;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MT_PlayerToObj_Sender _sender;

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x1334B00", Offset = "0x1334B00", VA = "0x1334B00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x1334BE4", Offset = "0x1334BE4", VA = "0x1334BE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x1334CE8", Offset = "0x1334CE8", VA = "0x1334CE8")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE92D5C", Offset = "0xE92D5C")]
		public void OnInteraction(MT_PlayerToObj_Sender.PlayerColliderTag playerTag, MT_PlayerToObj_Sender sender)
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x1334D9C", Offset = "0x1334D9C", VA = "0x1334D9C")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE92DD4", Offset = "0xE92DD4")]
		public void OnInteractionExit(MT_PlayerToObj_Sender.PlayerColliderTag playerTag)
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x1334E50", Offset = "0x1334E50", VA = "0x1334E50")]
		public void TriggerInteraction(int index)
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x1334EA8", Offset = "0x1334EA8", VA = "0x1334EA8")]
		public void TriggerInteractionExit(int index)
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x1334F00", Offset = "0x1334F00", VA = "0x1334F00")]
		public MT_PlayerToObj_Sender.PlayerColliderTag GetReceiverTag(int index)
		{
			return default(MT_PlayerToObj_Sender.PlayerColliderTag);
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x1334F50", Offset = "0x1334F50", VA = "0x1334F50")]
		public MT_PlayerToObj_Receiver()
		{
		}
	}
	[Token(Token = "0x2000543")]
	public class MT_PlayerToObj_Sender : MonoBehaviour
	{
		[Token(Token = "0x2000544")]
		public enum PlayerColliderTag
		{
			[Token(Token = "0x4001945")]
			Head,
			[Token(Token = "0x4001946")]
			LeftHand,
			[Token(Token = "0x4001947")]
			RightHand,
			[Token(Token = "0x4001948")]
			Body,
			[Token(Token = "0x4001949")]
			Null
		}

		[Token(Token = "0x2000545")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B758", Offset = "0xE6B758")]
		private sealed class <TriggerCheckerCo>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400194A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400194B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400194C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_PlayerToObj_Sender <>4__this;

			[Token(Token = "0x400194D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private RaycastHit[] <hitArray>5__2;

			[Token(Token = "0x17000323")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D60")]
				[Address(RVA = "0x32B863C", Offset = "0x32B863C", VA = "0x32B863C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000324")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D62")]
				[Address(RVA = "0x32B8684", Offset = "0x32B8684", VA = "0x32B8684", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D5D")]
			[Address(RVA = "0x32B81F4", Offset = "0x32B81F4", VA = "0x32B81F4")]
			[DebuggerHidden]
			public <TriggerCheckerCo>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001D5E")]
			[Address(RVA = "0x32B8220", Offset = "0x32B8220", VA = "0x32B8220", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0x32B8224", Offset = "0x32B8224", VA = "0x32B8224", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D61")]
			[Address(RVA = "0x32B8644", Offset = "0x32B8644", VA = "0x32B8644", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerColliderTag playerColliderTag;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE83FA0", Offset = "0xE83FA0")]
		[SerializeField]
		private Teleporter _teleporter;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MT_HandHaptics _handHaptics;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<GameObject, int> _receivers;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE83FEC", Offset = "0xE83FEC")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _positionBeforeTeleport;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool ShouldIgnore;

		[Token(Token = "0x17000321")]
		public PlayerColliderTag ColliderTag
		{
			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0x1334F58", Offset = "0x1334F58", VA = "0x1334F58")]
			get
			{
				return default(PlayerColliderTag);
			}
		}

		[Token(Token = "0x17000322")]
		public Collider Collider
		{
			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0x1334F68", Offset = "0x1334F68", VA = "0x1334F68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92E5C", Offset = "0xE92E5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0x1334F60", Offset = "0x1334F60", VA = "0x1334F60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE92E4C", Offset = "0xE92E4C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x1334F70", Offset = "0x1334F70", VA = "0x1334F70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x13350E8", Offset = "0x13350E8", VA = "0x13350E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x1335260", Offset = "0x1335260", VA = "0x1335260")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x13353EC", Offset = "0x13353EC", VA = "0x13353EC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x1335634", Offset = "0x1335634", VA = "0x1335634")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x133588C", Offset = "0x133588C", VA = "0x133588C")]
		private void PreTeleport(Vector3 position)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x1335898", Offset = "0x1335898", VA = "0x1335898")]
		private void TriggerCheckerPostTeleport()
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x13359C4", Offset = "0x13359C4", VA = "0x13359C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE92E6C", Offset = "0xE92E6C")]
		private IEnumerator TriggerCheckerCo()
		{
			return null;
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x1335540", Offset = "0x1335540", VA = "0x1335540")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE92ECC", Offset = "0xE92ECC")]
		private void DoCollisions(MT_PlayerToObj_Receiver[] receivers)
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x133579C", Offset = "0x133579C", VA = "0x133579C")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE92F44", Offset = "0xE92F44")]
		private void DoCollisionsExit(MT_PlayerToObj_Receiver[] receivers)
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x1335A3C", Offset = "0x1335A3C", VA = "0x1335A3C")]
		public PlayerColliderTag GetPlayerColliderTag()
		{
			return default(PlayerColliderTag);
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x1334C84", Offset = "0x1334C84", VA = "0x1334C84")]
		public void RemoveReceiverOnDisable(GameObject go)
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x1335A44", Offset = "0x1335A44", VA = "0x1335A44")]
		public MT_PlayerToObj_Sender()
		{
		}
	}
}
namespace MazeTheory.PlayerController
{
	[Token(Token = "0x2000546")]
	public sealed class PlayerCombatController
	{
		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _maxHealth;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float _currentHealth;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _minHealth;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _regenSpeed;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _regenWait;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _regenTimer;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isDead;

		[Token(Token = "0x400195A")]
		private const float vibrateTime = 1f;

		[Token(Token = "0x400195B")]
		private const float vibrateAmp = 1f;

		[Token(Token = "0x400195C")]
		private const float heartbeatKickInPerc = 0.7f;

		[Token(Token = "0x400195D")]
		private const float tinnitusKickInPerc = 0.45f;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static float _lastPlayerShotTime;

		[Token(Token = "0x1400003F")]
		public static event Action OnDeath
		{
			[Token(Token = "0x6001D63")]
			[Address(RVA = "0x1081A04", Offset = "0x1081A04", VA = "0x1081A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9300C", Offset = "0xE9300C")]
			add
			{
			}
			[Token(Token = "0x6001D64")]
			[Address(RVA = "0x1081AF8", Offset = "0x1081AF8", VA = "0x1081AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9301C", Offset = "0xE9301C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000040")]
		public static event Action OnHeartbeatStart
		{
			[Token(Token = "0x6001D65")]
			[Address(RVA = "0x1081BEC", Offset = "0x1081BEC", VA = "0x1081BEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9302C", Offset = "0xE9302C")]
			add
			{
			}
			[Token(Token = "0x6001D66")]
			[Address(RVA = "0x1081CE4", Offset = "0x1081CE4", VA = "0x1081CE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9303C", Offset = "0xE9303C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public static event Action OnHeartbeatStop
		{
			[Token(Token = "0x6001D67")]
			[Address(RVA = "0x1081DDC", Offset = "0x1081DDC", VA = "0x1081DDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9304C", Offset = "0xE9304C")]
			add
			{
			}
			[Token(Token = "0x6001D68")]
			[Address(RVA = "0x1081ED4", Offset = "0x1081ED4", VA = "0x1081ED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9305C", Offset = "0xE9305C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public static event Action OnTinnitusStart
		{
			[Token(Token = "0x6001D69")]
			[Address(RVA = "0x1081FCC", Offset = "0x1081FCC", VA = "0x1081FCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9306C", Offset = "0xE9306C")]
			add
			{
			}
			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0x10820C4", Offset = "0x10820C4", VA = "0x10820C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9307C", Offset = "0xE9307C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public static event Action OnTinnitusStop
		{
			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0x10821BC", Offset = "0x10821BC", VA = "0x10821BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9308C", Offset = "0xE9308C")]
			add
			{
			}
			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0x10822B4", Offset = "0x10822B4", VA = "0x10822B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9309C", Offset = "0xE9309C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x10823AC", Offset = "0x10823AC", VA = "0x10823AC")]
		public PlayerCombatController(float maxHealth, float regenSpeed, float regenWait)
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x10823F4", Offset = "0x10823F4", VA = "0x10823F4")]
		public static void SetLastPlayerShotTime()
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x108246C", Offset = "0x108246C", VA = "0x108246C")]
		public static bool HasPlayerFiredInLastAmountOfSeconds(float seconds)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x10824F4", Offset = "0x10824F4", VA = "0x10824F4")]
		public void SetMinHealth(int minHealth)
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x1082578", Offset = "0x1082578", VA = "0x1082578")]
		public float GetCurrentHealth()
		{
			return default(float);
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x1082580", Offset = "0x1082580", VA = "0x1082580")]
		public void ResetHealth()
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x108258C", Offset = "0x108258C", VA = "0x108258C")]
		public void RevivePlayer()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x1082594", Offset = "0x1082594", VA = "0x1082594")]
		public void SetHealth(int health)
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x1082800", Offset = "0x1082800", VA = "0x1082800")]
		public void TakeDamage(float damage)
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x10825B0", Offset = "0x10825B0", VA = "0x10825B0")]
		private void HandleDamage()
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x1082820", Offset = "0x1082820", VA = "0x1082820")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x2000547")]
	public class MT_HVRWaist : HVRPlayerWaist
	{
		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x15C7E44", Offset = "0x15C7E44", VA = "0x15C7E44")]
		public void ForceUpdate()
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x15C7EC4", Offset = "0x15C7EC4", VA = "0x15C7EC4")]
		public MT_HVRWaist()
		{
		}
	}
	[Token(Token = "0x2000548")]
	public sealed class BodySlotsInterop : MonoBehaviour
	{
		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Collider journalHolster;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[MazeTheory.Toolbox.ReadOnly]
		private List<HVRTagSocketFilter> previouslyActiveHolsters;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform[] holsterParents;

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x13C3600", Offset = "0x13C3600", VA = "0x13C3600")]
		public Transform[] HolsterParents()
		{
			return null;
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x13C3608", Offset = "0x13C3608", VA = "0x13C3608")]
		public void DisableHolsterParents()
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x13C3684", Offset = "0x13C3684", VA = "0x13C3684")]
		public void EnableHolsterParents()
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x13C3700", Offset = "0x13C3700", VA = "0x13C3700")]
		public void DisableJournalAndHolsterButtons()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x13C3720", Offset = "0x13C3720", VA = "0x13C3720")]
		public void EnableJournalHolster()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x13C3740", Offset = "0x13C3740", VA = "0x13C3740")]
		public void DisableHolsters()
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x13C3ABC", Offset = "0x13C3ABC", VA = "0x13C3ABC")]
		public void EnableHolsters()
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x13C3BE0", Offset = "0x13C3BE0", VA = "0x13C3BE0")]
		public void ToggleHolsterWithName(string name, bool active)
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x13C3950", Offset = "0x13C3950", VA = "0x13C3950")]
		private void ToggleHolster(Transform socket, bool active)
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x13C3D2C", Offset = "0x13C3D2C", VA = "0x13C3D2C")]
		public BodySlotsInterop()
		{
		}
	}
	[Token(Token = "0x2000549")]
	public class HandsLateUpdateOverride : MonoBehaviour
	{
		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UseLateUpdate;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HVRJointHand _jointHand;

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x10D96F4", Offset = "0x10D96F4", VA = "0x10D96F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x10D97AC", Offset = "0x10D97AC", VA = "0x10D97AC")]
		public HandsLateUpdateOverride()
		{
		}
	}
	[Token(Token = "0x200054A")]
	public class MT_AdjustableWaistHolsters : MonoBehaviour
	{
		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE8408C", Offset = "0xE8408C")]
		[SerializeField]
		private Transform localStandingTransform;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 localSittingPosition;

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x11231F4", Offset = "0x11231F4", VA = "0x11231F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x112324C", Offset = "0x112324C", VA = "0x112324C")]
		public void AdjustHolsters(HeightAdjustmentType height)
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x1123358", Offset = "0x1123358", VA = "0x1123358")]
		public MT_AdjustableWaistHolsters()
		{
		}
	}
	[Token(Token = "0x200054B")]
	public sealed class MT_Blinker : MonoBehaviour
	{
		[Token(Token = "0x200054C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B768", Offset = "0xE6B768")]
		private sealed class <BlinkCo>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400196A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400196B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_Blinker <>4__this;

			[Token(Token = "0x400196C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x17000326")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D96")]
				[Address(RVA = "0x1035DD0", Offset = "0x1035DD0", VA = "0x1035DD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000327")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D98")]
				[Address(RVA = "0x1035E18", Offset = "0x1035E18", VA = "0x1035E18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x1035CE8", Offset = "0x1035CE8", VA = "0x1035CE8")]
			[DebuggerHidden]
			public <BlinkCo>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001D94")]
			[Address(RVA = "0x1035D14", Offset = "0x1035D14", VA = "0x1035D14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x1035D18", Offset = "0x1035D18", VA = "0x1035D18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D97")]
			[Address(RVA = "0x1035DD8", Offset = "0x1035DD8", VA = "0x1035DD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool shouldTeleportDashBlink;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool shouldLocomotionBlink;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine _blinkCo;

		[Token(Token = "0x17000325")]
		private BlinkerController BlinkerController
		{
			[Token(Token = "0x6001D8A")]
			[Address(RVA = "0x1126C78", Offset = "0x1126C78", VA = "0x1126C78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x1126CE8", Offset = "0x1126CE8", VA = "0x1126CE8")]
		public Vector3 GetBlinkerSize()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x1126D8C", Offset = "0x1126D8C", VA = "0x1126D8C")]
		public void SetBlinkerSize(float sizePercentage)
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x1126E34", Offset = "0x1126E34", VA = "0x1126E34")]
		public bool IsActiveAndEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0x1126E54", Offset = "0x1126E54", VA = "0x1126E54")]
		public void Blink(float duration)
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0x1126F48", Offset = "0x1126F48", VA = "0x1126F48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE930AC", Offset = "0xE930AC")]
		private IEnumerator BlinkCo(float duration)
		{
			return null;
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x1126FD0", Offset = "0x1126FD0", VA = "0x1126FD0")]
		public void StartBlink()
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x1127070", Offset = "0x1127070", VA = "0x1127070")]
		public void StopBlink()
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x1127104", Offset = "0x1127104", VA = "0x1127104")]
		public MT_Blinker()
		{
		}
	}
	[Token(Token = "0x200054D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE6B778", Offset = "0xE6B778")]
	public sealed class MT_FPSController : MonoBehaviour
	{
		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 leftHandPosition;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 rightHandPosition;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Vector3 _cameraPos;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE840F8", Offset = "0xE840F8")]
		private bool <IsFPSModeOn>k__BackingField;

		[Token(Token = "0x17000328")]
		private static Transform LeftHand
		{
			[Token(Token = "0x6001D99")]
			[Address(RVA = "0x15BE3A8", Offset = "0x15BE3A8", VA = "0x15BE3A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000329")]
		private static Transform RightHand
		{
			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0x15BE3CC", Offset = "0x15BE3CC", VA = "0x15BE3CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032A")]
		private static Camera PlayerCam
		{
			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0x15BE3F0", Offset = "0x15BE3F0", VA = "0x15BE3F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032B")]
		private static MT_Blinker Blinker
		{
			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0x15BE414", Offset = "0x15BE414", VA = "0x15BE414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032C")]
		public bool IsFPSModeOn
		{
			[Token(Token = "0x6001D9E")]
			[Address(RVA = "0x15BE444", Offset = "0x15BE444", VA = "0x15BE444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9316C", Offset = "0xE9316C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0x15BE438", Offset = "0x15BE438", VA = "0x15BE438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9315C", Offset = "0xE9315C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x15BE44C", Offset = "0x15BE44C", VA = "0x15BE44C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x15BE450", Offset = "0x15BE450", VA = "0x15BE450")]
		public void EnableDebugFirstPersonMode()
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x15BE5D0", Offset = "0x15BE5D0", VA = "0x15BE5D0")]
		public void DisableDebugFirstPersonMode()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x15BE69C", Offset = "0x15BE69C", VA = "0x15BE69C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x15BE758", Offset = "0x15BE758", VA = "0x15BE758")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x15BE75C", Offset = "0x15BE75C", VA = "0x15BE75C")]
		private void EditorOnlyUpdate()
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x15BE960", Offset = "0x15BE960", VA = "0x15BE960")]
		public MT_FPSController()
		{
		}
	}
	[Token(Token = "0x200054E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE6B7D8", Offset = "0xE6B7D8")]
	public sealed class MT_Fade : MonoBehaviour
	{
		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image fadeQuad;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float requestedFadeInDuration;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float requestedHoldBlackDuration;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float requestedFadeOutDuration;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action requestedOnFadeIn;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Action requestedOnFadeOut;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool requestedHoldBlackAtEnd;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _isFading;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsFaderFading;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float currentDuration;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float currentTimeElapsed;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool dbgWasFading;

		[Token(Token = "0x1700032D")]
		public bool IsFading
		{
			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0x15BF110", Offset = "0x15BF110", VA = "0x15BF110")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x15BF118", Offset = "0x15BF118", VA = "0x15BF118")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x15BF188", Offset = "0x15BF188", VA = "0x15BF188")]
		private void FadeUpdate()
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x15BF230", Offset = "0x15BF230", VA = "0x15BF230")]
		private bool Fader(bool fadeIn)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x15BF308", Offset = "0x15BF308", VA = "0x15BF308")]
		private bool Holder()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x15BF378", Offset = "0x15BF378", VA = "0x15BF378")]
		public void ForceFadeToMax(float timeToForce = 3f)
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x15BF40C", Offset = "0x15BF40C", VA = "0x15BF40C")]
		public void FadeInOutBlackSetter(float fadeInDuration, float holdBlackDuration, float fadeOutDuration, [Optional] Action onFadeIn, [Optional] Action onFadeOut)
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x15BF590", Offset = "0x15BF590", VA = "0x15BF590")]
		public void FadeOutBlackSetter(float fadeOutDuration, [Optional] Action onFadeOut)
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x15BF684", Offset = "0x15BF684", VA = "0x15BF684")]
		public void FadeInBlackSetter(float fadeinDuration, [Optional] Action onFadeIn)
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x15BF32C", Offset = "0x15BF32C", VA = "0x15BF32C")]
		private void SetFadeQuadColor(float alpha)
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x15BF510", Offset = "0x15BF510", VA = "0x15BF510")]
		private void StopIfAlreadyRunning()
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x15BF778", Offset = "0x15BF778", VA = "0x15BF778")]
		public bool IsAlreadyRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x15BF780", Offset = "0x15BF780", VA = "0x15BF780")]
		public void StopAll()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x15BF7F8", Offset = "0x15BF7F8", VA = "0x15BF7F8")]
		public MT_Fade()
		{
		}
	}
	[Token(Token = "0x200054F")]
	public class MT_FollowPlayerRotation : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000550")]
		private struct FollowTransformActiveComponentPair
		{
			[Token(Token = "0x4001985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform FollowTransform;

			[Token(Token = "0x4001986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MonoBehaviour ActiveComponent;
		}

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FollowTransformActiveComponentPair[] pairs;

		[Token(Token = "0x400197E")]
		private const float CanvasFollowSpeed = 3f;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _wasJustEnabled;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _wasJustDisabled;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _lastMaxY;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _lastMinY;

		[Token(Token = "0x4001983")]
		private const int CatchUpSpeed = 10;

		[Token(Token = "0x4001984")]
		private const int NumberOfFramesToCatchup = 5;

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x15BFCC4", Offset = "0x15BFCC4", VA = "0x15BFCC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x15BFEB8", Offset = "0x15BFEB8", VA = "0x15BFEB8")]
		private void CanvasLerp(int index)
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x15C00DC", Offset = "0x15C00DC", VA = "0x15C00DC")]
		public MT_FollowPlayerRotation()
		{
		}
	}
	[Token(Token = "0x2000551")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE6B810", Offset = "0xE6B810")]
	public class MT_Hands : MonoBehaviour, Controls.IHandsActions
	{
		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform rightHandRig;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform leftHandRig;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform floorOffset;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Controls _controls;

		[Token(Token = "0x400198B")]
		private const float ControllerDeadZoneY = 0.002f;

		[Token(Token = "0x400198C")]
		private const float ControllerDeadZoneX = 0.002f;

		[Token(Token = "0x400198D")]
		private const float ControllerDeadZoneZ = 0.002f;

		[Token(Token = "0x400198E")]
		private const float HandsOffset = 0.7f;

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x15CD370", Offset = "0x15CD370", VA = "0x15CD370")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x15CD438", Offset = "0x15CD438", VA = "0x15CD438", Slot = "4")]
		public void OnRightHandMove(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x15CD52C", Offset = "0x15CD52C", VA = "0x15CD52C", Slot = "5")]
		public void OnRightHandRotate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x15CD5D8", Offset = "0x15CD5D8", VA = "0x15CD5D8", Slot = "6")]
		public void OnLeftHandMove(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x15CD6CC", Offset = "0x15CD6CC", VA = "0x15CD6CC", Slot = "7")]
		public void OnLeftHandRotate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x15CD778", Offset = "0x15CD778", VA = "0x15CD778")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x15CD86C", Offset = "0x15CD86C", VA = "0x15CD86C")]
		public MT_Hands()
		{
		}
	}
	[Token(Token = "0x2000552")]
	public class MT_HeadCollision : MonoBehaviour
	{
		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float fadeSpeed;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float outerRadius;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float distanceToMostClosePoint;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float radiusOfSphereCast;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float eyeRadius;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private LayerMask layerMask;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool requireUserPresence;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private HVRScreenFade screenFade;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float forceBlackThreshold;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider[] _hits;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Collider[] _hitsDummy;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE841E8", Offset = "0xE841E8")]
		private bool <IsColliding>k__BackingField;

		[Token(Token = "0x1700032E")]
		public bool IsColliding
		{
			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0x15CF204", Offset = "0x15CF204", VA = "0x15CF204")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9317C", Offset = "0xE9317C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0x15CF20C", Offset = "0x15CF20C", VA = "0x15CF20C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9318C", Offset = "0xE9318C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0x15CF218", Offset = "0x15CF218", VA = "0x15CF218")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x15CF290", Offset = "0x15CF290", VA = "0x15CF290")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x15CF66C", Offset = "0x15CF66C", VA = "0x15CF66C")]
		public MT_HeadCollision()
		{
		}
	}
	[Token(Token = "0x2000553")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE6B848", Offset = "0xE6B848")]
	public class MT_Locomotion : MonoBehaviour, Controls.ILocomotionActions
	{
		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool useCharController;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CharacterController charController;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE84228", Offset = "0xE84228")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE84228", Offset = "0xE84228")]
		public float walkSpeed;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE84268", Offset = "0xE84268")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE84268", Offset = "0xE84268")]
		public float runSpeed;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE842A8", Offset = "0xE842A8")]
		public bool hasBlinkers;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MT_Blinker blinker;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE842C8", Offset = "0xE842C8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE842C8", Offset = "0xE842C8")]
		private float fadeInBlinkerDuration;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE84318", Offset = "0xE84318")]
		private float fadeOutBlinkerDuration;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE84358", Offset = "0xE84358")]
		private float slopeForce;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE84398", Offset = "0xE84398")]
		private float slopeForceRayLength;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject headCamera;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject floorOffset;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MT_PlayerHeight playerHeight;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent onPlayerMove;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent onPlayerStop;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Controls StaticControls;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Controls _controls;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE84408", Offset = "0xE84408")]
		private bool <IsUsingWalkSpeed>k__BackingField;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE84418", Offset = "0xE84418")]
		private float <CurrentMoveSpeed>k__BackingField;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _canMove;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector2 _movementAmount;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float _defaultWalkSpeed;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _defaultRunSpeed;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float _cachedWalkSpeed;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float _cachedRunSpeed;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MT_PlayerParameters _playerParameters;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool _isTeleportActive;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool _isGoingToNextLoc;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform _cameraTransform;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool _isCouching;

		[Token(Token = "0x40019BA")]
		private const float XSensitivity = 2f;

		[Token(Token = "0x40019BB")]
		private const float YSensitivity = 2f;

		[Token(Token = "0x40019BC")]
		private const float SmoothTime = 5f;

		[Token(Token = "0x40019BD")]
		private const float JoystickDeadZoneY = 0.1f;

		[Token(Token = "0x40019BE")]
		private const float JoystickDeadZoneX = 0.1f;

		[Token(Token = "0x1700032F")]
		public bool IsUsingWalkSpeed
		{
			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0x125F758", Offset = "0x125F758", VA = "0x125F758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9319C", Offset = "0xE9319C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0x125F760", Offset = "0x125F760", VA = "0x125F760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE931AC", Offset = "0xE931AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000330")]
		public float CurrentMoveSpeed
		{
			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0x125F76C", Offset = "0x125F76C", VA = "0x125F76C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE931BC", Offset = "0xE931BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0x125F774", Offset = "0x125F774", VA = "0x125F774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE931CC", Offset = "0xE931CC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x125F77C", Offset = "0x125F77C", VA = "0x125F77C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x125F7DC", Offset = "0x125F7DC", VA = "0x125F7DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x125F8E0", Offset = "0x125F8E0", VA = "0x125F8E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x125FA90", Offset = "0x125FA90", VA = "0x125FA90")]
		private void UpdatePlayerStatus(bool isStarting = true)
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x125F8E4", Offset = "0x125F8E4", VA = "0x125F8E4")]
		private void EvaluateIsTeleportActive()
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x125FAB0", Offset = "0x125FAB0", VA = "0x125FAB0", Slot = "4")]
		public void OnMove(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x125F8E8", Offset = "0x125F8E8", VA = "0x125F8E8")]
		private void MovePlayer()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x125FD9C", Offset = "0x125FD9C", VA = "0x125FD9C")]
		public void ResetWalkSpeed()
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x125FDA8", Offset = "0x125FDA8", VA = "0x125FDA8")]
		public void ResetRunSpeed()
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x125FDB4", Offset = "0x125FDB4", VA = "0x125FDB4")]
		public void OverrideMoveSpeed(float speed)
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x125FDC4", Offset = "0x125FDC4", VA = "0x125FDC4")]
		public void ResetSpeedToCachedValues()
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x125FC8C", Offset = "0x125FC8C", VA = "0x125FC8C")]
		private bool OnSlope()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x125FDD0", Offset = "0x125FDD0", VA = "0x125FDD0", Slot = "5")]
		public void OnMouseLook(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x126008C", Offset = "0x126008C", VA = "0x126008C", Slot = "6")]
		public void OnGamepadLook(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x1260240", Offset = "0x1260240", VA = "0x1260240", Slot = "7")]
		public void OnCrouch(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x12602B4", Offset = "0x12602B4", VA = "0x12602B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x126037C", Offset = "0x126037C", VA = "0x126037C")]
		public void SetGoingToNextLocation()
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x12603AC", Offset = "0x12603AC", VA = "0x12603AC")]
		public void MarkArrivedAtLocation()
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x12603B4", Offset = "0x12603B4", VA = "0x12603B4")]
		public MT_Locomotion()
		{
		}
	}
	[Token(Token = "0x2000554")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE6B880", Offset = "0xE6B880")]
	public class MT_PlayerHead : MonoBehaviour, Controls.IHeadMovementActions
	{
		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject headCamera;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Controls _controls;

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x132D1F8", Offset = "0x132D1F8", VA = "0x132D1F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x132D2C0", Offset = "0x132D2C0", VA = "0x132D2C0", Slot = "4")]
		public void OnVRCameraRotate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x132D36C", Offset = "0x132D36C", VA = "0x132D36C", Slot = "5")]
		public void OnVRCameraMove(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x132D410", Offset = "0x132D410", VA = "0x132D410")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x132D450", Offset = "0x132D450", VA = "0x132D450")]
		public MT_PlayerHead()
		{
		}
	}
	[Token(Token = "0x2000555")]
	public class MT_PlayerHealth : MonoBehaviour
	{
		[Token(Token = "0x2000556")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B8B8", Offset = "0xE6B8B8")]
		private sealed class <HealPlayerOverTime>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_PlayerHealth <>4__this;

			[Token(Token = "0x17000333")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DEB")]
				[Address(RVA = "0x32B77FC", Offset = "0x32B77FC", VA = "0x32B77FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000334")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DED")]
				[Address(RVA = "0x32B7844", Offset = "0x32B7844", VA = "0x32B7844", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DE8")]
			[Address(RVA = "0x32B75B8", Offset = "0x32B75B8", VA = "0x32B75B8")]
			[DebuggerHidden]
			public <HealPlayerOverTime>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001DE9")]
			[Address(RVA = "0x32B75E4", Offset = "0x32B75E4", VA = "0x32B75E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DEA")]
			[Address(RVA = "0x32B75E8", Offset = "0x32B75E8", VA = "0x32B75E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DEC")]
			[Address(RVA = "0x32B7804", Offset = "0x32B7804", VA = "0x32B7804", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float maxHealth;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float recoverRate;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE84458", Offset = "0xE84458")]
		private float recoverPercentage;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float delayBeforeRecoverStart;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onPlayerDeath;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent onPlayerHit;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent onPlayerStartRecovery;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent onPlayerEndRecovery;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private HealthDepletedEvent[] onPlayerHealthDepletedEvents;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE844FC", Offset = "0xE844FC")]
		private float <CurrentHealth>k__BackingField;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _healCoroutine;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _timeElapsedSinceLastHit;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool GamePaused;

		[Token(Token = "0x17000331")]
		public float CurrentHealth
		{
			[Token(Token = "0x6001DDF")]
			[Address(RVA = "0x132D53C", Offset = "0x132D53C", VA = "0x132D53C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE931DC", Offset = "0xE931DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DE0")]
			[Address(RVA = "0x132D544", Offset = "0x132D544", VA = "0x132D544")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE931EC", Offset = "0xE931EC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000332")]
		private float CurrentHealthPercentage
		{
			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0x132D54C", Offset = "0x132D54C", VA = "0x132D54C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x132D568", Offset = "0x132D568", VA = "0x132D568")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x132D574", Offset = "0x132D574", VA = "0x132D574")]
		public void DamagePlayer(float damage)
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x132D7C8", Offset = "0x132D7C8", VA = "0x132D7C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE931FC", Offset = "0xE931FC")]
		private IEnumerator HealPlayerOverTime()
		{
			return null;
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x132D840", Offset = "0x132D840", VA = "0x132D840")]
		public void HealPlayer(float health)
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x132D7AC", Offset = "0x132D7AC", VA = "0x132D7AC")]
		public void KillPlayer()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x132D8E0", Offset = "0x132D8E0", VA = "0x132D8E0")]
		public MT_PlayerHealth()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000557")]
	public class HealthDepletedEvent
	{
		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float HealthThresholdPercentage;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnBelowHealthThreshold;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool HasTriggered;

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x10D9DF8", Offset = "0x10D9DF8", VA = "0x10D9DF8")]
		public HealthDepletedEvent()
		{
		}
	}
	[Token(Token = "0x2000558")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE6B8C8", Offset = "0xE6B8C8")]
	public class MT_PlayerHeight : MonoBehaviour
	{
		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject floorOffset;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8452C", Offset = "0xE8452C")]
		private float <playerStandHeight>k__BackingField;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8453C", Offset = "0xE8453C")]
		public float playerBarStoolHeight;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE84554", Offset = "0xE84554")]
		public float playerChairHeight;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8456C", Offset = "0xE8456C")]
		public float playerStoolHeight;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE84584", Offset = "0xE84584")]
		public float crouchHeight;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE8459C", Offset = "0xE8459C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8459C", Offset = "0xE8459C")]
		private float fadeInSpeed;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE845EC", Offset = "0xE845EC")]
		private float holdBlackDuration;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8462C", Offset = "0xE8462C")]
		private float fadeOutSpeed;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8466C", Offset = "0xE8466C")]
		private MT_PlayerHeightType <CurrentPlayerHeight>k__BackingField;

		[Token(Token = "0x40019DE")]
		private const float CameraOffset = 0.1f;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8467C", Offset = "0xE8467C")]
		private static bool <IsSitting>k__BackingField;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _cachedStandingTransform;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 _cachedStandingPosition;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion _cachedStandingRotation;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private HeightAdjustState _cachedHeightAdjustState;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private HeightAdjustmentType _cachedHeightAdjustment;

		[Token(Token = "0x17000335")]
		public float playerStandHeight
		{
			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0x132D9B4", Offset = "0x132D9B4", VA = "0x132D9B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE932AC", Offset = "0xE932AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0x132D9BC", Offset = "0x132D9BC", VA = "0x132D9BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE932BC", Offset = "0xE932BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000336")]
		public MT_PlayerHeightType CurrentPlayerHeight
		{
			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0x132D9C4", Offset = "0x132D9C4", VA = "0x132D9C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE932CC", Offset = "0xE932CC")]
			get
			{
				return default(MT_PlayerHeightType);
			}
			[Token(Token = "0x6001DF2")]
			[Address(RVA = "0x132D9CC", Offset = "0x132D9CC", VA = "0x132D9CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE932DC", Offset = "0xE932DC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000337")]
		public static bool IsSitting
		{
			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0x132D9D4", Offset = "0x132D9D4", VA = "0x132D9D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE932EC", Offset = "0xE932EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0x132DA20", Offset = "0x132DA20", VA = "0x132DA20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE932FC", Offset = "0xE932FC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x132DA74", Offset = "0x132DA74", VA = "0x132DA74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x132DAAC", Offset = "0x132DAAC", VA = "0x132DAAC")]
		public void CacheHeightAdjustState(HeightAdjustState heightAdjustState)
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x132DAB4", Offset = "0x132DAB4", VA = "0x132DAB4")]
		public void SetIsSitting(Transform standingTransform, bool isOverride)
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x132DB68", Offset = "0x132DB68", VA = "0x132DB68")]
		public Vector3 GetStandPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x132DBF8", Offset = "0x132DBF8", VA = "0x132DBF8")]
		public Quaternion GetStandRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x132DC88", Offset = "0x132DC88", VA = "0x132DC88")]
		public HeightAdjustState GetCachedHeightAdjustState()
		{
			return default(HeightAdjustState);
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x132DC90", Offset = "0x132DC90", VA = "0x132DC90")]
		public void ClearStandPosition()
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x132DD14", Offset = "0x132DD14", VA = "0x132DD14")]
		public void SetUpPlayerHeight(MT_PlayerHeightType playerHeight)
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x132DEC8", Offset = "0x132DEC8", VA = "0x132DEC8")]
		public void SetUpPlayerHeight(float playerHeight)
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x132DF20", Offset = "0x132DF20", VA = "0x132DF20")]
		public float GetCurrentPlayerHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x132DF54", Offset = "0x132DF54", VA = "0x132DF54")]
		public void FadeInOut(Action onFadeIn, Action onFadeOut)
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x132DFD8", Offset = "0x132DFD8", VA = "0x132DFD8")]
		public void OverridePlayerStandHeight(float standHeight)
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x132E114", Offset = "0x132E114", VA = "0x132E114")]
		public void ResetPlayerEyeHeightOverride()
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x132E1FC", Offset = "0x132E1FC", VA = "0x132E1FC")]
		public MT_PlayerHeight()
		{
		}
	}
	[Token(Token = "0x2000559")]
	public enum MT_PlayerHeightType
	{
		[Token(Token = "0x40019E6")]
		Stand,
		[Token(Token = "0x40019E7")]
		BarStool,
		[Token(Token = "0x40019E8")]
		Chair,
		[Token(Token = "0x40019E9")]
		Stool,
		[Token(Token = "0x40019EA")]
		Crouch
	}
	[Token(Token = "0x200055A")]
	public static class MT_PlayerHeightTypeExtensions
	{
		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x132DD78", Offset = "0x132DD78", VA = "0x132DD78")]
		public static float GetHeight(this MT_PlayerHeightType playerHeight, float offset = 0f)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200055B")]
	public class MT_PlayerHit : MonoBehaviour
	{
		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_PlayerHealth playerHealth;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Transform> playerCol;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LayerMask layerMask;

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x132E390", Offset = "0x132E390", VA = "0x132E390")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x132E394", Offset = "0x132E394", VA = "0x132E394")]
		private void OnCollision(Collider col)
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x132E6F8", Offset = "0x132E6F8", VA = "0x132E6F8")]
		public MT_PlayerHit()
		{
		}
	}
	[Token(Token = "0x200055C")]
	public class MT_PlayerHitInfo : MonoBehaviour, IShootable
	{
		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_PlayerHealth playerHealth;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE846CC", Offset = "0xE846CC")]
		public float shotMultiplier;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE846E8", Offset = "0xE846E8")]
		public float hitMultiplier;

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x132E700", Offset = "0x132E700", VA = "0x132E700", Slot = "4")]
		public void OnShot(float bulletForce, float bulletDamage, Vector3 direction)
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x132E724", Offset = "0x132E724", VA = "0x132E724")]
		public MT_PlayerHitInfo()
		{
		}
	}
	[Token(Token = "0x200055D")]
	public class MT_PlayerSit : MonoBehaviour, Controls.ISittingActions
	{
		[Token(Token = "0x200055E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B910", Offset = "0xE6B910")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x40019FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_PlayerSit <>4__this;

			[Token(Token = "0x40019FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MT_Sittable s;

			[Token(Token = "0x6001E1C")]
			[Address(RVA = "0x32B81A0", Offset = "0x32B81A0", VA = "0x32B81A0")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6001E1D")]
			[Address(RVA = "0x32B81A8", Offset = "0x32B81A8", VA = "0x32B81A8")]
			internal void <OnToggleSitStand>b__0()
			{
			}
		}

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_UIRadialBar _standRadialBar;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_UIOpenMenu uiOpenMenu;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MT_Sittable _currentSittable;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Controls _controls;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _sitLocked;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _showStandUI;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool ShowStandUIOverride;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _playerCameraTransform;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _currentYRotation;

		[Token(Token = "0x40019FA")]
		private const float StandUIVisibilityMargin = 45f;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float CachedGravity;

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x13338A4", Offset = "0x13338A4", VA = "0x13338A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x13339B8", Offset = "0x13339B8", VA = "0x13339B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x1333A28", Offset = "0x1333A28", VA = "0x1333A28")]
		public void SetIsLocked(bool isLocked)
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x1333A34", Offset = "0x1333A34", VA = "0x1333A34")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x1333C44", Offset = "0x1333C44", VA = "0x1333C44")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x1333D7C", Offset = "0x1333D7C", VA = "0x1333D7C")]
		public void ShowSittingUI(float yRotation)
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x13339B0", Offset = "0x13339B0", VA = "0x13339B0")]
		public void HideSittingUI()
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x1333D8C", Offset = "0x1333D8C", VA = "0x1333D8C")]
		public void ShowSittingUIOverride()
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x1333D98", Offset = "0x1333D98", VA = "0x1333D98")]
		public void HideSittingUIOverride()
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x1333DA0", Offset = "0x1333DA0", VA = "0x1333DA0")]
		public void DoOnPlayerStand()
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x1333E64", Offset = "0x1333E64", VA = "0x1333E64")]
		public void StandIfMatching(MT_Sittable sittable)
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x1333F2C", Offset = "0x1333F2C", VA = "0x1333F2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x13340A4", Offset = "0x13340A4", VA = "0x13340A4")]
		private bool IsLookingToSide()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x1334104", Offset = "0x1334104", VA = "0x1334104", Slot = "4")]
		public void OnToggleSitStand(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x133464C", Offset = "0x133464C", VA = "0x133464C")]
		public MT_Sittable GetCurrentSittable()
		{
			return null;
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x1334654", Offset = "0x1334654", VA = "0x1334654")]
		public void SetCurrentSittable(MT_Sittable s)
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x133465C", Offset = "0x133465C", VA = "0x133465C")]
		public void ClearCurrentSittable()
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x1334668", Offset = "0x1334668", VA = "0x1334668")]
		public MT_PlayerSit()
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0x1334678", Offset = "0x1334678", VA = "0x1334678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9331C", Offset = "0xE9331C")]
		private void <OnTriggerEnter>b__14_0()
		{
		}
	}
	[Token(Token = "0x200055F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE6B920", Offset = "0xE6B920")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE6B920", Offset = "0xE6B920")]
	public class MT_Sittable : MonoBehaviour
	{
		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE84724", Offset = "0xE84724")]
		public Transform SitTransform;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_UIRadialBar _radialBar;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MT_PlayerHeightType SittingHeight;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool _overrideHeight;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE8477C", Offset = "0xE8477C")]
		public float OverrideSittingHeight;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _overrideStandLocation;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE847C4", Offset = "0xE847C4")]
		public Transform OverrideStandLocation;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool ShowStandUIFromAnyAngle;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool ShouldLockSit;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool SitFromTriggerOnly;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnPlayerSit;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent OnPlayerStand;

		[Token(Token = "0x14000044")]
		public event Action OnDisabled
		{
			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0x12AA2F0", Offset = "0x12AA2F0", VA = "0x12AA2F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9332C", Offset = "0xE9332C")]
			add
			{
			}
			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0x12AA390", Offset = "0x12AA390", VA = "0x12AA390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9333C", Offset = "0xE9333C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x12AA430", Offset = "0x12AA430", VA = "0x12AA430")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x12AA54C", Offset = "0x12AA54C", VA = "0x12AA54C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x12AA5E0", Offset = "0x12AA5E0", VA = "0x12AA5E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x12AA684", Offset = "0x12AA684", VA = "0x12AA684")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x12AA6C0", Offset = "0x12AA6C0", VA = "0x12AA6C0")]
		public void ShowUI()
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x12AA824", Offset = "0x12AA824", VA = "0x12AA824")]
		public void HideUI()
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x12AA948", Offset = "0x12AA948", VA = "0x12AA948")]
		public void FillCircle(float duration)
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x12AA970", Offset = "0x12AA970", VA = "0x12AA970")]
		public void EmptyBar()
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x12AA98C", Offset = "0x12AA98C", VA = "0x12AA98C")]
		public MT_Sittable()
		{
		}
	}
	[Token(Token = "0x2000560")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE6B9B4", Offset = "0xE6B9B4")]
	public class MT_SnapTurn : MonoBehaviour, Controls.ISnapTurnActions
	{
		[Token(Token = "0x2000561")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B9EC", Offset = "0xE6B9EC")]
		private sealed class <WaitDebounceTime>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_SnapTurn <>4__this;

			[Token(Token = "0x4001A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <counter>5__2;

			[Token(Token = "0x17000338")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E36")]
				[Address(RVA = "0x32B93B4", Offset = "0x32B93B4", VA = "0x32B93B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000339")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E38")]
				[Address(RVA = "0x32B93FC", Offset = "0x32B93FC", VA = "0x32B93FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E33")]
			[Address(RVA = "0x32B929C", Offset = "0x32B929C", VA = "0x32B929C")]
			[DebuggerHidden]
			public <WaitDebounceTime>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001E34")]
			[Address(RVA = "0x32B92C8", Offset = "0x32B92C8", VA = "0x32B92C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E35")]
			[Address(RVA = "0x32B92CC", Offset = "0x32B92CC", VA = "0x32B92CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E37")]
			[Address(RVA = "0x32B93BC", Offset = "0x32B93BC", VA = "0x32B93BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8480C", Offset = "0xE8480C")]
		private float rotateAngle;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE84850", Offset = "0xE84850")]
		private bool isInstantSnap;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE84888", Offset = "0xE84888")]
		private float lerpSpeed;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Ease lerpEase;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE848DC", Offset = "0xE848DC")]
		private bool hasWaitingTime;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE84914", Offset = "0xE84914")]
		private float waitTime;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE84954", Offset = "0xE84954")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE84954", Offset = "0xE84954")]
		[SerializeField]
		private float deadZoneRadius;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE849A4", Offset = "0xE849A4")]
		private float totalConeAngle;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE849E8", Offset = "0xE849E8")]
		private bool willStaggerTurn;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE84A20", Offset = "0xE84A20")]
		private float staggeredWaitTime;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Controls StaticControls;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Controls _controls;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isWaiting;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _isPerforming;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _currentWaitTime;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine _debounceCoroutine;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private DG.Tweening.Sequence _sequence;

		[Token(Token = "0x4001A1C")]
		private const float FullSideAngle = 180f;

		[Token(Token = "0x4001A1D")]
		private const float SpeedFactor = 10f;

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x12ADBDC", Offset = "0x12ADBDC", VA = "0x12ADBDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x12ADCCC", Offset = "0x12ADCCC", VA = "0x12ADCCC")]
		public bool GetIsSnapTurn()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x12ADCD4", Offset = "0x12ADCD4", VA = "0x12ADCD4")]
		public void SetIsSnapTurn(bool newIsInstantSnap)
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0x12ADCE0", Offset = "0x12ADCE0", VA = "0x12ADCE0")]
		public int GetSnapTurnAngle()
		{
			return default(int);
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x12ADD04", Offset = "0x12ADD04", VA = "0x12ADD04")]
		public void SetSnapTurnAngle(int newRotateAngle)
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x12ADD10", Offset = "0x12ADD10", VA = "0x12ADD10", Slot = "4")]
		public void OnRotate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x12AE0E8", Offset = "0x12AE0E8", VA = "0x12AE0E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9334C", Offset = "0xE9334C")]
		private IEnumerator WaitDebounceTime()
		{
			return null;
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x12AE160", Offset = "0x12AE160", VA = "0x12AE160")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x12AE1D0", Offset = "0x12AE1D0", VA = "0x12AE1D0")]
		public MT_SnapTurn()
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x12AE078", Offset = "0x12AE078", VA = "0x12AE078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE933AC", Offset = "0xE933AC")]
		private void <OnRotate>g__StopWaiting|24_0()
		{
		}
	}
	[Token(Token = "0x2000562")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE6B9FC", Offset = "0xE6B9FC")]
	public class MT_TeleportSnapPoint : MonoBehaviour
	{
		[Token(Token = "0x2000563")]
		private enum ForcedStance
		{
			[Token(Token = "0x4001A2F")]
			No,
			[Token(Token = "0x4001A30")]
			ForcedStanding,
			[Token(Token = "0x4001A31")]
			ForcedCrouch
		}

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform cylinderTransform;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ForcedStance forcedStance;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onTeleported;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject visuals;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool canTeleportWithinSnapzone;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _playerRig;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _snapPointPosition;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _originalScale;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _largeScale;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider _snapPointCollider;

		[Token(Token = "0x4001A2C")]
		private const float MinimumDistanceToPlayer = 0.1f;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _previousAim;

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x12B4D50", Offset = "0x12B4D50", VA = "0x12B4D50")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x12B4EAC", Offset = "0x12B4EAC", VA = "0x12B4EAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0x12B4E24", Offset = "0x12B4E24", VA = "0x12B4E24")]
		private void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x12B4FA4", Offset = "0x12B4FA4", VA = "0x12B4FA4")]
		public void SetMarkerSize(bool large)
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x12B4FF8", Offset = "0x12B4FF8", VA = "0x12B4FF8")]
		public void TeleportedToPoint()
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0x12B502C", Offset = "0x12B502C", VA = "0x12B502C")]
		public void MatchPlayerStance()
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0x12B5098", Offset = "0x12B5098", VA = "0x12B5098")]
		public MT_TeleportSnapPoint()
		{
		}
	}
	[Token(Token = "0x2000564")]
	public enum MovementType
	{
		[Token(Token = "0x4001A33")]
		TeleportBlink,
		[Token(Token = "0x4001A34")]
		TeleportShift
	}
	[Token(Token = "0x2000565")]
	public class PlayerController : HVRPlayerController
	{
		[Token(Token = "0x2000566")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6BA5C", Offset = "0xE6BA5C")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4001A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerController <>4__this;

			[Token(Token = "0x4001A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float heightOffset;

			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0x32C50F4", Offset = "0x32C50F4", VA = "0x32C50F4")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0x32C50FC", Offset = "0x32C50FC", VA = "0x32C50FC")]
			internal void <ChangeHeightOffset>b__0()
			{
			}

			[Token(Token = "0x6001E60")]
			[Address(RVA = "0x32C5128", Offset = "0x32C5128", VA = "0x32C5128")]
			internal void <ChangeHeightOffset>b__1()
			{
			}
		}

		[Token(Token = "0x2000567")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6BA6C", Offset = "0xE6BA6C")]
		private sealed class <ResetHandsCoroutine>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerController <>4__this;

			[Token(Token = "0x4001A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float direction;

			[Token(Token = "0x1700033C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E64")]
				[Address(RVA = "0x32C52E0", Offset = "0x32C52E0", VA = "0x32C52E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E66")]
				[Address(RVA = "0x32C5328", Offset = "0x32C5328", VA = "0x32C5328", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E61")]
			[Address(RVA = "0x32C5158", Offset = "0x32C5158", VA = "0x32C5158")]
			[DebuggerHidden]
			public <ResetHandsCoroutine>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6001E62")]
			[Address(RVA = "0x32C5184", Offset = "0x32C5184", VA = "0x32C5184", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E63")]
			[Address(RVA = "0x32C5188", Offset = "0x32C5188", VA = "0x32C5188", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E65")]
			[Address(RVA = "0x32C52E8", Offset = "0x32C52E8", VA = "0x32C52E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public bool AllowContinuousMovement;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public float MaxHeight;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE84AB0", Offset = "0xE84AB0")]
		public float StandHeight;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE84AE8", Offset = "0xE84AE8")]
		public float StandMaxHeight;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE84B20", Offset = "0xE84B20")]
		[SerializeField]
		private float fadeInDuration;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private float fadeHoldDuration;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[SerializeField]
		private float fadeOutDuration;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private bool _heightChangeInProgress;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private float _cachedStandHeight;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private HeightAdjustmentType _heightAdjustmentType;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE84B9C", Offset = "0xE84B9C")]
		private HeightAdjustState <HeightAdjustState>k__BackingField;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float _totalCurrentSmoothRotation;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public UnityEvent OnPlayerRotatedBySnapAmountUsingInput;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Coroutine _handResetCoroutine;

		[Token(Token = "0x1700033A")]
		public HeightAdjustmentType HeightAdjustmentType
		{
			[Token(Token = "0x6001E42")]
			[Address(RVA = "0x1082C94", Offset = "0x1082C94", VA = "0x1082C94")]
			get
			{
				return default(HeightAdjustmentType);
			}
			[Token(Token = "0x6001E43")]
			[Address(RVA = "0x1082C9C", Offset = "0x1082C9C", VA = "0x1082C9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700033B")]
		public HeightAdjustState HeightAdjustState
		{
			[Token(Token = "0x6001E44")]
			[Address(RVA = "0x1082CC4", Offset = "0x1082CC4", VA = "0x1082CC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9342C", Offset = "0xE9342C")]
			get
			{
				return default(HeightAdjustState);
			}
			[Token(Token = "0x6001E45")]
			[Address(RVA = "0x1082CCC", Offset = "0x1082CCC", VA = "0x1082CCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9343C", Offset = "0xE9343C")]
			private set
			{
			}
		}

		[Token(Token = "0x14000045")]
		private event Action OnHeightAdjustmentTypeChanged
		{
			[Token(Token = "0x6001E40")]
			[Address(RVA = "0x1082B4C", Offset = "0x1082B4C", VA = "0x1082B4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9340C", Offset = "0xE9340C")]
			add
			{
			}
			[Token(Token = "0x6001E41")]
			[Address(RVA = "0x1082BF0", Offset = "0x1082BF0", VA = "0x1082BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9341C", Offset = "0xE9341C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x1082CD4", Offset = "0x1082CD4", VA = "0x1082CD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x1082D58", Offset = "0x1082D58", VA = "0x1082D58")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x1082DD4", Offset = "0x1082DD4", VA = "0x1082DD4")]
		private void SetCanSprint()
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x1082DE8", Offset = "0x1082DE8", VA = "0x1082DE8")]
		public void ForceHMDUpdate()
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x1082DF8", Offset = "0x1082DF8", VA = "0x1082DF8")]
		private void OnTypeChanged()
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x1082E6C", Offset = "0x1082E6C", VA = "0x1082E6C", Slot = "29")]
		protected override void CheckCrouching()
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0x1082FF0", Offset = "0x1082FF0", VA = "0x1082FF0")]
		private void CheckHeightLimits()
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0x1082ED4", Offset = "0x1082ED4", VA = "0x1082ED4")]
		private void HandleCrouchOnly()
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x108309C", Offset = "0x108309C", VA = "0x108309C")]
		private void HandleStandOnly()
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0x1082F68", Offset = "0x1082F68", VA = "0x1082F68")]
		private void HandleBoth()
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x1083194", Offset = "0x1083194", VA = "0x1083194")]
		public void OverrideStandHeight(float standHeight)
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x10831A4", Offset = "0x10831A4", VA = "0x10831A4")]
		public void ResetStandHeight()
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x1083130", Offset = "0x1083130", VA = "0x1083130")]
		private void Stand(bool doFade = true)
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x1083370", Offset = "0x1083370", VA = "0x1083370", Slot = "30")]
		protected override void Crouch()
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x1082E50", Offset = "0x1082E50", VA = "0x1082E50")]
		private void ResetHeightOffset()
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x10833CC", Offset = "0x10833CC", VA = "0x10833CC")]
		public void ResetHeightOffsetInstant()
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x10831B0", Offset = "0x10831B0", VA = "0x10831B0")]
		private void ChangeHeightOffset(float heightOffset, bool doFade = true)
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x1083448", Offset = "0x1083448", VA = "0x1083448")]
		public void ForceStand(bool doFade = true)
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0x1083450", Offset = "0x1083450", VA = "0x1083450")]
		public void ForceCrouch()
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x1083460", Offset = "0x1083460", VA = "0x1083460", Slot = "18")]
		protected override void HandleSnapRotation()
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x10833EC", Offset = "0x10833EC", VA = "0x10833EC")]
		public void ResetHands(float direction = 0f)
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x10835A4", Offset = "0x10835A4", VA = "0x10835A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9344C", Offset = "0xE9344C")]
		private IEnumerator ResetHandsCoroutine(float direction)
		{
			return null;
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x108362C", Offset = "0x108362C", VA = "0x108362C", Slot = "19")]
		protected override void HandleSmoothRotation()
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x10837A0", Offset = "0x10837A0", VA = "0x10837A0")]
		public PlayerController()
		{
		}
	}
	[Token(Token = "0x2000568")]
	public enum HeightAdjustState
	{
		[Token(Token = "0x4001A4B")]
		None,
		[Token(Token = "0x4001A4C")]
		Crouching,
		[Token(Token = "0x4001A4D")]
		Standing
	}
	[Token(Token = "0x2000569")]
	public enum HeightAdjustmentType
	{
		[Token(Token = "0x4001A4F")]
		None,
		[Token(Token = "0x4001A50")]
		CrouchOnly,
		[Token(Token = "0x4001A51")]
		StandOnly,
		[Token(Token = "0x4001A52")]
		Both
	}
	[Token(Token = "0x200056A")]
	public sealed class PlayerPublic : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200056B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6BA7C", Offset = "0xE6BA7C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MT_PlayerToObj_Sender, bool> <>9__20_0;

			[Token(Token = "0x6001E76")]
			[Address(RVA = "0x32C63F8", Offset = "0x32C63F8", VA = "0x32C63F8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E77")]
			[Address(RVA = "0x32C6400", Offset = "0x32C6400", VA = "0x32C6400")]
			internal bool <get_MainCollider>b__20_0(MT_PlayerToObj_Sender x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlayerPublic _internalInstance;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HVRPlayerController hvrPlayerController;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform transformToTrack;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BodySlotsInterop bodySlotsInterop;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MT_PlayerToObj_Sender _internalSender;

		[Token(Token = "0x1700033E")]
		public static bool IsCrouched
		{
			[Token(Token = "0x6001E68")]
			[Address(RVA = "0x1087DC8", Offset = "0x1087DC8", VA = "0x1087DC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033F")]
		public static Vector3 Position
		{
			[Token(Token = "0x6001E69")]
			[Address(RVA = "0x1087E28", Offset = "0x1087E28", VA = "0x1087E28")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000340")]
		public static Transform TrackingTransform
		{
			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0x1087E88", Offset = "0x1087E88", VA = "0x1087E88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000341")]
		public static BodySlotsInterop BodySlotsInterop
		{
			[Token(Token = "0x6001E6B")]
			[Address(RVA = "0x1087EE0", Offset = "0x1087EE0", VA = "0x1087EE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000342")]
		private static Collider MainCollider
		{
			[Token(Token = "0x6001E71")]
			[Address(RVA = "0x108872C", Offset = "0x108872C", VA = "0x108872C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x1087D74", Offset = "0x1087D74", VA = "0x1087D74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x1087F38", Offset = "0x1087F38", VA = "0x1087F38")]
		public static bool IsPlayerHoldingGun()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x10880BC", Offset = "0x10880BC", VA = "0x10880BC")]
		public static bool OutOfAmmo()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x1088338", Offset = "0x1088338", VA = "0x1088338")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE934FC", Offset = "0xE934FC")]
		public static void ClearAmmo()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x10885DC", Offset = "0x10885DC", VA = "0x10885DC")]
		public static Vector3 StandingPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x1088670", Offset = "0x1088670", VA = "0x1088670")]
		public static Vector3 GetTopOfPlayer()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x1088980", Offset = "0x1088980", VA = "0x1088980")]
		public static bool IsMainCollider(Collider c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x10889F4", Offset = "0x10889F4", VA = "0x10889F4")]
		public static bool IsPlayerGameObject(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x1088A9C", Offset = "0x1088A9C", VA = "0x1088A9C")]
		public PlayerPublic()
		{
		}
	}
	[Token(Token = "0x200056C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6BA8C", Offset = "0xE6BA8C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6BA8C", Offset = "0xE6BA8C")]
	public class DisableJournalAndHolsterButtonsNode : CallableActionNode
	{
		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x1008D9C", Offset = "0x1008D9C", VA = "0x1008D9C", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x1008DC0", Offset = "0x1008DC0", VA = "0x1008DC0")]
		public DisableJournalAndHolsterButtonsNode()
		{
		}
	}
	[Token(Token = "0x200056D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6BAF0", Offset = "0xE6BAF0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6BAF0", Offset = "0xE6BAF0")]
	public class EnableJournalHolsterNode : CallableActionNode
	{
		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x100BC7C", Offset = "0x100BC7C", VA = "0x100BC7C", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x100BCA0", Offset = "0x100BCA0", VA = "0x100BCA0")]
		public EnableJournalHolsterNode()
		{
		}
	}
	[Token(Token = "0x200056E")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6BB54", Offset = "0xE6BB54")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6BB54", Offset = "0xE6BB54")]
	public class EnableNextPageButtonNode : CallableActionNode
	{
		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x100BCA8", Offset = "0x100BCA8", VA = "0x100BCA8", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x100BCF8", Offset = "0x100BCF8", VA = "0x100BCF8")]
		public EnableNextPageButtonNode()
		{
		}
	}
	[Token(Token = "0x200056F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6BBB8", Offset = "0xE6BBB8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6BBB8", Offset = "0xE6BBB8")]
	public class EnablePrevPageAndTabButtonsNode : CallableActionNode
	{
		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x100BD08", Offset = "0x100BD08", VA = "0x100BD08", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0x100BD58", Offset = "0x100BD58", VA = "0x100BD58")]
		public EnablePrevPageAndTabButtonsNode()
		{
		}
	}
	[Token(Token = "0x2000570")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6BC1C", Offset = "0xE6BC1C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6BC1C", Offset = "0xE6BC1C")]
	public class DisableAllHolsters : CallableActionNode
	{
		[Token(Token = "0x6001E80")]
		[Address(RVA = "0x10089CC", Offset = "0x10089CC", VA = "0x10089CC", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0x10089F0", Offset = "0x10089F0", VA = "0x10089F0")]
		public DisableAllHolsters()
		{
		}
	}
	[Token(Token = "0x2000571")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6BC80", Offset = "0xE6BC80")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6BC80", Offset = "0xE6BC80")]
	public class EnableAllHolsters : CallableActionNode
	{
		[Token(Token = "0x6001E82")]
		[Address(RVA = "0x100B910", Offset = "0x100B910", VA = "0x100B910", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0x100B934", Offset = "0x100B934", VA = "0x100B934")]
		public EnableAllHolsters()
		{
		}
	}
	[Token(Token = "0x2000572")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6BCE4", Offset = "0xE6BCE4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6BCE4", Offset = "0xE6BCE4")]
	public class ToggleHolsterWithName : CallableActionNode<string, bool>
	{
		[Token(Token = "0x6001E84")]
		[Address(RVA = "0x1352138", Offset = "0x1352138", VA = "0x1352138", Slot = "12")]
		public override void Invoke(string id, bool active)
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0x1352174", Offset = "0x1352174", VA = "0x1352174")]
		public ToggleHolsterWithName()
		{
		}
	}
	[Token(Token = "0x2000573")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6BD48", Offset = "0xE6BD48")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6BD48", Offset = "0xE6BD48")]
	public class GetPlayerBodySlotsTransform : CallableFunctionNode<Transform>
	{
		[Token(Token = "0x6001E86")]
		[Address(RVA = "0x10D1E6C", Offset = "0x10D1E6C", VA = "0x10D1E6C", Slot = "12")]
		public override Transform Invoke()
		{
			return null;
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0x10D1E90", Offset = "0x10D1E90", VA = "0x10D1E90")]
		public GetPlayerBodySlotsTransform()
		{
		}
	}
	[Token(Token = "0x2000574")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6BDAC", Offset = "0xE6BDAC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6BDAC", Offset = "0xE6BDAC")]
	public class GetPlayerSocketLinker : CallableFunctionNode<SocketLinker>
	{
		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x10D1EDC", Offset = "0x10D1EDC", VA = "0x10D1EDC", Slot = "12")]
		public override SocketLinker Invoke()
		{
			return null;
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x10D1F00", Offset = "0x10D1F00", VA = "0x10D1F00")]
		public GetPlayerSocketLinker()
		{
		}
	}
	[Token(Token = "0x2000575")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6BE10", Offset = "0xE6BE10")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6BE10", Offset = "0xE6BE10")]
	public class AddSocketToSocketLinker : CallableActionNode<SocketLinker, HVRSocket>
	{
		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x13BCBC4", Offset = "0x13BCBC4", VA = "0x13BCBC4", Slot = "12")]
		public override void Invoke(SocketLinker socketLinker, HVRSocket socket)
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x13BCBE4", Offset = "0x13BCBE4", VA = "0x13BCBE4")]
		public AddSocketToSocketLinker()
		{
		}
	}
	[Token(Token = "0x2000576")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6BE74", Offset = "0xE6BE74")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6BE74", Offset = "0xE6BE74")]
	public class UpdateGrabbableLinkToSocket : CallableActionNode<SocketLinker, SocketableToSocketLinker>
	{
		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x1357694", Offset = "0x1357694", VA = "0x1357694", Slot = "12")]
		public override void Invoke(SocketLinker socketLinker, SocketableToSocketLinker socketableToSocketLinker)
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x13576B4", Offset = "0x13576B4", VA = "0x13576B4")]
		public UpdateGrabbableLinkToSocket()
		{
		}
	}
	[Token(Token = "0x2000577")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6BED8", Offset = "0xE6BED8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6BED8", Offset = "0xE6BED8")]
	public class RemoveSocketFromSocketLinker : CallableActionNode<SocketLinker, HVRSocket>
	{
		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x32CB4D4", Offset = "0x32CB4D4", VA = "0x32CB4D4", Slot = "12")]
		public override void Invoke(SocketLinker socketLinker, HVRSocket socket)
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x32CB554", Offset = "0x32CB554", VA = "0x32CB554")]
		public RemoveSocketFromSocketLinker()
		{
		}
	}
	[Token(Token = "0x2000578")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6BF3C", Offset = "0xE6BF3C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6BF3C", Offset = "0xE6BF3C")]
	public class IsPlayerCrouchedNode : CallableFunctionNode<bool>
	{
		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x10DF984", Offset = "0x10DF984", VA = "0x10DF984", Slot = "12")]
		public override bool Invoke()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x10DF98C", Offset = "0x10DF98C", VA = "0x10DF98C")]
		public IsPlayerCrouchedNode()
		{
		}
	}
	[Token(Token = "0x2000579")]
	public class TeleportMarker : HVRTeleportMarker
	{
		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Teleporter teleporter;

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x32E4908", Offset = "0x32E4908", VA = "0x32E4908", Slot = "9")]
		protected override void UpdateMaterials()
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x32E4AE0", Offset = "0x32E4AE0", VA = "0x32E4AE0")]
		public TeleportMarker()
		{
		}
	}
	[Token(Token = "0x200057A")]
	public enum TeleportTriggerType
	{
		[Token(Token = "0x4001A5C")]
		Release,
		[Token(Token = "0x4001A5D")]
		Trigger
	}
	[Token(Token = "0x200057B")]
	public class Teleporter : HVRTeleporter
	{
		[Token(Token = "0x200057C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6BFA0", Offset = "0xE6BFA0")]
		private sealed class <TeleportCooldown>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Teleporter <>4__this;

			[Token(Token = "0x4001A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <cooldownTimeElapsed>5__2;

			[Token(Token = "0x17000345")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EB5")]
				[Address(RVA = "0x2166E04", Offset = "0x2166E04", VA = "0x2166E04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000346")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EB7")]
				[Address(RVA = "0x2166E4C", Offset = "0x2166E4C", VA = "0x2166E4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0x2166D20", Offset = "0x2166D20", VA = "0x2166D20")]
			[DebuggerHidden]
			public <TeleportCooldown>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0x2166D4C", Offset = "0x2166D4C", VA = "0x2166D4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0x2166D50", Offset = "0x2166D50", VA = "0x2166D50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0x2166E0C", Offset = "0x2166E0C", VA = "0x2166E0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE84BEC", Offset = "0xE84BEC")]
		public TeleportTriggerType TeleportTriggerType;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public bool DisableTeleport;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private PlayerInputs _playerInputs;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private bool _directionalTeleport;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
		private bool _isSnapPointTeleport;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private Vector3 _teleportDestinationDirection;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private MT_TeleportSnapPoint _currentTeleportSnapPoint;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE84C24", Offset = "0xE84C24")]
		public Color CooldownColor;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		private float cooldownTime;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		public bool IsCoolingDown;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x235")]
		private bool _previousCoolingDown;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Coroutine _cooldownCoroutine;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int TintColor;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private LayerMask teleportBlockingMask;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private MT_Portal _portal;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		private float crouchDist;

		[Token(Token = "0x17000343")]
		public override HVRHandSide TeleportHand
		{
			[Token(Token = "0x6001E94")]
			[Address(RVA = "0x32E4B44", Offset = "0x32E4B44", VA = "0x32E4B44", Slot = "4")]
			get
			{
				return default(HVRHandSide);
			}
		}

		[Token(Token = "0x17000344")]
		private static bool AllowContinuous
		{
			[Token(Token = "0x6001E95")]
			[Address(RVA = "0x32E4BA4", Offset = "0x32E4BA4", VA = "0x32E4BA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x32E4BD0", Offset = "0x32E4BD0", VA = "0x32E4BD0", Slot = "10")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x32E4C6C", Offset = "0x32E4C6C", VA = "0x32E4C6C")]
		public void EnableExternal()
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x32E4C7C", Offset = "0x32E4C7C", VA = "0x32E4C7C")]
		public void DisableExternal()
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x32E4C94", Offset = "0x32E4C94", VA = "0x32E4C94", Slot = "16")]
		protected override void EnabledCheck()
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x32E4CB4", Offset = "0x32E4CB4", VA = "0x32E4CB4", Slot = "27")]
		protected override bool CheckCanTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x32E4CF0", Offset = "0x32E4CF0", VA = "0x32E4CF0", Slot = "18")]
		protected override void CheckTeleport()
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x32E4F70", Offset = "0x32E4F70", VA = "0x32E4F70", Slot = "20")]
		protected override void Raycast()
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x32E578C", Offset = "0x32E578C", VA = "0x32E578C", Slot = "70")]
		protected virtual bool ProjectDownwardRayIncludeTriggers(Vector3 origin, out RaycastHit hit, float length)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x32E5548", Offset = "0x32E5548", VA = "0x32E5548")]
		private void CheckSnapPoints()
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x32E54A0", Offset = "0x32E54A0", VA = "0x32E54A0")]
		private bool IsTeleportingHandValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x32E5828", Offset = "0x32E5828", VA = "0x32E5828", Slot = "25")]
		protected override void OnTeleportDeactivated()
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x32E4E84", Offset = "0x32E4E84", VA = "0x32E4E84")]
		private void CheckTeleportValid()
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x32E58A4", Offset = "0x32E58A4", VA = "0x32E58A4", Slot = "59")]
		protected override void OnBeforeTeleport()
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x32E5934", Offset = "0x32E5934", VA = "0x32E5934", Slot = "60")]
		protected override void OnAfterTeleport()
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x32E5AF0", Offset = "0x32E5AF0", VA = "0x32E5AF0")]
		private void SnapPointTeleportedEvents()
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x32E4DC0", Offset = "0x32E4DC0", VA = "0x32E4DC0")]
		private bool IsDirectionalTeleportActivated()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x32E4ED8", Offset = "0x32E4ED8", VA = "0x32E4ED8")]
		private bool IsDirectionalTeleportDeactivated()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x32E4E14", Offset = "0x32E4E14", VA = "0x32E4E14")]
		private void OnDirectionalTeleportActivated()
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x32E4EF4", Offset = "0x32E4EF4", VA = "0x32E4EF4")]
		private void OnDirectionalTeleportDeactivated()
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x32E4E4C", Offset = "0x32E4E4C", VA = "0x32E4E4C")]
		private bool IsTeleportTriggered()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x32E5C54", Offset = "0x32E5C54", VA = "0x32E5C54", Slot = "50")]
		protected override void UpdateTeleportMarker(bool isTeleportValid)
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0x32E5DE0", Offset = "0x32E5DE0", VA = "0x32E5DE0", Slot = "32")]
		protected override bool CheckDestinationLineOfSight(Vector3 destination)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0x32E5BDC", Offset = "0x32E5BDC", VA = "0x32E5BDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE93574", Offset = "0xE93574")]
		private IEnumerator TeleportCooldown()
		{
			return null;
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x32E5F98", Offset = "0x32E5F98", VA = "0x32E5F98", Slot = "22")]
		protected override void CheckValidTeleportChanged(bool previousValid)
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x32E5FF0", Offset = "0x32E5FF0", VA = "0x32E5FF0", Slot = "55")]
		public override void OnValidTeleportChanged(bool isTeleportValid)
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x32E61D4", Offset = "0x32E61D4", VA = "0x32E61D4", Slot = "30")]
		protected override bool CheckCanReachDestination(Vector3 destination)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x32E6280", Offset = "0x32E6280", VA = "0x32E6280")]
		public Teleporter()
		{
		}
	}
	[Token(Token = "0x200057D")]
	public sealed class PlayerMouth : MonoBehaviour
	{
		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _ignitedCig;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action onInhale;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action onExhale;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip[] cigInhaleClips;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip[] cigExhaleClips;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioSource mouthSource;

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x10875A0", Offset = "0x10875A0", VA = "0x10875A0")]
		public void IgniteCig()
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x10875AC", Offset = "0x10875AC", VA = "0x10875AC")]
		public void ExtinguishCig()
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x10875B4", Offset = "0x10875B4", VA = "0x10875B4")]
		public void RemoveCig(MT_DelayedEvent delayedEvent)
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0x10875E0", Offset = "0x10875E0", VA = "0x10875E0")]
		public void PlaySFXInhale()
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0x108761C", Offset = "0x108761C", VA = "0x108761C")]
		public void TriggerInhaleSFX()
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x108768C", Offset = "0x108768C", VA = "0x108768C")]
		public void PlaySFXExhale()
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x10876CC", Offset = "0x10876CC", VA = "0x10876CC")]
		public void TriggerExhaleSFX()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x108773C", Offset = "0x108773C", VA = "0x108773C")]
		public PlayerMouth()
		{
		}
	}
}
namespace MazeTheory.VFX
{
	[Token(Token = "0x200057E")]
	public sealed class MT_VFXGunFlowScriptTrigger : MonoBehaviour
	{
		[Token(Token = "0x200057F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6BFB0", Offset = "0xE6BFB0")]
		private sealed class <MuzzleFlashCo>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_VFXGunFlowScriptTrigger <>4__this;

			[Token(Token = "0x17000347")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EC6")]
				[Address(RVA = "0x32BA6F4", Offset = "0x32BA6F4", VA = "0x32BA6F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000348")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EC8")]
				[Address(RVA = "0x32BA73C", Offset = "0x32BA73C", VA = "0x32BA73C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EC3")]
			[Address(RVA = "0x32BA638", Offset = "0x32BA638", VA = "0x32BA638")]
			[DebuggerHidden]
			public <MuzzleFlashCo>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0x32BA664", Offset = "0x32BA664", VA = "0x32BA664", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EC5")]
			[Address(RVA = "0x32BA668", Offset = "0x32BA668", VA = "0x32BA668", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0x32BA6FC", Offset = "0x32BA6FC", VA = "0x32BA6FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform firePoint;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject muzzleFlashGameObj;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MT_VFX_BulletTrail bulletTrail;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ZA_CombatSFX combatSfx;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LayerMask hitMask;

		[Token(Token = "0x4001A7D")]
		private const float MaxDistance = 50f;

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x113C68C", Offset = "0x113C68C", VA = "0x113C68C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE93624", Offset = "0xE93624")]
		private IEnumerator MuzzleFlashCo()
		{
			return null;
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x113C704", Offset = "0x113C704", VA = "0x113C704")]
		public void FireGunVFX()
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x113CBD4", Offset = "0x113CBD4", VA = "0x113CBD4")]
		public MT_VFXGunFlowScriptTrigger()
		{
		}
	}
	[Token(Token = "0x2000580")]
	public sealed class MT_OverlayVFX : MonoBehaviour
	{
		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_Fade fadeController;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _parent;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isRegistered;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE84D1C", Offset = "0xE84D1C")]
		private static PlayerDamageVisuals <PlayerDamageVisuals>k__BackingField;

		[Token(Token = "0x17000349")]
		public MT_Fade FadeController
		{
			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0x110512C", Offset = "0x110512C", VA = "0x110512C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034A")]
		public static PlayerDamageVisuals PlayerDamageVisuals
		{
			[Token(Token = "0x6001ECB")]
			[Address(RVA = "0x1105188", Offset = "0x1105188", VA = "0x1105188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE936E4", Offset = "0xE936E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0x1105134", Offset = "0x1105134", VA = "0x1105134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE936D4", Offset = "0xE936D4")]
			set
			{
			}
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x11051D4", Offset = "0x11051D4", VA = "0x11051D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x11052C4", Offset = "0x11052C4", VA = "0x11052C4")]
		public static void TryResetPlayerDamageVisuals()
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x11053B0", Offset = "0x11053B0", VA = "0x11053B0")]
		public MT_OverlayVFX()
		{
		}
	}
	[Token(Token = "0x2000581")]
	public sealed class PTSDLocationEffects : MonoBehaviour
	{
		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x107C8FC", Offset = "0x107C8FC", VA = "0x107C8FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x107C7D0", Offset = "0x107C7D0", VA = "0x107C7D0")]
		public void TriggerIndoorRain()
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x107C8F0", Offset = "0x107C8F0", VA = "0x107C8F0")]
		public void DisableIndoorRain()
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x107C950", Offset = "0x107C950", VA = "0x107C950")]
		public PTSDLocationEffects()
		{
		}
	}
	[Token(Token = "0x2000582")]
	public sealed class BlinkerController : MonoBehaviour
	{
		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject vignetteGameObject;

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x13C34C8", Offset = "0x13C34C8", VA = "0x13C34C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x13C34E8", Offset = "0x13C34E8", VA = "0x13C34E8")]
		public void EnableBlinker()
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x13C3570", Offset = "0x13C3570", VA = "0x13C3570")]
		public void DisableBlinker()
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0x13C35F8", Offset = "0x13C35F8", VA = "0x13C35F8")]
		public BlinkerController()
		{
		}
	}
	[Token(Token = "0x2000583")]
	public sealed class BrightnessAndContrast : MonoBehaviour
	{
		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Volume volume;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ColorAdjustments _colorAdjustments;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LiftGammaGain _liftGammaGain;

		[Token(Token = "0x1700034B")]
		public float Brightness
		{
			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0x1203134", Offset = "0x1203134", VA = "0x1203134")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ED8")]
			[Address(RVA = "0x1203160", Offset = "0x1203160", VA = "0x1203160")]
			set
			{
			}
		}

		[Token(Token = "0x1700034C")]
		public float Contrast
		{
			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0x1203190", Offset = "0x1203190", VA = "0x1203190")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0x12031BC", Offset = "0x12031BC", VA = "0x12031BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700034D")]
		public Vector4 Gamma
		{
			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0x12031EC", Offset = "0x12031EC", VA = "0x12031EC")]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0x1203218", Offset = "0x1203218", VA = "0x1203218")]
			set
			{
			}
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x1203248", Offset = "0x1203248", VA = "0x1203248")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0x120336C", Offset = "0x120336C", VA = "0x120336C")]
		public BrightnessAndContrast()
		{
		}
	}
	[Token(Token = "0x2000584")]
	public sealed class LoadingCurtain : MonoBehaviour
	{
		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject vignetteGameObject;

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x10168E8", Offset = "0x10168E8", VA = "0x10168E8")]
		public LoadingCurtain()
		{
		}
	}
	[Token(Token = "0x2000585")]
	public class ForceInstinctHighlight : MonoBehaviour
	{
		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color highlightColor;

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x100EB94", Offset = "0x100EB94", VA = "0x100EB94")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x100EDE4", Offset = "0x100EDE4", VA = "0x100EDE4")]
		public ForceInstinctHighlight()
		{
		}
	}
	[Token(Token = "0x2000586")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE6BFC0", Offset = "0xE6BFC0")]
	public class MT_VFX_Volume : MonoBehaviour
	{
		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MT_VFX_FogControls fogControls;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Bounds colliderBounds;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera cam;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool containedInBounds;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MT_VFXManager volumeController;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float falloffDistance;

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x113E884", Offset = "0x113E884", VA = "0x113E884")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x113E90C", Offset = "0x113E90C", VA = "0x113E90C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0x113ED5C", Offset = "0x113ED5C", VA = "0x113ED5C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x113ED60", Offset = "0x113ED60", VA = "0x113ED60")]
		public void RemoveImmediate()
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x113E910", Offset = "0x113E910", VA = "0x113E910")]
		private void Broadcast()
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x113EE68", Offset = "0x113EE68", VA = "0x113EE68")]
		public MT_VFX_Volume()
		{
		}
	}
	[Token(Token = "0x2000587")]
	public sealed class EyeMaterialSwap : MonoBehaviour
	{
		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material replacementMaterial;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<SkinnedMeshRenderer> meshRenderers;

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x100CD68", Offset = "0x100CD68", VA = "0x100CD68")]
		public void Replace()
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x100CE0C", Offset = "0x100CE0C", VA = "0x100CE0C")]
		public EyeMaterialSwap()
		{
		}
	}
	[Token(Token = "0x2000588")]
	public class FadeWithinDistance : MonoBehaviour
	{
		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float fadeDist;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer renderer;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double _amount;

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x100D190", Offset = "0x100D190", VA = "0x100D190")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x100D298", Offset = "0x100D298", VA = "0x100D298")]
		public FadeWithinDistance()
		{
		}
	}
	[Token(Token = "0x2000589")]
	public class TweenShaderFloatNode : LatentActionNode<string, float, float, float, Renderer, Ease>
	{
		[Token(Token = "0x200058A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C020", Offset = "0xE6C020")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material mat;

			[Token(Token = "0x4001A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string id;

			[Token(Token = "0x4001A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool finished;

			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0x2166E54", Offset = "0x2166E54", VA = "0x2166E54")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0x2166E5C", Offset = "0x2166E5C", VA = "0x2166E5C")]
			internal void <Invoke>b__0(float x)
			{
			}

			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0x2166E80", Offset = "0x2166E80", VA = "0x2166E80")]
			internal void <Invoke>b__1()
			{
			}
		}

		[Token(Token = "0x200058B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C030", Offset = "0xE6C030")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string id;

			[Token(Token = "0x4001A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Renderer renderer;

			[Token(Token = "0x4001A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float startVal;

			[Token(Token = "0x4001A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float endVal;

			[Token(Token = "0x4001A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float time;

			[Token(Token = "0x4001AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Ease ease;

			[Token(Token = "0x4001AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass0_0 <>8__1;

			[Token(Token = "0x1700034E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EF4")]
				[Address(RVA = "0x2167128", Offset = "0x2167128", VA = "0x2167128", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EF6")]
				[Address(RVA = "0x2167170", Offset = "0x2167170", VA = "0x2167170", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0x2166E8C", Offset = "0x2166E8C", VA = "0x2166E8C")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0x2166EB8", Offset = "0x2166EB8", VA = "0x2166EB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0x2166EBC", Offset = "0x2166EBC", VA = "0x2166EBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0x2167130", Offset = "0x2167130", VA = "0x2167130", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x13546CC", Offset = "0x13546CC", VA = "0x13546CC", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE936F4", Offset = "0xE936F4")]
		public override IEnumerator Invoke(string id, float time, float startVal, float endVal, Renderer renderer, Ease ease)
		{
			return null;
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x135478C", Offset = "0x135478C", VA = "0x135478C")]
		public TweenShaderFloatNode()
		{
		}
	}
	[Token(Token = "0x200058C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6C040", Offset = "0xE6C040")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6C040", Offset = "0xE6C040")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6C040", Offset = "0xE6C040")]
	public class VFXSetVanSpeedNode : LatentActionNode<float, float, float, Ease>
	{
		[Token(Token = "0x200058D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C0C8", Offset = "0xE6C0C8")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool finished;

			[Token(Token = "0x6001EF9")]
			[Address(RVA = "0x2167578", Offset = "0x2167578", VA = "0x2167578")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001EFA")]
			[Address(RVA = "0x2167580", Offset = "0x2167580", VA = "0x2167580")]
			internal void <Invoke>b__0()
			{
			}
		}

		[Token(Token = "0x200058E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C0D8", Offset = "0xE6C0D8")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float start;

			[Token(Token = "0x4001AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float end;

			[Token(Token = "0x4001AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x4001AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Ease ease;

			[Token(Token = "0x4001AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass0_0 <>8__1;

			[Token(Token = "0x17000350")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EFE")]
				[Address(RVA = "0x21677E8", Offset = "0x21677E8", VA = "0x21677E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000351")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F00")]
				[Address(RVA = "0x2167830", Offset = "0x2167830", VA = "0x2167830", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EFB")]
			[Address(RVA = "0x216758C", Offset = "0x216758C", VA = "0x216758C")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001EFC")]
			[Address(RVA = "0x21675B8", Offset = "0x21675B8", VA = "0x21675B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0x21675BC", Offset = "0x21675BC", VA = "0x21675BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0x21677F0", Offset = "0x21677F0", VA = "0x21677F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x13579F0", Offset = "0x13579F0", VA = "0x13579F0", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE937A4", Offset = "0xE937A4")]
		public override IEnumerator Invoke(float start, float end, float time, Ease ease)
		{
			return null;
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x1357A80", Offset = "0x1357A80", VA = "0x1357A80")]
		public VFXSetVanSpeedNode()
		{
		}
	}
	[Token(Token = "0x200058F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6C0E8", Offset = "0xE6C0E8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6C0E8", Offset = "0xE6C0E8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6C0E8", Offset = "0xE6C0E8")]
	public class VFXSetVanLightNode : LatentActionNode<float, float, float, Ease>
	{
		[Token(Token = "0x2000590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C170", Offset = "0xE6C170")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool finished;

			[Token(Token = "0x6001F03")]
			[Address(RVA = "0x2167178", Offset = "0x2167178", VA = "0x2167178")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001F04")]
			[Address(RVA = "0x2167180", Offset = "0x2167180", VA = "0x2167180")]
			internal void <Invoke>b__0()
			{
			}
		}

		[Token(Token = "0x2000591")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C180", Offset = "0xE6C180")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float start;

			[Token(Token = "0x4001AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float end;

			[Token(Token = "0x4001AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x4001AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Ease ease;

			[Token(Token = "0x4001AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass0_0 <>8__1;

			[Token(Token = "0x17000352")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F08")]
				[Address(RVA = "0x21673E8", Offset = "0x21673E8", VA = "0x21673E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000353")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F0A")]
				[Address(RVA = "0x2167430", Offset = "0x2167430", VA = "0x2167430", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F05")]
			[Address(RVA = "0x216718C", Offset = "0x216718C", VA = "0x216718C")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001F06")]
			[Address(RVA = "0x21671B8", Offset = "0x21671B8", VA = "0x21671B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F07")]
			[Address(RVA = "0x21671BC", Offset = "0x21671BC", VA = "0x21671BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F09")]
			[Address(RVA = "0x21673F0", Offset = "0x21673F0", VA = "0x21673F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x1357850", Offset = "0x1357850", VA = "0x1357850", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE93854", Offset = "0xE93854")]
		public override IEnumerator Invoke(float start, float end, float time, Ease ease)
		{
			return null;
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x13578E0", Offset = "0x13578E0", VA = "0x13578E0")]
		public VFXSetVanLightNode()
		{
		}
	}
	[Token(Token = "0x2000592")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6C190", Offset = "0xE6C190")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6C190", Offset = "0xE6C190")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6C190", Offset = "0xE6C190")]
	public class VFXSetVanSpeedNodeConst : LatentActionNode<float, float>
	{
		[Token(Token = "0x2000593")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C218", Offset = "0xE6C218")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float value;

			[Token(Token = "0x4001AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float time;

			[Token(Token = "0x17000354")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F10")]
				[Address(RVA = "0x2167928", Offset = "0x2167928", VA = "0x2167928", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000355")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F12")]
				[Address(RVA = "0x2167970", Offset = "0x2167970", VA = "0x2167970", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0x2167838", Offset = "0x2167838", VA = "0x2167838")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0x2167864", Offset = "0x2167864", VA = "0x2167864", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0x2167868", Offset = "0x2167868", VA = "0x2167868", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F11")]
			[Address(RVA = "0x2167930", Offset = "0x2167930", VA = "0x2167930", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x1357ACC", Offset = "0x1357ACC", VA = "0x1357ACC", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE93904", Offset = "0xE93904")]
		public override IEnumerator Invoke(float value, float time)
		{
			return null;
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x1357B44", Offset = "0x1357B44", VA = "0x1357B44")]
		public VFXSetVanSpeedNodeConst()
		{
		}
	}
	[Token(Token = "0x2000594")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6C228", Offset = "0xE6C228")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6C228", Offset = "0xE6C228")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6C228", Offset = "0xE6C228")]
	public class VFXSetVanLightNodeConst : LatentActionNode<float, float>
	{
		[Token(Token = "0x2000595")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C2B0", Offset = "0xE6C2B0")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float value;

			[Token(Token = "0x4001AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float time;

			[Token(Token = "0x17000356")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F18")]
				[Address(RVA = "0x2167528", Offset = "0x2167528", VA = "0x2167528", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000357")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F1A")]
				[Address(RVA = "0x2167570", Offset = "0x2167570", VA = "0x2167570", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F15")]
			[Address(RVA = "0x2167438", Offset = "0x2167438", VA = "0x2167438")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001F16")]
			[Address(RVA = "0x2167464", Offset = "0x2167464", VA = "0x2167464", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F17")]
			[Address(RVA = "0x2167468", Offset = "0x2167468", VA = "0x2167468", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F19")]
			[Address(RVA = "0x2167530", Offset = "0x2167530", VA = "0x2167530", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0x135792C", Offset = "0x135792C", VA = "0x135792C", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE939B4", Offset = "0xE939B4")]
		public override IEnumerator Invoke(float value, float time)
		{
			return null;
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0x13579A4", Offset = "0x13579A4", VA = "0x13579A4")]
		public VFXSetVanLightNodeConst()
		{
		}
	}
	[Token(Token = "0x2000596")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6C2C0", Offset = "0xE6C2C0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6C2C0", Offset = "0xE6C2C0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6C2C0", Offset = "0xE6C2C0")]
	public class VFXStopVanAnimNode : CallableActionNode
	{
		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x1357B90", Offset = "0x1357B90", VA = "0x1357B90", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x1357CE8", Offset = "0x1357CE8", VA = "0x1357CE8")]
		public VFXStopVanAnimNode()
		{
		}
	}
	[Token(Token = "0x2000597")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6C348", Offset = "0xE6C348")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6C348", Offset = "0xE6C348")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6C348", Offset = "0xE6C348")]
	public class FadeInVFX : LatentActionNode<float>
	{
		[Token(Token = "0x2000598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C3D0", Offset = "0xE6C3D0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool finished;

			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0x1030BDC", Offset = "0x1030BDC", VA = "0x1030BDC")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001F20")]
			[Address(RVA = "0x1030BE4", Offset = "0x1030BE4", VA = "0x1030BE4")]
			internal void <Invoke>b__0()
			{
			}

			[Token(Token = "0x6001F21")]
			[Address(RVA = "0x1030BF0", Offset = "0x1030BF0", VA = "0x1030BF0")]
			internal bool <Invoke>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000599")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C3E0", Offset = "0xE6C3E0")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x17000358")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F25")]
				[Address(RVA = "0x1030DDC", Offset = "0x1030DDC", VA = "0x1030DDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000359")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F27")]
				[Address(RVA = "0x1030E24", Offset = "0x1030E24", VA = "0x1030E24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F22")]
			[Address(RVA = "0x1030BF8", Offset = "0x1030BF8", VA = "0x1030BF8")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001F23")]
			[Address(RVA = "0x1030C24", Offset = "0x1030C24", VA = "0x1030C24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F24")]
			[Address(RVA = "0x1030C28", Offset = "0x1030C28", VA = "0x1030C28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F26")]
			[Address(RVA = "0x1030DE4", Offset = "0x1030DE4", VA = "0x1030DE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x100CF50", Offset = "0x100CF50", VA = "0x100CF50", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE93A64", Offset = "0xE93A64")]
		public override IEnumerator Invoke(float time)
		{
			return null;
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x100CFC4", Offset = "0x100CFC4", VA = "0x100CFC4")]
		public FadeInVFX()
		{
		}
	}
	[Token(Token = "0x200059A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6C3F0", Offset = "0xE6C3F0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6C3F0", Offset = "0xE6C3F0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6C3F0", Offset = "0xE6C3F0")]
	public class FadeOutVFX : LatentActionNode<float>
	{
		[Token(Token = "0x200059B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C478", Offset = "0xE6C478")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool finished;

			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0x1030FC8", Offset = "0x1030FC8", VA = "0x1030FC8")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0x1030FD0", Offset = "0x1030FD0", VA = "0x1030FD0")]
			internal void <Invoke>b__0()
			{
			}

			[Token(Token = "0x6001F2C")]
			[Address(RVA = "0x1030FDC", Offset = "0x1030FDC", VA = "0x1030FDC")]
			internal bool <Invoke>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200059C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C488", Offset = "0xE6C488")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x1700035A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F30")]
				[Address(RVA = "0x10311C8", Offset = "0x10311C8", VA = "0x10311C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F32")]
				[Address(RVA = "0x1031210", Offset = "0x1031210", VA = "0x1031210", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0x1030FE4", Offset = "0x1030FE4", VA = "0x1030FE4")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0x1031010", Offset = "0x1031010", VA = "0x1031010", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0x1031014", Offset = "0x1031014", VA = "0x1031014", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F31")]
			[Address(RVA = "0x10311D0", Offset = "0x10311D0", VA = "0x10311D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x100D0D0", Offset = "0x100D0D0", VA = "0x100D0D0", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE93B14", Offset = "0xE93B14")]
		public override IEnumerator Invoke(float time)
		{
			return null;
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x100D144", Offset = "0x100D144", VA = "0x100D144")]
		public FadeOutVFX()
		{
		}
	}
	[Token(Token = "0x200059D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6C498", Offset = "0xE6C498")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6C498", Offset = "0xE6C498")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6C498", Offset = "0xE6C498")]
	public class RapidBulletsTrigger : CallableActionNode<RapidFireBulletScript>
	{
		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x1090EB0", Offset = "0x1090EB0", VA = "0x1090EB0", Slot = "12")]
		public override void Invoke(RapidFireBulletScript bulletScript)
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x1090F14", Offset = "0x1090F14", VA = "0x1090F14")]
		public RapidBulletsTrigger()
		{
		}
	}
	[Token(Token = "0x200059E")]
	public sealed class VanVFX : MonoBehaviour
	{
		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer renderer;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Animator _insideAnimator;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Renderer _staticRenderer;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool _isEnabled;

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x1357CF0", Offset = "0x1357CF0", VA = "0x1357CF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x1357DA0", Offset = "0x1357DA0", VA = "0x1357DA0")]
		public static void SetVanSpeed(float speed)
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x13580B0", Offset = "0x13580B0", VA = "0x13580B0")]
		public static void SetLightHorizontal(float val)
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x1357BE8", Offset = "0x1357BE8", VA = "0x1357BE8")]
		public static void DisableAnimator()
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x1358280", Offset = "0x1358280", VA = "0x1358280")]
		public VanVFX()
		{
		}
	}
}
namespace MazeTheory.Combat
{
	[Token(Token = "0x200059F")]
	public sealed class CombatAlly : MonoBehaviour
	{
		[Token(Token = "0x20005A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C520", Offset = "0xE6C520")]
		private sealed class <MuzzleFlashCo>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CombatAlly <>4__this;

			[Token(Token = "0x1700035C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F62")]
				[Address(RVA = "0x16A494C", Offset = "0x16A494C", VA = "0x16A494C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F64")]
				[Address(RVA = "0x16A4994", Offset = "0x16A4994", VA = "0x16A4994", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0x16A4890", Offset = "0x16A4890", VA = "0x16A4890")]
			[DebuggerHidden]
			public <MuzzleFlashCo>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6001F60")]
			[Address(RVA = "0x16A48BC", Offset = "0x16A48BC", VA = "0x16A48BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F61")]
			[Address(RVA = "0x16A48C0", Offset = "0x16A48C0", VA = "0x16A48C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F63")]
			[Address(RVA = "0x16A4954", Offset = "0x16A4954", VA = "0x16A4954", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C530", Offset = "0xE6C530")]
		private sealed class <Turn>d__55 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CombatAlly <>4__this;

			[Token(Token = "0x1700035E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F68")]
				[Address(RVA = "0x16A4B0C", Offset = "0x16A4B0C", VA = "0x16A4B0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F6A")]
				[Address(RVA = "0x16A4B54", Offset = "0x16A4B54", VA = "0x16A4B54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F65")]
			[Address(RVA = "0x16A499C", Offset = "0x16A499C", VA = "0x16A499C")]
			[DebuggerHidden]
			public <Turn>d__55(int <>1__state)
			{
			}

			[Token(Token = "0x6001F66")]
			[Address(RVA = "0x16A49C8", Offset = "0x16A49C8", VA = "0x16A49C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F67")]
			[Address(RVA = "0x16A49CC", Offset = "0x16A49CC", VA = "0x16A49CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F69")]
			[Address(RVA = "0x16A4B14", Offset = "0x16A4B14", VA = "0x16A4B14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform ikForward;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE84DCC", Offset = "0xE84DCC")]
		[SerializeField]
		private Transform visuals;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NPCMovementController movementController;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private HybridAnimancerComponent animator;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform firePoint;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE84E48", Offset = "0xE84E48")]
		[SerializeField]
		private bool turnRunning;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE84E94", Offset = "0xE84E94")]
		[SerializeField]
		private float coverCooldown;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE84EE0", Offset = "0xE84EE0")]
		[SerializeField]
		private float shotCooldown;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int minShotsOutOfCover;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int maxShotsOutOfCover;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MT_VFX_BulletTrail bulletTrail;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject muzzleFlashGameObj;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE84F6C", Offset = "0xE84F6C")]
		[SerializeField]
		private ZA_CombatSFX combatSfx;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE84FB8", Offset = "0xE84FB8")]
		private float accuracy;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private Vector3 missRange;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private int shotsBetweenReload;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private LayerMask collisionMask;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _numberOfShotsToTake;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int _shotsSinceReload;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool _moving;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CombatAI _currentTarget;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool _shotThisFrame;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[SerializeField]
		private bool _inCombat;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		[SerializeField]
		private bool _inCover;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int _numberOfShots;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float _currentShotCooldown;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float _timer;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform _previousTarget;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float _currentCoverCooldown;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 _localPos;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private bool _allyBehaviourRunning;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Action arrivedAction;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float minShotAngle;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 _targetLook;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _targetRotationValue;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _smoothDeltaRotation;

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x12103F8", Offset = "0x12103F8", VA = "0x12103F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x121053C", Offset = "0x121053C", VA = "0x121053C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x1210680", Offset = "0x1210680", VA = "0x1210680")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x12108CC", Offset = "0x12108CC", VA = "0x12108CC")]
		private void HandleShootFX()
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x12106B8", Offset = "0x12106B8", VA = "0x12106B8")]
		private void UpdateCharacterInCombat()
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x12107AC", Offset = "0x12107AC", VA = "0x12107AC")]
		private void UpdateCharacterShooting()
		{
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x12110B0", Offset = "0x12110B0", VA = "0x12110B0")]
		private void Reload()
		{
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x1210FD4", Offset = "0x1210FD4", VA = "0x1210FD4")]
		private void Shoot()
		{
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x12112A8", Offset = "0x12112A8", VA = "0x12112A8")]
		private void ResetShooting()
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x1210954", Offset = "0x1210954", VA = "0x1210954")]
		public void ShootFX()
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x1211304", Offset = "0x1211304", VA = "0x1211304")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE93BC4", Offset = "0xE93BC4")]
		private IEnumerator MuzzleFlashCo()
		{
			return null;
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x12115D0", Offset = "0x12115D0", VA = "0x12115D0")]
		public void MoveToPosition(Transform target, NPCNavigation.NpcMovementSpeed speed)
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x12116F0", Offset = "0x12116F0", VA = "0x12116F0")]
		private void Move()
		{
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x121179C", Offset = "0x121179C", VA = "0x121179C")]
		public bool IsAtWaypoint(Transform waypoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x1211830", Offset = "0x1211830", VA = "0x1211830")]
		private void WaypointReached()
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x1211838", Offset = "0x1211838", VA = "0x1211838")]
		public void Damage()
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x12118C0", Offset = "0x12118C0", VA = "0x12118C0")]
		private void ResetDamage()
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x121191C", Offset = "0x121191C", VA = "0x121191C")]
		public Transform GetVisuals()
		{
			return null;
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x1211924", Offset = "0x1211924", VA = "0x1211924")]
		public void ToggleAllyBehaviour(bool active)
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x12119F8", Offset = "0x12119F8", VA = "0x12119F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE93C24", Offset = "0xE93C24")]
		private IEnumerator Turn()
		{
			return null;
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x1211190", Offset = "0x1211190", VA = "0x1211190")]
		private float GetClosestEnemyAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x1210F94", Offset = "0x1210F94", VA = "0x1210F94")]
		public void StartTurn()
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x1211110", Offset = "0x1211110", VA = "0x1211110")]
		public void EndTurn()
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x1211CE0", Offset = "0x1211CE0", VA = "0x1211CE0")]
		public bool GetAllyBehaviourRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x1211CE8", Offset = "0x1211CE8", VA = "0x1211CE8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x1211EA0", Offset = "0x1211EA0", VA = "0x1211EA0")]
		public void SetIKForward(Transform ikf)
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x1211EA8", Offset = "0x1211EA8", VA = "0x1211EA8")]
		public void SetVisuals(Transform v)
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x1211EB0", Offset = "0x1211EB0", VA = "0x1211EB0")]
		public void SetMovementController(NPCMovementController mc)
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x1211EB8", Offset = "0x1211EB8", VA = "0x1211EB8")]
		public void SetAnimator(HybridAnimancerComponent a)
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x1211EC0", Offset = "0x1211EC0", VA = "0x1211EC0")]
		public void SetFirePoint(Transform fp)
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x1211EC8", Offset = "0x1211EC8", VA = "0x1211EC8")]
		public void SetBulletTrail(MT_VFX_BulletTrail bt)
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x1211ED0", Offset = "0x1211ED0", VA = "0x1211ED0")]
		public void SetMuzzleFlash(GameObject mf)
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x1211ED8", Offset = "0x1211ED8", VA = "0x1211ED8")]
		public void SetCombatSFX(ZA_CombatSFX csfx)
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x1211EE0", Offset = "0x1211EE0", VA = "0x1211EE0")]
		public void SetCombatLayerMask(LayerMask lm)
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x1211EE8", Offset = "0x1211EE8", VA = "0x1211EE8")]
		public CombatAlly()
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x1211F58", Offset = "0x1211F58", VA = "0x1211F58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE93C84", Offset = "0xE93C84")]
		private void <Move>b__45_0()
		{
		}
	}
	[Token(Token = "0x20005A2")]
	public sealed class CombatAllyLogic : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005A3")]
		public class WaypointArrayData
		{
			[Token(Token = "0x4001AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ID;

			[Token(Token = "0x4001AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WaypointData[] Data;

			[Token(Token = "0x6001F71")]
			[Address(RVA = "0x16A4B88", Offset = "0x16A4B88", VA = "0x16A4B88")]
			public WaypointArrayData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A4")]
		public class WaypointData
		{
			[Token(Token = "0x4001AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform waypoint;

			[Token(Token = "0x4001AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float timeAtWaypoint;

			[Token(Token = "0x4001AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationClip clip;

			[Token(Token = "0x4001AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform LookAtPoint;

			[Token(Token = "0x6001F72")]
			[Address(RVA = "0x16A4B90", Offset = "0x16A4B90", VA = "0x16A4B90")]
			public WaypointData()
			{
			}
		}

		[Token(Token = "0x20005A5")]
		private enum State
		{
			[Token(Token = "0x4001B01")]
			Move,
			[Token(Token = "0x4001B02")]
			IsMoving,
			[Token(Token = "0x4001B03")]
			AtWaypoint
		}

		[Token(Token = "0x20005A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C540", Offset = "0xE6C540")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4001B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x6001F73")]
			[Address(RVA = "0x16A4B5C", Offset = "0x16A4B5C", VA = "0x16A4B5C")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6001F74")]
			[Address(RVA = "0x16A4B64", Offset = "0x16A4B64", VA = "0x16A4B64")]
			internal bool <SetWaypointArrayData>b__0(WaypointArrayData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool GamePaused;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HybridAnimancerComponent animator;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private NPCNavigation nav;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WaypointArrayData[] data;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform visuals;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _running;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _currentIndex;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _waypointTimer;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WaypointArrayData _arrayData;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private State _currentState;

		[Token(Token = "0x17000360")]
		private WaypointData CurrentData
		{
			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0x121212C", Offset = "0x121212C", VA = "0x121212C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x1211F7C", Offset = "0x1211F7C", VA = "0x1211F7C")]
		public void SetWaypointArrayData(string id)
		{
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0x1212174", Offset = "0x1212174", VA = "0x1212174")]
		public void Run()
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x1212180", Offset = "0x1212180", VA = "0x1212180")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x1212320", Offset = "0x1212320", VA = "0x1212320")]
		private void OnReachWaypoint()
		{
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x1212434", Offset = "0x1212434", VA = "0x1212434")]
		public CombatAllyLogic()
		{
		}
	}
	[Token(Token = "0x20005A7")]
	public sealed class CombatAnimReciever : MonoBehaviour
	{
		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CombatAI combatAI;

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x121243C", Offset = "0x121243C", VA = "0x121243C")]
		public void SetCombatAI(CombatAI c)
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x1212444", Offset = "0x1212444", VA = "0x1212444")]
		public CombatAnimReciever()
		{
		}
	}
	[Token(Token = "0x20005A8")]
	public class CombatBloodImpactVFX : MonoBehaviour
	{
		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x121244C", Offset = "0x121244C", VA = "0x121244C")]
		public void OnShot(Vector3 pos)
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x1212604", Offset = "0x1212604", VA = "0x1212604")]
		public CombatBloodImpactVFX()
		{
		}
	}
	[Token(Token = "0x20005A9")]
	public class CombatController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C550", Offset = "0xE6C550")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<CombatAI> <>9__43_0;

			[Token(Token = "0x4001B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<CombatAI> <>9__44_0;

			[Token(Token = "0x4001B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<CombatAI> <>9__45_1;

			[Token(Token = "0x4001B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<CombatAI> <>9__45_0;

			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0x16A4BFC", Offset = "0x16A4BFC", VA = "0x16A4BFC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0x16A4C04", Offset = "0x16A4C04", VA = "0x16A4C04")]
			internal void <StartCombat>b__43_0(CombatAI x)
			{
			}

			[Token(Token = "0x6001FB2")]
			[Address(RVA = "0x16A4C20", Offset = "0x16A4C20", VA = "0x16A4C20")]
			internal void <StartCombat>b__44_0(CombatAI x)
			{
			}

			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0x16A4C3C", Offset = "0x16A4C3C", VA = "0x16A4C3C")]
			internal void <StopCombat>b__45_1(CombatAI x)
			{
			}

			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0x16A4C58", Offset = "0x16A4C58", VA = "0x16A4C58")]
			internal void <StopCombat>b__45_0(CombatAI x)
			{
			}
		}

		[Token(Token = "0x20005AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C560", Offset = "0xE6C560")]
		private sealed class <>c__DisplayClass61_0
		{
			[Token(Token = "0x4001B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string combatGroup;

			[Token(Token = "0x6001FB5")]
			[Address(RVA = "0x16A4C74", Offset = "0x16A4C74", VA = "0x16A4C74")]
			public <>c__DisplayClass61_0()
			{
			}

			[Token(Token = "0x6001FB6")]
			[Address(RVA = "0x16A4C7C", Offset = "0x16A4C7C", VA = "0x16A4C7C")]
			internal void <DisbandCombatGroup>b__0(CombatAI x)
			{
			}
		}

		[Token(Token = "0x20005AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C570", Offset = "0xE6C570")]
		private sealed class <>c__DisplayClass62_0
		{
			[Token(Token = "0x4001B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float time;

			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0x16A4CF4", Offset = "0x16A4CF4", VA = "0x16A4CF4")]
			public <>c__DisplayClass62_0()
			{
			}

			[Token(Token = "0x6001FB8")]
			[Address(RVA = "0x16A4CFC", Offset = "0x16A4CFC", VA = "0x16A4CFC")]
			internal void <ForceAllCombatantsToTakeCover>b__0(CombatAI x)
			{
			}
		}

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CombatSettings settings;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LayerMask ignoreMe;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static LayerMask _staticIgnore;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly List<CombatAI> _combatAis;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly List<CombatAlly> _combatAllies;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static PlayerCombatController _playerCombat;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static CombatSettings combatSettings;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly Dictionary<string, List<CombatAI>> _combatGroups;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool _playerInCover;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool _combatActive;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static ParticleSystem _bloodSplatterParticle;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static ParticleSystem _hitParticleStatic;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static Transform _holeStatic;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static float allyCountdown;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE850FC", Offset = "0xE850FC")]
		private static float allyCountdownDuration;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static bool _canFireGuns;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private static int _maxNumberOfCharactersOutOfCover;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private static int _charactersOutOfCover;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private static float _globalShoutCooldownDuration;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private static float _globalShoutCooldown;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private static float _missedBulletArtificialInnacuaryRadius;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static bool GamePaused;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private static bool _aimAssistEnabled;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE85164", Offset = "0xE85164")]
		private static bool <AimAssistForcedOff>k__BackingField;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static CombatController _internalInstance;

		[Token(Token = "0x17000361")]
		public static bool AimAssistForcedOff
		{
			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0x12128CC", Offset = "0x12128CC", VA = "0x12128CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE93D64", Offset = "0xE93D64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0x1212860", Offset = "0x1212860", VA = "0x1212860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE93D54", Offset = "0xE93D54")]
			set
			{
			}
		}

		[Token(Token = "0x17000362")]
		public static bool SceneHasCombat
		{
			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0x1212930", Offset = "0x1212930", VA = "0x1212930")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000046")]
		public static event Action OnImpact
		{
			[Token(Token = "0x6001F79")]
			[Address(RVA = "0x121260C", Offset = "0x121260C", VA = "0x121260C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE93D34", Offset = "0xE93D34")]
			add
			{
			}
			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0x1212700", Offset = "0x1212700", VA = "0x1212700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE93D44", Offset = "0xE93D44")]
			remove
			{
			}
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x12127F4", Offset = "0x12127F4", VA = "0x12127F4")]
		public void SetPlayerInCover(bool inCover)
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x12129D0", Offset = "0x12129D0", VA = "0x12129D0")]
		public void SetPlayerInCrouchCover(bool inCover)
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x1212A78", Offset = "0x1212A78", VA = "0x1212A78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x1212D00", Offset = "0x1212D00", VA = "0x1212D00")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x1212E30", Offset = "0x1212E30", VA = "0x1212E30")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x1212FF8", Offset = "0x1212FF8", VA = "0x1212FF8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x1213060", Offset = "0x1213060", VA = "0x1213060")]
		public static float GetPlayerMaxHealth()
		{
			return default(float);
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x12130D4", Offset = "0x12130D4", VA = "0x12130D4")]
		public static void SetCombatActive(bool active)
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x1213140", Offset = "0x1213140", VA = "0x1213140")]
		public static bool GetCombatActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x12131A4", Offset = "0x12131A4", VA = "0x12131A4")]
		public static void StartCombat(CombatAI ai)
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x1213284", Offset = "0x1213284", VA = "0x1213284")]
		public static void StartCombat(string group)
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x1213510", Offset = "0x1213510", VA = "0x1213510")]
		public static void StartCombat()
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x12136DC", Offset = "0x12136DC", VA = "0x12136DC")]
		public static void StopCombat(string combatGroup = "")
		{
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x1210DA4", Offset = "0x1210DA4", VA = "0x1210DA4")]
		public static bool AnyCharacterInCombat()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x120D180", Offset = "0x120D180", VA = "0x120D180")]
		public static void Register(CombatAI ai)
		{
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x120FBAC", Offset = "0x120FBAC", VA = "0x120FBAC")]
		public static void Deregister(CombatAI ai)
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x1213944", Offset = "0x1213944", VA = "0x1213944")]
		public static CombatAI GetRandomCombatAi()
		{
			return null;
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x120EACC", Offset = "0x120EACC", VA = "0x120EACC")]
		public static CombatAlly GetRandomCombatAlly()
		{
			return null;
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x1210458", Offset = "0x1210458", VA = "0x1210458")]
		public static void RegisterAlly(CombatAlly ai)
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x121059C", Offset = "0x121059C", VA = "0x121059C")]
		public static void DeregisterAlly(CombatAlly ai)
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x12139FC", Offset = "0x12139FC", VA = "0x12139FC")]
		public static void SetMaxCharactersOutOfCover(int maxOutOfCover)
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x1212DCC", Offset = "0x1212DCC", VA = "0x1212DCC")]
		public static void ResetCharactersOutOfCoverCount()
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x120E8B8", Offset = "0x120E8B8", VA = "0x120E8B8")]
		public static void RegisterOutOfCover()
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x120EBEC", Offset = "0x120EBEC", VA = "0x120EBEC")]
		public static void DeregisterOutOfCover()
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x120E848", Offset = "0x120E848", VA = "0x120E848")]
		public static bool MaxCharactersOutOfCoverReached()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x120D264", Offset = "0x120D264", VA = "0x120D264")]
		public static void AssignCombatGroup(string combatGroup, CombatAI ai)
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x120FA38", Offset = "0x120FA38", VA = "0x120FA38")]
		public static void RemoveFomCombatGroup(string combatGroup, CombatAI ai)
		{
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x1213A64", Offset = "0x1213A64", VA = "0x1213A64")]
		public static bool AllMembersOfCombatGroupDead(string combatGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x1213BC4", Offset = "0x1213BC4", VA = "0x1213BC4")]
		public static void DisbandCombatGroup(string combatGroup)
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x1213DBC", Offset = "0x1213DBC", VA = "0x1213DBC")]
		public static void ForceAllCombatantsToTakeCover(float time)
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x12100CC", Offset = "0x12100CC", VA = "0x12100CC")]
		public static bool HasLineOfSight(Vector3 fromPosition, bool actualHeadPosition = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x120ECD8", Offset = "0x120ECD8", VA = "0x120ECD8")]
		public static Vector3 ShootBullet(Transform t, string shooter, float accuracy, float damageMultiplier = 1f, [Optional] Vector3? targetPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x1213EE4", Offset = "0x1213EE4", VA = "0x1213EE4")]
		public static void DisplayBulletImpact(RaycastHit hit)
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x12124CC", Offset = "0x12124CC", VA = "0x12124CC")]
		public static void ShowBloodSplatter(Vector3 pos)
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x1212F74", Offset = "0x1212F74", VA = "0x1212F74")]
		public static void UpdateAllyShootingCooldown()
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x120EB84", Offset = "0x120EB84", VA = "0x120EB84")]
		public static void ResetAllyShootingCooldown()
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x120EA1C", Offset = "0x120EA1C", VA = "0x120EA1C")]
		public static bool CanShootAlly()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x1212EF0", Offset = "0x1212EF0", VA = "0x1212EF0")]
		private static void UpdateShoutCooldown()
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x120DAE0", Offset = "0x120DAE0", VA = "0x120DAE0")]
		public static void ResetShoutCooldown()
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x121402C", Offset = "0x121402C", VA = "0x121402C")]
		public static PlayerCombatController GetPlayerCombatController()
		{
			return null;
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x120D84C", Offset = "0x120D84C", VA = "0x120D84C")]
		public static bool CanPerformShout()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x1211A70", Offset = "0x1211A70", VA = "0x1211A70")]
		public static Vector3 GetClosestCombatCharacterPosition(Transform t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x121137C", Offset = "0x121137C", VA = "0x121137C")]
		public static CombatAI GetClosestCombatCharacter(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x1214090", Offset = "0x1214090", VA = "0x1214090")]
		public static void SetAimAssist(bool enabled)
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x12140FC", Offset = "0x12140FC", VA = "0x12140FC")]
		public static bool GetAimAssistEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x12141CC", Offset = "0x12141CC", VA = "0x12141CC")]
		public static bool GetCanFireGuns()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x1214230", Offset = "0x1214230", VA = "0x1214230")]
		public static void SetCanFireGuns(bool v)
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x121429C", Offset = "0x121429C", VA = "0x121429C")]
		public CombatController()
		{
		}
	}
	[Token(Token = "0x20005AD")]
	public sealed class CombatDeathCollider : MonoBehaviour
	{
		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent eventTriggered;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string deathID;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool calculateDirection;

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x121443C", Offset = "0x121443C", VA = "0x121443C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x12145E0", Offset = "0x12145E0", VA = "0x12145E0")]
		private MT_DeathAnimationBank.Direction GetDirection(Transform characterForward)
		{
			return default(MT_DeathAnimationBank.Direction);
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x121471C", Offset = "0x121471C", VA = "0x121471C")]
		public CombatDeathCollider()
		{
		}
	}
	[Token(Token = "0x20005AE")]
	public class CombatDeathReceiver : MonoBehaviour
	{
		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CombatAI combatAI;

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x12147B0", Offset = "0x12147B0", VA = "0x12147B0")]
		public CombatDeathReceiver()
		{
		}
	}
	[Token(Token = "0x20005AF")]
	public class CombatLogic : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005B0")]
		public class WaypointArrayData
		{
			[Token(Token = "0x4001B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ID;

			[Token(Token = "0x4001B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WaypointData[] Data;

			[Token(Token = "0x6001FC4")]
			[Address(RVA = "0x16A4D48", Offset = "0x16A4D48", VA = "0x16A4D48")]
			public WaypointArrayData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005B1")]
		public class WaypointData
		{
			[Token(Token = "0x4001B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform waypoint;

			[Token(Token = "0x4001B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float timeAtWaypoint;

			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0x16A4D50", Offset = "0x16A4D50", VA = "0x16A4D50")]
			public WaypointData()
			{
			}
		}

		[Token(Token = "0x20005B2")]
		private enum State
		{
			[Token(Token = "0x4001B39")]
			Move,
			[Token(Token = "0x4001B3A")]
			IsMoving,
			[Token(Token = "0x4001B3B")]
			AtWaypoint
		}

		[Token(Token = "0x20005B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C580", Offset = "0xE6C580")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4001B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0x16A4D1C", Offset = "0x16A4D1C", VA = "0x16A4D1C")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001FC7")]
			[Address(RVA = "0x16A4D24", Offset = "0x16A4D24", VA = "0x16A4D24")]
			internal bool <SetWaypointArrayData>b__0(WaypointArrayData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public NPCNavigation nav;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CombatAI combatAI;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WaypointArrayData[] data;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _running;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _currentIndex;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _waypointTimer;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaypointArrayData _arrayData;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private State _currentState;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool GamePaused;

		[Token(Token = "0x17000363")]
		private WaypointData CurrentData
		{
			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0x12148F0", Offset = "0x12148F0", VA = "0x12148F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x1214938", Offset = "0x1214938", VA = "0x1214938")]
		public void SetWaypointArrayData(string id)
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x1214A9C", Offset = "0x1214A9C", VA = "0x1214A9C")]
		public void Run()
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x1214AC0", Offset = "0x1214AC0", VA = "0x1214AC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x1214AC4", Offset = "0x1214AC4", VA = "0x1214AC4")]
		private void OnReachWaypoint()
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x1214AF8", Offset = "0x1214AF8", VA = "0x1214AF8")]
		public CombatAI GetCombatAI()
		{
			return null;
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x1214B00", Offset = "0x1214B00", VA = "0x1214B00")]
		public CombatLogic()
		{
		}
	}
	[Token(Token = "0x20005B4")]
	public class CombatMolotov : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C590", Offset = "0xE6C590")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__1_0;

			[Token(Token = "0x6001FCC")]
			[Address(RVA = "0x16A4DBC", Offset = "0x16A4DBC", VA = "0x16A4DBC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001FCD")]
			[Address(RVA = "0x16A4DC4", Offset = "0x16A4DC4", VA = "0x16A4DC4")]
			internal bool <OnBreak>b__1_0(Collider x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float radius;

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x1214B08", Offset = "0x1214B08", VA = "0x1214B08")]
		public void OnBreak()
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x1214FA0", Offset = "0x1214FA0", VA = "0x1214FA0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x1214FF0", Offset = "0x1214FF0", VA = "0x1214FF0")]
		public CombatMolotov()
		{
		}
	}
	[Token(Token = "0x20005B6")]
	public class CombatMolotovReceiver : MonoBehaviour
	{
		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string functionName;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FlowScriptController flowScriptController;

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x1214F60", Offset = "0x1214F60", VA = "0x1214F60")]
		public void OnHit()
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x1215000", Offset = "0x1215000", VA = "0x1215000")]
		public CombatMolotovReceiver()
		{
		}
	}
	[Token(Token = "0x20005B7")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6C5A0", Offset = "0xE6C5A0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6C5A0", Offset = "0xE6C5A0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6C5A0", Offset = "0xE6C5A0")]
	public class EmptyPlayerAmmo : CallableActionNode
	{
		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x100B900", Offset = "0x100B900", VA = "0x100B900", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x100B908", Offset = "0x100B908", VA = "0x100B908")]
		public EmptyPlayerAmmo()
		{
		}
	}
	[Token(Token = "0x20005B8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6C628", Offset = "0xE6C628")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6C628", Offset = "0xE6C628")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6C628", Offset = "0xE6C628")]
	public class IsPlayerOutOfAmmo : PureFunctionNode<bool>
	{
		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x10DFA2C", Offset = "0x10DFA2C", VA = "0x10DFA2C", Slot = "12")]
		public override bool Invoke()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x10DFA34", Offset = "0x10DFA34", VA = "0x10DFA34")]
		public IsPlayerOutOfAmmo()
		{
		}
	}
	[Token(Token = "0x20005B9")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6C6B0", Offset = "0xE6C6B0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6C6B0", Offset = "0xE6C6B0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6C6B0", Offset = "0xE6C6B0")]
	public class IsPlayerHoldingGun : PureFunctionNode<bool>
	{
		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x10DF9D8", Offset = "0x10DF9D8", VA = "0x10DF9D8", Slot = "12")]
		public override bool Invoke()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x10DF9E0", Offset = "0x10DF9E0", VA = "0x10DF9E0")]
		public IsPlayerHoldingGun()
		{
		}
	}
	[Token(Token = "0x20005BA")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6C738", Offset = "0xE6C738")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6C738", Offset = "0xE6C738")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6C738", Offset = "0xE6C738")]
	public class ForceAllCombatantsToTakeCover : CallableActionNode<float>
	{
		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x100EA14", Offset = "0x100EA14", VA = "0x100EA14", Slot = "12")]
		public override void Invoke(float time)
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x100EA80", Offset = "0x100EA80", VA = "0x100EA80")]
		public ForceAllCombatantsToTakeCover()
		{
		}
	}
	[Token(Token = "0x20005BB")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6C7C0", Offset = "0xE6C7C0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6C7C0", Offset = "0xE6C7C0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6C7C0", Offset = "0xE6C7C0")]
	public class ToggleCombatActive : CallableActionNode<bool>
	{
		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x1351A8C", Offset = "0x1351A8C", VA = "0x1351A8C", Slot = "12")]
		public override void Invoke(bool active)
		{
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x1351B38", Offset = "0x1351B38", VA = "0x1351B38")]
		public ToggleCombatActive()
		{
		}
	}
	[Token(Token = "0x20005BC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6C848", Offset = "0xE6C848")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6C848", Offset = "0xE6C848")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6C848", Offset = "0xE6C848")]
	public class StartCombatNode : CallableActionNode
	{
		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x32E2E9C", Offset = "0x32E2E9C", VA = "0x32E2E9C", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x32E2EF8", Offset = "0x32E2EF8", VA = "0x32E2EF8")]
		public StartCombatNode()
		{
		}
	}
	[Token(Token = "0x20005BD")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6C8D0", Offset = "0xE6C8D0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6C8D0", Offset = "0xE6C8D0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6C8D0", Offset = "0xE6C8D0")]
	public class StartCombatGroupNode : CallableActionNode<string>
	{
		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x32E2DEC", Offset = "0x32E2DEC", VA = "0x32E2DEC", Slot = "12")]
		public override void Invoke(string group)
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x32E2E50", Offset = "0x32E2E50", VA = "0x32E2E50")]
		public StartCombatGroupNode()
		{
		}
	}
	[Token(Token = "0x20005BE")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6C958", Offset = "0xE6C958")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6C958", Offset = "0xE6C958")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6C958", Offset = "0xE6C958")]
	public class StartCombatForNPCNode : CallableActionNode<CombatAI>
	{
		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x32E2D3C", Offset = "0x32E2D3C", VA = "0x32E2D3C", Slot = "12")]
		public override void Invoke(CombatAI npc)
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x32E2DA0", Offset = "0x32E2DA0", VA = "0x32E2DA0")]
		public StartCombatForNPCNode()
		{
		}
	}
	[Token(Token = "0x20005BF")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6C9E0", Offset = "0xE6C9E0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6C9E0", Offset = "0xE6C9E0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6C9E0", Offset = "0xE6C9E0")]
	public class NPCShootNode : CallableActionNode<CombatAI, int>
	{
		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x114AEE0", Offset = "0x114AEE0", VA = "0x114AEE0", Slot = "12")]
		public override void Invoke(CombatAI npc, int shotCount)
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x114AF00", Offset = "0x114AF00", VA = "0x114AF00")]
		public NPCShootNode()
		{
		}
	}
	[Token(Token = "0x20005C0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6CA68", Offset = "0xE6CA68")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6CA68", Offset = "0xE6CA68")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6CA68", Offset = "0xE6CA68")]
	public class NPCTakeCoverNode : CallableActionNode<CombatAI, float>
	{
		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x114B900", Offset = "0x114B900", VA = "0x114B900", Slot = "12")]
		public override void Invoke(CombatAI npc, float time)
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x114B91C", Offset = "0x114B91C", VA = "0x114B91C")]
		public NPCTakeCoverNode()
		{
		}
	}
	[Token(Token = "0x20005C1")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6CAF0", Offset = "0xE6CAF0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6CAF0", Offset = "0xE6CAF0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6CAF0", Offset = "0xE6CAF0")]
	public class StopCombat : CallableActionNode<CombatAI>
	{
		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x32E376C", Offset = "0x32E376C", VA = "0x32E376C", Slot = "12")]
		public override void Invoke(CombatAI npc)
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x32E3788", Offset = "0x32E3788", VA = "0x32E3788")]
		public StopCombat()
		{
		}
	}
	[Token(Token = "0x20005C2")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6CB78", Offset = "0xE6CB78")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6CB78", Offset = "0xE6CB78")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6CB78", Offset = "0xE6CB78")]
	public class StopCombatForAll : CallableActionNode
	{
		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x32E37D4", Offset = "0x32E37D4", VA = "0x32E37D4", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x32E3848", Offset = "0x32E3848", VA = "0x32E3848")]
		public StopCombatForAll()
		{
		}
	}
	[Token(Token = "0x20005C3")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6CC00", Offset = "0xE6CC00")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6CC00", Offset = "0xE6CC00")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6CC00", Offset = "0xE6CC00")]
	public class StopCombatGroupNode : CallableActionNode<string>
	{
		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x32E3850", Offset = "0x32E3850", VA = "0x32E3850", Slot = "12")]
		public override void Invoke(string group)
		{
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x32E38B4", Offset = "0x32E38B4", VA = "0x32E38B4")]
		public StopCombatGroupNode()
		{
		}
	}
	[Token(Token = "0x20005C4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6CC88", Offset = "0xE6CC88")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6CC88", Offset = "0xE6CC88")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6CC88", Offset = "0xE6CC88")]
	public class WaitUntilCombatGroupIsDead : LatentActionNode<string>
	{
		[Token(Token = "0x20005C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CD10", Offset = "0xE6CD10")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string combatGroup;

			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0x2167CC0", Offset = "0x2167CC0", VA = "0x2167CC0")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001FED")]
			[Address(RVA = "0x2167CC8", Offset = "0x2167CC8", VA = "0x2167CC8")]
			internal bool <Invoke>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CD20", Offset = "0xE6CD20")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string combatGroup;

			[Token(Token = "0x17000364")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FF1")]
				[Address(RVA = "0x2167E7C", Offset = "0x2167E7C", VA = "0x2167E7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000365")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FF3")]
				[Address(RVA = "0x2167EC4", Offset = "0x2167EC4", VA = "0x2167EC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FEE")]
			[Address(RVA = "0x2167D30", Offset = "0x2167D30", VA = "0x2167D30")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0x2167D5C", Offset = "0x2167D5C", VA = "0x2167D5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FF0")]
			[Address(RVA = "0x2167D60", Offset = "0x2167D60", VA = "0x2167D60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0x2167E84", Offset = "0x2167E84", VA = "0x2167E84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x135C5E0", Offset = "0x135C5E0", VA = "0x135C5E0", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE93D74", Offset = "0xE93D74")]
		public override IEnumerator Invoke(string combatGroup)
		{
			return null;
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x135C658", Offset = "0x135C658", VA = "0x135C658")]
		public WaitUntilCombatGroupIsDead()
		{
		}
	}
	[Token(Token = "0x20005C7")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6CD30", Offset = "0xE6CD30")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6CD30", Offset = "0xE6CD30")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6CD30", Offset = "0xE6CD30")]
	public class DisbandCombatGroup : CallableActionNode<string>
	{
		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x1008EC4", Offset = "0x1008EC4", VA = "0x1008EC4", Slot = "12")]
		public override void Invoke(string combatGroup)
		{
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x1008F28", Offset = "0x1008F28", VA = "0x1008F28")]
		public DisbandCombatGroup()
		{
		}
	}
	[Token(Token = "0x20005C8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6CDB8", Offset = "0xE6CDB8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6CDB8", Offset = "0xE6CDB8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6CDB8", Offset = "0xE6CDB8")]
	public class OnEnemyDieNode : LatentActionNode<CombatAI>
	{
		[Token(Token = "0x20005C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CE40", Offset = "0xE6CE40")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CombatAI combatAI;

			[Token(Token = "0x6001FF8")]
			[Address(RVA = "0x32C4620", Offset = "0x32C4620", VA = "0x32C4620")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0x32C4628", Offset = "0x32C4628", VA = "0x32C4628")]
			internal bool <Invoke>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CE50", Offset = "0xE6CE50")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CombatAI combatAI;

			[Token(Token = "0x17000366")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FFD")]
				[Address(RVA = "0x32C47A0", Offset = "0x32C47A0", VA = "0x32C47A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000367")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FFF")]
				[Address(RVA = "0x32C47E8", Offset = "0x32C47E8", VA = "0x32C47E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0x32C4654", Offset = "0x32C4654", VA = "0x32C4654")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0x32C4680", Offset = "0x32C4680", VA = "0x32C4680", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FFC")]
			[Address(RVA = "0x32C4684", Offset = "0x32C4684", VA = "0x32C4684", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FFE")]
			[Address(RVA = "0x32C47A8", Offset = "0x32C47A8", VA = "0x32C47A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x107AF64", Offset = "0x107AF64", VA = "0x107AF64", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE93E24", Offset = "0xE93E24")]
		public override IEnumerator Invoke(CombatAI combatAI)
		{
			return null;
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x107AFDC", Offset = "0x107AFDC", VA = "0x107AFDC")]
		public OnEnemyDieNode()
		{
		}
	}
	[Token(Token = "0x20005CB")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6CE60", Offset = "0xE6CE60")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6CE60", Offset = "0xE6CE60")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6CE60", Offset = "0xE6CE60")]
	public class KillEnemyNode : CallableActionNode<CombatAI>
	{
		[Token(Token = "0x6002000")]
		[Address(RVA = "0x1014AFC", Offset = "0x1014AFC", VA = "0x1014AFC", Slot = "12")]
		public override void Invoke(CombatAI ai)
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x1014B24", Offset = "0x1014B24", VA = "0x1014B24")]
		public KillEnemyNode()
		{
		}
	}
	[Token(Token = "0x20005CC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6CEE8", Offset = "0xE6CEE8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6CEE8", Offset = "0xE6CEE8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6CEE8", Offset = "0xE6CEE8")]
	public class HasCombatHitPointCompNode : PureFunctionNode<bool, Collider>
	{
		[Token(Token = "0x6002002")]
		[Address(RVA = "0x10D9930", Offset = "0x10D9930", VA = "0x10D9930", Slot = "12")]
		public override bool Invoke(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x10D99C8", Offset = "0x10D99C8", VA = "0x10D99C8")]
		public HasCombatHitPointCompNode()
		{
		}
	}
	[Token(Token = "0x20005CD")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6CF70", Offset = "0xE6CF70")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6CF70", Offset = "0xE6CF70")]
	public class ResetCombatOverlayVFX : CallableActionNode
	{
		[Token(Token = "0x6002004")]
		[Address(RVA = "0x32CB6B4", Offset = "0x32CB6B4", VA = "0x32CB6B4", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x32CB70C", Offset = "0x32CB70C", VA = "0x32CB70C")]
		public ResetCombatOverlayVFX()
		{
		}
	}
	[Token(Token = "0x20005CE")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6CFD4", Offset = "0xE6CFD4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6CFD4", Offset = "0xE6CFD4")]
	public class RunCombatLogicNode : CallableActionNode<CombatLogic>
	{
		[Token(Token = "0x6002006")]
		[Address(RVA = "0x32CC77C", Offset = "0x32CC77C", VA = "0x32CC77C", Slot = "12")]
		public override void Invoke(CombatLogic logic)
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x32CC798", Offset = "0x32CC798", VA = "0x32CC798")]
		public RunCombatLogicNode()
		{
		}
	}
	[Token(Token = "0x20005CF")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6D038", Offset = "0xE6D038")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6D038", Offset = "0xE6D038")]
	public class SetCurrentWaypointDataNode : CallableActionNode<CombatLogic, string>
	{
		[Token(Token = "0x6002008")]
		[Address(RVA = "0x32DAE88", Offset = "0x32DAE88", VA = "0x32DAE88", Slot = "12")]
		public override void Invoke(CombatLogic logic, string id)
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x32DAEA8", Offset = "0x32DAEA8", VA = "0x32DAEA8")]
		public SetCurrentWaypointDataNode()
		{
		}
	}
	[Token(Token = "0x20005D0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6D09C", Offset = "0xE6D09C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6D09C", Offset = "0xE6D09C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6D09C", Offset = "0xE6D09C")]
	public class WaitUntilCombatantIsDead : LatentActionNode<CombatAI>
	{
		[Token(Token = "0x20005D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D124", Offset = "0xE6D124")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CombatAI ai;

			[Token(Token = "0x600200C")]
			[Address(RVA = "0x2167ECC", Offset = "0x2167ECC", VA = "0x2167ECC")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600200D")]
			[Address(RVA = "0x2167ED4", Offset = "0x2167ED4", VA = "0x2167ED4")]
			internal bool <Invoke>g__IsGuyDead|0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D134", Offset = "0xE6D134")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CombatAI ai;

			[Token(Token = "0x17000368")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002011")]
				[Address(RVA = "0x21680B8", Offset = "0x21680B8", VA = "0x21680B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000369")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002013")]
				[Address(RVA = "0x2168100", Offset = "0x2168100", VA = "0x2168100", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600200E")]
			[Address(RVA = "0x2167F6C", Offset = "0x2167F6C", VA = "0x2167F6C")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600200F")]
			[Address(RVA = "0x2167F98", Offset = "0x2167F98", VA = "0x2167F98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002010")]
			[Address(RVA = "0x2167F9C", Offset = "0x2167F9C", VA = "0x2167F9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002012")]
			[Address(RVA = "0x21680C0", Offset = "0x21680C0", VA = "0x21680C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x135C6A4", Offset = "0x135C6A4", VA = "0x135C6A4", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE93ED4", Offset = "0xE93ED4")]
		public override IEnumerator Invoke(CombatAI ai)
		{
			return null;
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x135C71C", Offset = "0x135C71C", VA = "0x135C71C")]
		public WaitUntilCombatantIsDead()
		{
		}
	}
	[Token(Token = "0x20005D3")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6D144", Offset = "0xE6D144")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6D144", Offset = "0xE6D144")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6D144", Offset = "0xE6D144")]
	public class SetAccuracyForNPC : CallableActionNode<CombatAI, float>
	{
		[Token(Token = "0x6002014")]
		[Address(RVA = "0x32DAB48", Offset = "0x32DAB48", VA = "0x32DAB48", Slot = "12")]
		public override void Invoke(CombatAI ai, float accuracy)
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x32DAB60", Offset = "0x32DAB60", VA = "0x32DAB60")]
		public SetAccuracyForNPC()
		{
		}
	}
	[Token(Token = "0x20005D4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6D1CC", Offset = "0xE6D1CC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6D1CC", Offset = "0xE6D1CC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6D1CC", Offset = "0xE6D1CC")]
	public class SetDamageMultiplierForNPC : CallableActionNode<CombatAI, int>
	{
		[Token(Token = "0x6002016")]
		[Address(RVA = "0x32DAEF4", Offset = "0x32DAEF4", VA = "0x32DAEF4", Slot = "12")]
		public override void Invoke(CombatAI ai, int multiplier)
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x32DAF0C", Offset = "0x32DAF0C", VA = "0x32DAF0C")]
		public SetDamageMultiplierForNPC()
		{
		}
	}
	[Token(Token = "0x20005D5")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6D254", Offset = "0xE6D254")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6D254", Offset = "0xE6D254")]
	public class StartCombatAllyNode : CallableActionNode<CombatAllyLogic>
	{
		[Token(Token = "0x6002018")]
		[Address(RVA = "0x32E2CD4", Offset = "0x32E2CD4", VA = "0x32E2CD4", Slot = "12")]
		public override void Invoke(CombatAllyLogic ally)
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x32E2CF0", Offset = "0x32E2CF0", VA = "0x32E2CF0")]
		public StartCombatAllyNode()
		{
		}
	}
	[Token(Token = "0x20005D6")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6D2B8", Offset = "0xE6D2B8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6D2B8", Offset = "0xE6D2B8")]
	public class CombatAllyChangePointsNode : CallableActionNode<CombatAllyLogic, string>
	{
		[Token(Token = "0x600201A")]
		[Address(RVA = "0x1211F60", Offset = "0x1211F60", VA = "0x1211F60", Slot = "12")]
		public override void Invoke(CombatAllyLogic ally, string id)
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x12120E0", Offset = "0x12120E0", VA = "0x12120E0")]
		public CombatAllyChangePointsNode()
		{
		}
	}
	[Token(Token = "0x20005D7")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6D31C", Offset = "0xE6D31C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6D31C", Offset = "0xE6D31C")]
	public class ToggleAimAssist : CallableActionNode<bool>
	{
		[Token(Token = "0x600201C")]
		[Address(RVA = "0x135191C", Offset = "0x135191C", VA = "0x135191C", Slot = "12")]
		public override void Invoke(bool enabled)
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x1351920", Offset = "0x1351920", VA = "0x1351920")]
		public ToggleAimAssist()
		{
		}
	}
	[Token(Token = "0x20005D8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6D380", Offset = "0xE6D380")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6D380", Offset = "0xE6D380")]
	public class ToggleAimAssistForGun : CallableActionNode<PlayerGunFire, bool>
	{
		[Token(Token = "0x600201E")]
		[Address(RVA = "0x135196C", Offset = "0x135196C", VA = "0x135196C", Slot = "12")]
		public override void Invoke(PlayerGunFire gun, bool enabled)
		{
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x1351A40", Offset = "0x1351A40", VA = "0x1351A40")]
		public ToggleAimAssistForGun()
		{
		}
	}
	[Token(Token = "0x20005D9")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6D3E4", Offset = "0xE6D3E4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6D3E4", Offset = "0xE6D3E4")]
	public class ToggleGunsJammed : CallableActionNode<bool>
	{
		[Token(Token = "0x6002020")]
		[Address(RVA = "0x1352040", Offset = "0x1352040", VA = "0x1352040", Slot = "12")]
		public override void Invoke(bool enabled)
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x13520EC", Offset = "0x13520EC", VA = "0x13520EC")]
		public ToggleGunsJammed()
		{
		}
	}
	[Token(Token = "0x20005DA")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6D448", Offset = "0xE6D448")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6D448", Offset = "0xE6D448")]
	public class GetNearestCombatEnemyPosition : PureFunctionNode<Vector3, Transform>
	{
		[Token(Token = "0x6002022")]
		[Address(RVA = "0x10D1DBC", Offset = "0x10D1DBC", VA = "0x10D1DBC", Slot = "12")]
		public override Vector3 Invoke(Transform characterTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x10D1E20", Offset = "0x10D1E20", VA = "0x10D1E20")]
		public GetNearestCombatEnemyPosition()
		{
		}
	}
	[Token(Token = "0x20005DB")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6D4AC", Offset = "0xE6D4AC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6D4AC", Offset = "0xE6D4AC")]
	public class ToggleTurningForAlly : CallableActionNode<CombatAlly, bool>
	{
		[Token(Token = "0x6002024")]
		[Address(RVA = "0x1352D20", Offset = "0x1352D20", VA = "0x1352D20", Slot = "12")]
		public override void Invoke(CombatAlly ally, bool enabled)
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x1352D24", Offset = "0x1352D24", VA = "0x1352D24")]
		public ToggleTurningForAlly()
		{
		}
	}
	[Token(Token = "0x20005DC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6D510", Offset = "0xE6D510")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6D510", Offset = "0xE6D510")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6D510", Offset = "0xE6D510")]
	public class PlayBarkWithID : CallableActionNode<string, bool>
	{
		[Token(Token = "0x6002026")]
		[Address(RVA = "0x1080A3C", Offset = "0x1080A3C", VA = "0x1080A3C", Slot = "12")]
		public override void Invoke(string barkID, bool force)
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x1080AC8", Offset = "0x1080AC8", VA = "0x1080AC8")]
		public PlayBarkWithID()
		{
		}
	}
	[Token(Token = "0x20005DD")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6D598", Offset = "0xE6D598")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6D598", Offset = "0xE6D598")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6D598", Offset = "0xE6D598")]
	public class NPCPlayBarkWithID : CallableActionNode<string, MT_BarkBankLibrary, bool>
	{
		[Token(Token = "0x6002028")]
		[Address(RVA = "0x114A428", Offset = "0x114A428", VA = "0x114A428", Slot = "12")]
		public override void Invoke(string barkID, MT_BarkBankLibrary npcBarkLibrary, bool force)
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x114A448", Offset = "0x114A448", VA = "0x114A448")]
		public NPCPlayBarkWithID()
		{
		}
	}
	[Token(Token = "0x20005DE")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6D620", Offset = "0xE6D620")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6D620", Offset = "0xE6D620")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6D620", Offset = "0xE6D620")]
	public class ForceOffAimAssistNode : CallableActionNode
	{
		[Token(Token = "0x600202A")]
		[Address(RVA = "0x100EE18", Offset = "0x100EE18", VA = "0x100EE18", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x100EEB8", Offset = "0x100EEB8", VA = "0x100EEB8")]
		public ForceOffAimAssistNode()
		{
		}
	}
	[Token(Token = "0x20005DF")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6D6A8", Offset = "0xE6D6A8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6D6A8", Offset = "0xE6D6A8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6D6A8", Offset = "0xE6D6A8")]
	public class ResetAimAssistNode : CallableActionNode
	{
		[Token(Token = "0x600202C")]
		[Address(RVA = "0x32CB5A0", Offset = "0x32CB5A0", VA = "0x32CB5A0", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x32CB63C", Offset = "0x32CB63C", VA = "0x32CB63C")]
		public ResetAimAssistNode()
		{
		}
	}
	[Token(Token = "0x20005E0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6D730", Offset = "0xE6D730")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6D730", Offset = "0xE6D730")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6D730", Offset = "0xE6D730")]
	public class GetRankFromShootingGalleryNode : CallableFunctionNode<ShootingGallery.ScoreRank, ShootingGallery>
	{
		[Token(Token = "0x600202E")]
		[Address(RVA = "0x10D1F4C", Offset = "0x10D1F4C", VA = "0x10D1F4C", Slot = "12")]
		public override ShootingGallery.ScoreRank Invoke(ShootingGallery gallery)
		{
			return default(ShootingGallery.ScoreRank);
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x10D1F68", Offset = "0x10D1F68", VA = "0x10D1F68")]
		public GetRankFromShootingGalleryNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E1")]
	public sealed class CombatSettings
	{
		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int playerMaxHealth;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int shotDamage;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float regenSpeed;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float regenTime;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float facingAwayDamageMultiplier;

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x12151DC", Offset = "0x12151DC", VA = "0x12151DC")]
		public CombatSettings()
		{
		}
	}
	[Token(Token = "0x20005E2")]
	public sealed class MuzzleFlash : MonoBehaviour
	{
		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleSystem[] muzzleFlashes;

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x1145890", Offset = "0x1145890", VA = "0x1145890")]
		public void Fire()
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x11459C4", Offset = "0x11459C4", VA = "0x11459C4")]
		public MuzzleFlash()
		{
		}
	}
	[Token(Token = "0x20005E3")]
	public class SmartDummy : MonoBehaviour
	{
		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FlowScriptController flowScriptController;

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x32DF0A0", Offset = "0x32DF0A0", VA = "0x32DF0A0")]
		public void Stand()
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x32DF0F8", Offset = "0x32DF0F8", VA = "0x32DF0F8")]
		public SmartDummy()
		{
		}
	}
}
namespace MazeTheory.Checkpoints
{
	[Token(Token = "0x20005E4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE6D7B8", Offset = "0xE6D7B8")]
	public sealed class Checkpoint : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005E5")]
		public class CheckpointData
		{
			[Token(Token = "0x4001B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string FlowScriptID;

			[Token(Token = "0x4001B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string[] MethodNames;

			[Token(Token = "0x6002036")]
			[Address(RVA = "0x16A409C", Offset = "0x16A409C", VA = "0x16A409C")]
			public CheckpointData()
			{
			}
		}

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CheckpointData[] checkpointData;

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x1208448", Offset = "0x1208448", VA = "0x1208448")]
		public Checkpoint()
		{
		}
	}
	[Token(Token = "0x20005E6")]
	public class CheckpointFlowScript : MonoBehaviour
	{
		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int order;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FlowScriptController flowScriptController;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<string> functionsToCallOnResume;

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x1208450", Offset = "0x1208450", VA = "0x1208450")]
		public CheckpointFlowScript()
		{
		}
	}
	[Token(Token = "0x20005E7")]
	public static class CheckpointManager
	{
		[Serializable]
		[Token(Token = "0x20005E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D818", Offset = "0xE6D818")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Checkpoint, bool> <>9__8_0;

			[Token(Token = "0x600203F")]
			[Address(RVA = "0x16A4108", Offset = "0x16A4108", VA = "0x16A4108")]
			public <>c()
			{
			}

			[Token(Token = "0x6002040")]
			[Address(RVA = "0x16A4110", Offset = "0x16A4110", VA = "0x16A4110")]
			internal bool <OnResume>b__8_0(Checkpoint x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string _currentCheckpoint;

		[Token(Token = "0x4001B5E")]
		private const string CheckpointKey = "LastCheckpoint";

		[Token(Token = "0x1700036A")]
		public static string CurrentCheckpoint
		{
			[Token(Token = "0x6002038")]
			[Address(RVA = "0x12084D4", Offset = "0x12084D4", VA = "0x12084D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036B")]
		public static string LastSavedCheckpoint
		{
			[Token(Token = "0x6002039")]
			[Address(RVA = "0x1208520", Offset = "0x1208520", VA = "0x1208520")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x12085CC", Offset = "0x12085CC", VA = "0x12085CC")]
		public static void SetCurrentCheckpoint(string currentCheckpoint)
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x12086BC", Offset = "0x12086BC", VA = "0x12086BC")]
		public static void ClearCheckpoint()
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x120870C", Offset = "0x120870C", VA = "0x120870C")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE93F84", Offset = "0xE93F84")]
		public static bool OnResume()
		{
			return default(bool);
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x1208A68", Offset = "0x1208A68", VA = "0x1208A68")]
		public static void OnEnterPortal()
		{
		}
	}
	[Token(Token = "0x20005E9")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6D828", Offset = "0xE6D828")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6D828", Offset = "0xE6D828")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6D828", Offset = "0xE6D828")]
	public sealed class SetCheckpointIDNode : CallableActionNode<string>
	{
		[Token(Token = "0x6002041")]
		[Address(RVA = "0x32DAD18", Offset = "0x32DAD18", VA = "0x32DAD18", Slot = "12")]
		public override void Invoke(string checkpointId)
		{
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0x32DAD24", Offset = "0x32DAD24", VA = "0x32DAD24")]
		public SetCheckpointIDNode()
		{
		}
	}
	[Token(Token = "0x20005EA")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6D8B0", Offset = "0xE6D8B0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6D8B0", Offset = "0xE6D8B0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6D8B0", Offset = "0xE6D8B0")]
	public sealed class GetCheckpointID : CallableFunctionNode<string>
	{
		[Token(Token = "0x6002043")]
		[Address(RVA = "0x10D1BE8", Offset = "0x10D1BE8", VA = "0x10D1BE8", Slot = "12")]
		public override string Invoke()
		{
			return null;
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0x10D1C34", Offset = "0x10D1C34", VA = "0x10D1C34")]
		public GetCheckpointID()
		{
		}
	}
	[Token(Token = "0x20005EB")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6D938", Offset = "0xE6D938")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6D938", Offset = "0xE6D938")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6D938", Offset = "0xE6D938")]
	public sealed class ClearCheckpoint : CallableActionNode
	{
		[Token(Token = "0x6002045")]
		[Address(RVA = "0x12094BC", Offset = "0x12094BC", VA = "0x12094BC", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x12094C0", Offset = "0x12094C0", VA = "0x12094C0")]
		public ClearCheckpoint()
		{
		}
	}
}
namespace MazeTheory.Timeline
{
	[Token(Token = "0x20005EC")]
	public class CharacterAnimationAsset : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationClip animationClip;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool hasCustomAnimAfterMocap;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationClip idleMocapClip;

		[Token(Token = "0x1700036C")]
		public override double duration
		{
			[Token(Token = "0x6002047")]
			[Address(RVA = "0x1207D1C", Offset = "0x1207D1C", VA = "0x1207D1C", Slot = "7")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700036D")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6002049")]
			[Address(RVA = "0x1207ED8", Offset = "0x1207ED8", VA = "0x1207ED8", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x1207DBC", Offset = "0x1207DBC", VA = "0x1207DBC", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0x1207EE0", Offset = "0x1207EE0", VA = "0x1207EE0")]
		public CharacterAnimationAsset()
		{
		}
	}
	[Token(Token = "0x20005ED")]
	public class CharacterAnimationBehaviour : MT_CustomTimelineBehaviour
	{
		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationClip animationClip;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MT_NPCGameplay _npcGameplay;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isGraphConnected;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _prevTime;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool hasCustomAnimAfterMocap;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationClip moCapIdleAnim;

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x1207EE8", Offset = "0x1207EE8", VA = "0x1207EE8", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x1208014", Offset = "0x1208014", VA = "0x1208014", Slot = "23")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x12080D8", Offset = "0x12080D8", VA = "0x12080D8", Slot = "25")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x120817C", Offset = "0x120817C", VA = "0x120817C")]
		public CharacterAnimationBehaviour()
		{
		}
	}
	[Token(Token = "0x20005EE")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xE6D9C0", Offset = "0xE6D9C0")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xE6D9C0", Offset = "0xE6D9C0")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xE6D9C0", Offset = "0xE6D9C0")]
	public class CharacterAnimationTrack : TrackAsset
	{
		[Token(Token = "0x600204F")]
		[Address(RVA = "0x1208184", Offset = "0x1208184", VA = "0x1208184", Slot = "23")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x1208230", Offset = "0x1208230", VA = "0x1208230")]
		public CharacterAnimationTrack()
		{
		}
	}
	[Token(Token = "0x20005EF")]
	public sealed class DialogueAudioPlaybackAsset : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DialogueID;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double Start;

		[Token(Token = "0x1700036E")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6002052")]
			[Address(RVA = "0x1006C40", Offset = "0x1006C40", VA = "0x1006C40", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x1006B20", Offset = "0x1006B20", VA = "0x1006B20", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x1006C48", Offset = "0x1006C48", VA = "0x1006C48")]
		public DialogueAudioPlaybackAsset()
		{
		}
	}
	[Token(Token = "0x20005F0")]
	public class DialogueAudioPlaybackBehaviour : MT_CustomTimelineBehaviour
	{
		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string DialogueID;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MT_DialogueHandler _dialogueHandler;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public double Start;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public double Duration;

		[Token(Token = "0x1700036F")]
		private double End
		{
			[Token(Token = "0x6002054")]
			[Address(RVA = "0x1006C50", Offset = "0x1006C50", VA = "0x1006C50")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000370")]
		public override bool RunInEditor
		{
			[Token(Token = "0x6002055")]
			[Address(RVA = "0x1006C5C", Offset = "0x1006C5C", VA = "0x1006C5C", Slot = "22")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x1006C64", Offset = "0x1006C64", VA = "0x1006C64", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x1006CE0", Offset = "0x1006CE0", VA = "0x1006CE0", Slot = "23")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0x1006E04", Offset = "0x1006E04", VA = "0x1006E04", Slot = "25")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0x1006E88", Offset = "0x1006E88", VA = "0x1006E88")]
		public DialogueAudioPlaybackBehaviour()
		{
		}
	}
	[Token(Token = "0x20005F1")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xE6DA7C", Offset = "0xE6DA7C")]
	public sealed class DialogueAudioPlaybackTrack : TrackAsset
	{
		[Token(Token = "0x600205A")]
		[Address(RVA = "0x1006E90", Offset = "0x1006E90", VA = "0x1006E90", Slot = "23")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0x1007240", Offset = "0x1007240", VA = "0x1007240")]
		public DialogueAudioPlaybackTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005F2")]
	public class DialogueEventBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TimelineEvent timelineEvent;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _hasEventBeingTriggered;

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x1007588", Offset = "0x1007588", VA = "0x1007588", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0x1007B40", Offset = "0x1007B40", VA = "0x1007B40", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0x1007B78", Offset = "0x1007B78", VA = "0x1007B78")]
		public DialogueEventBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005F3")]
	public class DialogueEventPlaybackAsset : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DialogueEventBehaviour template;

		[Token(Token = "0x17000371")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x600205F")]
			[Address(RVA = "0x1007B80", Offset = "0x1007B80", VA = "0x1007B80", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x1007B88", Offset = "0x1007B88", VA = "0x1007B88", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0x1007C3C", Offset = "0x1007C3C", VA = "0x1007C3C")]
		public DialogueEventPlaybackAsset()
		{
		}
	}
	[Token(Token = "0x20005F4")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xE6DADC", Offset = "0xE6DADC")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xE6DADC", Offset = "0xE6DADC")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xE6DADC", Offset = "0xE6DADC")]
	public class DialogueEventTrack : TrackAsset
	{
		[Token(Token = "0x6002062")]
		[Address(RVA = "0x1007CAC", Offset = "0x1007CAC", VA = "0x1007CAC")]
		public DialogueEventTrack()
		{
		}
	}
	[Token(Token = "0x20005F5")]
	public sealed class DialogueFacialAnimPlaybackAsset : PlayableAsset
	{
		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DialogueID;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string LypSyncID;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string HeadAnimID;

		[Token(Token = "0x6002063")]
		[Address(RVA = "0x1007E74", Offset = "0x1007E74", VA = "0x1007E74", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0x1007F98", Offset = "0x1007F98", VA = "0x1007F98")]
		public DialogueFacialAnimPlaybackAsset()
		{
		}
	}
	[Token(Token = "0x20005F6")]
	public sealed class DialogueFacialAnimPlaybackBehaviour : MT_CustomTimelineBehaviour
	{
		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string DialogueID;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string LypSyncID;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string HeadAnimID;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MT_NPCGameplay _npcGameplay;

		[Token(Token = "0x6002065")]
		[Address(RVA = "0x1007FA0", Offset = "0x1007FA0", VA = "0x1007FA0", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x1008020", Offset = "0x1008020", VA = "0x1008020", Slot = "23")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0x100811C", Offset = "0x100811C", VA = "0x100811C", Slot = "25")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x1008120", Offset = "0x1008120", VA = "0x1008120")]
		public DialogueFacialAnimPlaybackBehaviour()
		{
		}
	}
	[Token(Token = "0x20005F7")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xE6DB8C", Offset = "0xE6DB8C")]
	public sealed class DialogueFacialAnimPlaybackTrack : TrackAsset
	{
		[Token(Token = "0x6002069")]
		[Address(RVA = "0x1008128", Offset = "0x1008128", VA = "0x1008128")]
		public DialogueFacialAnimPlaybackTrack()
		{
		}
	}
	[Token(Token = "0x20005F8")]
	public sealed class DialogueTextPlaybackAsset : PlayableAsset
	{
		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DialogueID;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExposedReference<MT_NPCGameplay> npcGameplayComponent;

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x100818C", Offset = "0x100818C", VA = "0x100818C", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x10082D8", Offset = "0x10082D8", VA = "0x10082D8")]
		public DialogueTextPlaybackAsset()
		{
		}
	}
	[Token(Token = "0x20005F9")]
	public sealed class DialogueTextPlaybackBehaviour : MT_CustomTimelineBehaviour
	{
		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string DialogueID;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool HideTimeline;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MT_NPCGameplay NpcGameplay;

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x10082E0", Offset = "0x10082E0", VA = "0x10082E0", Slot = "23")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0x10083B0", Offset = "0x10083B0", VA = "0x10083B0")]
		private void ShowDialogueText(string text, float duration, string speaker, string speakerID)
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x100853C", Offset = "0x100853C", VA = "0x100853C")]
		public DialogueTextPlaybackBehaviour()
		{
		}
	}
	[Token(Token = "0x20005FA")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xE6DBEC", Offset = "0xE6DBEC")]
	public sealed class DialogueTextPlaybackTrack : TrackAsset
	{
		[Token(Token = "0x600206F")]
		[Address(RVA = "0x1008544", Offset = "0x1008544", VA = "0x1008544")]
		public DialogueTextPlaybackTrack()
		{
		}
	}
	[Token(Token = "0x20005FB")]
	public class DialogueTimelineAsset : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayableAsset timelineAsset;

		[Token(Token = "0x17000372")]
		public override double duration
		{
			[Token(Token = "0x6002070")]
			[Address(RVA = "0x10085A8", Offset = "0x10085A8", VA = "0x10085A8", Slot = "7")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000373")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6002072")]
			[Address(RVA = "0x100875C", Offset = "0x100875C", VA = "0x100875C", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x1008644", Offset = "0x1008644", VA = "0x1008644", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0x1008764", Offset = "0x1008764", VA = "0x1008764")]
		public DialogueTimelineAsset()
		{
		}
	}
	[Token(Token = "0x20005FC")]
	public class DialogueTimelineBehaviour : MT_CustomTimelineBehaviour
	{
		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string DialogueAssetID;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MT_NPCGameplay _npcGameplay;

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x100876C", Offset = "0x100876C", VA = "0x100876C", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x1008864", Offset = "0x1008864", VA = "0x1008864", Slot = "23")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x10088AC", Offset = "0x10088AC", VA = "0x10088AC")]
		public DialogueTimelineBehaviour()
		{
		}
	}
	[Token(Token = "0x20005FD")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xE6DC4C", Offset = "0xE6DC4C")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xE6DC4C", Offset = "0xE6DC4C")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xE6DC4C", Offset = "0xE6DC4C")]
	public class DialogueTimelineTrack : TrackAsset
	{
		[Token(Token = "0x6002077")]
		[Address(RVA = "0x10088B4", Offset = "0x10088B4", VA = "0x10088B4", Slot = "23")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x1008960", Offset = "0x1008960", VA = "0x1008960")]
		public DialogueTimelineTrack()
		{
		}
	}
	[Token(Token = "0x20005FE")]
	public class TimelinePause : IPauseable
	{
		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly PlayableDirector[] _playableDirectors;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly double[] _playableDirectorsSpeeds;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<double> _timelinePauseTimes;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<List<AudioSource>> _audioSources;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<List<AudioClip>> _audioClips;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<List<double>> _audioClipStarts;

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x134FEEC", Offset = "0x134FEEC", VA = "0x134FEEC")]
		public TimelinePause(PlayableDirector[] playableDirectors)
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x13500A8", Offset = "0x13500A8", VA = "0x13500A8", Slot = "4")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE93FFC", Offset = "0xE93FFC")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE93FFC", Offset = "0xE93FFC")]
		public void Pause()
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x13514D0", Offset = "0x13514D0", VA = "0x13514D0", Slot = "5")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE9408C", Offset = "0xE9408C")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE9408C", Offset = "0xE9408C")]
		public void Unpause()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x13503B0", Offset = "0x13503B0", VA = "0x13503B0")]
		private void PauseTimelineAudio(PlayableDirector _director)
		{
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x1351688", Offset = "0x1351688", VA = "0x1351688")]
		private void ResumeTimelineAudio(int index)
		{
		}
	}
	[Token(Token = "0x20005FF")]
	public abstract class MT_CustomTimelineBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x2000600")]
		protected enum TimelinePlayState
		{
			[Token(Token = "0x4001B8C")]
			Idle,
			[Token(Token = "0x4001B8D")]
			Playing,
			[Token(Token = "0x4001B8E")]
			Finished
		}

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected TimelinePlayState PlayState;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE85214", Offset = "0xE85214")]
		private object <PlayerData>k__BackingField;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE85224", Offset = "0xE85224")]
		private Playable <Playable>k__BackingField;

		[Token(Token = "0x17000374")]
		public virtual bool RunInEditor
		{
			[Token(Token = "0x600207E")]
			[Address(RVA = "0x112DED8", Offset = "0x112DED8", VA = "0x112DED8", Slot = "22")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000375")]
		protected object PlayerData
		{
			[Token(Token = "0x6002080")]
			[Address(RVA = "0x112DEE8", Offset = "0x112DEE8", VA = "0x112DEE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9412C", Offset = "0xE9412C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600207F")]
			[Address(RVA = "0x112DEE0", Offset = "0x112DEE0", VA = "0x112DEE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9411C", Offset = "0xE9411C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000376")]
		protected Playable Playable
		{
			[Token(Token = "0x6002082")]
			[Address(RVA = "0x112DEF8", Offset = "0x112DEF8", VA = "0x112DEF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9414C", Offset = "0xE9414C")]
			get
			{
				return default(Playable);
			}
			[Token(Token = "0x6002081")]
			[Address(RVA = "0x112DEF0", Offset = "0x112DEF0", VA = "0x112DEF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9413C", Offset = "0xE9413C")]
			private set
			{
			}
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0x112DF04", Offset = "0x112DF04", VA = "0x112DF04", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0x112E010", Offset = "0x112E010", VA = "0x112E010", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0x112DFC8", Offset = "0x112DFC8", VA = "0x112DFC8")]
		private bool CanRun()
		{
			return default(bool);
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0x112E140", Offset = "0x112E140", VA = "0x112E140", Slot = "23")]
		protected virtual void OnStart()
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0x112E144", Offset = "0x112E144", VA = "0x112E144", Slot = "24")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0x112E148", Offset = "0x112E148", VA = "0x112E148", Slot = "25")]
		protected virtual void OnEnd()
		{
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0x112E14C", Offset = "0x112E14C", VA = "0x112E14C")]
		protected MT_CustomTimelineBehaviour()
		{
		}
	}
	[Token(Token = "0x2000601")]
	public static class TimelinePlaying
	{
		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsPlaying;
	}
	[Token(Token = "0x2000602")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6DD08", Offset = "0xE6DD08")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6DD08", Offset = "0xE6DD08")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6DD08", Offset = "0xE6DD08")]
	public sealed class StartTimelineNode : LatentActionNode<string, Transform, AnimationClip>
	{
		[Token(Token = "0x2000603")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DD90", Offset = "0xE6DD90")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isFinished;

			[Token(Token = "0x4001B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayableDirector dir;

			[Token(Token = "0x600208C")]
			[Address(RVA = "0x2165340", Offset = "0x2165340", VA = "0x2165340")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600208D")]
			[Address(RVA = "0x2165348", Offset = "0x2165348", VA = "0x2165348")]
			internal bool <Invoke>g__HasFinished|0()
			{
				return default(bool);
			}

			[Token(Token = "0x600208E")]
			[Address(RVA = "0x2165350", Offset = "0x2165350", VA = "0x2165350")]
			internal void <Invoke>g__DirectorOnStopped|1(PlayableDirector obj)
			{
			}
		}

		[Token(Token = "0x2000604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DDA0", Offset = "0xE6DDA0")]
		private sealed class <Invoke>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string id;

			[Token(Token = "0x4001B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform charRoot;

			[Token(Token = "0x4001B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnimationClip firstClipInTimeline;

			[Token(Token = "0x17000377")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002092")]
				[Address(RVA = "0x2165DB4", Offset = "0x2165DB4", VA = "0x2165DB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000378")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002094")]
				[Address(RVA = "0x2165DFC", Offset = "0x2165DFC", VA = "0x2165DFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600208F")]
			[Address(RVA = "0x2165424", Offset = "0x2165424", VA = "0x2165424")]
			[DebuggerHidden]
			public <Invoke>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002090")]
			[Address(RVA = "0x2165450", Offset = "0x2165450", VA = "0x2165450", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002091")]
			[Address(RVA = "0x2165454", Offset = "0x2165454", VA = "0x2165454", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002093")]
			[Address(RVA = "0x2165DBC", Offset = "0x2165DBC", VA = "0x2165DBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VisualScriptingTimelineDatabase _db;

		[Token(Token = "0x600208A")]
		[Address(RVA = "0x32E3344", Offset = "0x32E3344", VA = "0x32E3344", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9415C", Offset = "0xE9415C")]
		public override IEnumerator Invoke(string id, Transform charRoot, AnimationClip firstClipInTimeline)
		{
			return null;
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0x32E33EC", Offset = "0x32E33EC", VA = "0x32E33EC")]
		public StartTimelineNode()
		{
		}
	}
	[Token(Token = "0x2000605")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6DDB0", Offset = "0xE6DDB0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6DDB0", Offset = "0xE6DDB0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6DDB0", Offset = "0xE6DDB0")]
	public sealed class StartTimelineViaAssetNode : LatentActionNode<PlayableDirector, Transform, AnimationClip>
	{
		[Token(Token = "0x2000606")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DE38", Offset = "0xE6DE38")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isFinished;

			[Token(Token = "0x4001B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayableDirector dir;

			[Token(Token = "0x6002097")]
			[Address(RVA = "0x2165E04", Offset = "0x2165E04", VA = "0x2165E04")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002098")]
			[Address(RVA = "0x2165E0C", Offset = "0x2165E0C", VA = "0x2165E0C")]
			internal bool <Invoke>g__HasFinished|0()
			{
				return default(bool);
			}

			[Token(Token = "0x6002099")]
			[Address(RVA = "0x2165E14", Offset = "0x2165E14", VA = "0x2165E14")]
			internal void <Invoke>g__DirectorOnStopped|1(PlayableDirector obj)
			{
			}
		}

		[Token(Token = "0x2000607")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DE48", Offset = "0xE6DE48")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayableDirector dir;

			[Token(Token = "0x4001B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform charRoot;

			[Token(Token = "0x4001B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnimationClip firstClipInTimeline;

			[Token(Token = "0x17000379")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600209D")]
				[Address(RVA = "0x2166828", Offset = "0x2166828", VA = "0x2166828", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600209F")]
				[Address(RVA = "0x2166870", Offset = "0x2166870", VA = "0x2166870", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600209A")]
			[Address(RVA = "0x2165EE8", Offset = "0x2165EE8", VA = "0x2165EE8")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600209B")]
			[Address(RVA = "0x2165F14", Offset = "0x2165F14", VA = "0x2165F14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600209C")]
			[Address(RVA = "0x2165F18", Offset = "0x2165F18", VA = "0x2165F18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600209E")]
			[Address(RVA = "0x2166830", Offset = "0x2166830", VA = "0x2166830", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0x32E3438", Offset = "0x32E3438", VA = "0x32E3438", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9420C", Offset = "0xE9420C")]
		public override IEnumerator Invoke(PlayableDirector dir, Transform charRoot, AnimationClip firstClipInTimeline)
		{
			return null;
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0x32E34E0", Offset = "0x32E34E0", VA = "0x32E34E0")]
		public StartTimelineViaAssetNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000608")]
	public class CharRootPair
	{
		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform charRootTransf;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string charId;

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x1207D14", Offset = "0x1207D14", VA = "0x1207D14")]
		public CharRootPair()
		{
		}
	}
	[Token(Token = "0x2000609")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6DE58", Offset = "0xE6DE58")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6DE58", Offset = "0xE6DE58")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6DE58", Offset = "0xE6DE58")]
	public sealed class MuteTimelineTrackNode : CallableActionNode<PlayableDirector, int>
	{
		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x1145764", Offset = "0x1145764", VA = "0x1145764", Slot = "12")]
		public override void Invoke(PlayableDirector playableDirector, int trackIndex)
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x1145844", Offset = "0x1145844", VA = "0x1145844")]
		public MuteTimelineTrackNode()
		{
		}
	}
	[Token(Token = "0x200060A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6DEE0", Offset = "0xE6DEE0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6DEE0", Offset = "0xE6DEE0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6DEE0", Offset = "0xE6DEE0")]
	public sealed class UnMuteTimelineTrackNode : CallableActionNode<PlayableDirector, int>
	{
		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x1356F44", Offset = "0x1356F44", VA = "0x1356F44", Slot = "12")]
		public override void Invoke(PlayableDirector playableDirector, int trackIndex)
		{
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x1357020", Offset = "0x1357020", VA = "0x1357020")]
		public UnMuteTimelineTrackNode()
		{
		}
	}
	[Token(Token = "0x200060B")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6DF68", Offset = "0xE6DF68")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6DF68", Offset = "0xE6DF68")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6DF68", Offset = "0xE6DF68")]
	public sealed class StopTimelineNode : LatentActionNode<PlayableDirector>
	{
		[Token(Token = "0x200060C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DFF0", Offset = "0xE6DFF0")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayableDirector dir;

			[Token(Token = "0x1700037B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020AA")]
				[Address(RVA = "0x2166994", Offset = "0x2166994", VA = "0x2166994", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020AC")]
				[Address(RVA = "0x21669DC", Offset = "0x21669DC", VA = "0x21669DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020A7")]
			[Address(RVA = "0x21668F4", Offset = "0x21668F4", VA = "0x21668F4")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60020A8")]
			[Address(RVA = "0x2166920", Offset = "0x2166920", VA = "0x2166920", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020A9")]
			[Address(RVA = "0x2166924", Offset = "0x2166924", VA = "0x2166924", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020AB")]
			[Address(RVA = "0x216699C", Offset = "0x216699C", VA = "0x216699C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x32E39F0", Offset = "0x32E39F0", VA = "0x32E39F0", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE942BC", Offset = "0xE942BC")]
		public override IEnumerator Invoke(PlayableDirector dir)
		{
			return null;
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x32E3A68", Offset = "0x32E3A68", VA = "0x32E3A68")]
		public StopTimelineNode()
		{
		}
	}
	[Token(Token = "0x200060D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6E000", Offset = "0xE6E000")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6E000", Offset = "0xE6E000")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6E000", Offset = "0xE6E000")]
	public sealed class StopTimelineViaIDNode : LatentActionNode<string>
	{
		[Token(Token = "0x200060E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E088", Offset = "0xE6E088")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string id;

			[Token(Token = "0x1700037D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020B2")]
				[Address(RVA = "0x2166B64", Offset = "0x2166B64", VA = "0x2166B64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020B4")]
				[Address(RVA = "0x2166BAC", Offset = "0x2166BAC", VA = "0x2166BAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020AF")]
			[Address(RVA = "0x21669E4", Offset = "0x21669E4", VA = "0x21669E4")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60020B0")]
			[Address(RVA = "0x2166A10", Offset = "0x2166A10", VA = "0x2166A10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020B1")]
			[Address(RVA = "0x2166A14", Offset = "0x2166A14", VA = "0x2166A14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020B3")]
			[Address(RVA = "0x2166B6C", Offset = "0x2166B6C", VA = "0x2166B6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x32E3AB4", Offset = "0x32E3AB4", VA = "0x32E3AB4", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9436C", Offset = "0xE9436C")]
		public override IEnumerator Invoke(string id)
		{
			return null;
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x32E3B2C", Offset = "0x32E3B2C", VA = "0x32E3B2C")]
		public StopTimelineViaIDNode()
		{
		}
	}
	[Token(Token = "0x200060F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6E098", Offset = "0xE6E098")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6E098", Offset = "0xE6E098")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6E098", Offset = "0xE6E098")]
	public sealed class StopAllTimelinesNode : CallableActionNode
	{
		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x32E3690", Offset = "0x32E3690", VA = "0x32E3690", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x32E3764", Offset = "0x32E3764", VA = "0x32E3764")]
		public StopAllTimelinesNode()
		{
		}
	}
}
namespace MazeTheory.IK
{
	[Token(Token = "0x2000610")]
	public class EyeLookAround : MonoBehaviour
	{
		[Token(Token = "0x2000611")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E120", Offset = "0xE6E120")]
		private sealed class <Init>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EyeLookAround <>4__this;

			[Token(Token = "0x1700037F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020CA")]
				[Address(RVA = "0x10309F4", Offset = "0x10309F4", VA = "0x10309F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000380")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020CC")]
				[Address(RVA = "0x1030A3C", Offset = "0x1030A3C", VA = "0x1030A3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020C7")]
			[Address(RVA = "0x103089C", Offset = "0x103089C", VA = "0x103089C")]
			[DebuggerHidden]
			public <Init>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x60020C8")]
			[Address(RVA = "0x10308C8", Offset = "0x10308C8", VA = "0x10308C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020C9")]
			[Address(RVA = "0x10308CC", Offset = "0x10308CC", VA = "0x10308CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020CB")]
			[Address(RVA = "0x10309FC", Offset = "0x10309FC", VA = "0x10309FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000612")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E130", Offset = "0xE6E130")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4001BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EyeLookAround <>4__this;

			[Token(Token = "0x4001BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform t;

			[Token(Token = "0x60020CD")]
			[Address(RVA = "0x10307DC", Offset = "0x10307DC", VA = "0x10307DC")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x60020CE")]
			[Address(RVA = "0x10307E4", Offset = "0x10307E4", VA = "0x10307E4")]
			internal void <UseSetTarget>b__0()
			{
			}
		}

		[Token(Token = "0x2000613")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E140", Offset = "0xE6E140")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4001BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onComplete;

			[Token(Token = "0x60020CF")]
			[Address(RVA = "0x1030880", Offset = "0x1030880", VA = "0x1030880")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x60020D0")]
			[Address(RVA = "0x1030888", Offset = "0x1030888", VA = "0x1030888")]
			internal void <ResetTarget>b__0()
			{
			}
		}

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_NPCLookAt lookAt;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform headTransform;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform eyesLookAtTargetParent;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform eyesLookAtTarget;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float maxEyeAngleX;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float maxEyeAngleZ;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float followTransformOffsetAmount;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float minTimeBetweenSwitch;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float maxTimeBetweenSwitch;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float targetSwitchDuration;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _timeSinceChangeLookTarget;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _timeBetweenSwitch;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool IsPaused;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _useRandom;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion originalParentRotation;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 originalEyesLookAtTargetPostion;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform _setEyeLookAtTransform;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Tween _tween;

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x100C3E0", Offset = "0x100C3E0", VA = "0x100C3E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x100C5A8", Offset = "0x100C5A8", VA = "0x100C5A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x100C5D4", Offset = "0x100C5D4", VA = "0x100C5D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9441C", Offset = "0xE9441C")]
		private IEnumerator Init()
		{
			return null;
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x100C64C", Offset = "0x100C64C", VA = "0x100C64C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x100C7A0", Offset = "0x100C7A0", VA = "0x100C7A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x100C8EC", Offset = "0x100C8EC", VA = "0x100C8EC")]
		private void ResumeRandom()
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x100CA98", Offset = "0x100CA98", VA = "0x100CA98")]
		private void UseSetTarget(Transform t)
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x100C970", Offset = "0x100C970", VA = "0x100C970")]
		private void ResetTarget(Action onComplete)
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x100CBCC", Offset = "0x100CBCC", VA = "0x100CBCC")]
		public void SetEyesLookAtTargetParent(Transform t)
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x100CBD4", Offset = "0x100CBD4", VA = "0x100CBD4")]
		public void SetEyesLookAtTarget(Transform t)
		{
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x100CBDC", Offset = "0x100CBDC", VA = "0x100CBDC")]
		public void SetHeadTransform(Transform t)
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x100CBE4", Offset = "0x100CBE4", VA = "0x100CBE4")]
		public void SetLookAtComponent(MT_NPCLookAt lookAtComponent)
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x100CBEC", Offset = "0x100CBEC", VA = "0x100CBEC")]
		public EyeLookAround()
		{
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x100CC10", Offset = "0x100CC10", VA = "0x100CC10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9447C", Offset = "0xE9447C")]
		private bool <Init>b__20_0()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x100CC2C", Offset = "0x100CC2C", VA = "0x100CC2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9448C", Offset = "0xE9448C")]
		private void <Init>b__20_1()
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x100CD40", Offset = "0x100CD40", VA = "0x100CD40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9449C", Offset = "0xE9449C")]
		private void <ResumeRandom>b__23_0()
		{
		}
	}
	[Token(Token = "0x2000614")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6E150", Offset = "0xE6E150")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6E150", Offset = "0xE6E150")]
	public class EnableGrounder : CallableActionNode<string>
	{
		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x100BA10", Offset = "0x100BA10", VA = "0x100BA10", Slot = "12")]
		public override void Invoke(string npcId)
		{
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x100BA94", Offset = "0x100BA94", VA = "0x100BA94")]
		public EnableGrounder()
		{
		}
	}
	[Token(Token = "0x2000615")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6E1B4", Offset = "0xE6E1B4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6E1B4", Offset = "0xE6E1B4")]
	public class DisableGrounder : CallableActionNode<string>
	{
		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x1008B34", Offset = "0x1008B34", VA = "0x1008B34", Slot = "12")]
		public override void Invoke(string npcId)
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x1008BB8", Offset = "0x1008BB8", VA = "0x1008BB8")]
		public DisableGrounder()
		{
		}
	}
	[Token(Token = "0x2000616")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6E218", Offset = "0xE6E218")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6E218", Offset = "0xE6E218")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6E218", Offset = "0xE6E218")]
	public class StartInteraction : CallableActionNode<FullBodyBipedEffector, string, string>
	{
		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x32E2F00", Offset = "0x32E2F00", VA = "0x32E2F00", Slot = "12")]
		public override void Invoke(FullBodyBipedEffector effector, string npcId, string interactionObjectId)
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x32E302C", Offset = "0x32E302C", VA = "0x32E302C")]
		public StartInteraction()
		{
		}
	}
	[Token(Token = "0x2000617")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6E2A0", Offset = "0xE6E2A0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6E2A0", Offset = "0xE6E2A0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6E2A0", Offset = "0xE6E2A0")]
	public class StopInteraction : CallableActionNode<FullBodyBipedEffector, string>
	{
		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x32E3900", Offset = "0x32E3900", VA = "0x32E3900", Slot = "12")]
		public override void Invoke(FullBodyBipedEffector effector, string npcId)
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x32E3994", Offset = "0x32E3994", VA = "0x32E3994")]
		public StopInteraction()
		{
		}
	}
	[Token(Token = "0x2000618")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6E328", Offset = "0xE6E328")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6E328", Offset = "0xE6E328")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6E328", Offset = "0xE6E328")]
	public class SetFullBodyIKTarget : CallableActionNode<FullBodyBipedEffector, string, Transform, float, Ease>
	{
		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x32DAFD4", Offset = "0x32DAFD4", VA = "0x32DAFD4", Slot = "12")]
		public override void Invoke(FullBodyBipedEffector effector, string npcId, Transform target, float fadeDuration, Ease ease)
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x32DB090", Offset = "0x32DB090", VA = "0x32DB090")]
		public SetFullBodyIKTarget()
		{
		}
	}
	[Token(Token = "0x2000619")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6E3B0", Offset = "0xE6E3B0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6E3B0", Offset = "0xE6E3B0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6E3B0", Offset = "0xE6E3B0")]
	public class RemoveFullBodyIKTarget : CallableActionNode<FullBodyBipedEffector, string, float, Ease>
	{
		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x32CB324", Offset = "0x32CB324", VA = "0x32CB324", Slot = "12")]
		public override void Invoke(FullBodyBipedEffector effector, string npcId, float fadeDuration, Ease ease)
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x32CB3D0", Offset = "0x32CB3D0", VA = "0x32CB3D0")]
		public RemoveFullBodyIKTarget()
		{
		}
	}
	[Token(Token = "0x200061A")]
	public class MT_LookAtIK : MonoBehaviour
	{
		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IKSolverLookAt _eyeSolverPreset;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform[] EyeTransforms;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKSolverLookAt _headSolverPreset;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform[] SpineTransforms;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform HeadTransform;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverAim _aimSolverPreset;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Unity.Collections.ReadOnly]
		private bool _playerIsTarget;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE852E4", Offset = "0xE852E4")]
		public Transform[] AimSolverBonesTransforms;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform[] AimSolverBonesTransformsLeft;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE852F4", Offset = "0xE852F4")]
		public Transform AimTransformOverride;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform AimTransformLeftOverride;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 AimAxisRightArmOverride;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 AimAxisLeftArm;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _aimAxisRightArm;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE85304", Offset = "0xE85304")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE85304", Offset = "0xE85304")]
		public float eyeWeight;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE85344", Offset = "0xE85344")]
		public float headWeight;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8535C", Offset = "0xE8535C")]
		public float aimWeight;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE85374", Offset = "0xE85374")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE85374", Offset = "0xE85374")]
		public float eyeWeightItems;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE853B4", Offset = "0xE853B4")]
		public float headWeightItems;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE853CC", Offset = "0xE853CC")]
		public float aimWeightItems;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE853E4", Offset = "0xE853E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE853E4", Offset = "0xE853E4")]
		public float HeadClampWeight;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE85424", Offset = "0xE85424")]
		public float EyesClampWeight;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8543C", Offset = "0xE8543C")]
		public float AimClampWeight;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE85454", Offset = "0xE85454")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE85454", Offset = "0xE85454")]
		public float AngleLimit;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool UseAngleLimit;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE85498", Offset = "0xE85498")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE85498", Offset = "0xE85498")]
		public float DistanceLimit;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool UseDistanceLimit;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE854DC", Offset = "0xE854DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE854DC", Offset = "0xE854DC")]
		public float eyeLerpSpeed;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8551C", Offset = "0xE8551C")]
		public float stopEyeLerpSpeed;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE85534", Offset = "0xE85534")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE85534", Offset = "0xE85534")]
		public float headLerpSpeed;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE85574", Offset = "0xE85574")]
		public float stopHeadLerpSpeed;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE8558C", Offset = "0xE8558C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8558C", Offset = "0xE8558C")]
		public float aimLerpSpeed;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE855CC", Offset = "0xE855CC")]
		public float stopAimLerpSpeed;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE855E4", Offset = "0xE855E4")]
		[SerializeField]
		private Transform _visualsRoot;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Transform headLookAtLimitOverride;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool fixTransforms;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Animator _animator;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool _updateFrame;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool _componentInitiated;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		private bool _skipSolverUpdate;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float _headWeightAmount;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float _eyeWeightAmount;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float _aimWeightAmount;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool _isEyesLookingAt;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		private bool _isHeadLookingAt;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
		private bool _isAiming;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
		public bool _currentEyeShouldLookAt;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public bool _currentHeadShouldLookAt;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		private bool _currentShouldAimAt;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x116")]
		private bool _didTurnOffDueToAngleLimit;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float _originalHeadSolverClampWeight;

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x12605F0", Offset = "0x12605F0", VA = "0x12605F0")]
		public void SetHeadLookAtLimitOverride(Transform t)
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x1260954", Offset = "0x1260954", VA = "0x1260954")]
		private void SetIsEyesLookingAt(bool b)
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x1260960", Offset = "0x1260960", VA = "0x1260960")]
		public void Initialise()
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x1260A04", Offset = "0x1260A04", VA = "0x1260A04")]
		private void SetupPresetSolvers()
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x1260E70", Offset = "0x1260E70", VA = "0x1260E70")]
		private void SetupSpineAndHead(IKSolverLookAt solver)
		{
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x12611DC", Offset = "0x12611DC", VA = "0x12611DC")]
		public void ChangeToLeftArmAim()
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x12612F4", Offset = "0x12612F4", VA = "0x12612F4")]
		public void ChangeToRightArmAim()
		{
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x126140C", Offset = "0x126140C", VA = "0x126140C")]
		public void ClampSpineForHeadSolver(bool clamp)
		{
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x126143C", Offset = "0x126143C", VA = "0x126143C")]
		private bool AnimatePhysics()
		{
			return default(bool);
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x12614D4", Offset = "0x12614D4", VA = "0x12614D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x1261618", Offset = "0x1261618", VA = "0x1261618")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x126166C", Offset = "0x126166C", VA = "0x126166C")]
		public void SetTargetIsPlayer(bool t)
		{
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x1261678", Offset = "0x1261678", VA = "0x1261678")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x1261528", Offset = "0x1261528", VA = "0x1261528")]
		private void SetClampWeights()
		{
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x126068C", Offset = "0x126068C", VA = "0x126068C")]
		private void CheckTurnOffBeyondLimit()
		{
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x1261758", Offset = "0x1261758", VA = "0x1261758")]
		public IKSolver GetEyeSolver()
		{
			return null;
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x1261760", Offset = "0x1261760", VA = "0x1261760")]
		public IKSolver GetHeadSolver()
		{
			return null;
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x1261768", Offset = "0x1261768", VA = "0x1261768")]
		public IKSolver GetAimSolver()
		{
			return null;
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x12616CC", Offset = "0x12616CC", VA = "0x12616CC")]
		private void UpdateSolver()
		{
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x1260D20", Offset = "0x1260D20", VA = "0x1260D20")]
		private void InitialiseSolver()
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x126156C", Offset = "0x126156C", VA = "0x126156C")]
		private void FixTransforms()
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x1261918", Offset = "0x1261918", VA = "0x1261918")]
		private void UpdateEyes()
		{
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x1261844", Offset = "0x1261844", VA = "0x1261844")]
		private void UpdateHead()
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x1261770", Offset = "0x1261770", VA = "0x1261770")]
		private void UpdateAim()
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x1261A24", Offset = "0x1261A24", VA = "0x1261A24")]
		private float GetAimWeight()
		{
			return default(float);
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x1261A08", Offset = "0x1261A08", VA = "0x1261A08")]
		private float GetHeadWeight()
		{
			return default(float);
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x12619EC", Offset = "0x12619EC", VA = "0x12619EC")]
		private float GetEyeWeight()
		{
			return default(float);
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x1261A40", Offset = "0x1261A40", VA = "0x1261A40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x1261A78", Offset = "0x1261A78", VA = "0x1261A78")]
		[PublicAPI]
		public void SetEyeLookAt(bool isEnabled)
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x1261A84", Offset = "0x1261A84", VA = "0x1261A84")]
		[PublicAPI]
		public bool GetEyeLookAt()
		{
			return default(bool);
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x1261A8C", Offset = "0x1261A8C", VA = "0x1261A8C")]
		[PublicAPI]
		public void SetEyesLookAtTarget(Transform target)
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x1261AA8", Offset = "0x1261AA8", VA = "0x1261AA8")]
		[PublicAPI]
		public void SetHeadLookAt(bool isEnabled)
		{
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0x1261AB4", Offset = "0x1261AB4", VA = "0x1261AB4")]
		[PublicAPI]
		public bool GetHeadLookAt()
		{
			return default(bool);
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x1261ABC", Offset = "0x1261ABC", VA = "0x1261ABC")]
		[PublicAPI]
		public void SetHeadLookAtTarget(Transform target)
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x1261AD8", Offset = "0x1261AD8", VA = "0x1261AD8")]
		[PublicAPI]
		public void SetAim(bool isEnabled)
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0x1261AE4", Offset = "0x1261AE4", VA = "0x1261AE4")]
		[PublicAPI]
		public bool GetLeftAim()
		{
			return default(bool);
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x1261B20", Offset = "0x1261B20", VA = "0x1261B20")]
		[PublicAPI]
		public bool GetRightAim()
		{
			return default(bool);
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x1261B5C", Offset = "0x1261B5C", VA = "0x1261B5C")]
		[PublicAPI]
		public void SetAimTarget(Transform target)
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x1261B78", Offset = "0x1261B78", VA = "0x1261B78")]
		[PublicAPI]
		public Transform GetEyeLookAtTarget()
		{
			return null;
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0x1261B94", Offset = "0x1261B94", VA = "0x1261B94")]
		[PublicAPI]
		public Transform GetHeadLookAtTarget()
		{
			return null;
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x1261BB0", Offset = "0x1261BB0", VA = "0x1261BB0")]
		[PublicAPI]
		public Transform GetAimTarget()
		{
			return null;
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0x1261BCC", Offset = "0x1261BCC", VA = "0x1261BCC")]
		[PublicAPI]
		public void SetVisualsRoot(Transform r)
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0x1261BD4", Offset = "0x1261BD4", VA = "0x1261BD4")]
		[PublicAPI]
		public Transform GetVisualsRoot()
		{
			return null;
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0x1261BDC", Offset = "0x1261BDC", VA = "0x1261BDC")]
		public bool GetDidTurnOffDueToAngleLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0x1261BE4", Offset = "0x1261BE4", VA = "0x1261BE4")]
		public MT_LookAtIK()
		{
		}
	}
}
namespace MazeTheory.NPC
{
	[Token(Token = "0x200061B")]
	public class MT_NPCAudio : MonoBehaviour
	{
		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource mouthEmitter;

		[Token(Token = "0x600210A")]
		[Address(RVA = "0x10F3AB8", Offset = "0x10F3AB8", VA = "0x10F3AB8")]
		public AudioSource GetMouthEmitter()
		{
			return null;
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0x10F3AC0", Offset = "0x10F3AC0", VA = "0x10F3AC0")]
		public void PlayDialogueAudio(string dialogueID, float startPerc = 0f)
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0x10F3B00", Offset = "0x10F3B00", VA = "0x10F3B00")]
		public void Reset()
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0x10F3B5C", Offset = "0x10F3B5C", VA = "0x10F3B5C")]
		public void PlayDialogueAudio(AudioClip track)
		{
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0x10F3B98", Offset = "0x10F3B98", VA = "0x10F3B98")]
		public void Pause()
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0x10F3BB4", Offset = "0x10F3BB4", VA = "0x10F3BB4")]
		public void Resume()
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0x10F3BD0", Offset = "0x10F3BD0", VA = "0x10F3BD0")]
		public void Seek(float time)
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0x10F3C60", Offset = "0x10F3C60", VA = "0x10F3C60")]
		public void SetAudioSource(AudioSource mouthAudioSource)
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x10F3C68", Offset = "0x10F3C68", VA = "0x10F3C68")]
		public MT_NPCAudio()
		{
		}
	}
	[Token(Token = "0x200061C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6E438", Offset = "0xE6E438")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6E438", Offset = "0xE6E438")]
	public sealed class SlowMoCharIntroNode : LatentActionNode<MT_AnimClipPlayer, float, float, int, int>
	{
		[Token(Token = "0x200061D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E49C", Offset = "0xE6E49C")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float timeDilation;

			[Token(Token = "0x4001BF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MT_AnimClipPlayer textAnimClipPlayer;

			[Token(Token = "0x4001BF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int introAnimIndex;

			[Token(Token = "0x4001BF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float duration;

			[Token(Token = "0x4001BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int outroAnimIndex;

			[Token(Token = "0x17000381")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002118")]
				[Address(RVA = "0x32C9B8C", Offset = "0x32C9B8C", VA = "0x32C9B8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000382")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600211A")]
				[Address(RVA = "0x32C9BD4", Offset = "0x32C9BD4", VA = "0x32C9BD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002115")]
			[Address(RVA = "0x32C99D4", Offset = "0x32C99D4", VA = "0x32C99D4")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002116")]
			[Address(RVA = "0x32C9A00", Offset = "0x32C9A00", VA = "0x32C9A00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002117")]
			[Address(RVA = "0x32C9A04", Offset = "0x32C9A04", VA = "0x32C9A04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002119")]
			[Address(RVA = "0x32C9B94", Offset = "0x32C9B94", VA = "0x32C9B94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x32DEE7C", Offset = "0x32DEE7C", VA = "0x32DEE7C", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE945EC", Offset = "0xE945EC")]
		public override IEnumerator Invoke(MT_AnimClipPlayer textAnimClipPlayer, float timeDilation, float duration, int introAnimIndex, int outroAnimIndex)
		{
			return null;
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0x32DEF24", Offset = "0x32DEF24", VA = "0x32DEF24")]
		public SlowMoCharIntroNode()
		{
		}
	}
	[Token(Token = "0x200061E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE6E4AC", Offset = "0xE6E4AC")]
	public class MT_FaceAnims : ScriptableObject
	{
		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationClip[] facialAnims;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationClip[] headAnims;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<string, AnimationClip> _lipSyncClips;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, AnimationClip> _headAnimClips;

		[Token(Token = "0x600211B")]
		[Address(RVA = "0x15BE9B4", Offset = "0x15BE9B4", VA = "0x15BE9B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x15BEB7C", Offset = "0x15BEB7C", VA = "0x15BEB7C")]
		public AnimationClip[] GetClips(string clipName)
		{
			return null;
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0x15BED8C", Offset = "0x15BED8C", VA = "0x15BED8C")]
		public AnimationClip GetLipSyncClip(string clipName)
		{
			return null;
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0x15BEE5C", Offset = "0x15BEE5C", VA = "0x15BEE5C")]
		public AnimationClip GetHeadClip(string clipName)
		{
			return null;
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0x15BEF2C", Offset = "0x15BEF2C", VA = "0x15BEF2C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0x15BEF80", Offset = "0x15BEF80", VA = "0x15BEF80")]
		public MT_FaceAnims()
		{
		}
	}
	[Token(Token = "0x200061F")]
	public class MT_NPCBlinking : MonoBehaviour
	{
		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NPCAnimationController _npcAnimation;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationClip _blinkClip;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _paused;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private readonly uint _minTimeBetweenBlinks;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly uint _maxTimeBetweenBlinks;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _currentWaitTime;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _timeElapsed;

		[Token(Token = "0x6002121")]
		[Address(RVA = "0x10F3C70", Offset = "0x10F3C70", VA = "0x10F3C70")]
		public void SetAnimationController(NPCAnimationController controller)
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x10F3C78", Offset = "0x10F3C78", VA = "0x10F3C78")]
		public void Pause()
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0x10F3C84", Offset = "0x10F3C84", VA = "0x10F3C84")]
		public void Unpause()
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x10F3C8C", Offset = "0x10F3C8C", VA = "0x10F3C8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0x10F3C9C", Offset = "0x10F3C9C", VA = "0x10F3C9C")]
		private void CheckBlinkTime()
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x10F3D30", Offset = "0x10F3D30", VA = "0x10F3D30")]
		private void DoBlink()
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x10F3E2C", Offset = "0x10F3E2C", VA = "0x10F3E2C")]
		public MT_NPCBlinking()
		{
		}
	}
	[Token(Token = "0x2000620")]
	public class MT_NPCColliderHit : MonoBehaviour
	{
		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MT_NPCHealth npcHealth;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_NPCHitReaction npcHitReaction;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LayerMask layerMask;

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x10F3E48", Offset = "0x10F3E48", VA = "0x10F3E48")]
		private void OnCollisionEnter(UnityEngine.Collision collision)
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x10F3E4C", Offset = "0x10F3E4C", VA = "0x10F3E4C")]
		private void OnCollision(UnityEngine.Collision collision)
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x10F4250", Offset = "0x10F4250", VA = "0x10F4250")]
		public MT_NPCColliderHit()
		{
		}
	}
	[Token(Token = "0x2000621")]
	public class MT_NPCColliderHitInfo : MonoBehaviour, IShootable
	{
		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MT_NPCHealth npcHealth;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_NPCHitReaction npcHitReaction;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MT_PlayerEvents.NpcBodyPart bodyPart;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8566C", Offset = "0xE8566C")]
		public float shotMultiplier;

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x10F4258", Offset = "0x10F4258", VA = "0x10F4258", Slot = "4")]
		public void OnShot(float bulletForce, float bulletDamage, Vector3 direction)
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x10F4330", Offset = "0x10F4330", VA = "0x10F4330")]
		public MT_NPCColliderHitInfo()
		{
		}
	}
	[Token(Token = "0x2000622")]
	public class MT_NPCHitReaction : MonoBehaviour
	{
		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_NPCGameplay _gameplay;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _mouthEmitterGameObject;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MT_PlayerEvents.NpcBodyPart _defaultHitToUse;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationClip[] _hitClipsHead;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationClip _hitClipBody;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationClip _hitClipLeftArm;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AnimationClip _hitClipLeftForearm;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationClip _hitClipLeftLeg;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AnimationClip _hitClipLeftLowerLeg;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AnimationClip _hitClipRightArm;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AnimationClip _hitClipRightForearm;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AnimationClip _hitClipRightLeg;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AnimationClip _hitClipRightLowerLeg;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _isPlaying;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MT_NPCColliderHit _colliderHit;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly float _lookAtTime;

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x10F40E0", Offset = "0x10F40E0", VA = "0x10F40E0")]
		public void HitNpc(MT_PlayerEvents.NpcBodyPart bodyPart, float strength, Vector3 colPoint, Vector3 direction, Collider col, Transform hitObject, MT_NPCColliderHit colliderHit)
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x10F6DB8", Offset = "0x10F6DB8", VA = "0x10F6DB8")]
		private AnimationClip GetClip(MT_PlayerEvents.NpcBodyPart bodyPart)
		{
			return null;
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x10F6F34", Offset = "0x10F6F34", VA = "0x10F6F34")]
		private void PlayAudioLine()
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x10F6F38", Offset = "0x10F6F38", VA = "0x10F6F38")]
		private void PlayHitAnimation(AnimationClip clip)
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x10F7004", Offset = "0x10F7004", VA = "0x10F7004")]
		public MT_NPCHitReaction()
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x10F7014", Offset = "0x10F7014", VA = "0x10F7014")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9469C", Offset = "0xE9469C")]
		private void <PlayHitAnimation>b__19_0()
		{
		}
	}
	[Token(Token = "0x2000623")]
	public class MT_NPCLookAt : MonoBehaviour
	{
		[Token(Token = "0x2000624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E50C", Offset = "0xE6E50C")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4001C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_NPCLookAt <>4__this;

			[Token(Token = "0x4001C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x6002148")]
			[Address(RVA = "0x103CB64", Offset = "0x103CB64", VA = "0x103CB64")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6002149")]
			[Address(RVA = "0x103CB6C", Offset = "0x103CB6C", VA = "0x103CB6C")]
			internal void <TweenHeadToTarget>b__0()
			{
			}
		}

		[Token(Token = "0x2000625")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E51C", Offset = "0xE6E51C")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4001C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_NPCLookAt <>4__this;

			[Token(Token = "0x4001C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x600214A")]
			[Address(RVA = "0x103CBD0", Offset = "0x103CBD0", VA = "0x103CBD0")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x600214B")]
			[Address(RVA = "0x103CBD8", Offset = "0x103CBD8", VA = "0x103CBD8")]
			internal void <TweenEyesToTarget>b__0()
			{
			}
		}

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_LookAtIK lookAtIK;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Ease eyesEaseType;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Ease headEaseType;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IsInitialised;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _playerSingleEyeIKTarget;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _playerEyesIKTarget;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _playerHeadIKTarget;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _playerBodyIKTarget;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform _eyeTransitionObject;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _headTransitionObject;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _isTweeningEyes;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _isTweeningHead;

		[Token(Token = "0x14000047")]
		public event Action<Transform> OnEyesTargetSet
		{
			[Token(Token = "0x6002133")]
			[Address(RVA = "0x10F70D0", Offset = "0x10F70D0", VA = "0x10F70D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE946AC", Offset = "0xE946AC")]
			add
			{
			}
			[Token(Token = "0x6002134")]
			[Address(RVA = "0x10F7170", Offset = "0x10F7170", VA = "0x10F7170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE946BC", Offset = "0xE946BC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public event Action OnStopLookingAt
		{
			[Token(Token = "0x6002135")]
			[Address(RVA = "0x10F7210", Offset = "0x10F7210", VA = "0x10F7210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE946CC", Offset = "0xE946CC")]
			add
			{
			}
			[Token(Token = "0x6002136")]
			[Address(RVA = "0x10F72B0", Offset = "0x10F72B0", VA = "0x10F72B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE946DC", Offset = "0xE946DC")]
			remove
			{
			}
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x10F4B50", Offset = "0x10F4B50", VA = "0x10F4B50")]
		public void Initialize(MT_NPCGameplay gameplay)
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x10F57D4", Offset = "0x10F57D4", VA = "0x10F57D4")]
		public void LookAt(Transform ikTarget, float time)
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x10F58C8", Offset = "0x10F58C8", VA = "0x10F58C8")]
		public void LookAtPlayer(float time)
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x10F5B1C", Offset = "0x10F5B1C", VA = "0x10F5B1C")]
		public void LookAt_HeadOnly(Transform ikTarget, float time)
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x10F5BC4", Offset = "0x10F5BC4", VA = "0x10F5BC4")]
		public void LookAtPlayer_HeadOnly(float time)
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x10F59B8", Offset = "0x10F59B8", VA = "0x10F59B8")]
		public void LookAt_EyesOnly(Transform ikTarget, float time)
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x10F5A60", Offset = "0x10F5A60", VA = "0x10F5A60")]
		public void LookAtPlayer_EyesOnly(float time)
		{
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x10F5C58", Offset = "0x10F5C58", VA = "0x10F5C58")]
		public void StopLookingAt()
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x10F5D58", Offset = "0x10F5D58", VA = "0x10F5D58")]
		public void AimAt(Transform ikTarget)
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x10F5E24", Offset = "0x10F5E24", VA = "0x10F5E24")]
		public void AimAtPlayerSingleEye()
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x10F5EF4", Offset = "0x10F5EF4", VA = "0x10F5EF4")]
		public void AimAtPlayerHead()
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x10F5FC4", Offset = "0x10F5FC4", VA = "0x10F5FC4")]
		public void AimAtPlayerBody()
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x10F6094", Offset = "0x10F6094", VA = "0x10F6094")]
		public void StopAimingAt()
		{
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0x10F52E4", Offset = "0x10F52E4", VA = "0x10F52E4")]
		public void ResetIK()
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x10F7718", Offset = "0x10F7718", VA = "0x10F7718")]
		private void TweenHeadToTarget(Transform target, float time)
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0x10F73F4", Offset = "0x10F73F4", VA = "0x10F73F4")]
		private void TweenEyesToTarget(Transform target, float time)
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0x10F79F8", Offset = "0x10F79F8", VA = "0x10F79F8")]
		public MT_NPCLookAt()
		{
		}
	}
	[Token(Token = "0x2000626")]
	public sealed class NPCAnimationController : MonoBehaviour
	{
		[Token(Token = "0x2000627")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E52C", Offset = "0xE6E52C")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4001C48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NPCAnimationController <>4__this;

			[Token(Token = "0x4001C49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationClip clip2;

			[Token(Token = "0x4001C4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action onComplete;

			[Token(Token = "0x6002172")]
			[Address(RVA = "0x32BC07C", Offset = "0x32BC07C", VA = "0x32BC07C")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6002173")]
			[Address(RVA = "0x32BC084", Offset = "0x32BC084", VA = "0x32BC084")]
			internal void <PlayMoCap>b__0()
			{
			}
		}

		[Token(Token = "0x2000628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E53C", Offset = "0xE6E53C")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4001C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NPCAnimationController <>4__this;

			[Token(Token = "0x4001C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onComplete;

			[Token(Token = "0x6002174")]
			[Address(RVA = "0x32BC0D4", Offset = "0x32BC0D4", VA = "0x32BC0D4")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6002175")]
			[Address(RVA = "0x32BC0DC", Offset = "0x32BC0DC", VA = "0x32BC0DC")]
			internal void <PlayFlinchClip>b__0()
			{
			}
		}

		[Token(Token = "0x2000629")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E54C", Offset = "0xE6E54C")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4001C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NPCAnimationController <>4__this;

			[Token(Token = "0x4001C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationClip clip;

			[Token(Token = "0x6002176")]
			[Address(RVA = "0x32BC158", Offset = "0x32BC158", VA = "0x32BC158")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6002177")]
			[Address(RVA = "0x32BC160", Offset = "0x32BC160", VA = "0x32BC160")]
			internal void <PlayNeutralFaceClip>b__0()
			{
			}
		}

		[Token(Token = "0x200062A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E55C", Offset = "0xE6E55C")]
		private sealed class <>c__DisplayClass47_0
		{
			[Token(Token = "0x4001C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool finished;

			[Token(Token = "0x6002178")]
			[Address(RVA = "0x32BC184", Offset = "0x32BC184", VA = "0x32BC184")]
			public <>c__DisplayClass47_0()
			{
			}

			[Token(Token = "0x6002179")]
			[Address(RVA = "0x32BC18C", Offset = "0x32BC18C", VA = "0x32BC18C")]
			internal void <PlayAnimClipStateCo>g__ONComplete|0()
			{
			}

			[Token(Token = "0x600217A")]
			[Address(RVA = "0x32BC198", Offset = "0x32BC198", VA = "0x32BC198")]
			internal bool <PlayAnimClipStateCo>g__IsTrue|1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200062B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E56C", Offset = "0xE6E56C")]
		private sealed class <PlayAnimClipStateCo>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NPCAnimationController <>4__this;

			[Token(Token = "0x4001C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<AnimationClip> clips;

			[Token(Token = "0x4001C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action onComplete;

			[Token(Token = "0x4001C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Queue<AnimationClip> <queue>5__2;

			[Token(Token = "0x17000385")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600217E")]
				[Address(RVA = "0x32BC67C", Offset = "0x32BC67C", VA = "0x32BC67C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000386")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002180")]
				[Address(RVA = "0x32BC6C4", Offset = "0x32BC6C4", VA = "0x32BC6C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600217B")]
			[Address(RVA = "0x32BC3F8", Offset = "0x32BC3F8", VA = "0x32BC3F8")]
			[DebuggerHidden]
			public <PlayAnimClipStateCo>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x600217C")]
			[Address(RVA = "0x32BC424", Offset = "0x32BC424", VA = "0x32BC424", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600217D")]
			[Address(RVA = "0x32BC428", Offset = "0x32BC428", VA = "0x32BC428", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600217F")]
			[Address(RVA = "0x32BC684", Offset = "0x32BC684", VA = "0x32BC684", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200062C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E57C", Offset = "0xE6E57C")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x4001C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AnimatorStateInfo currInfo;

			[Token(Token = "0x6002181")]
			[Address(RVA = "0x32BC1A0", Offset = "0x32BC1A0", VA = "0x32BC1A0")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x6002182")]
			[Address(RVA = "0x32BC1A8", Offset = "0x32BC1A8", VA = "0x32BC1A8")]
			internal bool <PlayAndReturnToIdle>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200062D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E58C", Offset = "0xE6E58C")]
		private sealed class <PlayAndReturnToIdle>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NPCAnimationController <>4__this;

			[Token(Token = "0x4001C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string state;

			[Token(Token = "0x17000387")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002186")]
				[Address(RVA = "0x32BC3A8", Offset = "0x32BC3A8", VA = "0x32BC3A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000388")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002188")]
				[Address(RVA = "0x32BC3F0", Offset = "0x32BC3F0", VA = "0x32BC3F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002183")]
			[Address(RVA = "0x32BC1E8", Offset = "0x32BC1E8", VA = "0x32BC1E8")]
			[DebuggerHidden]
			public <PlayAndReturnToIdle>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6002184")]
			[Address(RVA = "0x32BC214", Offset = "0x32BC214", VA = "0x32BC214", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002185")]
			[Address(RVA = "0x32BC218", Offset = "0x32BC218", VA = "0x32BC218", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002187")]
			[Address(RVA = "0x32BC3B0", Offset = "0x32BC3B0", VA = "0x32BC3B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200062E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E59C", Offset = "0xE6E59C")]
		private sealed class <WaitForAnimToFinish>d__55 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NPCAnimationController <>4__this;

			[Token(Token = "0x4001C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animLength;

			[Token(Token = "0x4001C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action onComplete;

			[Token(Token = "0x17000389")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600218C")]
				[Address(RVA = "0x32BC7A0", Offset = "0x32BC7A0", VA = "0x32BC7A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600218E")]
				[Address(RVA = "0x32BC7E8", Offset = "0x32BC7E8", VA = "0x32BC7E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002189")]
			[Address(RVA = "0x32BC6CC", Offset = "0x32BC6CC", VA = "0x32BC6CC")]
			[DebuggerHidden]
			public <WaitForAnimToFinish>d__55(int <>1__state)
			{
			}

			[Token(Token = "0x600218A")]
			[Address(RVA = "0x32BC6F8", Offset = "0x32BC6F8", VA = "0x32BC6F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600218B")]
			[Address(RVA = "0x32BC6FC", Offset = "0x32BC6FC", VA = "0x32BC6FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600218D")]
			[Address(RVA = "0x32BC7A8", Offset = "0x32BC7A8", VA = "0x32BC7A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200062F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E5AC", Offset = "0xE6E5AC")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x4001C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AnimatorStateInfo stateInfo;

			[Token(Token = "0x4001C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string state;

			[Token(Token = "0x600218F")]
			[Address(RVA = "0x32BC1D0", Offset = "0x32BC1D0", VA = "0x32BC1D0")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x6002190")]
			[Address(RVA = "0x32BC1D8", Offset = "0x32BC1D8", VA = "0x32BC1D8")]
			internal bool <WaitForStateToFinish>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E5BC", Offset = "0xE6E5BC")]
		private sealed class <WaitForStateToFinish>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string state;

			[Token(Token = "0x4001C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NPCAnimationController <>4__this;

			[Token(Token = "0x4001C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int layerIndex;

			[Token(Token = "0x4001C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action onComplete;

			[Token(Token = "0x1700038B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002194")]
				[Address(RVA = "0x32BCA14", Offset = "0x32BCA14", VA = "0x32BCA14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002196")]
				[Address(RVA = "0x32BCA5C", Offset = "0x32BCA5C", VA = "0x32BCA5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002191")]
			[Address(RVA = "0x32BC7F0", Offset = "0x32BC7F0", VA = "0x32BC7F0")]
			[DebuggerHidden]
			public <WaitForStateToFinish>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x6002192")]
			[Address(RVA = "0x32BC81C", Offset = "0x32BC81C", VA = "0x32BC81C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002193")]
			[Address(RVA = "0x32BC820", Offset = "0x32BC820", VA = "0x32BC820", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002195")]
			[Address(RVA = "0x32BCA1C", Offset = "0x32BCA1C", VA = "0x32BCA1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HybridAnimancerComponent hybridAnimancer;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _visuals;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimatorOverrideController _animatorOverrideController;

		[Token(Token = "0x4001C31")]
		private const string IdleState = "Idle";

		[Token(Token = "0x4001C32")]
		private const string FacialAnimState = "FacialAnim";

		[Token(Token = "0x4001C33")]
		private const string HitState = "Hit";

		[Token(Token = "0x4001C34")]
		private const string LipSyncState = "LipSync";

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int BlinkLayerID;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int NeutralFaceLayerID;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int HeadLayerID;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int FlinchLayerID;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AnimationClip _neutralFaceClip;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _numOfClips;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _playingClip;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string _hitClip;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _customClipName;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string _customClipName2;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string _facialCLipName;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string _lipSyncClipName;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string _shootClipName;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string _takeCoverClipName;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string _takeDamageClipName;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string _reloadClipName;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Action _animationStateOnComplete;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool _clipStateRunning;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Coroutine _aimCo;

		[Token(Token = "0x17000383")]
		private int FacialAnimLayerID
		{
			[Token(Token = "0x600214C")]
			[Address(RVA = "0x1145FF0", Offset = "0x1145FF0", VA = "0x1145FF0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000384")]
		private int LipSyncLayerID
		{
			[Token(Token = "0x600214D")]
			[Address(RVA = "0x1146048", Offset = "0x1146048", VA = "0x1146048")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x11460A0", Offset = "0x11460A0", VA = "0x11460A0")]
		public Transform GetVisuals()
		{
			return null;
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0x1146170", Offset = "0x1146170", VA = "0x1146170")]
		public void PlayMoCap(AnimationClip clip1, AnimationClip clip2, Action onComplete)
		{
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0x1146678", Offset = "0x1146678", VA = "0x1146678")]
		public void PlayAnimationClip(AnimationClip clip, Action onComplete)
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0x11466F0", Offset = "0x11466F0", VA = "0x11466F0")]
		public void PlayAnimClipInstantly(AnimationClip clip, Action onComplete)
		{
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0x1146734", Offset = "0x1146734", VA = "0x1146734")]
		public void PlayFlinchClip(AnimationClip clip, Action onComplete)
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0x114695C", Offset = "0x114695C", VA = "0x114695C")]
		public void PlayAnimation(AnimationClip clip, Action onComplete)
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x11469C4", Offset = "0x11469C4", VA = "0x11469C4")]
		public void PlayAnimationWithBlend(AnimationClip clip, Action onComplete, float time, float speed = 1f)
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0x1146A50", Offset = "0x1146A50", VA = "0x1146A50")]
		public void ForceToIdle()
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x1146AC4", Offset = "0x1146AC4", VA = "0x1146AC4")]
		public void ForceStop()
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0x1146AF8", Offset = "0x1146AF8", VA = "0x1146AF8")]
		public void PlayBlinkClip(AnimationClip clip)
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0x1146CE4", Offset = "0x1146CE4", VA = "0x1146CE4")]
		public void PlayNeutralFaceClip(AnimationClip clip)
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0x1146F48", Offset = "0x1146F48", VA = "0x1146F48")]
		public void PlayFaceClipAndReturnToNeutral(AnimationClip clip, Action finishAction)
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0x11471E8", Offset = "0x11471E8", VA = "0x11471E8")]
		public void PlayHeadClip(AnimationClip clip)
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0x114730C", Offset = "0x114730C", VA = "0x114730C")]
		public void PlayFacialAnim(AnimationClip clip, Action onComplete)
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0x11473C8", Offset = "0x11473C8", VA = "0x11473C8")]
		public void PlayLipSync(AnimationClip clip, Action onComplete)
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0x1147454", Offset = "0x1147454", VA = "0x1147454")]
		public void JumpToState(string stateName, int layer, [Optional] Action onComplete)
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0x11474A4", Offset = "0x11474A4", VA = "0x11474A4")]
		public void PlayHitAnimation(AnimationClip clip)
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0x1147528", Offset = "0x1147528", VA = "0x1147528")]
		public void PlayAnimationClipState(List<AnimationClip> clips, Action onComplete, bool iDoNothingIAmJustForOldAPIReasons = false)
		{
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0x1147560", Offset = "0x1147560", VA = "0x1147560")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE946EC", Offset = "0xE946EC")]
		private IEnumerator PlayAnimClipStateCo(List<AnimationClip> clips, Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0x1147608", Offset = "0x1147608", VA = "0x1147608")]
		public void StopAnimationClipState()
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0x1147640", Offset = "0x1147640", VA = "0x1147640")]
		public void StopAnimationState()
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0x1147678", Offset = "0x1147678", VA = "0x1147678")]
		public void PlayState(string state)
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0x11476A4", Offset = "0x11476A4", VA = "0x11476A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9474C", Offset = "0xE9474C")]
		private IEnumerator PlayAndReturnToIdle(string state)
		{
			return null;
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0x1147738", Offset = "0x1147738", VA = "0x1147738")]
		public void SetAnimationBool(int id, bool value)
		{
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0x1147758", Offset = "0x1147758", VA = "0x1147758")]
		public void SetAnimationBool(string id, bool value)
		{
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0x1147778", Offset = "0x1147778", VA = "0x1147778")]
		public void SetAnimationTrigger(string id)
		{
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0x11465D4", Offset = "0x11465D4", VA = "0x11465D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE947AC", Offset = "0xE947AC")]
		private IEnumerator WaitForAnimToFinish(float animLength, Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0x1147794", Offset = "0x1147794", VA = "0x1147794")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9480C", Offset = "0xE9480C")]
		private IEnumerator WaitForStateToFinish(string state, int layerIndex, Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0x11462C8", Offset = "0x11462C8", VA = "0x11462C8")]
		private void ChangeClip(AnimationClip clip, ref string oldClip)
		{
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0x1146688", Offset = "0x1146688", VA = "0x1146688")]
		public void PlayCustomClip(AnimationClip clip, Action onComplete)
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0x114784C", Offset = "0x114784C", VA = "0x114784C")]
		public void Aim(Action onComplete)
		{
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0x1147898", Offset = "0x1147898", VA = "0x1147898")]
		public void ForceStopAim()
		{
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0x1147858", Offset = "0x1147858", VA = "0x1147858")]
		private IEnumerator AimCo(Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0x11478E0", Offset = "0x11478E0", VA = "0x11478E0")]
		public NPCAnimationController()
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0x1147A64", Offset = "0x1147A64", VA = "0x1147A64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9486C", Offset = "0xE9486C")]
		private void <PlayBlinkClip>b__38_0()
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0x1147AB4", Offset = "0x1147AB4", VA = "0x1147AB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9487C", Offset = "0xE9487C")]
		private void <PlayFaceClipAndReturnToNeutral>b__40_0()
		{
		}
	}
	[Token(Token = "0x2000631")]
	public sealed class NPCMovementController : MonoBehaviour
	{
		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform visuals;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HybridAnimancerComponent animator;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator nativeAnimator;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CombatAI _combatAI;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CombatAlly _combatAlly;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE85808", Offset = "0xE85808")]
		private float agentStoppingDistanceMargin;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE85848", Offset = "0xE85848")]
		private NPCNavigation.NpcMovementSpeed <Speed>k__BackingField;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private NavMeshAgent agent;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _stopping;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _moving;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Action _onReachDestination;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector2 _velocity;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector2 _smoothDeltaPosition;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE85868", Offset = "0xE85868")]
		private int pose;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _poseDelta;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float blendTreeFadeSpeed;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float velocityMultiplier;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float dirMultiplier;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 _targetDestination;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool movementLocked;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool movementLockable;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 forward;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 aimForward;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 right;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 toOtherWaypoint;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float distanceToWaypoint;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool cubeCreated;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private GameObject cube;

		[Token(Token = "0x1700038D")]
		public NPCNavigation.NpcMovementSpeed Speed
		{
			[Token(Token = "0x6002198")]
			[Address(RVA = "0x1148A8C", Offset = "0x1148A8C", VA = "0x1148A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE949DC", Offset = "0xE949DC")]
			get
			{
				return default(NPCNavigation.NpcMovementSpeed);
			}
			[Token(Token = "0x6002197")]
			[Address(RVA = "0x1148A84", Offset = "0x1148A84", VA = "0x1148A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE949CC", Offset = "0xE949CC")]
			set
			{
			}
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0x1148A94", Offset = "0x1148A94", VA = "0x1148A94")]
		private void Start()
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0x1148B0C", Offset = "0x1148B0C", VA = "0x1148B0C")]
		public void Restart()
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0x1148BE8", Offset = "0x1148BE8", VA = "0x1148BE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0x1148C9C", Offset = "0x1148C9C", VA = "0x1148C9C")]
		public void StartMoveWaypoints(Transform[] waypoints, float preMoveWait, Action onStartMove, Action onReachDestination)
		{
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0x1148CA0", Offset = "0x1148CA0", VA = "0x1148CA0")]
		public void ClearCurrentMove()
		{
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0x1148CA4", Offset = "0x1148CA4", VA = "0x1148CA4")]
		public void TurnToFace(Transform target, Action onComplete)
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0x1148CA8", Offset = "0x1148CA8", VA = "0x1148CA8")]
		public void TurnToFacePosition(Vector3 target, Action onComplete)
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x1148CAC", Offset = "0x1148CAC", VA = "0x1148CAC")]
		public void StartMove(Transform target, float preMoveWait, Action onStartMove, Action onReachDestination)
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x1148DD4", Offset = "0x1148DD4", VA = "0x1148DD4")]
		public void MatchNavAgentPosition()
		{
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x1148E14", Offset = "0x1148E14", VA = "0x1148E14")]
		public void UpdateTarget(Transform target)
		{
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x1148E18", Offset = "0x1148E18", VA = "0x1148E18")]
		public void ForceStop()
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x1148E1C", Offset = "0x1148E1C", VA = "0x1148E1C")]
		private void Update()
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0x11493E0", Offset = "0x11493E0", VA = "0x11493E0")]
		private void HandleMovement()
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0x1148F5C", Offset = "0x1148F5C", VA = "0x1148F5C")]
		private void SynchronizeAnimatorAndAgent()
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x11492C0", Offset = "0x11492C0", VA = "0x11492C0")]
		private void UpdatePose()
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x11496EC", Offset = "0x11496EC", VA = "0x11496EC")]
		private void Stop()
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x1149758", Offset = "0x1149758", VA = "0x1149758")]
		public bool GetIsMoving()
		{
			return default(bool);
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x11497AC", Offset = "0x11497AC", VA = "0x11497AC")]
		public void SetPose(int p)
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x11497B4", Offset = "0x11497B4", VA = "0x11497B4")]
		public void SetVisuals(Transform value)
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0x11497BC", Offset = "0x11497BC", VA = "0x11497BC")]
		public void SetAnimator(HybridAnimancerComponent value)
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x11497C4", Offset = "0x11497C4", VA = "0x11497C4")]
		public void SetNativeAnimator(Animator value)
		{
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0x11497CC", Offset = "0x11497CC", VA = "0x11497CC")]
		public void SetCombatAI(CombatAI value)
		{
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0x11497D4", Offset = "0x11497D4", VA = "0x11497D4")]
		public void SetAgent(NavMeshAgent a)
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0x11497DC", Offset = "0x11497DC", VA = "0x11497DC")]
		public static float CalculateAngle180_v3(Vector3 fromDir, Vector3 toDir)
		{
			return default(float);
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0x114982C", Offset = "0x114982C", VA = "0x114982C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0x11498B0", Offset = "0x11498B0", VA = "0x11498B0")]
		public NPCMovementController()
		{
		}
	}
	[Token(Token = "0x2000632")]
	public sealed class NPCNavigation : MonoBehaviour
	{
		[Token(Token = "0x2000633")]
		public enum NpcMovementSpeed
		{
			[Token(Token = "0x4001C8D")]
			Walking,
			[Token(Token = "0x4001C8E")]
			Jogging,
			[Token(Token = "0x4001C8F")]
			Running
		}

		[Token(Token = "0x2000634")]
		private enum AnimType
		{
			[Token(Token = "0x4001C91")]
			Turn,
			[Token(Token = "0x4001C92")]
			StartMove,
			[Token(Token = "0x4001C93")]
			Move,
			[Token(Token = "0x4001C94")]
			EndMove
		}

		[Token(Token = "0x2000635")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E5CC", Offset = "0xE6E5CC")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NPCNavigation <>4__this;

			[Token(Token = "0x4001C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform[] waypoints;

			[Token(Token = "0x4001C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action onReachDestination;

			[Token(Token = "0x60021C5")]
			[Address(RVA = "0x32BE8C8", Offset = "0x32BE8C8", VA = "0x32BE8C8")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x60021C6")]
			[Address(RVA = "0x32BE8D0", Offset = "0x32BE8D0", VA = "0x32BE8D0")]
			internal void <NavThroughWaypoints>b__0()
			{
			}
		}

		[Token(Token = "0x2000636")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E5DC", Offset = "0xE6E5DC")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NPCNavigation <>4__this;

			[Token(Token = "0x4001C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform pos;

			[Token(Token = "0x4001C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action onReachDestination;

			[Token(Token = "0x60021C7")]
			[Address(RVA = "0x32BE924", Offset = "0x32BE924", VA = "0x32BE924")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x60021C8")]
			[Address(RVA = "0x32BE92C", Offset = "0x32BE92C", VA = "0x32BE92C")]
			internal void <GoToPosition>b__0()
			{
			}
		}

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NPCMovementController movementController;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform root;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<AnimType, string> _animDic;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action _onWaypointBehaviourFinished;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _directionToTarget;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string _moveAnimState;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE858F8", Offset = "0xE858F8")]
		private bool <IsDoingWaypointBehaviour>k__BackingField;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CombatAI CombatAI;

		[Token(Token = "0x1700038E")]
		public bool IsDoingWaypointBehaviour
		{
			[Token(Token = "0x60021B3")]
			[Address(RVA = "0x11499EC", Offset = "0x11499EC", VA = "0x11499EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE949EC", Offset = "0xE949EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021B4")]
			[Address(RVA = "0x11499F4", Offset = "0x11499F4", VA = "0x11499F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE949FC", Offset = "0xE949FC")]
			private set
			{
			}
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x1149A00", Offset = "0x1149A00", VA = "0x1149A00")]
		public void SetRoot(Transform r)
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x1149A08", Offset = "0x1149A08", VA = "0x1149A08")]
		public Transform GetRoot()
		{
			return null;
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x1149A10", Offset = "0x1149A10", VA = "0x1149A10")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x1149A78", Offset = "0x1149A78", VA = "0x1149A78")]
		private void Update()
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x1149B54", Offset = "0x1149B54", VA = "0x1149B54")]
		public void NavThroughWaypoints(Transform[] waypoints, Action onReachDestination, NpcMovementSpeed speed)
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x1149C3C", Offset = "0x1149C3C", VA = "0x1149C3C")]
		public void GoToPosition(Transform pos, Action onReachDestination, NpcMovementSpeed speed, bool ignoreTurn = false)
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x1149E44", Offset = "0x1149E44", VA = "0x1149E44")]
		public void GoToWaypoint(MT_Waypoint navWaypoint, NpcMovementSpeed speed, Action onReachWaypoint, Action onWaypointBehaviourFinished)
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x1149E84", Offset = "0x1149E84", VA = "0x1149E84")]
		public void Stop()
		{
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x1149E88", Offset = "0x1149E88", VA = "0x1149E88")]
		public void Continue()
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x1149E8C", Offset = "0x1149E8C", VA = "0x1149E8C")]
		public void SetCurrentWaypointEmpty()
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x1149ECC", Offset = "0x1149ECC", VA = "0x1149ECC")]
		private void OnReachDestination(Transform pos, Action onReachDestination)
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x1149F08", Offset = "0x1149F08", VA = "0x1149F08")]
		public void StopToDoFlinch()
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x1149F0C", Offset = "0x1149F0C", VA = "0x1149F0C")]
		public void ResumeFromFlinch()
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x1149F10", Offset = "0x1149F10", VA = "0x1149F10")]
		public void UpdateTarget(Transform target)
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x1149AC0", Offset = "0x1149AC0", VA = "0x1149AC0")]
		private bool IsAlive()
		{
			return default(bool);
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x1149F28", Offset = "0x1149F28", VA = "0x1149F28")]
		public NPCNavigation()
		{
		}
	}
	[Token(Token = "0x2000637")]
	public sealed class NPCTurnController
	{
		[Token(Token = "0x2000638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E5EC", Offset = "0xE6E5EC")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NPCTurnController <>4__this;

			[Token(Token = "0x4001CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float previousSpeed;

			[Token(Token = "0x4001CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action onComplete;

			[Token(Token = "0x60021CF")]
			[Address(RVA = "0x32BF500", Offset = "0x32BF500", VA = "0x32BF500")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x60021D0")]
			[Address(RVA = "0x32BF508", Offset = "0x32BF508", VA = "0x32BF508")]
			internal void <TurnToLookAt>b__0()
			{
			}
		}

		[Token(Token = "0x2000639")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E5FC", Offset = "0xE6E5FC")]
		private sealed class <TurnAndThenComplete>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NPCTurnController <>4__this;

			[Token(Token = "0x4001CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <angle>5__2;

			[Token(Token = "0x4001CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Quaternion <from>5__3;

			[Token(Token = "0x4001CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Quaternion <to>5__4;

			[Token(Token = "0x4001CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <duration>5__5;

			[Token(Token = "0x4001CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <elapsed>5__6;

			[Token(Token = "0x1700038F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021D4")]
				[Address(RVA = "0x32BF978", Offset = "0x32BF978", VA = "0x32BF978", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000390")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021D6")]
				[Address(RVA = "0x32BF9C0", Offset = "0x32BF9C0", VA = "0x32BF9C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021D1")]
			[Address(RVA = "0x32BF5C0", Offset = "0x32BF5C0", VA = "0x32BF5C0")]
			[DebuggerHidden]
			public <TurnAndThenComplete>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60021D2")]
			[Address(RVA = "0x32BF5EC", Offset = "0x32BF5EC", VA = "0x32BF5EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021D3")]
			[Address(RVA = "0x32BF5F0", Offset = "0x32BF5F0", VA = "0x32BF5F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021D5")]
			[Address(RVA = "0x32BF980", Offset = "0x32BF980", VA = "0x32BF980", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly HybridAnimancerComponent _hybridAnimancer;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Transform _root;

		[Token(Token = "0x4001C9D")]
		private const float MaxTurnTime = 2f;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _currentDirection;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _targetDirection;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Action _onComplete;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isStartingToMove;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _moveSpeed;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _startRot;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _endRot;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _turningToLookAt;

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0x114BAD0", Offset = "0x114BAD0", VA = "0x114BAD0")]
		public NPCTurnController(HybridAnimancerComponent a, Transform root)
		{
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x114BB20", Offset = "0x114BB20", VA = "0x114BB20")]
		public void TurnToLookAt(Transform theTransform, Transform target, float time, Action onComplete)
		{
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x114BB7C", Offset = "0x114BB7C", VA = "0x114BB7C")]
		public void TurnToLookAt(Transform theTransform, Vector3 targetPos, float time, Action onComplete)
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x114BE24", Offset = "0x114BE24", VA = "0x114BE24")]
		public void TurnToFaceDirection(Transform theTransform, Vector3 targetDirection, float time, Action onComplete)
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x114BEA0", Offset = "0x114BEA0", VA = "0x114BEA0")]
		public void DoTurn(MonoBehaviour mb, Vector3 newDirection, Action onComplete, bool isStartingToMove = false, float moveSpeed = -1f)
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x114BF14", Offset = "0x114BF14", VA = "0x114BF14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE94A0C", Offset = "0xE94A0C")]
		private IEnumerator TurnAndThenComplete()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200063A")]
	public struct GruntHead
	{
		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform head;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform[] hair;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] tache;
	}
	[Serializable]
	[Token(Token = "0x200063B")]
	public struct GruntPartLODs
	{
		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform[] LODLevel;
	}
	[Serializable]
	[Token(Token = "0x200063C")]
	public struct GruntHeadLODs
	{
		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GruntHead[] LODLevel;
	}
	[Token(Token = "0x200063D")]
	[ExecuteInEditMode]
	public class MT_GruntRandomiser : MonoBehaviour
	{
		[Token(Token = "0x200063E")]
		public enum TexturePropertyType
		{
			[Token(Token = "0x4001CC8")]
			Albedo,
			[Token(Token = "0x4001CC9")]
			Normal,
			[Token(Token = "0x4001CCA")]
			MetallicGlossMap
		}

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LODGroup LODGroup;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GruntHeadLODs[] heads;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GruntPartLODs[] hats;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GruntPartLODs[] coats;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GruntPartLODs[] torsos;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GruntPartLODs[] legs;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GruntPartLODs[] shoes;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Shader[] shadersToIgnore;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int headIdx;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int hatIdx;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int coatIdx;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int torsoIdx;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int legIdx;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int shoeIdx;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int hairIdx;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int tacheIdx;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<GameObject> ObjectsToCleanUp;

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x15C6D58", Offset = "0x15C6D58", VA = "0x15C6D58")]
		private bool HasLODGroup()
		{
			return default(bool);
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x15C6E6C", Offset = "0x15C6E6C", VA = "0x15C6E6C")]
		private Vector4 RectToUVScaleAndOffset(Rect rect)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x15C6F00", Offset = "0x15C6F00", VA = "0x15C6F00")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE94ABC", Offset = "0xE94ABC")]
		public void Randomise()
		{
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x15C740C", Offset = "0x15C740C", VA = "0x15C740C")]
		private Matrix4x4 GetTRSMatrix()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x15C75FC", Offset = "0x15C75FC", VA = "0x15C75FC")]
		private Texture2D BlankTexture(int resolutionX, int resolutionY, Color32 defaultColor, bool linear = true)
		{
			return null;
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x15C7298", Offset = "0x15C7298", VA = "0x15C7298")]
		private static void EnableRandom(GruntPartLODs[] bodyParts, bool allowNoItem = false)
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x15C6F70", Offset = "0x15C6F70", VA = "0x15C6F70")]
		private static void EnableRandomHead(GruntHeadLODs[] heads)
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x15C76F4", Offset = "0x15C76F4", VA = "0x15C76F4")]
		public MT_GruntRandomiser()
		{
		}
	}
	[Token(Token = "0x200063F")]
	public class MT_NPCDialogueText : MonoBehaviour
	{
		[Token(Token = "0x2000640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E61C", Offset = "0xE6E61C")]
		private sealed class <ShowLabel>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_NPCDialogueText <>4__this;

			[Token(Token = "0x4001CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x17000391")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021EB")]
				[Address(RVA = "0x103C8E0", Offset = "0x103C8E0", VA = "0x103C8E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000392")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021ED")]
				[Address(RVA = "0x103C928", Offset = "0x103C928", VA = "0x103C928", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021E8")]
			[Address(RVA = "0x103C7C4", Offset = "0x103C7C4", VA = "0x103C7C4")]
			[DebuggerHidden]
			public <ShowLabel>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60021E9")]
			[Address(RVA = "0x103C7F0", Offset = "0x103C7F0", VA = "0x103C7F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021EA")]
			[Address(RVA = "0x103C7F4", Offset = "0x103C7F4", VA = "0x103C7F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021EC")]
			[Address(RVA = "0x103C8E8", Offset = "0x103C8E8", VA = "0x103C8E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject uiParent;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI label;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _cameraTransform;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine _labelCoroutine;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool trackTransform;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform transformToTrack;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 offset;

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0x10F446C", Offset = "0x10F446C", VA = "0x10F446C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x10F4574", Offset = "0x10F4574", VA = "0x10F4574")]
		private void Update()
		{
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x10F473C", Offset = "0x10F473C", VA = "0x10F473C")]
		public void ShowText(string text, float time)
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x10F47B4", Offset = "0x10F47B4", VA = "0x10F47B4")]
		public void HideText()
		{
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x10F4858", Offset = "0x10F4858", VA = "0x10F4858")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE94AD4", Offset = "0xE94AD4")]
		private IEnumerator ShowLabel(float time)
		{
			return null;
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x10F48E0", Offset = "0x10F48E0", VA = "0x10F48E0")]
		public void Reset()
		{
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x10F48E4", Offset = "0x10F48E4", VA = "0x10F48E4")]
		public void SetUIParent(GameObject uiParentObj)
		{
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x10F48EC", Offset = "0x10F48EC", VA = "0x10F48EC")]
		public void SetLabel(TextMeshProUGUI text)
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x10F48F4", Offset = "0x10F48F4", VA = "0x10F48F4")]
		public MT_NPCDialogueText()
		{
		}
	}
	[Token(Token = "0x2000641")]
	public sealed class CombatAI : MonoBehaviour
	{
		[Token(Token = "0x2000642")]
		private enum ShootState
		{
			[Token(Token = "0x4001D1E")]
			Shoot,
			[Token(Token = "0x4001D1F")]
			Shooting,
			[Token(Token = "0x4001D20")]
			Aiming
		}

		[Token(Token = "0x2000643")]
		private enum AllyTargeting
		{
			[Token(Token = "0x4001D22")]
			NeverShootAllies,
			[Token(Token = "0x4001D23")]
			SometimesShootAllies,
			[Token(Token = "0x4001D24")]
			AlwaysShootAllies
		}

		[Token(Token = "0x2000644")]
		private enum State
		{
			[Token(Token = "0x4001D26")]
			TakeCover,
			[Token(Token = "0x4001D27")]
			Shoot,
			[Token(Token = "0x4001D28")]
			ShootAlly,
			[Token(Token = "0x4001D29")]
			TakeDamage
		}

		[Token(Token = "0x2000645")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E62C", Offset = "0xE6E62C")]
		private sealed class <DieCo>d__106 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CombatAI <>4__this;

			[Token(Token = "0x17000395")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002223")]
				[Address(RVA = "0x16A4734", Offset = "0x16A4734", VA = "0x16A4734", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000396")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002225")]
				[Address(RVA = "0x16A477C", Offset = "0x16A477C", VA = "0x16A477C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002220")]
			[Address(RVA = "0x16A4610", Offset = "0x16A4610", VA = "0x16A4610")]
			[DebuggerHidden]
			public <DieCo>d__106(int <>1__state)
			{
			}

			[Token(Token = "0x6002221")]
			[Address(RVA = "0x16A463C", Offset = "0x16A463C", VA = "0x16A463C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002222")]
			[Address(RVA = "0x16A4640", Offset = "0x16A4640", VA = "0x16A4640", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002224")]
			[Address(RVA = "0x16A473C", Offset = "0x16A473C", VA = "0x16A473C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000646")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E63C", Offset = "0xE6E63C")]
		private sealed class <MuzzleFlashCo>d__111 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CombatAI <>4__this;

			[Token(Token = "0x17000397")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002229")]
				[Address(RVA = "0x16A4840", Offset = "0x16A4840", VA = "0x16A4840", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000398")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600222B")]
				[Address(RVA = "0x16A4888", Offset = "0x16A4888", VA = "0x16A4888", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002226")]
			[Address(RVA = "0x16A4784", Offset = "0x16A4784", VA = "0x16A4784")]
			[DebuggerHidden]
			public <MuzzleFlashCo>d__111(int <>1__state)
			{
			}

			[Token(Token = "0x6002227")]
			[Address(RVA = "0x16A47B0", Offset = "0x16A47B0", VA = "0x16A47B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002228")]
			[Address(RVA = "0x16A47B4", Offset = "0x16A47B4", VA = "0x16A47B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600222A")]
			[Address(RVA = "0x16A4848", Offset = "0x16A4848", VA = "0x16A4848", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform firePoint;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform aimAtTransform;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MT_NPCGameplay npcGameplay;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool combatRunning;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool combatPaused;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string combatGroup;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MT_NPCHealth health;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool isInvincible;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ZA_CombatSFX combatSFX;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool GamePaused;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float rapidShotDistance;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float _shotCooldown;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float minTimeBetweenShots;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float maxTimeBetweenShots;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int minBurst;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private int maxBurst;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private int currentBurst;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private SecondHandOnGun secondHandOnGun;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private MT_BarkBankLibrary _barkBankLibrary;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float shoutTimeMin;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float shoutTimeMax;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool enableShout;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AnimationCurve damageCurve;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _shoutTimer;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float _currentShoutTime;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private bool disableDamage;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float timeToRemoveBody;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE85B38", Offset = "0xE85B38")]
		private float accuracy;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE85B7C", Offset = "0xE85B7C")]
		private int damageMultiplier;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private CombatAlly _allyTarget;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AllyTargeting _allyTargetingSetting;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private MT_DeathAnimationBank deathAnimationBank;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public int minNumberOfShots;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public int maxNumberOfShots;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int currentNumberOfShots;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public int shotsTaken;

		[Token(Token = "0x4001CFA")]
		private const float PlayerHeadVisibilityRefreshRate = 0.5f;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _canSeePlayerHead;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _playerHeadLastCalculationTime;

		[Token(Token = "0x4001CFD")]
		private const float AbovePlayerHeadVisibilityRefreshRate = 0.5f;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool _canSeeAbovePlayerHead;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _abovePlayerHeadLastCalculationTime;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private readonly Vector3 _fireOffsetFromBottom;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private ShootState currentShootState;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE85BFC", Offset = "0xE85BFC")]
		[SerializeField]
		private Transform defaultShootTarget;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private GameObject muzzleFlashGameObj;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GameObject gunObject;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private bool gunEnabled;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private AnimationClip shootClip;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private AnimationClip shootIdleClip;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private NPCAnimationController animationController;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private MT_VFX_BulletTrail bulletTrail;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private AnimationClip crouchToStandClip;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private AnimationClip standToCrouchClip;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private AnimationClip takeCoverClip;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public float minCoverTime;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public float maxCoverTime;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public float currentCoverTime;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public float coverTimer;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private bool canTransitionToCrouch;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[SerializeField]
		private State currentState;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Vector3 _localPos;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private AnimationClip deathClip;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private AnimationClip damageClip;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Vector3 _debugPointStart;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private Vector3 _debugPointEnd;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Vector3 _debugMyPos;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private Vector3 _debugPlayerPos;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool _standTransitionFinished;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[SerializeField]
		private float _transitionSpeed;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Collider[] _collidersDisabledWhenKilled;

		[Token(Token = "0x17000393")]
		public Vector3 CurrentPos
		{
			[Token(Token = "0x60021F0")]
			[Address(RVA = "0x120CEA0", Offset = "0x120CEA0", VA = "0x120CEA0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000394")]
		public bool IsAlive
		{
			[Token(Token = "0x60021F1")]
			[Address(RVA = "0x120CECC", Offset = "0x120CECC", VA = "0x120CECC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0x120CE88", Offset = "0x120CE88", VA = "0x120CE88")]
		public void SetAnimationController(NPCAnimationController c)
		{
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0x120CE98", Offset = "0x120CE98", VA = "0x120CE98")]
		public void SetCombatGroup(string value)
		{
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x120CF00", Offset = "0x120CF00", VA = "0x120CF00")]
		public void SetUpGun(Transform fireP, GameObject gunObj, GameObject muzzleObject)
		{
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x120CFB8", Offset = "0x120CFB8", VA = "0x120CFB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x120D47C", Offset = "0x120D47C", VA = "0x120D47C")]
		public void BeginCombat()
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x120D530", Offset = "0x120D530", VA = "0x120D530")]
		public void StopCombat()
		{
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x120D618", Offset = "0x120D618", VA = "0x120D618")]
		public void PauseCombat()
		{
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x120D70C", Offset = "0x120D70C", VA = "0x120D70C")]
		public void ResumeCombat()
		{
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x120D758", Offset = "0x120D758", VA = "0x120D758")]
		private void UpdateShout()
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x120D8B8", Offset = "0x120D8B8", VA = "0x120D8B8")]
		private void AssesAvailableShoutsAndPlayOne()
		{
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0x120DC18", Offset = "0x120DC18", VA = "0x120DC18")]
		private void UpdateState()
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x120F38C", Offset = "0x120F38C", VA = "0x120F38C")]
		private void CrouchTransitionFinished()
		{
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x120F3F8", Offset = "0x120F3F8", VA = "0x120F3F8")]
		private void StandTransitionFinished()
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x120F404", Offset = "0x120F404", VA = "0x120F404")]
		private void ReturnToShootIdle()
		{
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x120F2AC", Offset = "0x120F2AC", VA = "0x120F2AC")]
		private void AimTowardsAlly()
		{
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x120E698", Offset = "0x120E698", VA = "0x120E698")]
		private void EnterShootState(ShootState state)
		{
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0x120E924", Offset = "0x120E924", VA = "0x120E924")]
		private void LoopAimingAnimation()
		{
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0x120F3CC", Offset = "0x120F3CC", VA = "0x120F3CC")]
		private void ResetShotCooldown()
		{
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x120F464", Offset = "0x120F464", VA = "0x120F464")]
		public void TakeDamage(float damage, AnimationClip clip)
		{
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x120F9A0", Offset = "0x120F9A0", VA = "0x120F9A0")]
		public void TakeCover(float time)
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x120F9B0", Offset = "0x120F9B0", VA = "0x120F9B0")]
		public void Shoot(int shots)
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x120E7B8", Offset = "0x120E7B8", VA = "0x120E7B8")]
		public bool IsCloseDistance()
		{
			return default(bool);
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x120EC58", Offset = "0x120EC58", VA = "0x120EC58")]
		public float GetDistanceFromPlayer()
		{
			return default(float);
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x120FA30", Offset = "0x120FA30", VA = "0x120FA30")]
		public MT_NPCGameplay GetNPCGameplay()
		{
			return null;
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x120F690", Offset = "0x120F690", VA = "0x120F690")]
		public void Die(string deathID = "", MT_DeathAnimationBank.Direction dir = MT_DeathAnimationBank.Direction.none)
		{
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x120FE5C", Offset = "0x120FE5C", VA = "0x120FE5C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x120FC90", Offset = "0x120FC90", VA = "0x120FC90")]
		private void DisableAllPhysicsComponents()
		{
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x120FEFC", Offset = "0x120FEFC", VA = "0x120FEFC")]
		public void EnableAllPhysicsComponents()
		{
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x120FDE4", Offset = "0x120FDE4", VA = "0x120FDE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE94B84", Offset = "0xE94B84")]
		private IEnumerator DieCo()
		{
			return null;
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x120FF6C", Offset = "0x120FF6C", VA = "0x120FF6C")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE94BE4", Offset = "0xE94BE4")]
		private void Update()
		{
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x120DB44", Offset = "0x120DB44", VA = "0x120DB44")]
		private bool CanSeePlayerHead()
		{
			return default(bool);
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x120E6E4", Offset = "0x120E6E4", VA = "0x120E6E4")]
		private bool CanSeeAbovePlayerHead()
		{
			return default(bool);
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x1210078", Offset = "0x1210078", VA = "0x1210078")]
		private Vector3 FireCheckPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x120F234", Offset = "0x120F234", VA = "0x120F234")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE94C5C", Offset = "0xE94C5C")]
		private IEnumerator MuzzleFlashCo()
		{
			return null;
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x1210338", Offset = "0x1210338", VA = "0x1210338")]
		public void SetDefaultShotTarget([Optional] Transform shotTarget)
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x1210348", Offset = "0x1210348", VA = "0x1210348")]
		public void SetAccuracy(float acc)
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x1210350", Offset = "0x1210350", VA = "0x1210350")]
		public void SetDamageMultiplier(int multiplier)
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x1210358", Offset = "0x1210358", VA = "0x1210358")]
		public MT_BarkBankLibrary GetBarkBank()
		{
			return null;
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0x1210360", Offset = "0x1210360", VA = "0x1210360")]
		public void SetDeathBank(MT_DeathAnimationBank b)
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x1210368", Offset = "0x1210368", VA = "0x1210368")]
		public GameObject GetGunObject()
		{
			return null;
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x1210370", Offset = "0x1210370", VA = "0x1210370")]
		public void SetNPCGameplay(MT_NPCGameplay npc)
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x1210378", Offset = "0x1210378", VA = "0x1210378")]
		public CombatAI()
		{
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x12103DC", Offset = "0x12103DC", VA = "0x12103DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE94CBC", Offset = "0xE94CBC")]
		private void <UpdateState>b__88_0()
		{
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x12103E0", Offset = "0x12103E0", VA = "0x12103E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE94CCC", Offset = "0xE94CCC")]
		private void <UpdateState>b__88_1()
		{
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x12103E4", Offset = "0x12103E4", VA = "0x12103E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE94CDC", Offset = "0xE94CDC")]
		private void <UpdateState>b__88_2()
		{
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x12103E8", Offset = "0x12103E8", VA = "0x12103E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE94CEC", Offset = "0xE94CEC")]
		private void <UpdateState>b__88_3()
		{
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0x12103EC", Offset = "0x12103EC", VA = "0x12103EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE94CFC", Offset = "0xE94CFC")]
		private void <UpdateState>b__88_4()
		{
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x12103F0", Offset = "0x12103F0", VA = "0x12103F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE94D0C", Offset = "0xE94D0C")]
		private void <TakeDamage>b__96_0()
		{
		}
	}
	[Token(Token = "0x2000647")]
	public sealed class CombatHitPoint : MonoBehaviour, IShootable
	{
		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CombatAI ai;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_PassiveDamageBarker damageBarker;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float multiplier;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationClip clip;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FlowScriptController gameOverController;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent shotEvent;

		[Token(Token = "0x600222C")]
		[Address(RVA = "0x12147B8", Offset = "0x12147B8", VA = "0x12147B8")]
		public void SetCombatAI(CombatAI combatAI)
		{
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0x12147C0", Offset = "0x12147C0", VA = "0x12147C0")]
		public CombatAI GetCombatAI()
		{
			return null;
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0x12147C8", Offset = "0x12147C8", VA = "0x12147C8")]
		public void SetGameOverFlowScriptController(FlowScriptController fsc)
		{
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0x12147D0", Offset = "0x12147D0", VA = "0x12147D0", Slot = "4")]
		public void OnShot(float bulletForce, float bulletDamage, Vector3 direction)
		{
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0x12148E0", Offset = "0x12148E0", VA = "0x12148E0")]
		public CombatHitPoint()
		{
		}
	}
}
namespace MazeTheory.Scripting.HandPosing
{
	[Serializable]
	[Token(Token = "0x2000648")]
	public class PosingEvent
	{
		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ObjectTag;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onCollide;

		[Token(Token = "0x6002231")]
		[Address(RVA = "0x1089A9C", Offset = "0x1089A9C", VA = "0x1089A9C")]
		public PosingEvent()
		{
		}
	}
	[Token(Token = "0x2000649")]
	public class MT_CollisionPosing : MonoBehaviour
	{
		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HandType handType;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_HandInteractor handInteractor;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PosingEvent[] posingEvents;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Transform, int> _objects;

		[Token(Token = "0x6002232")]
		[Address(RVA = "0x112D26C", Offset = "0x112D26C", VA = "0x112D26C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x112D2F8", Offset = "0x112D2F8", VA = "0x112D2F8")]
		private void OnCollisionEnter(UnityEngine.Collision other)
		{
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x112D4D0", Offset = "0x112D4D0", VA = "0x112D4D0")]
		private void OnCollisionExit(UnityEngine.Collision other)
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0x112D6A8", Offset = "0x112D6A8", VA = "0x112D6A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x112D6FC", Offset = "0x112D6FC", VA = "0x112D6FC")]
		public MT_CollisionPosing()
		{
		}
	}
}
namespace MazeTheory.Scripting.FlowCanvas
{
	[Token(Token = "0x200064A")]
	public class NPCBarkNodes
	{
		[Token(Token = "0x200064B")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6E64C", Offset = "0xE6E64C")]
		[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6E64C", Offset = "0xE6E64C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6E64C", Offset = "0xE6E64C")]
		public class MT_QueueBark : LatentActionNode<string, AudioClip, AnimationClip, string>
		{
			[Token(Token = "0x200064C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E6D4", Offset = "0xE6E6D4")]
			private sealed class <>c__DisplayClass0_0
			{
				[Token(Token = "0x4001D3C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool hasFinished;

				[Token(Token = "0x600223A")]
				[Address(RVA = "0x2171418", Offset = "0x2171418", VA = "0x2171418")]
				public <>c__DisplayClass0_0()
				{
				}

				[Token(Token = "0x600223B")]
				[Address(RVA = "0x2171420", Offset = "0x2171420", VA = "0x2171420")]
				internal bool <Invoke>g__HasFinished|0()
				{
					return default(bool);
				}

				[Token(Token = "0x600223C")]
				[Address(RVA = "0x2171428", Offset = "0x2171428", VA = "0x2171428")]
				internal void <Invoke>g__OnComplete|1()
				{
				}
			}

			[Token(Token = "0x200064D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E6E4", Offset = "0xE6E6E4")]
			private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001D3D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001D3E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001D3F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public AudioClip audioClip;

				[Token(Token = "0x4001D40")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public string npcId;

				[Token(Token = "0x4001D41")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public AnimationClip animationClip;

				[Token(Token = "0x4001D42")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				public string checkerID;

				[Token(Token = "0x17000399")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6002240")]
					[Address(RVA = "0x2171730", Offset = "0x2171730", VA = "0x2171730", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700039A")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6002242")]
					[Address(RVA = "0x2171778", Offset = "0x2171778", VA = "0x2171778", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x600223D")]
				[Address(RVA = "0x2171434", Offset = "0x2171434", VA = "0x2171434")]
				[DebuggerHidden]
				public <Invoke>d__0(int <>1__state)
				{
				}

				[Token(Token = "0x600223E")]
				[Address(RVA = "0x2171460", Offset = "0x2171460", VA = "0x2171460", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x600223F")]
				[Address(RVA = "0x2171464", Offset = "0x2171464", VA = "0x2171464", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6002241")]
				[Address(RVA = "0x2171738", Offset = "0x2171738", VA = "0x2171738", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x6002238")]
			[Address(RVA = "0x32BCD4C", Offset = "0x32BCD4C", VA = "0x32BCD4C", Slot = "15")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE94DBC", Offset = "0xE94DBC")]
			public override IEnumerator Invoke(string npcId, AudioClip audioClip, AnimationClip animationClip, string checkerID)
			{
				return null;
			}

			[Token(Token = "0x6002239")]
			[Address(RVA = "0x32BCE10", Offset = "0x32BCE10", VA = "0x32BCE10")]
			public MT_QueueBark()
			{
			}
		}

		[Token(Token = "0x200064E")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6E6F4", Offset = "0xE6E6F4")]
		[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6E6F4", Offset = "0xE6E6F4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6E6F4", Offset = "0xE6E6F4")]
		public class MT_AddBarkToFrontOfQueue : LatentActionNode<string, AudioClip, AnimationClip, string>
		{
			[Token(Token = "0x200064F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E77C", Offset = "0xE6E77C")]
			private sealed class <>c__DisplayClass0_0
			{
				[Token(Token = "0x4001D43")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool hasFinished;

				[Token(Token = "0x6002245")]
				[Address(RVA = "0x21710B0", Offset = "0x21710B0", VA = "0x21710B0")]
				public <>c__DisplayClass0_0()
				{
				}

				[Token(Token = "0x6002246")]
				[Address(RVA = "0x21710B8", Offset = "0x21710B8", VA = "0x21710B8")]
				internal bool <Invoke>g__HasFinished|0()
				{
					return default(bool);
				}

				[Token(Token = "0x6002247")]
				[Address(RVA = "0x21710C0", Offset = "0x21710C0", VA = "0x21710C0")]
				internal void <Invoke>g__OnComplete|1()
				{
				}
			}

			[Token(Token = "0x2000650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E78C", Offset = "0xE6E78C")]
			private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001D44")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001D45")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001D46")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public AudioClip audioClip;

				[Token(Token = "0x4001D47")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public string npcId;

				[Token(Token = "0x4001D48")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public AnimationClip animationClip;

				[Token(Token = "0x4001D49")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				public string checkerID;

				[Token(Token = "0x1700039B")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x600224B")]
					[Address(RVA = "0x21713C8", Offset = "0x21713C8", VA = "0x21713C8", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700039C")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x600224D")]
					[Address(RVA = "0x2171410", Offset = "0x2171410", VA = "0x2171410", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6002248")]
				[Address(RVA = "0x21710CC", Offset = "0x21710CC", VA = "0x21710CC")]
				[DebuggerHidden]
				public <Invoke>d__0(int <>1__state)
				{
				}

				[Token(Token = "0x6002249")]
				[Address(RVA = "0x21710F8", Offset = "0x21710F8", VA = "0x21710F8", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x600224A")]
				[Address(RVA = "0x21710FC", Offset = "0x21710FC", VA = "0x21710FC", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x600224C")]
				[Address(RVA = "0x21713D0", Offset = "0x21713D0", VA = "0x21713D0", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x6002243")]
			[Address(RVA = "0x32BCA64", Offset = "0x32BCA64", VA = "0x32BCA64", Slot = "15")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE94E6C", Offset = "0xE94E6C")]
			public override IEnumerator Invoke(string npcId, AudioClip audioClip, AnimationClip animationClip, string checkerID)
			{
				return null;
			}

			[Token(Token = "0x6002244")]
			[Address(RVA = "0x32BCB28", Offset = "0x32BCB28", VA = "0x32BCB28")]
			public MT_AddBarkToFrontOfQueue()
			{
			}
		}

		[Token(Token = "0x2000651")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6E79C", Offset = "0xE6E79C")]
		[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6E79C", Offset = "0xE6E79C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6E79C", Offset = "0xE6E79C")]
		public class MT_ClearBarks : CallableActionNode
		{
			[Token(Token = "0x600224E")]
			[Address(RVA = "0x32BCB74", Offset = "0x32BCB74", VA = "0x32BCB74", Slot = "12")]
			public override void Invoke()
			{
			}

			[Token(Token = "0x600224F")]
			[Address(RVA = "0x32BCBD0", Offset = "0x32BCBD0", VA = "0x32BCBD0")]
			public MT_ClearBarks()
			{
			}
		}

		[Token(Token = "0x2000652")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6E824", Offset = "0xE6E824")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6E824", Offset = "0xE6E824")]
		[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6E824", Offset = "0xE6E824")]
		public class MT_DequeueBark : CallableActionNode<AudioClip>
		{
			[Token(Token = "0x6002250")]
			[Address(RVA = "0x32BCBD8", Offset = "0x32BCBD8", VA = "0x32BCBD8", Slot = "12")]
			public override void Invoke(AudioClip clip)
			{
			}

			[Token(Token = "0x6002251")]
			[Address(RVA = "0x32BCC58", Offset = "0x32BCC58", VA = "0x32BCC58")]
			public MT_DequeueBark()
			{
			}
		}

		[Token(Token = "0x2000653")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6E8AC", Offset = "0xE6E8AC")]
		[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6E8AC", Offset = "0xE6E8AC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6E8AC", Offset = "0xE6E8AC")]
		public class MT_SetBarkChecker : CallableActionNode<string, bool>
		{
			[Token(Token = "0x6002252")]
			[Address(RVA = "0x32BCE5C", Offset = "0x32BCE5C", VA = "0x32BCE5C", Slot = "12")]
			public override void Invoke(string id, bool state)
			{
			}

			[Token(Token = "0x6002253")]
			[Address(RVA = "0x32BCED0", Offset = "0x32BCED0", VA = "0x32BCED0")]
			public MT_SetBarkChecker()
			{
			}
		}

		[Token(Token = "0x2000654")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6E934", Offset = "0xE6E934")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6E934", Offset = "0xE6E934")]
		[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6E934", Offset = "0xE6E934")]
		public class MT_GetIsBarkPlaying : PureFunctionNode<bool>
		{
			[Token(Token = "0x6002254")]
			[Address(RVA = "0x32BCCA4", Offset = "0x32BCCA4", VA = "0x32BCCA4", Slot = "12")]
			public override bool Invoke()
			{
				return default(bool);
			}

			[Token(Token = "0x6002255")]
			[Address(RVA = "0x32BCD00", Offset = "0x32BCD00", VA = "0x32BCD00")]
			public MT_GetIsBarkPlaying()
			{
			}
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x1147ABC", Offset = "0x1147ABC", VA = "0x1147ABC")]
		public NPCBarkNodes()
		{
		}
	}
	[Token(Token = "0x2000655")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6E9BC", Offset = "0xE6E9BC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6E9BC", Offset = "0xE6E9BC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6E9BC", Offset = "0xE6E9BC")]
	public class MT_CollisionEventNode : RouterEventNode<Rigidbody>
	{
		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput _layerMask;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ValueInput _collisionStrengthMin;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ValueInput _collisionStrengthMax;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private FlowOutput _onEnter;

		[Token(Token = "0x6002256")]
		[Address(RVA = "0x112C9F0", Offset = "0x112C9F0", VA = "0x112C9F0", Slot = "43")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x112CBA0", Offset = "0x112CBA0", VA = "0x112CBA0", Slot = "45")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0x112CC48", Offset = "0x112CC48", VA = "0x112CC48", Slot = "46")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0x112CCF0", Offset = "0x112CCF0", VA = "0x112CCF0")]
		private void OnCollisionEnter(EventData<UnityEngine.Collision> msg)
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0x112CEEC", Offset = "0x112CEEC", VA = "0x112CEEC")]
		public MT_CollisionEventNode()
		{
		}
	}
	[Token(Token = "0x2000656")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6EA44", Offset = "0xE6EA44")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6EA44", Offset = "0xE6EA44")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6EA44", Offset = "0xE6EA44")]
	public class MT_RemoveStoryItemFromJournalAndDestroy : CallableActionNode<JournalStoryItem, bool, bool>
	{
		[Token(Token = "0x600225B")]
		[Address(RVA = "0x12A4504", Offset = "0x12A4504", VA = "0x12A4504", Slot = "12")]
		public override void Invoke(JournalStoryItem jsi, bool turnOff = false, bool notifyPlayer = true)
		{
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0x12A4554", Offset = "0x12A4554", VA = "0x12A4554")]
		public MT_RemoveStoryItemFromJournalAndDestroy()
		{
		}
	}
	[Token(Token = "0x2000657")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6EACC", Offset = "0xE6EACC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6EACC", Offset = "0xE6EACC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6EACC", Offset = "0xE6EACC")]
	public class MT_FindFlagInJournalByFlag : CallableFunctionNode<JournalStoryItem, string>
	{
		[Token(Token = "0x600225D")]
		[Address(RVA = "0x15BF800", Offset = "0x15BF800", VA = "0x15BF800", Slot = "12")]
		public override JournalStoryItem Invoke(string flag)
		{
			return null;
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0x15BF8C0", Offset = "0x15BF8C0", VA = "0x15BF8C0")]
		public MT_FindFlagInJournalByFlag()
		{
		}
	}
	[Token(Token = "0x2000658")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6EB54", Offset = "0xE6EB54")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6EB54", Offset = "0xE6EB54")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6EB54", Offset = "0xE6EB54")]
	public class MT_MarkFlagAsCurrentObjective : CallableActionNode<string>
	{
		[Token(Token = "0x600225F")]
		[Address(RVA = "0x10EEFB4", Offset = "0x10EEFB4", VA = "0x10EEFB4", Slot = "12")]
		public override void Invoke(string flag)
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0x10EEFC0", Offset = "0x10EEFC0", VA = "0x10EEFC0")]
		public MT_MarkFlagAsCurrentObjective()
		{
		}
	}
	[Token(Token = "0x2000659")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6EBDC", Offset = "0xE6EBDC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6EBDC", Offset = "0xE6EBDC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6EBDC", Offset = "0xE6EBDC")]
	public class MT_JournalSetNewTextFieldByPageNumber : CallableActionNode<int, MT_JournalMethods.PageSide, string>
	{
		[Token(Token = "0x6002261")]
		[Address(RVA = "0x1259D80", Offset = "0x1259D80", VA = "0x1259D80", Slot = "12")]
		public override void Invoke(int page, MT_JournalMethods.PageSide side, string text)
		{
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0x1259D90", Offset = "0x1259D90", VA = "0x1259D90")]
		public MT_JournalSetNewTextFieldByPageNumber()
		{
		}
	}
	[Token(Token = "0x200065A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6EC64", Offset = "0xE6EC64")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6EC64", Offset = "0xE6EC64")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6EC64", Offset = "0xE6EC64")]
	public class MT_JournalSetNewTextFieldByPageId : CallableActionNode<string, MT_JournalMethods.PageSide, string>
	{
		[Token(Token = "0x6002263")]
		[Address(RVA = "0x1259D24", Offset = "0x1259D24", VA = "0x1259D24", Slot = "12")]
		public override void Invoke(string pageId, MT_JournalMethods.PageSide side, string text)
		{
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0x1259D34", Offset = "0x1259D34", VA = "0x1259D34")]
		public MT_JournalSetNewTextFieldByPageId()
		{
		}
	}
	[Token(Token = "0x200065B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6ECEC", Offset = "0xE6ECEC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6ECEC", Offset = "0xE6ECEC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6ECEC", Offset = "0xE6ECEC")]
	public class MT_JournalUpdateStory : CallableActionNode<int, int, MT_JournalMethods.PageSide, MT_JournalMethods.PageSide, string>
	{
		[Token(Token = "0x6002265")]
		[Address(RVA = "0x1259E60", Offset = "0x1259E60", VA = "0x1259E60", Slot = "12")]
		public override void Invoke(int pageMin, int pageMax, MT_JournalMethods.PageSide minSide, MT_JournalMethods.PageSide maxSide, string text)
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0x1259E78", Offset = "0x1259E78", VA = "0x1259E78")]
		public MT_JournalUpdateStory()
		{
		}
	}
	[Token(Token = "0x200065C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6ED74", Offset = "0xE6ED74")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6ED74", Offset = "0xE6ED74")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6ED74", Offset = "0xE6ED74")]
	public class MT_JournalSetImageSpriteByPageNumber : CallableActionNode<int, MT_JournalMethods.PageSide, int, Sprite>
	{
		[Token(Token = "0x6002267")]
		[Address(RVA = "0x1259CC4", Offset = "0x1259CC4", VA = "0x1259CC4", Slot = "12")]
		public override void Invoke(int page, MT_JournalMethods.PageSide side, int imageNumber, Sprite image)
		{
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0x1259CD8", Offset = "0x1259CD8", VA = "0x1259CD8")]
		public MT_JournalSetImageSpriteByPageNumber()
		{
		}
	}
	[Token(Token = "0x200065D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6EDFC", Offset = "0xE6EDFC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6EDFC", Offset = "0xE6EDFC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6EDFC", Offset = "0xE6EDFC")]
	public class MT_JournalSetImageSpriteByPageId : CallableActionNode<string, MT_JournalMethods.PageSide, int, Sprite>
	{
		[Token(Token = "0x6002269")]
		[Address(RVA = "0x1259C64", Offset = "0x1259C64", VA = "0x1259C64", Slot = "12")]
		public override void Invoke(string page, MT_JournalMethods.PageSide side, int imageNumber, Sprite image)
		{
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0x1259C78", Offset = "0x1259C78", VA = "0x1259C78")]
		public MT_JournalSetImageSpriteByPageId()
		{
		}
	}
	[Token(Token = "0x200065E")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6EE84", Offset = "0xE6EE84")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6EE84", Offset = "0xE6EE84")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6EE84", Offset = "0xE6EE84")]
	public class MT_JournalAddNewPageByPageNumber : CallableActionNode<int>
	{
		[Token(Token = "0x600226B")]
		[Address(RVA = "0x125530C", Offset = "0x125530C", VA = "0x125530C", Slot = "12")]
		public override void Invoke(int pageNumber)
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0x1255348", Offset = "0x1255348", VA = "0x1255348")]
		public MT_JournalAddNewPageByPageNumber()
		{
		}
	}
	[Token(Token = "0x200065F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6EF0C", Offset = "0xE6EF0C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6EF0C", Offset = "0xE6EF0C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6EF0C", Offset = "0xE6EF0C")]
	public class MT_JournalAddNewPageByPageId : CallableActionNode<string>
	{
		[Token(Token = "0x600226D")]
		[Address(RVA = "0x1255284", Offset = "0x1255284", VA = "0x1255284", Slot = "12")]
		public override void Invoke(string pageId)
		{
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0x12552C0", Offset = "0x12552C0", VA = "0x12552C0")]
		public MT_JournalAddNewPageByPageId()
		{
		}
	}
	[Token(Token = "0x2000660")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6EF94", Offset = "0xE6EF94")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6EF94", Offset = "0xE6EF94")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6EF94", Offset = "0xE6EF94")]
	public class MT_JournalUpdateObjectiveText : CallableActionNode<string>
	{
		[Token(Token = "0x600226F")]
		[Address(RVA = "0x1259DDC", Offset = "0x1259DDC", VA = "0x1259DDC", Slot = "12")]
		public override void Invoke(string objectiveText)
		{
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0x1259E14", Offset = "0x1259E14", VA = "0x1259E14")]
		public MT_JournalUpdateObjectiveText()
		{
		}
	}
	[Token(Token = "0x2000661")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6F01C", Offset = "0xE6F01C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6F01C", Offset = "0xE6F01C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6F01C", Offset = "0xE6F01C")]
	public class JournalPopupShowTimedNode : CallableActionNode<string, float>
	{
		[Token(Token = "0x6002271")]
		[Address(RVA = "0x1010B2C", Offset = "0x1010B2C", VA = "0x1010B2C", Slot = "12")]
		public override void Invoke(string text, float time)
		{
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x1010B98", Offset = "0x1010B98", VA = "0x1010B98")]
		public JournalPopupShowTimedNode()
		{
		}
	}
	[Token(Token = "0x2000662")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6F0A4", Offset = "0xE6F0A4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6F0A4", Offset = "0xE6F0A4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6F0A4", Offset = "0xE6F0A4")]
	public class JournalPopupShowNode : CallableActionNode<string>
	{
		[Token(Token = "0x6002273")]
		[Address(RVA = "0x1010A84", Offset = "0x1010A84", VA = "0x1010A84", Slot = "12")]
		public override void Invoke(string text)
		{
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0x1010AE0", Offset = "0x1010AE0", VA = "0x1010AE0")]
		public JournalPopupShowNode()
		{
		}
	}
	[Token(Token = "0x2000663")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6F12C", Offset = "0xE6F12C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6F12C", Offset = "0xE6F12C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6F12C", Offset = "0xE6F12C")]
	public class JournalPopupHideNode : CallableActionNode
	{
		[Token(Token = "0x6002275")]
		[Address(RVA = "0x1010A28", Offset = "0x1010A28", VA = "0x1010A28", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0x1010A7C", Offset = "0x1010A7C", VA = "0x1010A7C")]
		public JournalPopupHideNode()
		{
		}
	}
	[Token(Token = "0x2000664")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6F1B4", Offset = "0xE6F1B4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6F1B4", Offset = "0xE6F1B4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6F1B4", Offset = "0xE6F1B4")]
	public class MT_PlayerDistanceNode : CallableFunctionNode<float, Transform>
	{
		[Token(Token = "0x6002277")]
		[Address(RVA = "0x132C8F8", Offset = "0x132C8F8", VA = "0x132C8F8", Slot = "12")]
		public override float Invoke(Transform transform)
		{
			return default(float);
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0x132CA04", Offset = "0x132CA04", VA = "0x132CA04")]
		public MT_PlayerDistanceNode()
		{
		}
	}
	[Token(Token = "0x2000665")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6F23C", Offset = "0xE6F23C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6F23C", Offset = "0xE6F23C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6F23C", Offset = "0xE6F23C")]
	public class MT_PlayerPositionNode : CallableFunctionNode<Vector3>
	{
		[Token(Token = "0x6002279")]
		[Address(RVA = "0x1333850", Offset = "0x1333850", VA = "0x1333850", Slot = "12")]
		public override Vector3 Invoke()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0x1333858", Offset = "0x1333858", VA = "0x1333858")]
		public MT_PlayerPositionNode()
		{
		}
	}
	[Token(Token = "0x2000666")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6F2C4", Offset = "0xE6F2C4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6F2C4", Offset = "0xE6F2C4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6F2C4", Offset = "0xE6F2C4")]
	public class MT_PlayerHandInteractionNode : CallableActionNode<bool>
	{
		[Token(Token = "0x600227B")]
		[Address(RVA = "0x132D0A0", Offset = "0x132D0A0", VA = "0x132D0A0", Slot = "12")]
		public override void Invoke(bool setEnabled)
		{
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0x132D15C", Offset = "0x132D15C", VA = "0x132D15C")]
		public MT_PlayerHandInteractionNode()
		{
		}
	}
	[Token(Token = "0x2000667")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6F34C", Offset = "0xE6F34C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6F34C", Offset = "0xE6F34C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6F34C", Offset = "0xE6F34C")]
	public class MT_PlayerGetHandInteractionNode : CallableFunctionNode<bool>
	{
		[Token(Token = "0x600227D")]
		[Address(RVA = "0x132CCAC", Offset = "0x132CCAC", VA = "0x132CCAC", Slot = "12")]
		public override bool Invoke()
		{
			return default(bool);
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0x132CCD8", Offset = "0x132CCD8", VA = "0x132CCD8")]
		public MT_PlayerGetHandInteractionNode()
		{
		}
	}
	[Token(Token = "0x2000668")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6F3D4", Offset = "0xE6F3D4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6F3D4", Offset = "0xE6F3D4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6F3D4", Offset = "0xE6F3D4")]
	public class MT_PlayerHandUnbindNode : CallableActionNode<HandType>
	{
		[Token(Token = "0x600227F")]
		[Address(RVA = "0x132D1A8", Offset = "0x132D1A8", VA = "0x132D1A8", Slot = "12")]
		public override void Invoke(HandType handType)
		{
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0x132D1AC", Offset = "0x132D1AC", VA = "0x132D1AC")]
		public MT_PlayerHandUnbindNode()
		{
		}
	}
	[Token(Token = "0x2000669")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6F45C", Offset = "0xE6F45C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6F45C", Offset = "0xE6F45C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6F45C", Offset = "0xE6F45C")]
	public class MT_PlayerHealthNode : CallableFunctionNode<float>
	{
		[Token(Token = "0x6002281")]
		[Address(RVA = "0x132D8E8", Offset = "0x132D8E8", VA = "0x132D8E8", Slot = "12")]
		public override float Invoke()
		{
			return default(float);
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0x132D968", Offset = "0x132D968", VA = "0x132D968")]
		public MT_PlayerHealthNode()
		{
		}
	}
	[Token(Token = "0x200066A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6F4E4", Offset = "0xE6F4E4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6F4E4", Offset = "0xE6F4E4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6F4E4", Offset = "0xE6F4E4")]
	public class MT_HealPlayerNode : CallableActionNode<float>
	{
		[Token(Token = "0x6002283")]
		[Address(RVA = "0x15CFADC", Offset = "0x15CFADC", VA = "0x15CFADC", Slot = "12")]
		public override void Invoke(float health)
		{
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0x15CFB48", Offset = "0x15CFB48", VA = "0x15CFB48")]
		public MT_HealPlayerNode()
		{
		}
	}
	[Token(Token = "0x200066B")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6F56C", Offset = "0xE6F56C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6F56C", Offset = "0xE6F56C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6F56C", Offset = "0xE6F56C")]
	public class MT_SetPlayerHealth : CallableActionNode<int>
	{
		[Token(Token = "0x6002285")]
		[Address(RVA = "0x12A93F8", Offset = "0x12A93F8", VA = "0x12A93F8", Slot = "12")]
		public override void Invoke(int health)
		{
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0x12A94B0", Offset = "0x12A94B0", VA = "0x12A94B0")]
		public MT_SetPlayerHealth()
		{
		}
	}
	[Token(Token = "0x200066C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6F5F4", Offset = "0xE6F5F4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6F5F4", Offset = "0xE6F5F4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6F5F4", Offset = "0xE6F5F4")]
	public class MT_DamagePlayerNode : CallableActionNode<int>
	{
		[Token(Token = "0x6002287")]
		[Address(RVA = "0x112EA00", Offset = "0x112EA00", VA = "0x112EA00", Slot = "12")]
		public override void Invoke(int damage)
		{
		}

		[Token(Token = "0x6002288")]
		[Address(RVA = "0x112EAF8", Offset = "0x112EAF8", VA = "0x112EAF8")]
		public MT_DamagePlayerNode()
		{
		}
	}
	[Token(Token = "0x200066D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6F67C", Offset = "0xE6F67C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6F67C", Offset = "0xE6F67C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6F67C", Offset = "0xE6F67C")]
	public class MT_SetMinHealthForPlayer : CallableActionNode<int>
	{
		[Token(Token = "0x6002289")]
		[Address(RVA = "0x12A92F4", Offset = "0x12A92F4", VA = "0x12A92F4", Slot = "12")]
		public override void Invoke(int health)
		{
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0x12A93AC", Offset = "0x12A93AC", VA = "0x12A93AC")]
		public MT_SetMinHealthForPlayer()
		{
		}
	}
	[Token(Token = "0x200066E")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6F704", Offset = "0xE6F704")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6F704", Offset = "0xE6F704")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6F704", Offset = "0xE6F704")]
	public class MT_ResetMinHealth : CallableActionNode
	{
		[Token(Token = "0x600228B")]
		[Address(RVA = "0x12A45F4", Offset = "0x12A45F4", VA = "0x12A45F4", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0x12A46A0", Offset = "0x12A46A0", VA = "0x12A46A0")]
		public MT_ResetMinHealth()
		{
		}
	}
	[Token(Token = "0x200066F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6F78C", Offset = "0xE6F78C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6F78C", Offset = "0xE6F78C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6F78C", Offset = "0xE6F78C")]
	public class MT_KillPlayerNode : CallableActionNode
	{
		[Token(Token = "0x600228D")]
		[Address(RVA = "0x1259EC4", Offset = "0x1259EC4", VA = "0x1259EC4", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0x1259F20", Offset = "0x1259F20", VA = "0x1259F20")]
		public MT_KillPlayerNode()
		{
		}
	}
	[Token(Token = "0x2000670")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6F814", Offset = "0xE6F814")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6F814", Offset = "0xE6F814")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6F814", Offset = "0xE6F814")]
	public class MT_PlayerHeightNode : CallableActionNode<Transform>
	{
		[Token(Token = "0x600228F")]
		[Address(RVA = "0x132E21C", Offset = "0x132E21C", VA = "0x132E21C", Slot = "12")]
		public override void Invoke(Transform location)
		{
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0x132E344", Offset = "0x132E344", VA = "0x132E344")]
		public MT_PlayerHeightNode()
		{
		}
	}
	[Token(Token = "0x2000671")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6F89C", Offset = "0xE6F89C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6F89C", Offset = "0xE6F89C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6F89C", Offset = "0xE6F89C")]
	public class MT_GetSittableForIdNode : CallableFunctionNode<MT_Sittable, string>
	{
		[Token(Token = "0x6002291")]
		[Address(RVA = "0x15C43CC", Offset = "0x15C43CC", VA = "0x15C43CC", Slot = "12")]
		public override MT_Sittable Invoke(string sittableId)
		{
			return null;
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0x15C4444", Offset = "0x15C4444", VA = "0x15C4444")]
		public MT_GetSittableForIdNode()
		{
		}
	}
	[Token(Token = "0x2000672")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6F924", Offset = "0xE6F924")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6F924", Offset = "0xE6F924")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6F924", Offset = "0xE6F924")]
	public class MT_MovePlayerToSitNode : CallableActionNode<string>
	{
		[Token(Token = "0x6002293")]
		[Address(RVA = "0x10F2B44", Offset = "0x10F2B44", VA = "0x10F2B44", Slot = "12")]
		public override void Invoke(string sittableId)
		{
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0x10F2C0C", Offset = "0x10F2C0C", VA = "0x10F2C0C")]
		public MT_MovePlayerToSitNode()
		{
		}
	}
	[Token(Token = "0x2000673")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6F9AC", Offset = "0xE6F9AC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6F9AC", Offset = "0xE6F9AC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6F9AC", Offset = "0xE6F9AC")]
	public class MT_MovePlayerToSitCoroutineNode : LatentActionNode<string>
	{
		[Token(Token = "0x2000674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6FA34", Offset = "0xE6FA34")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isDone;

			[Token(Token = "0x6002297")]
			[Address(RVA = "0x103BE7C", Offset = "0x103BE7C", VA = "0x103BE7C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002298")]
			[Address(RVA = "0x103BE84", Offset = "0x103BE84", VA = "0x103BE84")]
			internal void <Invoke>b__0()
			{
			}

			[Token(Token = "0x6002299")]
			[Address(RVA = "0x103BE90", Offset = "0x103BE90", VA = "0x103BE90")]
			internal bool <Invoke>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000675")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6FA44", Offset = "0xE6FA44")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sittableId;

			[Token(Token = "0x1700039D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600229D")]
				[Address(RVA = "0x103C0D4", Offset = "0x103C0D4", VA = "0x103C0D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600229F")]
				[Address(RVA = "0x103C11C", Offset = "0x103C11C", VA = "0x103C11C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600229A")]
			[Address(RVA = "0x103BE98", Offset = "0x103BE98", VA = "0x103BE98")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600229B")]
			[Address(RVA = "0x103BEC4", Offset = "0x103BEC4", VA = "0x103BEC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600229C")]
			[Address(RVA = "0x103BEC8", Offset = "0x103BEC8", VA = "0x103BEC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600229E")]
			[Address(RVA = "0x103C0DC", Offset = "0x103C0DC", VA = "0x103C0DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0x10F280C", Offset = "0x10F280C", VA = "0x10F280C", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE94F1C", Offset = "0xE94F1C")]
		public override IEnumerator Invoke(string sittableId)
		{
			return null;
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0x10F2884", Offset = "0x10F2884", VA = "0x10F2884")]
		public MT_MovePlayerToSitCoroutineNode()
		{
		}
	}
	[Token(Token = "0x2000676")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6FA54", Offset = "0xE6FA54")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6FA54", Offset = "0xE6FA54")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6FA54", Offset = "0xE6FA54")]
	public class MT_MovePlayerToSitImmediateNode : CallableActionNode<string, bool, bool>
	{
		[Token(Token = "0x60022A0")]
		[Address(RVA = "0x10F29B4", Offset = "0x10F29B4", VA = "0x10F29B4", Slot = "12")]
		public override void Invoke(string sittableId, bool hideUI, bool isStartingSceneSitting)
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0x10F2AF8", Offset = "0x10F2AF8", VA = "0x10F2AF8")]
		public MT_MovePlayerToSitImmediateNode()
		{
		}
	}
	[Token(Token = "0x2000677")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6FADC", Offset = "0xE6FADC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6FADC", Offset = "0xE6FADC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6FADC", Offset = "0xE6FADC")]
	public class MT_MovePlayerToSitImmediateCoroutineNode : LatentActionNode<string, bool, bool>
	{
		[Token(Token = "0x2000678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6FB64", Offset = "0xE6FB64")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isDone;

			[Token(Token = "0x60022A4")]
			[Address(RVA = "0x103C124", Offset = "0x103C124", VA = "0x103C124")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60022A5")]
			[Address(RVA = "0x103C12C", Offset = "0x103C12C", VA = "0x103C12C")]
			internal void <Invoke>b__0()
			{
			}

			[Token(Token = "0x60022A6")]
			[Address(RVA = "0x103C138", Offset = "0x103C138", VA = "0x103C138")]
			internal bool <Invoke>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000679")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6FB74", Offset = "0xE6FB74")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isStartingSceneSitting;

			[Token(Token = "0x4001D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sittableId;

			[Token(Token = "0x4001D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool hideUI;

			[Token(Token = "0x1700039F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022AA")]
				[Address(RVA = "0x103C3B0", Offset = "0x103C3B0", VA = "0x103C3B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022AC")]
				[Address(RVA = "0x103C3F8", Offset = "0x103C3F8", VA = "0x103C3F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022A7")]
			[Address(RVA = "0x103C140", Offset = "0x103C140", VA = "0x103C140")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60022A8")]
			[Address(RVA = "0x103C16C", Offset = "0x103C16C", VA = "0x103C16C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022A9")]
			[Address(RVA = "0x103C170", Offset = "0x103C170", VA = "0x103C170", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022AB")]
			[Address(RVA = "0x103C3B8", Offset = "0x103C3B8", VA = "0x103C3B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0x10F28D0", Offset = "0x10F28D0", VA = "0x10F28D0", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE94FCC", Offset = "0xE94FCC")]
		public override IEnumerator Invoke(string sittableId, bool hideUI, bool isStartingSceneSitting)
		{
			return null;
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0x10F2968", Offset = "0x10F2968", VA = "0x10F2968")]
		public MT_MovePlayerToSitImmediateCoroutineNode()
		{
		}
	}
	[Token(Token = "0x200067A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6FB84", Offset = "0xE6FB84")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6FB84", Offset = "0xE6FB84")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6FB84", Offset = "0xE6FB84")]
	public class ForcePlayerToSitNode : CallableActionNode<MT_Sittable, bool, bool>
	{
		[Token(Token = "0x60022AD")]
		[Address(RVA = "0x100EFA4", Offset = "0x100EFA4", VA = "0x100EFA4", Slot = "12")]
		public override void Invoke(MT_Sittable sittable, bool hideUI, bool isStartingSceneSitting)
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0x100F04C", Offset = "0x100F04C", VA = "0x100F04C")]
		public ForcePlayerToSitNode()
		{
		}
	}
	[Token(Token = "0x200067B")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6FC0C", Offset = "0xE6FC0C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6FC0C", Offset = "0xE6FC0C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6FC0C", Offset = "0xE6FC0C")]
	public class ForcePlayerToSitCoroutineNode : LatentActionNode<MT_Sittable, bool, bool>
	{
		[Token(Token = "0x200067C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6FC94", Offset = "0xE6FC94")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isDone;

			[Token(Token = "0x60022B1")]
			[Address(RVA = "0x1031220", Offset = "0x1031220", VA = "0x1031220")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60022B2")]
			[Address(RVA = "0x1031228", Offset = "0x1031228", VA = "0x1031228")]
			internal void <Invoke>b__0()
			{
			}

			[Token(Token = "0x60022B3")]
			[Address(RVA = "0x1031234", Offset = "0x1031234", VA = "0x1031234")]
			internal bool <Invoke>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200067D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6FCA4", Offset = "0xE6FCA4")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isStartingSceneSitting;

			[Token(Token = "0x4001D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MT_Sittable sittable;

			[Token(Token = "0x4001D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool hideUI;

			[Token(Token = "0x170003A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022B7")]
				[Address(RVA = "0x1031460", Offset = "0x1031460", VA = "0x1031460", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022B9")]
				[Address(RVA = "0x10314A8", Offset = "0x10314A8", VA = "0x10314A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022B4")]
			[Address(RVA = "0x103123C", Offset = "0x103123C", VA = "0x103123C")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60022B5")]
			[Address(RVA = "0x1031268", Offset = "0x1031268", VA = "0x1031268", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022B6")]
			[Address(RVA = "0x103126C", Offset = "0x103126C", VA = "0x103126C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022B8")]
			[Address(RVA = "0x1031468", Offset = "0x1031468", VA = "0x1031468", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0x100EEC0", Offset = "0x100EEC0", VA = "0x100EEC0", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9607C", Offset = "0xE9607C")]
		public override IEnumerator Invoke(MT_Sittable sittable, bool hideUI, bool isStartingSceneSitting)
		{
			return null;
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0x100EF58", Offset = "0x100EF58", VA = "0x100EF58")]
		public ForcePlayerToSitCoroutineNode()
		{
		}
	}
	[Token(Token = "0x200067E")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6FCB4", Offset = "0xE6FCB4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6FCB4", Offset = "0xE6FCB4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6FCB4", Offset = "0xE6FCB4")]
	public class MT_MovePlayerToStandNode : CallableActionNode
	{
		[Token(Token = "0x60022BA")]
		[Address(RVA = "0x10F2CBC", Offset = "0x10F2CBC", VA = "0x10F2CBC", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0x10F2D24", Offset = "0x10F2D24", VA = "0x10F2D24")]
		public MT_MovePlayerToStandNode()
		{
		}
	}
	[Token(Token = "0x200067F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6FD3C", Offset = "0xE6FD3C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6FD3C", Offset = "0xE6FD3C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6FD3C", Offset = "0xE6FD3C")]
	public class MT_SetSittingStart : CallableActionNode<bool>
	{
		[Token(Token = "0x60022BC")]
		[Address(RVA = "0x12A95FC", Offset = "0x12A95FC", VA = "0x12A95FC", Slot = "12")]
		public override void Invoke(bool sittingStart)
		{
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0x12A9650", Offset = "0x12A9650", VA = "0x12A9650")]
		public MT_SetSittingStart()
		{
		}
	}
	[Token(Token = "0x2000680")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6FDC4", Offset = "0xE6FDC4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6FDC4", Offset = "0xE6FDC4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6FDC4", Offset = "0xE6FDC4")]
	public class MT_MovePlayerToStandCoroutineNode : LatentActionNode
	{
		[Token(Token = "0x2000681")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6FE4C", Offset = "0xE6FE4C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isDone;

			[Token(Token = "0x60022C0")]
			[Address(RVA = "0x103C400", Offset = "0x103C400", VA = "0x103C400")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60022C1")]
			[Address(RVA = "0x103C408", Offset = "0x103C408", VA = "0x103C408")]
			internal void <Invoke>b__0()
			{
			}

			[Token(Token = "0x60022C2")]
			[Address(RVA = "0x103C414", Offset = "0x103C414", VA = "0x103C414")]
			internal bool <Invoke>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000682")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6FE5C", Offset = "0xE6FE5C")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170003A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022C6")]
				[Address(RVA = "0x103C600", Offset = "0x103C600", VA = "0x103C600", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022C8")]
				[Address(RVA = "0x103C648", Offset = "0x103C648", VA = "0x103C648", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022C3")]
			[Address(RVA = "0x103C41C", Offset = "0x103C41C", VA = "0x103C41C")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60022C4")]
			[Address(RVA = "0x103C448", Offset = "0x103C448", VA = "0x103C448", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022C5")]
			[Address(RVA = "0x103C44C", Offset = "0x103C44C", VA = "0x103C44C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022C7")]
			[Address(RVA = "0x103C608", Offset = "0x103C608", VA = "0x103C608", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0x10F2C58", Offset = "0x10F2C58", VA = "0x10F2C58", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9612C", Offset = "0xE9612C")]
		public override IEnumerator Invoke()
		{
			return null;
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0x10F2CB4", Offset = "0x10F2CB4", VA = "0x10F2CB4")]
		public MT_MovePlayerToStandCoroutineNode()
		{
		}
	}
	[Token(Token = "0x2000683")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6FE6C", Offset = "0xE6FE6C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6FE6C", Offset = "0xE6FE6C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6FE6C", Offset = "0xE6FE6C")]
	public class MT_UnlockPlayerSitNode : CallableActionNode
	{
		[Token(Token = "0x60022C9")]
		[Address(RVA = "0x113C628", Offset = "0x113C628", VA = "0x113C628", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x113C684", Offset = "0x113C684", VA = "0x113C684")]
		public MT_UnlockPlayerSitNode()
		{
		}
	}
	[Token(Token = "0x2000684")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6FEF4", Offset = "0xE6FEF4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6FEF4", Offset = "0xE6FEF4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6FEF4", Offset = "0xE6FEF4")]
	public class ShowSitUINode : CallableActionNode<bool, MT_Sittable>
	{
		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x32DCF44", Offset = "0x32DCF44", VA = "0x32DCF44", Slot = "12")]
		public override void Invoke(bool shouldShow, MT_Sittable sittable)
		{
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0x32DCF8C", Offset = "0x32DCF8C", VA = "0x32DCF8C")]
		public ShowSitUINode()
		{
		}
	}
	[Token(Token = "0x2000685")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE6FF7C", Offset = "0xE6FF7C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE6FF7C", Offset = "0xE6FF7C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE6FF7C", Offset = "0xE6FF7C")]
	public class MT_SetPlayerHeightNode : CallableActionNode<MT_PlayerHeightType>
	{
		[Token(Token = "0x60022CD")]
		[Address(RVA = "0x12A94FC", Offset = "0x12A94FC", VA = "0x12A94FC", Slot = "12")]
		public override void Invoke(MT_PlayerHeightType playerHeight)
		{
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0x12A9560", Offset = "0x12A9560", VA = "0x12A9560")]
		public MT_SetPlayerHeightNode()
		{
		}
	}
	[Token(Token = "0x2000686")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70004", Offset = "0xE70004")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70004", Offset = "0xE70004")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE70004", Offset = "0xE70004")]
	public class MT_PlayerGetHeightNode : CallableFunctionNode<MT_PlayerHeightType>
	{
		[Token(Token = "0x60022CF")]
		[Address(RVA = "0x132CD98", Offset = "0x132CD98", VA = "0x132CD98", Slot = "12")]
		public override MT_PlayerHeightType Invoke()
		{
			return default(MT_PlayerHeightType);
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0x132CDC0", Offset = "0x132CDC0", VA = "0x132CDC0")]
		public MT_PlayerGetHeightNode()
		{
		}
	}
	[Token(Token = "0x2000687")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7008C", Offset = "0xE7008C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7008C", Offset = "0xE7008C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7008C", Offset = "0xE7008C")]
	public class MT_PlayerStandHeightOverride : CallableActionNode<float>
	{
		[Token(Token = "0x60022D1")]
		[Address(RVA = "0x13348F8", Offset = "0x13348F8", VA = "0x13348F8", Slot = "12")]
		public override void Invoke(float standHeight)
		{
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0x1334984", Offset = "0x1334984", VA = "0x1334984")]
		public MT_PlayerStandHeightOverride()
		{
		}
	}
	[Token(Token = "0x2000688")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE70114", Offset = "0xE70114")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70114", Offset = "0xE70114")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70114", Offset = "0xE70114")]
	public class MT_PlayerStandHeightOverrideReset : CallableActionNode
	{
		[Token(Token = "0x60022D3")]
		[Address(RVA = "0x13349D0", Offset = "0x13349D0", VA = "0x13349D0", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0x1334A4C", Offset = "0x1334A4C", VA = "0x1334A4C")]
		public MT_PlayerStandHeightOverrideReset()
		{
		}
	}
	[Token(Token = "0x2000689")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7019C", Offset = "0xE7019C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7019C", Offset = "0xE7019C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7019C", Offset = "0xE7019C")]
	public class MT_PlayerLocomotionNode : CallableActionNode<bool>
	{
		[Token(Token = "0x60022D5")]
		[Address(RVA = "0x132E734", Offset = "0x132E734", VA = "0x132E734", Slot = "12")]
		public override void Invoke(bool setEnabled)
		{
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0x132E864", Offset = "0x132E864", VA = "0x132E864")]
		public MT_PlayerLocomotionNode()
		{
		}
	}
	[Token(Token = "0x200068A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70224", Offset = "0xE70224")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70224", Offset = "0xE70224")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE70224", Offset = "0xE70224")]
	public class MT_PlayerGetLocomotionNode : CallableFunctionNode<bool>
	{
		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x132CE0C", Offset = "0x132CE0C", VA = "0x132CE0C", Slot = "12")]
		public override bool Invoke()
		{
			return default(bool);
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x132CE34", Offset = "0x132CE34", VA = "0x132CE34")]
		public MT_PlayerGetLocomotionNode()
		{
		}
	}
	[Token(Token = "0x200068B")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE702AC", Offset = "0xE702AC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE702AC", Offset = "0xE702AC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE702AC", Offset = "0xE702AC")]
	public class MT_EnablePlayerRiding : CallableActionNode<bool, Transform>
	{
		[Token(Token = "0x60022D9")]
		[Address(RVA = "0x15BD858", Offset = "0x15BD858", VA = "0x15BD858", Slot = "12")]
		public override void Invoke(bool isPlayerRiding, Transform rideTransform)
		{
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x15BD894", Offset = "0x15BD894", VA = "0x15BD894")]
		public MT_EnablePlayerRiding()
		{
		}
	}
	[Token(Token = "0x200068C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70334", Offset = "0xE70334")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70334", Offset = "0xE70334")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE70334", Offset = "0xE70334")]
	public class MT_PlayerForceCrouchNode : CallableActionNode
	{
		[Token(Token = "0x60022DB")]
		[Address(RVA = "0x132CC08", Offset = "0x132CC08", VA = "0x132CC08", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0x132CC30", Offset = "0x132CC30", VA = "0x132CC30")]
		public MT_PlayerForceCrouchNode()
		{
		}
	}
	[Token(Token = "0x200068D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE703BC", Offset = "0xE703BC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE703BC", Offset = "0xE703BC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE703BC", Offset = "0xE703BC")]
	public class MT_PlayerLookAtNode : CallableFunctionNode<bool, Transform, LayerMask>
	{
		[Token(Token = "0x60022DD")]
		[Address(RVA = "0x132E8B0", Offset = "0x132E8B0", VA = "0x132E8B0", Slot = "12")]
		public override bool Invoke(Transform transform, LayerMask layer)
		{
			return default(bool);
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0x132EA60", Offset = "0x132EA60", VA = "0x132EA60")]
		public MT_PlayerLookAtNode()
		{
		}
	}
	[Token(Token = "0x200068E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70444", Offset = "0xE70444")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE70444", Offset = "0xE70444")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70444", Offset = "0xE70444")]
	public sealed class MT_GetPlayerTrackigTransform : CallableFunctionNode<Transform>
	{
		[Token(Token = "0x60022DF")]
		[Address(RVA = "0x15C4320", Offset = "0x15C4320", VA = "0x15C4320", Slot = "12")]
		public override Transform Invoke()
		{
			return null;
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0x15C4328", Offset = "0x15C4328", VA = "0x15C4328")]
		public MT_GetPlayerTrackigTransform()
		{
		}
	}
	[Token(Token = "0x200068F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE704CC", Offset = "0xE704CC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE704CC", Offset = "0xE704CC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE704CC", Offset = "0xE704CC")]
	public class MT_ShowHandPopupNode : CallableActionNode<string, AudioClip, HVRHandGrabber, IconNotifEnum, Transform, FontColorNotifEnum>
	{
		[Token(Token = "0x60022E1")]
		[Address(RVA = "0x12AA140", Offset = "0x12AA140", VA = "0x12AA140", Slot = "12")]
		public override void Invoke(string text, [Optional] AudioClip clip, [Optional] HVRHandGrabber hand, IconNotifEnum icon = IconNotifEnum.NONE, [Optional] Transform target, FontColorNotifEnum fontColor = FontColorNotifEnum.White)
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0x12AA1C0", Offset = "0x12AA1C0", VA = "0x12AA1C0")]
		public MT_ShowHandPopupNode()
		{
		}
	}
	[Token(Token = "0x2000690")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70554", Offset = "0xE70554")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70554", Offset = "0xE70554")]
	public class MT_ShowBodyPopupNode : CallableActionNode<string, AudioClip, IconNotifEnum, FontColorNotifEnum>
	{
		[Token(Token = "0x60022E3")]
		[Address(RVA = "0x12AA098", Offset = "0x12AA098", VA = "0x12AA098", Slot = "12")]
		public override void Invoke(string text, [Optional] AudioClip clip, IconNotifEnum icon = IconNotifEnum.NONE, FontColorNotifEnum fontColor = FontColorNotifEnum.White)
		{
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x12AA0F4", Offset = "0x12AA0F4", VA = "0x12AA0F4")]
		public MT_ShowBodyPopupNode()
		{
		}
	}
	[Token(Token = "0x2000691")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE705B8", Offset = "0xE705B8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE705B8", Offset = "0xE705B8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE705B8", Offset = "0xE705B8")]
	public class MT_PlayerSnapTurnNode : CallableActionNode<bool>
	{
		[Token(Token = "0x60022E5")]
		[Address(RVA = "0x1334684", Offset = "0x1334684", VA = "0x1334684", Slot = "12")]
		public override void Invoke(bool setEnabled)
		{
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x13346E4", Offset = "0x13346E4", VA = "0x13346E4")]
		public MT_PlayerSnapTurnNode()
		{
		}
	}
	[Token(Token = "0x2000692")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70640", Offset = "0xE70640")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70640", Offset = "0xE70640")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE70640", Offset = "0xE70640")]
	public class MT_PlayerGetSnapTurnNode : CallableFunctionNode<bool>
	{
		[Token(Token = "0x60022E7")]
		[Address(RVA = "0x132CE80", Offset = "0x132CE80", VA = "0x132CE80", Slot = "12")]
		public override bool Invoke()
		{
			return default(bool);
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x132CEA8", Offset = "0x132CEA8", VA = "0x132CEA8")]
		public MT_PlayerGetSnapTurnNode()
		{
		}
	}
	[Token(Token = "0x2000693")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE706C8", Offset = "0xE706C8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE706C8", Offset = "0xE706C8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE706C8", Offset = "0xE706C8")]
	public class MT_PlayerSpeedNode : CallableActionNode<float>
	{
		[Token(Token = "0x60022E9")]
		[Address(RVA = "0x1334844", Offset = "0x1334844", VA = "0x1334844", Slot = "12")]
		public override void Invoke(float speed)
		{
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x13348AC", Offset = "0x13348AC", VA = "0x13348AC")]
		public MT_PlayerSpeedNode()
		{
		}
	}
	[Token(Token = "0x2000694")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70750", Offset = "0xE70750")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70750", Offset = "0xE70750")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE70750", Offset = "0xE70750")]
	public class MT_ResetPlayerSpeedNode : CallableActionNode
	{
		[Token(Token = "0x60022EB")]
		[Address(RVA = "0x12A46A8", Offset = "0x12A46A8", VA = "0x12A46A8", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x12A4704", Offset = "0x12A4704", VA = "0x12A4704")]
		public MT_ResetPlayerSpeedNode()
		{
		}
	}
	[Token(Token = "0x2000695")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE707D8", Offset = "0xE707D8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE707D8", Offset = "0xE707D8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE707D8", Offset = "0xE707D8")]
	public class MT_PlayerSpeedMultiplierNode : CallableActionNode<float>
	{
		[Token(Token = "0x60022ED")]
		[Address(RVA = "0x1334730", Offset = "0x1334730", VA = "0x1334730", Slot = "12")]
		public override void Invoke(float multiplier)
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0x1334798", Offset = "0x1334798", VA = "0x1334798")]
		public MT_PlayerSpeedMultiplierNode()
		{
		}
	}
	[Token(Token = "0x2000696")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70860", Offset = "0xE70860")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70860", Offset = "0xE70860")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE70860", Offset = "0xE70860")]
	public class MT_PlayerSpeedMultiplierResetNode : CallableActionNode
	{
		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x13347E4", Offset = "0x13347E4", VA = "0x13347E4", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x133483C", Offset = "0x133483C", VA = "0x133483C")]
		public MT_PlayerSpeedMultiplierResetNode()
		{
		}
	}
	[Token(Token = "0x2000697")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE708E8", Offset = "0xE708E8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE708E8", Offset = "0xE708E8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE708E8", Offset = "0xE708E8")]
	public class MT_PlayerTeleportNode : CallableActionNode<bool>
	{
		[Token(Token = "0x60022F1")]
		[Address(RVA = "0x1334A54", Offset = "0x1334A54", VA = "0x1334A54", Slot = "12")]
		public override void Invoke(bool setEnabled)
		{
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0x1334AB4", Offset = "0x1334AB4", VA = "0x1334AB4")]
		public MT_PlayerTeleportNode()
		{
		}
	}
	[Token(Token = "0x2000698")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE70970", Offset = "0xE70970")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70970", Offset = "0xE70970")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70970", Offset = "0xE70970")]
	public class MT_PlayerGetTeleportNode : CallableFunctionNode<bool>
	{
		[Token(Token = "0x60022F3")]
		[Address(RVA = "0x132CEF4", Offset = "0x132CEF4", VA = "0x132CEF4", Slot = "12")]
		public override bool Invoke()
		{
			return default(bool);
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x132CF1C", Offset = "0x132CF1C", VA = "0x132CF1C")]
		public MT_PlayerGetTeleportNode()
		{
		}
	}
	[Token(Token = "0x2000699")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE709F8", Offset = "0xE709F8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE709F8", Offset = "0xE709F8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE709F8", Offset = "0xE709F8")]
	public class MT_PlayerUIInteractionNode : CallableActionNode<bool>
	{
		[Token(Token = "0x60022F5")]
		[Address(RVA = "0x1335AC8", Offset = "0x1335AC8", VA = "0x1335AC8", Slot = "12")]
		public override void Invoke(bool setEnabled)
		{
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0x1335B28", Offset = "0x1335B28", VA = "0x1335B28")]
		public MT_PlayerUIInteractionNode()
		{
		}
	}
	[Token(Token = "0x200069A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70A80", Offset = "0xE70A80")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70A80", Offset = "0xE70A80")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE70A80", Offset = "0xE70A80")]
	public class MT_PlayerGetUIInteractionNode : CallableFunctionNode<bool>
	{
		[Token(Token = "0x60022F7")]
		[Address(RVA = "0x132CF68", Offset = "0x132CF68", VA = "0x132CF68", Slot = "12")]
		public override bool Invoke()
		{
			return default(bool);
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x132CF70", Offset = "0x132CF70", VA = "0x132CF70")]
		public MT_PlayerGetUIInteractionNode()
		{
		}
	}
	[Token(Token = "0x200069B")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70B08", Offset = "0xE70B08")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70B08", Offset = "0xE70B08")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE70B08", Offset = "0xE70B08")]
	public class MT_PlayerHandGesturesNode : CallableActionNode<bool>
	{
		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x132CFBC", Offset = "0x132CFBC", VA = "0x132CFBC", Slot = "12")]
		public override void Invoke(bool setEnabled)
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0x132D054", Offset = "0x132D054", VA = "0x132D054")]
		public MT_PlayerHandGesturesNode()
		{
		}
	}
	[Token(Token = "0x200069C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70B90", Offset = "0xE70B90")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70B90", Offset = "0xE70B90")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE70B90", Offset = "0xE70B90")]
	public class MT_PlayerGetHandGesturesNode : CallableFunctionNode<bool>
	{
		[Token(Token = "0x60022FB")]
		[Address(RVA = "0x132CC38", Offset = "0x132CC38", VA = "0x132CC38", Slot = "12")]
		public override bool Invoke()
		{
			return default(bool);
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0x132CC60", Offset = "0x132CC60", VA = "0x132CC60")]
		public MT_PlayerGetHandGesturesNode()
		{
		}
	}
	[Token(Token = "0x200069D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70C18", Offset = "0xE70C18")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70C18", Offset = "0xE70C18")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE70C18", Offset = "0xE70C18")]
	public class MT_PlayerHeadGesturesNode : CallableActionNode<bool>
	{
		[Token(Token = "0x60022FD")]
		[Address(RVA = "0x132D458", Offset = "0x132D458", VA = "0x132D458", Slot = "12")]
		public override void Invoke(bool setEnabled)
		{
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0x132D4F0", Offset = "0x132D4F0", VA = "0x132D4F0")]
		public MT_PlayerHeadGesturesNode()
		{
		}
	}
	[Token(Token = "0x200069E")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70CA0", Offset = "0xE70CA0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70CA0", Offset = "0xE70CA0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE70CA0", Offset = "0xE70CA0")]
	public class MT_PlayerGetHeadGesturesNode : CallableFunctionNode<bool>
	{
		[Token(Token = "0x60022FF")]
		[Address(RVA = "0x132CD24", Offset = "0x132CD24", VA = "0x132CD24", Slot = "12")]
		public override bool Invoke()
		{
			return default(bool);
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0x132CD4C", Offset = "0x132CD4C", VA = "0x132CD4C")]
		public MT_PlayerGetHeadGesturesNode()
		{
		}
	}
	[Token(Token = "0x200069F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70D28", Offset = "0xE70D28")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70D28", Offset = "0xE70D28")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE70D28", Offset = "0xE70D28")]
	public class MT_LoadNextSceneNode : CallableActionNode<string>
	{
		[Token(Token = "0x6002301")]
		[Address(RVA = "0x125AAD0", Offset = "0x125AAD0", VA = "0x125AAD0", Slot = "12")]
		public override void Invoke(string next)
		{
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0x125AADC", Offset = "0x125AADC", VA = "0x125AADC")]
		public MT_LoadNextSceneNode()
		{
		}
	}
	[Token(Token = "0x20006A0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70DB0", Offset = "0xE70DB0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70DB0", Offset = "0xE70DB0")]
	public class MT_GoToDebugMainMenu : CallableActionNode
	{
		[Token(Token = "0x6002303")]
		[Address(RVA = "0x15C4490", Offset = "0x15C4490", VA = "0x15C4490", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0x15C4504", Offset = "0x15C4504", VA = "0x15C4504")]
		public MT_GoToDebugMainMenu()
		{
		}
	}
	[Token(Token = "0x20006A1")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70E14", Offset = "0xE70E14")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70E14", Offset = "0xE70E14")]
	public class MT_GoToMainMenu : CallableActionNode
	{
		[Serializable]
		[Token(Token = "0x20006A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE70E78", Offset = "0xE70E78")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x6002308")]
			[Address(RVA = "0x103791C", Offset = "0x103791C", VA = "0x103791C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002309")]
			[Address(RVA = "0x1037924", Offset = "0x1037924", VA = "0x1037924")]
			internal void <Invoke>b__0_0()
			{
			}
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0x15C450C", Offset = "0x15C450C", VA = "0x15C450C", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0x15C468C", Offset = "0x15C468C", VA = "0x15C468C")]
		public MT_GoToMainMenu()
		{
		}
	}
	[Token(Token = "0x20006A3")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70E88", Offset = "0xE70E88")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70E88", Offset = "0xE70E88")]
	public class SetGoldenPathAndGoToSceneNode : CallableActionNode<int, int, int, TimeOfDay, string, string>
	{
		[Serializable]
		[Token(Token = "0x20006A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE70EEC", Offset = "0xE70EEC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x600230D")]
			[Address(RVA = "0x32C84E8", Offset = "0x32C84E8", VA = "0x32C84E8")]
			public <>c()
			{
			}

			[Token(Token = "0x600230E")]
			[Address(RVA = "0x32C84F0", Offset = "0x32C84F0", VA = "0x32C84F0")]
			internal void <Invoke>b__0_0()
			{
			}
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0x32DB0DC", Offset = "0x32DB0DC", VA = "0x32DB0DC", Slot = "12")]
		public override void Invoke(int act, int scene, int subscene, TimeOfDay timeOfDay, string nextScene, string spawnPointID)
		{
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0x32DB378", Offset = "0x32DB378", VA = "0x32DB378")]
		public SetGoldenPathAndGoToSceneNode()
		{
		}
	}
	[Token(Token = "0x20006A5")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70EFC", Offset = "0xE70EFC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70EFC", Offset = "0xE70EFC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE70EFC", Offset = "0xE70EFC")]
	public class MT_AnalyticsSendGameplayEvent : CallableActionNode
	{
		[Token(Token = "0x600230F")]
		[Address(RVA = "0x11238CC", Offset = "0x11238CC", VA = "0x11238CC", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0x11238D0", Offset = "0x11238D0", VA = "0x11238D0")]
		public MT_AnalyticsSendGameplayEvent()
		{
		}
	}
	[Token(Token = "0x20006A6")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE70F84", Offset = "0xE70F84")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE70F84", Offset = "0xE70F84")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE70F84", Offset = "0xE70F84")]
	public class MT_AnalyticsGameStartEvent : CallableActionNode
	{
		[Token(Token = "0x6002311")]
		[Address(RVA = "0x11238C0", Offset = "0x11238C0", VA = "0x11238C0", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0x11238C4", Offset = "0x11238C4", VA = "0x11238C4")]
		public MT_AnalyticsGameStartEvent()
		{
		}
	}
	[Token(Token = "0x20006A7")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7100C", Offset = "0xE7100C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7100C", Offset = "0xE7100C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7100C", Offset = "0xE7100C")]
	public class MT_AnalyticsGameOverEvent : CallableActionNode
	{
		[Token(Token = "0x6002313")]
		[Address(RVA = "0x11238B4", Offset = "0x11238B4", VA = "0x11238B4", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0x11238B8", Offset = "0x11238B8", VA = "0x11238B8")]
		public MT_AnalyticsGameOverEvent()
		{
		}
	}
	[Token(Token = "0x20006A8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE71094", Offset = "0xE71094")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE71094", Offset = "0xE71094")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE71094", Offset = "0xE71094")]
	public class MT_AnalyticCutsceneStartEvent : CallableActionNode<string>
	{
		[Token(Token = "0x6002315")]
		[Address(RVA = "0x11237F0", Offset = "0x11237F0", VA = "0x11237F0", Slot = "12")]
		public override void Invoke(string cutsceneName)
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0x11237F4", Offset = "0x11237F4", VA = "0x11237F4")]
		public MT_AnalyticCutsceneStartEvent()
		{
		}
	}
	[Token(Token = "0x20006A9")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7111C", Offset = "0xE7111C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7111C", Offset = "0xE7111C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7111C", Offset = "0xE7111C")]
	public class MT_AnalyticTutorialStartEvent : CallableActionNode
	{
		[Token(Token = "0x6002317")]
		[Address(RVA = "0x1123858", Offset = "0x1123858", VA = "0x1123858", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x112385C", Offset = "0x112385C", VA = "0x112385C")]
		public MT_AnalyticTutorialStartEvent()
		{
		}
	}
	[Token(Token = "0x20006AA")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE711A4", Offset = "0xE711A4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE711A4", Offset = "0xE711A4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE711A4", Offset = "0xE711A4")]
	public class MT_AnalyticTutorialStepEvent : CallableActionNode<int>
	{
		[Token(Token = "0x6002319")]
		[Address(RVA = "0x1123864", Offset = "0x1123864", VA = "0x1123864", Slot = "12")]
		public override void Invoke(int stepIndex)
		{
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0x1123868", Offset = "0x1123868", VA = "0x1123868")]
		public MT_AnalyticTutorialStepEvent()
		{
		}
	}
	[Token(Token = "0x20006AB")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7122C", Offset = "0xE7122C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7122C", Offset = "0xE7122C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7122C", Offset = "0xE7122C")]
	public class MT_AnalyticTutorialCompleteEvent : CallableActionNode
	{
		[Token(Token = "0x600231B")]
		[Address(RVA = "0x1123840", Offset = "0x1123840", VA = "0x1123840", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x1123844", Offset = "0x1123844", VA = "0x1123844")]
		public MT_AnalyticTutorialCompleteEvent()
		{
		}
	}
	[Token(Token = "0x20006AC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE712B4", Offset = "0xE712B4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE712B4", Offset = "0xE712B4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE712B4", Offset = "0xE712B4")]
	public class MT_AnalyticTutorialSkipEvent : CallableActionNode
	{
		[Token(Token = "0x600231D")]
		[Address(RVA = "0x112384C", Offset = "0x112384C", VA = "0x112384C", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x1123850", Offset = "0x1123850", VA = "0x1123850")]
		public MT_AnalyticTutorialSkipEvent()
		{
		}
	}
	[Token(Token = "0x20006AD")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7133C", Offset = "0xE7133C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7133C", Offset = "0xE7133C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7133C", Offset = "0xE7133C")]
	public class MT_EarnAchievementNode : CallableActionNode<string>
	{
		[Token(Token = "0x600231F")]
		[Address(RVA = "0x15BD558", Offset = "0x15BD558", VA = "0x15BD558", Slot = "12")]
		public override void Invoke(string achievementID)
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0x15BD55C", Offset = "0x15BD55C", VA = "0x15BD55C")]
		public MT_EarnAchievementNode()
		{
		}
	}
	[Token(Token = "0x20006AE")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE713C4", Offset = "0xE713C4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE713C4", Offset = "0xE713C4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE713C4", Offset = "0xE713C4")]
	public class MT_DisplayTutorialTextOnHand : CallableActionNode<string, RigTransform>
	{
		[Token(Token = "0x170003A5")]
		private MT_PlayerParameters Parameters
		{
			[Token(Token = "0x6002321")]
			[Address(RVA = "0x11375F8", Offset = "0x11375F8", VA = "0x11375F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x1137600", Offset = "0x1137600", VA = "0x1137600")]
		private GameObject GetTextGameObject(RigTransform rig)
		{
			return null;
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x1137654", Offset = "0x1137654", VA = "0x1137654", Slot = "12")]
		public override void Invoke(string stringId, RigTransform rigTransform = RigTransform.RightHand)
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0x11377AC", Offset = "0x11377AC", VA = "0x11377AC")]
		public MT_DisplayTutorialTextOnHand()
		{
		}
	}
	[Token(Token = "0x20006AF")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7144C", Offset = "0xE7144C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7144C", Offset = "0xE7144C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7144C", Offset = "0xE7144C")]
	public class MT_DisableTutorialTextOnHand : CallableActionNode<RigTransform>
	{
		[Token(Token = "0x170003A6")]
		private MT_PlayerParameters Parameters
		{
			[Token(Token = "0x6002325")]
			[Address(RVA = "0x1137484", Offset = "0x1137484", VA = "0x1137484")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0x113748C", Offset = "0x113748C", VA = "0x113748C")]
		private GameObject GetTextGameObject(RigTransform rig)
		{
			return null;
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x11374E0", Offset = "0x11374E0", VA = "0x11374E0", Slot = "12")]
		public override void Invoke(RigTransform rigTransform = RigTransform.RightHand)
		{
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x11375AC", Offset = "0x11375AC", VA = "0x11375AC")]
		public MT_DisableTutorialTextOnHand()
		{
		}
	}
	[Token(Token = "0x20006B0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE714D4", Offset = "0xE714D4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE714D4", Offset = "0xE714D4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE714D4", Offset = "0xE714D4")]
	public class MT_HideHandTutorialText : CallableActionNode<string>
	{
		[Token(Token = "0x6002329")]
		[Address(RVA = "0x15CFE30", Offset = "0x15CFE30", VA = "0x15CFE30", Slot = "12")]
		public override void Invoke(string stringId)
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x15CFED0", Offset = "0x15CFED0", VA = "0x15CFED0")]
		public MT_HideHandTutorialText()
		{
		}
	}
	[Token(Token = "0x20006B1")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7155C", Offset = "0xE7155C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7155C", Offset = "0xE7155C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7155C", Offset = "0xE7155C")]
	public class MT_SpawnTutorial : CallableActionNode<string, float, string, GameObject>
	{
		[Token(Token = "0x600232B")]
		[Address(RVA = "0x12AFEE8", Offset = "0x12AFEE8", VA = "0x12AFEE8", Slot = "12")]
		public override void Invoke(string uniqueTutorialId, float scale, string stringId, GameObject tutorial)
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x12B018C", Offset = "0x12B018C", VA = "0x12B018C")]
		public MT_SpawnTutorial()
		{
		}
	}
	[Token(Token = "0x20006B2")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE715E4", Offset = "0xE715E4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE715E4", Offset = "0xE715E4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE715E4", Offset = "0xE715E4")]
	public class MT_ExpandedSpawnTutorial : CallableActionNode<string, float, string, GameObject, Transform, string>
	{
		[Token(Token = "0x600232D")]
		[Address(RVA = "0x15BDB84", Offset = "0x15BDB84", VA = "0x15BDB84", Slot = "12")]
		public override void Invoke(string uniqueTutorialId, float scale, string stringId, GameObject tutorial, Transform objectToFollow, string lineEndTutorialObjectId)
		{
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x15BDCA4", Offset = "0x15BDCA4", VA = "0x15BDCA4")]
		public MT_ExpandedSpawnTutorial()
		{
		}
	}
	[Token(Token = "0x20006B3")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7166C", Offset = "0xE7166C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7166C", Offset = "0xE7166C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7166C", Offset = "0xE7166C")]
	public class MT_DestroyTutorial : CallableActionNode<string>
	{
		[Token(Token = "0x600232F")]
		[Address(RVA = "0x1134CFC", Offset = "0x1134CFC", VA = "0x1134CFC", Slot = "12")]
		public override void Invoke(string uniqueTutorialId)
		{
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x1134D08", Offset = "0x1134D08", VA = "0x1134D08")]
		public MT_DestroyTutorial()
		{
		}
	}
	[Token(Token = "0x20006B4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE716F4", Offset = "0xE716F4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE716F4", Offset = "0xE716F4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE716F4", Offset = "0xE716F4")]
	public class MT_MoveTutorial : CallableActionNode<string, string>
	{
		[Token(Token = "0x6002331")]
		[Address(RVA = "0x10F2D2C", Offset = "0x10F2D2C", VA = "0x10F2D2C", Slot = "12")]
		public override void Invoke(string uniqueTutorialId, string tutorialObjectId)
		{
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x10F2DCC", Offset = "0x10F2DCC", VA = "0x10F2DCC")]
		public MT_MoveTutorial()
		{
		}
	}
	[Token(Token = "0x20006B5")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7177C", Offset = "0xE7177C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7177C", Offset = "0xE7177C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7177C", Offset = "0xE7177C")]
	public class MT_IsTutorialShowing : CallableFunctionNode<bool, string>
	{
		[Token(Token = "0x6002333")]
		[Address(RVA = "0x12531AC", Offset = "0x12531AC", VA = "0x12531AC", Slot = "12")]
		public override bool Invoke(string uniqueTutorialId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x12531B8", Offset = "0x12531B8", VA = "0x12531B8")]
		public MT_IsTutorialShowing()
		{
		}
	}
	[Token(Token = "0x20006B6")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE71804", Offset = "0xE71804")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE71804", Offset = "0xE71804")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE71804", Offset = "0xE71804")]
	public class MT_GetRigTransform : CallableFunctionNode<Transform, RigTransform>
	{
		[Token(Token = "0x6002335")]
		[Address(RVA = "0x15C4374", Offset = "0x15C4374", VA = "0x15C4374", Slot = "12")]
		public override Transform Invoke(RigTransform rigTransform)
		{
			return null;
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0x15C4380", Offset = "0x15C4380", VA = "0x15C4380")]
		public MT_GetRigTransform()
		{
		}
	}
	[Token(Token = "0x20006B7")]
	public enum ControllerHighlight
	{
		[Token(Token = "0x4001D66")]
		X,
		[Token(Token = "0x4001D67")]
		Y,
		[Token(Token = "0x4001D68")]
		B,
		[Token(Token = "0x4001D69")]
		A,
		[Token(Token = "0x4001D6A")]
		RightStick,
		[Token(Token = "0x4001D6B")]
		LeftStick,
		[Token(Token = "0x4001D6C")]
		RightTrigger,
		[Token(Token = "0x4001D6D")]
		LeftTrigger,
		[Token(Token = "0x4001D6E")]
		LeftGrip,
		[Token(Token = "0x4001D6F")]
		RightGrip
	}
	[Token(Token = "0x20006B8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7188C", Offset = "0xE7188C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7188C", Offset = "0xE7188C")]
	public class ToggleControllerHighlightNode : CallableActionNode<ControllerHighlight, bool>
	{
		[Token(Token = "0x170003A7")]
		private MT_PlayerParameters Parameters
		{
			[Token(Token = "0x6002337")]
			[Address(RVA = "0x1351B84", Offset = "0x1351B84", VA = "0x1351B84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0x1351B8C", Offset = "0x1351B8C", VA = "0x1351B8C", Slot = "12")]
		public override void Invoke(ControllerHighlight highlight, bool enabled)
		{
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x1351CCC", Offset = "0x1351CCC", VA = "0x1351CCC")]
		public ToggleControllerHighlightNode()
		{
		}
	}
	[Token(Token = "0x20006B9")]
	public enum IconsHighlight
	{
		[Token(Token = "0x4001D71")]
		rightStickArrowUpIcon,
		[Token(Token = "0x4001D72")]
		rightStickArrowRightIcon,
		[Token(Token = "0x4001D73")]
		rightStickArrowLeftIcon,
		[Token(Token = "0x4001D74")]
		rightStickArrowDownIcon,
		[Token(Token = "0x4001D75")]
		rightStickArrowClickIcon,
		[Token(Token = "0x4001D76")]
		leftStickArrowUpIcon,
		[Token(Token = "0x4001D77")]
		leftStickArrowRightIcon,
		[Token(Token = "0x4001D78")]
		leftStickArrowLeftIcon,
		[Token(Token = "0x4001D79")]
		leftStickArrowDownIcon,
		[Token(Token = "0x4001D7A")]
		leftStickArrowClickIcon
	}
	[Token(Token = "0x20006BA")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE718F0", Offset = "0xE718F0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE718F0", Offset = "0xE718F0")]
	public class ToggleControllerIconNode : CallableActionNode<IconsHighlight, bool>
	{
		[Token(Token = "0x170003A8")]
		private MT_PlayerParameters Parameters
		{
			[Token(Token = "0x600233A")]
			[Address(RVA = "0x1351D18", Offset = "0x1351D18", VA = "0x1351D18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0x1351D20", Offset = "0x1351D20", VA = "0x1351D20", Slot = "12")]
		public override void Invoke(IconsHighlight highlight, bool enabled)
		{
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0x1351E60", Offset = "0x1351E60", VA = "0x1351E60")]
		public ToggleControllerIconNode()
		{
		}
	}
	[Token(Token = "0x20006BB")]
	public enum LinesHighlight
	{
		[Token(Token = "0x4001D7C")]
		lineRightStick,
		[Token(Token = "0x4001D7D")]
		lineButtonA,
		[Token(Token = "0x4001D7E")]
		lineButtonB,
		[Token(Token = "0x4001D7F")]
		lineButtonRightGrip,
		[Token(Token = "0x4001D80")]
		lineButtonRightTrigger,
		[Token(Token = "0x4001D81")]
		lineLeftStick,
		[Token(Token = "0x4001D82")]
		lineButtonX,
		[Token(Token = "0x4001D83")]
		lineButtonY,
		[Token(Token = "0x4001D84")]
		lineButtonLeftGrip,
		[Token(Token = "0x4001D85")]
		lineButtonLeftTrigger
	}
	[Token(Token = "0x20006BC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE71954", Offset = "0xE71954")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE71954", Offset = "0xE71954")]
	public class ToggleControllerLineNode : CallableActionNode<LinesHighlight, bool>
	{
		[Token(Token = "0x170003A9")]
		private MT_PlayerParameters Parameters
		{
			[Token(Token = "0x600233D")]
			[Address(RVA = "0x1351EAC", Offset = "0x1351EAC", VA = "0x1351EAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x1351EB4", Offset = "0x1351EB4", VA = "0x1351EB4", Slot = "12")]
		public override void Invoke(LinesHighlight highlight, bool enabled)
		{
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0x1351FF4", Offset = "0x1351FF4", VA = "0x1351FF4")]
		public ToggleControllerLineNode()
		{
		}
	}
	[Token(Token = "0x20006BD")]
	public enum ButtonMeshes
	{
		[Token(Token = "0x4001D87")]
		buttonOculus_Mesh,
		[Token(Token = "0x4001D88")]
		buttonA_Mesh,
		[Token(Token = "0x4001D89")]
		buttonB_Mesh,
		[Token(Token = "0x4001D8A")]
		rightController_Mesh,
		[Token(Token = "0x4001D8B")]
		rightControllerTop_Mesh,
		[Token(Token = "0x4001D8C")]
		rightGrip_Mesh,
		[Token(Token = "0x4001D8D")]
		rightStick_Mesh,
		[Token(Token = "0x4001D8E")]
		rightTrigger_Mesh,
		[Token(Token = "0x4001D8F")]
		buttonMenu_Mesh,
		[Token(Token = "0x4001D90")]
		buttonX_Mesh,
		[Token(Token = "0x4001D91")]
		buttonY_Mesh,
		[Token(Token = "0x4001D92")]
		leftController_Mesh,
		[Token(Token = "0x4001D93")]
		leftControllerTop_Mesh,
		[Token(Token = "0x4001D94")]
		leftGrip_Mesh,
		[Token(Token = "0x4001D95")]
		leftStick_Mesh,
		[Token(Token = "0x4001D96")]
		leftTrigger_Mesh
	}
	[Token(Token = "0x20006BE")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE719B8", Offset = "0xE719B8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE719B8", Offset = "0xE719B8")]
	public class SetHighlightColor : CallableActionNode<ButtonMeshes, Color>
	{
		[Token(Token = "0x170003AA")]
		private MT_PlayerParameters Parameters
		{
			[Token(Token = "0x6002340")]
			[Address(RVA = "0x32DB414", Offset = "0x32DB414", VA = "0x32DB414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0x32DB41C", Offset = "0x32DB41C", VA = "0x32DB41C")]
		private void SetEmmissiveColor(MeshRenderer mR, Color c)
		{
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0x32DB4B0", Offset = "0x32DB4B0", VA = "0x32DB4B0", Slot = "12")]
		public override void Invoke(ButtonMeshes button, Color emissionColor)
		{
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0x32DB660", Offset = "0x32DB660", VA = "0x32DB660")]
		public SetHighlightColor()
		{
		}
	}
	[Token(Token = "0x20006BF")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE71A1C", Offset = "0xE71A1C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE71A1C", Offset = "0xE71A1C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE71A1C", Offset = "0xE71A1C")]
	public class OnWaypointEndNode : FlowControlNode
	{
		[Token(Token = "0x6002344")]
		[Address(RVA = "0x107B4C8", Offset = "0x107B4C8", VA = "0x107B4C8", Slot = "43")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0x107B578", Offset = "0x107B578", VA = "0x107B578")]
		public OnWaypointEndNode()
		{
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0x107B580", Offset = "0x107B580", VA = "0x107B580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE961DC", Offset = "0xE961DC")]
		private void <RegisterPorts>b__0_0(Flow f)
		{
		}
	}
	[Token(Token = "0x20006C0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE71AA4", Offset = "0xE71AA4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE71AA4", Offset = "0xE71AA4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE71AA4", Offset = "0xE71AA4")]
	public class MT_InventoryItemExpendNode : CallableActionNode<string>
	{
		[Token(Token = "0x6002347")]
		[Address(RVA = "0x124E324", Offset = "0x124E324", VA = "0x124E324", Slot = "12")]
		public override void Invoke(string itemNameId)
		{
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x124E48C", Offset = "0x124E48C", VA = "0x124E48C")]
		public MT_InventoryItemExpendNode()
		{
		}
	}
}
namespace MazeTheory.Scripting.Navigation
{
	[Token(Token = "0x20006C1")]
	public sealed class FlowCanvasWaypointInterop : MonoBehaviour
	{
		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MT_NavWaypoint Waypoint;

		[Token(Token = "0x6002349")]
		[Address(RVA = "0x100E2D8", Offset = "0x100E2D8", VA = "0x100E2D8")]
		public FlowCanvasWaypointInterop()
		{
		}
	}
	[Token(Token = "0x20006C2")]
	public class MT_NavWaypoint : MT_Waypoint
	{
		[Token(Token = "0x20006C3")]
		public enum NavWaypointBehaviour
		{
			[Token(Token = "0x4001DA9")]
			None,
			[Token(Token = "0x4001DAA")]
			Wait,
			[Token(Token = "0x4001DAB")]
			PlayAnimationClip,
			[Token(Token = "0x4001DAC")]
			JumpToAnimatorState,
			[Token(Token = "0x4001DAD")]
			FlowScript,
			[Token(Token = "0x4001DAE")]
			Timeline,
			[Token(Token = "0x4001DAF")]
			TimelineList,
			[Token(Token = "0x4001DB0")]
			WaitForTrigger
		}

		[Token(Token = "0x20006C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE71B2C", Offset = "0xE71B2C")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool hasFinished;

			[Token(Token = "0x6002357")]
			[Address(RVA = "0x103D894", Offset = "0x103D894", VA = "0x103D894")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002358")]
			[Address(RVA = "0x103D89C", Offset = "0x103D89C", VA = "0x103D89C")]
			internal void <PlayDialogueCoroutine>g__ONComplete|0()
			{
			}

			[Token(Token = "0x6002359")]
			[Address(RVA = "0x103D8A8", Offset = "0x103D8A8", VA = "0x103D8A8")]
			internal bool <PlayDialogueCoroutine>g__HasFinished|1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE71B3C", Offset = "0xE71B3C")]
		private sealed class <PlayDialogueCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_NavWaypoint <>4__this;

			[Token(Token = "0x4001DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private MT_NPCDialogue[] <>7__wrap1;

			[Token(Token = "0x4001DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x170003AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600235D")]
				[Address(RVA = "0x103DB1C", Offset = "0x103DB1C", VA = "0x103DB1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600235F")]
				[Address(RVA = "0x103DB64", Offset = "0x103DB64", VA = "0x103DB64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600235A")]
			[Address(RVA = "0x103D8B0", Offset = "0x103D8B0", VA = "0x103D8B0")]
			[DebuggerHidden]
			public <PlayDialogueCoroutine>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600235B")]
			[Address(RVA = "0x103D8DC", Offset = "0x103D8DC", VA = "0x103D8DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600235C")]
			[Address(RVA = "0x103D8E0", Offset = "0x103D8E0", VA = "0x103D8E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600235E")]
			[Address(RVA = "0x103DB24", Offset = "0x103DB24", VA = "0x103DB24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE71B4C", Offset = "0xE71B4C")]
		private sealed class <WaitToContinue>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4001DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MT_NavWaypoint <>4__this;

			[Token(Token = "0x170003AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002363")]
				[Address(RVA = "0x103DC5C", Offset = "0x103DC5C", VA = "0x103DC5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002365")]
				[Address(RVA = "0x103DCA4", Offset = "0x103DCA4", VA = "0x103DCA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002360")]
			[Address(RVA = "0x103DB6C", Offset = "0x103DB6C", VA = "0x103DB6C")]
			[DebuggerHidden]
			public <WaitToContinue>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002361")]
			[Address(RVA = "0x103DB98", Offset = "0x103DB98", VA = "0x103DB98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002362")]
			[Address(RVA = "0x103DB9C", Offset = "0x103DB9C", VA = "0x103DB9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002364")]
			[Address(RVA = "0x103DC64", Offset = "0x103DC64", VA = "0x103DC64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public NavWaypointBehaviour waypointBehaviour;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float waitTime;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationClip animationClip;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string animatorStartStateName;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string animatorEndStateName;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private FlowScriptController flowScriptController;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private string functionName;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private PlayableDirector _director;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private PlayableDirector[] _directorList;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public MT_NPCDialogue[] dialogue;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private MT_NPCGameplay _gameplay;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Coroutine _waitCoroutine;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Coroutine _dialogueCoroutine;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _waitingForTrigger;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool _waitingForFlowCanvas;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int _currentTimelineIndex;

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x10F90A8", Offset = "0x10F90A8", VA = "0x10F90A8")]
		public void DoBehaviour(MT_NPCGameplay gameplay, Action onBehaviourComplete)
		{
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0x10F9348", Offset = "0x10F9348", VA = "0x10F9348")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE961EC", Offset = "0xE961EC")]
		private IEnumerator PlayDialogueCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0x10F93C0", Offset = "0x10F93C0", VA = "0x10F93C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9624C", Offset = "0xE9624C")]
		private IEnumerator WaitToContinue(float time)
		{
			return null;
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0x10F9448", Offset = "0x10F9448", VA = "0x10F9448")]
		private void StartFlowGraph()
		{
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0x10F95D4", Offset = "0x10F95D4", VA = "0x10F95D4")]
		private void StartTimeline()
		{
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0x10F971C", Offset = "0x10F971C", VA = "0x10F971C")]
		private void StartTimelineList()
		{
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0x10F98E0", Offset = "0x10F98E0", VA = "0x10F98E0", Slot = "4")]
		protected override void Continue()
		{
		}

		[Token(Token = "0x6002351")]
		[Address(RVA = "0x10F98E8", Offset = "0x10F98E8", VA = "0x10F98E8")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE962AC", Offset = "0xE962AC")]
		public void Trigger()
		{
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0x10F991C", Offset = "0x10F991C", VA = "0x10F991C")]
		public void TriggerFromFlowCanvas()
		{
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0x10F9950", Offset = "0x10F9950", VA = "0x10F9950")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0x10F999C", Offset = "0x10F999C", VA = "0x10F999C")]
		public MT_NavWaypoint()
		{
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0x10F9A00", Offset = "0x10F9A00", VA = "0x10F9A00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE962C4", Offset = "0xE962C4")]
		private void <StartTimeline>g__DirectorOnStopped|21_0(PlayableDirector obj)
		{
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x10F9ACC", Offset = "0x10F9ACC", VA = "0x10F9ACC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE962D4", Offset = "0xE962D4")]
		private void <StartTimelineList>g__DirectorOnStopped|22_0(PlayableDirector obj)
		{
		}
	}
	[Token(Token = "0x20006C7")]
	public class MT_NavigationPath : MonoBehaviour
	{
		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MT_NavWaypoint> waypoints;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color waypointColor;

		[Token(Token = "0x6002366")]
		[Address(RVA = "0x10F9C10", Offset = "0x10F9C10", VA = "0x10F9C10")]
		public MT_NavigationPath()
		{
		}
	}
	[Token(Token = "0x20006C8")]
	public class MT_Waypoint : MonoBehaviour
	{
		[Token(Token = "0x20006C9")]
		public enum FaceDirection
		{
			[Token(Token = "0x4001DC6")]
			None,
			[Token(Token = "0x4001DC7")]
			MatchWaypointRotation,
			[Token(Token = "0x4001DC8")]
			FaceTarget,
			[Token(Token = "0x4001DC9")]
			FacePlayer
		}

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FaceDirection faceDirection;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform faceDirectionTarget;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onWaypointReached;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onBehaviourFinished;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE85E08", Offset = "0xE85E08")]
		private bool <IsOccupied>k__BackingField;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Action onBehaviourComplete;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		protected Color waypointColor;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private string waypointLabel;

		[Token(Token = "0x170003AF")]
		public bool IsOccupied
		{
			[Token(Token = "0x6002367")]
			[Address(RVA = "0x113F834", Offset = "0x113F834", VA = "0x113F834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96384", Offset = "0xE96384")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002368")]
			[Address(RVA = "0x113F83C", Offset = "0x113F83C", VA = "0x113F83C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96394", Offset = "0xE96394")]
			set
			{
			}
		}

		[Token(Token = "0x170003B0")]
		public bool IsActive
		{
			[Token(Token = "0x6002369")]
			[Address(RVA = "0x113F848", Offset = "0x113F848", VA = "0x113F848")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600236A")]
			[Address(RVA = "0x113F86C", Offset = "0x113F86C", VA = "0x113F86C")]
			set
			{
			}
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0x113F8A0", Offset = "0x113F8A0", VA = "0x113F8A0")]
		protected void TriggerWaypointBehaviour()
		{
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0x113F8B4", Offset = "0x113F8B4", VA = "0x113F8B4", Slot = "4")]
		protected virtual void Continue()
		{
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0x113F8F8", Offset = "0x113F8F8", VA = "0x113F8F8")]
		public void SetWaypointGizmos(Color color, string label)
		{
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0x113F908", Offset = "0x113F908", VA = "0x113F908")]
		public MT_Waypoint()
		{
		}
	}
}
namespace MazeTheory.Scripting.Combat
{
	[Token(Token = "0x20006CA")]
	public interface IShootable
	{
		[Token(Token = "0x600236F")]
		void OnShot(float bulletForce, float bulletDamage, Vector3 direction);
	}
	[Token(Token = "0x20006CB")]
	[DisallowMultipleComponent]
	public class MT_NPCHealth : MonoBehaviour
	{
		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float maxHealth;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private NPCNavigation navigation;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onDamage;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onKill;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[MazeTheory.Toolbox.ReadOnly]
		public float _currentHealth;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE85EB8", Offset = "0xE85EB8")]
		private bool <IsDead>k__BackingField;

		[Token(Token = "0x170003B1")]
		public bool IsDead
		{
			[Token(Token = "0x6002371")]
			[Address(RVA = "0x10F6C10", Offset = "0x10F6C10", VA = "0x10F6C10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE963B4", Offset = "0xE963B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002370")]
			[Address(RVA = "0x10F6C04", Offset = "0x10F6C04", VA = "0x10F6C04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE963A4", Offset = "0xE963A4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0x10F6C18", Offset = "0x10F6C18", VA = "0x10F6C18")]
		public void SetNavigation(NPCNavigation nav)
		{
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0x10F6C20", Offset = "0x10F6C20", VA = "0x10F6C20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0x10F6C30", Offset = "0x10F6C30", VA = "0x10F6C30")]
		public void DamageNpcCharacter(float damage)
		{
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0x10F6C6C", Offset = "0x10F6C6C", VA = "0x10F6C6C")]
		public void KillNpcCharacter()
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0x10F40D0", Offset = "0x10F40D0", VA = "0x10F40D0")]
		public void HitNpc(MT_PlayerEvents.NpcBodyPart bodyPart, float strength, Vector3 colPoint, Vector3 direction, Collider col)
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0x10F6CC8", Offset = "0x10F6CC8", VA = "0x10F6CC8")]
		public MT_NPCHealth()
		{
		}
	}
	[Token(Token = "0x20006CC")]
	public class PlayerGunFire : MonoBehaviour
	{
		[Token(Token = "0x20006CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE71B6C", Offset = "0xE71B6C")]
		private sealed class <ReAssignBloodImpactVFX>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerGunFire <>4__this;

			[Token(Token = "0x170003B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002383")]
				[Address(RVA = "0x32C5DD8", Offset = "0x32C5DD8", VA = "0x32C5DD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002385")]
				[Address(RVA = "0x32C5E20", Offset = "0x32C5E20", VA = "0x32C5E20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002380")]
			[Address(RVA = "0x32C5D04", Offset = "0x32C5D04", VA = "0x32C5D04")]
			[DebuggerHidden]
			public <ReAssignBloodImpactVFX>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6002381")]
			[Address(RVA = "0x32C5D30", Offset = "0x32C5D30", VA = "0x32C5D30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002382")]
			[Address(RVA = "0x32C5D34", Offset = "0x32C5D34", VA = "0x32C5D34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002384")]
			[Address(RVA = "0x32C5DE0", Offset = "0x32C5DE0", VA = "0x32C5DE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE71B7C", Offset = "0xE71B7C")]
		private sealed class <LineRendererCo>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerGunFire <>4__this;

			[Token(Token = "0x4001DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Color <color>5__2;

			[Token(Token = "0x170003B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002389")]
				[Address(RVA = "0x32C5CB4", Offset = "0x32C5CB4", VA = "0x32C5CB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600238B")]
				[Address(RVA = "0x32C5CFC", Offset = "0x32C5CFC", VA = "0x32C5CFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002386")]
			[Address(RVA = "0x32C5A0C", Offset = "0x32C5A0C", VA = "0x32C5A0C")]
			[DebuggerHidden]
			public <LineRendererCo>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6002387")]
			[Address(RVA = "0x32C5A38", Offset = "0x32C5A38", VA = "0x32C5A38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002388")]
			[Address(RVA = "0x32C5A3C", Offset = "0x32C5A3C", VA = "0x32C5A3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600238A")]
			[Address(RVA = "0x32C5CBC", Offset = "0x32C5CBC", VA = "0x32C5CBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform gunBarrel;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LayerMask bulletLayerMask;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private LayerMask blockingLayerMask;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE85EF8", Offset = "0xE85EF8")]
		private float bulletForce;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE85F38", Offset = "0xE85F38")]
		private float bulletDamage;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool useRigidbodyForce;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LineRenderer lineRenderer;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool _useAimAssist;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE85FAC", Offset = "0xE85FAC")]
		private float aimAssist;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float minAimAssistDistance;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float maxAimAssistDistance;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private HVRGrabbable weaponGrabbable;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _vfxValue;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private Color lineRendererColor;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float lineRendererFadeSpeed;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float lineRendererTravelSpeed;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 lineDirection;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Coroutine _lineCo;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private bool useGunRays;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ParticleSystem bulletImpact;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ParticleSystem bloodImpact;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ZA_AudioEvent impactAudioEvent;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int _shootableLayerMask;

		[Token(Token = "0x4001DE7")]
		private const float DefaultBlockedDistance = 500f;

		[Token(Token = "0x6002378")]
		[Address(RVA = "0x1085068", Offset = "0x1085068", VA = "0x1085068")]
		private void Start()
		{
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0x10850BC", Offset = "0x10850BC", VA = "0x10850BC", Slot = "4")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE963C4", Offset = "0xE963C4")]
		public virtual void Fire()
		{
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0x1085ED4", Offset = "0x1085ED4", VA = "0x1085ED4", Slot = "5")]
		protected virtual void ApplyRigidBodyImpact(RaycastHit chosenHit, Vector3 gunBarrelPos)
		{
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0x1085E5C", Offset = "0x1085E5C", VA = "0x1085E5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9643C", Offset = "0xE9643C")]
		private IEnumerator ReAssignBloodImpactVFX()
		{
			return null;
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0x1085CB0", Offset = "0x1085CB0", VA = "0x1085CB0")]
		private void ShowTrail(Vector3 origin, Vector3 end)
		{
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x1086088", Offset = "0x1086088", VA = "0x1086088")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9649C", Offset = "0xE9649C")]
		private IEnumerator LineRendererCo()
		{
			return null;
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x1086100", Offset = "0x1086100", VA = "0x1086100")]
		public void ToggleLocalAimAssist(bool e)
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x108610C", Offset = "0x108610C", VA = "0x108610C")]
		public PlayerGunFire()
		{
		}
	}
	[Token(Token = "0x20006CF")]
	public sealed class ShootableCallsFlowcanvasMethod : MonoBehaviour, IShootable
	{
		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FlowScriptController flowScriptController;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string methodName;

		[Token(Token = "0x600238C")]
		[Address(RVA = "0x32DC080", Offset = "0x32DC080", VA = "0x32DC080", Slot = "4")]
		public void OnShot(float bulletForce, float bulletDamage, Vector3 direction)
		{
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0x32DC0A4", Offset = "0x32DC0A4", VA = "0x32DC0A4")]
		public ShootableCallsFlowcanvasMethod()
		{
		}
	}
}
namespace MazeTheory.Scripting.Audio
{
	[Serializable]
	[Token(Token = "0x20006D0")]
	public class AudioEvent
	{
		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip audioClip;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform emitterTransf;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onEvent;

		[Token(Token = "0x600238E")]
		[Address(RVA = "0x13C07D0", Offset = "0x13C07D0", VA = "0x13C07D0")]
		public AudioEvent()
		{
		}
	}
	[Token(Token = "0x20006D1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE71B8C", Offset = "0xE71B8C")]
	public sealed class MT_AudioEvent : MonoBehaviour
	{
		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioEvent[] events;

		[Token(Token = "0x600238F")]
		[Address(RVA = "0x1125930", Offset = "0x1125930", VA = "0x1125930")]
		public void TriggerAudioEvent(int index)
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0x1125AA4", Offset = "0x1125AA4", VA = "0x1125AA4")]
		private void TriggerEvent(int eventIndex)
		{
		}

		[Token(Token = "0x6002391")]
		[Address(RVA = "0x1125AA8", Offset = "0x1125AA8", VA = "0x1125AA8")]
		public MT_AudioEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006D2")]
	public class MusicEvent
	{
		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEvent onEvent;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool triggerEvent;

		[Token(Token = "0x6002392")]
		[Address(RVA = "0x114575C", Offset = "0x114575C", VA = "0x114575C")]
		public MusicEvent()
		{
		}
	}
	[Token(Token = "0x20006D3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE71BC4", Offset = "0xE71BC4")]
	public sealed class MT_MusicEvent : MonoBehaviour
	{
		[Token(Token = "0x20006D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE71BFC", Offset = "0xE71BFC")]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_MusicEvent <>4__this;

			[Token(Token = "0x170003B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600239C")]
				[Address(RVA = "0x103C774", Offset = "0x103C774", VA = "0x103C774", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600239E")]
				[Address(RVA = "0x103C7BC", Offset = "0x103C7BC", VA = "0x103C7BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002399")]
			[Address(RVA = "0x103C650", Offset = "0x103C650", VA = "0x103C650")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600239A")]
			[Address(RVA = "0x103C67C", Offset = "0x103C67C", VA = "0x103C67C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600239B")]
			[Address(RVA = "0x103C680", Offset = "0x103C680", VA = "0x103C680", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600239D")]
			[Address(RVA = "0x103C77C", Offset = "0x103C77C", VA = "0x103C77C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _triggerAutomatically;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MusicEvent[] events;

		[Token(Token = "0x6002393")]
		[Address(RVA = "0x10F2E18", Offset = "0x10F2E18", VA = "0x10F2E18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9659C", Offset = "0xE9659C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0x10F2E90", Offset = "0x10F2E90", VA = "0x10F2E90")]
		public void TriggerMusicEvent(int index)
		{
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0x10F2FA8", Offset = "0x10F2FA8", VA = "0x10F2FA8")]
		public void StopMusicEvent(int index)
		{
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0x10F3058", Offset = "0x10F3058", VA = "0x10F3058")]
		public void TriggerEvent(int eventIndex)
		{
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0x10F305C", Offset = "0x10F305C", VA = "0x10F305C")]
		public void TriggerAllEvents()
		{
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0x10F30AC", Offset = "0x10F30AC", VA = "0x10F30AC")]
		public MT_MusicEvent()
		{
		}
	}
}
namespace MazeTheory.Audio
{
	[Token(Token = "0x20006D5")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE71C0C", Offset = "0xE71C0C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE71C0C", Offset = "0xE71C0C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE71C0C", Offset = "0xE71C0C")]
	public class SetExploreNode : CallableActionNode
	{
		[Token(Token = "0x600239F")]
		[Address(RVA = "0x32DAF58", Offset = "0x32DAF58", VA = "0x32DAF58", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0x32DAFB0", Offset = "0x32DAFB0", VA = "0x32DAFB0")]
		public SetExploreNode()
		{
		}
	}
	[Token(Token = "0x20006D6")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE71C94", Offset = "0xE71C94")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE71C94", Offset = "0xE71C94")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE71C94", Offset = "0xE71C94")]
	public class PlayNarrativeNode : CallableActionNode<AudioClip>
	{
		[Token(Token = "0x60023A1")]
		[Address(RVA = "0x1080CF0", Offset = "0x1080CF0", VA = "0x1080CF0", Slot = "12")]
		public override void Invoke(AudioClip clip)
		{
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0x1080D50", Offset = "0x1080D50", VA = "0x1080D50")]
		public PlayNarrativeNode()
		{
		}
	}
	[Token(Token = "0x20006D7")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE71D1C", Offset = "0xE71D1C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE71D1C", Offset = "0xE71D1C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE71D1C", Offset = "0xE71D1C")]
	public class PlayLoopingNarrativeNode : CallableActionNode<AudioClip>
	{
		[Token(Token = "0x60023A3")]
		[Address(RVA = "0x1080C44", Offset = "0x1080C44", VA = "0x1080C44", Slot = "12")]
		public override void Invoke(AudioClip clip)
		{
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x1080CA4", Offset = "0x1080CA4", VA = "0x1080CA4")]
		public PlayLoopingNarrativeNode()
		{
		}
	}
	[Token(Token = "0x20006D8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE71DA4", Offset = "0xE71DA4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE71DA4", Offset = "0xE71DA4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE71DA4", Offset = "0xE71DA4")]
	public class SetThreatNode : CallableActionNode
	{
		[Token(Token = "0x60023A5")]
		[Address(RVA = "0x32DBEB0", Offset = "0x32DBEB0", VA = "0x32DBEB0", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0x32DBF08", Offset = "0x32DBF08", VA = "0x32DBF08")]
		public SetThreatNode()
		{
		}
	}
	[Token(Token = "0x20006D9")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE71E2C", Offset = "0xE71E2C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE71E2C", Offset = "0xE71E2C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE71E2C", Offset = "0xE71E2C")]
	public class IncreaseIntensityNode : CallableActionNode
	{
		[Token(Token = "0x60023A7")]
		[Address(RVA = "0x10DCA68", Offset = "0x10DCA68", VA = "0x10DCA68", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0x10DCAC0", Offset = "0x10DCAC0", VA = "0x10DCAC0")]
		public IncreaseIntensityNode()
		{
		}
	}
	[Token(Token = "0x20006DA")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE71EB4", Offset = "0xE71EB4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE71EB4", Offset = "0xE71EB4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE71EB4", Offset = "0xE71EB4")]
	public class DecreaseIntensityNode : CallableActionNode
	{
		[Token(Token = "0x60023A9")]
		[Address(RVA = "0xFFFEDC", Offset = "0xFFFEDC", VA = "0xFFFEDC", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0xFFFF34", Offset = "0xFFFF34", VA = "0xFFFF34")]
		public DecreaseIntensityNode()
		{
		}
	}
	[Token(Token = "0x20006DB")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE71F3C", Offset = "0xE71F3C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE71F3C", Offset = "0xE71F3C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE71F3C", Offset = "0xE71F3C")]
	public class SetCombatNode : CallableActionNode<int>
	{
		[Token(Token = "0x60023AB")]
		[Address(RVA = "0x32DADDC", Offset = "0x32DADDC", VA = "0x32DADDC", Slot = "12")]
		public override void Invoke(int combatBank)
		{
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0x32DAE3C", Offset = "0x32DAE3C", VA = "0x32DAE3C")]
		public SetCombatNode()
		{
		}
	}
	[Token(Token = "0x20006DC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE71FC4", Offset = "0xE71FC4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE71FC4", Offset = "0xE71FC4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE71FC4", Offset = "0xE71FC4")]
	public class ExplorePoolNode : CallableActionNode<AudioClip[]>
	{
		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x100C31C", Offset = "0x100C31C", VA = "0x100C31C", Slot = "12")]
		public override void Invoke(AudioClip[] clip)
		{
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x100C394", Offset = "0x100C394", VA = "0x100C394")]
		public ExplorePoolNode()
		{
		}
	}
	[Token(Token = "0x20006DD")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7204C", Offset = "0xE7204C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7204C", Offset = "0xE7204C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7204C", Offset = "0xE7204C")]
	public class StingerNode : CallableActionNode<AudioClip>
	{
		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x32E35E4", Offset = "0x32E35E4", VA = "0x32E35E4", Slot = "12")]
		public override void Invoke(AudioClip clip)
		{
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x32E3644", Offset = "0x32E3644", VA = "0x32E3644")]
		public StingerNode()
		{
		}
	}
	[Token(Token = "0x20006DE")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE720D4", Offset = "0xE720D4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE720D4", Offset = "0xE720D4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE720D4", Offset = "0xE720D4")]
	public class AudioEventNode : CallableActionNode<ZA_AudioEvent, string>
	{
		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x13C07D8", Offset = "0x13C07D8", VA = "0x13C07D8", Slot = "12")]
		public override void Invoke(ZA_AudioEvent AudioEvent, string eventName)
		{
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x13C07F8", Offset = "0x13C07F8", VA = "0x13C07F8")]
		public AudioEventNode()
		{
		}
	}
	[Token(Token = "0x20006DF")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7215C", Offset = "0xE7215C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7215C", Offset = "0xE7215C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7215C", Offset = "0xE7215C")]
	public class AudioLoopStartNode : CallableActionNode<ZA_AudioEvent, string, float>
	{
		[Token(Token = "0x60023B3")]
		[Address(RVA = "0x13C08AC", Offset = "0x13C08AC", VA = "0x13C08AC", Slot = "12")]
		public override void Invoke(ZA_AudioEvent AudioEvent, string eventName, float fadeSpeed)
		{
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x13C08CC", Offset = "0x13C08CC", VA = "0x13C08CC")]
		public AudioLoopStartNode()
		{
		}
	}
	[Token(Token = "0x20006E0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE721E4", Offset = "0xE721E4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE721E4", Offset = "0xE721E4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE721E4", Offset = "0xE721E4")]
	public class AudioLoopEndNode : CallableActionNode<ZA_AudioEvent, float>
	{
		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x13C0844", Offset = "0x13C0844", VA = "0x13C0844", Slot = "12")]
		public override void Invoke(ZA_AudioEvent AudioEvent, float fadeSpeed)
		{
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x13C0860", Offset = "0x13C0860", VA = "0x13C0860")]
		public AudioLoopEndNode()
		{
		}
	}
	[Token(Token = "0x20006E1")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7226C", Offset = "0xE7226C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7226C", Offset = "0xE7226C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7226C", Offset = "0xE7226C")]
	public class AudioMoveNode : CallableActionNode<ZA_AudioEvent>
	{
		[Token(Token = "0x60023B7")]
		[Address(RVA = "0x13C0918", Offset = "0x13C0918", VA = "0x13C0918", Slot = "12")]
		public override void Invoke(ZA_AudioEvent AudioEvent)
		{
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0x13C0934", Offset = "0x13C0934", VA = "0x13C0934")]
		public AudioMoveNode()
		{
		}
	}
	[Token(Token = "0x20006E2")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE722F4", Offset = "0xE722F4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE722F4", Offset = "0xE722F4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE722F4", Offset = "0xE722F4")]
	public class SetSnapshotNode : CallableActionNode<AudioMixerSnapshot, float>
	{
		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x32DBDF4", Offset = "0x32DBDF4", VA = "0x32DBDF4", Slot = "12")]
		public override void Invoke(AudioMixerSnapshot snapshot, float time)
		{
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x32DBE64", Offset = "0x32DBE64", VA = "0x32DBE64")]
		public SetSnapshotNode()
		{
		}
	}
	[Token(Token = "0x20006E3")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7237C", Offset = "0xE7237C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7237C", Offset = "0xE7237C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7237C", Offset = "0xE7237C")]
	public class PlayAllyBark : CallableActionNode<AudioSource, AudioClip, MT_NPCGameplay>
	{
		[Token(Token = "0x60023BB")]
		[Address(RVA = "0x1080530", Offset = "0x1080530", VA = "0x1080530", Slot = "12")]
		public override void Invoke(AudioSource characterSource, AudioClip barkClip, MT_NPCGameplay npcGameplay)
		{
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0x1080700", Offset = "0x1080700", VA = "0x1080700")]
		public PlayAllyBark()
		{
		}
	}
	[Token(Token = "0x20006E4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE72404", Offset = "0xE72404")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE72404", Offset = "0xE72404")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE72404", Offset = "0xE72404")]
	public class CreateClosedCaption : CallableActionNode<string, int>
	{
		[Token(Token = "0x60023BD")]
		[Address(RVA = "0xFFB860", Offset = "0xFFB860", VA = "0xFFB860", Slot = "12")]
		public override void Invoke(string gridlyID, int length)
		{
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0xFFB984", Offset = "0xFFB984", VA = "0xFFB984")]
		public CreateClosedCaption()
		{
		}
	}
	[Token(Token = "0x20006E5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE7248C", Offset = "0xE7248C")]
	public sealed class FootstepsAudioDic : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20006E6")]
		public class Data
		{
			[Token(Token = "0x4001DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FloorMat matType;

			[Token(Token = "0x4001DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioClip[] _heelLightLClips;

			[Token(Token = "0x4001DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioClip[] _toeLightLClips;

			[Token(Token = "0x4001E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip[] _heelLightRClips;

			[Token(Token = "0x4001E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AudioClip[] _toeLightRClips;

			[Token(Token = "0x4001E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip[] _heelHeavyLClips;

			[Token(Token = "0x4001E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public AudioClip[] _toeHeavyLClips;

			[Token(Token = "0x4001E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public AudioClip[] _heelHeavyRClips;

			[Token(Token = "0x4001E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public AudioClip[] _toeHeavyRClips;

			[Token(Token = "0x4001E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public AudioClip[] _slideClips;

			[Token(Token = "0x4001E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public AudioClip[] _stopClips;

			[Token(Token = "0x60023C0")]
			[Address(RVA = "0x1031218", Offset = "0x1031218", VA = "0x1031218")]
			public Data()
			{
			}
		}

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Data[] data;

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0x100E66C", Offset = "0x100E66C", VA = "0x100E66C")]
		public FootstepsAudioDic()
		{
		}
	}
	[Token(Token = "0x20006E7")]
	public static class FootstepsFloorMatManager
	{
		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<GameObject, FloorMat> _matDic;

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0x100E674", Offset = "0x100E674", VA = "0x100E674")]
		public static void Register(ZA_FloorMat matComp)
		{
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0x100E78C", Offset = "0x100E78C", VA = "0x100E78C")]
		public static void Deregister(ZA_FloorMat matComp)
		{
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0x100E8A0", Offset = "0x100E8A0", VA = "0x100E8A0")]
		public static FloorMat GetFloorMatForGameObject(GameObject go)
		{
			return default(FloorMat);
		}
	}
	[Token(Token = "0x20006E8")]
	public static class MT_AmbienceManager
	{
		[Token(Token = "0x20006E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE724D0", Offset = "0xE724D0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float volume;

			[Token(Token = "0x60023C9")]
			[Address(RVA = "0x1035934", Offset = "0x1035934", VA = "0x1035934")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60023CA")]
			[Address(RVA = "0x103593C", Offset = "0x103593C", VA = "0x103593C")]
			internal void <SetVolume>b__0(MT_AmbientEmitter x)
			{
			}
		}

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<MT_AmbientEmitter> _ambientEmitters;

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0x1123360", Offset = "0x1123360", VA = "0x1123360")]
		public static void Register(MT_AmbientEmitter ambientEmitter)
		{
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0x1123444", Offset = "0x1123444", VA = "0x1123444")]
		public static void Deregister(MT_AmbientEmitter ambientEmitter)
		{
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0x1123528", Offset = "0x1123528", VA = "0x1123528")]
		public static void SetVolume(float volume)
		{
		}
	}
	[Token(Token = "0x20006EA")]
	public sealed class MT_AmbientEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource _audioSource;

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0x11236DC", Offset = "0x11236DC", VA = "0x11236DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0x112376C", Offset = "0x112376C", VA = "0x112376C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0x11237CC", Offset = "0x11237CC", VA = "0x11237CC")]
		public void SetVolume(float volume)
		{
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0x11237E8", Offset = "0x11237E8", VA = "0x11237E8")]
		public MT_AmbientEmitter()
		{
		}
	}
	[Token(Token = "0x20006EB")]
	public sealed class MT_PlaySFX : MonoBehaviour
	{
		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _audioClip;

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0x132B86C", Offset = "0x132B86C", VA = "0x132B86C")]
		public void Play()
		{
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0x132B944", Offset = "0x132B944", VA = "0x132B944")]
		public MT_PlaySFX()
		{
		}
	}
	[Token(Token = "0x20006EC")]
	public enum AudioMixerParent
	{
		[Token(Token = "0x4001E0E")]
		MASTER,
		[Token(Token = "0x4001E0F")]
		SFX,
		[Token(Token = "0x4001E10")]
		AMBIENCE,
		[Token(Token = "0x4001E11")]
		DIALOGUE,
		[Token(Token = "0x4001E12")]
		MUSIC
	}
	[Token(Token = "0x20006ED")]
	public class MixerVolumeManager : MonoBehaviour
	{
		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE860F0", Offset = "0xE860F0")]
		private static bool <IsReady>k__BackingField;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _originalMasterVol;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _originalEffectsVol;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _originalMusicVol;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _initialized;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static MixerVolumeManager Instance;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioMixer _masterMixer;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioMixer _ambienceMixer;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioMixer _musicMixer;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioMixer _sfxMixer;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioMixer _dialogueMixer;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE86150", Offset = "0xE86150")]
		private AudioMixer <MasterMixer>k__BackingField;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE86160", Offset = "0xE86160")]
		private AudioMixer <AmbienceMixer>k__BackingField;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE86170", Offset = "0xE86170")]
		private AudioMixer <SFXMixer>k__BackingField;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE86180", Offset = "0xE86180")]
		private AudioMixer <DialogueMixer>k__BackingField;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE86190", Offset = "0xE86190")]
		private AudioMixer <MusicMixer>k__BackingField;

		[Token(Token = "0x170003B8")]
		public static bool IsReady
		{
			[Token(Token = "0x60023D1")]
			[Address(RVA = "0x11423EC", Offset = "0x11423EC", VA = "0x11423EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9664C", Offset = "0xE9664C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023D2")]
			[Address(RVA = "0x1142438", Offset = "0x1142438", VA = "0x1142438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9665C", Offset = "0xE9665C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003B9")]
		public AudioMixer MasterMixer
		{
			[Token(Token = "0x60023D3")]
			[Address(RVA = "0x114248C", Offset = "0x114248C", VA = "0x114248C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9666C", Offset = "0xE9666C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023D4")]
			[Address(RVA = "0x1142494", Offset = "0x1142494", VA = "0x1142494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9667C", Offset = "0xE9667C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003BA")]
		public AudioMixer AmbienceMixer
		{
			[Token(Token = "0x60023D5")]
			[Address(RVA = "0x114249C", Offset = "0x114249C", VA = "0x114249C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9668C", Offset = "0xE9668C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023D6")]
			[Address(RVA = "0x11424A4", Offset = "0x11424A4", VA = "0x11424A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9669C", Offset = "0xE9669C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003BB")]
		public AudioMixer SFXMixer
		{
			[Token(Token = "0x60023D7")]
			[Address(RVA = "0x11424AC", Offset = "0x11424AC", VA = "0x11424AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE966AC", Offset = "0xE966AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023D8")]
			[Address(RVA = "0x11424B4", Offset = "0x11424B4", VA = "0x11424B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE966BC", Offset = "0xE966BC")]
			private set
			{
			}
		}

		[Token(Token = "0x170003BC")]
		public AudioMixer DialogueMixer
		{
			[Token(Token = "0x60023D9")]
			[Address(RVA = "0x11424BC", Offset = "0x11424BC", VA = "0x11424BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE966CC", Offset = "0xE966CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023DA")]
			[Address(RVA = "0x11424C4", Offset = "0x11424C4", VA = "0x11424C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE966DC", Offset = "0xE966DC")]
			private set
			{
			}
		}

		[Token(Token = "0x170003BD")]
		public AudioMixer MusicMixer
		{
			[Token(Token = "0x60023DB")]
			[Address(RVA = "0x11424CC", Offset = "0x11424CC", VA = "0x11424CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE966EC", Offset = "0xE966EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023DC")]
			[Address(RVA = "0x11424D4", Offset = "0x11424D4", VA = "0x11424D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE966FC", Offset = "0xE966FC")]
			private set
			{
			}
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0x11424DC", Offset = "0x11424DC", VA = "0x11424DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0x1142648", Offset = "0x1142648", VA = "0x1142648")]
		private void SetupSceneMixer()
		{
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0x11426B0", Offset = "0x11426B0", VA = "0x11426B0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x114287C", Offset = "0x114287C", VA = "0x114287C")]
		public void SetMixerVolumeScaled(AudioVolumeType type, float volume)
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x1142A10", Offset = "0x1142A10", VA = "0x1142A10")]
		public float GetMixerVolumeScaled(AudioVolumeType type)
		{
			return default(float);
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x114279C", Offset = "0x114279C", VA = "0x114279C")]
		private string GetExposedMixerVariableName(AudioVolumeType type)
		{
			return null;
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x1142964", Offset = "0x1142964", VA = "0x1142964")]
		private float GetOriginalVolume(AudioVolumeType type)
		{
			return default(float);
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x1142B00", Offset = "0x1142B00", VA = "0x1142B00")]
		public AudioMixerGroup ReturnMixerGroup(AudioMixerParent mixerParent, string audioMixerGroupName)
		{
			return null;
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x1142B94", Offset = "0x1142B94", VA = "0x1142B94")]
		public AudioMixer ReturnMixer(AudioMixerParent mixerParent)
		{
			return null;
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x1142BE0", Offset = "0x1142BE0", VA = "0x1142BE0")]
		public MixerVolumeManager()
		{
		}
	}
	[Token(Token = "0x20006EE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE724E0", Offset = "0xE724E0")]
	public sealed class ZA_GenericAudio : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20006EF")]
		public class Generics
		{
			[Token(Token = "0x4001E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GenericAction action;

			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioClip[] clips;

			[Token(Token = "0x60023E8")]
			[Address(RVA = "0x216A1A8", Offset = "0x216A1A8", VA = "0x216A1A8")]
			public Generics()
			{
			}
		}

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Generics[] data;

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x1807EA8", Offset = "0x1807EA8", VA = "0x1807EA8")]
		public ZA_GenericAudio()
		{
		}
	}
	[Token(Token = "0x20006F0")]
	public enum GenericAction
	{
		[Token(Token = "0x4001E27")]
		grab,
		[Token(Token = "0x4001E28")]
		release,
		[Token(Token = "0x4001E29")]
		unset
	}
	[Token(Token = "0x20006F1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE72524", Offset = "0xE72524")]
	public sealed class ZA_PropMaterialDictionary : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20006F2")]
		public class ParentMaterial
		{
			[Token(Token = "0x4001E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PropMatParent propParentMatType;

			[Token(Token = "0x4001E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MaterialSubType[] propSubMaterial;

			[Token(Token = "0x60023EA")]
			[Address(RVA = "0x216C890", Offset = "0x216C890", VA = "0x216C890")]
			public ParentMaterial()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006F3")]
		public class MaterialSubType
		{
			[Token(Token = "0x4001E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PropSubMaterial propSubMatType;

			[Token(Token = "0x4001E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioClip[] clips;

			[Token(Token = "0x60023EB")]
			[Address(RVA = "0x216C888", Offset = "0x216C888", VA = "0x216C888")]
			public MaterialSubType()
			{
			}
		}

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParentMaterial[] parentMaterial;

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x180CF74", Offset = "0x180CF74", VA = "0x180CF74")]
		public ZA_PropMaterialDictionary()
		{
		}
	}
	[Token(Token = "0x20006F4")]
	public static class ZA_PropMaterialManager
	{
		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly HashSet<GameObject> _propReg;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Dictionary<GameObject, PropMatParent> _propMatDic;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Dictionary<GameObject, float> _propWeightDic;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly Dictionary<GameObject, float> _propAbsorptionDic;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly Dictionary<GameObject, string[]> _propNoCollisionDic;

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x180CAAC", Offset = "0x180CAAC", VA = "0x180CAAC")]
		public static void Register(ZA_PropMat prop)
		{
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0x180CD44", Offset = "0x180CD44", VA = "0x180CD44")]
		public static void Deregister(ZA_PropMat prop)
		{
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x180CF7C", Offset = "0x180CF7C", VA = "0x180CF7C")]
		public static PropMatParent GetPropMat(GameObject go)
		{
			return default(PropMatParent);
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x180D064", Offset = "0x180D064", VA = "0x180D064")]
		public static float GetPropWeight(GameObject go)
		{
			return default(float);
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x180D14C", Offset = "0x180D14C", VA = "0x180D14C")]
		public static float GetPropAbsorption(GameObject go)
		{
			return default(float);
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x180D234", Offset = "0x180D234", VA = "0x180D234")]
		public static bool CollisionTagCheck(GameObject go, string tag)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20006F5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE72568", Offset = "0xE72568")]
	public sealed class ZA_CombatAudio : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20006F6")]
		public class CombatAudio
		{
			[Token(Token = "0x4001E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CombatAction action;

			[Token(Token = "0x4001E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioClip[] clips;

			[Token(Token = "0x60023F4")]
			[Address(RVA = "0x2169E9C", Offset = "0x2169E9C", VA = "0x2169E9C")]
			public CombatAudio()
			{
			}
		}

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CombatAudio[] data;

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0x1361F9C", Offset = "0x1361F9C", VA = "0x1361F9C")]
		public ZA_CombatAudio()
		{
		}
	}
	[Token(Token = "0x20006F7")]
	public enum CombatAction
	{
		[Token(Token = "0x4001E38")]
		BulletHit,
		[Token(Token = "0x4001E39")]
		TorsoFall,
		[Token(Token = "0x4001E3A")]
		ArmFall,
		[Token(Token = "0x4001E3B")]
		HeadFall,
		[Token(Token = "0x4001E3C")]
		LegFall,
		[Token(Token = "0x4001E3D")]
		PlayerHit,
		[Token(Token = "0x4001E3E")]
		BulletHitEnvironment,
		[Token(Token = "0x4001E3F")]
		Reload,
		[Token(Token = "0x4001E40")]
		PlayerFireColt,
		[Token(Token = "0x4001E41")]
		PlayerColtIndoor,
		[Token(Token = "0x4001E42")]
		PlayerColtOutdoor,
		[Token(Token = "0x4001E43")]
		EnemyFireColtMid,
		[Token(Token = "0x4001E44")]
		EnemyFireColtFar,
		[Token(Token = "0x4001E45")]
		EnemyColtMidIndoor,
		[Token(Token = "0x4001E46")]
		EnemyColtMidOutdoor,
		[Token(Token = "0x4001E47")]
		EnemyColtFarIndoor,
		[Token(Token = "0x4001E48")]
		EnemyColtFarOutdoor,
		[Token(Token = "0x4001E49")]
		GunHandle,
		[Token(Token = "0x4001E4A")]
		PistolWhip,
		[Token(Token = "0x4001E4B")]
		Punch,
		[Token(Token = "0x4001E4C")]
		Slap,
		[Token(Token = "0x4001E4D")]
		Stab,
		[Token(Token = "0x4001E4E")]
		unset
	}
	[Token(Token = "0x20006F8")]
	public enum CombatEnv
	{
		[Token(Token = "0x4001E50")]
		indoors,
		[Token(Token = "0x4001E51")]
		outdoors
	}
	[Token(Token = "0x20006F9")]
	public sealed class ZA_MusicManager : MonoBehaviour
	{
		[Token(Token = "0x20006FA")]
		private enum MusicState
		{
			[Token(Token = "0x4001E97")]
			EXPLORE,
			[Token(Token = "0x4001E98")]
			NARRATIVE,
			[Token(Token = "0x4001E99")]
			THREAT,
			[Token(Token = "0x4001E9A")]
			COMBAT,
			[Token(Token = "0x4001E9B")]
			DEATH,
			[Token(Token = "0x4001E9C")]
			MENU,
			[Token(Token = "0x4001E9D")]
			LOADING,
			[Token(Token = "0x4001E9E")]
			CREDITS,
			[Token(Token = "0x4001E9F")]
			PAUSED
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20006FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE725AC", Offset = "0xE725AC")]
		private struct <>c__DisplayClass94_0
		{
			[Token(Token = "0x4001EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ZA_MusicManager <>4__this;

			[Token(Token = "0x4001EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int arrayIndex;
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20006FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE725BC", Offset = "0xE725BC")]
		private struct <>c__DisplayClass95_0
		{
			[Token(Token = "0x4001EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ZA_MusicManager <>4__this;

			[Token(Token = "0x4001EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int arrayIndex;
		}

		[Token(Token = "0x20006FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE725CC", Offset = "0xE725CC")]
		private sealed class <EndThreatOnBeat>d__99 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZA_MusicManager <>4__this;

			[Token(Token = "0x4001EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MusicState state;

			[Token(Token = "0x4001EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x170003BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600244F")]
				[Address(RVA = "0x216B7C8", Offset = "0x216B7C8", VA = "0x216B7C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002451")]
				[Address(RVA = "0x216B810", Offset = "0x216B810", VA = "0x216B810", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600244C")]
			[Address(RVA = "0x216B53C", Offset = "0x216B53C", VA = "0x216B53C")]
			[DebuggerHidden]
			public <EndThreatOnBeat>d__99(int <>1__state)
			{
			}

			[Token(Token = "0x600244D")]
			[Address(RVA = "0x216B568", Offset = "0x216B568", VA = "0x216B568", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600244E")]
			[Address(RVA = "0x216B56C", Offset = "0x216B56C", VA = "0x216B56C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002450")]
			[Address(RVA = "0x216B7D0", Offset = "0x216B7D0", VA = "0x216B7D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE725DC", Offset = "0xE725DC")]
		private sealed class <NarrativeOnThreatBeat>d__100 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZA_MusicManager <>4__this;

			[Token(Token = "0x4001EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isLoop;

			[Token(Token = "0x4001EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AudioClip clip;

			[Token(Token = "0x170003C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002455")]
				[Address(RVA = "0x216C04C", Offset = "0x216C04C", VA = "0x216C04C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002457")]
				[Address(RVA = "0x216C094", Offset = "0x216C094", VA = "0x216C094", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002452")]
			[Address(RVA = "0x216BCFC", Offset = "0x216BCFC", VA = "0x216BCFC")]
			[DebuggerHidden]
			public <NarrativeOnThreatBeat>d__100(int <>1__state)
			{
			}

			[Token(Token = "0x6002453")]
			[Address(RVA = "0x216BD28", Offset = "0x216BD28", VA = "0x216BD28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002454")]
			[Address(RVA = "0x216BD2C", Offset = "0x216BD2C", VA = "0x216BD2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002456")]
			[Address(RVA = "0x216C054", Offset = "0x216C054", VA = "0x216C054", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE725EC", Offset = "0xE725EC")]
		private sealed class <DeathOnThreatBeat>d__101 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZA_MusicManager <>4__this;

			[Token(Token = "0x170003C3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600245B")]
				[Address(RVA = "0x216B354", Offset = "0x216B354", VA = "0x216B354", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600245D")]
				[Address(RVA = "0x216B39C", Offset = "0x216B39C", VA = "0x216B39C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002458")]
			[Address(RVA = "0x216B044", Offset = "0x216B044", VA = "0x216B044")]
			[DebuggerHidden]
			public <DeathOnThreatBeat>d__101(int <>1__state)
			{
			}

			[Token(Token = "0x6002459")]
			[Address(RVA = "0x216B070", Offset = "0x216B070", VA = "0x216B070", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600245A")]
			[Address(RVA = "0x216B074", Offset = "0x216B074", VA = "0x216B074", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600245C")]
			[Address(RVA = "0x216B35C", Offset = "0x216B35C", VA = "0x216B35C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE725FC", Offset = "0xE725FC")]
		private sealed class <IntensityBar1DelayCoroutine>d__105 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZA_MusicManager <>4__this;

			[Token(Token = "0x170003C5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002461")]
				[Address(RVA = "0x216B8D4", Offset = "0x216B8D4", VA = "0x216B8D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002463")]
				[Address(RVA = "0x216B91C", Offset = "0x216B91C", VA = "0x216B91C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600245E")]
			[Address(RVA = "0x216B818", Offset = "0x216B818", VA = "0x216B818")]
			[DebuggerHidden]
			public <IntensityBar1DelayCoroutine>d__105(int <>1__state)
			{
			}

			[Token(Token = "0x600245F")]
			[Address(RVA = "0x216B844", Offset = "0x216B844", VA = "0x216B844", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002460")]
			[Address(RVA = "0x216B848", Offset = "0x216B848", VA = "0x216B848", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002462")]
			[Address(RVA = "0x216B8DC", Offset = "0x216B8DC", VA = "0x216B8DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000701")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7260C", Offset = "0xE7260C")]
		private sealed class <NarrativeSwap>d__109 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZA_MusicManager <>4__this;

			[Token(Token = "0x4001EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip newClip;

			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool swapLoop;

			[Token(Token = "0x4001EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			private bool <swapped>5__2;

			[Token(Token = "0x4001EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <currentVol>5__3;

			[Token(Token = "0x4001EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <percent>5__4;

			[Token(Token = "0x170003C7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002467")]
				[Address(RVA = "0x216C290", Offset = "0x216C290", VA = "0x216C290", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002469")]
				[Address(RVA = "0x216C2D8", Offset = "0x216C2D8", VA = "0x216C2D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002464")]
			[Address(RVA = "0x216C09C", Offset = "0x216C09C", VA = "0x216C09C")]
			[DebuggerHidden]
			public <NarrativeSwap>d__109(int <>1__state)
			{
			}

			[Token(Token = "0x6002465")]
			[Address(RVA = "0x216C0C8", Offset = "0x216C0C8", VA = "0x216C0C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002466")]
			[Address(RVA = "0x216C0CC", Offset = "0x216C0CC", VA = "0x216C0CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002468")]
			[Address(RVA = "0x216C298", Offset = "0x216C298", VA = "0x216C298", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000702")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7261C", Offset = "0xE7261C")]
		private sealed class <CueCombatBeat1DelayCoroutine>d__112 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZA_MusicManager <>4__this;

			[Token(Token = "0x170003C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600246D")]
				[Address(RVA = "0x216AC5C", Offset = "0x216AC5C", VA = "0x216AC5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600246F")]
				[Address(RVA = "0x216ACA4", Offset = "0x216ACA4", VA = "0x216ACA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600246A")]
			[Address(RVA = "0x216AA34", Offset = "0x216AA34", VA = "0x216AA34")]
			[DebuggerHidden]
			public <CueCombatBeat1DelayCoroutine>d__112(int <>1__state)
			{
			}

			[Token(Token = "0x600246B")]
			[Address(RVA = "0x216AA60", Offset = "0x216AA60", VA = "0x216AA60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600246C")]
			[Address(RVA = "0x216AA64", Offset = "0x216AA64", VA = "0x216AA64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600246E")]
			[Address(RVA = "0x216AC64", Offset = "0x216AC64", VA = "0x216AC64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000703")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7262C", Offset = "0xE7262C")]
		private struct <>c__DisplayClass115_0
		{
			[Token(Token = "0x4001EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ZA_MusicManager <>4__this;

			[Token(Token = "0x4001EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int arrayIndex;
		}

		[Token(Token = "0x2000704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7263C", Offset = "0xE7263C")]
		private sealed class <NarrativeOnCombatBeat>d__119 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZA_MusicManager <>4__this;

			[Token(Token = "0x4001EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isLoop;

			[Token(Token = "0x4001EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AudioClip clip;

			[Token(Token = "0x170003CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002473")]
				[Address(RVA = "0x216BCAC", Offset = "0x216BCAC", VA = "0x216BCAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002475")]
				[Address(RVA = "0x216BCF4", Offset = "0x216BCF4", VA = "0x216BCF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002470")]
			[Address(RVA = "0x216B924", Offset = "0x216B924", VA = "0x216B924")]
			[DebuggerHidden]
			public <NarrativeOnCombatBeat>d__119(int <>1__state)
			{
			}

			[Token(Token = "0x6002471")]
			[Address(RVA = "0x216B950", Offset = "0x216B950", VA = "0x216B950", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002472")]
			[Address(RVA = "0x216B954", Offset = "0x216B954", VA = "0x216B954", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002474")]
			[Address(RVA = "0x216BCB4", Offset = "0x216BCB4", VA = "0x216BCB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000705")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7264C", Offset = "0xE7264C")]
		private sealed class <DeathOnCombatBeat>d__120 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZA_MusicManager <>4__this;

			[Token(Token = "0x170003CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002479")]
				[Address(RVA = "0x216AFF4", Offset = "0x216AFF4", VA = "0x216AFF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600247B")]
				[Address(RVA = "0x216B03C", Offset = "0x216B03C", VA = "0x216B03C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002476")]
			[Address(RVA = "0x216ACAC", Offset = "0x216ACAC", VA = "0x216ACAC")]
			[DebuggerHidden]
			public <DeathOnCombatBeat>d__120(int <>1__state)
			{
			}

			[Token(Token = "0x6002477")]
			[Address(RVA = "0x216ACD8", Offset = "0x216ACD8", VA = "0x216ACD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002478")]
			[Address(RVA = "0x216ACDC", Offset = "0x216ACDC", VA = "0x216ACDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600247A")]
			[Address(RVA = "0x216AFFC", Offset = "0x216AFFC", VA = "0x216AFFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000706")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7265C", Offset = "0xE7265C")]
		private sealed class <CombatEndRoutine>d__121 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZA_MusicManager <>4__this;

			[Token(Token = "0x4001ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MusicState stateID;

			[Token(Token = "0x4001ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AudioClip <endClip>5__2;

			[Token(Token = "0x4001ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endClipLength>5__3;

			[Token(Token = "0x170003CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600247F")]
				[Address(RVA = "0x216A9E4", Offset = "0x216A9E4", VA = "0x216A9E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002481")]
				[Address(RVA = "0x216AA2C", Offset = "0x216AA2C", VA = "0x216AA2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600247C")]
			[Address(RVA = "0x216A5E0", Offset = "0x216A5E0", VA = "0x216A5E0")]
			[DebuggerHidden]
			public <CombatEndRoutine>d__121(int <>1__state)
			{
			}

			[Token(Token = "0x600247D")]
			[Address(RVA = "0x216A60C", Offset = "0x216A60C", VA = "0x216A60C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600247E")]
			[Address(RVA = "0x216A610", Offset = "0x216A610", VA = "0x216A610", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002480")]
			[Address(RVA = "0x216A9EC", Offset = "0x216A9EC", VA = "0x216A9EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000707")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7266C", Offset = "0xE7266C")]
		private sealed class <StartStateCoroutine>d__134 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float fadeTime;

			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioSource audioSource;

			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <percent>5__2;

			[Token(Token = "0x170003D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002485")]
				[Address(RVA = "0x216C3DC", Offset = "0x216C3DC", VA = "0x216C3DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002487")]
				[Address(RVA = "0x216C424", Offset = "0x216C424", VA = "0x216C424", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002482")]
			[Address(RVA = "0x216C2E0", Offset = "0x216C2E0", VA = "0x216C2E0")]
			[DebuggerHidden]
			public <StartStateCoroutine>d__134(int <>1__state)
			{
			}

			[Token(Token = "0x6002483")]
			[Address(RVA = "0x216C30C", Offset = "0x216C30C", VA = "0x216C30C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002484")]
			[Address(RVA = "0x216C310", Offset = "0x216C310", VA = "0x216C310", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002486")]
			[Address(RVA = "0x216C3E4", Offset = "0x216C3E4", VA = "0x216C3E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7267C", Offset = "0xE7267C")]
		private sealed class <EndStateCoroutine>d__135 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioSource audioSource;

			[Token(Token = "0x4001ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float fadeTime;

			[Token(Token = "0x4001ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <percent>5__2;

			[Token(Token = "0x4001ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <currentVol>5__3;

			[Token(Token = "0x170003D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600248B")]
				[Address(RVA = "0x216B4EC", Offset = "0x216B4EC", VA = "0x216B4EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600248D")]
				[Address(RVA = "0x216B534", Offset = "0x216B534", VA = "0x216B534", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002488")]
			[Address(RVA = "0x216B3A4", Offset = "0x216B3A4", VA = "0x216B3A4")]
			[DebuggerHidden]
			public <EndStateCoroutine>d__135(int <>1__state)
			{
			}

			[Token(Token = "0x6002489")]
			[Address(RVA = "0x216B3D0", Offset = "0x216B3D0", VA = "0x216B3D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600248A")]
			[Address(RVA = "0x216B3D4", Offset = "0x216B3D4", VA = "0x216B3D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600248C")]
			[Address(RVA = "0x216B4F4", Offset = "0x216B4F4", VA = "0x216B4F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE861A0", Offset = "0xE861A0")]
		private static bool <IsReady>k__BackingField;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE861B0", Offset = "0xE861B0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE861B0", Offset = "0xE861B0")]
		private bool _cueMeasure;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _cueBar;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool _firstBar;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		private bool _loadedClip;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ZA_Metronome metronome;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int beatCount;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _currentBeatGrouping;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _barCount;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _currentBarLength;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MusicState _currentState;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private MusicState _toState;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MusicState _stateBeforePause;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _currentIntensity;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool _isCounting;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE8621C", Offset = "0xE8621C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE8621C", Offset = "0xE8621C")]
		public AudioClip[] exploreClips;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioSource exploreSource;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _explorePoolCountPrevious;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _exploreCountdown;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE86278", Offset = "0xE86278")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE86278", Offset = "0xE86278")]
		private bool _narrativeIsPlaying;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioSource narrativeSource;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioSource rrhSource;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _swappingNarrative;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE862E4", Offset = "0xE862E4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE862E4", Offset = "0xE862E4")]
		public AudioClip[] threatClips;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip[] threatIntensityClips;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource[] threatSources;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioSource threatBridge;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int _threatSourceTrack;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioMixerGroup threatMixer;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool _changeTransitionCue;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE86370", Offset = "0xE86370")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE86370", Offset = "0xE86370")]
		[SerializeField]
		private AudioSource[] combatSources;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private AudioClip[] combat1IntroClips;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private AudioClip[] combat1MainClips;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private AudioClip[] combat1OutClips;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private AudioClip[] combat2IntroClips;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private AudioClip[] combat2MainClips;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private AudioClip[] combat2OutClips;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private AudioSource combatBridge;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private AudioClip[] combatBridgeClips;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private AudioClip endCombatSting;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private int setCombatBank;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int _combatSourceTrack;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool _isCombatIntro;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		private bool _endCombatBool;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
		private bool _endCombatReady;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
		private bool _cueCombat;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int _combatLoopBarLength;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int _changeCombatLoopBarLengthTo;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private AudioMixerGroup combatMixer;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE8647C", Offset = "0xE8647C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE8647C", Offset = "0xE8647C")]
		[SerializeField]
		private AudioSource stinger;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private AudioMixerGroup stingMixer;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE864E8", Offset = "0xE864E8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE864E8", Offset = "0xE864E8")]
		public AudioClip deathClip;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private AudioSource deathSource;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE86544", Offset = "0xE86544")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE86544", Offset = "0xE86544")]
		public AudioMixer mainMixer;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private AudioSource uiSource;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private AudioClip pauseClip;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private AudioClip unpauseClip;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private AudioClip[] collectableClip;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private AudioClip[] thoughtClip;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private AudioSource mainMenuSource;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private AudioSource loadingSource;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private AudioMixerSnapshot loadingSnapshot;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private AudioClip[] loadingClips;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private AudioSource creditsSource;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private AudioMixerSnapshot pausedSnapshot;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public AudioMixerSnapshot snapshotBeforePause;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE86640", Offset = "0xE86640")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE86640", Offset = "0xE86640")]
		[SerializeField]
		private bool playOnAwake;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ZA_MusicManager Instance;

		[Token(Token = "0x170003BE")]
		public static bool IsReady
		{
			[Token(Token = "0x60023F5")]
			[Address(RVA = "0x1808808", Offset = "0x1808808", VA = "0x1808808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9670C", Offset = "0xE9670C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023F6")]
			[Address(RVA = "0x1808854", Offset = "0x1808854", VA = "0x1808854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9671C", Offset = "0xE9671C")]
			private set
			{
			}
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x18088A8", Offset = "0x18088A8", VA = "0x18088A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x1808A0C", Offset = "0x1808A0C", VA = "0x1808A0C")]
		public void InitializeMusic()
		{
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x1808B70", Offset = "0x1808B70", VA = "0x1808B70")]
		private void Update()
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x1808DAC", Offset = "0x1808DAC", VA = "0x1808DAC")]
		private void SetState(MusicState state)
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x180A198", Offset = "0x180A198", VA = "0x180A198")]
		public void SetExplore()
		{
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0x180A1A0", Offset = "0x180A1A0", VA = "0x180A1A0")]
		public void SetNarrative()
		{
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0x180A1A8", Offset = "0x180A1A8", VA = "0x180A1A8")]
		public void SetThreat()
		{
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0x180A1B0", Offset = "0x180A1B0", VA = "0x180A1B0")]
		public void SetCombat(int combatBank)
		{
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0x180A1C8", Offset = "0x180A1C8", VA = "0x180A1C8")]
		public void EndState()
		{
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0x180A1DC", Offset = "0x180A1DC", VA = "0x180A1DC")]
		public void SetDeath()
		{
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0x180A38C", Offset = "0x180A38C", VA = "0x180A38C")]
		public void SetMenu()
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x180A3F0", Offset = "0x180A3F0", VA = "0x180A3F0")]
		public void SetLoading()
		{
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0x180A48C", Offset = "0x180A48C", VA = "0x180A48C")]
		public void SetCredits()
		{
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0x180A4D8", Offset = "0x180A4D8", VA = "0x180A4D8")]
		public void NewScene()
		{
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0x180A5AC", Offset = "0x180A5AC", VA = "0x180A5AC")]
		private void StartCount(int barLength, int tempo)
		{
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0x18096C4", Offset = "0x18096C4", VA = "0x18096C4")]
		private void CheckCount()
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0x18084C8", Offset = "0x18084C8", VA = "0x18084C8")]
		public void AddBeatCount()
		{
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0x180AB38", Offset = "0x180AB38", VA = "0x180AB38")]
		public void StartTrack(AudioClip clip)
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0x180AB90", Offset = "0x180AB90", VA = "0x180AB90")]
		public void PoolExploreTracks(AudioClip[] clips)
		{
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0x18099D4", Offset = "0x18099D4", VA = "0x18099D4")]
		private void StartExplore()
		{
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0x1808CA8", Offset = "0x1808CA8", VA = "0x1808CA8")]
		private void PlayExplore()
		{
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0x1809BE4", Offset = "0x1809BE4", VA = "0x1809BE4")]
		private void EndExplore(float fadeTime)
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0x1809C3C", Offset = "0x1809C3C", VA = "0x1809C3C")]
		private void StartThreat()
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0x180A5F4", Offset = "0x180A5F4", VA = "0x180A5F4")]
		private void LoadNextThreat()
		{
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0x180A84C", Offset = "0x180A84C", VA = "0x180A84C")]
		private void PlayCuedThreat()
		{
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0x180AA54", Offset = "0x180AA54", VA = "0x180AA54")]
		private void PlayBridgeThreat()
		{
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0x1809A10", Offset = "0x1809A10", VA = "0x1809A10")]
		private void EndThreat(MusicState stateID)
		{
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0x180ACC8", Offset = "0x180ACC8", VA = "0x180ACC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9672C", Offset = "0xE9672C")]
		private IEnumerator EndThreatOnBeat(MusicState state, float fadeTime)
		{
			return null;
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0x180AD60", Offset = "0x180AD60", VA = "0x180AD60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9678C", Offset = "0xE9678C")]
		private IEnumerator NarrativeOnThreatBeat(AudioClip clip, bool isLoop)
		{
			return null;
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0x180A2C0", Offset = "0x180A2C0", VA = "0x180A2C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE967EC", Offset = "0xE967EC")]
		private IEnumerator DeathOnThreatBeat()
		{
			return null;
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0x180AE00", Offset = "0x180AE00", VA = "0x180AE00")]
		public void IncreaseIntensity()
		{
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x180AEF4", Offset = "0x180AEF4", VA = "0x180AEF4")]
		public void DecreaseIntensity()
		{
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0x180AAD4", Offset = "0x180AAD4", VA = "0x180AAD4")]
		public void ChangeIntensityPlay()
		{
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x180AE7C", Offset = "0x180AE7C", VA = "0x180AE7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9684C", Offset = "0xE9684C")]
		private IEnumerator IntensityBar1DelayCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0x180B028", Offset = "0x180B028", VA = "0x180B028")]
		public void PlayNarrative(AudioClip clip)
		{
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0x180B28C", Offset = "0x180B28C", VA = "0x180B28C")]
		public void PlayNarrativeLoop(AudioClip clip)
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0x180B3B0", Offset = "0x180B3B0", VA = "0x180B3B0")]
		public void PlayNarrativeLoop(AudioClip clip, float tempo)
		{
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x180B1EC", Offset = "0x180B1EC", VA = "0x180B1EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE968AC", Offset = "0xE968AC")]
		private IEnumerator NarrativeSwap(bool swapLoop, AudioClip newClip)
		{
			return null;
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0x180999C", Offset = "0x180999C", VA = "0x180999C")]
		public void EndNarrative(float fadeTime)
		{
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0x1809F40", Offset = "0x1809F40", VA = "0x1809F40")]
		private void StartCombat()
		{
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0x180B4D4", Offset = "0x180B4D4", VA = "0x180B4D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9690C", Offset = "0xE9690C")]
		private IEnumerator CueCombatBeat1DelayCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0x180946C", Offset = "0x180946C", VA = "0x180946C")]
		private void LoadFirstCombat()
		{
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0x180962C", Offset = "0x180962C", VA = "0x180962C")]
		private void PlayFirstCombat()
		{
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0x180A6D0", Offset = "0x180A6D0", VA = "0x180A6D0")]
		private void LoadNextCombat()
		{
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0x180A91C", Offset = "0x180A91C", VA = "0x180A91C")]
		private void PlayCuedCombat()
		{
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0x1809E90", Offset = "0x1809E90", VA = "0x1809E90")]
		private void PlayBridgeCombat()
		{
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x1809A54", Offset = "0x1809A54", VA = "0x1809A54")]
		private void EndCombat(MusicState stateID)
		{
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0x180B14C", Offset = "0x180B14C", VA = "0x180B14C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9696C", Offset = "0xE9696C")]
		private IEnumerator NarrativeOnCombatBeat(AudioClip clip, bool isLoop)
		{
			return null;
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x180A248", Offset = "0x180A248", VA = "0x180A248")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE969CC", Offset = "0xE969CC")]
		private IEnumerator DeathOnCombatBeat()
		{
			return null;
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x180B59C", Offset = "0x180B59C", VA = "0x180B59C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE96A2C", Offset = "0xE96A2C")]
		private IEnumerator CombatEndRoutine(MusicState stateID)
		{
			return null;
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x180A338", Offset = "0x180A338", VA = "0x180A338")]
		public void DeathSting()
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x1809B3C", Offset = "0x1809B3C", VA = "0x1809B3C")]
		public void EndDeath()
		{
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x1809B48", Offset = "0x1809B48", VA = "0x1809B48")]
		public void EndMenu()
		{
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0x1809B7C", Offset = "0x1809B7C", VA = "0x1809B7C")]
		public void EndLoad()
		{
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0x1809BB0", Offset = "0x1809BB0", VA = "0x1809BB0")]
		public void EndCredits()
		{
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0x180A120", Offset = "0x180A120", VA = "0x180A120")]
		public void PauseMusic()
		{
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0x180B624", Offset = "0x180B624", VA = "0x180B624")]
		public void UnpauseMusic()
		{
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x180B69C", Offset = "0x180B69C", VA = "0x180B69C")]
		public void PlayCollectableSting()
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0x180B704", Offset = "0x180B704", VA = "0x180B704")]
		public void PlaySammiesThoughts()
		{
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0x180B774", Offset = "0x180B774", VA = "0x180B774")]
		public void PlaySting(AudioClip stingClip)
		{
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x180AF5C", Offset = "0x180AF5C", VA = "0x180AF5C")]
		public void PlaySting(AudioClip stingClip, AudioMixerGroup mixer)
		{
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0x180B83C", Offset = "0x180B83C", VA = "0x180B83C")]
		public void PlayRRH()
		{
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0x180AB98", Offset = "0x180AB98", VA = "0x180AB98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE96A8C", Offset = "0xE96A8C")]
		private IEnumerator StartStateCoroutine(AudioSource audioSource, float fadeTime)
		{
			return null;
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x1809914", Offset = "0x1809914", VA = "0x1809914")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE96AEC", Offset = "0xE96AEC")]
		private IEnumerator EndStateCoroutine(AudioSource audioSource, float fadeTime)
		{
			return null;
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0x180B858", Offset = "0x180B858", VA = "0x180B858")]
		public void ResetData()
		{
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0x180B88C", Offset = "0x180B88C", VA = "0x180B88C")]
		public ZA_MusicManager()
		{
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x180AC20", Offset = "0x180AC20", VA = "0x180AC20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96B4C", Offset = "0xE96B4C")]
		private int <StartThreat>g__arrayIndexByIntensity|94_0(ref <>c__DisplayClass94_0 P_0)
		{
			return default(int);
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x180AC74", Offset = "0x180AC74", VA = "0x180AC74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96B5C", Offset = "0xE96B5C")]
		private int <LoadNextThreat>g__arrayIndexByIntensity|95_0(ref <>c__DisplayClass95_0 P_0)
		{
			return default(int);
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0x180B89C", Offset = "0x180B89C", VA = "0x180B89C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96B6C", Offset = "0xE96B6C")]
		private bool <EndThreatOnBeat>b__99_0()
		{
			return default(bool);
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x180B8AC", Offset = "0x180B8AC", VA = "0x180B8AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96B7C", Offset = "0xE96B7C")]
		private bool <EndThreatOnBeat>b__99_1()
		{
			return default(bool);
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x180B8BC", Offset = "0x180B8BC", VA = "0x180B8BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96B8C", Offset = "0xE96B8C")]
		private bool <NarrativeOnThreatBeat>b__100_0()
		{
			return default(bool);
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x180B8CC", Offset = "0x180B8CC", VA = "0x180B8CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96B9C", Offset = "0xE96B9C")]
		private bool <NarrativeOnThreatBeat>b__100_1()
		{
			return default(bool);
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x180B8DC", Offset = "0x180B8DC", VA = "0x180B8DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96BAC", Offset = "0xE96BAC")]
		private bool <NarrativeOnThreatBeat>b__100_2()
		{
			return default(bool);
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x180B8EC", Offset = "0x180B8EC", VA = "0x180B8EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96BBC", Offset = "0xE96BBC")]
		private bool <DeathOnThreatBeat>b__101_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0x180B8FC", Offset = "0x180B8FC", VA = "0x180B8FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96BCC", Offset = "0xE96BCC")]
		private bool <DeathOnThreatBeat>b__101_1()
		{
			return default(bool);
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0x180B90C", Offset = "0x180B90C", VA = "0x180B90C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96BDC", Offset = "0xE96BDC")]
		private bool <DeathOnThreatBeat>b__101_2()
		{
			return default(bool);
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x180B54C", Offset = "0x180B54C", VA = "0x180B54C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96BEC", Offset = "0xE96BEC")]
		private int <LoadNextCombat>g__arrayIndexByCombatBank|115_0(ref <>c__DisplayClass115_0 P_0)
		{
			return default(int);
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x180B91C", Offset = "0x180B91C", VA = "0x180B91C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96BFC", Offset = "0xE96BFC")]
		private bool <NarrativeOnCombatBeat>b__119_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x180B92C", Offset = "0x180B92C", VA = "0x180B92C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96C0C", Offset = "0xE96C0C")]
		private bool <NarrativeOnCombatBeat>b__119_1()
		{
			return default(bool);
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x180B93C", Offset = "0x180B93C", VA = "0x180B93C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96C1C", Offset = "0xE96C1C")]
		private bool <NarrativeOnCombatBeat>b__119_2()
		{
			return default(bool);
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x180B94C", Offset = "0x180B94C", VA = "0x180B94C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96C2C", Offset = "0xE96C2C")]
		private bool <DeathOnCombatBeat>b__120_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x180B95C", Offset = "0x180B95C", VA = "0x180B95C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96C3C", Offset = "0xE96C3C")]
		private bool <DeathOnCombatBeat>b__120_1()
		{
			return default(bool);
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x180B96C", Offset = "0x180B96C", VA = "0x180B96C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96C4C", Offset = "0xE96C4C")]
		private bool <DeathOnCombatBeat>b__120_2()
		{
			return default(bool);
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x180B97C", Offset = "0x180B97C", VA = "0x180B97C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96C5C", Offset = "0xE96C5C")]
		private bool <CombatEndRoutine>b__121_0()
		{
			return default(bool);
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x180B98C", Offset = "0x180B98C", VA = "0x180B98C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96C6C", Offset = "0xE96C6C")]
		private bool <CombatEndRoutine>b__121_1()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000709")]
	public class ZA_UISFXManager : MonoBehaviour
	{
		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8669C", Offset = "0xE8669C")]
		private static bool <IsReady>k__BackingField;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ZA_AudioEvent audioEvent;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource liveAudioDialogue;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource liveAudioEffect;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource mainSource;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ZA_UISFXManager Instance;

		[Token(Token = "0x170003D5")]
		public static bool IsReady
		{
			[Token(Token = "0x600248E")]
			[Address(RVA = "0x180F46C", Offset = "0x180F46C", VA = "0x180F46C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96FEC", Offset = "0xE96FEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600248F")]
			[Address(RVA = "0x180F4B8", Offset = "0x180F4B8", VA = "0x180F4B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE96FFC", Offset = "0xE96FFC")]
			private set
			{
			}
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0x180F50C", Offset = "0x180F50C", VA = "0x180F50C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0x180F670", Offset = "0x180F670", VA = "0x180F670")]
		public void InitializeUISFX()
		{
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0x180F7C8", Offset = "0x180F7C8", VA = "0x180F7C8")]
		public void PlaySFX(string eventName)
		{
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0x180F7E4", Offset = "0x180F7E4", VA = "0x180F7E4")]
		public void StartLiveDialogue()
		{
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0x180F800", Offset = "0x180F800", VA = "0x180F800")]
		public void StopLiveDialogue()
		{
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0x180F81C", Offset = "0x180F81C", VA = "0x180F81C")]
		public void StartLiveEffect()
		{
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0x180F838", Offset = "0x180F838", VA = "0x180F838")]
		public void StopLiveEffect()
		{
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0x180F854", Offset = "0x180F854", VA = "0x180F854")]
		public ZA_UISFXManager()
		{
		}
	}
	[Token(Token = "0x200070A")]
	public enum AudioVolumeType
	{
		[Token(Token = "0x4001EE1")]
		Master,
		[Token(Token = "0x4001EE2")]
		Effects,
		[Token(Token = "0x4001EE3")]
		Music
	}
}
namespace MazeTheory.Characters
{
	[Token(Token = "0x200070B")]
	public sealed class PlayCharacterAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimancerComponent animancer;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationClip clip;

		[Token(Token = "0x6002498")]
		[Address(RVA = "0x1080B14", Offset = "0x1080B14", VA = "0x1080B14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0x1080B38", Offset = "0x1080B38", VA = "0x1080B38")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0x1080B5C", Offset = "0x1080B5C", VA = "0x1080B5C")]
		public PlayCharacterAnimation()
		{
		}
	}
	[Token(Token = "0x200070C")]
	public sealed class BackgroundCharacterMover : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200070D")]
		private class WaypointData
		{
			[Token(Token = "0x4001EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float WaitTime;

			[Token(Token = "0x4001EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform Target;

			[Token(Token = "0x4001EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float Distance;

			[Token(Token = "0x600249D")]
			[Address(RVA = "0x169E9CC", Offset = "0x169E9CC", VA = "0x169E9CC")]
			public WaypointData()
			{
			}
		}

		[Token(Token = "0x200070E")]
		private enum State
		{
			[Token(Token = "0x4001EF0")]
			Moving,
			[Token(Token = "0x4001EF1")]
			Waiting
		}

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WaypointData[] waypoints;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform visuals;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _timer;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _currentIndex;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State _currentState;

		[Token(Token = "0x600249B")]
		[Address(RVA = "0x13C2758", Offset = "0x13C2758", VA = "0x13C2758")]
		private void Update()
		{
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0x13C2960", Offset = "0x13C2960", VA = "0x13C2960")]
		public BackgroundCharacterMover()
		{
		}
	}
}
namespace MazeTheory.Characters.VFX
{
	[Token(Token = "0x200070F")]
	public class NonCombatBloodVFX : MonoBehaviour
	{
		[Token(Token = "0x600249E")]
		[Address(RVA = "0x1077D9C", Offset = "0x1077D9C", VA = "0x1077D9C")]
		public void OnShot(ParticleSystem bloodVFX, RaycastHit hit)
		{
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0x1077FB4", Offset = "0x1077FB4", VA = "0x1077FB4")]
		public NonCombatBloodVFX()
		{
		}
	}
}
namespace MazeTheory.Characters.IK
{
	[Token(Token = "0x2000710")]
	public class SecondHandOnGun : MonoBehaviour
	{
		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NPCMovementController movementController;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_LookAtIK lookAtIK;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion _leftHandRotationRelative;

		[Token(Token = "0x170003D6")]
		private IKEffector LeftHand
		{
			[Token(Token = "0x60024A0")]
			[Address(RVA = "0x32D7BB0", Offset = "0x32D7BB0", VA = "0x32D7BB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D7")]
		private IKEffector RightHand
		{
			[Token(Token = "0x60024A1")]
			[Address(RVA = "0x32D7BD8", Offset = "0x32D7BD8", VA = "0x32D7BD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x32D7C00", Offset = "0x32D7C00", VA = "0x32D7C00")]
		private void Start()
		{
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0x32D7D00", Offset = "0x32D7D00", VA = "0x32D7D00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x32D7D80", Offset = "0x32D7D80", VA = "0x32D7D80")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x32D7F74", Offset = "0x32D7F74", VA = "0x32D7F74")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x32D7FD8", Offset = "0x32D7FD8", VA = "0x32D7FD8")]
		public SecondHandOnGun()
		{
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x32D7FE0", Offset = "0x32D7FE0", VA = "0x32D7FE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9700C", Offset = "0xE9700C")]
		private void <OnEnable>b__9_0()
		{
		}
	}
}
namespace MazeTheory.VisualScripting
{
	[Token(Token = "0x2000711")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7268C", Offset = "0xE7268C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7268C", Offset = "0xE7268C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7268C", Offset = "0xE7268C")]
	public sealed class WaitForAnimationClipNode : LatentActionNode<AnimationClip>
	{
		[Token(Token = "0x2000712")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE72714", Offset = "0xE72714")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationClip clip;

			[Token(Token = "0x170003D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024AD")]
				[Address(RVA = "0x2167A20", Offset = "0x2167A20", VA = "0x2167A20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024AF")]
				[Address(RVA = "0x2167A68", Offset = "0x2167A68", VA = "0x2167A68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024AA")]
			[Address(RVA = "0x2167978", Offset = "0x2167978", VA = "0x2167978")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60024AB")]
			[Address(RVA = "0x21679A4", Offset = "0x21679A4", VA = "0x21679A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024AC")]
			[Address(RVA = "0x21679A8", Offset = "0x21679A8", VA = "0x21679A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024AE")]
			[Address(RVA = "0x2167A28", Offset = "0x2167A28", VA = "0x2167A28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x135C458", Offset = "0x135C458", VA = "0x135C458", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9701C", Offset = "0xE9701C")]
		public override IEnumerator Invoke(AnimationClip clip)
		{
			return null;
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x135C4D0", Offset = "0x135C4D0", VA = "0x135C4D0")]
		public WaitForAnimationClipNode()
		{
		}
	}
	[Token(Token = "0x2000713")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE72724", Offset = "0xE72724")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE72724", Offset = "0xE72724")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE72724", Offset = "0xE72724")]
	public sealed class WaitForCurrentAnimStateToEndNode : LatentActionNode<HybridAnimancerComponent>
	{
		[Token(Token = "0x2000714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE727AC", Offset = "0xE727AC")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HybridAnimancerComponent animator;

			[Token(Token = "0x60024B2")]
			[Address(RVA = "0x2167A70", Offset = "0x2167A70", VA = "0x2167A70")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60024B3")]
			[Address(RVA = "0x2167A78", Offset = "0x2167A78", VA = "0x2167A78")]
			internal bool <Invoke>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000715")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE727BC", Offset = "0xE727BC")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HybridAnimancerComponent animator;

			[Token(Token = "0x4001EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass0_0 <>8__1;

			[Token(Token = "0x170003DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024B7")]
				[Address(RVA = "0x2167C70", Offset = "0x2167C70", VA = "0x2167C70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024B9")]
				[Address(RVA = "0x2167CB8", Offset = "0x2167CB8", VA = "0x2167CB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024B4")]
			[Address(RVA = "0x2167AE4", Offset = "0x2167AE4", VA = "0x2167AE4")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60024B5")]
			[Address(RVA = "0x2167B10", Offset = "0x2167B10", VA = "0x2167B10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024B6")]
			[Address(RVA = "0x2167B14", Offset = "0x2167B14", VA = "0x2167B14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024B8")]
			[Address(RVA = "0x2167C78", Offset = "0x2167C78", VA = "0x2167C78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x135C51C", Offset = "0x135C51C", VA = "0x135C51C", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE970CC", Offset = "0xE970CC")]
		public override IEnumerator Invoke(HybridAnimancerComponent animator)
		{
			return null;
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x135C594", Offset = "0x135C594", VA = "0x135C594")]
		public WaitForCurrentAnimStateToEndNode()
		{
		}
	}
	[Token(Token = "0x2000716")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE727CC", Offset = "0xE727CC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE727CC", Offset = "0xE727CC")]
	public sealed class PlayAnimationNode : CallableActionNode<UnityEngine.Animation>
	{
		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x1080838", Offset = "0x1080838", VA = "0x1080838", Slot = "12")]
		public override void Invoke(UnityEngine.Animation anim)
		{
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x1080854", Offset = "0x1080854", VA = "0x1080854")]
		public PlayAnimationNode()
		{
		}
	}
	[Token(Token = "0x2000717")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE72830", Offset = "0xE72830")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE72830", Offset = "0xE72830")]
	public sealed class PlayAnimationWithNameNode : CallableActionNode<UnityEngine.Animation, string>
	{
		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x10808A0", Offset = "0x10808A0", VA = "0x10808A0", Slot = "12")]
		public override void Invoke(UnityEngine.Animation anim, string name)
		{
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x10809F0", Offset = "0x10809F0", VA = "0x10809F0")]
		public PlayAnimationWithNameNode()
		{
		}
	}
	[Token(Token = "0x2000718")]
	public sealed class CallFlowScriptFunctionFromAnimationEvent : MonoBehaviour
	{
		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FlowScriptController flowScriptController;

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0x12055C4", Offset = "0x12055C4", VA = "0x12055C4")]
		public void SetFlowScriptController(FlowScriptController controller)
		{
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0x12055CC", Offset = "0x12055CC", VA = "0x12055CC")]
		public void CallFunction(string name)
		{
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0x1205730", Offset = "0x1205730", VA = "0x1205730")]
		public CallFlowScriptFunctionFromAnimationEvent()
		{
		}
	}
	[Token(Token = "0x2000719")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE72894", Offset = "0xE72894")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE72894", Offset = "0xE72894")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE72894", Offset = "0xE72894")]
	public sealed class TriggerCreatureNodes : CallableActionNode<CreatureController>
	{
		[Token(Token = "0x60024C1")]
		[Address(RVA = "0x1353348", Offset = "0x1353348", VA = "0x1353348", Slot = "12")]
		public override void Invoke(CreatureController c)
		{
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0x1353364", Offset = "0x1353364", VA = "0x1353364")]
		public TriggerCreatureNodes()
		{
		}
	}
	[Token(Token = "0x200071A")]
	public sealed class BlackboardBoolSetter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200071B")]
		private class KVData
		{
			[Token(Token = "0x4001F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Key;

			[Token(Token = "0x4001F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool Value;

			[Token(Token = "0x60024C6")]
			[Address(RVA = "0x169E9E0", Offset = "0x169E9E0", VA = "0x169E9E0")]
			public KVData()
			{
			}
		}

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Blackboard blackboard;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private KVData[] data;

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0x13C2ED4", Offset = "0x13C2ED4", VA = "0x13C2ED4")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE9717C", Offset = "0xE9717C")]
		public void Set()
		{
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0x13C2FE4", Offset = "0x13C2FE4", VA = "0x13C2FE4")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE971F4", Offset = "0xE971F4")]
		public void SetBoolFromList(int boolOrd)
		{
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0x13C30D0", Offset = "0x13C30D0", VA = "0x13C30D0")]
		public BlackboardBoolSetter()
		{
		}
	}
	[Token(Token = "0x200071C")]
	public sealed class BlackboardFloatSetter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200071D")]
		private class KVData
		{
			[Token(Token = "0x4001F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Key;

			[Token(Token = "0x4001F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float Value;

			[Token(Token = "0x60024C9")]
			[Address(RVA = "0x169E9E8", Offset = "0x169E9E8", VA = "0x169E9E8")]
			public KVData()
			{
			}
		}

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Blackboard blackboard;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private KVData[] data;

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0x13C30D8", Offset = "0x13C30D8", VA = "0x13C30D8")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE9726C", Offset = "0xE9726C")]
		public void Set()
		{
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0x13C31E8", Offset = "0x13C31E8", VA = "0x13C31E8")]
		public BlackboardFloatSetter()
		{
		}
	}
	[Token(Token = "0x200071E")]
	public sealed class BlackboardIntSetter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200071F")]
		private class KVData
		{
			[Token(Token = "0x4001F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Key;

			[Token(Token = "0x4001F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int Value;

			[Token(Token = "0x60024CD")]
			[Address(RVA = "0x169E9F0", Offset = "0x169E9F0", VA = "0x169E9F0")]
			public KVData()
			{
			}
		}

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Blackboard blackboard;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private KVData[] data;

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0x13C31F0", Offset = "0x13C31F0", VA = "0x13C31F0")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE972E4", Offset = "0xE972E4")]
		public void Set()
		{
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0x13C3300", Offset = "0x13C3300", VA = "0x13C3300")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE9735C", Offset = "0xE9735C")]
		public void SetIntFromList(int intIndex)
		{
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0x13C33EC", Offset = "0x13C33EC", VA = "0x13C33EC")]
		public BlackboardIntSetter()
		{
		}
	}
	[Token(Token = "0x2000720")]
	public sealed class BlackboardStringSetter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000721")]
		private class KVData
		{
			[Token(Token = "0x4001F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Key;

			[Token(Token = "0x4001F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string Value;

			[Token(Token = "0x60024D0")]
			[Address(RVA = "0x169E9F8", Offset = "0x169E9F8", VA = "0x169E9F8")]
			public KVData()
			{
			}
		}

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Blackboard blackboard;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private KVData[] data;

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0x13C33F4", Offset = "0x13C33F4", VA = "0x13C33F4")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE973D4", Offset = "0xE973D4")]
		public void Set()
		{
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0x13C34C0", Offset = "0x13C34C0", VA = "0x13C34C0")]
		public BlackboardStringSetter()
		{
		}
	}
	[Token(Token = "0x2000722")]
	public sealed class CallRegisteredFlowScript : MonoBehaviour
	{
		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string id;

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0x12057A4", Offset = "0x12057A4", VA = "0x12057A4")]
		public void Call(string functionName)
		{
		}

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0x1205834", Offset = "0x1205834", VA = "0x1205834")]
		public CallRegisteredFlowScript()
		{
		}
	}
	[Token(Token = "0x2000723")]
	public class FlowCanvasGenericInterop : MonoBehaviour
	{
		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _id;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Component _component;

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0x100DCCC", Offset = "0x100DCCC", VA = "0x100DCCC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0x100DDFC", Offset = "0x100DDFC", VA = "0x100DDFC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0x100DE8C", Offset = "0x100DE8C", VA = "0x100DE8C")]
		public FlowCanvasGenericInterop()
		{
		}
	}
	[Token(Token = "0x2000724")]
	public class FlowCanvasSittableInterop : MonoBehaviour
	{
		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _id;

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0x100DF90", Offset = "0x100DF90", VA = "0x100DF90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0x100E0F0", Offset = "0x100E0F0", VA = "0x100E0F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0x100E180", Offset = "0x100E180", VA = "0x100E180")]
		public FlowCanvasSittableInterop()
		{
		}
	}
	[Token(Token = "0x2000725")]
	public class GrabbableVisualScriptingDatabase
	{
		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<string, MT_NPCGrabbable> _grabbables;

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0x10D4248", Offset = "0x10D4248", VA = "0x10D4248")]
		public void Register(MT_NPCGrabbable g, string id)
		{
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0x10D435C", Offset = "0x10D435C", VA = "0x10D435C")]
		public void Deregister(string id)
		{
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0x10D4420", Offset = "0x10D4420", VA = "0x10D4420")]
		public MT_NPCGrabbable GetGrabbable(string id)
		{
			return null;
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0x10D44E0", Offset = "0x10D44E0", VA = "0x10D44E0")]
		public GrabbableVisualScriptingDatabase()
		{
		}
	}
	[Token(Token = "0x2000726")]
	public sealed class NPCVisualScriptingDatabase
	{
		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<string, MT_NPCGameplay> _npcDic;

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0x114C158", Offset = "0x114C158", VA = "0x114C158")]
		public void Register(MT_NPCGameplay npc)
		{
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0x114C270", Offset = "0x114C270", VA = "0x114C270")]
		public void Deregister(MT_NPCGameplay npc)
		{
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0x1145AE8", Offset = "0x1145AE8", VA = "0x1145AE8")]
		public MT_NPCGameplay GetNPC(string id)
		{
			return null;
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0x113F688", Offset = "0x113F688", VA = "0x113F688")]
		public NPCVisualScriptingDatabase()
		{
		}
	}
	[Token(Token = "0x2000727")]
	[AttributeAttribute(Name = "ExecutionPriorityAttribute", RVA = "0xE7291C", Offset = "0xE7291C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7291C", Offset = "0xE7291C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7291C", Offset = "0xE7291C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7291C", Offset = "0xE7291C")]
	public class OnInitialisedFunction : EventNode
	{
		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FlowOutput onInit;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool called;

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0x107B028", Offset = "0x107B028", VA = "0x107B028", Slot = "32")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0x107B1F4", Offset = "0x107B1F4", VA = "0x107B1F4", Slot = "43")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0x107B26C", Offset = "0x107B26C", VA = "0x107B26C")]
		public void Call()
		{
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0x107B2C0", Offset = "0x107B2C0", VA = "0x107B2C0")]
		public OnInitialisedFunction()
		{
		}
	}
	[Token(Token = "0x2000728")]
	public class SittableVisualScriptingDatabase
	{
		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<string, MT_Sittable> _dictionary;

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0x32DDC28", Offset = "0x32DDC28", VA = "0x32DDC28")]
		public void Register(string id, MT_Sittable sittable)
		{
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0x32DDD3C", Offset = "0x32DDD3C", VA = "0x32DDD3C")]
		public void Deregister(string id)
		{
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0x32DDE00", Offset = "0x32DDE00", VA = "0x32DDE00")]
		public MT_Sittable GetSittable(string id)
		{
			return null;
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x32DDEC0", Offset = "0x32DDEC0", VA = "0x32DDEC0")]
		public SittableVisualScriptingDatabase()
		{
		}
	}
	[Token(Token = "0x2000729")]
	public class TutorialVisualScriptingDatabase
	{
		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<string, MT_TutorialBlackboardSubscriber> _tutorialObjects;

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0x1354398", Offset = "0x1354398", VA = "0x1354398")]
		public void Register(MT_TutorialBlackboardSubscriber tutorialObject, string id)
		{
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0x13544AC", Offset = "0x13544AC", VA = "0x13544AC")]
		public void Deregister(string id)
		{
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x1354570", Offset = "0x1354570", VA = "0x1354570")]
		public MT_TutorialBlackboardSubscriber GetTutorialObject(string id)
		{
			return null;
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x1354648", Offset = "0x1354648", VA = "0x1354648")]
		public TutorialVisualScriptingDatabase()
		{
		}
	}
	[Token(Token = "0x200072A")]
	public sealed class MT_VisualScriptingManager
	{
		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly VisualScriptingTimelineDatabase TimelineDatabase;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly NPCVisualScriptingDatabase NPCDatabase;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly TutorialVisualScriptingDatabase TutorialDatabase;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly GrabbableVisualScriptingDatabase GrabbableDatabase;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly SittableVisualScriptingDatabase SittableDatabase;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly GenericVisualScriptingDatabase GenericDatabase;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE867FC", Offset = "0xE867FC")]
		private static GlobalBlackboard <GlobalBlackboard>k__BackingField;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static GameObject _blackboardGameObject;

		[Token(Token = "0x4001F21")]
		private const string BlackboardPrefabPath = "GlobalBlackboard";

		[Token(Token = "0x170003DC")]
		public static GlobalBlackboard GlobalBlackboard
		{
			[Token(Token = "0x60024EE")]
			[Address(RVA = "0x113F0EC", Offset = "0x113F0EC", VA = "0x113F0EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9745C", Offset = "0xE9745C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024ED")]
			[Address(RVA = "0x113F080", Offset = "0x113F080", VA = "0x113F080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9744C", Offset = "0xE9744C")]
			private set
			{
			}
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0x113F150", Offset = "0x113F150", VA = "0x113F150")]
		private static void SpawnGlobalBlackboard()
		{
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0x113F488", Offset = "0x113F488", VA = "0x113F488")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x113F4E0", Offset = "0x113F4E0", VA = "0x113F4E0")]
		public MT_VisualScriptingManager()
		{
		}
	}
	[Token(Token = "0x200072B")]
	public sealed class VisualScriptingTimelineDatabase
	{
		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<string, PlayableDirector> _directorDic;

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0x135B394", Offset = "0x135B394", VA = "0x135B394")]
		public void RegisterDirector(string id, PlayableDirector director)
		{
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0x135B488", Offset = "0x135B488", VA = "0x135B488")]
		public void OnRegionLeave()
		{
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0x135B4DC", Offset = "0x135B4DC", VA = "0x135B4DC")]
		public PlayableDirector GetDirector(string id)
		{
			return null;
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x135B59C", Offset = "0x135B59C", VA = "0x135B59C")]
		public VisualScriptingTimelineDatabase()
		{
		}
	}
}
namespace MazeTheory.Gameplay
{
	[Token(Token = "0x200072C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE729B8", Offset = "0xE729B8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE729B8", Offset = "0xE729B8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE729B8", Offset = "0xE729B8")]
	public class ResetAllShootingGalleriesNode : CallableActionNode
	{
		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x32CB644", Offset = "0x32CB644", VA = "0x32CB644", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x32CB6AC", Offset = "0x32CB6AC", VA = "0x32CB6AC")]
		public ResetAllShootingGalleriesNode()
		{
		}
	}
	[Token(Token = "0x200072D")]
	public class ShootingGalleryResetter : MonoBehaviour
	{
		[Token(Token = "0x200072E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE72A40", Offset = "0xE72A40")]
		private sealed class <ShootingGalleryRespawnCheckCo>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShootingGalleryResetter <>4__this;

			[Token(Token = "0x170003DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002501")]
				[Address(RVA = "0x32C8A24", Offset = "0x32C8A24", VA = "0x32C8A24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002503")]
				[Address(RVA = "0x32C8A6C", Offset = "0x32C8A6C", VA = "0x32C8A6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024FE")]
			[Address(RVA = "0x32C87C0", Offset = "0x32C87C0", VA = "0x32C87C0")]
			[DebuggerHidden]
			public <ShootingGalleryRespawnCheckCo>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60024FF")]
			[Address(RVA = "0x32C87EC", Offset = "0x32C87EC", VA = "0x32C87EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002500")]
			[Address(RVA = "0x32C87F0", Offset = "0x32C87F0", VA = "0x32C87F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002502")]
			[Address(RVA = "0x32C8A2C", Offset = "0x32C8A2C", VA = "0x32C8A2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> shootingGalleries;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool ResetAllShootingGalleries;

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0x32DCA7C", Offset = "0x32DCA7C", VA = "0x32DCA7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0x32DCB20", Offset = "0x32DCB20", VA = "0x32DCB20")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0x32DCAA8", Offset = "0x32DCAA8", VA = "0x32DCAA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9746C", Offset = "0xE9746C")]
		private IEnumerator ShootingGalleryRespawnCheckCo()
		{
			return null;
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0x32DCB28", Offset = "0x32DCB28", VA = "0x32DCB28")]
		public ShootingGalleryResetter()
		{
		}
	}
	[Token(Token = "0x200072F")]
	public static class MT_NPCPassiveBarkChecker
	{
		[Token(Token = "0x2000730")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE72A50", Offset = "0xE72A50")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x6002509")]
			[Address(RVA = "0x103CC6C", Offset = "0x103CC6C", VA = "0x103CC6C")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600250A")]
			[Address(RVA = "0x103CC74", Offset = "0x103CC74", VA = "0x103CC74")]
			internal bool <FindBarkCheckWithID>b__0(MT_BarkCheck x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<MT_BarkCheck> BarkChecks;

		[Token(Token = "0x6002504")]
		[Address(RVA = "0x10F7E34", Offset = "0x10F7E34", VA = "0x10F7E34")]
		public static void RegisterBarkCheck(string id)
		{
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0x10F8054", Offset = "0x10F8054", VA = "0x10F8054")]
		public static void ToggleBarkCheckWithID(string id, bool state)
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x10F7F28", Offset = "0x10F7F28", VA = "0x10F7F28")]
		public static MT_BarkCheck FindBarkCheckWithID(string id)
		{
			return null;
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0x10F8150", Offset = "0x10F8150", VA = "0x10F8150")]
		public static void ClearBarkChecks()
		{
		}
	}
	[Token(Token = "0x2000731")]
	public class MT_BarkCheck
	{
		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool CanBark;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string ID;

		[Token(Token = "0x600250B")]
		[Address(RVA = "0x11268D8", Offset = "0x11268D8", VA = "0x11268D8")]
		public MT_BarkCheck(string newID)
		{
		}
	}
	[Token(Token = "0x2000732")]
	public sealed class MT_NPCPassiveBarkController : MonoBehaviour
	{
		[Token(Token = "0x2000733")]
		private class Bark
		{
			[Token(Token = "0x4001F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly string ID;

			[Token(Token = "0x4001F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly MT_NPCGameplay NPC;

			[Token(Token = "0x4001F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly AudioClip BarkAudioClip;

			[Token(Token = "0x4001F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly AnimationClip BarkFacialAnimationClip;

			[Token(Token = "0x4001F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public readonly Action BarkCompleteAction;

			[Token(Token = "0x4001F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public readonly string BarkCheckerID;

			[Token(Token = "0x600251D")]
			[Address(RVA = "0x103D7E4", Offset = "0x103D7E4", VA = "0x103D7E4")]
			public Bark(string id, MT_NPCGameplay npc, AudioClip audioClip, AnimationClip animationClip, Action endAction, string barkCheckerID = "")
			{
			}
		}

		[Token(Token = "0x2000734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE72A60", Offset = "0xE72A60")]
		private sealed class <UpdateQueue>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_NPCPassiveBarkController <>4__this;

			[Token(Token = "0x4001F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Action <finishedAction>5__2;

			[Token(Token = "0x170003DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002521")]
				[Address(RVA = "0x103D794", Offset = "0x103D794", VA = "0x103D794", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002523")]
				[Address(RVA = "0x103D7DC", Offset = "0x103D7DC", VA = "0x103D7DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600251E")]
			[Address(RVA = "0x103D074", Offset = "0x103D074", VA = "0x103D074")]
			[DebuggerHidden]
			public <UpdateQueue>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600251F")]
			[Address(RVA = "0x103D0A0", Offset = "0x103D0A0", VA = "0x103D0A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002520")]
			[Address(RVA = "0x103D0A4", Offset = "0x103D0A4", VA = "0x103D0A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002522")]
			[Address(RVA = "0x103D79C", Offset = "0x103D79C", VA = "0x103D79C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000735")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE72A70", Offset = "0xE72A70")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action endAction;

			[Token(Token = "0x6002524")]
			[Address(RVA = "0x103CC98", Offset = "0x103CC98", VA = "0x103CC98")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6002525")]
			[Address(RVA = "0x103CCA0", Offset = "0x103CCA0", VA = "0x103CCA0")]
			internal void <PlayBarkImmediately>b__0()
			{
			}
		}

		[Token(Token = "0x2000736")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE72A80", Offset = "0xE72A80")]
		private sealed class <PlayBarkImmediately>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action endAction;

			[Token(Token = "0x4001F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip audioClip;

			[Token(Token = "0x4001F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MT_NPCGameplay npcGameplay;

			[Token(Token = "0x4001F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AnimationClip faceAnimClip;

			[Token(Token = "0x4001F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass13_0 <>8__1;

			[Token(Token = "0x170003E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002529")]
				[Address(RVA = "0x103D024", Offset = "0x103D024", VA = "0x103D024", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600252B")]
				[Address(RVA = "0x103D06C", Offset = "0x103D06C", VA = "0x103D06C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002526")]
			[Address(RVA = "0x103CCB4", Offset = "0x103CCB4", VA = "0x103CCB4")]
			[DebuggerHidden]
			public <PlayBarkImmediately>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002527")]
			[Address(RVA = "0x103CCE0", Offset = "0x103CCE0", VA = "0x103CCE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002528")]
			[Address(RVA = "0x103CCE4", Offset = "0x103CCE4", VA = "0x103CCE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600252A")]
			[Address(RVA = "0x103D02C", Offset = "0x103D02C", VA = "0x103D02C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Bark> BarkList;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static PlayableDirector[] _playableDirectors;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static MT_NPCPassiveBarkController _instance;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[NaughtyAttributes.ReadOnly]
		private bool _playingBark;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[NaughtyAttributes.ReadOnly]
		private static Bark _currentBark;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[NaughtyAttributes.ReadOnly]
		private bool _runningBarkCoroutine;

		[Token(Token = "0x600250C")]
		[Address(RVA = "0x10F8260", Offset = "0x10F8260", VA = "0x10F8260")]
		private void Start()
		{
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0x10F831C", Offset = "0x10F831C", VA = "0x10F831C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x10F8388", Offset = "0x10F8388", VA = "0x10F8388")]
		public static void OnLocationInitialised()
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x10F8418", Offset = "0x10F8418", VA = "0x10F8418")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x10F8504", Offset = "0x10F8504", VA = "0x10F8504")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0x10F85F0", Offset = "0x10F85F0", VA = "0x10F85F0")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE9751C", Offset = "0xE9751C")]
		public static bool IsTimelinePlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x10F869C", Offset = "0x10F869C", VA = "0x10F869C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE97594", Offset = "0xE97594")]
		private IEnumerator UpdateQueue()
		{
			return null;
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x10F8714", Offset = "0x10F8714", VA = "0x10F8714")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE975F4", Offset = "0xE975F4")]
		public static IEnumerator PlayBarkImmediately(MT_NPCGameplay npcGameplay, AudioClip audioClip, AnimationClip faceAnimClip, Action endAction, string barkCheckerID)
		{
			return null;
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x10F87D8", Offset = "0x10F87D8", VA = "0x10F87D8")]
		public static void AddBarkToFrontOfQueue(MT_NPCGameplay npcGameplay, AudioClip audioClip, AnimationClip faceAnimClip, Action endAction, string barkCheckerID)
		{
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0x10F8A24", Offset = "0x10F8A24", VA = "0x10F8A24")]
		public static void AddBarkToQueue(MT_NPCGameplay npcGameplay, AudioClip audioClip, AnimationClip faceAnimClip, Action endAction, string barkCheckerID)
		{
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0x10F8C34", Offset = "0x10F8C34", VA = "0x10F8C34")]
		public static void RemoveBarkWithIDFromQueue(string id)
		{
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0x10F8D94", Offset = "0x10F8D94", VA = "0x10F8D94")]
		public static void ClearBarkQueue()
		{
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0x10F8E18", Offset = "0x10F8E18", VA = "0x10F8E18")]
		public static bool PlayingBark()
		{
			return default(bool);
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0x10F89EC", Offset = "0x10F89EC", VA = "0x10F89EC")]
		private void RunBarkCoroutine()
		{
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x10F8E88", Offset = "0x10F8E88", VA = "0x10F8E88")]
		public static bool GetBarkWithCheckerIDExists(string id)
		{
			return default(bool);
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0x10F8FF4", Offset = "0x10F8FF4", VA = "0x10F8FF4")]
		public MT_NPCPassiveBarkController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000737")]
	public struct MT_NPCDialogue
	{
		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string dialogueID;
	}
	[Token(Token = "0x2000738")]
	public class MT_NPCGameplay : MonoBehaviour
	{
		[Token(Token = "0x2000739")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE72A90", Offset = "0xE72A90")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_NPCGameplay <>4__this;

			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x6002571")]
			[Address(RVA = "0x103C930", Offset = "0x103C930", VA = "0x103C930")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x6002572")]
			[Address(RVA = "0x103C938", Offset = "0x103C938", VA = "0x103C938")]
			internal void <SetFullBodyIKTarget>b__0(float value)
			{
			}
		}

		[Token(Token = "0x200073A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE72AA0", Offset = "0xE72AA0")]
		private sealed class <>c__DisplayClass49_0
		{
			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_NPCGameplay <>4__this;

			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x6002573")]
			[Address(RVA = "0x103C9BC", Offset = "0x103C9BC", VA = "0x103C9BC")]
			public <>c__DisplayClass49_0()
			{
			}

			[Token(Token = "0x6002574")]
			[Address(RVA = "0x103C9C4", Offset = "0x103C9C4", VA = "0x103C9C4")]
			internal void <RemoveFullBodyIKTarget>b__0(float value)
			{
			}
		}

		[Token(Token = "0x200073B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE72AB0", Offset = "0xE72AB0")]
		private sealed class <HideSubtitleCoroutine>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170003E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002578")]
				[Address(RVA = "0x103CB14", Offset = "0x103CB14", VA = "0x103CB14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600257A")]
				[Address(RVA = "0x103CB5C", Offset = "0x103CB5C", VA = "0x103CB5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002575")]
			[Address(RVA = "0x103CA48", Offset = "0x103CA48", VA = "0x103CA48")]
			[DebuggerHidden]
			public <HideSubtitleCoroutine>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x6002576")]
			[Address(RVA = "0x103CA74", Offset = "0x103CA74", VA = "0x103CA74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002577")]
			[Address(RVA = "0x103CA78", Offset = "0x103CA78", VA = "0x103CA78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002579")]
			[Address(RVA = "0x103CB1C", Offset = "0x103CB1C", VA = "0x103CB1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string characterID;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8685C", Offset = "0xE8685C")]
		[SerializeField]
		private string <GridlyID>k__BackingField;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int charSubtitleIndex;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_FaceAnims _facialAnimClips;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public NPCNavigation navigation;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MT_NPCDialogueText _dialogueText;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MT_NPCAudio _audio;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public NPCAnimationController Animation;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MT_NPCLookAt _lookAt;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MT_LookAtIK _lookAtIK;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MT_NPCBlinking _blinking;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private FullBodyBipedIK _fullBodyBipedIK;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Grounder _grounder;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private InteractionSystem _interactionSystem;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[HideInInspector]
		private bool characterConfiguredWithTool;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private MT_FacialAnimation _facialAnimation;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE8696C", Offset = "0xE8696C")]
		[SerializeField]
		private Transform <SubtitleNPCTarget>k__BackingField;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IEnumerator _hideSubtitle;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MT_DialogueHandler _internalDialogueHandler;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE869A4", Offset = "0xE869A4")]
		private PlayableDirector <PlayableDirector>k__BackingField;

		[Token(Token = "0x170003E3")]
		public string GridlyID
		{
			[Token(Token = "0x600252D")]
			[Address(RVA = "0x10F4904", Offset = "0x10F4904", VA = "0x10F4904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE97704", Offset = "0xE97704")]
			get
			{
				return null;
			}
			[Token(Token = "0x600252C")]
			[Address(RVA = "0x10F48FC", Offset = "0x10F48FC", VA = "0x10F48FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE976F4", Offset = "0xE976F4")]
			set
			{
			}
		}

		[Token(Token = "0x170003E4")]
		public MT_NPCAudio Audio
		{
			[Token(Token = "0x600252E")]
			[Address(RVA = "0x10F490C", Offset = "0x10F490C", VA = "0x10F490C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E5")]
		public Transform SubtitleNPCTarget
		{
			[Token(Token = "0x6002530")]
			[Address(RVA = "0x10F491C", Offset = "0x10F491C", VA = "0x10F491C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE97724", Offset = "0xE97724")]
			get
			{
				return null;
			}
			[Token(Token = "0x600252F")]
			[Address(RVA = "0x10F4914", Offset = "0x10F4914", VA = "0x10F4914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE97714", Offset = "0xE97714")]
			set
			{
			}
		}

		[Token(Token = "0x170003E6")]
		public bool IsDoingWaypointBehaviour
		{
			[Token(Token = "0x6002531")]
			[Address(RVA = "0x10F4924", Offset = "0x10F4924", VA = "0x10F4924")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E7")]
		private static MT_DialogueHandler DialogueHandler
		{
			[Token(Token = "0x6002532")]
			[Address(RVA = "0x10F4940", Offset = "0x10F4940", VA = "0x10F4940")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E8")]
		public PlayableDirector PlayableDirector
		{
			[Token(Token = "0x6002534")]
			[Address(RVA = "0x10F49F8", Offset = "0x10F49F8", VA = "0x10F49F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE97744", Offset = "0xE97744")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002533")]
			[Address(RVA = "0x10F49F0", Offset = "0x10F49F0", VA = "0x10F49F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE97734", Offset = "0xE97734")]
			private set
			{
			}
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0x10F4A00", Offset = "0x10F4A00", VA = "0x10F4A00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0x10F4F48", Offset = "0x10F4F48", VA = "0x10F4F48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0x10F505C", Offset = "0x10F505C", VA = "0x10F505C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0x10F5170", Offset = "0x10F5170", VA = "0x10F5170")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0x10F518C", Offset = "0x10F518C", VA = "0x10F518C")]
		public string GetCharacterID()
		{
			return null;
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x10F5194", Offset = "0x10F5194", VA = "0x10F5194")]
		public void SetCharacterID(string id)
		{
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0x10F519C", Offset = "0x10F519C", VA = "0x10F519C")]
		public void StopToFlinch()
		{
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0x10F51B8", Offset = "0x10F51B8", VA = "0x10F51B8")]
		public void ResumeFromFlinch()
		{
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0x10F51D4", Offset = "0x10F51D4", VA = "0x10F51D4")]
		public void ResetCharacter()
		{
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0x10F5364", Offset = "0x10F5364", VA = "0x10F5364")]
		public void StopGrounder()
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0x10F5384", Offset = "0x10F5384", VA = "0x10F5384")]
		public void StartGrounder()
		{
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0x10F53A4", Offset = "0x10F53A4", VA = "0x10F53A4")]
		public void StartInteraction(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0x10F53C4", Offset = "0x10F53C4", VA = "0x10F53C4")]
		public void StopInteraction(FullBodyBipedEffector effector)
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0x10F53E0", Offset = "0x10F53E0", VA = "0x10F53E0")]
		public void SetFullBodyIKTarget(FullBodyBipedEffector effector, Transform target, float fadeDuration, Ease ease)
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0x10F5538", Offset = "0x10F5538", VA = "0x10F5538")]
		public void RemoveFullBodyIKTarget(FullBodyBipedEffector effector, float fadeDuration, Ease ease)
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0x10F568C", Offset = "0x10F568C", VA = "0x10F568C")]
		public bool GetFullBodyIk()
		{
			return default(bool);
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x10F570C", Offset = "0x10F570C", VA = "0x10F570C")]
		public void LookAt(Transform ikTarget, float time)
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0x10F5810", Offset = "0x10F5810", VA = "0x10F5810")]
		public void LookAtPlayer(float time)
		{
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0x10F5904", Offset = "0x10F5904", VA = "0x10F5904")]
		public void LookAt_EyesOnly(Transform ikTarget, float time)
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0x10F59BC", Offset = "0x10F59BC", VA = "0x10F59BC")]
		public void LookAtPlayer_EyesOnly(float time)
		{
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0x10F5A68", Offset = "0x10F5A68", VA = "0x10F5A68")]
		public void LookAt_HeadOnly(Transform ikTarget, float time)
		{
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x10F5B20", Offset = "0x10F5B20", VA = "0x10F5B20")]
		public void LookAtPlayer_HeadOnly(float time)
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0x10F5BCC", Offset = "0x10F5BCC", VA = "0x10F5BCC")]
		public void StopLookingAt()
		{
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x10F5CB8", Offset = "0x10F5CB8", VA = "0x10F5CB8")]
		public void AimAt(Transform target)
		{
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0x10F5D98", Offset = "0x10F5D98", VA = "0x10F5D98")]
		public void AimAtPlayerSingleEye()
		{
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0x10F5E68", Offset = "0x10F5E68", VA = "0x10F5E68")]
		public void AimAtPlayerHead()
		{
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0x10F5F38", Offset = "0x10F5F38", VA = "0x10F5F38")]
		public void AimAtPlayerBody()
		{
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0x10F6008", Offset = "0x10F6008", VA = "0x10F6008")]
		public void StopAimingAt()
		{
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0x10F60D8", Offset = "0x10F60D8", VA = "0x10F60D8")]
		public void ChangeToLeftArmAim()
		{
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0x10F6168", Offset = "0x10F6168", VA = "0x10F6168")]
		public void ChangeToRightArmAim()
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0x10F61F8", Offset = "0x10F61F8", VA = "0x10F61F8")]
		public void SetLookAtLimits(bool limit)
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x10F6218", Offset = "0x10F6218", VA = "0x10F6218")]
		public void SetDistanceLimits(bool limit, float distance)
		{
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0x10F6248", Offset = "0x10F6248", VA = "0x10F6248")]
		public void StartAutoBlinking()
		{
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0x10F62CC", Offset = "0x10F62CC", VA = "0x10F62CC")]
		public void StopAutoBlinking()
		{
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0x10F6354", Offset = "0x10F6354", VA = "0x10F6354")]
		public void SetAimAtClampWeight(float weight)
		{
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0x10F6370", Offset = "0x10F6370", VA = "0x10F6370")]
		public void PlayDialogue(MT_NPCDialogue dialogue, Action onComplete)
		{
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0x10F63CC", Offset = "0x10F63CC", VA = "0x10F63CC")]
		public void PlayFacialAnimation(string lipSyncID, string headAnimID)
		{
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0x10F64C0", Offset = "0x10F64C0", VA = "0x10F64C0")]
		public void ShowDialogueText(string text)
		{
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0x10F65C8", Offset = "0x10F65C8", VA = "0x10F65C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE97754", Offset = "0xE97754")]
		private IEnumerator HideSubtitleCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0x10F6624", Offset = "0x10F6624", VA = "0x10F6624")]
		public void HideDialogueText()
		{
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0x10F66B0", Offset = "0x10F66B0", VA = "0x10F66B0")]
		public void PlayDialogueAudio(string dialogueID)
		{
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0x10F6730", Offset = "0x10F6730", VA = "0x10F6730")]
		public void PlayDialogueAudio(string dialogueId, float startPerc)
		{
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0x10F67B0", Offset = "0x10F67B0", VA = "0x10F67B0")]
		public void SetNavigator(NPCNavigation nav)
		{
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0x10F67B8", Offset = "0x10F67B8", VA = "0x10F67B8")]
		public void SetDialogueText(MT_NPCDialogueText dialogueText)
		{
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0x10F67C0", Offset = "0x10F67C0", VA = "0x10F67C0")]
		public void SetNpcAudio(MT_NPCAudio npcAudio)
		{
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0x10F67C8", Offset = "0x10F67C8", VA = "0x10F67C8")]
		public void SetAnimationController(NPCAnimationController controller)
		{
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0x10F67D0", Offset = "0x10F67D0", VA = "0x10F67D0")]
		public void SetLookAt(MT_NPCLookAt lookAt)
		{
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x10F67D8", Offset = "0x10F67D8", VA = "0x10F67D8")]
		public MT_LookAtIK GetLookAtIK()
		{
			return null;
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0x10F67E0", Offset = "0x10F67E0", VA = "0x10F67E0")]
		public void SetLookAtIK(MT_LookAtIK lookAt)
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0x10F67E8", Offset = "0x10F67E8", VA = "0x10F67E8")]
		public void SetFullBodyBipedIK(FullBodyBipedIK fullBodyBipedIK)
		{
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0x10F67F0", Offset = "0x10F67F0", VA = "0x10F67F0")]
		public void SetGrounder(Grounder grounder)
		{
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x10F67F8", Offset = "0x10F67F8", VA = "0x10F67F8")]
		public void SetInteractionSystem(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0x10F6800", Offset = "0x10F6800", VA = "0x10F6800")]
		public void SetBlink(MT_NPCBlinking blinking)
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x10F6808", Offset = "0x10F6808", VA = "0x10F6808")]
		public Transform GetIKForward()
		{
			return null;
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x10F6824", Offset = "0x10F6824", VA = "0x10F6824")]
		public bool GetCharacterConfiguredWithTool()
		{
			return default(bool);
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x10F682C", Offset = "0x10F682C", VA = "0x10F682C")]
		public void SetCharacterWasConfigruedWithTool()
		{
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0x10F6838", Offset = "0x10F6838", VA = "0x10F6838")]
		public MT_FacialAnimation GetFacialAnimationComponent()
		{
			return null;
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x10F6840", Offset = "0x10F6840", VA = "0x10F6840")]
		public void SetupFacialAnimations()
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0x10F68EC", Offset = "0x10F68EC", VA = "0x10F68EC")]
		public void Despawn()
		{
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x10F6934", Offset = "0x10F6934", VA = "0x10F6934")]
		public MT_NPCGameplay()
		{
		}
	}
	[Token(Token = "0x200073C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE72AC0", Offset = "0xE72AC0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE72AC0", Offset = "0xE72AC0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE72AC0", Offset = "0xE72AC0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE72AC0", Offset = "0xE72AC0")]
	public class NPCSetRightHandTagListNode : CallableActionNode<string, List<string>>
	{
		[Token(Token = "0x600257B")]
		[Address(RVA = "0x114AE90", Offset = "0x114AE90", VA = "0x114AE90", Slot = "12")]
		public override void Invoke(string npcId, List<string> tagList)
		{
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x114AE94", Offset = "0x114AE94", VA = "0x114AE94")]
		public NPCSetRightHandTagListNode()
		{
		}
	}
	[Token(Token = "0x200073D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE72B58", Offset = "0xE72B58")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE72B58", Offset = "0xE72B58")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE72B58", Offset = "0xE72B58")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE72B58", Offset = "0xE72B58")]
	public class NPCSetLeftHandTagListNode : CallableActionNode<string, List<string>>
	{
		[Token(Token = "0x600257D")]
		[Address(RVA = "0x114AE40", Offset = "0x114AE40", VA = "0x114AE40", Slot = "12")]
		public override void Invoke(string npcId, List<string> tagList)
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x114AE44", Offset = "0x114AE44", VA = "0x114AE44")]
		public NPCSetLeftHandTagListNode()
		{
		}
	}
	[Token(Token = "0x200073E")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE72BF0", Offset = "0xE72BF0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE72BF0", Offset = "0xE72BF0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE72BF0", Offset = "0xE72BF0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE72BF0", Offset = "0xE72BF0")]
	public class NPCEnableRightHandInteractor : LatentActionNode<string, bool, bool>
	{
		[Token(Token = "0x200073F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE72C88", Offset = "0xE72C88")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170003EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002584")]
				[Address(RVA = "0x32BD084", Offset = "0x32BD084", VA = "0x32BD084", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002586")]
				[Address(RVA = "0x32BD0CC", Offset = "0x32BD0CC", VA = "0x32BD0CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002581")]
			[Address(RVA = "0x32BCFF8", Offset = "0x32BCFF8", VA = "0x32BCFF8")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002582")]
			[Address(RVA = "0x32BD024", Offset = "0x32BD024", VA = "0x32BD024", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002583")]
			[Address(RVA = "0x32BD028", Offset = "0x32BD028", VA = "0x32BD028", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002585")]
			[Address(RVA = "0x32BD08C", Offset = "0x32BD08C", VA = "0x32BD08C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0x1147F08", Offset = "0x1147F08", VA = "0x1147F08", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE97804", Offset = "0xE97804")]
		public override IEnumerator Invoke(string npcId, bool setActive, bool isEnvironmentObj)
		{
			return null;
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0x1147F64", Offset = "0x1147F64", VA = "0x1147F64")]
		public NPCEnableRightHandInteractor()
		{
		}
	}
	[Token(Token = "0x2000740")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE72C98", Offset = "0xE72C98")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE72C98", Offset = "0xE72C98")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE72C98", Offset = "0xE72C98")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE72C98", Offset = "0xE72C98")]
	public class NPCEnableLeftHandInteractor : LatentActionNode<string, bool, bool>
	{
		[Token(Token = "0x2000741")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE72D30", Offset = "0xE72D30")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170003ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600258C")]
				[Address(RVA = "0x32BCFA8", Offset = "0x32BCFA8", VA = "0x32BCFA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600258E")]
				[Address(RVA = "0x32BCFF0", Offset = "0x32BCFF0", VA = "0x32BCFF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002589")]
			[Address(RVA = "0x32BCF1C", Offset = "0x32BCF1C", VA = "0x32BCF1C")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600258A")]
			[Address(RVA = "0x32BCF48", Offset = "0x32BCF48", VA = "0x32BCF48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600258B")]
			[Address(RVA = "0x32BCF4C", Offset = "0x32BCF4C", VA = "0x32BCF4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600258D")]
			[Address(RVA = "0x32BCFB0", Offset = "0x32BCFB0", VA = "0x32BCFB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0x1147E60", Offset = "0x1147E60", VA = "0x1147E60", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE978B4", Offset = "0xE978B4")]
		public override IEnumerator Invoke(string npcId, bool setActive, bool isEnvironmentObj)
		{
			return null;
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0x1147EBC", Offset = "0x1147EBC", VA = "0x1147EBC")]
		public NPCEnableLeftHandInteractor()
		{
		}
	}
	[Token(Token = "0x2000742")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE72D40", Offset = "0xE72D40")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE72D40", Offset = "0xE72D40")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE72D40", Offset = "0xE72D40")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE72D40", Offset = "0xE72D40")]
	public class NPCLeftDropNode : CallableActionNode<string, Transform, bool, bool, Transform, Vector3, Vector3>
	{
		[Token(Token = "0x600258F")]
		[Address(RVA = "0x11481E0", Offset = "0x11481E0", VA = "0x11481E0", Slot = "12")]
		public override void Invoke(string npcId, Transform parent, bool resetPos, bool setToNonKinematic, Transform endPosition, Vector3 endPos, Vector3 endRot)
		{
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0x11481E4", Offset = "0x11481E4", VA = "0x11481E4")]
		public NPCLeftDropNode()
		{
		}
	}
	[Token(Token = "0x2000743")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE72DD8", Offset = "0xE72DD8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE72DD8", Offset = "0xE72DD8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE72DD8", Offset = "0xE72DD8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE72DD8", Offset = "0xE72DD8")]
	public class NPCRightDropNode : CallableActionNode<string, Transform, bool, bool, Transform, Vector3, Vector3>
	{
		[Token(Token = "0x6002591")]
		[Address(RVA = "0x114A8D4", Offset = "0x114A8D4", VA = "0x114A8D4", Slot = "12")]
		public override void Invoke(string npcId, Transform parent, bool resetPos, bool setToNonKinematic, Transform endPosition, Vector3 endPos, Vector3 endRot)
		{
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0x114A8D8", Offset = "0x114A8D8", VA = "0x114A8D8")]
		public NPCRightDropNode()
		{
		}
	}
	[Token(Token = "0x2000744")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE72E70", Offset = "0xE72E70")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE72E70", Offset = "0xE72E70")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE72E70", Offset = "0xE72E70")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE72E70", Offset = "0xE72E70")]
	public class NPCGiveRightObjectNode : LatentActionNode<string>
	{
		[Token(Token = "0x2000745")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE72F08", Offset = "0xE72F08")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170003EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002598")]
				[Address(RVA = "0x32BD23C", Offset = "0x32BD23C", VA = "0x32BD23C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600259A")]
				[Address(RVA = "0x32BD284", Offset = "0x32BD284", VA = "0x32BD284", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002595")]
			[Address(RVA = "0x32BD1B0", Offset = "0x32BD1B0", VA = "0x32BD1B0")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002596")]
			[Address(RVA = "0x32BD1DC", Offset = "0x32BD1DC", VA = "0x32BD1DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002597")]
			[Address(RVA = "0x32BD1E0", Offset = "0x32BD1E0", VA = "0x32BD1E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002599")]
			[Address(RVA = "0x32BD244", Offset = "0x32BD244", VA = "0x32BD244", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0x1148058", Offset = "0x1148058", VA = "0x1148058", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE97964", Offset = "0xE97964")]
		public override IEnumerator Invoke(string npcId)
		{
			return null;
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x11480B4", Offset = "0x11480B4", VA = "0x11480B4")]
		public NPCGiveRightObjectNode()
		{
		}
	}
	[Token(Token = "0x2000746")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE72F18", Offset = "0xE72F18")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE72F18", Offset = "0xE72F18")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE72F18", Offset = "0xE72F18")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE72F18", Offset = "0xE72F18")]
	public class NPCGiveLeftObjectNode : LatentActionNode<string>
	{
		[Token(Token = "0x2000747")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE72FB0", Offset = "0xE72FB0")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170003F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025A0")]
				[Address(RVA = "0x32BD160", Offset = "0x32BD160", VA = "0x32BD160", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025A2")]
				[Address(RVA = "0x32BD1A8", Offset = "0x32BD1A8", VA = "0x32BD1A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600259D")]
			[Address(RVA = "0x32BD0D4", Offset = "0x32BD0D4", VA = "0x32BD0D4")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600259E")]
			[Address(RVA = "0x32BD100", Offset = "0x32BD100", VA = "0x32BD100", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600259F")]
			[Address(RVA = "0x32BD104", Offset = "0x32BD104", VA = "0x32BD104", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025A1")]
			[Address(RVA = "0x32BD168", Offset = "0x32BD168", VA = "0x32BD168", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600259B")]
		[Address(RVA = "0x1147FB0", Offset = "0x1147FB0", VA = "0x1147FB0", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE97A14", Offset = "0xE97A14")]
		public override IEnumerator Invoke(string npcId)
		{
			return null;
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0x114800C", Offset = "0x114800C", VA = "0x114800C")]
		public NPCGiveLeftObjectNode()
		{
		}
	}
	[Token(Token = "0x2000748")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE72FC0", Offset = "0xE72FC0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE72FC0", Offset = "0xE72FC0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE72FC0", Offset = "0xE72FC0")]
	public class SetPersonalSpaceTransform : CallableActionNode<Transform>
	{
		[Token(Token = "0x60025A3")]
		[Address(RVA = "0x32DB7B4", Offset = "0x32DB7B4", VA = "0x32DB7B4", Slot = "12")]
		public override void Invoke(Transform overrideTransform)
		{
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0x32DB860", Offset = "0x32DB860", VA = "0x32DB860")]
		public SetPersonalSpaceTransform()
		{
		}
	}
	[Token(Token = "0x2000749")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73048", Offset = "0xE73048")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73048", Offset = "0xE73048")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73048", Offset = "0xE73048")]
	public class ResetPersonalSpaceTransform : CallableActionNode
	{
		[Token(Token = "0x60025A5")]
		[Address(RVA = "0x32CB77C", Offset = "0x32CB77C", VA = "0x32CB77C", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0x32CB7D8", Offset = "0x32CB7D8", VA = "0x32CB7D8")]
		public ResetPersonalSpaceTransform()
		{
		}
	}
	[Token(Token = "0x200074A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE730D0", Offset = "0xE730D0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE730D0", Offset = "0xE730D0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE730D0", Offset = "0xE730D0")]
	public class SetLocalPersonalSpaceTransform : CallableActionNode<Transform, MT_PersonalSpace>
	{
		[Token(Token = "0x60025A7")]
		[Address(RVA = "0x32DB6AC", Offset = "0x32DB6AC", VA = "0x32DB6AC", Slot = "12")]
		public override void Invoke(Transform overrideTransform, MT_PersonalSpace npcPersonalSpace)
		{
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x32DB6C8", Offset = "0x32DB6C8", VA = "0x32DB6C8")]
		public SetLocalPersonalSpaceTransform()
		{
		}
	}
	[Token(Token = "0x200074B")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73158", Offset = "0xE73158")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73158", Offset = "0xE73158")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73158", Offset = "0xE73158")]
	public class ResetLocalPersonalSpaceTransform : CallableActionNode<MT_PersonalSpace>
	{
		[Token(Token = "0x60025A9")]
		[Address(RVA = "0x32CB714", Offset = "0x32CB714", VA = "0x32CB714", Slot = "12")]
		public override void Invoke(MT_PersonalSpace npcPersonalSpace)
		{
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0x32CB730", Offset = "0x32CB730", VA = "0x32CB730")]
		public ResetLocalPersonalSpaceTransform()
		{
		}
	}
	[Token(Token = "0x200074C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE731E0", Offset = "0xE731E0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE731E0", Offset = "0xE731E0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE731E0", Offset = "0xE731E0")]
	public class RespawnCombatNPC : CallableActionNode<CombatAI>
	{
		[Token(Token = "0x60025AB")]
		[Address(RVA = "0x32CB8C8", Offset = "0x32CB8C8", VA = "0x32CB8C8", Slot = "12")]
		public override void Invoke(CombatAI npc)
		{
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x32CB9D8", Offset = "0x32CB9D8", VA = "0x32CB9D8")]
		public RespawnCombatNPC()
		{
		}
	}
	[Token(Token = "0x200074D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73268", Offset = "0xE73268")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73268", Offset = "0xE73268")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73268", Offset = "0xE73268")]
	public class MoveAllyToPosition : LatentActionNode<CombatAlly, Transform, NPCNavigation.NpcMovementSpeed>
	{
		[Token(Token = "0x200074E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE732F0", Offset = "0xE732F0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CombatAlly npc;

			[Token(Token = "0x4001F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x60025AF")]
			[Address(RVA = "0x32BBB1C", Offset = "0x32BBB1C", VA = "0x32BBB1C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60025B0")]
			[Address(RVA = "0x32BBB24", Offset = "0x32BBB24", VA = "0x32BBB24")]
			internal bool <Invoke>g__Finished|0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200074F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE73300", Offset = "0xE73300")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CombatAlly npc;

			[Token(Token = "0x4001F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform target;

			[Token(Token = "0x4001F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NPCNavigation.NpcMovementSpeed movementSpeed;

			[Token(Token = "0x170003F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025B4")]
				[Address(RVA = "0x32BBCEC", Offset = "0x32BBCEC", VA = "0x32BBCEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025B6")]
				[Address(RVA = "0x32BBD34", Offset = "0x32BBD34", VA = "0x32BBD34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025B1")]
			[Address(RVA = "0x32BBB48", Offset = "0x32BBB48", VA = "0x32BBB48")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60025B2")]
			[Address(RVA = "0x32BBB74", Offset = "0x32BBB74", VA = "0x32BBB74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025B3")]
			[Address(RVA = "0x32BBB78", Offset = "0x32BBB78", VA = "0x32BBB78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025B5")]
			[Address(RVA = "0x32BBCF4", Offset = "0x32BBCF4", VA = "0x32BBCF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0x1142E0C", Offset = "0x1142E0C", VA = "0x1142E0C", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE97AC4", Offset = "0xE97AC4")]
		public override IEnumerator Invoke(CombatAlly npc, Transform target, NPCNavigation.NpcMovementSpeed movementSpeed = NPCNavigation.NpcMovementSpeed.Running)
		{
			return null;
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0x1142EA8", Offset = "0x1142EA8", VA = "0x1142EA8")]
		public MoveAllyToPosition()
		{
		}
	}
	[Token(Token = "0x2000750")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73310", Offset = "0xE73310")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73310", Offset = "0xE73310")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73310", Offset = "0xE73310")]
	public class SetCombatAIDefaultShotTarget : CallableActionNode<CombatAI, Transform>
	{
		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x32DAD70", Offset = "0x32DAD70", VA = "0x32DAD70", Slot = "12")]
		public override void Invoke(CombatAI npc, Transform target)
		{
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x32DAD90", Offset = "0x32DAD90", VA = "0x32DAD90")]
		public SetCombatAIDefaultShotTarget()
		{
		}
	}
	[Token(Token = "0x2000751")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73398", Offset = "0xE73398")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73398", Offset = "0xE73398")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73398", Offset = "0xE73398")]
	public class EnableAllyBehaviour : CallableActionNode<CombatAlly, bool>
	{
		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x100B93C", Offset = "0x100B93C", VA = "0x100B93C", Slot = "12")]
		public override void Invoke(CombatAlly npc, bool enabled)
		{
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0x100B95C", Offset = "0x100B95C", VA = "0x100B95C")]
		public EnableAllyBehaviour()
		{
		}
	}
	[Token(Token = "0x2000752")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73420", Offset = "0xE73420")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73420", Offset = "0xE73420")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73420", Offset = "0xE73420")]
	public class NPCRotateToFaceTarget : CallableActionNode<NPCAnimationController, Transform, float>
	{
		[Token(Token = "0x60025BB")]
		[Address(RVA = "0x114A924", Offset = "0x114A924", VA = "0x114A924", Slot = "12")]
		public override void Invoke(NPCAnimationController npc, Transform target, float duration = 0.1f)
		{
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0x114A988", Offset = "0x114A988", VA = "0x114A988")]
		public NPCRotateToFaceTarget()
		{
		}
	}
	[Token(Token = "0x2000753")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE734A8", Offset = "0xE734A8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE734A8", Offset = "0xE734A8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE734A8", Offset = "0xE734A8")]
	public class NPCLookAtNearestCombatNPCNode : CallableActionNode<NPCAnimationController, float>
	{
		[Token(Token = "0x60025BD")]
		[Address(RVA = "0x114840C", Offset = "0x114840C", VA = "0x114840C", Slot = "12")]
		public override void Invoke(NPCAnimationController npc, float duration = 0.1f)
		{
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0x11484BC", Offset = "0x11484BC", VA = "0x11484BC")]
		public NPCLookAtNearestCombatNPCNode()
		{
		}
	}
	[Token(Token = "0x2000754")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73530", Offset = "0xE73530")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73530", Offset = "0xE73530")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73530", Offset = "0xE73530")]
	public class NPCPlayAnimationWithBlendNode : LatentActionNode<string, AnimationClip, float>
	{
		[Token(Token = "0x2000755")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE735B8", Offset = "0xE735B8")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool hasFinished;

			[Token(Token = "0x60025C1")]
			[Address(RVA = "0x32BF210", Offset = "0x32BF210", VA = "0x32BF210")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60025C2")]
			[Address(RVA = "0x32BF218", Offset = "0x32BF218", VA = "0x32BF218")]
			internal bool <Invoke>g__HasFinished|0()
			{
				return default(bool);
			}

			[Token(Token = "0x60025C3")]
			[Address(RVA = "0x32BF220", Offset = "0x32BF220", VA = "0x32BF220")]
			internal void <Invoke>g__ONComplete|1()
			{
			}
		}

		[Token(Token = "0x2000756")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE735C8", Offset = "0xE735C8")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string npcId;

			[Token(Token = "0x4001F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationClip clip;

			[Token(Token = "0x4001F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float normalizedTime;

			[Token(Token = "0x170003F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025C7")]
				[Address(RVA = "0x32BF4B0", Offset = "0x32BF4B0", VA = "0x32BF4B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025C9")]
				[Address(RVA = "0x32BF4F8", Offset = "0x32BF4F8", VA = "0x32BF4F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025C4")]
			[Address(RVA = "0x32BF22C", Offset = "0x32BF22C", VA = "0x32BF22C")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60025C5")]
			[Address(RVA = "0x32BF258", Offset = "0x32BF258", VA = "0x32BF258", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025C6")]
			[Address(RVA = "0x32BF25C", Offset = "0x32BF25C", VA = "0x32BF25C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025C8")]
			[Address(RVA = "0x32BF4B8", Offset = "0x32BF4B8", VA = "0x32BF4B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0x114A338", Offset = "0x114A338", VA = "0x114A338", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE97B74", Offset = "0xE97B74")]
		public override IEnumerator Invoke(string npcId, AnimationClip clip, float normalizedTime)
		{
			return null;
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x114A3DC", Offset = "0x114A3DC", VA = "0x114A3DC")]
		public NPCPlayAnimationWithBlendNode()
		{
		}
	}
	[Token(Token = "0x2000757")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE735D8", Offset = "0xE735D8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE735D8", Offset = "0xE735D8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE735D8", Offset = "0xE735D8")]
	public class NPCPlayAnimationNode : LatentActionNode<string, AnimationClip, bool>
	{
		[Token(Token = "0x2000758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE73660", Offset = "0xE73660")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool hasFinished;

			[Token(Token = "0x60025CC")]
			[Address(RVA = "0x32BEF24", Offset = "0x32BEF24", VA = "0x32BEF24")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60025CD")]
			[Address(RVA = "0x32BEF2C", Offset = "0x32BEF2C", VA = "0x32BEF2C")]
			internal bool <Invoke>g__HasFinished|0()
			{
				return default(bool);
			}

			[Token(Token = "0x60025CE")]
			[Address(RVA = "0x32BEF34", Offset = "0x32BEF34", VA = "0x32BEF34")]
			internal void <Invoke>g__ONComplete|1()
			{
			}
		}

		[Token(Token = "0x2000759")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE73670", Offset = "0xE73670")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool continueInstantly;

			[Token(Token = "0x4001F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string npcId;

			[Token(Token = "0x4001F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnimationClip clip;

			[Token(Token = "0x170003F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025D2")]
				[Address(RVA = "0x32BF1C0", Offset = "0x32BF1C0", VA = "0x32BF1C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025D4")]
				[Address(RVA = "0x32BF208", Offset = "0x32BF208", VA = "0x32BF208", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025CF")]
			[Address(RVA = "0x32BEF40", Offset = "0x32BEF40", VA = "0x32BEF40")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60025D0")]
			[Address(RVA = "0x32BEF6C", Offset = "0x32BEF6C", VA = "0x32BEF6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025D1")]
			[Address(RVA = "0x32BEF70", Offset = "0x32BEF70", VA = "0x32BEF70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025D3")]
			[Address(RVA = "0x32BF1C8", Offset = "0x32BF1C8", VA = "0x32BF1C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0x114A24C", Offset = "0x114A24C", VA = "0x114A24C", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE97C24", Offset = "0xE97C24")]
		public override IEnumerator Invoke(string npcId, AnimationClip clip, bool continueInstantly)
		{
			return null;
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x114A2EC", Offset = "0x114A2EC", VA = "0x114A2EC")]
		public NPCPlayAnimationNode()
		{
		}
	}
	[Token(Token = "0x200075A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73680", Offset = "0xE73680")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73680", Offset = "0xE73680")]
	public class PlayAnimNodeDirecRef : LatentActionNode<MT_NPCGameplay, AnimationClip, bool>
	{
		[Token(Token = "0x200075B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE736E4", Offset = "0xE736E4")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool hasFinished;

			[Token(Token = "0x60025D7")]
			[Address(RVA = "0x32C4C58", Offset = "0x32C4C58", VA = "0x32C4C58")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60025D8")]
			[Address(RVA = "0x32C4C60", Offset = "0x32C4C60", VA = "0x32C4C60")]
			internal bool <Invoke>g__HasFinished|0()
			{
				return default(bool);
			}

			[Token(Token = "0x60025D9")]
			[Address(RVA = "0x32C4C68", Offset = "0x32C4C68", VA = "0x32C4C68")]
			internal void <Invoke>g__ONComplete|1()
			{
			}
		}

		[Token(Token = "0x200075C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE736F4", Offset = "0xE736F4")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool continueInstantly;

			[Token(Token = "0x4001F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MT_NPCGameplay npc;

			[Token(Token = "0x4001F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnimationClip clip;

			[Token(Token = "0x170003F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025DD")]
				[Address(RVA = "0x32C4E2C", Offset = "0x32C4E2C", VA = "0x32C4E2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025DF")]
				[Address(RVA = "0x32C4E74", Offset = "0x32C4E74", VA = "0x32C4E74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025DA")]
			[Address(RVA = "0x32C4C74", Offset = "0x32C4C74", VA = "0x32C4C74")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60025DB")]
			[Address(RVA = "0x32C4CA0", Offset = "0x32C4CA0", VA = "0x32C4CA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025DC")]
			[Address(RVA = "0x32C4CA4", Offset = "0x32C4CA4", VA = "0x32C4CA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025DE")]
			[Address(RVA = "0x32C4E34", Offset = "0x32C4E34", VA = "0x32C4E34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0x108074C", Offset = "0x108074C", VA = "0x108074C", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE97CD4", Offset = "0xE97CD4")]
		public override IEnumerator Invoke(MT_NPCGameplay npc, AnimationClip clip, bool continueInstantly)
		{
			return null;
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0x10807EC", Offset = "0x10807EC", VA = "0x10807EC")]
		public PlayAnimNodeDirecRef()
		{
		}
	}
	[Token(Token = "0x200075D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73704", Offset = "0xE73704")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73704", Offset = "0xE73704")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73704", Offset = "0xE73704")]
	public class NPCPlayAnimNode : LatentActionNode<string, AnimationClip, bool>
	{
		[Token(Token = "0x200075E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7378C", Offset = "0xE7378C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool hasFinished;

			[Token(Token = "0x60025E2")]
			[Address(RVA = "0x32BE950", Offset = "0x32BE950", VA = "0x32BE950")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60025E3")]
			[Address(RVA = "0x32BE958", Offset = "0x32BE958", VA = "0x32BE958")]
			internal bool <Invoke>g__HasFinished|0()
			{
				return default(bool);
			}

			[Token(Token = "0x60025E4")]
			[Address(RVA = "0x32BE960", Offset = "0x32BE960", VA = "0x32BE960")]
			internal void <Invoke>g__ONComplete|1()
			{
			}
		}

		[Token(Token = "0x200075F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7379C", Offset = "0xE7379C")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string npcId;

			[Token(Token = "0x4001F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationClip clip;

			[Token(Token = "0x170003FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025E8")]
				[Address(RVA = "0x32BEBE8", Offset = "0x32BEBE8", VA = "0x32BEBE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025EA")]
				[Address(RVA = "0x32BEC30", Offset = "0x32BEC30", VA = "0x32BEC30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025E5")]
			[Address(RVA = "0x32BE96C", Offset = "0x32BE96C", VA = "0x32BE96C")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60025E6")]
			[Address(RVA = "0x32BE998", Offset = "0x32BE998", VA = "0x32BE998", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025E7")]
			[Address(RVA = "0x32BE99C", Offset = "0x32BE99C", VA = "0x32BE99C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025E9")]
			[Address(RVA = "0x32BEBF0", Offset = "0x32BEBF0", VA = "0x32BEBF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0x114A080", Offset = "0x114A080", VA = "0x114A080", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE97D84", Offset = "0xE97D84")]
		public override IEnumerator Invoke(string npcId, AnimationClip clip, bool transitionToWaypoint)
		{
			return null;
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0x114A114", Offset = "0x114A114", VA = "0x114A114")]
		public NPCPlayAnimNode()
		{
		}
	}
	[Token(Token = "0x2000760")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE737AC", Offset = "0xE737AC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE737AC", Offset = "0xE737AC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE737AC", Offset = "0xE737AC")]
	public class NPCJumpToAnimStateNode : LatentActionNode<string, string>
	{
		[Token(Token = "0x2000761")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE73834", Offset = "0xE73834")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool hasFinished;

			[Token(Token = "0x60025ED")]
			[Address(RVA = "0x32BD28C", Offset = "0x32BD28C", VA = "0x32BD28C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60025EE")]
			[Address(RVA = "0x32BD294", Offset = "0x32BD294", VA = "0x32BD294")]
			internal bool <Invoke>g__HasFinished|0()
			{
				return default(bool);
			}

			[Token(Token = "0x60025EF")]
			[Address(RVA = "0x32BD29C", Offset = "0x32BD29C", VA = "0x32BD29C")]
			internal void <Invoke>g__ONComplete|1()
			{
			}
		}

		[Token(Token = "0x2000762")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE73844", Offset = "0xE73844")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string npcId;

			[Token(Token = "0x4001F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string startStateName;

			[Token(Token = "0x170003FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025F3")]
				[Address(RVA = "0x32BD528", Offset = "0x32BD528", VA = "0x32BD528", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025F5")]
				[Address(RVA = "0x32BD570", Offset = "0x32BD570", VA = "0x32BD570", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025F0")]
			[Address(RVA = "0x32BD2A8", Offset = "0x32BD2A8", VA = "0x32BD2A8")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60025F1")]
			[Address(RVA = "0x32BD2D4", Offset = "0x32BD2D4", VA = "0x32BD2D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025F2")]
			[Address(RVA = "0x32BD2D8", Offset = "0x32BD2D8", VA = "0x32BD2D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025F4")]
			[Address(RVA = "0x32BD530", Offset = "0x32BD530", VA = "0x32BD530", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0x1148100", Offset = "0x1148100", VA = "0x1148100", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE97E34", Offset = "0xE97E34")]
		public override IEnumerator Invoke(string npcId, string startStateName)
		{
			return null;
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0x1148194", Offset = "0x1148194", VA = "0x1148194")]
		public NPCJumpToAnimStateNode()
		{
		}
	}
	[Token(Token = "0x2000763")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73854", Offset = "0xE73854")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73854", Offset = "0xE73854")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73854", Offset = "0xE73854")]
	public class NPCStopAnimationClipNode : CallableActionNode<string>
	{
		[Token(Token = "0x60025F6")]
		[Address(RVA = "0x114B25C", Offset = "0x114B25C", VA = "0x114B25C", Slot = "12")]
		public override void Invoke(string npcId)
		{
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0x114B364", Offset = "0x114B364", VA = "0x114B364")]
		public NPCStopAnimationClipNode()
		{
		}
	}
	[Token(Token = "0x2000764")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE738DC", Offset = "0xE738DC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE738DC", Offset = "0xE738DC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE738DC", Offset = "0xE738DC")]
	public class NPCSetAnimatorBool : CallableActionNode<string, string, bool>
	{
		[Token(Token = "0x60025F8")]
		[Address(RVA = "0x114A9D4", Offset = "0x114A9D4", VA = "0x114A9D4", Slot = "12")]
		public override void Invoke(string npcId, string boolId, bool setActive)
		{
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0x114AB04", Offset = "0x114AB04", VA = "0x114AB04")]
		public NPCSetAnimatorBool()
		{
		}
	}
	[Token(Token = "0x2000765")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73964", Offset = "0xE73964")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73964", Offset = "0xE73964")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73964", Offset = "0xE73964")]
	public class NPCSetAnimatorTrigger : CallableActionNode<string, string>
	{
		[Token(Token = "0x60025FA")]
		[Address(RVA = "0x114AB50", Offset = "0x114AB50", VA = "0x114AB50", Slot = "12")]
		public override void Invoke(string npcId, string boolId)
		{
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x114AC78", Offset = "0x114AC78", VA = "0x114AC78")]
		public NPCSetAnimatorTrigger()
		{
		}
	}
	[Token(Token = "0x2000766")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE739EC", Offset = "0xE739EC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE739EC", Offset = "0xE739EC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE739EC", Offset = "0xE739EC")]
	public class NPCLookAtNode : LatentActionNode<string, Transform, float, bool>
	{
		[Token(Token = "0x2000767")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE73A74", Offset = "0xE73A74")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string npcId;

			[Token(Token = "0x4001F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool eyesOnly;

			[Token(Token = "0x4001F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform target;

			[Token(Token = "0x4001F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float time;

			[Token(Token = "0x170003FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002601")]
				[Address(RVA = "0x32BD728", Offset = "0x32BD728", VA = "0x32BD728", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000400")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002603")]
				[Address(RVA = "0x32BD770", Offset = "0x32BD770", VA = "0x32BD770", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025FE")]
			[Address(RVA = "0x32BD578", Offset = "0x32BD578", VA = "0x32BD578")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60025FF")]
			[Address(RVA = "0x32BD5A4", Offset = "0x32BD5A4", VA = "0x32BD5A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002600")]
			[Address(RVA = "0x32BD5A8", Offset = "0x32BD5A8", VA = "0x32BD5A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002602")]
			[Address(RVA = "0x32BD730", Offset = "0x32BD730", VA = "0x32BD730", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x1148508", Offset = "0x1148508", VA = "0x1148508", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE97EE4", Offset = "0xE97EE4")]
		public override IEnumerator Invoke(string npcId, Transform target, float time, bool eyesOnly)
		{
			return null;
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x11485B8", Offset = "0x11485B8", VA = "0x11485B8")]
		public NPCLookAtNode()
		{
		}
	}
	[Token(Token = "0x2000768")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73A84", Offset = "0xE73A84")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73A84", Offset = "0xE73A84")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73A84", Offset = "0xE73A84")]
	public class NPCLookAtPlayerNode : LatentActionNode<string, float, bool>
	{
		[Token(Token = "0x2000769")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE73B0C", Offset = "0xE73B0C")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string npcId;

			[Token(Token = "0x4001F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool eyesOnly;

			[Token(Token = "0x4001F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float time;

			[Token(Token = "0x17000401")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002609")]
				[Address(RVA = "0x32BD918", Offset = "0x32BD918", VA = "0x32BD918", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000402")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600260B")]
				[Address(RVA = "0x32BD960", Offset = "0x32BD960", VA = "0x32BD960", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002606")]
			[Address(RVA = "0x32BD778", Offset = "0x32BD778", VA = "0x32BD778")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002607")]
			[Address(RVA = "0x32BD7A4", Offset = "0x32BD7A4", VA = "0x32BD7A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002608")]
			[Address(RVA = "0x32BD7A8", Offset = "0x32BD7A8", VA = "0x32BD7A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600260A")]
			[Address(RVA = "0x32BD920", Offset = "0x32BD920", VA = "0x32BD920", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0x1148604", Offset = "0x1148604", VA = "0x1148604", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE97F94", Offset = "0xE97F94")]
		public override IEnumerator Invoke(string npcId, float time, bool eyesOnly)
		{
			return null;
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0x11486A0", Offset = "0x11486A0", VA = "0x11486A0")]
		public NPCLookAtPlayerNode()
		{
		}
	}
	[Token(Token = "0x200076A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73B1C", Offset = "0xE73B1C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73B1C", Offset = "0xE73B1C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73B1C", Offset = "0xE73B1C")]
	public class NPCStopLookingAtNode : CallableActionNode<string>
	{
		[Token(Token = "0x600260C")]
		[Address(RVA = "0x114B7AC", Offset = "0x114B7AC", VA = "0x114B7AC", Slot = "12")]
		public override void Invoke(string npcId)
		{
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0x114B8B4", Offset = "0x114B8B4", VA = "0x114B8B4")]
		public NPCStopLookingAtNode()
		{
		}
	}
	[Token(Token = "0x200076B")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73BA4", Offset = "0xE73BA4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73BA4", Offset = "0xE73BA4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73BA4", Offset = "0xE73BA4")]
	public class SetAimClampWeight : CallableActionNode<string, float>
	{
		[Token(Token = "0x600260E")]
		[Address(RVA = "0x32DABAC", Offset = "0x32DABAC", VA = "0x32DABAC", Slot = "12")]
		public override void Invoke(string npcId, float weight)
		{
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0x32DACCC", Offset = "0x32DACCC", VA = "0x32DACCC")]
		public SetAimClampWeight()
		{
		}
	}
	[Token(Token = "0x200076C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73C2C", Offset = "0xE73C2C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73C2C", Offset = "0xE73C2C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73C2C", Offset = "0xE73C2C")]
	public class NPCAimAtNode : CallableActionNode<string, Transform>
	{
		[Token(Token = "0x6002610")]
		[Address(RVA = "0x11459CC", Offset = "0x11459CC", VA = "0x11459CC", Slot = "12")]
		public override void Invoke(string npcId, Transform target)
		{
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0x1145BA8", Offset = "0x1145BA8", VA = "0x1145BA8")]
		public NPCAimAtNode()
		{
		}
	}
	[Token(Token = "0x200076D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73CB4", Offset = "0xE73CB4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73CB4", Offset = "0xE73CB4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73CB4", Offset = "0xE73CB4")]
	public class NPCToggleAngleLimits : CallableActionNode<string, bool>
	{
		[Token(Token = "0x6002612")]
		[Address(RVA = "0x114B968", Offset = "0x114B968", VA = "0x114B968", Slot = "12")]
		public override void Invoke(string npcId, bool limit)
		{
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0x114BA84", Offset = "0x114BA84", VA = "0x114BA84")]
		public NPCToggleAngleLimits()
		{
		}
	}
	[Token(Token = "0x200076E")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73D3C", Offset = "0xE73D3C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73D3C", Offset = "0xE73D3C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73D3C", Offset = "0xE73D3C")]
	public class NPCSetIKDistanceLimits : CallableActionNode<string, bool, float>
	{
		[Token(Token = "0x6002614")]
		[Address(RVA = "0x114ACC4", Offset = "0x114ACC4", VA = "0x114ACC4", Slot = "12")]
		public override void Invoke(string npcId, bool limit, float distance = 3f)
		{
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0x114ADF4", Offset = "0x114ADF4", VA = "0x114ADF4")]
		public NPCSetIKDistanceLimits()
		{
		}
	}
	[Token(Token = "0x200076F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73DC4", Offset = "0xE73DC4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73DC4", Offset = "0xE73DC4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73DC4", Offset = "0xE73DC4")]
	public class NPCLookAtEyesIKNode : CallableActionNode<string, bool, bool, bool>
	{
		[Token(Token = "0x6002616")]
		[Address(RVA = "0x1148230", Offset = "0x1148230", VA = "0x1148230", Slot = "12")]
		public override void Invoke(string npcId, bool head, bool eyes, bool clampSpine)
		{
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0x11483C0", Offset = "0x11483C0", VA = "0x11483C0")]
		public NPCLookAtEyesIKNode()
		{
		}
	}
	[Token(Token = "0x2000770")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73E4C", Offset = "0xE73E4C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73E4C", Offset = "0xE73E4C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73E4C", Offset = "0xE73E4C")]
	public class NPCAimAtPlayerRightEyeNode : CallableActionNode<string>
	{
		[Token(Token = "0x6002618")]
		[Address(RVA = "0x1145E9C", Offset = "0x1145E9C", VA = "0x1145E9C", Slot = "12")]
		public override void Invoke(string npcId)
		{
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0x1145FA4", Offset = "0x1145FA4", VA = "0x1145FA4")]
		public NPCAimAtPlayerRightEyeNode()
		{
		}
	}
	[Token(Token = "0x2000771")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73ED4", Offset = "0xE73ED4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73ED4", Offset = "0xE73ED4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73ED4", Offset = "0xE73ED4")]
	public class SetLocalPositionOfSingleEyeAimAtTransform : CallableActionNode<Vector3>
	{
		[Token(Token = "0x600261A")]
		[Address(RVA = "0x32DB714", Offset = "0x32DB714", VA = "0x32DB714", Slot = "12")]
		public override void Invoke(Vector3 localPosition)
		{
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0x32DB768", Offset = "0x32DB768", VA = "0x32DB768")]
		public SetLocalPositionOfSingleEyeAimAtTransform()
		{
		}
	}
	[Token(Token = "0x2000772")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73F5C", Offset = "0xE73F5C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73F5C", Offset = "0xE73F5C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73F5C", Offset = "0xE73F5C")]
	public class NPCAimAtPlayerHeadNode : CallableActionNode<string>
	{
		[Token(Token = "0x600261C")]
		[Address(RVA = "0x1145D48", Offset = "0x1145D48", VA = "0x1145D48", Slot = "12")]
		public override void Invoke(string npcId)
		{
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0x1145E50", Offset = "0x1145E50", VA = "0x1145E50")]
		public NPCAimAtPlayerHeadNode()
		{
		}
	}
	[Token(Token = "0x2000773")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE73FE4", Offset = "0xE73FE4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE73FE4", Offset = "0xE73FE4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE73FE4", Offset = "0xE73FE4")]
	public class NPCAimAtPlayerBodyNode : CallableActionNode<string>
	{
		[Token(Token = "0x600261E")]
		[Address(RVA = "0x1145BF4", Offset = "0x1145BF4", VA = "0x1145BF4", Slot = "12")]
		public override void Invoke(string npcId)
		{
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0x1145CFC", Offset = "0x1145CFC", VA = "0x1145CFC")]
		public NPCAimAtPlayerBodyNode()
		{
		}
	}
	[Token(Token = "0x2000774")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7406C", Offset = "0xE7406C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7406C", Offset = "0xE7406C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7406C", Offset = "0xE7406C")]
	public class NPCStopAimingAtNode : CallableActionNode<string>
	{
		[Token(Token = "0x6002620")]
		[Address(RVA = "0x114B108", Offset = "0x114B108", VA = "0x114B108", Slot = "12")]
		public override void Invoke(string npcId)
		{
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0x114B210", Offset = "0x114B210", VA = "0x114B210")]
		public NPCStopAimingAtNode()
		{
		}
	}
	[Token(Token = "0x2000775")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE740F4", Offset = "0xE740F4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE740F4", Offset = "0xE740F4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE740F4", Offset = "0xE740F4")]
	public class NPCChangeToLeftArmAimNode : CallableActionNode<string>
	{
		[Token(Token = "0x6002622")]
		[Address(RVA = "0x1147AC4", Offset = "0x1147AC4", VA = "0x1147AC4", Slot = "12")]
		public override void Invoke(string npcId)
		{
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0x1147BCC", Offset = "0x1147BCC", VA = "0x1147BCC")]
		public NPCChangeToLeftArmAimNode()
		{
		}
	}
	[Token(Token = "0x2000776")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7417C", Offset = "0xE7417C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7417C", Offset = "0xE7417C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7417C", Offset = "0xE7417C")]
	public class NPCChangeToRightArmAimNode : CallableActionNode<string>
	{
		[Token(Token = "0x6002624")]
		[Address(RVA = "0x1147C18", Offset = "0x1147C18", VA = "0x1147C18", Slot = "12")]
		public override void Invoke(string npcId)
		{
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0x1147D20", Offset = "0x1147D20", VA = "0x1147D20")]
		public NPCChangeToRightArmAimNode()
		{
		}
	}
	[Token(Token = "0x2000777")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE74204", Offset = "0xE74204")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE74204", Offset = "0xE74204")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE74204", Offset = "0xE74204")]
	public class NPCStopAutoBlinkingNode : CallableActionNode<string>
	{
		[Token(Token = "0x6002626")]
		[Address(RVA = "0x114B658", Offset = "0x114B658", VA = "0x114B658", Slot = "12")]
		public override void Invoke(string npcId)
		{
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0x114B760", Offset = "0x114B760", VA = "0x114B760")]
		public NPCStopAutoBlinkingNode()
		{
		}
	}
	[Token(Token = "0x2000778")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7428C", Offset = "0xE7428C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7428C", Offset = "0xE7428C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7428C", Offset = "0xE7428C")]
	public class NPCStartAutoBlinkingNode : CallableActionNode<string>
	{
		[Token(Token = "0x6002628")]
		[Address(RVA = "0x114AF4C", Offset = "0x114AF4C", VA = "0x114AF4C", Slot = "12")]
		public override void Invoke(string npcId)
		{
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0x114B054", Offset = "0x114B054", VA = "0x114B054")]
		public NPCStartAutoBlinkingNode()
		{
		}
	}
	[Token(Token = "0x2000779")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE74314", Offset = "0xE74314")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE74314", Offset = "0xE74314")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE74314", Offset = "0xE74314")]
	public class NPCPlayAnimStateNode : LatentActionNode<string, List<AnimationClip>, bool>
	{
		[Token(Token = "0x200077A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7439C", Offset = "0xE7439C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool hasFinished;

			[Token(Token = "0x600262C")]
			[Address(RVA = "0x32BEC38", Offset = "0x32BEC38", VA = "0x32BEC38")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600262D")]
			[Address(RVA = "0x32BEC40", Offset = "0x32BEC40", VA = "0x32BEC40")]
			internal bool <Invoke>g__HasFinished|0()
			{
				return default(bool);
			}

			[Token(Token = "0x600262E")]
			[Address(RVA = "0x32BEC48", Offset = "0x32BEC48", VA = "0x32BEC48")]
			internal void <Invoke>g__ONComplete|1()
			{
			}
		}

		[Token(Token = "0x200077B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE743AC", Offset = "0xE743AC")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string npcId;

			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<AnimationClip> clips;

			[Token(Token = "0x4001F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool transitionToWaypoint;

			[Token(Token = "0x17000403")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002632")]
				[Address(RVA = "0x32BEED4", Offset = "0x32BEED4", VA = "0x32BEED4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000404")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002634")]
				[Address(RVA = "0x32BEF1C", Offset = "0x32BEF1C", VA = "0x32BEF1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600262F")]
			[Address(RVA = "0x32BEC54", Offset = "0x32BEC54", VA = "0x32BEC54")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002630")]
			[Address(RVA = "0x32BEC80", Offset = "0x32BEC80", VA = "0x32BEC80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002631")]
			[Address(RVA = "0x32BEC84", Offset = "0x32BEC84", VA = "0x32BEC84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002633")]
			[Address(RVA = "0x32BEEDC", Offset = "0x32BEEDC", VA = "0x32BEEDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0x114A160", Offset = "0x114A160", VA = "0x114A160", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE98044", Offset = "0xE98044")]
		public override IEnumerator Invoke(string npcId, List<AnimationClip> clips, bool transitionToWaypoint)
		{
			return null;
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0x114A200", Offset = "0x114A200", VA = "0x114A200")]
		public NPCPlayAnimStateNode()
		{
		}
	}
	[Token(Token = "0x200077C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE743BC", Offset = "0xE743BC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE743BC", Offset = "0xE743BC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE743BC", Offset = "0xE743BC")]
	public class NPCStopAnimationClipStateNode : CallableActionNode<string>
	{
		[Token(Token = "0x6002635")]
		[Address(RVA = "0x114B3B0", Offset = "0x114B3B0", VA = "0x114B3B0", Slot = "12")]
		public override void Invoke(string npcId)
		{
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0x114B4B8", Offset = "0x114B4B8", VA = "0x114B4B8")]
		public NPCStopAnimationClipStateNode()
		{
		}
	}
	[Token(Token = "0x200077D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE74444", Offset = "0xE74444")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE74444", Offset = "0xE74444")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE74444", Offset = "0xE74444")]
	public class NPCStopAnimationStateNode : CallableActionNode<string>
	{
		[Token(Token = "0x6002637")]
		[Address(RVA = "0x114B504", Offset = "0x114B504", VA = "0x114B504", Slot = "12")]
		public override void Invoke(string npcId)
		{
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0x114B60C", Offset = "0x114B60C", VA = "0x114B60C")]
		public NPCStopAnimationStateNode()
		{
		}
	}
	[Token(Token = "0x200077E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE744CC", Offset = "0xE744CC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE744CC", Offset = "0xE744CC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE744CC", Offset = "0xE744CC")]
	public class NPCMoveToPositionAndStartCombatNode : LatentActionNode<CombatLogic, Transform, NPCNavigation.NpcMovementSpeed>
	{
		[Token(Token = "0x200077F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE74554", Offset = "0xE74554")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CombatLogic combatLogic;

			[Token(Token = "0x4001F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NPCNavigation nav;

			[Token(Token = "0x4001F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool reachedDestination;

			[Token(Token = "0x600263B")]
			[Address(RVA = "0x32BDD94", Offset = "0x32BDD94", VA = "0x32BDD94")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600263C")]
			[Address(RVA = "0x32BDD9C", Offset = "0x32BDD9C", VA = "0x32BDD9C")]
			internal bool <Invoke>g__Finished|0()
			{
				return default(bool);
			}

			[Token(Token = "0x600263D")]
			[Address(RVA = "0x32BDE44", Offset = "0x32BDE44", VA = "0x32BDE44")]
			internal void <Invoke>b__1()
			{
			}
		}

		[Token(Token = "0x2000780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE74564", Offset = "0xE74564")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CombatLogic combatLogic;

			[Token(Token = "0x4001FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass0_0 <>8__1;

			[Token(Token = "0x4001FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform target;

			[Token(Token = "0x4001FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public NPCNavigation.NpcMovementSpeed speed;

			[Token(Token = "0x17000405")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002641")]
				[Address(RVA = "0x32BE158", Offset = "0x32BE158", VA = "0x32BE158", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000406")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002643")]
				[Address(RVA = "0x32BE1A0", Offset = "0x32BE1A0", VA = "0x32BE1A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600263E")]
			[Address(RVA = "0x32BDE50", Offset = "0x32BDE50", VA = "0x32BDE50")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600263F")]
			[Address(RVA = "0x32BDE7C", Offset = "0x32BDE7C", VA = "0x32BDE7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002640")]
			[Address(RVA = "0x32BDE80", Offset = "0x32BDE80", VA = "0x32BDE80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002642")]
			[Address(RVA = "0x32BE160", Offset = "0x32BE160", VA = "0x32BE160", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0x11488B4", Offset = "0x11488B4", VA = "0x11488B4", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE980F4", Offset = "0xE980F4")]
		public override IEnumerator Invoke(CombatLogic combatLogic, Transform target, NPCNavigation.NpcMovementSpeed speed)
		{
			return null;
		}

		[Token(Token = "0x600263A")]
		[Address(RVA = "0x1148950", Offset = "0x1148950", VA = "0x1148950")]
		public NPCMoveToPositionAndStartCombatNode()
		{
		}
	}
	[Token(Token = "0x2000781")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE74574", Offset = "0xE74574")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE74574", Offset = "0xE74574")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE74574", Offset = "0xE74574")]
	public class NPCStartCombatNode : CallableActionNode<CombatAI>
	{
		[Token(Token = "0x6002644")]
		[Address(RVA = "0x114B0A0", Offset = "0x114B0A0", VA = "0x114B0A0", Slot = "12")]
		public override void Invoke(CombatAI combatLogic)
		{
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0x114B0BC", Offset = "0x114B0BC", VA = "0x114B0BC")]
		public NPCStartCombatNode()
		{
		}
	}
	[Token(Token = "0x2000782")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE745FC", Offset = "0xE745FC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE745FC", Offset = "0xE745FC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE745FC", Offset = "0xE745FC")]
	public class NPCMoveToPositionNode : LatentActionNode<NPCNavigation, Transform, NPCNavigation.NpcMovementSpeed>
	{
		[Token(Token = "0x2000783")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE74684", Offset = "0xE74684")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool finished;

			[Token(Token = "0x4001FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NPCNavigation nav;

			[Token(Token = "0x6002648")]
			[Address(RVA = "0x32BE1A8", Offset = "0x32BE1A8", VA = "0x32BE1A8")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002649")]
			[Address(RVA = "0x32BE1B0", Offset = "0x32BE1B0", VA = "0x32BE1B0")]
			internal void <Invoke>b__0()
			{
			}

			[Token(Token = "0x600264A")]
			[Address(RVA = "0x32BE1BC", Offset = "0x32BE1BC", VA = "0x32BE1BC")]
			internal bool <Invoke>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE74694", Offset = "0xE74694")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NPCNavigation nav;

			[Token(Token = "0x4001FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform target;

			[Token(Token = "0x4001FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NPCNavigation.NpcMovementSpeed speed;

			[Token(Token = "0x17000407")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600264E")]
				[Address(RVA = "0x32BE4D8", Offset = "0x32BE4D8", VA = "0x32BE4D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000408")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002650")]
				[Address(RVA = "0x32BE520", Offset = "0x32BE520", VA = "0x32BE520", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600264B")]
			[Address(RVA = "0x32BE270", Offset = "0x32BE270", VA = "0x32BE270")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600264C")]
			[Address(RVA = "0x32BE29C", Offset = "0x32BE29C", VA = "0x32BE29C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600264D")]
			[Address(RVA = "0x32BE2A0", Offset = "0x32BE2A0", VA = "0x32BE2A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600264F")]
			[Address(RVA = "0x32BE4E0", Offset = "0x32BE4E0", VA = "0x32BE4E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0x114899C", Offset = "0x114899C", VA = "0x114899C", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE981A4", Offset = "0xE981A4")]
		public override IEnumerator Invoke(NPCNavigation nav, Transform target, NPCNavigation.NpcMovementSpeed speed)
		{
			return null;
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0x1148A38", Offset = "0x1148A38", VA = "0x1148A38")]
		public NPCMoveToPositionNode()
		{
		}
	}
	[Token(Token = "0x2000785")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE746A4", Offset = "0xE746A4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE746A4", Offset = "0xE746A4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE746A4", Offset = "0xE746A4")]
	public class NPCMultiMoveToPositionNode : LatentActionNode<List<NPCNavigation>, List<Transform>, NPCNavigation.NpcMovementSpeed>
	{
		[Token(Token = "0x2000786")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7472C", Offset = "0xE7472C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int count;

			[Token(Token = "0x4001FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int npcCount;

			[Token(Token = "0x4001FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action <>9__1;

			[Token(Token = "0x6002653")]
			[Address(RVA = "0x32BE528", Offset = "0x32BE528", VA = "0x32BE528")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002654")]
			[Address(RVA = "0x32BE530", Offset = "0x32BE530", VA = "0x32BE530")]
			internal void <Invoke>b__1()
			{
			}

			[Token(Token = "0x6002655")]
			[Address(RVA = "0x32BE540", Offset = "0x32BE540", VA = "0x32BE540")]
			internal bool <Invoke>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000787")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7473C", Offset = "0xE7473C")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<NPCNavigation> npcs;

			[Token(Token = "0x4001FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<Transform> targets;

			[Token(Token = "0x4001FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NPCNavigation.NpcMovementSpeed speed;

			[Token(Token = "0x17000409")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002659")]
				[Address(RVA = "0x32BE878", Offset = "0x32BE878", VA = "0x32BE878", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600265B")]
				[Address(RVA = "0x32BE8C0", Offset = "0x32BE8C0", VA = "0x32BE8C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002656")]
			[Address(RVA = "0x32BE550", Offset = "0x32BE550", VA = "0x32BE550")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002657")]
			[Address(RVA = "0x32BE57C", Offset = "0x32BE57C", VA = "0x32BE57C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002658")]
			[Address(RVA = "0x32BE580", Offset = "0x32BE580", VA = "0x32BE580", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600265A")]
			[Address(RVA = "0x32BE880", Offset = "0x32BE880", VA = "0x32BE880", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0x1149904", Offset = "0x1149904", VA = "0x1149904", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE98254", Offset = "0xE98254")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE98254", Offset = "0xE98254")]
		public override IEnumerator Invoke(List<NPCNavigation> npcs, List<Transform> targets, NPCNavigation.NpcMovementSpeed speed)
		{
			return null;
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0x11499A0", Offset = "0x11499A0", VA = "0x11499A0")]
		public NPCMultiMoveToPositionNode()
		{
		}
	}
	[Token(Token = "0x2000788")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7474C", Offset = "0xE7474C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7474C", Offset = "0xE7474C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7474C", Offset = "0xE7474C")]
	public class NPCLookAtSomethingNode : LatentActionNode<NPCNavigation, Transform>
	{
		[Token(Token = "0x2000789")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE747D4", Offset = "0xE747D4")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool hasFinished;

			[Token(Token = "0x600265E")]
			[Address(RVA = "0x32BD968", Offset = "0x32BD968", VA = "0x32BD968")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600265F")]
			[Address(RVA = "0x32BD970", Offset = "0x32BD970", VA = "0x32BD970")]
			internal bool <Invoke>g__Finished|0()
			{
				return default(bool);
			}

			[Token(Token = "0x6002660")]
			[Address(RVA = "0x32BD978", Offset = "0x32BD978", VA = "0x32BD978")]
			internal void <Invoke>g__Finish|1()
			{
			}
		}

		[Token(Token = "0x200078A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE747E4", Offset = "0xE747E4")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NPCNavigation nav;

			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform target;

			[Token(Token = "0x1700040B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002664")]
				[Address(RVA = "0x32BDB38", Offset = "0x32BDB38", VA = "0x32BDB38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002666")]
				[Address(RVA = "0x32BDB80", Offset = "0x32BDB80", VA = "0x32BDB80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002661")]
			[Address(RVA = "0x32BD984", Offset = "0x32BD984", VA = "0x32BD984")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002662")]
			[Address(RVA = "0x32BD9B0", Offset = "0x32BD9B0", VA = "0x32BD9B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002663")]
			[Address(RVA = "0x32BD9B4", Offset = "0x32BD9B4", VA = "0x32BD9B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002665")]
			[Address(RVA = "0x32BDB40", Offset = "0x32BDB40", VA = "0x32BDB40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0x11486EC", Offset = "0x11486EC", VA = "0x11486EC", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE98350", Offset = "0xE98350")]
		public override IEnumerator Invoke(NPCNavigation nav, Transform target)
		{
			return null;
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0x1148780", Offset = "0x1148780", VA = "0x1148780")]
		public NPCLookAtSomethingNode()
		{
		}
	}
	[Token(Token = "0x200078B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE747F4", Offset = "0xE747F4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE747F4", Offset = "0xE747F4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE747F4", Offset = "0xE747F4")]
	public class NPCTurnToFaceForwardDirectionNode : LatentActionNode<NPCNavigation, Transform>
	{
		[Token(Token = "0x200078C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7487C", Offset = "0xE7487C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool hasFinished;

			[Token(Token = "0x6002669")]
			[Address(RVA = "0x32BF9C8", Offset = "0x32BF9C8", VA = "0x32BF9C8")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600266A")]
			[Address(RVA = "0x32BF9D0", Offset = "0x32BF9D0", VA = "0x32BF9D0")]
			internal bool <Invoke>g__Finished|0()
			{
				return default(bool);
			}

			[Token(Token = "0x600266B")]
			[Address(RVA = "0x32BF9D8", Offset = "0x32BF9D8", VA = "0x32BF9D8")]
			internal void <Invoke>g__Finish|1()
			{
			}
		}

		[Token(Token = "0x200078D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7488C", Offset = "0xE7488C")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform transform;

			[Token(Token = "0x4001FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NPCNavigation nav;

			[Token(Token = "0x1700040D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600266F")]
				[Address(RVA = "0x32BFBB8", Offset = "0x32BFBB8", VA = "0x32BFBB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002671")]
				[Address(RVA = "0x32BFC00", Offset = "0x32BFC00", VA = "0x32BFC00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600266C")]
			[Address(RVA = "0x32BF9E4", Offset = "0x32BF9E4", VA = "0x32BF9E4")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600266D")]
			[Address(RVA = "0x32BFA10", Offset = "0x32BFA10", VA = "0x32BFA10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600266E")]
			[Address(RVA = "0x32BFA14", Offset = "0x32BFA14", VA = "0x32BFA14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002670")]
			[Address(RVA = "0x32BFBC0", Offset = "0x32BFBC0", VA = "0x32BFBC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0x114BF8C", Offset = "0x114BF8C", VA = "0x114BF8C", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE98400", Offset = "0xE98400")]
		public override IEnumerator Invoke(NPCNavigation nav, Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0x114C020", Offset = "0x114C020", VA = "0x114C020")]
		public NPCTurnToFaceForwardDirectionNode()
		{
		}
	}
	[Token(Token = "0x200078E")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7489C", Offset = "0xE7489C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7489C", Offset = "0xE7489C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7489C", Offset = "0xE7489C")]
	public class NPCMoveThroughWaypoints : LatentActionNode<NPCNavigation, List<Transform>, NPCNavigation.NpcMovementSpeed>
	{
		[Token(Token = "0x200078F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE74924", Offset = "0xE74924")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool finished;

			[Token(Token = "0x6002674")]
			[Address(RVA = "0x32BDB88", Offset = "0x32BDB88", VA = "0x32BDB88")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002675")]
			[Address(RVA = "0x32BDB90", Offset = "0x32BDB90", VA = "0x32BDB90")]
			internal void <Invoke>b__0()
			{
			}
		}

		[Token(Token = "0x2000790")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE74934", Offset = "0xE74934")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NPCNavigation nav;

			[Token(Token = "0x4001FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<Transform> waypoints;

			[Token(Token = "0x4001FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NPCNavigation.NpcMovementSpeed speed;

			[Token(Token = "0x4001FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass0_0 <>8__1;

			[Token(Token = "0x1700040F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002679")]
				[Address(RVA = "0x32BDD44", Offset = "0x32BDD44", VA = "0x32BDD44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000410")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600267B")]
				[Address(RVA = "0x32BDD8C", Offset = "0x32BDD8C", VA = "0x32BDD8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002676")]
			[Address(RVA = "0x32BDB9C", Offset = "0x32BDB9C", VA = "0x32BDB9C")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002677")]
			[Address(RVA = "0x32BDBC8", Offset = "0x32BDBC8", VA = "0x32BDBC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002678")]
			[Address(RVA = "0x32BDBCC", Offset = "0x32BDBCC", VA = "0x32BDBCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600267A")]
			[Address(RVA = "0x32BDD4C", Offset = "0x32BDD4C", VA = "0x32BDD4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0x11487CC", Offset = "0x11487CC", VA = "0x11487CC", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE984B0", Offset = "0xE984B0")]
		public override IEnumerator Invoke(NPCNavigation nav, List<Transform> waypoints, NPCNavigation.NpcMovementSpeed speed)
		{
			return null;
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0x1148868", Offset = "0x1148868", VA = "0x1148868")]
		public NPCMoveThroughWaypoints()
		{
		}
	}
	[Token(Token = "0x2000791")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE74944", Offset = "0xE74944")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE74944", Offset = "0xE74944")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE74944", Offset = "0xE74944")]
	public class NPCUpdateTarget : CallableActionNode<NPCNavigation, Transform>
	{
		[Token(Token = "0x600267C")]
		[Address(RVA = "0x114C0EC", Offset = "0x114C0EC", VA = "0x114C0EC", Slot = "12")]
		public override void Invoke(NPCNavigation nav, Transform target)
		{
		}

		[Token(Token = "0x600267D")]
		[Address(RVA = "0x114C10C", Offset = "0x114C10C", VA = "0x114C10C")]
		public NPCUpdateTarget()
		{
		}
	}
	[Token(Token = "0x2000792")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE749CC", Offset = "0xE749CC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE749CC", Offset = "0xE749CC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE749CC", Offset = "0xE749CC")]
	public class NPCUpdatePlayerTarget : CallableActionNode<NPCNavigation>
	{
		[Token(Token = "0x600267E")]
		[Address(RVA = "0x114C06C", Offset = "0x114C06C", VA = "0x114C06C", Slot = "12")]
		public override void Invoke(NPCNavigation nav)
		{
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0x114C0A0", Offset = "0x114C0A0", VA = "0x114C0A0")]
		public NPCUpdatePlayerTarget()
		{
		}
	}
	[Token(Token = "0x2000793")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE74A54", Offset = "0xE74A54")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE74A54", Offset = "0xE74A54")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE74A54", Offset = "0xE74A54")]
	public class ChasePlayerNode : LatentActionNode<NPCNavigation, float, NPCNavigation.NpcMovementSpeed>
	{
		[Token(Token = "0x2000794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE74ADC", Offset = "0xE74ADC")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000411")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002685")]
				[Address(RVA = "0x16A404C", Offset = "0x16A404C", VA = "0x16A404C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000412")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002687")]
				[Address(RVA = "0x16A4094", Offset = "0x16A4094", VA = "0x16A4094", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002682")]
			[Address(RVA = "0x16A3FC0", Offset = "0x16A3FC0", VA = "0x16A3FC0")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002683")]
			[Address(RVA = "0x16A3FEC", Offset = "0x16A3FEC", VA = "0x16A3FEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002684")]
			[Address(RVA = "0x16A3FF0", Offset = "0x16A3FF0", VA = "0x16A3FF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002686")]
			[Address(RVA = "0x16A4054", Offset = "0x16A4054", VA = "0x16A4054", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002680")]
		[Address(RVA = "0x12083A0", Offset = "0x12083A0", VA = "0x12083A0", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE98560", Offset = "0xE98560")]
		public override IEnumerator Invoke(NPCNavigation nav, float dist, NPCNavigation.NpcMovementSpeed speed)
		{
			return null;
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0x12083FC", Offset = "0x12083FC", VA = "0x12083FC")]
		public ChasePlayerNode()
		{
		}
	}
	[Token(Token = "0x2000795")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE74AEC", Offset = "0xE74AEC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE74AEC", Offset = "0xE74AEC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE74AEC", Offset = "0xE74AEC")]
	public class NPCCombatSetMaxCharactersOutOfCover : CallableActionNode<int>
	{
		[Token(Token = "0x6002688")]
		[Address(RVA = "0x1147D6C", Offset = "0x1147D6C", VA = "0x1147D6C", Slot = "12")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE98610", Offset = "0xE98610")]
		public override void Invoke(int max)
		{
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0x1147E14", Offset = "0x1147E14", VA = "0x1147E14")]
		public NPCCombatSetMaxCharactersOutOfCover()
		{
		}
	}
	[Token(Token = "0x2000796")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE74B74", Offset = "0xE74B74")]
	public sealed class NPCRandomLookAt : MonoBehaviour
	{
		[Token(Token = "0x2000797")]
		private enum State
		{
			[Token(Token = "0x4001FD7")]
			Looking,
			[Token(Token = "0x4001FD8")]
			NotLooking
		}

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float maxLookAtTime;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float minLookAtTime;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xE869D4", Offset = "0xE869D4")]
		private float maxLookAtInterval;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xE86A10", Offset = "0xE86A10")]
		private float minLookAtInterval;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float distanceFromPlayer;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float minLookAtAngle;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _playerEyesIKTarget;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _playerHeadIKTarget;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _lookTime;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _lookAtInterval;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _lookTimer;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _intervalTimer;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MT_LookAtIK _lookAt;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool _shouldLookAt;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _visuals;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private State _currentState;

		[Token(Token = "0x600268A")]
		[Address(RVA = "0x114A494", Offset = "0x114A494", VA = "0x114A494")]
		private void Awake()
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0x114A570", Offset = "0x114A570", VA = "0x114A570")]
		private void Update()
		{
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0x114A854", Offset = "0x114A854", VA = "0x114A854")]
		public static float CalculateAngle180_v3(Vector3 fromDir, Vector3 toDir)
		{
			return default(float);
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0x114A8A4", Offset = "0x114A8A4", VA = "0x114A8A4")]
		public NPCRandomLookAt()
		{
		}
	}
	[Token(Token = "0x2000798")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE74BD4", Offset = "0xE74BD4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE74BD4", Offset = "0xE74BD4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE74BD4", Offset = "0xE74BD4")]
	public sealed class DoGameOverNode : LatentActionNode<string, string>
	{
		[Token(Token = "0x2000799")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE74C5C", Offset = "0xE74C5C")]
		private sealed class <Invoke>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string localisedReason;

			[Token(Token = "0x17000414")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002694")]
				[Address(RVA = "0x10306C8", Offset = "0x10306C8", VA = "0x10306C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000415")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002696")]
				[Address(RVA = "0x1030710", Offset = "0x1030710", VA = "0x1030710", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002691")]
			[Address(RVA = "0x10304A4", Offset = "0x10304A4", VA = "0x10304A4")]
			[DebuggerHidden]
			public <Invoke>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002692")]
			[Address(RVA = "0x10304D0", Offset = "0x10304D0", VA = "0x10304D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002693")]
			[Address(RVA = "0x10304D4", Offset = "0x10304D4", VA = "0x10304D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002695")]
			[Address(RVA = "0x10306D0", Offset = "0x10306D0", VA = "0x10306D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x17000413")]
		private static MT_CoroutineRunner CoroutineRunner
		{
			[Token(Token = "0x600268E")]
			[Address(RVA = "0x1008F74", Offset = "0x1008F74", VA = "0x1008F74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0x1008FD8", Offset = "0x1008FD8", VA = "0x1008FD8", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE98688", Offset = "0xE98688")]
		public override IEnumerator Invoke(string localisedReason, string continueSpawnPointID)
		{
			return null;
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0x1009050", Offset = "0x1009050", VA = "0x1009050")]
		public DoGameOverNode()
		{
		}
	}
	[Token(Token = "0x200079A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE74C6C", Offset = "0xE74C6C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE74C6C", Offset = "0xE74C6C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE74C6C", Offset = "0xE74C6C")]
	public sealed class ShowGameOverNode : LatentActionNode<string>
	{
		[Token(Token = "0x200079B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE74CF4", Offset = "0xE74CF4")]
		private sealed class <Invoke>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string localisedReason;

			[Token(Token = "0x17000417")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600269D")]
				[Address(RVA = "0x32C90CC", Offset = "0x32C90CC", VA = "0x32C90CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000418")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600269F")]
				[Address(RVA = "0x32C9114", Offset = "0x32C9114", VA = "0x32C9114", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600269A")]
			[Address(RVA = "0x32C8E6C", Offset = "0x32C8E6C", VA = "0x32C8E6C")]
			[DebuggerHidden]
			public <Invoke>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600269B")]
			[Address(RVA = "0x32C8E98", Offset = "0x32C8E98", VA = "0x32C8E98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600269C")]
			[Address(RVA = "0x32C8E9C", Offset = "0x32C8E9C", VA = "0x32C8E9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600269E")]
			[Address(RVA = "0x32C90D4", Offset = "0x32C90D4", VA = "0x32C90D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x17000416")]
		private static MT_CoroutineRunner CoroutineRunner
		{
			[Token(Token = "0x6002697")]
			[Address(RVA = "0x32DCD3C", Offset = "0x32DCD3C", VA = "0x32DCD3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0x32DCDA0", Offset = "0x32DCDA0", VA = "0x32DCDA0", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE98738", Offset = "0xE98738")]
		public override IEnumerator Invoke(string localisedReason)
		{
			return null;
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0x32DCE18", Offset = "0x32DCE18", VA = "0x32DCE18")]
		public ShowGameOverNode()
		{
		}
	}
	[Token(Token = "0x200079C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE74D04", Offset = "0xE74D04")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE74D04", Offset = "0xE74D04")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE74D04", Offset = "0xE74D04")]
	public sealed class ShowDemoEndNode : LatentActionNode
	{
		[Token(Token = "0x200079D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE74D8C", Offset = "0xE74D8C")]
		private sealed class <Invoke>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700041A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026A6")]
				[Address(RVA = "0x32C8E1C", Offset = "0x32C8E1C", VA = "0x32C8E1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026A8")]
				[Address(RVA = "0x32C8E64", Offset = "0x32C8E64", VA = "0x32C8E64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026A3")]
			[Address(RVA = "0x32C8CB0", Offset = "0x32C8CB0", VA = "0x32C8CB0")]
			[DebuggerHidden]
			public <Invoke>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60026A4")]
			[Address(RVA = "0x32C8CDC", Offset = "0x32C8CDC", VA = "0x32C8CDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026A5")]
			[Address(RVA = "0x32C8CE0", Offset = "0x32C8CE0", VA = "0x32C8CE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026A7")]
			[Address(RVA = "0x32C8E24", Offset = "0x32C8E24", VA = "0x32C8E24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x17000419")]
		private static MT_CoroutineRunner CoroutineRunner
		{
			[Token(Token = "0x60026A0")]
			[Address(RVA = "0x32DCC74", Offset = "0x32DCC74", VA = "0x32DCC74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0x32DCCD8", Offset = "0x32DCCD8", VA = "0x32DCCD8", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE987E8", Offset = "0xE987E8")]
		public override IEnumerator Invoke()
		{
			return null;
		}

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0x32DCD34", Offset = "0x32DCD34", VA = "0x32DCD34")]
		public ShowDemoEndNode()
		{
		}
	}
	[Token(Token = "0x200079E")]
	public static class GameOverUtils
	{
		[Token(Token = "0x200079F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE74D9C", Offset = "0xE74D9C")]
		private sealed class <GameOverVFXCo>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700041C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026AE")]
				[Address(RVA = "0x1031964", Offset = "0x1031964", VA = "0x1031964", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026B0")]
				[Address(RVA = "0x10319AC", Offset = "0x10319AC", VA = "0x10319AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026AB")]
			[Address(RVA = "0x10318D8", Offset = "0x10318D8", VA = "0x10318D8")]
			[DebuggerHidden]
			public <GameOverVFXCo>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60026AC")]
			[Address(RVA = "0x1031904", Offset = "0x1031904", VA = "0x1031904", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026AD")]
			[Address(RVA = "0x1031908", Offset = "0x1031908", VA = "0x1031908", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026AF")]
			[Address(RVA = "0x103196C", Offset = "0x103196C", VA = "0x103196C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE74DAC", Offset = "0xE74DAC")]
		private sealed class <CombatGameOverVFxCo>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700041E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026B4")]
				[Address(RVA = "0x1031888", Offset = "0x1031888", VA = "0x1031888", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026B6")]
				[Address(RVA = "0x10318D0", Offset = "0x10318D0", VA = "0x10318D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026B1")]
			[Address(RVA = "0x10317FC", Offset = "0x10317FC", VA = "0x10317FC")]
			[DebuggerHidden]
			public <CombatGameOverVFxCo>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60026B2")]
			[Address(RVA = "0x1031828", Offset = "0x1031828", VA = "0x1031828", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026B3")]
			[Address(RVA = "0x103182C", Offset = "0x103182C", VA = "0x103182C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026B5")]
			[Address(RVA = "0x1031890", Offset = "0x1031890", VA = "0x1031890", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0x10D16D4", Offset = "0x10D16D4", VA = "0x10D16D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE98898", Offset = "0xE98898")]
		public static IEnumerator GameOverVFXCo()
		{
			return null;
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0x10D1730", Offset = "0x10D1730", VA = "0x10D1730")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE988F8", Offset = "0xE988F8")]
		public static IEnumerator CombatGameOverVFxCo()
		{
			return null;
		}
	}
	[Token(Token = "0x20007A1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE74DBC", Offset = "0xE74DBC")]
	public sealed class InstinctColours : ScriptableObject
	{
		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color32 AdditionalInteractable;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color32 CombatInformation;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color32 HiddenItem;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color32 NarrativeItem;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color32 StealthInformation;

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0x10DDC78", Offset = "0x10DDC78", VA = "0x10DDC78")]
		public InstinctColours()
		{
		}
	}
	[Token(Token = "0x20007A2")]
	public sealed class InstinctHighlightComponent : MonoBehaviour
	{
		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool canHighlight;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private InstinctObjectType objectType;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool isProximityBased;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float highlightProximity;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool requiresTagToHighlight;

		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string[] tags;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _highlightActive;

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0x10DDD00", Offset = "0x10DDD00", VA = "0x10DDD00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0x10DDE44", Offset = "0x10DDE44", VA = "0x10DDE44")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0x10DDF88", Offset = "0x10DDF88", VA = "0x10DDF88")]
		public void SetCanHighlight()
		{
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0x10DDF94", Offset = "0x10DDF94", VA = "0x10DDF94")]
		public void SetCannotHighlight()
		{
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0x10DDF9C", Offset = "0x10DDF9C", VA = "0x10DDF9C")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE989F8", Offset = "0xE989F8")]
		public void EnableHighlight(InstinctObjectType[] types, bool forceHighlight = false)
		{
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0x10DE184", Offset = "0x10DE184", VA = "0x10DE184")]
		private void ShowHighlightVisuals(InstinctObjectType type)
		{
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0x10DA37C", Offset = "0x10DA37C", VA = "0x10DA37C")]
		public void DisableHighlight()
		{
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0x10DE6B8", Offset = "0x10DE6B8", VA = "0x10DE6B8")]
		private void HideHighlightVisuals()
		{
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0x10DE8D4", Offset = "0x10DE8D4", VA = "0x10DE8D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0x10DE9E0", Offset = "0x10DE9E0", VA = "0x10DE9E0")]
		public InstinctHighlightComponent()
		{
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0x10DE9F0", Offset = "0x10DE9F0", VA = "0x10DE9F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98A70", Offset = "0xE98A70")]
		private bool <EnableHighlight>b__11_0(InstinctObjectType x)
		{
			return default(bool);
		}

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0x10DEA00", Offset = "0x10DEA00", VA = "0x10DEA00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98A80", Offset = "0xE98A80")]
		private bool <EnableHighlight>b__11_1(InstinctObjectType x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007A3")]
	public enum InstinctObjectType
	{
		[Token(Token = "0x4001FF2")]
		NarrativeItem,
		[Token(Token = "0x4001FF3")]
		AdditionalInteractable,
		[Token(Token = "0x4001FF4")]
		StealthInformation,
		[Token(Token = "0x4001FF5")]
		CombatInformation,
		[Token(Token = "0x4001FF6")]
		HiddenItem
	}
	[Token(Token = "0x20007A4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE74E00", Offset = "0xE74E00")]
	public sealed class InstinctSettings : ScriptableObject
	{
		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float InstinctDuration;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float InstinctMoveSpeed;

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0x10DEA10", Offset = "0x10DEA10", VA = "0x10DEA10")]
		public InstinctSettings()
		{
		}
	}
	[Token(Token = "0x20007A5")]
	public class InstinctSystem : IGameModule
	{
		[Token(Token = "0x20007A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE74E44", Offset = "0xE74E44")]
		private sealed class <InstinctsCo>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000423")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026D7")]
				[Address(RVA = "0x10322CC", Offset = "0x10322CC", VA = "0x10322CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000424")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026D9")]
				[Address(RVA = "0x1032314", Offset = "0x1032314", VA = "0x1032314", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026D4")]
			[Address(RVA = "0x10321A0", Offset = "0x10321A0", VA = "0x10321A0")]
			[DebuggerHidden]
			public <InstinctsCo>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60026D5")]
			[Address(RVA = "0x10321CC", Offset = "0x10321CC", VA = "0x10321CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026D6")]
			[Address(RVA = "0x10321D0", Offset = "0x10321D0", VA = "0x10321D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026D8")]
			[Address(RVA = "0x10322D4", Offset = "0x10322D4", VA = "0x10322D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20007A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE74E54", Offset = "0xE74E54")]
		private sealed class <>c
		{
			[Token(Token = "0x4002005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<InstinctHighlightComponent> <>9__25_0;

			[Token(Token = "0x60026DB")]
			[Address(RVA = "0x103217C", Offset = "0x103217C", VA = "0x103217C")]
			public <>c()
			{
			}

			[Token(Token = "0x60026DC")]
			[Address(RVA = "0x1032184", Offset = "0x1032184", VA = "0x1032184")]
			internal void <HideInstincts>b__25_0(InstinctHighlightComponent x)
			{
			}
		}

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<InstinctHighlightComponent> _components;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static InstinctSystemUnlockData _unlockData;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static InstinctSettings _settings;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Coroutine _instinctCo;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool _isCoroutineRunning;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static int CurrentUnlockLevel;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE86B1C", Offset = "0xE86B1C")]
		private static bool <InstinctsAreShowing>k__BackingField;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public static bool CanShowInstincts;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly InstinctSystemTags Tags;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE86B2C", Offset = "0xE86B2C")]
		private static InstinctColours <InstinctColours>k__BackingField;

		[Token(Token = "0x17000420")]
		private static MT_CoroutineRunner CoroutineRunner
		{
			[Token(Token = "0x60026C5")]
			[Address(RVA = "0x10DEA24", Offset = "0x10DEA24", VA = "0x10DEA24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000421")]
		public static bool InstinctsAreShowing
		{
			[Token(Token = "0x60026C7")]
			[Address(RVA = "0x10DEAF4", Offset = "0x10DEAF4", VA = "0x10DEAF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98AA0", Offset = "0xE98AA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026C6")]
			[Address(RVA = "0x10DEA88", Offset = "0x10DEA88", VA = "0x10DEA88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98A90", Offset = "0xE98A90")]
			private set
			{
			}
		}

		[Token(Token = "0x17000422")]
		public static InstinctColours InstinctColours
		{
			[Token(Token = "0x60026C9")]
			[Address(RVA = "0x10DEBC4", Offset = "0x10DEBC4", VA = "0x10DEBC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98AC0", Offset = "0xE98AC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026C8")]
			[Address(RVA = "0x10DEB58", Offset = "0x10DEB58", VA = "0x10DEB58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98AB0", Offset = "0xE98AB0")]
			private set
			{
			}
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0x10DEC28", Offset = "0x10DEC28", VA = "0x10DEC28", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0x10DEDA4", Offset = "0x10DEDA4", VA = "0x10DEDA4", Slot = "5")]
		public void Terminate()
		{
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0x10DEDA8", Offset = "0x10DEDA8", VA = "0x10DEDA8")]
		public static void UpdateInstinctColours(bool useColorBlindColours)
		{
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0x10DDD60", Offset = "0x10DDD60", VA = "0x10DDD60")]
		public static void RegisterComp(InstinctHighlightComponent comp)
		{
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0x10DDEA4", Offset = "0x10DDEA4", VA = "0x10DDEA4")]
		public static void DeregisterComp(InstinctHighlightComponent comp)
		{
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0x10DEEAC", Offset = "0x10DEEAC", VA = "0x10DEEAC")]
		public static void ShowInstincts(bool disableTimer = false)
		{
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0x10DF290", Offset = "0x10DF290", VA = "0x10DF290")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE98AD0", Offset = "0xE98AD0")]
		private static IEnumerator InstinctsCo()
		{
			return null;
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0x10DA428", Offset = "0x10DA428", VA = "0x10DA428")]
		public static void HideInstincts()
		{
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0x10DF2EC", Offset = "0x10DF2EC", VA = "0x10DF2EC")]
		public InstinctSystem()
		{
		}
	}
	[Token(Token = "0x20007A8")]
	public class InstinctSystemPlayerComponent : MonoBehaviour, Controls.IInstinctSystemActions
	{
		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Controls _controls;

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0x10DF45C", Offset = "0x10DF45C", VA = "0x10DF45C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0x10DF524", Offset = "0x10DF524", VA = "0x10DF524", Slot = "4")]
		public void OnTriggerInstincts(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0x10DF580", Offset = "0x10DF580", VA = "0x10DF580")]
		public InstinctSystemPlayerComponent()
		{
		}
	}
	[Token(Token = "0x20007A9")]
	public sealed class InstinctSystemTags
	{
		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly HashSet<string> _activeTags;

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0x10DF588", Offset = "0x10DF588", VA = "0x10DF588")]
		public void EnableInstinctTag(string tag)
		{
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0x10DF628", Offset = "0x10DF628", VA = "0x10DF628")]
		public void DisableInstinctTag(string tag)
		{
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0x10DE654", Offset = "0x10DE654", VA = "0x10DE654")]
		public bool ContainsTag(string tag)
		{
			return default(bool);
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0x10DF3D8", Offset = "0x10DF3D8", VA = "0x10DF3D8")]
		public InstinctSystemTags()
		{
		}
	}
	[Token(Token = "0x20007AA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE74E64", Offset = "0xE74E64")]
	public class InstinctSystemUnlockData : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20007AB")]
		private class InstinctUnlockData
		{
			[Token(Token = "0x400200A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InstinctObjectType[] TypesUnlockedForLevel;

			[Token(Token = "0x400200B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int Level;

			[Token(Token = "0x60026E6")]
			[Address(RVA = "0x1032348", Offset = "0x1032348", VA = "0x1032348")]
			public InstinctUnlockData()
			{
			}
		}

		[Token(Token = "0x20007AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE74EA8", Offset = "0xE74EA8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400200C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int level;

			[Token(Token = "0x60026E7")]
			[Address(RVA = "0x103231C", Offset = "0x103231C", VA = "0x103231C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60026E8")]
			[Address(RVA = "0x1032324", Offset = "0x1032324", VA = "0x1032324")]
			internal bool <GetUnlockedTypes>b__0(InstinctUnlockData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InstinctUnlockData[] _data;

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0x10DF198", Offset = "0x10DF198", VA = "0x10DF198")]
		public InstinctObjectType[] GetUnlockedTypes(int level)
		{
			return null;
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0x10DF6C8", Offset = "0x10DF6C8", VA = "0x10DF6C8")]
		public InstinctSystemUnlockData()
		{
		}
	}
	[Token(Token = "0x20007AD")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE74EB8", Offset = "0xE74EB8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE74EB8", Offset = "0xE74EB8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE74EB8", Offset = "0xE74EB8")]
	public class EnableInstinctSystemNode : CallableActionNode
	{
		[Token(Token = "0x60026E9")]
		[Address(RVA = "0x100BB48", Offset = "0x100BB48", VA = "0x100BB48", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0x100BBB0", Offset = "0x100BBB0", VA = "0x100BBB0")]
		public EnableInstinctSystemNode()
		{
		}
	}
	[Token(Token = "0x20007AE")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE74F40", Offset = "0xE74F40")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE74F40", Offset = "0xE74F40")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE74F40", Offset = "0xE74F40")]
	public class DisableInstinctSystemNode : CallableActionNode
	{
		[Token(Token = "0x60026EB")]
		[Address(RVA = "0x1008C6C", Offset = "0x1008C6C", VA = "0x1008C6C", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60026EC")]
		[Address(RVA = "0x1008CD0", Offset = "0x1008CD0", VA = "0x1008CD0")]
		public DisableInstinctSystemNode()
		{
		}
	}
	[Token(Token = "0x20007AF")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE74FC8", Offset = "0xE74FC8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE74FC8", Offset = "0xE74FC8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE74FC8", Offset = "0xE74FC8")]
	public class ShowInstinctsFCNode : CallableActionNode
	{
		[Token(Token = "0x60026ED")]
		[Address(RVA = "0x32DCED4", Offset = "0x32DCED4", VA = "0x32DCED4", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0x32DCF34", Offset = "0x32DCF34", VA = "0x32DCF34")]
		public ShowInstinctsFCNode()
		{
		}
	}
	[Token(Token = "0x20007B0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE75050", Offset = "0xE75050")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE75050", Offset = "0xE75050")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE75050", Offset = "0xE75050")]
	public class HideInstinctsFCNode : CallableActionNode
	{
		[Token(Token = "0x60026EF")]
		[Address(RVA = "0x10DA3D0", Offset = "0x10DA3D0", VA = "0x10DA3D0", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0x10DA6B0", Offset = "0x10DA6B0", VA = "0x10DA6B0")]
		public HideInstinctsFCNode()
		{
		}
	}
	[Token(Token = "0x20007B1")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE750D8", Offset = "0xE750D8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE750D8", Offset = "0xE750D8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE750D8", Offset = "0xE750D8")]
	public class ShowInstinctHighlightNode : CallableActionNode<InstinctHighlightComponent>
	{
		[Token(Token = "0x60026F1")]
		[Address(RVA = "0x32DCE64", Offset = "0x32DCE64", VA = "0x32DCE64", Slot = "12")]
		public override void Invoke(InstinctHighlightComponent highlightComponent)
		{
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0x32DCE88", Offset = "0x32DCE88", VA = "0x32DCE88")]
		public ShowInstinctHighlightNode()
		{
		}
	}
	[Token(Token = "0x20007B2")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE75160", Offset = "0xE75160")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE75160", Offset = "0xE75160")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE75160", Offset = "0xE75160")]
	public class HideInstinctHighlightNode : CallableActionNode<InstinctHighlightComponent>
	{
		[Token(Token = "0x60026F3")]
		[Address(RVA = "0x10DA360", Offset = "0x10DA360", VA = "0x10DA360", Slot = "12")]
		public override void Invoke(InstinctHighlightComponent highlightComponent)
		{
		}

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0x10DA384", Offset = "0x10DA384", VA = "0x10DA384")]
		public HideInstinctHighlightNode()
		{
		}
	}
	[Token(Token = "0x20007B3")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE751E8", Offset = "0xE751E8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE751E8", Offset = "0xE751E8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE751E8", Offset = "0xE751E8")]
	public class EnableInstinctHighlightNode : CallableActionNode<InstinctHighlightComponent>
	{
		[Token(Token = "0x60026F5")]
		[Address(RVA = "0x100BAE0", Offset = "0x100BAE0", VA = "0x100BAE0", Slot = "12")]
		public override void Invoke(InstinctHighlightComponent highlightComponent)
		{
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0x100BAFC", Offset = "0x100BAFC", VA = "0x100BAFC")]
		public EnableInstinctHighlightNode()
		{
		}
	}
	[Token(Token = "0x20007B4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE75270", Offset = "0xE75270")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE75270", Offset = "0xE75270")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE75270", Offset = "0xE75270")]
	public class DisableInstinctHighlightNode : CallableActionNode<InstinctHighlightComponent>
	{
		[Token(Token = "0x60026F7")]
		[Address(RVA = "0x1008C04", Offset = "0x1008C04", VA = "0x1008C04", Slot = "12")]
		public override void Invoke(InstinctHighlightComponent highlightComponent)
		{
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0x1008C20", Offset = "0x1008C20", VA = "0x1008C20")]
		public DisableInstinctHighlightNode()
		{
		}
	}
	[Token(Token = "0x20007B5")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE752F8", Offset = "0xE752F8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE752F8", Offset = "0xE752F8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE752F8", Offset = "0xE752F8")]
	public class EnableInstinctTagNode : CallableActionNode<string>
	{
		[Token(Token = "0x60026F9")]
		[Address(RVA = "0x100BBB8", Offset = "0x100BBB8", VA = "0x100BBB8", Slot = "12")]
		public override void Invoke(string tag)
		{
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0x100BC30", Offset = "0x100BC30", VA = "0x100BC30")]
		public EnableInstinctTagNode()
		{
		}
	}
	[Token(Token = "0x20007B6")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE75380", Offset = "0xE75380")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE75380", Offset = "0xE75380")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE75380", Offset = "0xE75380")]
	public class DisableInstinctTagNode : CallableActionNode<string>
	{
		[Token(Token = "0x60026FB")]
		[Address(RVA = "0x1008CD8", Offset = "0x1008CD8", VA = "0x1008CD8", Slot = "12")]
		public override void Invoke(string tag)
		{
		}

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0x1008D50", Offset = "0x1008D50", VA = "0x1008D50")]
		public DisableInstinctTagNode()
		{
		}
	}
	[Token(Token = "0x20007B7")]
	public sealed class OilLampController : MonoBehaviour
	{
		[Token(Token = "0x20007B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75408", Offset = "0xE75408")]
		private sealed class <TurnLampOffCO>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400200E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400200F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OilLampController <>4__this;

			[Token(Token = "0x17000425")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002704")]
				[Address(RVA = "0x32C45D0", Offset = "0x32C45D0", VA = "0x32C45D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000426")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002706")]
				[Address(RVA = "0x32C4618", Offset = "0x32C4618", VA = "0x32C4618", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002701")]
			[Address(RVA = "0x32C44EC", Offset = "0x32C44EC", VA = "0x32C44EC")]
			[DebuggerHidden]
			public <TurnLampOffCO>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002702")]
			[Address(RVA = "0x32C4518", Offset = "0x32C4518", VA = "0x32C4518", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002703")]
			[Address(RVA = "0x32C451C", Offset = "0x32C451C", VA = "0x32C451C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002705")]
			[Address(RVA = "0x32C45D8", Offset = "0x32C45D8", VA = "0x32C45D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _lamp;

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0x107AB30", Offset = "0x107AB30", VA = "0x107AB30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0x107AB5C", Offset = "0x107AB5C", VA = "0x107AB5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE98B80", Offset = "0xE98B80")]
		private IEnumerator TurnLampOffCO()
		{
			return null;
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0x107ABD4", Offset = "0x107ABD4", VA = "0x107ABD4")]
		public void SetLampState(bool onState)
		{
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0x107AE54", Offset = "0x107AE54", VA = "0x107AE54")]
		public OilLampController()
		{
		}
	}
	[Token(Token = "0x20007B9")]
	public sealed class LoadingCube : MonoBehaviour
	{
		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshPro locationText;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro timeOfDayText;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform loadPos;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] objectsToToggle;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject Loading;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject Connecting;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject logoObj;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject controlsObj;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject multiplayerObj;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LoadingScreenRotation rotator;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ParticleSystem particleSystem;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _seenControls;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _previouslyVisible;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static MT_Sittable PreviousSittable;

		[Token(Token = "0x6002707")]
		[Address(RVA = "0x1016204", Offset = "0x1016204", VA = "0x1016204")]
		public void Init(string locText, string todText, bool showLoading)
		{
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0x10165C0", Offset = "0x10165C0", VA = "0x10165C0")]
		public void UpdateVisibility(bool on)
		{
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0x1016870", Offset = "0x1016870", VA = "0x1016870")]
		private void SetLogoActive(bool isActive, bool multiplayer = false)
		{
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0x1016814", Offset = "0x1016814", VA = "0x1016814")]
		private void SetControlsActive(bool isActive, bool multiplayer = false)
		{
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0x10168E0", Offset = "0x10168E0", VA = "0x10168E0")]
		public LoadingCube()
		{
		}
	}
	[Token(Token = "0x20007BA")]
	public sealed class LoadingScreenController : MonoBehaviour
	{
		[Token(Token = "0x20007BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75418", Offset = "0xE75418")]
		private sealed class <ReleaseItemsAndDisableHolsters>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action OnComplete;

			[Token(Token = "0x1700042A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002728")]
				[Address(RVA = "0x1035230", Offset = "0x1035230", VA = "0x1035230", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600272A")]
				[Address(RVA = "0x1035278", Offset = "0x1035278", VA = "0x1035278", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002725")]
			[Address(RVA = "0x10350EC", Offset = "0x10350EC", VA = "0x10350EC")]
			[DebuggerHidden]
			public <ReleaseItemsAndDisableHolsters>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002726")]
			[Address(RVA = "0x1035118", Offset = "0x1035118", VA = "0x1035118", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002727")]
			[Address(RVA = "0x103511C", Offset = "0x103511C", VA = "0x103511C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002729")]
			[Address(RVA = "0x1035238", Offset = "0x1035238", VA = "0x1035238", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75428", Offset = "0xE75428")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LoadingScreenController <>4__this;

			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string location;

			[Token(Token = "0x400202C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string timeOfDay;

			[Token(Token = "0x400202D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onComplete;

			[Token(Token = "0x400202E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool showLoading;

			[Token(Token = "0x400202F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float waitDuration;

			[Token(Token = "0x600272B")]
			[Address(RVA = "0x1034DDC", Offset = "0x1034DDC", VA = "0x1034DDC")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x600272C")]
			[Address(RVA = "0x1034DE4", Offset = "0x1034DE4", VA = "0x1034DE4")]
			internal void <Show>b__0()
			{
			}
		}

		[Token(Token = "0x20007BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75438", Offset = "0xE75438")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4002030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LoadingScreenController <>4__this;

			[Token(Token = "0x4002031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string location;

			[Token(Token = "0x4002032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string timeOfDay;

			[Token(Token = "0x4002033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool showLoading;

			[Token(Token = "0x4002034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action onComplete;

			[Token(Token = "0x4002035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float waitDuration;

			[Token(Token = "0x600272D")]
			[Address(RVA = "0x1034E14", Offset = "0x1034E14", VA = "0x1034E14")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x600272E")]
			[Address(RVA = "0x1034E1C", Offset = "0x1034E1C", VA = "0x1034E1C")]
			internal void <StartLocationLoad>b__0()
			{
			}
		}

		[Token(Token = "0x20007BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75448", Offset = "0xE75448")]
		private sealed class <WaitAndThenContinue>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float waitDuration;

			[Token(Token = "0x4002039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onComplete;

			[Token(Token = "0x1700042C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002732")]
				[Address(RVA = "0x1035328", Offset = "0x1035328", VA = "0x1035328", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002734")]
				[Address(RVA = "0x1035370", Offset = "0x1035370", VA = "0x1035370", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600272F")]
			[Address(RVA = "0x1035280", Offset = "0x1035280", VA = "0x1035280")]
			[DebuggerHidden]
			public <WaitAndThenContinue>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002730")]
			[Address(RVA = "0x10352AC", Offset = "0x10352AC", VA = "0x10352AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002731")]
			[Address(RVA = "0x10352B0", Offset = "0x10352B0", VA = "0x10352B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002733")]
			[Address(RVA = "0x1035330", Offset = "0x1035330", VA = "0x1035330", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20007BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75458", Offset = "0xE75458")]
		private sealed class <>c
		{
			[Token(Token = "0x400203A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400203B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__32_0;

			[Token(Token = "0x6002736")]
			[Address(RVA = "0x1034D34", Offset = "0x1034D34", VA = "0x1034D34")]
			public <>c()
			{
			}

			[Token(Token = "0x6002737")]
			[Address(RVA = "0x1034D3C", Offset = "0x1034D3C", VA = "0x1034D3C")]
			internal bool <HideInternal>b__32_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75468", Offset = "0xE75468")]
		private sealed class <HideInternal>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400203C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400203D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400203E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingScreenController <>4__this;

			[Token(Token = "0x1700042E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600273B")]
				[Address(RVA = "0x103509C", Offset = "0x103509C", VA = "0x103509C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600273D")]
				[Address(RVA = "0x10350E4", Offset = "0x10350E4", VA = "0x10350E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002738")]
			[Address(RVA = "0x1034E94", Offset = "0x1034E94", VA = "0x1034E94")]
			[DebuggerHidden]
			public <HideInternal>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6002739")]
			[Address(RVA = "0x1034EC0", Offset = "0x1034EC0", VA = "0x1034EC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600273A")]
			[Address(RVA = "0x1034EC4", Offset = "0x1034EC4", VA = "0x1034EC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600273C")]
			[Address(RVA = "0x10350A4", Offset = "0x10350A4", VA = "0x10350A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LoadingCube loadingCubePrefab;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadingCube _loadingCube;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _loadingLogoEnabled;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public static bool HideDone;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE86C2C", Offset = "0xE86C2C")]
		private static LoadingScreenController <Instance>k__BackingField;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE86C3C", Offset = "0xE86C3C")]
		private static bool <IsShowing>k__BackingField;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine hideCo;

		[Token(Token = "0x17000427")]
		public static bool LoadingLogoEnabled
		{
			[Token(Token = "0x600270E")]
			[Address(RVA = "0x1016AD8", Offset = "0x1016AD8", VA = "0x1016AD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600270F")]
			[Address(RVA = "0x1016B3C", Offset = "0x1016B3C", VA = "0x1016B3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000428")]
		public static LoadingScreenController Instance
		{
			[Token(Token = "0x6002711")]
			[Address(RVA = "0x1016C68", Offset = "0x1016C68", VA = "0x1016C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98C60", Offset = "0xE98C60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002710")]
			[Address(RVA = "0x1016BFC", Offset = "0x1016BFC", VA = "0x1016BFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98C50", Offset = "0xE98C50")]
			private set
			{
			}
		}

		[Token(Token = "0x17000429")]
		public static bool IsShowing
		{
			[Token(Token = "0x6002713")]
			[Address(RVA = "0x1016D38", Offset = "0x1016D38", VA = "0x1016D38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98C80", Offset = "0xE98C80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002712")]
			[Address(RVA = "0x1016CCC", Offset = "0x1016CCC", VA = "0x1016CCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98C70", Offset = "0xE98C70")]
			private set
			{
			}
		}

		[Token(Token = "0x14000049")]
		private static event Action<bool> OnLoadingLogoEnabledChanged
		{
			[Token(Token = "0x600270C")]
			[Address(RVA = "0x10168F0", Offset = "0x10168F0", VA = "0x10168F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98C30", Offset = "0xE98C30")]
			add
			{
			}
			[Token(Token = "0x600270D")]
			[Address(RVA = "0x10169E4", Offset = "0x10169E4", VA = "0x10169E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98C40", Offset = "0xE98C40")]
			remove
			{
			}
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0x1016D9C", Offset = "0x1016D9C", VA = "0x1016D9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0x1017028", Offset = "0x1017028", VA = "0x1017028")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0x101715C", Offset = "0x101715C", VA = "0x101715C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0x1017140", Offset = "0x1017140", VA = "0x1017140")]
		private void UpdateVisibility(bool value)
		{
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0x1017214", Offset = "0x1017214", VA = "0x1017214")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE98C90", Offset = "0xE98C90")]
		private IEnumerator ReleaseItemsAndDisableHolsters(Action OnComplete)
		{
			return null;
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0x101728C", Offset = "0x101728C", VA = "0x101728C")]
		public void ReactivateHolsters()
		{
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0x1017314", Offset = "0x1017314", VA = "0x1017314")]
		public void Show(string location, string timeOfDay, Action onComplete, bool showLoading = true, float waitDuration = 3f)
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0x1017638", Offset = "0x1017638", VA = "0x1017638")]
		private void StartLocationLoad(string location, string timeOfDay, Action onComplete, bool showLoading = true, float waitDuration = 3f)
		{
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0x1017768", Offset = "0x1017768", VA = "0x1017768")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE98CF0", Offset = "0xE98CF0")]
		private IEnumerator WaitAndThenContinue(Action onComplete, float waitDuration)
		{
			return null;
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0x10177F0", Offset = "0x10177F0", VA = "0x10177F0")]
		private void HandleStandHeightOverride()
		{
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0x10179B4", Offset = "0x10179B4", VA = "0x10179B4")]
		public void PlayerInitialTeleport()
		{
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0x1017A44", Offset = "0x1017A44", VA = "0x1017A44")]
		public void Hide()
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0x1017AF8", Offset = "0x1017AF8", VA = "0x1017AF8")]
		public void HideInstant()
		{
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0x1017A80", Offset = "0x1017A80", VA = "0x1017A80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE98D50", Offset = "0xE98D50")]
		private IEnumerator HideInternal()
		{
			return null;
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0x1017BC4", Offset = "0x1017BC4", VA = "0x1017BC4")]
		public LoadingScreenController()
		{
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0x1017C24", Offset = "0x1017C24", VA = "0x1017C24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98DB0", Offset = "0xE98DB0")]
		private void <HideInternal>b__32_1()
		{
		}
	}
	[Token(Token = "0x20007C1")]
	public sealed class MT_AudioManager : IGameModule
	{
		[Token(Token = "0x20007C2")]
		public enum GameState
		{
			[Token(Token = "0x4002043")]
			MainMenu,
			[Token(Token = "0x4002044")]
			LoadingScreen,
			[Token(Token = "0x4002045")]
			Gameplay
		}

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject _initializerGameObject;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _isInitialized;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _musicSystemRunning;

		[Token(Token = "0x600273E")]
		[Address(RVA = "0x1125AB0", Offset = "0x1125AB0", VA = "0x1125AB0")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0x1125B14", Offset = "0x1125B14", VA = "0x1125B14", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0x1125B18", Offset = "0x1125B18", VA = "0x1125B18", Slot = "5")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0x1125B1C", Offset = "0x1125B1C", VA = "0x1125B1C")]
		public static void SetGameState(GameState state)
		{
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0x1125B20", Offset = "0x1125B20", VA = "0x1125B20")]
		public static void StartMusicSystem()
		{
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0x1125BB0", Offset = "0x1125BB0", VA = "0x1125BB0")]
		public static void StopMusicSystem(GameObject go)
		{
		}

		[Token(Token = "0x6002744")]
		[Address(RVA = "0x1125C3C", Offset = "0x1125C3C", VA = "0x1125C3C")]
		public static void TriggerMusicEvent(MusicEvent evt)
		{
		}

		[Token(Token = "0x6002745")]
		[Address(RVA = "0x1125C40", Offset = "0x1125C40", VA = "0x1125C40")]
		public static void TriggerAudioEvent(AudioEvent evt)
		{
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0x1125C44", Offset = "0x1125C44", VA = "0x1125C44")]
		public static void StopAudioEvent(AudioEvent evt)
		{
		}

		[Token(Token = "0x6002747")]
		[Address(RVA = "0x1125C48", Offset = "0x1125C48", VA = "0x1125C48")]
		public static void StopAll()
		{
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0x1125C4C", Offset = "0x1125C4C", VA = "0x1125C4C")]
		public static void MuteAudio()
		{
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0x1125C50", Offset = "0x1125C50", VA = "0x1125C50")]
		public static void UnMuteAudio()
		{
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0x1125C54", Offset = "0x1125C54", VA = "0x1125C54")]
		public static void PostEvent(string id)
		{
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0x1125C58", Offset = "0x1125C58", VA = "0x1125C58")]
		public static void SeekOnEvent(string id, float percent)
		{
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0x1125C5C", Offset = "0x1125C5C", VA = "0x1125C5C")]
		public static void SetEarlyReflectionsVolume(GameObject go, float volume)
		{
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0x1125C60", Offset = "0x1125C60", VA = "0x1125C60")]
		public static void SetVolumeLevel(float value)
		{
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0x1125C68", Offset = "0x1125C68", VA = "0x1125C68")]
		public static void ForceStop(string eventId)
		{
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0x1125C6C", Offset = "0x1125C6C", VA = "0x1125C6C")]
		public MT_AudioManager()
		{
		}
	}
	[Token(Token = "0x20007C3")]
	public class MT_GameplayManager : IGameModule, Controls.IPlayerModeActions
	{
		[Serializable]
		[Token(Token = "0x20007C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75478", Offset = "0xE75478")]
		private sealed class <>c
		{
			[Token(Token = "0x4002060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<UnityEngine.InputSystem.InputDevice, bool> <>9__50_0;

			[Token(Token = "0x600277F")]
			[Address(RVA = "0x103723C", Offset = "0x103723C", VA = "0x103723C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002780")]
			[Address(RVA = "0x1037244", Offset = "0x1037244", VA = "0x1037244")]
			internal bool <IsOculusConnected>b__50_0(UnityEngine.InputSystem.InputDevice device)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75488", Offset = "0xE75488")]
		private sealed class <>c__DisplayClass60_0
		{
			[Token(Token = "0x4002062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AsyncOperationHandle<GameObject> XRRigOp;

			[Token(Token = "0x6002781")]
			[Address(RVA = "0x10372A8", Offset = "0x10372A8", VA = "0x10372A8")]
			public <>c__DisplayClass60_0()
			{
			}

			[Token(Token = "0x6002782")]
			[Address(RVA = "0x10372B0", Offset = "0x10372B0", VA = "0x10372B0")]
			internal bool <LoadXRRigFromAddressables>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75498", Offset = "0xE75498")]
		private sealed class <LoadXRRigFromAddressables>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass60_0 <>8__1;

			[Token(Token = "0x17000437")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002786")]
				[Address(RVA = "0x1037868", Offset = "0x1037868", VA = "0x1037868", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000438")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002788")]
				[Address(RVA = "0x10378B0", Offset = "0x10378B0", VA = "0x10378B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002783")]
			[Address(RVA = "0x1037604", Offset = "0x1037604", VA = "0x1037604")]
			[DebuggerHidden]
			public <LoadXRRigFromAddressables>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x6002784")]
			[Address(RVA = "0x1037630", Offset = "0x1037630", VA = "0x1037630", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002785")]
			[Address(RVA = "0x1037634", Offset = "0x1037634", VA = "0x1037634", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002787")]
			[Address(RVA = "0x1037870", Offset = "0x1037870", VA = "0x1037870", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE754A8", Offset = "0xE754A8")]
		private sealed class <>c__DisplayClass61_0
		{
			[Token(Token = "0x4002066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AsyncOperationHandle<GameObject> XRMPRigOp;

			[Token(Token = "0x6002789")]
			[Address(RVA = "0x10372FC", Offset = "0x10372FC", VA = "0x10372FC")]
			public <>c__DisplayClass61_0()
			{
			}

			[Token(Token = "0x600278A")]
			[Address(RVA = "0x1037304", Offset = "0x1037304", VA = "0x1037304")]
			internal bool <LoadMPXRRigFromAddressables>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE754B8", Offset = "0xE754B8")]
		private sealed class <LoadMPXRRigFromAddressables>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass61_0 <>8__1;

			[Token(Token = "0x17000439")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600278E")]
				[Address(RVA = "0x10375B4", Offset = "0x10375B4", VA = "0x10375B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002790")]
				[Address(RVA = "0x10375FC", Offset = "0x10375FC", VA = "0x10375FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600278B")]
			[Address(RVA = "0x1037350", Offset = "0x1037350", VA = "0x1037350")]
			[DebuggerHidden]
			public <LoadMPXRRigFromAddressables>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x600278C")]
			[Address(RVA = "0x103737C", Offset = "0x103737C", VA = "0x103737C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600278D")]
			[Address(RVA = "0x1037380", Offset = "0x1037380", VA = "0x1037380", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600278F")]
			[Address(RVA = "0x10375BC", Offset = "0x10375BC", VA = "0x10375BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string CurrentSpawnPoint;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE86C4C", Offset = "0xE86C4C")]
		private static bool <IsPlayerSpawned>k__BackingField;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE86C5C", Offset = "0xE86C5C")]
		private static bool <IsSlimRigSpawned>k__BackingField;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE86C6C", Offset = "0xE86C6C")]
		private static PlayerRigType <CurrentRigMode>k__BackingField;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE86C7C", Offset = "0xE86C7C")]
		private static bool <IsDemoMode>k__BackingField;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public static bool IsAudioInit;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE86C8C", Offset = "0xE86C8C")]
		private static bool <IsBlokoutVisible>k__BackingField;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static GameObject _loadedXRRig;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static GameObject _loadedMPXRRig;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Controls _controls;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject _playerRig;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static GameObject _slimRig;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static GameObject _globalPrefab;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<UnityEngine.InputSystem.InputDevice> _connectedDevices;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static AsyncOperationHandle<GameObject> _globalPrefabHandle;

		[Token(Token = "0x4002055")]
		private const string HVRGlobalKey = "HVRGlobal";

		[Token(Token = "0x4002056")]
		private const string RigKey = "Assets/Content/Prefabs/Rigs/XRRigOculusVariant.prefab";

		[Token(Token = "0x4002057")]
		private const string MPRigPath = "Assets/Content/Prefabs/Rigs/MP_XRRigOculusVariant.prefab";

		[Token(Token = "0x4002058")]
		private const string SlimRigKey = "Assets/Content/Prefabs/Rigs/SlimRig.prefab";

		[Token(Token = "0x4002059")]
		private const string KeyboardName = "Keyboard";

		[Token(Token = "0x400205A")]
		private const string MouseName = "Mouse";

		[Token(Token = "0x400205B")]
		private const string GamePadName = "Gamepad";

		[Token(Token = "0x400205C")]
		private const string OculusName = "Oculus";

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static Transform _location;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static Transform _spawnPoint;

		[Token(Token = "0x17000430")]
		public static bool IsFPSMode
		{
			[Token(Token = "0x6002751")]
			[Address(RVA = "0x15C0BD0", Offset = "0x15C0BD0", VA = "0x15C0BD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000431")]
		public static bool IsPlayerSpawned
		{
			[Token(Token = "0x6002752")]
			[Address(RVA = "0x15C0CB8", Offset = "0x15C0CB8", VA = "0x15C0CB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98EB0", Offset = "0xE98EB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002753")]
			[Address(RVA = "0x15C0D1C", Offset = "0x15C0D1C", VA = "0x15C0D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98EC0", Offset = "0xE98EC0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000432")]
		public static bool IsSlimRigSpawned
		{
			[Token(Token = "0x6002754")]
			[Address(RVA = "0x15C0D88", Offset = "0x15C0D88", VA = "0x15C0D88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98ED0", Offset = "0xE98ED0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002755")]
			[Address(RVA = "0x15C0DEC", Offset = "0x15C0DEC", VA = "0x15C0DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98EE0", Offset = "0xE98EE0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000433")]
		public static PlayerRigType CurrentRigMode
		{
			[Token(Token = "0x6002756")]
			[Address(RVA = "0x15C0E58", Offset = "0x15C0E58", VA = "0x15C0E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98EF0", Offset = "0xE98EF0")]
			get
			{
				return default(PlayerRigType);
			}
			[Token(Token = "0x6002757")]
			[Address(RVA = "0x15C0EBC", Offset = "0x15C0EBC", VA = "0x15C0EBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98F00", Offset = "0xE98F00")]
			set
			{
			}
		}

		[Token(Token = "0x17000434")]
		public static GameModeType CurrentGameMode
		{
			[Token(Token = "0x6002758")]
			[Address(RVA = "0x15C0F24", Offset = "0x15C0F24", VA = "0x15C0F24")]
			get
			{
				return default(GameModeType);
			}
		}

		[Token(Token = "0x17000435")]
		public static bool IsDemoMode
		{
			[Token(Token = "0x6002759")]
			[Address(RVA = "0x15C0FA8", Offset = "0x15C0FA8", VA = "0x15C0FA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98F10", Offset = "0xE98F10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600275A")]
			[Address(RVA = "0x15C100C", Offset = "0x15C100C", VA = "0x15C100C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98F20", Offset = "0xE98F20")]
			private set
			{
			}
		}

		[Token(Token = "0x17000436")]
		public static bool IsBlokoutVisible
		{
			[Token(Token = "0x600275B")]
			[Address(RVA = "0x15C1078", Offset = "0x15C1078", VA = "0x15C1078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98F30", Offset = "0xE98F30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600275C")]
			[Address(RVA = "0x15C10DC", Offset = "0x15C10DC", VA = "0x15C10DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98F40", Offset = "0xE98F40")]
			private set
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public static event Action OnBlockoutVisibilityToggle
		{
			[Token(Token = "0x600275D")]
			[Address(RVA = "0x15C1148", Offset = "0x15C1148", VA = "0x15C1148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98F50", Offset = "0xE98F50")]
			add
			{
			}
			[Token(Token = "0x600275E")]
			[Address(RVA = "0x15C1240", Offset = "0x15C1240", VA = "0x15C1240")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE98F60", Offset = "0xE98F60")]
			remove
			{
			}
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0x15C1338", Offset = "0x15C1338", VA = "0x15C1338", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0x15C133C", Offset = "0x15C133C", VA = "0x15C133C", Slot = "5")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0x15C1428", Offset = "0x15C1428", VA = "0x15C1428")]
		public static void SetMenuMode(bool isInMenuMode, bool isDebugMenuMenuToggleAffected)
		{
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0x15C1568", Offset = "0x15C1568", VA = "0x15C1568")]
		public static bool IsOculusConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0x15C17C4", Offset = "0x15C17C4", VA = "0x15C17C4", Slot = "6")]
		public void OnChangePlayerMode(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0x15C17C8", Offset = "0x15C17C8", VA = "0x15C17C8")]
		public static void EnableSubtitles(bool isEnabled)
		{
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0x15C1964", Offset = "0x15C1964", VA = "0x15C1964")]
		public static bool GetSubtitlesEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0x15C19B0", Offset = "0x15C19B0", VA = "0x15C19B0")]
		public static void EnableBlinkers(bool isEnabled)
		{
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0x15C1A04", Offset = "0x15C1A04", VA = "0x15C1A04")]
		public static void EnableWalkingBlinkers(bool isEnabled)
		{
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0x15C1A40", Offset = "0x15C1A40", VA = "0x15C1A40")]
		public static void EnableTeleportBlinkers(bool isEnabled)
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x15C1A7C", Offset = "0x15C1A7C", VA = "0x15C1A7C")]
		public static void EnableBlockoutVisibility(bool isVisible)
		{
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0x15C1B48", Offset = "0x15C1B48", VA = "0x15C1B48")]
		public static void SingleplayerSpawnPlayer(Transform location)
		{
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0x15C2128", Offset = "0x15C2128", VA = "0x15C2128")]
		public static void MultiplayerSpawnPlayer(Transform location)
		{
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0x15C21B4", Offset = "0x15C21B4", VA = "0x15C21B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE98F70", Offset = "0xE98F70")]
		public static IEnumerator LoadXRRigFromAddressables()
		{
			return null;
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0x15C2210", Offset = "0x15C2210", VA = "0x15C2210")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE98FD0", Offset = "0xE98FD0")]
		public static IEnumerator LoadMPXRRigFromAddressables()
		{
			return null;
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0x15C226C", Offset = "0x15C226C", VA = "0x15C226C")]
		public static void UnloadMPXRRigFromAddressables()
		{
		}

		[Token(Token = "0x600276F")]
		[Address(RVA = "0x15C1BD4", Offset = "0x15C1BD4", VA = "0x15C1BD4")]
		private static void SpawnPlayer(Transform location, GameModeType gameModeType)
		{
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0x15C248C", Offset = "0x15C248C", VA = "0x15C248C")]
		private static void SPXRRigSpawnCompletion(AsyncOperationHandle<GameObject> handle)
		{
		}

		[Token(Token = "0x6002771")]
		[Address(RVA = "0x15C2514", Offset = "0x15C2514", VA = "0x15C2514")]
		private static void MPXRRigSpawnCompletion(AsyncOperationHandle<GameObject> handle)
		{
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0x15C231C", Offset = "0x15C231C", VA = "0x15C231C")]
		private static void SPXRRigSpawnCompletion(GameObject rig)
		{
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0x15C23D0", Offset = "0x15C23D0", VA = "0x15C23D0")]
		private static void MPXRRigSpawnCompletion(GameObject rig)
		{
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0x15C259C", Offset = "0x15C259C", VA = "0x15C259C")]
		private static void SpawnRigCompletion(GameObject rig)
		{
		}

		[Token(Token = "0x6002775")]
		[Address(RVA = "0x15C2850", Offset = "0x15C2850", VA = "0x15C2850")]
		private static void RigSpawnFinalisation(GameModeType gameModeType)
		{
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0x15C2A48", Offset = "0x15C2A48", VA = "0x15C2A48")]
		public static void DestroyRig()
		{
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0x15C2CB4", Offset = "0x15C2CB4", VA = "0x15C2CB4")]
		public static void SpawnSlimPlayer(Transform location)
		{
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0x15C3040", Offset = "0x15C3040", VA = "0x15C3040")]
		private static void SlimRigOnComplete(AsyncOperationHandle<GameObject> asyncOperationHandle)
		{
		}

		[Token(Token = "0x6002779")]
		[Address(RVA = "0x15C32A0", Offset = "0x15C32A0", VA = "0x15C32A0")]
		public static void DestroySlimRig()
		{
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0x15C33E0", Offset = "0x15C33E0", VA = "0x15C33E0")]
		public static void RestartGame()
		{
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0x15C3438", Offset = "0x15C3438", VA = "0x15C3438")]
		public static void DebugMainMenu()
		{
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0x15C3490", Offset = "0x15C3490", VA = "0x15C3490")]
		public MT_GameplayManager()
		{
		}
	}
	[Token(Token = "0x20007C9")]
	public class MT_JournalMethods : IGameModule
	{
		[Token(Token = "0x20007CA")]
		public enum PageSide
		{
			[Token(Token = "0x400206B")]
			Front,
			[Token(Token = "0x400206C")]
			Back
		}

		[Token(Token = "0x6002791")]
		[Address(RVA = "0x12559D8", Offset = "0x12559D8", VA = "0x12559D8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xE990D0", Offset = "0xE990D0")]
		private static void AppDomainReloadHandler()
		{
		}

		[Token(Token = "0x6002792")]
		[Address(RVA = "0x12559DC", Offset = "0x12559DC", VA = "0x12559DC", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002793")]
		[Address(RVA = "0x12559E0", Offset = "0x12559E0", VA = "0x12559E0", Slot = "5")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6002794")]
		[Address(RVA = "0x12559E4", Offset = "0x12559E4", VA = "0x12559E4")]
		public static void SetNewTextField(int page, PageSide side, string text)
		{
		}

		[Token(Token = "0x6002795")]
		[Address(RVA = "0x1255F54", Offset = "0x1255F54", VA = "0x1255F54")]
		public static void SetNewTextField(string pageId, PageSide side, string text)
		{
		}

		[Token(Token = "0x6002796")]
		[Address(RVA = "0x1256250", Offset = "0x1256250", VA = "0x1256250")]
		public static void UpdateStory(int pageMin, int pageMax, PageSide minSide, PageSide maxSide, string text)
		{
		}

		[Token(Token = "0x6002797")]
		[Address(RVA = "0x1255D70", Offset = "0x1255D70", VA = "0x1255D70")]
		private static void SetText(Dictionary<TextMeshProUGUI, int> textFields, string text)
		{
		}

		[Token(Token = "0x6002798")]
		[Address(RVA = "0x1256A2C", Offset = "0x1256A2C", VA = "0x1256A2C")]
		public static void SetImageSprite(int page, PageSide side, int imageNumber, Sprite image)
		{
		}

		[Token(Token = "0x6002799")]
		[Address(RVA = "0x1256D98", Offset = "0x1256D98", VA = "0x1256D98")]
		public static void SetImageSprite(string pageId, PageSide side, int imageNumber, Sprite image)
		{
		}

		[Token(Token = "0x600279A")]
		[Address(RVA = "0x1257110", Offset = "0x1257110", VA = "0x1257110")]
		public static void SetImageColor(int page, PageSide side, int imageNumber, Color color)
		{
		}

		[Token(Token = "0x600279B")]
		[Address(RVA = "0x12574AC", Offset = "0x12574AC", VA = "0x12574AC")]
		public static void SetImageColor(string pageId, PageSide side, int imageNumber, Color color)
		{
		}

		[Token(Token = "0x600279C")]
		[Address(RVA = "0x1257854", Offset = "0x1257854", VA = "0x1257854")]
		public static void SetImageMaterial(int page, PageSide side, int imageNumber, Material material)
		{
		}

		[Token(Token = "0x600279D")]
		[Address(RVA = "0x1257BC8", Offset = "0x1257BC8", VA = "0x1257BC8")]
		public static void SetImageMaterial(string pageId, PageSide side, int imageNumber, Material material)
		{
		}

		[Token(Token = "0x600279E")]
		[Address(RVA = "0x1257F48", Offset = "0x1257F48", VA = "0x1257F48")]
		public static void SetNewHomePage(int newHomePage)
		{
		}

		[Token(Token = "0x600279F")]
		[Address(RVA = "0x1255314", Offset = "0x1255314", VA = "0x1255314")]
		public static void AddNewPage(int pageNumber)
		{
		}

		[Token(Token = "0x60027A0")]
		[Address(RVA = "0x125528C", Offset = "0x125528C", VA = "0x125528C")]
		public static void AddNewPage(string pageId)
		{
		}

		[Token(Token = "0x60027A1")]
		[Address(RVA = "0x1257F7C", Offset = "0x1257F7C", VA = "0x1257F7C")]
		public MT_JournalMethods()
		{
		}
	}
	[Token(Token = "0x20007CB")]
	public sealed class MT_NPCManager : MonoBehaviour
	{
		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<MT_NPCGameplay> _npcs;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static GameObject _go;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool _initialized;

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0x10F7A08", Offset = "0x10F7A08", VA = "0x10F7A08")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xE990E4", Offset = "0xE990E4")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x10F7350", Offset = "0x10F7350", VA = "0x10F7350")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0x10F7B80", Offset = "0x10F7B80", VA = "0x10F7B80")]
		public static void AddHeroCharacter(MT_NPCGameplay characterGameplayScript)
		{
		}

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x10F7C64", Offset = "0x10F7C64", VA = "0x10F7C64")]
		public static void RemoveCharacter(MT_NPCGameplay characterGameplayScript)
		{
		}

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0x10F7D48", Offset = "0x10F7D48", VA = "0x10F7D48")]
		public static void ClearCharacters()
		{
		}

		[Token(Token = "0x60027A7")]
		[Address(RVA = "0x10F7DCC", Offset = "0x10F7DCC", VA = "0x10F7DCC")]
		public MT_NPCManager()
		{
		}
	}
	[Token(Token = "0x20007CC")]
	public class MT_PlayerMethods
	{
		[Token(Token = "0x20007CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE754C8", Offset = "0xE754C8")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x400207C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_PlayerParameters playerParameters;

			[Token(Token = "0x400207D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 position;

			[Token(Token = "0x400207E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion rotation;

			[Token(Token = "0x400207F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MT_Sittable seated;

			[Token(Token = "0x4002080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action <>9__2;

			[Token(Token = "0x60027DA")]
			[Address(RVA = "0x32B79A4", Offset = "0x32B79A4", VA = "0x32B79A4")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60027DB")]
			[Address(RVA = "0x32B79AC", Offset = "0x32B79AC", VA = "0x32B79AC")]
			internal void <MoveToPosition>b__0()
			{
			}

			[Token(Token = "0x60027DC")]
			[Address(RVA = "0x32B7BA8", Offset = "0x32B7BA8", VA = "0x32B7BA8")]
			internal void <MoveToPosition>b__2()
			{
			}

			[Token(Token = "0x60027DD")]
			[Address(RVA = "0x32B7C04", Offset = "0x32B7C04", VA = "0x32B7C04")]
			internal void <MoveToPosition>b__1()
			{
			}
		}

		[Token(Token = "0x20007CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE754D8", Offset = "0xE754D8")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x20007CF")]
			private sealed class <<MovePlayerToSit>g__DoSit|2>d : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x400208D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x400208E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x400208F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public <>c__DisplayClass30_0 <>4__this;

				[Token(Token = "0x4002090")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private <>c__DisplayClass30_1 <>8__1;

				[Token(Token = "0x4002091")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private Vector3 <standingCenter>5__2;

				[Token(Token = "0x4002092")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
				private Quaternion <cameraRot>5__3;

				[Token(Token = "0x1700043C")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60027E5")]
					[Address(RVA = "0x2170A3C", Offset = "0x2170A3C", VA = "0x2170A3C", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700043D")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60027E7")]
					[Address(RVA = "0x2170A84", Offset = "0x2170A84", VA = "0x2170A84", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60027E2")]
				[Address(RVA = "0x21700DC", Offset = "0x21700DC", VA = "0x21700DC")]
				[DebuggerHidden]
				public <<MovePlayerToSit>g__DoSit|2>d(int <>1__state)
				{
				}

				[Token(Token = "0x60027E3")]
				[Address(RVA = "0x2170108", Offset = "0x2170108", VA = "0x2170108", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60027E4")]
				[Address(RVA = "0x217010C", Offset = "0x217010C", VA = "0x217010C", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60027E6")]
				[Address(RVA = "0x2170A44", Offset = "0x2170A44", VA = "0x2170A44", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4002081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onComplete;

			[Token(Token = "0x4002082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MT_PlayerParameters playerParameters;

			[Token(Token = "0x4002083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float overridePlayerHeight;

			[Token(Token = "0x4002084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public MT_PlayerHeightType playerHeight;

			[Token(Token = "0x4002085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform overrideStandingPosition;

			[Token(Token = "0x4002086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool sitLocked;

			[Token(Token = "0x4002087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool hideUI;

			[Token(Token = "0x4002088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Quaternion rotation;

			[Token(Token = "0x4002089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Vector3 position;

			[Token(Token = "0x400208A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public UnityEvent onPlayerSit;

			[Token(Token = "0x400208B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Action onFadeIn;

			[Token(Token = "0x400208C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public bool immediate;

			[Token(Token = "0x60027DE")]
			[Address(RVA = "0x32B7C70", Offset = "0x32B7C70", VA = "0x32B7C70")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x60027DF")]
			[Address(RVA = "0x32B7C78", Offset = "0x32B7C78", VA = "0x32B7C78")]
			internal void <MovePlayerToSit>b__0()
			{
			}

			[Token(Token = "0x60027E0")]
			[Address(RVA = "0x32B7DDC", Offset = "0x32B7DDC", VA = "0x32B7DDC")]
			internal void <MovePlayerToSit>b__1()
			{
			}

			[Token(Token = "0x60027E1")]
			[Address(RVA = "0x32B7D64", Offset = "0x32B7D64", VA = "0x32B7D64")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE99164", Offset = "0xE99164")]
			internal IEnumerator <MovePlayerToSit>g__DoSit|2()
			{
				return null;
			}
		}

		[Token(Token = "0x20007D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE754E8", Offset = "0xE754E8")]
		private sealed class <>c__DisplayClass30_1
		{
			[Token(Token = "0x4002093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Teleporter teleport;

			[Token(Token = "0x60027E8")]
			[Address(RVA = "0x32B7DF0", Offset = "0x32B7DF0", VA = "0x32B7DF0")]
			public <>c__DisplayClass30_1()
			{
			}

			[Token(Token = "0x60027E9")]
			[Address(RVA = "0x32B7DF8", Offset = "0x32B7DF8", VA = "0x32B7DF8")]
			internal bool <MovePlayerToSit>b__3()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE754F8", Offset = "0xE754F8")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x20007D2")]
			private sealed class <<MovePlayerToStand>g__DoStand|2>d : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4002099")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x400209A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x400209B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public <>c__DisplayClass34_0 <>4__this;

				[Token(Token = "0x1700043E")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60027F1")]
					[Address(RVA = "0x2170E54", Offset = "0x2170E54", VA = "0x2170E54", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700043F")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60027F3")]
					[Address(RVA = "0x2170E9C", Offset = "0x2170E9C", VA = "0x2170E9C", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60027EE")]
				[Address(RVA = "0x2170A8C", Offset = "0x2170A8C", VA = "0x2170A8C")]
				[DebuggerHidden]
				public <<MovePlayerToStand>g__DoStand|2>d(int <>1__state)
				{
				}

				[Token(Token = "0x60027EF")]
				[Address(RVA = "0x2170AB8", Offset = "0x2170AB8", VA = "0x2170AB8", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60027F0")]
				[Address(RVA = "0x2170ABC", Offset = "0x2170ABC", VA = "0x2170ABC", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60027F2")]
				[Address(RVA = "0x2170E5C", Offset = "0x2170E5C", VA = "0x2170E5C", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4002094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onComplete;

			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool isPauseStandOverride;

			[Token(Token = "0x4002096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_PlayerParameters playerParameters;

			[Token(Token = "0x4002097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x4002098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Quaternion rotation;

			[Token(Token = "0x60027EA")]
			[Address(RVA = "0x32B7E1C", Offset = "0x32B7E1C", VA = "0x32B7E1C")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x60027EB")]
			[Address(RVA = "0x32B7E24", Offset = "0x32B7E24", VA = "0x32B7E24")]
			internal void <MovePlayerToStand>b__0()
			{
			}

			[Token(Token = "0x60027EC")]
			[Address(RVA = "0x32B7F88", Offset = "0x32B7F88", VA = "0x32B7F88")]
			internal void <MovePlayerToStand>b__1()
			{
			}

			[Token(Token = "0x60027ED")]
			[Address(RVA = "0x32B7F10", Offset = "0x32B7F10", VA = "0x32B7F10")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE99214", Offset = "0xE99214")]
			internal IEnumerator <MovePlayerToStand>g__DoStand|2()
			{
				return null;
			}
		}

		[Token(Token = "0x20007D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75508", Offset = "0xE75508")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x400209C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_PlayerParameters playerParameters;

			[Token(Token = "0x400209D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Quaternion rotation;

			[Token(Token = "0x400209E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MT_Sittable seated;

			[Token(Token = "0x60027F4")]
			[Address(RVA = "0x32B7F9C", Offset = "0x32B7F9C", VA = "0x32B7F9C")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x60027F5")]
			[Address(RVA = "0x32B7FA4", Offset = "0x32B7FA4", VA = "0x32B7FA4")]
			internal void <MoveToPositionInstantly>b__0()
			{
			}

			[Token(Token = "0x60027F6")]
			[Address(RVA = "0x32B8034", Offset = "0x32B8034", VA = "0x32B8034")]
			internal void <MoveToPositionInstantly>b__1()
			{
			}
		}

		[Token(Token = "0x20007D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75518", Offset = "0xE75518")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x20007D5")]
			private sealed class <<SetRotation>g__RotationSetter|0>d : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40020A1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40020A2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x40020A3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public <>c__DisplayClass39_0 <>4__this;

				[Token(Token = "0x40020A4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private int <i>5__2;

				[Token(Token = "0x17000440")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60027FD")]
					[Address(RVA = "0x2171060", Offset = "0x2171060", VA = "0x2171060", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000441")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60027FF")]
					[Address(RVA = "0x21710A8", Offset = "0x21710A8", VA = "0x21710A8", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60027FA")]
				[Address(RVA = "0x2170EA4", Offset = "0x2170EA4", VA = "0x2170EA4")]
				[DebuggerHidden]
				public <<SetRotation>g__RotationSetter|0>d(int <>1__state)
				{
				}

				[Token(Token = "0x60027FB")]
				[Address(RVA = "0x2170ED0", Offset = "0x2170ED0", VA = "0x2170ED0", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60027FC")]
				[Address(RVA = "0x2170ED4", Offset = "0x2170ED4", VA = "0x2170ED4", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60027FE")]
				[Address(RVA = "0x2171068", Offset = "0x2171068", VA = "0x2171068", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x400209F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_PlayerParameters playerParameters;

			[Token(Token = "0x40020A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Quaternion rotation;

			[Token(Token = "0x60027F7")]
			[Address(RVA = "0x32B8090", Offset = "0x32B8090", VA = "0x32B8090")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x60027F8")]
			[Address(RVA = "0x32B8098", Offset = "0x32B8098", VA = "0x32B8098")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE992C4", Offset = "0xE992C4")]
			internal IEnumerator <SetRotation>g__RotationSetter|0()
			{
				return null;
			}

			[Token(Token = "0x60027F9")]
			[Address(RVA = "0x32B8110", Offset = "0x32B8110", VA = "0x32B8110")]
			internal void <SetRotation>b__1()
			{
			}
		}

		[Token(Token = "0x20007D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75528", Offset = "0xE75528")]
		private sealed class <<OnRecenterDuringSit>g__WaitAndReSit|31_0>d : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000442")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002803")]
				[Address(RVA = "0x32B7954", Offset = "0x32B7954", VA = "0x32B7954", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000443")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002805")]
				[Address(RVA = "0x32B799C", Offset = "0x32B799C", VA = "0x32B799C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002800")]
			[Address(RVA = "0x32B784C", Offset = "0x32B784C", VA = "0x32B784C")]
			[DebuggerHidden]
			public <<OnRecenterDuringSit>g__WaitAndReSit|31_0>d(int <>1__state)
			{
			}

			[Token(Token = "0x6002801")]
			[Address(RVA = "0x32B7878", Offset = "0x32B7878", VA = "0x32B7878", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002802")]
			[Address(RVA = "0x32B787C", Offset = "0x32B787C", VA = "0x32B787C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002804")]
			[Address(RVA = "0x32B795C", Offset = "0x32B795C", VA = "0x32B795C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _sitFromPause;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Vector3 _pauseOverridePosition;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Quaternion _pauseOverrideRotation;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool[] _playerLayerCollisionCache;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static bool playerLayerCollisionCacheSet;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static Vector3 _sitOverridePosition;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static MT_PlayerHeightType _cachedHeightType;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Transform _cachedLocation;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static float _cachedOverridePlayerHeight;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private static bool _cachedSitLocked;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private static bool _cachedHideUI;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static Coroutine _sitOrStandCoroutine;

		[Token(Token = "0x1700043B")]
		private static MT_CoroutineRunner CoroutineRunner
		{
			[Token(Token = "0x60027A9")]
			[Address(RVA = "0x132EAAC", Offset = "0x132EAAC", VA = "0x132EAAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0x132EB10", Offset = "0x132EB10", VA = "0x132EB10")]
		public static void EnableForceGrab(bool isEnabled)
		{
		}

		[Token(Token = "0x60027AB")]
		[Address(RVA = "0x132E794", Offset = "0x132E794", VA = "0x132E794")]
		public static void EnablePlayerLocomotion(bool isEnabled)
		{
		}

		[Token(Token = "0x60027AC")]
		[Address(RVA = "0x132EB6C", Offset = "0x132EB6C", VA = "0x132EB6C")]
		public static void EnablePlayerSnapTurn(bool isEnabled)
		{
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0x132EBA4", Offset = "0x132EBA4", VA = "0x132EBA4")]
		public static void EnablePlayerTeleport(bool isEnabled)
		{
		}

		[Token(Token = "0x60027AE")]
		[Address(RVA = "0x132D100", Offset = "0x132D100", VA = "0x132D100")]
		public static void EnablePlayerHandsInteraction(bool isEnabled)
		{
		}

		[Token(Token = "0x60027AF")]
		[Address(RVA = "0x132EC8C", Offset = "0x132EC8C", VA = "0x132EC8C")]
		public static void EnablePlayerUIInteraction(bool isEnabled)
		{
		}

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0x132EC90", Offset = "0x132EC90", VA = "0x132EC90")]
		public static void EnablePlayerUILines(bool isEnabled)
		{
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0x132ECFC", Offset = "0x132ECFC", VA = "0x132ECFC")]
		public static void EnablePlayerUIToggleMenu(bool isEnabled)
		{
		}

		[Token(Token = "0x60027B2")]
		[Address(RVA = "0x132D4B8", Offset = "0x132D4B8", VA = "0x132D4B8")]
		public static void EnablePlayerVRHeadGestures(bool isEnabled)
		{
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x132D01C", Offset = "0x132D01C", VA = "0x132D01C")]
		public static void EnablePlayerVRHandGestures(bool isEnabled)
		{
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0x1326C20", Offset = "0x1326C20", VA = "0x1326C20")]
		public static void MovePlayer(Vector3 position, Quaternion rotation, bool instantaneous = false, bool forceRotation = false, [Optional] MT_Sittable seated)
		{
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x132E284", Offset = "0x132E284", VA = "0x132E284")]
		public static void MovePlayer(Transform location, bool instantaneous = false, bool forceRotation = false)
		{
		}

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0x132F3E8", Offset = "0x132F3E8", VA = "0x132F3E8")]
		private static void MoveToPosition(Transform location)
		{
		}

		[Token(Token = "0x60027B7")]
		[Address(RVA = "0x132F17C", Offset = "0x132F17C", VA = "0x132F17C")]
		private static void MoveToPosition(Vector3 position, Quaternion rotation, [Optional] MT_Sittable seated)
		{
		}

		[Token(Token = "0x60027B8")]
		[Address(RVA = "0x132F4C0", Offset = "0x132F4C0", VA = "0x132F4C0")]
		public static void MovePlayerToSitFromPause()
		{
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0x132F558", Offset = "0x132F558", VA = "0x132F558")]
		public static void MovePlayerToSit(MT_Sittable sittable, [Optional] Action onFadeIn, bool immediate = false, bool hideUI = false, [Optional] Action onComplete)
		{
		}

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0x132F644", Offset = "0x132F644", VA = "0x132F644")]
		public static void MovePlayerToSit(MT_PlayerHeightType playerHeight, Transform location, float overridePlayerHeight = -1f, [Optional] Transform overrideStandingPosition, bool sitLocked = false, [Optional] Action onFadeIn, bool immediate = false, bool hideUI = false, [Optional] UnityEvent onPlayerSit, [Optional] Action onComplete)
		{
		}

		[Token(Token = "0x60027BB")]
		[Address(RVA = "0x132FA98", Offset = "0x132FA98", VA = "0x132FA98")]
		private static void OnRecenterDuringSit()
		{
		}

		[Token(Token = "0x60027BC")]
		[Address(RVA = "0x132FBB8", Offset = "0x132FBB8", VA = "0x132FBB8")]
		public static void UnlockPlayerSit()
		{
		}

		[Token(Token = "0x60027BD")]
		[Address(RVA = "0x132FBE0", Offset = "0x132FBE0", VA = "0x132FBE0")]
		public static void MovePlayerToStandForPause(Vector3 overridePosition, Quaternion overrideRotation)
		{
		}

		[Token(Token = "0x60027BE")]
		[Address(RVA = "0x132FCA0", Offset = "0x132FCA0", VA = "0x132FCA0")]
		public static void MovePlayerToStand([Optional] Action onComplete, bool isPauseStandOverride = false, bool isReturnToMainMenu = false)
		{
		}

		[Token(Token = "0x60027BF")]
		[Address(RVA = "0x132FA30", Offset = "0x132FA30", VA = "0x132FA30")]
		private static void ClearCachedValues()
		{
		}

		[Token(Token = "0x60027C0")]
		[Address(RVA = "0x132F300", Offset = "0x132F300", VA = "0x132F300")]
		private static void MoveToPositionInstantly(Transform location, bool forceRotation = false)
		{
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0x132ED34", Offset = "0x132ED34", VA = "0x132ED34")]
		private static void MoveToPositionInstantly(Vector3 position, Quaternion rotation, bool forciblyChangeCameraRotation = false, [Optional] MT_Sittable seated)
		{
		}

		[Token(Token = "0x60027C2")]
		[Address(RVA = "0x1330270", Offset = "0x1330270", VA = "0x1330270")]
		private static void ReEnableCollisions()
		{
		}

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0x1330130", Offset = "0x1330130", VA = "0x1330130")]
		public static void SetRotation(MT_PlayerParameters playerParameters, Quaternion rotation)
		{
		}

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0x1330328", Offset = "0x1330328", VA = "0x1330328")]
		public static void SetPlayerHeight(MT_PlayerHeightType playerHeight)
		{
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0x133035C", Offset = "0x133035C", VA = "0x133035C")]
		public static void SetPlayerHeight(float playerHeight)
		{
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0x1330390", Offset = "0x1330390", VA = "0x1330390")]
		public static float GetCurrentPlayerHeight()
		{
			return default(float);
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0x13303B4", Offset = "0x13303B4", VA = "0x13303B4")]
		public static Vector3 GetPlayerPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0x132C958", Offset = "0x132C958", VA = "0x132C958")]
		public static float GetPlayerDistanceToObject(Transform gameObj)
		{
			return default(float);
		}

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0x132E920", Offset = "0x132E920", VA = "0x132E920")]
		public static bool IsPlayerLookingAt(Transform gameObj, LayerMask layer)
		{
			return default(bool);
		}

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0x132D940", Offset = "0x132D940", VA = "0x132D940")]
		public static float GetPlayerHealth()
		{
			return default(float);
		}

		[Token(Token = "0x60027CB")]
		[Address(RVA = "0x13303DC", Offset = "0x13303DC", VA = "0x13303DC")]
		public static void DamagePlayer(float damage)
		{
		}

		[Token(Token = "0x60027CC")]
		[Address(RVA = "0x1330410", Offset = "0x1330410", VA = "0x1330410")]
		public static void HealPlayer(float health)
		{
		}

		[Token(Token = "0x60027CD")]
		[Address(RVA = "0x1330444", Offset = "0x1330444", VA = "0x1330444")]
		public static void KillPlayer()
		{
		}

		[Token(Token = "0x60027CE")]
		[Address(RVA = "0x1330480", Offset = "0x1330480", VA = "0x1330480")]
		public static void SetPlayerSpeedMultiplier(float multiplier)
		{
		}

		[Token(Token = "0x60027CF")]
		[Address(RVA = "0x13304B4", Offset = "0x13304B4", VA = "0x13304B4")]
		public static void ResetPlayerSpeedMultiplier()
		{
		}

		[Token(Token = "0x60027D0")]
		[Address(RVA = "0x13304DC", Offset = "0x13304DC", VA = "0x13304DC")]
		public static void ChangePlayerSpeed(float speed)
		{
		}

		[Token(Token = "0x60027D1")]
		[Address(RVA = "0x1330530", Offset = "0x1330530", VA = "0x1330530")]
		public static void ResetPlayerSpeed()
		{
		}

		[Token(Token = "0x60027D2")]
		[Address(RVA = "0x1330558", Offset = "0x1330558", VA = "0x1330558")]
		public static void EnableRightHandHaptics(bool isEnabled)
		{
		}

		[Token(Token = "0x60027D3")]
		[Address(RVA = "0x1330590", Offset = "0x1330590", VA = "0x1330590")]
		public static void EnableLeftHandHaptics(bool isEnabled)
		{
		}

		[Token(Token = "0x60027D4")]
		[Address(RVA = "0x13305C8", Offset = "0x13305C8", VA = "0x13305C8")]
		public static void SwapLeftHandMaterial(Material newMat)
		{
		}

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0x1330684", Offset = "0x1330684", VA = "0x1330684")]
		public static void SwapRightHandMaterial(Material newMat)
		{
		}

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0x1330740", Offset = "0x1330740", VA = "0x1330740")]
		public static void SwapBothHandsMaterials(Material newLeftMat, Material newRightMat)
		{
		}

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0x13307B4", Offset = "0x13307B4", VA = "0x13307B4")]
		public MT_PlayerMethods()
		{
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0x132FB5C", Offset = "0x132FB5C", VA = "0x132FB5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE990F4", Offset = "0xE990F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE990F4", Offset = "0xE990F4")]
		internal static IEnumerator <OnRecenterDuringSit>g__WaitAndReSit|31_0()
		{
			return null;
		}
	}
	[Token(Token = "0x20007D7")]
	public class MT_PlayerParameters : MonoBehaviour
	{
		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera playerCamera;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform playerRig;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform floorOffset;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightHandTransform;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform leftHandTransform;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform eyesTransform;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SkinnedMeshRenderer leftGlove;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SkinnedMeshRenderer rightGlove;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MT_FPSController fpsController;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public HVRJointHand rightHandJoint;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public HVRJointHand leftHandJoint;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public HVRCameraRig cameraRig;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Teleporter teleport;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public MazeTheory.PlayerController.PlayerController locomotion;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public MT_Blinker blinker;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public MT_PlayerHeight playerHeight;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public MT_PlayerSit playerSit;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public MT_UIOpenMenu uiOpenMenu;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public HVRHandGrabber leftHandGrabber;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public HVRHandGrabber rightHandGrabber;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public HVRForceGrabber leftHandForceGrab;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public HVRForceGrabber rightHandForceGrab;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public MT_HeadGestures headGestures;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public MT_HandGestures handGestures;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public MT_PlayerHealth playerHealth;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public MT_HandHaptics rightHandHaptics;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public MT_HandHaptics leftHandHaptics;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public HVRUIPointer leftHandUIPointer;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public HVRUIPointer rightHandUIPointer;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public HandsLateUpdateOverride rightHandLateUpdateOverride;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public HandsLateUpdateOverride leftHandLateUpdateOverride;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public MT_HandPopup handPopup;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public TextMeshProUGUI subtitleText;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public JournalHandler journalHandler;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public HeightOptionsMenu heightOptionsMenu;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GameObject playerLighter;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public GameObject playerGun;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Transform eyesIkTarget;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Transform singleEyeIkTarget;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Transform singleEyeIKTransform;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Transform headIKTarget;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Transform bodyIkTarget;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Collider headCollider;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Collider bodyCollider;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public GameObject TouchControllerLeft;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public GameObject TouchControllerRight;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public GameObject buttonHighlightX;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public GameObject buttonHighlightY;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public GameObject buttonHighlightB;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public GameObject buttonHighlightA;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public GameObject buttonHighlightRightStick;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public GameObject buttonHighlightLeftStick;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public GameObject buttonHighlightRightTrigger;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public GameObject buttonHighlightLeftTrigger;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public GameObject buttonHighlightLeftGrip;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public GameObject buttonHighlightRightGrip;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public GameObject rightStickArrowUpIcon;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public GameObject rightStickArrowRightIcon;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public GameObject rightStickArrowLeftIcon;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public GameObject rightStickArrowDownIcon;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public GameObject rightStickArrowClickIcon;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public GameObject leftStickArrowUpIcon;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public GameObject leftStickArrowRightIcon;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public GameObject leftStickArrowLeftIcon;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public GameObject leftStickArrowDownIcon;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public GameObject leftStickArrowClickIcon;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public SocketLinker inventorySocketLinker;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public Transform bodySlotsTransform;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public MT_Tunnelling visionTunnelling;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public MT_AdjustableWaistHolsters waistHolsters;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public NetworkLocalPlayer networkLocalPlayer;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public Transform closedCaptionTarget;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public GameObject lineRightStick;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public GameObject lineButtonA;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public GameObject lineButtonB;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public GameObject lineButtonRightGrip;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public GameObject lineButtonRightTrigger;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public GameObject lineLeftStick;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public GameObject lineButtonX;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public GameObject lineButtonY;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public GameObject lineButtonLeftGrip;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public GameObject lineButtonLeftTrigger;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public MeshRenderer buttonOculus_Mesh;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public MeshRenderer buttonA_Mesh;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public MeshRenderer buttonB_Mesh;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public MeshRenderer rightController_Mesh;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public MeshRenderer rightControllerTop_Mesh;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public MeshRenderer rightGrip_Mesh;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public MeshRenderer rightStick_Mesh;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public MeshRenderer rightTrigger_Mesh;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public MeshRenderer buttonMenu_Mesh;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public MeshRenderer buttonX_Mesh;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public MeshRenderer buttonY_Mesh;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public MeshRenderer leftController_Mesh;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public MeshRenderer leftControllerTop_Mesh;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public MeshRenderer leftGrip_Mesh;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public MeshRenderer leftStick_Mesh;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public MeshRenderer leftTrigger_Mesh;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public GameObject leftHandTutorialTextGameObj;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public GameObject rightHandTutorialTextGameObj;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool isInitialized;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public static bool returningToMainMenu;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE86CCC", Offset = "0xE86CCC")]
		private bool <IsPlayerRiding>k__BackingField;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE86CDC", Offset = "0xE86CDC")]
		private Transform <RideTransform>k__BackingField;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private Vector3 _lastRidePositionFixed;

		[Token(Token = "0x17000444")]
		public bool IsPlayerRiding
		{
			[Token(Token = "0x600280A")]
			[Address(RVA = "0x1331E5C", Offset = "0x1331E5C", VA = "0x1331E5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE99404", Offset = "0xE99404")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600280B")]
			[Address(RVA = "0x1331E64", Offset = "0x1331E64", VA = "0x1331E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE99414", Offset = "0xE99414")]
			private set
			{
			}
		}

		[Token(Token = "0x17000445")]
		public Transform RideTransform
		{
			[Token(Token = "0x600280C")]
			[Address(RVA = "0x1331E70", Offset = "0x1331E70", VA = "0x1331E70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE99424", Offset = "0xE99424")]
			get
			{
				return null;
			}
			[Token(Token = "0x600280D")]
			[Address(RVA = "0x1331E78", Offset = "0x1331E78", VA = "0x1331E78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE99434", Offset = "0xE99434")]
			private set
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public event Action OnDestroyed
		{
			[Token(Token = "0x6002806")]
			[Address(RVA = "0x1331B9C", Offset = "0x1331B9C", VA = "0x1331B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE993C4", Offset = "0xE993C4")]
			add
			{
			}
			[Token(Token = "0x6002807")]
			[Address(RVA = "0x1331C40", Offset = "0x1331C40", VA = "0x1331C40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE993D4", Offset = "0xE993D4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004C")]
		public static event Action OnInitialize
		{
			[Token(Token = "0x6002808")]
			[Address(RVA = "0x1331CE4", Offset = "0x1331CE4", VA = "0x1331CE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE993E4", Offset = "0xE993E4")]
			add
			{
			}
			[Token(Token = "0x6002809")]
			[Address(RVA = "0x1331DA0", Offset = "0x1331DA0", VA = "0x1331DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE993F4", Offset = "0xE993F4")]
			remove
			{
			}
		}

		[Token(Token = "0x600280E")]
		[Address(RVA = "0x1331E88", Offset = "0x1331E88", VA = "0x1331E88")]
		public void Awake()
		{
		}

		[Token(Token = "0x600280F")]
		[Address(RVA = "0x133208C", Offset = "0x133208C", VA = "0x133208C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002810")]
		[Address(RVA = "0x1332190", Offset = "0x1332190", VA = "0x1332190")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0x1332340", Offset = "0x1332340", VA = "0x1332340")]
		public void EnablePlayerRiding(bool isPlayerRiding, Transform rideTransform)
		{
		}

		[Token(Token = "0x6002812")]
		[Address(RVA = "0x133241C", Offset = "0x133241C", VA = "0x133241C")]
		public void SubtitlesTeleporterEvent()
		{
		}

		[Token(Token = "0x6002813")]
		[Address(RVA = "0x13321A0", Offset = "0x13321A0", VA = "0x13321A0")]
		private void FixedUpdateCharAndHandPos()
		{
		}

		[Token(Token = "0x6002814")]
		[Address(RVA = "0x1326944", Offset = "0x1326944", VA = "0x1326944")]
		public static MT_PlayerParameters Instance()
		{
			return null;
		}

		[Token(Token = "0x6002815")]
		[Address(RVA = "0x1332578", Offset = "0x1332578", VA = "0x1332578")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6002816")]
		[Address(RVA = "0x13325DC", Offset = "0x13325DC", VA = "0x13325DC")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002817")]
		[Address(RVA = "0x133263C", Offset = "0x133263C", VA = "0x133263C")]
		public void SetPlayerCameraClearToBlack()
		{
		}

		[Token(Token = "0x6002818")]
		[Address(RVA = "0x1332688", Offset = "0x1332688", VA = "0x1332688")]
		public void SetCameraClearFlagsToNormal()
		{
		}

		[Token(Token = "0x6002819")]
		[Address(RVA = "0x13326A8", Offset = "0x13326A8", VA = "0x13326A8")]
		public MT_PlayerParameters()
		{
		}
	}
	[Token(Token = "0x20007D8")]
	public static class PTSDController
	{
		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PTSDData _data;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE86CEC", Offset = "0xE86CEC")]
		private static PTSDLocationEffects <LocationEffects>k__BackingField;

		[Token(Token = "0x17000446")]
		public static PTSDLocationEffects LocationEffects
		{
			[Token(Token = "0x600281B")]
			[Address(RVA = "0x107C644", Offset = "0x107C644", VA = "0x107C644")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE99454", Offset = "0xE99454")]
			private get
			{
				return null;
			}
			[Token(Token = "0x600281A")]
			[Address(RVA = "0x107C5F0", Offset = "0x107C5F0", VA = "0x107C5F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE99444", Offset = "0xE99444")]
			set
			{
			}
		}

		[Token(Token = "0x600281C")]
		[Address(RVA = "0x107C690", Offset = "0x107C690", VA = "0x107C690")]
		public static void Trigger(PTSDData data)
		{
		}

		[Token(Token = "0x600281D")]
		[Address(RVA = "0x107C7D4", Offset = "0x107C7D4", VA = "0x107C7D4")]
		public static void Stop()
		{
		}
	}
	[Token(Token = "0x20007D9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE75538", Offset = "0xE75538")]
	public sealed class PTSDData : ScriptableObject
	{
		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip SFX;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string DialogueID;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IndoorRain;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool Desaturation;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool Waviness;

		[Token(Token = "0x600281E")]
		[Address(RVA = "0x107C8F4", Offset = "0x107C8F4", VA = "0x107C8F4")]
		public PTSDData()
		{
		}
	}
	[Token(Token = "0x20007DA")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE7557C", Offset = "0xE7557C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE7557C", Offset = "0xE7557C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE7557C", Offset = "0xE7557C")]
	public sealed class TriggerPTSDNode : CallableActionNode<PTSDData>
	{
		[Token(Token = "0x600281F")]
		[Address(RVA = "0x13533B0", Offset = "0x13533B0", VA = "0x13533B0", Slot = "12")]
		public override void Invoke(PTSDData data)
		{
		}

		[Token(Token = "0x6002820")]
		[Address(RVA = "0x1353434", Offset = "0x1353434", VA = "0x1353434")]
		public TriggerPTSDNode()
		{
		}
	}
	[Token(Token = "0x20007DB")]
	public sealed class StopPTSDNode : CallableActionNode
	{
		[Token(Token = "0x6002821")]
		[Address(RVA = "0x32E39E0", Offset = "0x32E39E0", VA = "0x32E39E0", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6002822")]
		[Address(RVA = "0x32E39E8", Offset = "0x32E39E8", VA = "0x32E39E8")]
		public StopPTSDNode()
		{
		}
	}
	[Token(Token = "0x20007DC")]
	public sealed class CollisionIgnore : MonoBehaviour
	{
		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool triggersOnly;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool includeTriggers;

		[Token(Token = "0x6002823")]
		[Address(RVA = "0x120BEDC", Offset = "0x120BEDC", VA = "0x120BEDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002824")]
		[Address(RVA = "0x120C89C", Offset = "0x120C89C", VA = "0x120C89C")]
		public CollisionIgnore()
		{
		}
	}
	[Token(Token = "0x20007DD")]
	public static class CollisionIgnoreManager
	{
		[Token(Token = "0x20007DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75604", Offset = "0xE75604")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400211C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CollisionIgnore collisionIgnore;

			[Token(Token = "0x400211D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<CollisionIgnore, bool> <>9__2;

			[Token(Token = "0x6002828")]
			[Address(RVA = "0x16A443C", Offset = "0x16A443C", VA = "0x16A443C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002829")]
			[Address(RVA = "0x16A4444", Offset = "0x16A4444", VA = "0x16A4444")]
			internal bool <Register>b__2(CollisionIgnore x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20007DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75614", Offset = "0xE75614")]
		private sealed class <>c
		{
			[Token(Token = "0x400211E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400211F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__1_0;

			[Token(Token = "0x4002120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Collider, bool> <>9__1_1;

			[Token(Token = "0x4002121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Collider, bool> <>9__1_3;

			[Token(Token = "0x4002122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Collider, bool> <>9__1_4;

			[Token(Token = "0x600282B")]
			[Address(RVA = "0x16A43A4", Offset = "0x16A43A4", VA = "0x16A43A4")]
			public <>c()
			{
			}

			[Token(Token = "0x600282C")]
			[Address(RVA = "0x16A43AC", Offset = "0x16A43AC", VA = "0x16A43AC")]
			internal bool <Register>b__1_0(Collider x)
			{
				return default(bool);
			}

			[Token(Token = "0x600282D")]
			[Address(RVA = "0x16A43C8", Offset = "0x16A43C8", VA = "0x16A43C8")]
			internal bool <Register>b__1_1(Collider x)
			{
				return default(bool);
			}

			[Token(Token = "0x600282E")]
			[Address(RVA = "0x16A43F4", Offset = "0x16A43F4", VA = "0x16A43F4")]
			internal bool <Register>b__1_3(Collider x)
			{
				return default(bool);
			}

			[Token(Token = "0x600282F")]
			[Address(RVA = "0x16A4410", Offset = "0x16A4410", VA = "0x16A4410")]
			internal bool <Register>b__1_4(Collider x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<CollisionIgnore> CollisionIgnores;

		[Token(Token = "0x6002825")]
		[Address(RVA = "0x120BF3C", Offset = "0x120BF3C", VA = "0x120BF3C")]
		public static void Register(CollisionIgnore collisionIgnore)
		{
		}

		[Token(Token = "0x6002826")]
		[Address(RVA = "0x120C8A4", Offset = "0x120C8A4", VA = "0x120C8A4")]
		public static void Clear()
		{
		}
	}
	[Token(Token = "0x20007E0")]
	public sealed class CollisionIgnorePerCollider : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75624", Offset = "0xE75624")]
		private sealed class <>c
		{
			[Token(Token = "0x4002124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<Collider> <>9__1_0;

			[Token(Token = "0x6002833")]
			[Address(RVA = "0x16A4520", Offset = "0x16A4520", VA = "0x16A4520")]
			public <>c()
			{
			}

			[Token(Token = "0x6002834")]
			[Address(RVA = "0x16A4528", Offset = "0x16A4528", VA = "0x16A4528")]
			internal bool <Start>b__1_0(Collider x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Collider[] collidersToIgnore;

		[Token(Token = "0x6002830")]
		[Address(RVA = "0x120C9B4", Offset = "0x120C9B4", VA = "0x120C9B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0x120CD70", Offset = "0x120CD70", VA = "0x120CD70")]
		public CollisionIgnorePerCollider()
		{
		}
	}
	[Token(Token = "0x20007E2")]
	public class PhysicsRigidbodyManager : MonoBehaviour
	{
		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SleepyRigidBody[] _bodyArray;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _bodyCount;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static bool _instanceCreated;

		[Token(Token = "0x6002835")]
		[Address(RVA = "0x107EB60", Offset = "0x107EB60", VA = "0x107EB60")]
		private static void TryCreate()
		{
		}

		[Token(Token = "0x6002836")]
		[Address(RVA = "0x107EC90", Offset = "0x107EC90", VA = "0x107EC90")]
		public static void Register(SleepyRigidBody sleepyRigidBody)
		{
		}

		[Token(Token = "0x6002837")]
		[Address(RVA = "0x107F070", Offset = "0x107F070", VA = "0x107F070")]
		public static void Deregister(SleepyRigidBody sleepyRigidBody)
		{
		}

		[Token(Token = "0x6002838")]
		[Address(RVA = "0x107F1A8", Offset = "0x107F1A8", VA = "0x107F1A8")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE99464", Offset = "0xE99464")]
		private void Update()
		{
		}

		[Token(Token = "0x6002839")]
		[Address(RVA = "0x107F328", Offset = "0x107F328", VA = "0x107F328")]
		public static void WakeBody(SleepyRigidBody body)
		{
		}

		[Token(Token = "0x600283A")]
		[Address(RVA = "0x107F3C4", Offset = "0x107F3C4", VA = "0x107F3C4")]
		private static void SleepBody(SleepyRigidBody body)
		{
		}

		[Token(Token = "0x600283B")]
		[Address(RVA = "0x107EDCC", Offset = "0x107EDCC", VA = "0x107EDCC")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE994DC", Offset = "0xE994DC")]
		private static bool IsInBodyArray(SleepyRigidBody s)
		{
			return default(bool);
		}

		[Token(Token = "0x600283C")]
		[Address(RVA = "0x107EED0", Offset = "0x107EED0", VA = "0x107EED0")]
		private static SleepyRigidBody[] CreateArray(List<SleepyRigidBody> list)
		{
			return null;
		}

		[Token(Token = "0x600283D")]
		[Address(RVA = "0x107F434", Offset = "0x107F434", VA = "0x107F434")]
		public PhysicsRigidbodyManager()
		{
		}
	}
	[Token(Token = "0x20007E3")]
	public static class RaycastHelper
	{
		[Token(Token = "0x600283F")]
		[Address(RVA = "0x1091224", Offset = "0x1091224", VA = "0x1091224")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE99554", Offset = "0xE99554")]
		public static bool RaycastNonAllocClosest(Vector3 startPoint, Vector3 endPoint, out RaycastHit closestHit, int hitCount = 1)
		{
			return default(bool);
		}

		[Token(Token = "0x6002840")]
		[Address(RVA = "0x10913F8", Offset = "0x10913F8", VA = "0x10913F8")]
		public static bool RayCastNonAllocClosest(Ray ray, out RaycastHit closestHit, int hitCount = 1)
		{
			return default(bool);
		}

		[Token(Token = "0x6002841")]
		[Address(RVA = "0x1091600", Offset = "0x1091600", VA = "0x1091600")]
		public static bool RayCastNonAllocClosest(Ray ray, out RaycastHit closestHit, LayerMask layerMask, float maxDistance, QueryTriggerInteraction queryTriggerInteraction, int hitCount = 1)
		{
			return default(bool);
		}

		[Token(Token = "0x6002842")]
		[Address(RVA = "0x10913F4", Offset = "0x10913F4", VA = "0x10913F4")]
		private static float3 ToFloat3(this Vector3 vec)
		{
			return default(float3);
		}
	}
	[Token(Token = "0x20007E4")]
	public sealed class SleepyRigidBody : MonoBehaviour
	{
		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody rigidbody;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HVRGrabbable _grabbable;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool preventSleeping;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float minForceToWake;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float sleepVelocity;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float timeUntilSleep;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[NaughtyAttributes.ReadOnly]
		public float timeStill;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[NaughtyAttributes.ReadOnly]
		public bool needsWakingUp;

		[Token(Token = "0x6002843")]
		[Address(RVA = "0x32DDF44", Offset = "0x32DDF44", VA = "0x32DDF44")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002844")]
		[Address(RVA = "0x32DE1F4", Offset = "0x32DE1F4", VA = "0x32DE1F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002845")]
		[Address(RVA = "0x32DE3A0", Offset = "0x32DE3A0", VA = "0x32DE3A0")]
		private void OnCollisionEnter(UnityEngine.Collision c)
		{
		}

		[Token(Token = "0x6002846")]
		[Address(RVA = "0x32DE408", Offset = "0x32DE408", VA = "0x32DE408")]
		public void AwakenImmediately()
		{
		}

		[Token(Token = "0x6002847")]
		[Address(RVA = "0x32DE46C", Offset = "0x32DE46C", VA = "0x32DE46C")]
		public void OnHandGrab(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
		{
		}

		[Token(Token = "0x6002848")]
		[Address(RVA = "0x32DE494", Offset = "0x32DE494", VA = "0x32DE494")]
		public void OnHandReleased(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
		{
		}

		[Token(Token = "0x6002849")]
		[Address(RVA = "0x32DE49C", Offset = "0x32DE49C", VA = "0x32DE49C")]
		public SleepyRigidBody()
		{
		}
	}
	[Token(Token = "0x20007E5")]
	public sealed class ForceCrouchInsideTrigger : MonoBehaviour
	{
		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool shouldForceCrouchOnEnter;

		[Token(Token = "0x600284A")]
		[Address(RVA = "0x100EACC", Offset = "0x100EACC", VA = "0x100EACC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0x100EB44", Offset = "0x100EB44", VA = "0x100EB44")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600284C")]
		[Address(RVA = "0x100EB84", Offset = "0x100EB84", VA = "0x100EB84")]
		public ForceCrouchInsideTrigger()
		{
		}
	}
	[Token(Token = "0x20007E6")]
	public class TurnOnOffGameObjectBasedOnFlag : MonoBehaviour
	{
		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string flag;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool gameObjectOn;

		[Token(Token = "0x600284D")]
		[Address(RVA = "0x1353884", Offset = "0x1353884", VA = "0x1353884")]
		private void Update()
		{
		}

		[Token(Token = "0x600284E")]
		[Address(RVA = "0x135391C", Offset = "0x135391C", VA = "0x135391C")]
		public TurnOnOffGameObjectBasedOnFlag()
		{
		}
	}
	[Token(Token = "0x20007E7")]
	public static class SlowMoHandler
	{
		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HVRTimeManager _internalTimeManager;

		[Token(Token = "0x17000447")]
		private static HVRTimeManager TimeManager
		{
			[Token(Token = "0x600284F")]
			[Address(RVA = "0x32DEF70", Offset = "0x32DEF70", VA = "0x32DEF70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0x32DBCE0", Offset = "0x32DBCE0", VA = "0x32DBCE0")]
		public static void SetSlowMoValue(float value)
		{
		}

		[Token(Token = "0x6002851")]
		[Address(RVA = "0x32DF080", Offset = "0x32DF080", VA = "0x32DF080")]
		public static void ToggleSlowMo()
		{
		}
	}
	[Token(Token = "0x20007E8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE75644", Offset = "0xE75644")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE75644", Offset = "0xE75644")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE75644", Offset = "0xE75644")]
	public sealed class ToggleSlowMo : CallableActionNode
	{
		[Token(Token = "0x6002852")]
		[Address(RVA = "0x1352D10", Offset = "0x1352D10", VA = "0x1352D10", Slot = "12")]
		public override void Invoke()
		{
		}

		[Token(Token = "0x6002853")]
		[Address(RVA = "0x1352D18", Offset = "0x1352D18", VA = "0x1352D18")]
		public ToggleSlowMo()
		{
		}
	}
	[Token(Token = "0x20007E9")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE756CC", Offset = "0xE756CC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE756CC", Offset = "0xE756CC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE756CC", Offset = "0xE756CC")]
	public sealed class SetSlowMoValue : CallableActionNode<float>
	{
		[Token(Token = "0x6002854")]
		[Address(RVA = "0x32DBCD4", Offset = "0x32DBCD4", VA = "0x32DBCD4", Slot = "12")]
		public override void Invoke(float value)
		{
		}

		[Token(Token = "0x6002855")]
		[Address(RVA = "0x32DBDA8", Offset = "0x32DBDA8", VA = "0x32DBDA8")]
		public SetSlowMoValue()
		{
		}
	}
	[Token(Token = "0x20007EA")]
	public enum TimeOfDay
	{
		[Token(Token = "0x4002136")]
		Dawn,
		[Token(Token = "0x4002137")]
		EarlyMorning,
		[Token(Token = "0x4002138")]
		MidMorning,
		[Token(Token = "0x4002139")]
		Afternoon,
		[Token(Token = "0x400213A")]
		EarlyEvening,
		[Token(Token = "0x400213B")]
		Evening,
		[Token(Token = "0x400213C")]
		Dusk,
		[Token(Token = "0x400213D")]
		Night
	}
	[Token(Token = "0x20007EB")]
	public static class TimeOfDayManager
	{
		[Token(Token = "0x17000448")]
		public static TimeOfDay CurrentTimeOfDay
		{
			[Token(Token = "0x6002856")]
			[Address(RVA = "0x134FAA0", Offset = "0x134FAA0", VA = "0x134FAA0")]
			get
			{
				return default(TimeOfDay);
			}
			[Token(Token = "0x6002857")]
			[Address(RVA = "0x134FC10", Offset = "0x134FC10", VA = "0x134FC10")]
			set
			{
			}
		}

		[Token(Token = "0x6002858")]
		[Address(RVA = "0x134FCF4", Offset = "0x134FCF4", VA = "0x134FCF4")]
		public static void SetTimeOfDay(TimeOfDay t)
		{
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0x134FCF8", Offset = "0x134FCF8", VA = "0x134FCF8")]
		public static string GetCurrentTimeOfDayString()
		{
			return null;
		}
	}
	[Token(Token = "0x20007EC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE75754", Offset = "0xE75754")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE75754", Offset = "0xE75754")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE75754", Offset = "0xE75754")]
	public class SetTimeOfDayNode : CallableActionNode<TimeOfDay>
	{
		[Token(Token = "0x600285A")]
		[Address(RVA = "0x32DBF10", Offset = "0x32DBF10", VA = "0x32DBF10", Slot = "12")]
		public override void Invoke(TimeOfDay t)
		{
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0x32DBF1C", Offset = "0x32DBF1C", VA = "0x32DBF1C")]
		public SetTimeOfDayNode()
		{
		}
	}
	[Token(Token = "0x20007ED")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE757DC", Offset = "0xE757DC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE757DC", Offset = "0xE757DC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE757DC", Offset = "0xE757DC")]
	public class GetTimeOfDayNode : CallableFunctionNode<TimeOfDay>
	{
		[Token(Token = "0x600285C")]
		[Address(RVA = "0x10D1FB4", Offset = "0x10D1FB4", VA = "0x10D1FB4", Slot = "12")]
		public override TimeOfDay Invoke()
		{
			return default(TimeOfDay);
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0x10D1FBC", Offset = "0x10D1FBC", VA = "0x10D1FBC")]
		public GetTimeOfDayNode()
		{
		}
	}
	[Token(Token = "0x20007EE")]
	public static class VibrationHandler
	{
		[Token(Token = "0x600285E")]
		[Address(RVA = "0x135ACE0", Offset = "0x135ACE0", VA = "0x135ACE0")]
		public static void Vibrate(float amplitude, float duration)
		{
		}

		[Token(Token = "0x600285F")]
		[Address(RVA = "0x135AE84", Offset = "0x135AE84", VA = "0x135AE84")]
		public static void VibrateLeft(float amplitude, float duration)
		{
		}

		[Token(Token = "0x6002860")]
		[Address(RVA = "0x135AFB4", Offset = "0x135AFB4", VA = "0x135AFB4")]
		public static void VibrateRight(float amplitude, float duration)
		{
		}

		[Token(Token = "0x6002861")]
		[Address(RVA = "0x135B0E0", Offset = "0x135B0E0", VA = "0x135B0E0")]
		public static void StopVibrate()
		{
		}

		[Token(Token = "0x6002862")]
		[Address(RVA = "0x135B20C", Offset = "0x135B20C", VA = "0x135B20C")]
		public static void StopVibrateLeft()
		{
		}

		[Token(Token = "0x6002863")]
		[Address(RVA = "0x135B2D0", Offset = "0x135B2D0", VA = "0x135B2D0")]
		public static void StopVibrateRight()
		{
		}
	}
}
namespace MazeTheory.Interaction
{
	[Token(Token = "0x20007EF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE75864", Offset = "0xE75864")]
	public class MT_AnimClipPlayer : MonoBehaviour
	{
		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEngine.Animation animationPlayer;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationClip[] clips;

		[Token(Token = "0x6002864")]
		[Address(RVA = "0x11238D8", Offset = "0x11238D8", VA = "0x11238D8")]
		[PublicAPI]
		public void PlayAnimClip(int index)
		{
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0x1123A60", Offset = "0x1123A60", VA = "0x1123A60")]
		[PublicAPI]
		public void Stop()
		{
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0x1123A7C", Offset = "0x1123A7C", VA = "0x1123A7C")]
		public MT_AnimClipPlayer()
		{
		}
	}
	[Token(Token = "0x20007F0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE7589C", Offset = "0xE7589C")]
	public class MT_DebugText : MonoBehaviour
	{
		[Token(Token = "0x20007F1")]
		private enum DebugType
		{
			[Token(Token = "0x4002142")]
			Log,
			[Token(Token = "0x4002143")]
			Warning,
			[Token(Token = "0x4002144")]
			Error
		}

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DebugType debugType;

		[Token(Token = "0x6002867")]
		[Address(RVA = "0x11340D0", Offset = "0x11340D0", VA = "0x11340D0")]
		[PublicAPI]
		public void DebugText(string text)
		{
		}

		[Token(Token = "0x6002868")]
		[Address(RVA = "0x11341E8", Offset = "0x11341E8", VA = "0x11341E8")]
		[PublicAPI]
		public void PrintText(string text)
		{
		}

		[Token(Token = "0x6002869")]
		[Address(RVA = "0x11341EC", Offset = "0x11341EC", VA = "0x11341EC")]
		[PublicAPI]
		public void LogText(string text)
		{
		}

		[Token(Token = "0x600286A")]
		[Address(RVA = "0x11341F0", Offset = "0x11341F0", VA = "0x11341F0")]
		public MT_DebugText()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007F2")]
	public struct DelayedEvent
	{
		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float delayTime;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnityEvent delayedEvent;
	}
	[Token(Token = "0x20007F3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE758D4", Offset = "0xE758D4")]
	public class MT_DelayedEvent : MonoBehaviour
	{
		[Token(Token = "0x20007F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7590C", Offset = "0xE7590C")]
		private sealed class <ScheduleEvent>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400214A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400214B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DelayedEvent evt;

			[Token(Token = "0x17000449")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002875")]
				[Address(RVA = "0x1036588", Offset = "0x1036588", VA = "0x1036588", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002877")]
				[Address(RVA = "0x10365D0", Offset = "0x10365D0", VA = "0x10365D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002872")]
			[Address(RVA = "0x10364A0", Offset = "0x10364A0", VA = "0x10364A0")]
			[DebuggerHidden]
			public <ScheduleEvent>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002873")]
			[Address(RVA = "0x10364CC", Offset = "0x10364CC", VA = "0x10364CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002874")]
			[Address(RVA = "0x10364D0", Offset = "0x10364D0", VA = "0x10364D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002876")]
			[Address(RVA = "0x1036590", Offset = "0x1036590", VA = "0x1036590", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DelayedEvent[] events;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine[] _eventCoroutine;

		[Token(Token = "0x600286B")]
		[Address(RVA = "0x1134400", Offset = "0x1134400", VA = "0x1134400")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0x1134468", Offset = "0x1134468", VA = "0x1134468")]
		public void TriggerDelayedEvent(int index)
		{
		}

		[Token(Token = "0x600286D")]
		[Address(RVA = "0x1134728", Offset = "0x1134728", VA = "0x1134728")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9962C", Offset = "0xE9962C")]
		private static IEnumerator ScheduleEvent(DelayedEvent evt)
		{
			return null;
		}

		[Token(Token = "0x600286E")]
		[Address(RVA = "0x11347B0", Offset = "0x11347B0", VA = "0x11347B0")]
		public void TriggerEventImmediately(int index)
		{
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0x113461C", Offset = "0x113461C", VA = "0x113461C")]
		public void CancelEvent(int index)
		{
		}

		[Token(Token = "0x6002870")]
		[Address(RVA = "0x113489C", Offset = "0x113489C", VA = "0x113489C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002871")]
		[Address(RVA = "0x11348EC", Offset = "0x11348EC", VA = "0x11348EC")]
		public MT_DelayedEvent()
		{
		}
	}
	[Token(Token = "0x20007F5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE7591C", Offset = "0xE7591C")]
	public class MT_EnableEvent : MonoBehaviour
	{
		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onEnable;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onDisable;

		[Token(Token = "0x6002878")]
		[Address(RVA = "0x15BD5A8", Offset = "0x15BD5A8", VA = "0x15BD5A8")]
		[PublicAPI]
		public void SetGameObject(bool active)
		{
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0x15BD5DC", Offset = "0x15BD5DC", VA = "0x15BD5DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600287A")]
		[Address(RVA = "0x15BD5F0", Offset = "0x15BD5F0", VA = "0x15BD5F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0x15BD604", Offset = "0x15BD604", VA = "0x15BD604")]
		public MT_EnableEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007F6")]
	public struct MathEvent
	{
		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[MazeTheory.Toolbox.ReadOnly]
		public int currentNumber;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int targetNumber;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnityEvent eventToTrigger;
	}
	[Token(Token = "0x20007F7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE75954", Offset = "0xE75954")]
	public class MT_IntegerEvent : MonoBehaviour
	{
		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MathEvent[] events;

		[Token(Token = "0x600287C")]
		[Address(RVA = "0x124B76C", Offset = "0x124B76C", VA = "0x124B76C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0x124B7A4", Offset = "0x124B7A4", VA = "0x124B7A4")]
		[PublicAPI]
		public void AddOne(int index)
		{
		}

		[Token(Token = "0x600287E")]
		[Address(RVA = "0x124B834", Offset = "0x124B834", VA = "0x124B834")]
		[PublicAPI]
		public void MinusOne(int index)
		{
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0x124B878", Offset = "0x124B878", VA = "0x124B878")]
		[PublicAPI]
		public void ResetNumber(int index)
		{
		}

		[Token(Token = "0x6002880")]
		[Address(RVA = "0x124B8B4", Offset = "0x124B8B4", VA = "0x124B8B4")]
		[PublicAPI]
		public void TriggerEvent(int index)
		{
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0x124B7E8", Offset = "0x124B7E8", VA = "0x124B7E8")]
		private void CheckNumber(int index)
		{
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0x124B900", Offset = "0x124B900", VA = "0x124B900")]
		public MT_IntegerEvent()
		{
		}
	}
	[Token(Token = "0x20007F8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE7598C", Offset = "0xE7598C")]
	public class MT_LogicEvent : MonoBehaviour
	{
		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool isTrue;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onTrue;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onFalse;

		[Token(Token = "0x6002883")]
		[Address(RVA = "0x1260584", Offset = "0x1260584", VA = "0x1260584")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE9972C", Offset = "0xE9972C")]
		public void SetTrue()
		{
		}

		[Token(Token = "0x6002884")]
		[Address(RVA = "0x12605CC", Offset = "0x12605CC", VA = "0x12605CC")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE99744", Offset = "0xE99744")]
		public void SetFalse()
		{
		}

		[Token(Token = "0x6002885")]
		[Address(RVA = "0x12605A4", Offset = "0x12605A4", VA = "0x12605A4")]
		[PublicAPI]
		public void SetValue(bool value)
		{
		}

		[Token(Token = "0x6002886")]
		[Address(RVA = "0x12605E8", Offset = "0x12605E8", VA = "0x12605E8")]
		public MT_LogicEvent()
		{
		}
	}
	[Token(Token = "0x20007F9")]
	public sealed class MT_ObjToObjIgnorer : MonoBehaviour
	{
		[Token(Token = "0x6002887")]
		[Address(RVA = "0x10FB3C8", Offset = "0x10FB3C8", VA = "0x10FB3C8")]
		public MT_ObjToObjIgnorer()
		{
		}
	}
	[Token(Token = "0x20007FA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE759C4", Offset = "0xE759C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE759C4", Offset = "0xE759C4")]
	public class MT_ObjToObj_Receiver : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75A48", Offset = "0xE75A48")]
		private sealed class <>c
		{
			[Token(Token = "0x400215A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400215B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ObjToObjInteraction, string> <>9__5_0;

			[Token(Token = "0x6002892")]
			[Address(RVA = "0x103DEA8", Offset = "0x103DEA8", VA = "0x103DEA8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002893")]
			[Address(RVA = "0x103DEB0", Offset = "0x103DEB0", VA = "0x103DEB0")]
			internal string <Awake>b__5_0(ObjToObjInteraction obj)
			{
				return null;
			}
		}

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ObjToObjInteraction[] objectInteractions;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string[] _receiverTags;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider _collider;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public JournalStoryItem thisJSI;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool hasJSI;

		[Token(Token = "0x6002888")]
		[Address(RVA = "0x10FB3D0", Offset = "0x10FB3D0", VA = "0x10FB3D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002889")]
		[Address(RVA = "0x10FB5F8", Offset = "0x10FB5F8", VA = "0x10FB5F8")]
		public void OnInteraction(string[] senderTags)
		{
		}

		[Token(Token = "0x600288A")]
		[Address(RVA = "0x10FB720", Offset = "0x10FB720", VA = "0x10FB720")]
		public void OnInteractionExit(string[] senderTags)
		{
		}

		[Token(Token = "0x600288B")]
		[Address(RVA = "0x10FB84C", Offset = "0x10FB84C", VA = "0x10FB84C")]
		public void TriggerInteraction(int index)
		{
		}

		[Token(Token = "0x600288C")]
		[Address(RVA = "0x10FB91C", Offset = "0x10FB91C", VA = "0x10FB91C")]
		[PublicAPI]
		public void TriggerInteractionExit(int index)
		{
		}

		[Token(Token = "0x600288D")]
		[Address(RVA = "0x10FB9EC", Offset = "0x10FB9EC", VA = "0x10FB9EC")]
		[PublicAPI]
		public string GetReceiverTag(int index)
		{
			return null;
		}

		[Token(Token = "0x600288E")]
		[Address(RVA = "0x10FBA3C", Offset = "0x10FBA3C", VA = "0x10FBA3C")]
		[PublicAPI]
		public Dictionary<string, MT_ObjToObj_Receiver> GetReceiverTagsDict()
		{
			return null;
		}

		[Token(Token = "0x600288F")]
		[Address(RVA = "0x10FBB64", Offset = "0x10FBB64", VA = "0x10FBB64")]
		[PublicAPI]
		public string[] GetReceiverTags()
		{
			return null;
		}

		[Token(Token = "0x6002890")]
		[Address(RVA = "0x10FBB6C", Offset = "0x10FBB6C", VA = "0x10FBB6C")]
		public MT_ObjToObj_Receiver()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007FC")]
	public struct ObjToObjInteraction
	{
		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string interactionTag;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public InteractionEvent onInteraction;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InteractionEvent onInteractionExit;
	}
	[Serializable]
	[Token(Token = "0x20007FD")]
	public class InteractionEvent
	{
		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEvent interactionEvent;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool playOnce;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool playAlways;

		[Token(Token = "0x6002894")]
		[Address(RVA = "0x10DF6D0", Offset = "0x10DF6D0", VA = "0x10DF6D0")]
		public InteractionEvent()
		{
		}
	}
	[Token(Token = "0x20007FE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE75A58", Offset = "0xE75A58")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE75A58", Offset = "0xE75A58")]
	public class MT_ObjToObj_Sender : MonoBehaviour
	{
		[Token(Token = "0x20007FF")]
		private enum InteractionType
		{
			[Token(Token = "0x400216B")]
			Trigger,
			[Token(Token = "0x400216C")]
			Collision
		}

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InteractionType interactionType;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string colliderName;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool useStrengthCol;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ObjToObjInteraction[] objectInteractions;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CollisionEvent[] collisionEvents;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string[] _senderTags;

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private JournalStoryItem _thisJSI;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _hasJSI;

		[Token(Token = "0x6002895")]
		[Address(RVA = "0x10FBB74", Offset = "0x10FBB74", VA = "0x10FBB74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002896")]
		[Address(RVA = "0x10FBD5C", Offset = "0x10FBD5C", VA = "0x10FBD5C")]
		private void OnCollisionEnter(UnityEngine.Collision other)
		{
		}

		[Token(Token = "0x6002897")]
		[Address(RVA = "0x10FC5D0", Offset = "0x10FC5D0", VA = "0x10FC5D0")]
		private void OnCollisionExit(UnityEngine.Collision other)
		{
		}

		[Token(Token = "0x6002898")]
		[Address(RVA = "0x10FC8DC", Offset = "0x10FC8DC", VA = "0x10FC8DC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0x10FCA58", Offset = "0x10FCA58", VA = "0x10FCA58")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0x10FC3F4", Offset = "0x10FC3F4", VA = "0x10FC3F4")]
		private void DoCollisions(MT_ObjToObj_Receiver[] receivers)
		{
		}

		[Token(Token = "0x600289B")]
		[Address(RVA = "0x10FC6FC", Offset = "0x10FC6FC", VA = "0x10FC6FC")]
		private void DoCollisionsExit(MT_ObjToObj_Receiver[] receivers)
		{
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0x10FBFE0", Offset = "0x10FBFE0", VA = "0x10FBFE0")]
		private void DoStrengthCollision(UnityEngine.Collision collision, MT_ObjToObj_Receiver[] receivers)
		{
		}

		[Token(Token = "0x600289D")]
		[Address(RVA = "0x10FCB40", Offset = "0x10FCB40", VA = "0x10FCB40")]
		[PublicAPI]
		public void TriggerInteraction(int index)
		{
		}

		[Token(Token = "0x600289E")]
		[Address(RVA = "0x10FCC10", Offset = "0x10FCC10", VA = "0x10FCC10")]
		[PublicAPI]
		public void TriggerInteractionExit(int index)
		{
		}

		[Token(Token = "0x600289F")]
		[Address(RVA = "0x10FCCE0", Offset = "0x10FCCE0", VA = "0x10FCCE0")]
		[PublicAPI]
		public string GetSenderTag(int index)
		{
			return null;
		}

		[Token(Token = "0x60028A0")]
		[Address(RVA = "0x10FCD30", Offset = "0x10FCD30", VA = "0x10FCD30")]
		[PublicAPI]
		public string[] GetSenderTags()
		{
			return null;
		}

		[Token(Token = "0x60028A1")]
		[Address(RVA = "0x10FC9C4", Offset = "0x10FC9C4", VA = "0x10FC9C4")]
		private bool HasIgnorer(Collider other)
		{
			return default(bool);
		}

		[Token(Token = "0x60028A2")]
		[Address(RVA = "0x10FBC24", Offset = "0x10FBC24", VA = "0x10FBC24")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE997EC", Offset = "0xE997EC")]
		private static string[] BuildSenderTagsList(ObjToObjInteraction[] objInts, CollisionEvent[] collEvents)
		{
			return null;
		}

		[Token(Token = "0x60028A3")]
		[Address(RVA = "0x10FBE94", Offset = "0x10FBE94", VA = "0x10FBE94")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE99864", Offset = "0xE99864")]
		private MT_ObjToObj_Receiver[] IgnoreJSIsInJournal(MT_ObjToObj_Receiver[] receivers)
		{
			return null;
		}

		[Token(Token = "0x60028A4")]
		[Address(RVA = "0x10FCD38", Offset = "0x10FCD38", VA = "0x10FCD38")]
		public MT_ObjToObj_Sender()
		{
		}
	}
	[Token(Token = "0x2000800")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE75ADC", Offset = "0xE75ADC")]
	public class MT_TriggerAnim : MonoBehaviour
	{
		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string[] triggers;

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] _triggerHashes;

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0x12B6934", Offset = "0x12B6934", VA = "0x12B6934")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0x12B6A14", Offset = "0x12B6A14", VA = "0x12B6A14")]
		[PublicAPI]
		public void TriggerAnim(int triggerIndex)
		{
		}

		[Token(Token = "0x60028A7")]
		[Address(RVA = "0x12B6B6C", Offset = "0x12B6B6C", VA = "0x12B6B6C")]
		public MT_TriggerAnim()
		{
		}
	}
	[Token(Token = "0x2000801")]
	public sealed class MT_Handle : MonoBehaviour
	{
		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool handleShouldFollowHand;

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform fakeHandle;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform fakeHandleReturnPoint;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform handle;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform handleStationaryPivotPoint;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody _fakeHandleRigidbody;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _projectedVector;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _newHandleLocalZRotation;

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0x15CD12C", Offset = "0x15CD12C", VA = "0x15CD12C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028A9")]
		[Address(RVA = "0x15CD190", Offset = "0x15CD190", VA = "0x15CD190")]
		private void Update()
		{
		}

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0x15CD1A0", Offset = "0x15CD1A0", VA = "0x15CD1A0")]
		public void MakeHandleFollowHand()
		{
		}

		[Token(Token = "0x60028AB")]
		[Address(RVA = "0x15CD2BC", Offset = "0x15CD2BC", VA = "0x15CD2BC")]
		public void GrabbedHandle()
		{
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0x15CD2C8", Offset = "0x15CD2C8", VA = "0x15CD2C8")]
		public void LetGoOfHandle()
		{
		}

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0x15CD368", Offset = "0x15CD368", VA = "0x15CD368")]
		public MT_Handle()
		{
		}
	}
	[Token(Token = "0x2000802")]
	public class AmmoHolster : MonoBehaviour
	{
		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int maxAmmoCount;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject magazinePrefab;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HVRSocket gunSocket;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private HVRSocket ammoSocket;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _currentAmmoCount;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool _didGrabIncreaseAmmo;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool _didRelease;

		[Token(Token = "0x1700044B")]
		public bool HasMaxAmmo
		{
			[Token(Token = "0x60028AE")]
			[Address(RVA = "0x13BD020", Offset = "0x13BD020", VA = "0x13BD020")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60028AF")]
		[Address(RVA = "0x13BD034", Offset = "0x13BD034", VA = "0x13BD034")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60028B0")]
		[Address(RVA = "0x13BD2B4", Offset = "0x13BD2B4", VA = "0x13BD2B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60028B1")]
		[Address(RVA = "0x13BD4FC", Offset = "0x13BD4FC", VA = "0x13BD4FC")]
		private void OnGunTaken(HVRGrabberBase arg0, HVRGrabbable arg1)
		{
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0x13BD550", Offset = "0x13BD550", VA = "0x13BD550")]
		private void OnGunReturned(HVRGrabberBase arg0, HVRGrabbable arg1)
		{
		}

		[Token(Token = "0x60028B3")]
		[Address(RVA = "0x13BD5A4", Offset = "0x13BD5A4", VA = "0x13BD5A4")]
		private void OnSocketSpawnedPrefab(HVRSocket arg0, GameObject spawnedGameObject)
		{
		}

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0x13BD6D0", Offset = "0x13BD6D0", VA = "0x13BD6D0")]
		private void OnAmmoSocketReleased(HVRGrabberBase arg0, HVRGrabbable ammoGrabbable)
		{
		}

		[Token(Token = "0x60028B5")]
		[Address(RVA = "0x13BD6DC", Offset = "0x13BD6DC", VA = "0x13BD6DC")]
		private void OnAmmoSocketGrabbed(HVRGrabberBase arg0, HVRGrabbable ammoGrabbable)
		{
		}

		[Token(Token = "0x60028B6")]
		[Address(RVA = "0x13BD820", Offset = "0x13BD820", VA = "0x13BD820")]
		public void SetMaxAmmo(int amount)
		{
		}

		[Token(Token = "0x60028B7")]
		[Address(RVA = "0x13BD838", Offset = "0x13BD838", VA = "0x13BD838")]
		public AmmoHolster()
		{
		}
	}
	[Token(Token = "0x2000803")]
	public class AmmoSocket : HVRSocket
	{
		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private AmmoHolster ammoHolster;

		[Token(Token = "0x60028B8")]
		[Address(RVA = "0x13BD840", Offset = "0x13BD840", VA = "0x13BD840", Slot = "52")]
		protected override void OnHoverEnter(HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60028B9")]
		[Address(RVA = "0x13BD930", Offset = "0x13BD930", VA = "0x13BD930")]
		public AmmoSocket()
		{
		}
	}
	[Token(Token = "0x2000804")]
	public class CodeGrabbing : MonoBehaviour
	{
		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE86F1C", Offset = "0xE86F1C")]
		private HVRHandGrabber <RightGrabber>k__BackingField;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE86F2C", Offset = "0xE86F2C")]
		private HVRHandGrabber <LeftGrabber>k__BackingField;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HVRGrabbable Grabbable;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HVRGrabTrigger GrabTrigger;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HVRPosableGrabPoint GrabPoint;

		[Token(Token = "0x1700044C")]
		public HVRHandGrabber RightGrabber
		{
			[Token(Token = "0x60028BA")]
			[Address(RVA = "0x12094D0", Offset = "0x12094D0", VA = "0x12094D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE998EC", Offset = "0xE998EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028BB")]
			[Address(RVA = "0x12094D8", Offset = "0x12094D8", VA = "0x12094D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE998FC", Offset = "0xE998FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700044D")]
		public HVRHandGrabber LeftGrabber
		{
			[Token(Token = "0x60028BC")]
			[Address(RVA = "0x12094E0", Offset = "0x12094E0", VA = "0x12094E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9990C", Offset = "0xE9990C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028BD")]
			[Address(RVA = "0x12094E8", Offset = "0x12094E8", VA = "0x12094E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9991C", Offset = "0xE9991C")]
			set
			{
			}
		}

		[Token(Token = "0x60028BE")]
		[Address(RVA = "0x12094F0", Offset = "0x12094F0", VA = "0x12094F0")]
		public void Start()
		{
		}

		[Token(Token = "0x60028BF")]
		[Address(RVA = "0x1209544", Offset = "0x1209544", VA = "0x1209544")]
		public void CurrentGrabbableGrabber(bool skipForceRelease)
		{
		}

		[Token(Token = "0x60028C0")]
		[Address(RVA = "0x1209798", Offset = "0x1209798", VA = "0x1209798")]
		public void RightGrab(bool skipForceRelease)
		{
		}

		[Token(Token = "0x60028C1")]
		[Address(RVA = "0x12097A8", Offset = "0x12097A8", VA = "0x12097A8")]
		public void LeftGrab(bool skipForceRelease)
		{
		}

		[Token(Token = "0x60028C2")]
		[Address(RVA = "0x1209624", Offset = "0x1209624", VA = "0x1209624")]
		private void Grab(HVRHandGrabber grabber, bool skipForceRelease)
		{
		}

		[Token(Token = "0x60028C3")]
		[Address(RVA = "0x12097B8", Offset = "0x12097B8", VA = "0x12097B8")]
		public CodeGrabbing()
		{
		}
	}
	[Token(Token = "0x2000805")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE75B14", Offset = "0xE75B14")]
	public class PhysicsRotatorStepper : MonoBehaviour
	{
		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float SnapThresholdAngle;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int Steps;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float MaximumAngle;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool UseManualSteps;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float[] ManualStepAngles;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HVRRotationTracker _rotationTracker;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float StepSize;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float Step;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _previousAngle;

		[Token(Token = "0x60028C4")]
		[Address(RVA = "0x107F520", Offset = "0x107F520", VA = "0x107F520")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028C5")]
		[Address(RVA = "0x107F5C8", Offset = "0x107F5C8", VA = "0x107F5C8")]
		private void SetupStepSize()
		{
		}

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0x107F618", Offset = "0x107F618", VA = "0x107F618")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60028C7")]
		[Address(RVA = "0x107F628", Offset = "0x107F628", VA = "0x107F628")]
		private void ManualSteps()
		{
		}

		[Token(Token = "0x60028C8")]
		[Address(RVA = "0x107F654", Offset = "0x107F654", VA = "0x107F654")]
		private void CalculatedSteps()
		{
		}

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0x107F6E8", Offset = "0x107F6E8", VA = "0x107F6E8")]
		private void CheckThresholdAndMove(float stepAngle)
		{
		}

		[Token(Token = "0x60028CA")]
		[Address(RVA = "0x107F770", Offset = "0x107F770", VA = "0x107F770")]
		public PhysicsRotatorStepper()
		{
		}
	}
	[Token(Token = "0x2000806")]
	public class PhysicsSliderStepper : MonoBehaviour
	{
		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float SnapThreshold;

		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float[] StepPercentagePoints;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] points;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HVRPhysicsDrawer _physicsDrawer;

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _start;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _end;

		[Token(Token = "0x60028CB")]
		[Address(RVA = "0x107F778", Offset = "0x107F778", VA = "0x107F778")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028CC")]
		[Address(RVA = "0x107F814", Offset = "0x107F814", VA = "0x107F814")]
		private void GetDrawerPositions()
		{
		}

		[Token(Token = "0x60028CD")]
		[Address(RVA = "0x107F86C", Offset = "0x107F86C", VA = "0x107F86C")]
		private void StepsToPositions()
		{
		}

		[Token(Token = "0x60028CE")]
		[Address(RVA = "0x107F9FC", Offset = "0x107F9FC", VA = "0x107F9FC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60028CF")]
		[Address(RVA = "0x107F950", Offset = "0x107F950", VA = "0x107F950")]
		private float GetVectorComponentForAxis(Vector3 vector, HVRAxis axis)
		{
			return default(float);
		}

		[Token(Token = "0x60028D0")]
		[Address(RVA = "0x107FB28", Offset = "0x107FB28", VA = "0x107FB28")]
		private void SetVectorComponentForAxis(ref Vector3 vector, float value, HVRAxis axis)
		{
		}

		[Token(Token = "0x60028D1")]
		[Address(RVA = "0x107FBE0", Offset = "0x107FBE0", VA = "0x107FBE0")]
		public PhysicsSliderStepper()
		{
		}
	}
	[Token(Token = "0x2000807")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE75B74", Offset = "0xE75B74")]
	public class RotationThresholdDirectionTracker : MonoBehaviour
	{
		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnAngleThresholdReachedFromClockwise;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnAngleThresholdReachedFromAnticlockwise;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HVRRotationTracker _rotationTracker;

		[Token(Token = "0x60028D2")]
		[Address(RVA = "0x32CC074", Offset = "0x32CC074", VA = "0x32CC074")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028D3")]
		[Address(RVA = "0x32CC0D0", Offset = "0x32CC0D0", VA = "0x32CC0D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60028D4")]
		[Address(RVA = "0x32CC194", Offset = "0x32CC194", VA = "0x32CC194")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60028D5")]
		[Address(RVA = "0x32CC258", Offset = "0x32CC258", VA = "0x32CC258")]
		public void OnAngleReached(float angle, float delta)
		{
		}

		[Token(Token = "0x60028D6")]
		[Address(RVA = "0x32CC27C", Offset = "0x32CC27C", VA = "0x32CC27C")]
		public RotationThresholdDirectionTracker()
		{
		}
	}
	[Token(Token = "0x2000808")]
	public class MT_IgnoreObjectHit : MonoBehaviour
	{
		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ShouldIgnore;

		[Token(Token = "0x60028D7")]
		[Address(RVA = "0x124ADF4", Offset = "0x124ADF4", VA = "0x124ADF4")]
		public MT_IgnoreObjectHit()
		{
		}
	}
	[Token(Token = "0x2000809")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE75BD4", Offset = "0xE75BD4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE75BD4", Offset = "0xE75BD4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE75BD4", Offset = "0xE75BD4")]
	public class MT_IgnoreObjectHitNode : CallableActionNode<GameObject, bool>
	{
		[Token(Token = "0x60028D8")]
		[Address(RVA = "0x124ADFC", Offset = "0x124ADFC", VA = "0x124ADFC", Slot = "12")]
		public override void Invoke(GameObject objectHit, bool shouldIgnore)
		{
		}

		[Token(Token = "0x60028D9")]
		[Address(RVA = "0x124AE84", Offset = "0x124AE84", VA = "0x124AE84")]
		public MT_IgnoreObjectHitNode()
		{
		}
	}
	[Token(Token = "0x200080A")]
	public class SocketLinker : MonoBehaviour
	{
		[Token(Token = "0x200080B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75C5C", Offset = "0xE75C5C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400219B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SocketableToSocketLinker socketableToSocketLinker;

			[Token(Token = "0x400219C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<HVRSocketFilter, bool> <>9__0;

			[Token(Token = "0x60028DE")]
			[Address(RVA = "0x32C9BDC", Offset = "0x32C9BDC", VA = "0x32C9BDC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60028DF")]
			[Address(RVA = "0x32C9BE4", Offset = "0x32C9BE4", VA = "0x32C9BE4")]
			internal bool <TryLinkGrabbableToSocket>b__0(HVRSocketFilter filter)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<HVRSocket> sockets;

		[Token(Token = "0x60028DA")]
		[Address(RVA = "0x32DFAB4", Offset = "0x32DFAB4", VA = "0x32DFAB4")]
		public void TryLinkGrabbableToSocket(SocketableToSocketLinker socketableToSocketLinker)
		{
		}

		[Token(Token = "0x60028DB")]
		[Address(RVA = "0x32DFEB4", Offset = "0x32DFEB4", VA = "0x32DFEB4")]
		public void AddSocket(HVRSocket socket)
		{
		}

		[Token(Token = "0x60028DC")]
		[Address(RVA = "0x32CB4F0", Offset = "0x32CB4F0", VA = "0x32CB4F0")]
		public void RemoveSocket(HVRSocket socket)
		{
		}

		[Token(Token = "0x60028DD")]
		[Address(RVA = "0x32DFF18", Offset = "0x32DFF18", VA = "0x32DFF18")]
		public SocketLinker()
		{
		}
	}
	[Token(Token = "0x200080C")]
	public class SocketLinkerChild : MonoBehaviour
	{
		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SocketLinker ParentSocketLinker;

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0x32DFF9C", Offset = "0x32DFF9C", VA = "0x32DFF9C")]
		public SocketLinkerChild()
		{
		}
	}
	[Token(Token = "0x200080D")]
	public class SocketObjectColliderManager : MonoBehaviour
	{
		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HVRSocket socket;

		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject socketObject;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider[] _colliders;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<int> _previouslyDisabledColliders;

		[Token(Token = "0x60028E1")]
		[Address(RVA = "0x32DFFA4", Offset = "0x32DFFA4", VA = "0x32DFFA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0x32DFFA8", Offset = "0x32DFFA8", VA = "0x32DFFA8")]
		private void Init()
		{
		}

		[Token(Token = "0x60028E3")]
		[Address(RVA = "0x32E0054", Offset = "0x32E0054", VA = "0x32E0054")]
		private void GetPreviouslyDisabledColliders()
		{
		}

		[Token(Token = "0x60028E4")]
		[Address(RVA = "0x32E0130", Offset = "0x32E0130", VA = "0x32E0130")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60028E5")]
		[Address(RVA = "0x32E024C", Offset = "0x32E024C", VA = "0x32E024C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60028E6")]
		[Address(RVA = "0x32E0368", Offset = "0x32E0368", VA = "0x32E0368")]
		private void OnSocketGrabbed(HVRGrabberBase arg0, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60028E7")]
		[Address(RVA = "0x32E03B4", Offset = "0x32E03B4", VA = "0x32E03B4")]
		private void DisableColliders()
		{
		}

		[Token(Token = "0x60028E8")]
		[Address(RVA = "0x32E0440", Offset = "0x32E0440", VA = "0x32E0440")]
		private void OnSocketReleased(HVRGrabberBase arg0, HVRGrabbable arg1)
		{
		}

		[Token(Token = "0x60028E9")]
		[Address(RVA = "0x32E0560", Offset = "0x32E0560", VA = "0x32E0560")]
		public SocketObjectColliderManager()
		{
		}
	}
	[Token(Token = "0x200080E")]
	public class SocketableToSocketLinker : MonoBehaviour
	{
		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HVRGrabbable Grabbable;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HVRTagSocketable TagSocketable;

		[Token(Token = "0x60028EA")]
		[Address(RVA = "0x32E05E4", Offset = "0x32E05E4", VA = "0x32E05E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028EB")]
		[Address(RVA = "0x32E06FC", Offset = "0x32E06FC", VA = "0x32E06FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60028EC")]
		[Address(RVA = "0x32E07C0", Offset = "0x32E07C0", VA = "0x32E07C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60028ED")]
		[Address(RVA = "0x32E0884", Offset = "0x32E0884", VA = "0x32E0884")]
		private void OnGrabbed(HVRGrabberBase grabberBase, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60028EE")]
		[Address(RVA = "0x32E09AC", Offset = "0x32E09AC", VA = "0x32E09AC")]
		public void ClearLink()
		{
		}

		[Token(Token = "0x60028EF")]
		[Address(RVA = "0x32E0A38", Offset = "0x32E0A38", VA = "0x32E0A38")]
		public SocketableToSocketLinker()
		{
		}
	}
	[Token(Token = "0x200080F")]
	public sealed class MT_PoseHand : MonoBehaviour
	{
		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HVRHandPoser grabPoser;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HVRHandGrabber _currentGrabber;

		[Token(Token = "0x60028F0")]
		[Address(RVA = "0x1336034", Offset = "0x1336034", VA = "0x1336034")]
		public void SetPose(HVRHandGrabber HandGrabber)
		{
		}

		[Token(Token = "0x60028F1")]
		[Address(RVA = "0x1336080", Offset = "0x1336080", VA = "0x1336080")]
		public void ResetPose(HVRHandGrabber HandGrabber)
		{
		}

		[Token(Token = "0x60028F2")]
		[Address(RVA = "0x13360C0", Offset = "0x13360C0", VA = "0x13360C0")]
		public MT_PoseHand()
		{
		}
	}
}
namespace MazeTheory.Interaction.VRGestures
{
	[Token(Token = "0x2000810")]
	public class MT_HandGestures : MonoBehaviour, Controls.IHandGesturesActions
	{
		[Token(Token = "0x2000811")]
		private enum GestureType
		{
			[Token(Token = "0x40021D6")]
			None,
			[Token(Token = "0x40021D7")]
			Ok,
			[Token(Token = "0x40021D8")]
			Point,
			[Token(Token = "0x40021D9")]
			Thumbs,
			[Token(Token = "0x40021DA")]
			Fist,
			[Token(Token = "0x40021DB")]
			Grip,
			[Token(Token = "0x40021DC")]
			Trigger,
			[Token(Token = "0x40021DD")]
			ThumbRest
		}

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform rightHandRig;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_HandInteractor rightHandInteractor;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform leftHandRig;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_HandInteractor leftHandInteractor;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent onIdle;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent onPlayerPoint;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent onPlayerOk;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent onPlayerThumbsUp;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UnityEvent onPlayerThumbsDown;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UnityEvent onPlayerFist;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private UnityEvent onPressGrip;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UnityEvent onPressTrigger;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private UnityEvent onThumbRest;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Controls _controls;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3[] _rightAngles;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] _leftAngles;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _rightWaveIndex;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int _leftWaveIndex;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 _centerAngleRight;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 _centerAngleLeft;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool _isRightWaveFirstMovement;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool _isLeftWaveFirstMovement;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		private bool _isRightShakeFirstMovement;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
		private bool _isLeftShakeFirstMovement;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private GestureType _currentRightGesture;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GestureType _currentLeftGesture;

		[Token(Token = "0x40021C0")]
		private const float MinUpAngle = 40f;

		[Token(Token = "0x40021C1")]
		private const float MinDownAngle = 140f;

		[Token(Token = "0x40021C2")]
		private const float MaxDownAngle = 180f;

		[Token(Token = "0x40021C3")]
		private const int AngleArrayLength = 80;

		[Token(Token = "0x40021C4")]
		private const float MinZAngle = -75f;

		[Token(Token = "0x40021C5")]
		private const float MaxZAngle = -50f;

		[Token(Token = "0x40021C6")]
		private const float MinYAngle = 40f;

		[Token(Token = "0x40021C7")]
		private const float MaxYAngle = 90f;

		[Token(Token = "0x40021C8")]
		private const float DeltaXAngle = 5f;

		[Token(Token = "0x40021C9")]
		private const int MinWaves = 1;

		[Token(Token = "0x40021CA")]
		private const float QuickMovementThreshold = 10f;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 _lastPositionRight;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float _lastTimeRight;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float _lastVelocityRight;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float _lowPassValueRight;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 _lastPositionLeft;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _lastTimeLeft;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _lastVelocityLeft;

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float _lowPassValueLeft;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool _enableQuickMoveGesture;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		private bool _firstFrame;

		[Token(Token = "0x60028F3")]
		[Address(RVA = "0x15C7ECC", Offset = "0x15C7ECC", VA = "0x15C7ECC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60028F4")]
		[Address(RVA = "0x15C7F98", Offset = "0x15C7F98", VA = "0x15C7F98", Slot = "4")]
		public void OnWaveRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60028F5")]
		[Address(RVA = "0x15C830C", Offset = "0x15C830C", VA = "0x15C830C", Slot = "5")]
		public void OnWaveLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60028F6")]
		[Address(RVA = "0x15C8170", Offset = "0x15C8170", VA = "0x15C8170")]
		private void CheckWaveMovement(bool isRight)
		{
		}

		[Token(Token = "0x60028F7")]
		[Address(RVA = "0x15C80BC", Offset = "0x15C80BC", VA = "0x15C80BC")]
		private void ResetWaveGesture(bool isRight, Vector3 handRotation)
		{
		}

		[Token(Token = "0x60028F8")]
		[Address(RVA = "0x15C8430", Offset = "0x15C8430", VA = "0x15C8430")]
		public void EnableQuickMoveGesture(bool enable)
		{
		}

		[Token(Token = "0x60028F9")]
		[Address(RVA = "0x15C843C", Offset = "0x15C843C", VA = "0x15C843C", Slot = "20")]
		public void OnQuickMoveRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60028FA")]
		[Address(RVA = "0x15C860C", Offset = "0x15C860C", VA = "0x15C860C", Slot = "21")]
		public void OnQuickMoveLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60028FB")]
		[Address(RVA = "0x15C84AC", Offset = "0x15C84AC", VA = "0x15C84AC")]
		private void CheckQuickMovement(Vector3 position, bool isRight)
		{
		}

		[Token(Token = "0x60028FC")]
		[Address(RVA = "0x15C867C", Offset = "0x15C867C", VA = "0x15C867C", Slot = "6")]
		public void OnPointRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60028FD")]
		[Address(RVA = "0x15C87DC", Offset = "0x15C87DC", VA = "0x15C87DC", Slot = "7")]
		public void OnPointLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60028FE")]
		[Address(RVA = "0x15C86E4", Offset = "0x15C86E4", VA = "0x15C86E4")]
		private void Point(HandType handType, out GestureType currGesture)
		{
		}

		[Token(Token = "0x60028FF")]
		[Address(RVA = "0x15C8844", Offset = "0x15C8844", VA = "0x15C8844", Slot = "8")]
		public void OnOkRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002900")]
		[Address(RVA = "0x15C89A4", Offset = "0x15C89A4", VA = "0x15C89A4", Slot = "9")]
		public void OnOkLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002901")]
		[Address(RVA = "0x15C88AC", Offset = "0x15C88AC", VA = "0x15C88AC")]
		private void Ok(HandType handType, out GestureType currGesture)
		{
		}

		[Token(Token = "0x6002902")]
		[Address(RVA = "0x15C8A0C", Offset = "0x15C8A0C", VA = "0x15C8A0C", Slot = "10")]
		public void OnThumbsUpRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002903")]
		[Address(RVA = "0x15C8CB0", Offset = "0x15C8CB0", VA = "0x15C8CB0", Slot = "11")]
		public void OnThumbsUpLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002904")]
		[Address(RVA = "0x15C8A74", Offset = "0x15C8A74", VA = "0x15C8A74")]
		private void Thumbs(HandType handType, out GestureType currGesture)
		{
		}

		[Token(Token = "0x6002905")]
		[Address(RVA = "0x15C8D18", Offset = "0x15C8D18", VA = "0x15C8D18", Slot = "12")]
		public void OnFistRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002906")]
		[Address(RVA = "0x15C8E6C", Offset = "0x15C8E6C", VA = "0x15C8E6C", Slot = "13")]
		public void OnFistLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002907")]
		[Address(RVA = "0x15C8D74", Offset = "0x15C8D74", VA = "0x15C8D74")]
		private void Fist(HandType handType, out GestureType currGesture)
		{
		}

		[Token(Token = "0x6002908")]
		[Address(RVA = "0x15C8EC8", Offset = "0x15C8EC8", VA = "0x15C8EC8", Slot = "14")]
		public void OnPressTriggerRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002909")]
		[Address(RVA = "0x15C8FAC", Offset = "0x15C8FAC", VA = "0x15C8FAC", Slot = "15")]
		public void OnPressTriggerLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600290A")]
		[Address(RVA = "0x15C9090", Offset = "0x15C9090", VA = "0x15C9090", Slot = "16")]
		public void OnRestThumbRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600290B")]
		[Address(RVA = "0x15C9174", Offset = "0x15C9174", VA = "0x15C9174", Slot = "17")]
		public void OnRestThumbLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600290C")]
		[Address(RVA = "0x15C9258", Offset = "0x15C9258", VA = "0x15C9258", Slot = "18")]
		public void OnPressGripRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600290D")]
		[Address(RVA = "0x15C933C", Offset = "0x15C933C", VA = "0x15C933C", Slot = "19")]
		public void OnPressGripLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600290E")]
		[Address(RVA = "0x15C9420", Offset = "0x15C9420", VA = "0x15C9420")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600290F")]
		[Address(RVA = "0x15C9724", Offset = "0x15C9724", VA = "0x15C9724")]
		public MT_HandGestures()
		{
		}
	}
	[Token(Token = "0x2000812")]
	public class MT_HeadGestures : MonoBehaviour, Controls.IHeadGesturesActions
	{
		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Controls _controls;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3[] _angles;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _index;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _centerAngle;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isFirstMovement;

		[Token(Token = "0x40021E3")]
		private const int AngleArrayLenght = 80;

		[Token(Token = "0x40021E4")]
		private const float DeltaAngle = 10f;

		[Token(Token = "0x40021E5")]
		private const int MinYesMoves = 2;

		[Token(Token = "0x40021E6")]
		private const int MinNoMoves = 3;

		[Token(Token = "0x6002910")]
		[Address(RVA = "0x15CF698", Offset = "0x15CF698", VA = "0x15CF698")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002911")]
		[Address(RVA = "0x15CF764", Offset = "0x15CF764", VA = "0x15CF764", Slot = "4")]
		public void OnHeadMovement(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002912")]
		[Address(RVA = "0x15CF8F8", Offset = "0x15CF8F8", VA = "0x15CF8F8")]
		private void CheckMovement()
		{
		}

		[Token(Token = "0x6002913")]
		[Address(RVA = "0x15CF870", Offset = "0x15CF870", VA = "0x15CF870")]
		private void ResetWaveGesture(Vector3 headRotation)
		{
		}

		[Token(Token = "0x6002914")]
		[Address(RVA = "0x15CFA64", Offset = "0x15CFA64", VA = "0x15CFA64")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002915")]
		[Address(RVA = "0x15CFAD4", Offset = "0x15CFAD4", VA = "0x15CFAD4")]
		public MT_HeadGestures()
		{
		}
	}
}
namespace MazeTheory.Interaction.UI
{
	[Token(Token = "0x2000813")]
	public class CanvasInputModuleManager : MonoBehaviour
	{
		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Canvas Canvas;

		[Token(Token = "0x6002916")]
		[Address(RVA = "0x12058FC", Offset = "0x12058FC", VA = "0x12058FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002917")]
		[Address(RVA = "0x12059B4", Offset = "0x12059B4", VA = "0x12059B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002918")]
		[Address(RVA = "0x1205ADC", Offset = "0x1205ADC", VA = "0x1205ADC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002919")]
		[Address(RVA = "0x1205C04", Offset = "0x1205C04", VA = "0x1205C04")]
		public CanvasInputModuleManager()
		{
		}
	}
	[Token(Token = "0x2000814")]
	public class InputModuleSetup : MonoBehaviour
	{
		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HVRUIPointer leftUIPointer;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HVRUIPointer rightUIPointer;

		[Token(Token = "0x600291A")]
		[Address(RVA = "0x10DDAE8", Offset = "0x10DDAE8", VA = "0x10DDAE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600291B")]
		[Address(RVA = "0x10DDAEC", Offset = "0x10DDAEC", VA = "0x10DDAEC")]
		private void SetupUIPointers()
		{
		}

		[Token(Token = "0x600291C")]
		[Address(RVA = "0x10DDC70", Offset = "0x10DDC70", VA = "0x10DDC70")]
		public InputModuleSetup()
		{
		}
	}
	[Token(Token = "0x2000815")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE75C6C", Offset = "0xE75C6C")]
	public class MT_UIButton : Button
	{
		[Token(Token = "0x2000816")]
		public enum ButtonState
		{
			[Token(Token = "0x40021F7")]
			Normal,
			[Token(Token = "0x40021F8")]
			Highlighted,
			[Token(Token = "0x40021F9")]
			Pressed
		}

		[Token(Token = "0x2000817")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75CA4", Offset = "0xE75CA4")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x40021FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onComplete;

			[Token(Token = "0x600292A")]
			[Address(RVA = "0x32B9F04", Offset = "0x32B9F04", VA = "0x32B9F04")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x600292B")]
			[Address(RVA = "0x32B9F0C", Offset = "0x32B9F0C", VA = "0x32B9F0C")]
			internal void <CompleteTween>b__0()
			{
			}
		}

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Color hoveredColor;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		protected Color pressedColor;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public new UnityEvent onClick;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public UnityEvent onRelease;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public Vector3 HitPosition;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private TextMeshProUGUI _buttonText;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Transform _handTransform;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private DG.Tweening.Sequence _tweenSequence;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected Image ButtonBackground;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected Color NormalColor;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private ButtonState _currentState;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private bool _isPressed;

		[Token(Token = "0x1700044E")]
		public Transform HandTransform
		{
			[Token(Token = "0x600291D")]
			[Address(RVA = "0x1138B0C", Offset = "0x1138B0C", VA = "0x1138B0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600291E")]
		[Address(RVA = "0x1138B14", Offset = "0x1138B14", VA = "0x1138B14", Slot = "43")]
		protected new virtual void Awake()
		{
		}

		[Token(Token = "0x600291F")]
		[Address(RVA = "0x1138C20", Offset = "0x1138C20", VA = "0x1138C20", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002920")]
		[Address(RVA = "0x1138CC0", Offset = "0x1138CC0", VA = "0x1138CC0", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002921")]
		[Address(RVA = "0x1138D60", Offset = "0x1138D60", VA = "0x1138D60")]
		public void OnButtonRelease()
		{
		}

		[Token(Token = "0x6002922")]
		[Address(RVA = "0x1138D74", Offset = "0x1138D74", VA = "0x1138D74")]
		public void OverrideButtonText(string newText)
		{
		}

		[Token(Token = "0x6002923")]
		[Address(RVA = "0x1138E90", Offset = "0x1138E90", VA = "0x1138E90")]
		public void CompleteTween([Optional] Action onComplete)
		{
		}

		[Token(Token = "0x6002924")]
		[Address(RVA = "0x1138FF8", Offset = "0x1138FF8", VA = "0x1138FF8")]
		public void CrossFadeColor(ButtonState state)
		{
		}

		[Token(Token = "0x6002925")]
		[Address(RVA = "0x11391E4", Offset = "0x11391E4", VA = "0x11391E4")]
		public void OnButtonClick()
		{
		}

		[Token(Token = "0x6002926")]
		[Address(RVA = "0x11391F8", Offset = "0x11391F8", VA = "0x11391F8")]
		private new void OnDestroy()
		{
		}

		[Token(Token = "0x6002927")]
		[Address(RVA = "0x1139210", Offset = "0x1139210", VA = "0x1139210")]
		public void ResizeCollider()
		{
		}

		[Token(Token = "0x6002928")]
		[Address(RVA = "0x11393D0", Offset = "0x11393D0", VA = "0x11393D0")]
		public MT_UIButton()
		{
		}

		[Token(Token = "0x6002929")]
		[Address(RVA = "0x11393D8", Offset = "0x11393D8", VA = "0x11393D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9992C", Offset = "0xE9992C")]
		private void <CrossFadeColor>b__21_0()
		{
		}
	}
	[Token(Token = "0x2000818")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE75CB4", Offset = "0xE75CB4")]
	public class MT_UIDropDown : MonoBehaviour
	{
		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_UIScrollView scrollView;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onToggleOn;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onToggleOff;

		[Token(Token = "0x600292C")]
		[Address(RVA = "0x11393E0", Offset = "0x11393E0", VA = "0x11393E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600292D")]
		[Address(RVA = "0x1139410", Offset = "0x1139410", VA = "0x1139410")]
		public void ToggleOnOffScrollView()
		{
		}

		[Token(Token = "0x600292E")]
		[Address(RVA = "0x1139494", Offset = "0x1139494", VA = "0x1139494")]
		public MT_UIDropDown()
		{
		}
	}
	[Token(Token = "0x2000819")]
	public class MT_UIInteractor : MonoBehaviour, Controls.IUIInteractionActions
	{
		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LayerMask uiLayer;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float maxRayDistance;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE8715C", Offset = "0xE8715C")]
		private bool useRightHand;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform rightHandRig;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool useLeftHand;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform leftHandRig;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LineRenderer rightLineRenderer;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LineRenderer leftLineRenderer;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MT_UIButton _currentLeftUiButton;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MT_UIButton _currentRightUiButton;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Controls _controls;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isRightPressedAndHold;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _isLeftPressedAndHold;

		[Token(Token = "0x600292F")]
		[Address(RVA = "0x113949C", Offset = "0x113949C", VA = "0x113949C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002930")]
		[Address(RVA = "0x1139564", Offset = "0x1139564", VA = "0x1139564")]
		private void Update()
		{
		}

		[Token(Token = "0x6002931")]
		[Address(RVA = "0x1139930", Offset = "0x1139930", VA = "0x1139930")]
		public void SetUpLineRenderer(bool isEnabled)
		{
		}

		[Token(Token = "0x6002932")]
		[Address(RVA = "0x11395E4", Offset = "0x11395E4", VA = "0x11395E4")]
		private void DrawHandRayCast(Transform handRig, bool isRightHand)
		{
		}

		[Token(Token = "0x6002933")]
		[Address(RVA = "0x11399D8", Offset = "0x11399D8", VA = "0x11399D8", Slot = "4")]
		public void OnPressLeftButton(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002934")]
		[Address(RVA = "0x1139AE0", Offset = "0x1139AE0", VA = "0x1139AE0", Slot = "5")]
		public void OnPressRightButton(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002935")]
		[Address(RVA = "0x1139BE8", Offset = "0x1139BE8", VA = "0x1139BE8", Slot = "6")]
		public void OnGetMousePosition(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002936")]
		[Address(RVA = "0x1139EEC", Offset = "0x1139EEC", VA = "0x1139EEC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002937")]
		[Address(RVA = "0x1139FB4", Offset = "0x1139FB4", VA = "0x1139FB4")]
		public MT_UIInteractor()
		{
		}
	}
	[Token(Token = "0x200081A")]
	public class MT_UIOpenMenu : MonoBehaviour, Controls.IMenuActions
	{
		[Token(Token = "0x200081B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75CEC", Offset = "0xE75CEC")]
		private sealed class <HMDEventsSubscriber>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400221A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400221B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400221C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_UIOpenMenu <>4__this;

			[Token(Token = "0x17000450")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002954")]
				[Address(RVA = "0x32BA430", Offset = "0x32BA430", VA = "0x32BA430", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000451")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002956")]
				[Address(RVA = "0x32BA478", Offset = "0x32BA478", VA = "0x32BA478", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002951")]
			[Address(RVA = "0x32BA0DC", Offset = "0x32BA0DC", VA = "0x32BA0DC")]
			[DebuggerHidden]
			public <HMDEventsSubscriber>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002952")]
			[Address(RVA = "0x32BA108", Offset = "0x32BA108", VA = "0x32BA108", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002953")]
			[Address(RVA = "0x32BA10C", Offset = "0x32BA10C", VA = "0x32BA10C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002955")]
			[Address(RVA = "0x32BA438", Offset = "0x32BA438", VA = "0x32BA438", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200081C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75CFC", Offset = "0xE75CFC")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x400221D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject menu;

			[Token(Token = "0x400221E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform positioner;

			[Token(Token = "0x400221F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_UIOpenMenu <>4__this;

			[Token(Token = "0x6002957")]
			[Address(RVA = "0x32B9F20", Offset = "0x32B9F20", VA = "0x32B9F20")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6002958")]
			[Address(RVA = "0x32B9F28", Offset = "0x32B9F28", VA = "0x32B9F28")]
			internal void <EnableVRMenu>b__0()
			{
			}
		}

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform pauseMenuPositioner;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject pauseMenu;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform debugMenuPositioner;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject debugMenu;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MT_UIButton openDebugMenuButton;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MT_UIButton closeDebugMenuButton;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ScenePauseManager CurrentScenePauseManager;

		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _menuOriginalParent;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 _menuOriginalPosition;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Controls _controls;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool CanPause;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isMoving;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 _pausedPos;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Quaternion _pausedRot;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE87234", Offset = "0xE87234")]
		private static bool <IsPaused>k__BackingField;

		[Token(Token = "0x1700044F")]
		public static bool IsPaused
		{
			[Token(Token = "0x6002938")]
			[Address(RVA = "0x1139FC4", Offset = "0x1139FC4", VA = "0x1139FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9993C", Offset = "0xE9993C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002939")]
			[Address(RVA = "0x113A028", Offset = "0x113A028", VA = "0x113A028")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9994C", Offset = "0xE9994C")]
			private set
			{
			}
		}

		[Token(Token = "0x600293A")]
		[Address(RVA = "0x113A094", Offset = "0x113A094", VA = "0x113A094")]
		private void Awake()
		{
		}

		[Token(Token = "0x600293B")]
		[Address(RVA = "0x113A248", Offset = "0x113A248", VA = "0x113A248")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600293C")]
		[Address(RVA = "0x113A310", Offset = "0x113A310", VA = "0x113A310")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600293D")]
		[Address(RVA = "0x113AB88", Offset = "0x113AB88", VA = "0x113AB88")]
		public bool IsInMenuMode()
		{
			return default(bool);
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0x113ABD8", Offset = "0x113ABD8", VA = "0x113ABD8")]
		public Transform GetMenuParent()
		{
			return null;
		}

		[Token(Token = "0x600293F")]
		[Address(RVA = "0x113ABE0", Offset = "0x113ABE0", VA = "0x113ABE0", Slot = "4")]
		public void OnVRToggleDebugMenu(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002940")]
		[Address(RVA = "0x113A1D0", Offset = "0x113A1D0", VA = "0x113A1D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9995C", Offset = "0xE9995C")]
		private IEnumerator HMDEventsSubscriber()
		{
			return null;
		}

		[Token(Token = "0x6002941")]
		[Address(RVA = "0x113AC08", Offset = "0x113AC08", VA = "0x113AC08")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002942")]
		[Address(RVA = "0x113AC0C", Offset = "0x113AC0C", VA = "0x113AC0C")]
		private void HMDEventsUnsubscriber()
		{
		}

		[Token(Token = "0x6002943")]
		[Address(RVA = "0x113AED4", Offset = "0x113AED4", VA = "0x113AED4")]
		public void PausedFromHMD()
		{
		}

		[Token(Token = "0x6002944")]
		[Address(RVA = "0x113B004", Offset = "0x113B004", VA = "0x113B004")]
		public void PausedFromInputFocus()
		{
		}

		[Token(Token = "0x6002945")]
		[Address(RVA = "0x113B13C", Offset = "0x113B13C", VA = "0x113B13C")]
		private void UniversalMenuHandHider()
		{
		}

		[Token(Token = "0x6002946")]
		[Address(RVA = "0x113AFFC", Offset = "0x113AFFC", VA = "0x113AFFC")]
		public void EventListenerVrPauseMenuToggle()
		{
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0x113B2A0", Offset = "0x113B2A0", VA = "0x113B2A0", Slot = "5")]
		public void OnVRTogglePauseMenu(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002948")]
		[Address(RVA = "0x113B2E4", Offset = "0x113B2E4", VA = "0x113B2E4", Slot = "6")]
		public void OnFastForward(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002949")]
		[Address(RVA = "0x113A55C", Offset = "0x113A55C", VA = "0x113A55C")]
		public void ToggleVRPauseMenu(bool unpauseMusic)
		{
		}

		[Token(Token = "0x600294A")]
		[Address(RVA = "0x113B460", Offset = "0x113B460", VA = "0x113B460")]
		public Vector3 GetPausedPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600294B")]
		[Address(RVA = "0x113B46C", Offset = "0x113B46C", VA = "0x113B46C")]
		public Quaternion GetPausedRot()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600294C")]
		[Address(RVA = "0x113B2E8", Offset = "0x113B2E8", VA = "0x113B2E8")]
		private void EnableVRMenu(GameObject menu, Transform positioner)
		{
		}

		[Token(Token = "0x600294D")]
		[Address(RVA = "0x113B478", Offset = "0x113B478", VA = "0x113B478")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600294E")]
		[Address(RVA = "0x113B47C", Offset = "0x113B47C", VA = "0x113B47C")]
		public MT_UIOpenMenu()
		{
		}

		[Token(Token = "0x6002950")]
		[Address(RVA = "0x113B4D4", Offset = "0x113B4D4", VA = "0x113B4D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE999BC", Offset = "0xE999BC")]
		private void <ToggleVRPauseMenu>g__DoUnpause|33_0()
		{
		}
	}
	[Token(Token = "0x200081D")]
	public class MT_UIRadialBar : MonoBehaviour
	{
		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Image _circle;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _emptyDuration;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tweener _tweener;

		[Token(Token = "0x6002959")]
		[Address(RVA = "0x113B760", Offset = "0x113B760", VA = "0x113B760")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600295A")]
		[Address(RVA = "0x113B780", Offset = "0x113B780", VA = "0x113B780")]
		public void FillCircle(float duration)
		{
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0x113B868", Offset = "0x113B868", VA = "0x113B868")]
		public void EmptyBar()
		{
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0x113B950", Offset = "0x113B950", VA = "0x113B950")]
		public MT_UIRadialBar()
		{
		}

		[Token(Token = "0x600295D")]
		[Address(RVA = "0x113B964", Offset = "0x113B964", VA = "0x113B964")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE99A1C", Offset = "0xE99A1C")]
		private void <FillCircle>b__4_0(float value)
		{
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0x113B980", Offset = "0x113B980", VA = "0x113B980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE99A2C", Offset = "0xE99A2C")]
		private void <EmptyBar>b__5_0(float value)
		{
		}
	}
	[Token(Token = "0x200081E")]
	public sealed class MT_UIRadialBarOneShot : MT_UIRadialBar, Controls.IGenericUIActions
	{
		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent onFull;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Controls _controls;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _playerMaxDistance;

		[Token(Token = "0x600295F")]
		[Address(RVA = "0x113B99C", Offset = "0x113B99C", VA = "0x113B99C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002960")]
		[Address(RVA = "0x113BA64", Offset = "0x113BA64", VA = "0x113BA64", Slot = "4")]
		public void OnHoldA(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002961")]
		[Address(RVA = "0x113BC88", Offset = "0x113BC88", VA = "0x113BC88")]
		public MT_UIRadialBarOneShot()
		{
		}
	}
	[Token(Token = "0x200081F")]
	public class MT_UIRadialBarUnavailable : MonoBehaviour
	{
		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image _crossImage;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GridlyLocalizer _text;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _previousLocalisationStringId;

		[Token(Token = "0x4002229")]
		private const string UnavailableLocalisationStringId = "UI_General_SeatInteract_03";

		[Token(Token = "0x6002962")]
		[Address(RVA = "0x113BCA4", Offset = "0x113BCA4", VA = "0x113BCA4")]
		public void Show()
		{
		}

		[Token(Token = "0x6002963")]
		[Address(RVA = "0x113BDA0", Offset = "0x113BDA0", VA = "0x113BDA0")]
		public void Hide()
		{
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0x113BE70", Offset = "0x113BE70", VA = "0x113BE70")]
		public MT_UIRadialBarUnavailable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000820")]
	public class OnValueChangedEvent : UnityEvent<float>
	{
		[Token(Token = "0x6002965")]
		[Address(RVA = "0x107B47C", Offset = "0x107B47C", VA = "0x107B47C")]
		public OnValueChangedEvent()
		{
		}
	}
	[Token(Token = "0x2000821")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE75D0C", Offset = "0xE75D0C")]
	public class MT_UIScrollBar : MonoBehaviour
	{
		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_UIButton handle;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnValueChangedEvent onValueChanged;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _scrollBarHeight;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RectTransform _handleTransform;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _handleHeight;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _handleStartPos;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _prevHandHeight;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _isScrolling;

		[Token(Token = "0x6002966")]
		[Address(RVA = "0x113BE78", Offset = "0x113BE78", VA = "0x113BE78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002967")]
		[Address(RVA = "0x113C044", Offset = "0x113C044", VA = "0x113C044")]
		private void Update()
		{
		}

		[Token(Token = "0x6002968")]
		[Address(RVA = "0x113BF3C", Offset = "0x113BF3C", VA = "0x113BF3C")]
		private void SetUpHandle()
		{
		}

		[Token(Token = "0x6002969")]
		[Address(RVA = "0x113C15C", Offset = "0x113C15C", VA = "0x113C15C")]
		private void GetScrolledPercentage(float position, out float percentage)
		{
		}

		[Token(Token = "0x600296A")]
		[Address(RVA = "0x113C17C", Offset = "0x113C17C", VA = "0x113C17C")]
		public MT_UIScrollBar()
		{
		}

		[Token(Token = "0x600296B")]
		[Address(RVA = "0x113C184", Offset = "0x113C184", VA = "0x113C184")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE99A3C", Offset = "0xE99A3C")]
		private void <SetUpHandle>b__10_0()
		{
		}

		[Token(Token = "0x600296C")]
		[Address(RVA = "0x113C1C8", Offset = "0x113C1C8", VA = "0x113C1C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE99A4C", Offset = "0xE99A4C")]
		private void <SetUpHandle>b__10_1()
		{
		}
	}
	[Token(Token = "0x2000822")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE75D44", Offset = "0xE75D44")]
	public class MT_UIScrollView : MonoBehaviour
	{
		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_UIScrollBar scrollBar;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform content;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _scrollViewHeight;

		[Token(Token = "0x600296D")]
		[Address(RVA = "0x113C1D0", Offset = "0x113C1D0", VA = "0x113C1D0")]
		public void Awake()
		{
		}

		[Token(Token = "0x600296E")]
		[Address(RVA = "0x113C2F4", Offset = "0x113C2F4", VA = "0x113C2F4")]
		private void MoveContent(float percentage)
		{
		}

		[Token(Token = "0x600296F")]
		[Address(RVA = "0x113C3C4", Offset = "0x113C3C4", VA = "0x113C3C4")]
		public MT_UIScrollView()
		{
		}
	}
	[Token(Token = "0x2000823")]
	public class MT_UIToggleButton : MT_UIButton
	{
		[Token(Token = "0x2000824")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75D7C", Offset = "0xE75D7C")]
		private sealed class <ResetColor>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400223A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_UIToggleButton <>4__this;

			[Token(Token = "0x400223B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <finishTime>5__2;

			[Token(Token = "0x17000453")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002978")]
				[Address(RVA = "0x32BA5E8", Offset = "0x32BA5E8", VA = "0x32BA5E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000454")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600297A")]
				[Address(RVA = "0x32BA630", Offset = "0x32BA630", VA = "0x32BA630", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002975")]
			[Address(RVA = "0x32BA480", Offset = "0x32BA480", VA = "0x32BA480")]
			[DebuggerHidden]
			public <ResetColor>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002976")]
			[Address(RVA = "0x32BA4AC", Offset = "0x32BA4AC", VA = "0x32BA4AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002977")]
			[Address(RVA = "0x32BA4B0", Offset = "0x32BA4B0", VA = "0x32BA4B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002979")]
			[Address(RVA = "0x32BA5F0", Offset = "0x32BA5F0", VA = "0x32BA5F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002235")]
		private const float Timeout = 2f;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE872B4", Offset = "0xE872B4")]
		private bool <IsSelected>k__BackingField;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private Color imageStartingColor;

		[Token(Token = "0x17000452")]
		public bool IsSelected
		{
			[Token(Token = "0x6002970")]
			[Address(RVA = "0x113C3CC", Offset = "0x113C3CC", VA = "0x113C3CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE99A5C", Offset = "0xE99A5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002971")]
			[Address(RVA = "0x113C3D4", Offset = "0x113C3D4", VA = "0x113C3D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE99A6C", Offset = "0xE99A6C")]
			set
			{
			}
		}

		[Token(Token = "0x6002972")]
		[Address(RVA = "0x113C3E0", Offset = "0x113C3E0", VA = "0x113C3E0")]
		public void SetSelected(bool isSelected)
		{
		}

		[Token(Token = "0x6002973")]
		[Address(RVA = "0x113C544", Offset = "0x113C544", VA = "0x113C544")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE99A7C", Offset = "0xE99A7C")]
		private IEnumerator ResetColor()
		{
			return null;
		}

		[Token(Token = "0x6002974")]
		[Address(RVA = "0x113C5BC", Offset = "0x113C5BC", VA = "0x113C5BC")]
		public MT_UIToggleButton()
		{
		}
	}
	[Token(Token = "0x2000825")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE75D8C", Offset = "0xE75D8C")]
	public class MT_HoldToFill : MonoBehaviour, Controls.IGenericUIActions
	{
		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE872D4", Offset = "0xE872D4")]
		public UnityEvent onFilled;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE8730C", Offset = "0xE8730C")]
		[SerializeField]
		private MT_UIRadialBar radialBar;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE87358", Offset = "0xE87358")]
		[SerializeField]
		private bool disableOnInteractionComplete;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _canPerformInput;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Controls _controls;

		[Token(Token = "0x600297B")]
		[Address(RVA = "0x124A784", Offset = "0x124A784", VA = "0x124A784")]
		private void Awake()
		{
		}

		[Token(Token = "0x600297C")]
		[Address(RVA = "0x124A8FC", Offset = "0x124A8FC", VA = "0x124A8FC", Slot = "4")]
		public void OnHoldA(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0x124A850", Offset = "0x124A850", VA = "0x124A850")]
		public void ToggleBarVisibility(bool isVisible)
		{
		}

		[Token(Token = "0x600297E")]
		[Address(RVA = "0x124AB4C", Offset = "0x124AB4C", VA = "0x124AB4C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0x124AB5C", Offset = "0x124AB5C", VA = "0x124AB5C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0x124AB68", Offset = "0x124AB68", VA = "0x124AB68")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0x124AC1C", Offset = "0x124AC1C", VA = "0x124AC1C")]
		public MT_HoldToFill()
		{
		}
	}
}
namespace MazeTheory.Interaction.Player
{
	[Token(Token = "0x2000826")]
	public class ExcludeGrabIndicator : MonoBehaviour
	{
		[Token(Token = "0x6002982")]
		[Address(RVA = "0x100C314", Offset = "0x100C314", VA = "0x100C314")]
		public ExcludeGrabIndicator()
		{
		}
	}
	[Token(Token = "0x2000827")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE75E14", Offset = "0xE75E14")]
	public class MT_HandInteractor : MonoBehaviour
	{
		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandType handType;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform handModel;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform handAttachTransform;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform grabTransform;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LineRenderer forceGrabLineRenderer;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<Collider> fingerColliders;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<Collider> palmColliders;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE873E4", Offset = "0xE873E4")]
		[SerializeField]
		private MT_HandHaptics handHaptics;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MT_NPAMemories npaMemories;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent onGrab;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _prevSelectedObj;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _selectedObject;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<GameObject, int> _nearObjects;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _isHandOccupied;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool _enableHaptics;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _currentForceGrabDistance;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject _forceGrabObj;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _canUseForceGrab;

		[Token(Token = "0x4002253")]
		private const string InteractablesTag = "Interactables";

		[Token(Token = "0x4002254")]
		private const float ForceGrabMinDist = 0.5f;

		[Token(Token = "0x17000455")]
		public GameObject SelectedObject
		{
			[Token(Token = "0x6002983")]
			[Address(RVA = "0x15CA320", Offset = "0x15CA320", VA = "0x15CA320")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000456")]
		public bool IsHandOccupied
		{
			[Token(Token = "0x6002984")]
			[Address(RVA = "0x15CA328", Offset = "0x15CA328", VA = "0x15CA328")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002985")]
		[Address(RVA = "0x15CA330", Offset = "0x15CA330", VA = "0x15CA330")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002986")]
		[Address(RVA = "0x15CA334", Offset = "0x15CA334", VA = "0x15CA334")]
		private void Update()
		{
		}

		[Token(Token = "0x6002987")]
		[Address(RVA = "0x15C48D8", Offset = "0x15C48D8", VA = "0x15C48D8")]
		public void Grab()
		{
		}

		[Token(Token = "0x6002988")]
		[Address(RVA = "0x15C4DA4", Offset = "0x15C4DA4", VA = "0x15C4DA4")]
		public void Drop()
		{
		}

		[Token(Token = "0x6002989")]
		[Address(RVA = "0x15CA8FC", Offset = "0x15CA8FC", VA = "0x15CA8FC")]
		public void Squeeze()
		{
		}

		[Token(Token = "0x600298A")]
		[Address(RVA = "0x15CAA50", Offset = "0x15CAA50", VA = "0x15CAA50")]
		public void Release()
		{
		}

		[Token(Token = "0x600298B")]
		[Address(RVA = "0x15CABA4", Offset = "0x15CABA4", VA = "0x15CABA4")]
		public void Use()
		{
		}

		[Token(Token = "0x600298C")]
		[Address(RVA = "0x15CAD98", Offset = "0x15CAD98", VA = "0x15CAD98")]
		public void ReleaseTrigger()
		{
		}

		[Token(Token = "0x600298D")]
		[Address(RVA = "0x15CAF90", Offset = "0x15CAF90", VA = "0x15CAF90")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600298E")]
		[Address(RVA = "0x15CB034", Offset = "0x15CB034", VA = "0x15CB034")]
		private void CheckForAddObj(GameObject go)
		{
		}

		[Token(Token = "0x600298F")]
		[Address(RVA = "0x15CB6D8", Offset = "0x15CB6D8", VA = "0x15CB6D8")]
		private void SetSelectedObject(IButton button, GameObject go)
		{
		}

		[Token(Token = "0x6002990")]
		[Address(RVA = "0x15CB9F8", Offset = "0x15CB9F8", VA = "0x15CB9F8")]
		private void SetSelectedObject(IHoverable hoverable)
		{
		}

		[Token(Token = "0x6002991")]
		[Address(RVA = "0x15CBD44", Offset = "0x15CBD44", VA = "0x15CBD44")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0x15CBDE8", Offset = "0x15CBDE8", VA = "0x15CBDE8")]
		private void CheckForRemoveObj(GameObject go)
		{
		}

		[Token(Token = "0x6002993")]
		[Address(RVA = "0x15CC004", Offset = "0x15CC004", VA = "0x15CC004")]
		public void SetPalmCollision(bool isEnabled)
		{
		}

		[Token(Token = "0x6002994")]
		[Address(RVA = "0x15CC134", Offset = "0x15CC134", VA = "0x15CC134")]
		public void SetFingersCollision(bool isEnabled)
		{
		}

		[Token(Token = "0x6002995")]
		[Address(RVA = "0x15CC264", Offset = "0x15CC264", VA = "0x15CC264")]
		public void SetSelectedObject(GameObject newSelectedObject)
		{
		}

		[Token(Token = "0x6002996")]
		[Address(RVA = "0x15CC26C", Offset = "0x15CC26C", VA = "0x15CC26C")]
		public void SetGrabHapticsEnabled(bool enable)
		{
		}

		[Token(Token = "0x6002997")]
		[Address(RVA = "0x15CC278", Offset = "0x15CC278", VA = "0x15CC278")]
		public void SetForceGrabEnable(bool enable)
		{
		}

		[Token(Token = "0x6002998")]
		[Address(RVA = "0x15CC284", Offset = "0x15CC284", VA = "0x15CC284")]
		public MT_HandInteractor()
		{
		}
	}
	[Token(Token = "0x2000828")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE75E4C", Offset = "0xE75E4C")]
	public class MT_HandPhysics : MonoBehaviour
	{
		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform follow;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 followPositionOffset;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float maxVelocity;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float followPositionStrength;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float followRotationStrength;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float maxFollowDistance;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _moveTo;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody _rb;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _stopFollowController;

		[Token(Token = "0x17000457")]
		public Rigidbody rb
		{
			[Token(Token = "0x6002999")]
			[Address(RVA = "0x15CC310", Offset = "0x15CC310", VA = "0x15CC310")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600299A")]
		[Address(RVA = "0x15CC318", Offset = "0x15CC318", VA = "0x15CC318")]
		private void Start()
		{
		}

		[Token(Token = "0x600299B")]
		[Address(RVA = "0x15CC438", Offset = "0x15CC438", VA = "0x15CC438")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600299C")]
		[Address(RVA = "0x15CC52C", Offset = "0x15CC52C", VA = "0x15CC52C")]
		private void MoveTo()
		{
		}

		[Token(Token = "0x600299D")]
		[Address(RVA = "0x15CC6F8", Offset = "0x15CC6F8", VA = "0x15CC6F8")]
		private void TorqueTo()
		{
		}

		[Token(Token = "0x600299E")]
		[Address(RVA = "0x15CCA44", Offset = "0x15CCA44", VA = "0x15CCA44")]
		private void SetTransformToFollow()
		{
		}

		[Token(Token = "0x600299F")]
		[Address(RVA = "0x15CCAE8", Offset = "0x15CCAE8", VA = "0x15CCAE8")]
		public void SetStopFollowController(bool stopFollow)
		{
		}

		[Token(Token = "0x60029A0")]
		[Address(RVA = "0x15CCAF4", Offset = "0x15CCAF4", VA = "0x15CCAF4")]
		public MT_HandPhysics()
		{
		}
	}
	[Token(Token = "0x2000829")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE75EAC", Offset = "0xE75EAC")]
	public class MT_InteractionManager : MonoBehaviour, Controls.IInteractionActions
	{
		[Token(Token = "0x200082A")]
		public enum GrabType
		{
			[Token(Token = "0x4002266")]
			Hold,
			[Token(Token = "0x4002267")]
			Trigger
		}

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MT_HandInteractor rightHandInteractor;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MT_HandInteractor leftHandInteractor;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Controls _controls;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GrabType grabType;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool cooldownEnabled;

		[Token(Token = "0x4002263")]
		private const float InputsCooldown = 0.5f;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Guid, double> _lastTimeAction;

		[Token(Token = "0x60029A1")]
		[Address(RVA = "0x124D3B4", Offset = "0x124D3B4", VA = "0x124D3B4")]
		public GrabType GetGrabType()
		{
			return default(GrabType);
		}

		[Token(Token = "0x60029A2")]
		[Address(RVA = "0x124D3BC", Offset = "0x124D3BC", VA = "0x124D3BC")]
		public void SetGrabType(GrabType newGrabType)
		{
		}

		[Token(Token = "0x60029A3")]
		[Address(RVA = "0x124D3C4", Offset = "0x124D3C4", VA = "0x124D3C4")]
		public bool GetCooldown()
		{
			return default(bool);
		}

		[Token(Token = "0x60029A4")]
		[Address(RVA = "0x124D3CC", Offset = "0x124D3CC", VA = "0x124D3CC")]
		public void SetCooldown(bool newCooldown)
		{
		}

		[Token(Token = "0x60029A5")]
		[Address(RVA = "0x124D3D8", Offset = "0x124D3D8", VA = "0x124D3D8")]
		private bool IsInCooldown(Guid contextId, double contextTime)
		{
			return default(bool);
		}

		[Token(Token = "0x60029A6")]
		[Address(RVA = "0x124D50C", Offset = "0x124D50C", VA = "0x124D50C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60029A7")]
		[Address(RVA = "0x124D620", Offset = "0x124D620", VA = "0x124D620", Slot = "4")]
		public void OnRightGrab(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60029A8")]
		[Address(RVA = "0x124D70C", Offset = "0x124D70C", VA = "0x124D70C", Slot = "5")]
		public void OnLeftGrab(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60029A9")]
		[Address(RVA = "0x124D7FC", Offset = "0x124D7FC", VA = "0x124D7FC", Slot = "6")]
		public void OnRightSqueeze(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60029AA")]
		[Address(RVA = "0x124D8B0", Offset = "0x124D8B0", VA = "0x124D8B0", Slot = "7")]
		public void OnLeftSqueeze(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60029AB")]
		[Address(RVA = "0x124D964", Offset = "0x124D964", VA = "0x124D964", Slot = "8")]
		public void OnRightUse(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60029AC")]
		[Address(RVA = "0x124DA18", Offset = "0x124DA18", VA = "0x124DA18", Slot = "9")]
		public void OnLeftUse(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60029AD")]
		[Address(RVA = "0x124DACC", Offset = "0x124DACC", VA = "0x124DACC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60029AE")]
		[Address(RVA = "0x124DC18", Offset = "0x124DC18", VA = "0x124DC18")]
		public MT_InteractionManager()
		{
		}
	}
	[Token(Token = "0x200082B")]
	public class PlayerLookAtGrabbableIndicator : MonoBehaviour
	{
		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HVRHandGrabber _leftHandGrabber;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HVRHandGrabber _rightHandGrabber;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _dotIndicator;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _grabbableLayer;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<int, GameObject> _indicators;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HashSet<int> _currentlyGrabbed;

		[Token(Token = "0x60029AF")]
		[Address(RVA = "0x10867B0", Offset = "0x10867B0", VA = "0x10867B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029B0")]
		[Address(RVA = "0x1086804", Offset = "0x1086804", VA = "0x1086804")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60029B1")]
		[Address(RVA = "0x1086AB8", Offset = "0x1086AB8", VA = "0x1086AB8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60029B2")]
		[Address(RVA = "0x1086D6C", Offset = "0x1086D6C", VA = "0x1086D6C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60029B3")]
		[Address(RVA = "0x108706C", Offset = "0x108706C", VA = "0x108706C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60029B4")]
		[Address(RVA = "0x1087290", Offset = "0x1087290", VA = "0x1087290")]
		private void OnHoverEnter(HVRGrabberBase arg0, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60029B5")]
		[Address(RVA = "0x1087320", Offset = "0x1087320", VA = "0x1087320")]
		private void OnHoverExit(HVRGrabberBase arg0, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60029B6")]
		[Address(RVA = "0x10873B0", Offset = "0x10873B0", VA = "0x10873B0")]
		private void OnGrabbed(HVRGrabberBase arg0, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60029B7")]
		[Address(RVA = "0x1087440", Offset = "0x1087440", VA = "0x1087440")]
		private void OnReleased(HVRGrabberBase arg0, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60029B8")]
		[Address(RVA = "0x1086E50", Offset = "0x1086E50", VA = "0x1086E50")]
		private void AddIndicator(HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60029B9")]
		[Address(RVA = "0x1087150", Offset = "0x1087150", VA = "0x1087150")]
		private void RemoveIndicator(HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60029BA")]
		[Address(RVA = "0x10874D0", Offset = "0x10874D0", VA = "0x10874D0")]
		public PlayerLookAtGrabbableIndicator()
		{
		}
	}
}
namespace MazeTheory.Interaction.Highlights
{
	[Token(Token = "0x200082C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE75EE4", Offset = "0xE75EE4")]
	public class MT_Highlight : MonoBehaviour, IBakeryReceiver
	{
		[Serializable]
		[Token(Token = "0x200082D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75F1C", Offset = "0xE75F1C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002277")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002278")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Material, bool> <>9__10_0;

			[Token(Token = "0x4002279")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Material, bool> <>9__12_0;

			[Token(Token = "0x60029C8")]
			[Address(RVA = "0x1037FE4", Offset = "0x1037FE4", VA = "0x1037FE4")]
			public <>c()
			{
			}

			[Token(Token = "0x60029C9")]
			[Address(RVA = "0x1037FEC", Offset = "0x1037FEC", VA = "0x1037FEC")]
			internal bool <EnableHighlight>b__10_0(Material mat)
			{
				return default(bool);
			}

			[Token(Token = "0x60029CA")]
			[Address(RVA = "0x1038064", Offset = "0x1038064", VA = "0x1038064")]
			internal bool <SetHighlightTexture>b__12_0(Material mat)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE874BC", Offset = "0xE874BC")]
		public Renderer[] renderersToHighlight;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IHoverable _hoverable;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IGrabbable _grabbable;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Material> _materials;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Emission;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color instinctHighlightColor;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float instinctHighlightProximity;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool hideInstinct;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE874F4", Offset = "0xE874F4")]
		private readonly Renderer[] <ParentRenderers>k__BackingField;

		[Token(Token = "0x17000458")]
		public Renderer[] ChildRenderers
		{
			[Token(Token = "0x60029C1")]
			[Address(RVA = "0x15D0F00", Offset = "0x15D0F00", VA = "0x15D0F00", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000459")]
		public Renderer[] ParentRenderers
		{
			[Token(Token = "0x60029C2")]
			[Address(RVA = "0x15D0F4C", Offset = "0x15D0F4C", VA = "0x15D0F4C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE99B2C", Offset = "0xE99B2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029BB")]
		[Address(RVA = "0x15CFF1C", Offset = "0x15CFF1C", VA = "0x15CFF1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0x15CFF28", Offset = "0x15CFF28", VA = "0x15CFF28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0x15D0630", Offset = "0x15D0630", VA = "0x15D0630")]
		public void EnableHighlight(bool isEnabled)
		{
		}

		[Token(Token = "0x60029BE")]
		[Address(RVA = "0x15D0AA8", Offset = "0x15D0AA8", VA = "0x15D0AA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60029BF")]
		[Address(RVA = "0x15D0118", Offset = "0x15D0118", VA = "0x15D0118")]
		private void SetHighlightTexture()
		{
		}

		[Token(Token = "0x60029C0")]
		[Address(RVA = "0x15D0BFC", Offset = "0x15D0BFC", VA = "0x15D0BFC")]
		private void Update()
		{
		}

		[Token(Token = "0x60029C3")]
		[Address(RVA = "0x15D0F54", Offset = "0x15D0F54", VA = "0x15D0F54")]
		public MT_Highlight()
		{
		}

		[Token(Token = "0x60029C5")]
		[Address(RVA = "0x15D0FFC", Offset = "0x15D0FFC", VA = "0x15D0FFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE99B3C", Offset = "0xE99B3C")]
		private void <OnEnable>b__9_0()
		{
		}

		[Token(Token = "0x60029C6")]
		[Address(RVA = "0x15D1004", Offset = "0x15D1004", VA = "0x15D1004")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE99B4C", Offset = "0xE99B4C")]
		private void <OnEnable>b__9_1()
		{
		}
	}
}
namespace MazeTheory.Interaction.Haptics
{
	[Token(Token = "0x200082E")]
	public class MT_HapticsBase : MonoBehaviour
	{
		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly System.Random _random;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _eventID;

		[Token(Token = "0x60029CB")]
		[Address(RVA = "0x15CD874", Offset = "0x15CD874", VA = "0x15CD874", Slot = "4")]
		protected virtual void DoRumble(int id, MT_HapticsClip hapticsClip, bool mix = false)
		{
		}

		[Token(Token = "0x60029CC")]
		[Address(RVA = "0x15CD878", Offset = "0x15CD878", VA = "0x15CD878")]
		public void TransmitRumble(int id, MT_HapticsClip hapticsClip, bool mix = false)
		{
		}

		[Token(Token = "0x60029CD")]
		[Address(RVA = "0x15CA310", Offset = "0x15CA310", VA = "0x15CA310")]
		public MT_HapticsBase()
		{
		}
	}
	[Token(Token = "0x200082F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE75F2C", Offset = "0xE75F2C")]
	public class MT_HapticsFrameObject : ScriptableObject
	{
		[Token(Token = "0x2000830")]
		public enum Type
		{
			[Token(Token = "0x4002290")]
			Raw,
			[Token(Token = "0x4002291")]
			Wav
		}

		[Token(Token = "0x400227C")]
		private const double CurveMinimumOutput = 0.0;

		[Token(Token = "0x400227D")]
		private const int DataPool = 10;

		[Token(Token = "0x400227E")]
		private const int MaxSampleSize = 10000;

		[Token(Token = "0x400227F")]
		private const int MinSampleSize = 100;

		[Token(Token = "0x4002280")]
		private const bool UseRightChannel = false;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool loop;

		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Type clipType;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE87504", Offset = "0xE87504")]
		[SerializeField]
		private AudioClip hapticAudioClip;

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string clipPath;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int totalRawClipPoints;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MT_RawHapticCurve clipHapticCurve;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool invertNegativeValues;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8757C", Offset = "0xE8757C")]
		private float sampleFidelity;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE875BC", Offset = "0xE875BC")]
		private double curveMaximumOutput;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MT_RawHapticCurve rawHapticCurve;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _loadOnSeparateThread;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private byte[] _hapticData;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _haveCachedClip;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MT_HapticsClip _hapticClip;

		[Token(Token = "0x1700045A")]
		public MT_HapticsClip Clip
		{
			[Token(Token = "0x60029D1")]
			[Address(RVA = "0x15C9FE0", Offset = "0x15C9FE0", VA = "0x15C9FE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029CF")]
		[Address(RVA = "0x15CE00C", Offset = "0x15CE00C", VA = "0x15CE00C")]
		public MT_HapticsFrameObject()
		{
		}

		[Token(Token = "0x60029D0")]
		[Address(RVA = "0x15CE0B8", Offset = "0x15CE0B8", VA = "0x15CE0B8")]
		public MT_HapticsFrameObject(float defaultRawTime = 1f)
		{
		}

		[Token(Token = "0x60029D2")]
		[Address(RVA = "0x15CE194", Offset = "0x15CE194", VA = "0x15CE194")]
		private void GenerateClip()
		{
		}
	}
	[Token(Token = "0x2000831")]
	public class MT_HapticsUtils : MonoBehaviour
	{
		[Token(Token = "0x2000832")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75F8C", Offset = "0xE75F8C")]
		private sealed class <PlayHapticsClip>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_HapticsClip hapticsClip;

			[Token(Token = "0x4002297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float hapticsMult;

			[Token(Token = "0x4002298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public XRNode hand;

			[Token(Token = "0x4002299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string id;

			[Token(Token = "0x400229A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__2;

			[Token(Token = "0x400229B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private byte[] <>7__wrap2;

			[Token(Token = "0x400229C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <>7__wrap3;

			[Token(Token = "0x17000460")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029E5")]
				[Address(RVA = "0x1037F30", Offset = "0x1037F30", VA = "0x1037F30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000461")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029E7")]
				[Address(RVA = "0x1037F78", Offset = "0x1037F78", VA = "0x1037F78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029E2")]
			[Address(RVA = "0x1037CF8", Offset = "0x1037CF8", VA = "0x1037CF8")]
			[DebuggerHidden]
			public <PlayHapticsClip>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60029E3")]
			[Address(RVA = "0x1037D24", Offset = "0x1037D24", VA = "0x1037D24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029E4")]
			[Address(RVA = "0x1037D28", Offset = "0x1037D28", VA = "0x1037D28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029E6")]
			[Address(RVA = "0x1037F38", Offset = "0x1037F38", VA = "0x1037F38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000833")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75F9C", Offset = "0xE75F9C")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x400229D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double dataMin;

			[Token(Token = "0x400229E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double range;

			[Token(Token = "0x400229F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double min;

			[Token(Token = "0x40022A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public double max;

			[Token(Token = "0x60029E8")]
			[Address(RVA = "0x1037CBC", Offset = "0x1037CBC", VA = "0x1037CBC")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x60029E9")]
			[Address(RVA = "0x1037CC4", Offset = "0x1037CC4", VA = "0x1037CC4")]
			internal double <NormalizeData>b__0(short d)
			{
				return default(double);
			}

			[Token(Token = "0x60029EA")]
			[Address(RVA = "0x1037CDC", Offset = "0x1037CDC", VA = "0x1037CDC")]
			internal double <NormalizeData>b__1(double n)
			{
				return default(double);
			}
		}

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, Coroutine> _hapticCoroutines;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static HapticCapabilities _hapticCapabilities;

		[Token(Token = "0x1700045B")]
		private static MT_CoroutineRunner CoroutineRunner
		{
			[Token(Token = "0x60029D3")]
			[Address(RVA = "0x15CE49C", Offset = "0x15CE49C", VA = "0x15CE49C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045C")]
		private static HapticCapabilities Capabilities
		{
			[Token(Token = "0x60029D4")]
			[Address(RVA = "0x15CE500", Offset = "0x15CE500", VA = "0x15CE500")]
			get
			{
				return default(HapticCapabilities);
			}
		}

		[Token(Token = "0x1700045D")]
		public static uint SampleRateHz
		{
			[Token(Token = "0x60029D5")]
			[Address(RVA = "0x15CDCE4", Offset = "0x15CDCE4", VA = "0x15CDCE4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700045E")]
		public static uint MaxBufferSize
		{
			[Token(Token = "0x60029D6")]
			[Address(RVA = "0x15CE664", Offset = "0x15CE664", VA = "0x15CE664")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700045F")]
		public static float DisplayFrequency
		{
			[Token(Token = "0x60029D7")]
			[Address(RVA = "0x15CE608", Offset = "0x15CE608", VA = "0x15CE608")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60029D8")]
		[Address(RVA = "0x15CE764", Offset = "0x15CE764", VA = "0x15CE764")]
		public static void SendHapticData(XRNode hand, MT_HapticsClip hapticsClip, bool mix, float hapticsMult = 1f)
		{
		}

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0x15CE768", Offset = "0x15CE768", VA = "0x15CE768")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE99B5C", Offset = "0xE99B5C")]
		private static IEnumerator PlayHapticsClip(XRNode hand, MT_HapticsClip hapticsClip, string id, float hapticsMult)
		{
			return null;
		}

		[Token(Token = "0x60029DA")]
		[Address(RVA = "0x15CE814", Offset = "0x15CE814", VA = "0x15CE814")]
		private static short BytesToShort(byte firstByte, byte secondByte)
		{
			return default(short);
		}

		[Token(Token = "0x60029DB")]
		[Address(RVA = "0x15CE81C", Offset = "0x15CE81C", VA = "0x15CE81C")]
		public static short[] ReadWavFile(string fileName, bool useRightChannel)
		{
			return null;
		}

		[Token(Token = "0x60029DC")]
		[Address(RVA = "0x15CEB68", Offset = "0x15CEB68", VA = "0x15CEB68")]
		public static short[] AverageData(short[] data, bool invertNegativeValues, int sampleSteps = 1000, int dataPool = 10)
		{
			return null;
		}

		[Token(Token = "0x60029DD")]
		[Address(RVA = "0x15CECC4", Offset = "0x15CECC4", VA = "0x15CECC4")]
		public static double[] NormalizeData(short[] data, double min, double max)
		{
			return null;
		}

		[Token(Token = "0x60029DE")]
		[Address(RVA = "0x15CEEB0", Offset = "0x15CEEB0", VA = "0x15CEEB0")]
		public static AnimationCurve GenerateCurveFromClipData(double[] clipData, float time)
		{
			return null;
		}

		[Token(Token = "0x60029DF")]
		[Address(RVA = "0x15CF014", Offset = "0x15CF014", VA = "0x15CF014")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60029E0")]
		[Address(RVA = "0x15CF170", Offset = "0x15CF170", VA = "0x15CF170")]
		public MT_HapticsUtils()
		{
		}
	}
	[Token(Token = "0x2000834")]
	public class MT_StandardHapticBase : MT_HapticsBase
	{
		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_HapticsFrame[] haptics;

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool _playing;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MT_HapticsFrame _currentHaptic;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _sampleCopyIndex;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _startTime;

		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _lastTime;

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HashSet<MT_HapticsBase> _hapticNodes;

		[Token(Token = "0x60029EB")]
		[Address(RVA = "0x12B0D20", Offset = "0x12B0D20", VA = "0x12B0D20")]
		protected void Play(int hapticNumber)
		{
		}

		[Token(Token = "0x60029EC")]
		[Address(RVA = "0x12B0DD8", Offset = "0x12B0DD8", VA = "0x12B0DD8")]
		protected void Play(MT_HapticsFrame hapticsFrame)
		{
		}

		[Token(Token = "0x60029ED")]
		[Address(RVA = "0x12B0E64", Offset = "0x12B0E64", VA = "0x12B0E64")]
		protected void Stop()
		{
		}

		[Token(Token = "0x60029EE")]
		[Address(RVA = "0x12B0E74", Offset = "0x12B0E74", VA = "0x12B0E74", Slot = "4")]
		protected override void DoRumble(int id, MT_HapticsClip hapticsClip, bool mix = false)
		{
		}

		[Token(Token = "0x60029EF")]
		[Address(RVA = "0x12B0E78", Offset = "0x12B0E78", VA = "0x12B0E78")]
		private void PlayHapticPiece(MT_HapticsClip clip, int sampleLength)
		{
		}

		[Token(Token = "0x60029F0")]
		[Address(RVA = "0x12B11AC", Offset = "0x12B11AC", VA = "0x12B11AC")]
		public void AddHandHaptic(MT_HapticsBase hapticsBase)
		{
		}

		[Token(Token = "0x60029F1")]
		[Address(RVA = "0x12B1210", Offset = "0x12B1210", VA = "0x12B1210")]
		public void RemoveHandHaptic(MT_HapticsBase hapticsBase)
		{
		}

		[Token(Token = "0x60029F2")]
		[Address(RVA = "0x12B1274", Offset = "0x12B1274", VA = "0x12B1274")]
		public HashSet<MT_HapticsBase> GetHapticNodes()
		{
			return null;
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0x12B127C", Offset = "0x12B127C", VA = "0x12B127C")]
		public MT_StandardHapticBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000835")]
	public struct MT_HapticsFrame
	{
		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MT_HapticsFrameObject haptic;
	}
	[Token(Token = "0x2000836")]
	public class MT_HandHaptics : MT_HapticsBase
	{
		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandType handType;

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_HapticsFrame grabHaptic;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MT_HapticsFrame dropHaptic;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_HapticsFrame playerToObjectHaptic;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MT_HapticsFrame inventoryDropZoneEnterHaptic;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MT_HapticsFrame itemAddedToInventoryHaptic;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MT_HapticsFrame actionDeniedHaptic;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float hapticsMult;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _disableHaptics;

		[Token(Token = "0x60029F4")]
		[Address(RVA = "0x15C9F0C", Offset = "0x15C9F0C", VA = "0x15C9F0C")]
		public float GetHapticsMult()
		{
			return default(float);
		}

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0x15C9F14", Offset = "0x15C9F14", VA = "0x15C9F14")]
		public void SetHapticsMult(float newHapticsMult)
		{
		}

		[Token(Token = "0x60029F6")]
		[Address(RVA = "0x15C9F1C", Offset = "0x15C9F1C", VA = "0x15C9F1C", Slot = "4")]
		protected override void DoRumble(int id, MT_HapticsClip hapticsClip, bool mix = false)
		{
		}

		[Token(Token = "0x60029F7")]
		[Address(RVA = "0x15C9F20", Offset = "0x15C9F20", VA = "0x15C9F20")]
		public void PlayGrabHaptic()
		{
		}

		[Token(Token = "0x60029F8")]
		[Address(RVA = "0x15CA018", Offset = "0x15CA018", VA = "0x15CA018")]
		public void PlayDropHaptic()
		{
		}

		[Token(Token = "0x60029F9")]
		[Address(RVA = "0x15CA0D8", Offset = "0x15CA0D8", VA = "0x15CA0D8")]
		public void PlayPlayerToObjHaptic()
		{
		}

		[Token(Token = "0x60029FA")]
		[Address(RVA = "0x15CA198", Offset = "0x15CA198", VA = "0x15CA198")]
		public void PlayActionDeniedHaptic(float multiplier = 1f)
		{
		}

		[Token(Token = "0x60029FB")]
		[Address(RVA = "0x15CA274", Offset = "0x15CA274", VA = "0x15CA274")]
		public MT_HapticsFrame GetInventoryDropZoneEnterHaptic()
		{
			return default(MT_HapticsFrame);
		}

		[Token(Token = "0x60029FC")]
		[Address(RVA = "0x15CA27C", Offset = "0x15CA27C", VA = "0x15CA27C")]
		public MT_HapticsFrame GetItemAddedToInventoryHaptic()
		{
			return default(MT_HapticsFrame);
		}

		[Token(Token = "0x60029FD")]
		[Address(RVA = "0x15CA284", Offset = "0x15CA284", VA = "0x15CA284")]
		[PublicAPI]
		public void SetHapticsEnabled(bool enabled)
		{
		}

		[Token(Token = "0x60029FE")]
		[Address(RVA = "0x15CA294", Offset = "0x15CA294", VA = "0x15CA294")]
		public MT_HandHaptics()
		{
		}
	}
	[Token(Token = "0x2000837")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE75FAC", Offset = "0xE75FAC")]
	public class MT_ObjectHaptics : MT_HapticsBase
	{
		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_HapticsFrame[] haptics;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float hapticsMult;

		[Token(Token = "0x60029FF")]
		[Address(RVA = "0x10FCD40", Offset = "0x10FCD40", VA = "0x10FCD40")]
		public float GetHapticsMult()
		{
			return default(float);
		}

		[Token(Token = "0x6002A00")]
		[Address(RVA = "0x10FCD48", Offset = "0x10FCD48", VA = "0x10FCD48")]
		public void SetHapticsMult(float newHapticsMult)
		{
		}

		[Token(Token = "0x6002A01")]
		[Address(RVA = "0x10FCD50", Offset = "0x10FCD50", VA = "0x10FCD50", Slot = "4")]
		protected override void DoRumble(int id, MT_HapticsClip hapticsClip, bool mix = false)
		{
		}

		[Token(Token = "0x6002A02")]
		[Address(RVA = "0x10FCD54", Offset = "0x10FCD54", VA = "0x10FCD54")]
		public void PlayHaptic(int hapticNumber)
		{
		}

		[Token(Token = "0x6002A03")]
		[Address(RVA = "0x10FCD58", Offset = "0x10FCD58", VA = "0x10FCD58")]
		public void PlayHaptic(MT_HapticsFrame hapticsFrame)
		{
		}

		[Token(Token = "0x6002A04")]
		[Address(RVA = "0x10FCD5C", Offset = "0x10FCD5C", VA = "0x10FCD5C")]
		public MT_ObjectHaptics()
		{
		}
	}
	[Token(Token = "0x2000838")]
	public class MT_HapticsClip
	{
		[Token(Token = "0x2000839")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE75FE4", Offset = "0xE75FE4")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x40022B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_HapticsClip <>4__this;

			[Token(Token = "0x40022B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int channel;

			[Token(Token = "0x40022BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int channelCount;

			[Token(Token = "0x40022BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float[] audioData;

			[Token(Token = "0x40022BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float frequency;

			[Token(Token = "0x40022BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public uint controllerSampleRate;

			[Token(Token = "0x6002A0F")]
			[Address(RVA = "0x1037C84", Offset = "0x1037C84", VA = "0x1037C84")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6002A10")]
			[Address(RVA = "0x1037C8C", Offset = "0x1037C8C", VA = "0x1037C8C")]
			internal void <.ctor>b__0()
			{
			}
		}

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Thread _thread;

		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] _samples;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _length;

		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _clipDuration;

		[Token(Token = "0x17000462")]
		public float ClipDuration
		{
			[Token(Token = "0x6002A05")]
			[Address(RVA = "0x15CD8F4", Offset = "0x15CD8F4", VA = "0x15CD8F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A06")]
			[Address(RVA = "0x15CD92C", Offset = "0x15CD92C", VA = "0x15CD92C")]
			set
			{
			}
		}

		[Token(Token = "0x17000463")]
		public int Length
		{
			[Token(Token = "0x6002A07")]
			[Address(RVA = "0x15CD934", Offset = "0x15CD934", VA = "0x15CD934")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002A08")]
			[Address(RVA = "0x15CD970", Offset = "0x15CD970", VA = "0x15CD970")]
			private set
			{
			}
		}

		[Token(Token = "0x17000464")]
		public byte[] Samples
		{
			[Token(Token = "0x6002A09")]
			[Address(RVA = "0x15CD978", Offset = "0x15CD978", VA = "0x15CD978")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A0A")]
			[Address(RVA = "0x15CD9E4", Offset = "0x15CD9E4", VA = "0x15CD9E4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002A0B")]
		[Address(RVA = "0x15CD9EC", Offset = "0x15CD9EC", VA = "0x15CD9EC")]
		public MT_HapticsClip()
		{
		}

		[Token(Token = "0x6002A0C")]
		[Address(RVA = "0x15CDA5C", Offset = "0x15CDA5C", VA = "0x15CDA5C")]
		public MT_HapticsClip(byte[] samples, int samplesCount)
		{
		}

		[Token(Token = "0x6002A0D")]
		[Address(RVA = "0x15CDAB0", Offset = "0x15CDAB0", VA = "0x15CDAB0")]
		public MT_HapticsClip(AudioClip audioClip, bool loadSeparateThread = false, int channel = 0)
		{
		}

		[Token(Token = "0x6002A0E")]
		[Address(RVA = "0x15CDDD4", Offset = "0x15CDDD4", VA = "0x15CDDD4")]
		private void LoadAudio(int channelCount, float[] audioData, float frequency, int channel, uint controllerSampleRate)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200083A")]
	public class MT_RawHapticCurve
	{
		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8769C", Offset = "0xE8769C")]
		public float time;

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve hapticCurve;

		[Token(Token = "0x17000465")]
		public int frameCount
		{
			[Token(Token = "0x6002A11")]
			[Address(RVA = "0x12A4064", Offset = "0x12A4064", VA = "0x12A4064")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002A12")]
		[Address(RVA = "0x12A40FC", Offset = "0x12A40FC", VA = "0x12A40FC")]
		public MT_RawHapticCurve()
		{
		}
	}
}
namespace MazeTheory.Interaction.Camera
{
	[Token(Token = "0x200083B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE75FF4", Offset = "0xE75FF4")]
	public class MT_SceneNavigation : MonoBehaviour, Controls.ISceneViewActions
	{
		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform cameraTransform;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE876C8", Offset = "0xE876C8")]
		private float cameraSpeed;

		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE87708", Offset = "0xE87708")]
		private float cameraAngle;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8774C", Offset = "0xE8774C")]
		private float cameraRotationSpeed;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MT_Locomotion _controller;

		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Controls _controls;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _sceneViewMode;

		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _playerCameraPos;

		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _canMoveInXZ;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _canMoveInY;

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector2 _movementAmountInXZ;

		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector2 _movementAmountInY;

		[Token(Token = "0x40022CC")]
		private const float SpeedFactor = 100f;

		[Token(Token = "0x6002A13")]
		[Address(RVA = "0x12A7230", Offset = "0x12A7230", VA = "0x12A7230")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002A14")]
		[Address(RVA = "0x12A72F8", Offset = "0x12A72F8", VA = "0x12A72F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A15")]
		[Address(RVA = "0x12A757C", Offset = "0x12A757C", VA = "0x12A757C", Slot = "4")]
		public void OnEnterSceneViewMode(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002A16")]
		[Address(RVA = "0x12A7644", Offset = "0x12A7644", VA = "0x12A7644", Slot = "5")]
		public void OnXZMove(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002A17")]
		[Address(RVA = "0x12A76D8", Offset = "0x12A76D8", VA = "0x12A76D8", Slot = "6")]
		public void OnYMove(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002A18")]
		[Address(RVA = "0x12A776C", Offset = "0x12A776C", VA = "0x12A776C", Slot = "7")]
		public void OnVRCameraRotate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002A19")]
		[Address(RVA = "0x12A733C", Offset = "0x12A733C", VA = "0x12A733C")]
		private void MoveCamera()
		{
		}

		[Token(Token = "0x6002A1A")]
		[Address(RVA = "0x12A73E8", Offset = "0x12A73E8", VA = "0x12A73E8")]
		private void ChangeCameraHeight()
		{
		}

		[Token(Token = "0x6002A1B")]
		[Address(RVA = "0x12A77E4", Offset = "0x12A77E4", VA = "0x12A77E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002A1C")]
		[Address(RVA = "0x12A7824", Offset = "0x12A7824", VA = "0x12A7824")]
		public MT_SceneNavigation()
		{
		}
	}
}
namespace MazeTheory.Interaction.Collectables
{
	[Token(Token = "0x200083C")]
	public class CollectableThresholdChecker : MonoBehaviour
	{
		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string flagToCheck;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int threshold;

		[Token(Token = "0x6002A1D")]
		[Address(RVA = "0x120A81C", Offset = "0x120A81C", VA = "0x120A81C")]
		public void CheckFlag()
		{
		}

		[Token(Token = "0x6002A1E")]
		[Address(RVA = "0x120AEC8", Offset = "0x120AEC8", VA = "0x120AEC8")]
		public CollectableThresholdChecker()
		{
		}
	}
	[Token(Token = "0x200083D")]
	public class MT_CollectableManager : JournalSection
	{
		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Button leftButton;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Button rightButton;

		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE8779C", Offset = "0xE8779C")]
		public TextMeshProUGUI progressText;

		[Token(Token = "0x6002A1F")]
		[Address(RVA = "0x112BF40", Offset = "0x112BF40", VA = "0x112BF40", Slot = "4")]
		public override void SectionSetup(JournalHandler Jhandler, int index)
		{
		}

		[Token(Token = "0x6002A20")]
		[Address(RVA = "0x112BFC4", Offset = "0x112BFC4", VA = "0x112BFC4", Slot = "5")]
		public override void OpenSection()
		{
		}

		[Token(Token = "0x6002A21")]
		[Address(RVA = "0x112C008", Offset = "0x112C008", VA = "0x112C008", Slot = "6")]
		public override void CloseSection()
		{
		}

		[Token(Token = "0x6002A22")]
		[Address(RVA = "0x112C08C", Offset = "0x112C08C", VA = "0x112C08C")]
		public void AssignButtonsToCurrentJCC(JournalCollectibleChecker jcc)
		{
		}

		[Token(Token = "0x6002A23")]
		[Address(RVA = "0x112C184", Offset = "0x112C184", VA = "0x112C184")]
		public void UnassignButtonsFromCurrentJCC(JournalCollectibleChecker jcc)
		{
		}

		[Token(Token = "0x6002A24")]
		[Address(RVA = "0x112C27C", Offset = "0x112C27C", VA = "0x112C27C")]
		public MT_CollectableManager()
		{
		}
	}
}
namespace MazeTheory.Interaction.Objects
{
	[Token(Token = "0x200083E")]
	public sealed class PowderScaleBehaviour : MonoBehaviour
	{
		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform powderTransform;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _fillScale;

		[Token(Token = "0x6002A25")]
		[Address(RVA = "0x1089AA4", Offset = "0x1089AA4", VA = "0x1089AA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002A26")]
		[Address(RVA = "0x1089AC4", Offset = "0x1089AC4", VA = "0x1089AC4")]
		public void ChangePowderFill(float fillAmount)
		{
		}

		[Token(Token = "0x6002A27")]
		[Address(RVA = "0x1089B4C", Offset = "0x1089B4C", VA = "0x1089B4C")]
		public PowderScaleBehaviour()
		{
		}
	}
	[Token(Token = "0x200083F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE7602C", Offset = "0xE7602C")]
	public class MT_NpcShootable : MonoBehaviour, IShootable
	{
		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float health;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private NPCNavigation navigation;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onShot;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent onDeath;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[MazeTheory.Toolbox.ReadOnly]
		public float _currentHealth;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _bulletForce;

		[Token(Token = "0x6002A28")]
		[Address(RVA = "0x10FB320", Offset = "0x10FB320", VA = "0x10FB320")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002A29")]
		[Address(RVA = "0x10FB32C", Offset = "0x10FB32C", VA = "0x10FB32C", Slot = "4")]
		public void OnShot(float bulletForce, float bulletDamage, Vector3 direction)
		{
		}

		[Token(Token = "0x6002A2A")]
		[Address(RVA = "0x10FB3B4", Offset = "0x10FB3B4", VA = "0x10FB3B4")]
		public Vector3 GetBulletForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A2B")]
		[Address(RVA = "0x10FB3C0", Offset = "0x10FB3C0", VA = "0x10FB3C0")]
		public MT_NpcShootable()
		{
		}
	}
	[Token(Token = "0x2000840")]
	public class MT_NpcJournal : MT_Grabbable
	{
		[Token(Token = "0x2000841")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE76064", Offset = "0xE76064")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40022DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_HandInteractor handInteractor;

			[Token(Token = "0x40022DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MT_NpcJournal <>4__this;

			[Token(Token = "0x6002A2E")]
			[Address(RVA = "0x103DD20", Offset = "0x103DD20", VA = "0x103DD20")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002A2F")]
			[Address(RVA = "0x103DD28", Offset = "0x103DD28", VA = "0x103DD28")]
			internal void <Grab>b__0()
			{
			}
		}

		[Token(Token = "0x6002A2C")]
		[Address(RVA = "0x10FAC28", Offset = "0x10FAC28", VA = "0x10FAC28", Slot = "18")]
		public override void Grab(MT_HandInteractor handInteractor)
		{
		}

		[Token(Token = "0x6002A2D")]
		[Address(RVA = "0x10FADA4", Offset = "0x10FADA4", VA = "0x10FADA4")]
		public MT_NpcJournal()
		{
		}
	}
	[Token(Token = "0x2000842")]
	public class MT_Blade : MonoBehaviour
	{
		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject bladeCollider;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE87844", Offset = "0xE87844")]
		private float bladeDamageMultiplier;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject bloodParticles;

		[Token(Token = "0x6002A30")]
		[Address(RVA = "0x1126B18", Offset = "0x1126B18", VA = "0x1126B18")]
		public void SpawnBloodParticles(Vector3 spawnPosition)
		{
		}

		[Token(Token = "0x6002A31")]
		[Address(RVA = "0x1126C58", Offset = "0x1126C58", VA = "0x1126C58")]
		public GameObject GetBladeCollider()
		{
			return null;
		}

		[Token(Token = "0x6002A32")]
		[Address(RVA = "0x1126C60", Offset = "0x1126C60", VA = "0x1126C60")]
		public float GetBladeDamageMultiplier()
		{
			return default(float);
		}

		[Token(Token = "0x6002A33")]
		[Address(RVA = "0x1126C68", Offset = "0x1126C68", VA = "0x1126C68")]
		public MT_Blade()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000843")]
	public class DiceEvent
	{
		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject DiceSide;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnValueCheck;

		[Token(Token = "0x6002A34")]
		[Address(RVA = "0x10089C4", Offset = "0x10089C4", VA = "0x10089C4")]
		public DiceEvent()
		{
		}
	}
	[Token(Token = "0x2000844")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE76074", Offset = "0xE76074")]
	public class MT_Dice : MonoBehaviour
	{
		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool isLoaded;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int loadedDiceValue;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<DiceEvent> diceEvents;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isThrown;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _sideOneRotation;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _sideTwoRotation;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _sideThreeRotation;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 _sideFourRotation;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 _sideFiveRotation;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 _sideSixRotation;

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody _rb;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private HVRGrabbable _hvrGrabbable;

		[Token(Token = "0x6002A35")]
		[Address(RVA = "0x1136858", Offset = "0x1136858", VA = "0x1136858")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002A36")]
		[Address(RVA = "0x11368E4", Offset = "0x11368E4", VA = "0x11368E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002A37")]
		[Address(RVA = "0x1136A00", Offset = "0x1136A00", VA = "0x1136A00")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002A38")]
		[Address(RVA = "0x1136B1C", Offset = "0x1136B1C", VA = "0x1136B1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A39")]
		[Address(RVA = "0x1136DB0", Offset = "0x1136DB0", VA = "0x1136DB0")]
		public void Grab(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
		{
		}

		[Token(Token = "0x6002A3A")]
		[Address(RVA = "0x1136DB8", Offset = "0x1136DB8", VA = "0x1136DB8")]
		protected void OnDrop(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
		{
		}

		[Token(Token = "0x6002A3B")]
		[Address(RVA = "0x1136B6C", Offset = "0x1136B6C", VA = "0x1136B6C")]
		private void CheckDiceValue()
		{
		}

		[Token(Token = "0x6002A3C")]
		[Address(RVA = "0x1136DC4", Offset = "0x1136DC4", VA = "0x1136DC4")]
		private void ReturnDiceValue(int diceValue)
		{
		}

		[Token(Token = "0x6002A3D")]
		[Address(RVA = "0x1137090", Offset = "0x1137090", VA = "0x1137090")]
		private void OnCollisionEnter(UnityEngine.Collision other)
		{
		}

		[Token(Token = "0x6002A3E")]
		[Address(RVA = "0x1137264", Offset = "0x1137264", VA = "0x1137264")]
		public MT_Dice()
		{
		}
	}
	[Token(Token = "0x2000845")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE760AC", Offset = "0xE760AC")]
	public class MT_Grabbable : MT_ObjectInteractionBase
	{
		[Token(Token = "0x2000846")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE760E4", Offset = "0xE760E4")]
		private sealed class <WaitToDrop>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400230A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400230B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400230C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_Grabbable <>4__this;

			[Token(Token = "0x17000466")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A55")]
				[Address(RVA = "0x1037AB4", Offset = "0x1037AB4", VA = "0x1037AB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000467")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A57")]
				[Address(RVA = "0x1037AFC", Offset = "0x1037AFC", VA = "0x1037AFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A52")]
			[Address(RVA = "0x103797C", Offset = "0x103797C", VA = "0x103797C")]
			[DebuggerHidden]
			public <WaitToDrop>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6002A53")]
			[Address(RVA = "0x10379A8", Offset = "0x10379A8", VA = "0x10379A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A54")]
			[Address(RVA = "0x10379AC", Offset = "0x10379AC", VA = "0x10379AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A56")]
			[Address(RVA = "0x1037ABC", Offset = "0x1037ABC", VA = "0x1037ABC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private float velocityFactor;

		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private bool addExtraRot;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		private float rotationFactor;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE878F4", Offset = "0xE878F4")]
		[SerializeField]
		private float jointBreakForce;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private float jointTorqueForce;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private float twoHandJointBreakForce;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		private float twoHandJointTorqueForce;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private float twoHandMass;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		public List<Collider> objColliders;

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Action onUnsnap;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Action onSnap;

		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Action onNpcGiveToPlayer;

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private ConfigurableJoint _joint;

		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private ConfigurableJoint _secondaryJoint;

		[Token(Token = "0x40022FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float _objectStartMass;

		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Transform _objectSceneParent;

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Transform _objectTransf;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private HandType _secondaryHandType;

		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		protected MT_HandInteractor _secondaryHandInteractor;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private MT_HandInteractor _currentInteractor;

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected MT_HandPhysics _currentHandPhysics;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool _isCachedGrab;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		protected Quaternion _lastCenterOfMassRot;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Coroutine _waitToResetHand;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Vector3 _objectStartLocalPos;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private Vector3 _objectStartLocalRot;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool _startKinematic;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[HideInInspector]
		public List<LayerMask> _colliderLayers;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private LayerMask _currentHandLayer;

		[Token(Token = "0x6002A3F")]
		[Address(RVA = "0x15C5154", Offset = "0x15C5154", VA = "0x15C5154", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002A40")]
		[Address(RVA = "0x15C5440", Offset = "0x15C5440", VA = "0x15C5440", Slot = "22")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6002A41")]
		[Address(RVA = "0x15C5488", Offset = "0x15C5488", VA = "0x15C5488", Slot = "18")]
		public override void Grab(MT_HandInteractor handInteractor)
		{
		}

		[Token(Token = "0x6002A42")]
		[Address(RVA = "0x15C597C", Offset = "0x15C597C", VA = "0x15C597C")]
		public void CachedGrab(MT_HandInteractor handInteractor)
		{
		}

		[Token(Token = "0x6002A43")]
		[Address(RVA = "0x15C59B4", Offset = "0x15C59B4", VA = "0x15C59B4", Slot = "19")]
		public override void Drop(MT_HandInteractor handInteractor)
		{
		}

		[Token(Token = "0x6002A44")]
		[Address(RVA = "0x15C64B0", Offset = "0x15C64B0", VA = "0x15C64B0")]
		public void NpcDrop(Action onDrop, Transform parent, Transform endPosition, Vector3 endPos, Vector3 endRot, bool resetPos = true, bool setToNonKinematic = false)
		{
		}

		[Token(Token = "0x6002A45")]
		[Address(RVA = "0x15C5754", Offset = "0x15C5754", VA = "0x15C5754")]
		private void SetUpHandAttach()
		{
		}

		[Token(Token = "0x6002A46")]
		[Address(RVA = "0x15C6124", Offset = "0x15C6124", VA = "0x15C6124")]
		private void ConfigureJoint(ConfigurableJoint joint, Rigidbody rb)
		{
		}

		[Token(Token = "0x6002A47")]
		[Address(RVA = "0x15C674C", Offset = "0x15C674C", VA = "0x15C674C")]
		private void AddJoint()
		{
		}

		[Token(Token = "0x6002A48")]
		[Address(RVA = "0x15C69F4", Offset = "0x15C69F4", VA = "0x15C69F4")]
		private void OnJointBreak(float breakForce)
		{
		}

		[Token(Token = "0x6002A49")]
		[Address(RVA = "0x15C6B38", Offset = "0x15C6B38", VA = "0x15C6B38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE99C1C", Offset = "0xE99C1C")]
		private IEnumerator WaitToDrop()
		{
			return null;
		}

		[Token(Token = "0x6002A4A")]
		[Address(RVA = "0x15C60C0", Offset = "0x15C60C0", VA = "0x15C60C0")]
		private void SetJointValues(ConfigurableJoint joint, float breakForce, float breakTorque, float mass)
		{
		}

		[Token(Token = "0x6002A4B")]
		[Address(RVA = "0x15C60BC", Offset = "0x15C60BC", VA = "0x15C60BC")]
		private void ResetHandToIdlePose(HandType handType)
		{
		}

		[Token(Token = "0x6002A4C")]
		[Address(RVA = "0x15C61E4", Offset = "0x15C61E4", VA = "0x15C61E4")]
		private void ResetPreciseGrab()
		{
		}

		[Token(Token = "0x6002A4D")]
		[Address(RVA = "0x15C6268", Offset = "0x15C6268", VA = "0x15C6268")]
		private void SetObjectVelocity()
		{
		}

		[Token(Token = "0x6002A4E")]
		[Address(RVA = "0x15C6BB0", Offset = "0x15C6BB0", VA = "0x15C6BB0")]
		public HandType GetHandType()
		{
			return default(HandType);
		}

		[Token(Token = "0x6002A4F")]
		[Address(RVA = "0x15C6BB8", Offset = "0x15C6BB8", VA = "0x15C6BB8")]
		public void SetObjectSceneParent(Transform sceneParent)
		{
		}

		[Token(Token = "0x6002A50")]
		[Address(RVA = "0x15C6BC8", Offset = "0x15C6BC8", VA = "0x15C6BC8")]
		public MT_Grabbable()
		{
		}

		[Token(Token = "0x6002A51")]
		[Address(RVA = "0x15C6C00", Offset = "0x15C6C00", VA = "0x15C6C00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE99C7C", Offset = "0xE99C7C")]
		private void <SetUpHandAttach>b__35_0()
		{
		}
	}
	[Token(Token = "0x2000847")]
	public class MT_Gun : MT_Grabbable, IUsable
	{
		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE8798C", Offset = "0xE8798C")]
		private bool startEmpty;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE879C4", Offset = "0xE879C4")]
		protected int maxClipSize;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		protected Transform gunBarrel;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE87A18", Offset = "0xE87A18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE87A18", Offset = "0xE87A18")]
		[SerializeField]
		protected float recoilAngle;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE87A6C", Offset = "0xE87A6C")]
		protected float recoilForce;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE87AB0", Offset = "0xE87AB0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE87AB0", Offset = "0xE87AB0")]
		protected float bulletForce;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE87B04", Offset = "0xE87B04")]
		protected float bulletDamage;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		protected LayerMask bulletLayerMask;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private MT_SnapDropZone magazineDropZone;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		private UnityEvent onGrabLoadedGun;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		private UnityEvent onFired;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private UnityEvent onDryFire;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private UnityEvent onEmpty;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private UnityEvent onReload;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		private UnityEvent onReleaseTrigger;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		protected bool _hasMagazine;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x259")]
		private bool _onEmpty;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private int _currentBullets;

		[Token(Token = "0x6002A58")]
		[Address(RVA = "0x15C7704", Offset = "0x15C7704", VA = "0x15C7704", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002A59")]
		[Address(RVA = "0x15C773C", Offset = "0x15C773C", VA = "0x15C773C", Slot = "18")]
		public override void Grab(MT_HandInteractor handInteractor)
		{
		}

		[Token(Token = "0x6002A5A")]
		[Address(RVA = "0x15C7780", Offset = "0x15C7780", VA = "0x15C7780", Slot = "23")]
		public void Use()
		{
		}

		[Token(Token = "0x6002A5B")]
		[Address(RVA = "0x15C789C", Offset = "0x15C789C", VA = "0x15C789C", Slot = "24")]
		public void ReleaseTrigger()
		{
		}

		[Token(Token = "0x6002A5C")]
		[Address(RVA = "0x15C7784", Offset = "0x15C7784", VA = "0x15C7784")]
		private void Fire()
		{
		}

		[Token(Token = "0x6002A5D")]
		[Address(RVA = "0x15C78B4", Offset = "0x15C78B4", VA = "0x15C78B4", Slot = "25")]
		protected virtual void FireRay()
		{
		}

		[Token(Token = "0x6002A5E")]
		[Address(RVA = "0x15C78B0", Offset = "0x15C78B0", VA = "0x15C78B0")]
		private void Recoil()
		{
		}

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0x15C78B8", Offset = "0x15C78B8", VA = "0x15C78B8")]
		protected void Reload(int bulletCount)
		{
		}

		[Token(Token = "0x6002A60")]
		[Address(RVA = "0x15C78FC", Offset = "0x15C78FC", VA = "0x15C78FC")]
		public void AddMagazine(bool addMagazine)
		{
		}

		[Token(Token = "0x6002A61")]
		[Address(RVA = "0x15C7908", Offset = "0x15C7908", VA = "0x15C7908")]
		public int GetCurrentBullets()
		{
			return default(int);
		}

		[Token(Token = "0x6002A62")]
		[Address(RVA = "0x15C7910", Offset = "0x15C7910", VA = "0x15C7910")]
		public MT_Gun()
		{
		}
	}
	[Token(Token = "0x2000848")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE760F4", Offset = "0xE760F4")]
	public class MT_HandGun : MT_Gun
	{
		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE87BC8", Offset = "0xE87BC8")]
		[SerializeField]
		private GameObject bulletTrail;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private Vector3 _gunBarrelPos;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private Vector3 _gunBarrelDirection;

		[Token(Token = "0x6002A63")]
		[Address(RVA = "0x15C9734", Offset = "0x15C9734", VA = "0x15C9734")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A64")]
		[Address(RVA = "0x15C9794", Offset = "0x15C9794", VA = "0x15C9794", Slot = "25")]
		protected override void FireRay()
		{
		}

		[Token(Token = "0x6002A65")]
		[Address(RVA = "0x15C9BE8", Offset = "0x15C9BE8", VA = "0x15C9BE8")]
		private void DrawBulletTrail(Vector3 startPoint, Vector3 hitPoint)
		{
		}

		[Token(Token = "0x6002A66")]
		[Address(RVA = "0x15C9E18", Offset = "0x15C9E18", VA = "0x15C9E18")]
		public void Reload()
		{
		}

		[Token(Token = "0x6002A67")]
		[Address(RVA = "0x15C9E6C", Offset = "0x15C9E6C", VA = "0x15C9E6C")]
		public MT_HandGun()
		{
		}
	}
	[Token(Token = "0x2000849")]
	public class MT_HandGun_HitScan : MT_HandGun
	{
		[Token(Token = "0x6002A68")]
		[Address(RVA = "0x15C9EBC", Offset = "0x15C9EBC", VA = "0x15C9EBC")]
		public MT_HandGun_HitScan()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200084A")]
	public class FillAmountEvent
	{
		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE87C00", Offset = "0xE87C00")]
		public float fillThresholdMin;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE87C18", Offset = "0xE87C18")]
		public float fillThresholdMax;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onFillLevelReached;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _hasPlayed;

		[Token(Token = "0x17000468")]
		public bool HasPlayed
		{
			[Token(Token = "0x6002A69")]
			[Address(RVA = "0x100D2A8", Offset = "0x100D2A8", VA = "0x100D2A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A6A")]
			[Address(RVA = "0x100D2B0", Offset = "0x100D2B0", VA = "0x100D2B0")]
			set
			{
			}
		}

		[Token(Token = "0x6002A6B")]
		[Address(RVA = "0x100D2BC", Offset = "0x100D2BC", VA = "0x100D2BC")]
		public FillAmountEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200084B")]
	public class MT_LiquidShader : MonoBehaviour
	{
		[Token(Token = "0x6002A6C")]
		[Address(RVA = "0x125A1A0", Offset = "0x125A1A0", VA = "0x125A1A0", Slot = "4")]
		public virtual void SetFillLevel(float level)
		{
		}

		[Token(Token = "0x6002A6D")]
		[Address(RVA = "0x125A1A4", Offset = "0x125A1A4", VA = "0x125A1A4", Slot = "5")]
		public virtual void SetColor(Color color)
		{
		}

		[Token(Token = "0x6002A6E")]
		[Address(RVA = "0x125A1A8", Offset = "0x125A1A8", VA = "0x125A1A8")]
		public MT_LiquidShader()
		{
		}
	}
	[Token(Token = "0x200084C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE7612C", Offset = "0xE7612C")]
	public class MT_Pourable : MonoBehaviour
	{
		[Token(Token = "0x200084D")]
		protected enum PourableType
		{
			[Token(Token = "0x400234C")]
			Liquid,
			[Token(Token = "0x400234D")]
			Powder
		}

		[Serializable]
		[Token(Token = "0x200084E")]
		private struct LiquidType
		{
			[Token(Token = "0x400234E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string liquidTag;

			[Token(Token = "0x400234F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public UnityEvent onFilledFromEmpty;
		}

		[Token(Token = "0x200084F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE76164", Offset = "0xE76164")]
		private sealed class <CheckFillTime>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_Pourable <>4__this;

			[Token(Token = "0x17000469")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A8A")]
				[Address(RVA = "0x32B8AD4", Offset = "0x32B8AD4", VA = "0x32B8AD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A8C")]
				[Address(RVA = "0x32B8B1C", Offset = "0x32B8B1C", VA = "0x32B8B1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A87")]
			[Address(RVA = "0x32B8988", Offset = "0x32B8988", VA = "0x32B8988")]
			[DebuggerHidden]
			public <CheckFillTime>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6002A88")]
			[Address(RVA = "0x32B89B4", Offset = "0x32B89B4", VA = "0x32B89B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A89")]
			[Address(RVA = "0x32B89B8", Offset = "0x32B89B8", VA = "0x32B89B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A8B")]
			[Address(RVA = "0x32B8ADC", Offset = "0x32B8ADC", VA = "0x32B8ADC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected PourableType _pourableType;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected bool allowPouring;

		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform pourPosition;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE87C50", Offset = "0xE87C50")]
		protected float pourAngle;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE87C94", Offset = "0xE87C94")]
		protected float pourRatePerFrame;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE87CD4", Offset = "0xE87CD4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE87CD4", Offset = "0xE87CD4")]
		protected float fillAmount;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE87D24", Offset = "0xE87D24")]
		protected float containerVolumeInLitres;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE87D64", Offset = "0xE87D64")]
		protected string liquidTag;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool checkForCompatibleLiquids;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE87DAC", Offset = "0xE87DAC")]
		private string[] compatibleLiquidTags;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected LayerMask liquidLayerMask;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected MT_LiquidShader liquidShader;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected PowderScaleBehaviour powderScaler;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE87E04", Offset = "0xE87E04")]
		protected ParticleSystem particles;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float minVelocity;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float maxVelocity;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE87E5C", Offset = "0xE87E5C")]
		private float forwardThreshold;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private UnityEvent onPourStart;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		protected UnityEvent onPour;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private UnityEvent onPourEnd;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float fillGapTime;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private FillAmountEvent[] fillAmountEvents;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private UnityEvent onFillStart;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private UnityEvent onFill;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private UnityEvent onFillEnd;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private LiquidType[] liquidEvents;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private UnityEvent onEmpty;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private UnityEvent onFull;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool _isPouring;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool _isEmpty;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		private bool _isFilling;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private DateTime _lastFillTime;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Coroutine _fillFinished;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Rigidbody _rb;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Action<float> onLiquidValueChange;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private bool isWhisky;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		[SerializeField]
		private bool isTea;

		[Token(Token = "0x6002A6F")]
		[Address(RVA = "0x1336484", Offset = "0x1336484", VA = "0x1336484", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002A70")]
		[Address(RVA = "0x133689C", Offset = "0x133689C", VA = "0x133689C")]
		private void AddLiquid(float amount)
		{
		}

		[Token(Token = "0x6002A71")]
		[Address(RVA = "0x13368B0", Offset = "0x13368B0", VA = "0x13368B0", Slot = "5")]
		protected virtual void RemoveLiquid(float amount)
		{
		}

		[Token(Token = "0x6002A72")]
		[Address(RVA = "0x13368C4", Offset = "0x13368C4", VA = "0x13368C4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002A73")]
		[Address(RVA = "0x13368D0", Offset = "0x13368D0", VA = "0x13368D0", Slot = "6")]
		protected virtual void PourUpdate()
		{
		}

		[Token(Token = "0x6002A74")]
		[Address(RVA = "0x1336CC8", Offset = "0x1336CC8", VA = "0x1336CC8", Slot = "7")]
		public virtual void StartPour()
		{
		}

		[Token(Token = "0x6002A75")]
		[Address(RVA = "0x1336D7C", Offset = "0x1336D7C", VA = "0x1336D7C", Slot = "8")]
		public virtual void StopPour()
		{
		}

		[Token(Token = "0x6002A76")]
		[Address(RVA = "0x1336E20", Offset = "0x1336E20", VA = "0x1336E20", Slot = "9")]
		public virtual void OnFilled(float addLiquidRate, string lqTag)
		{
		}

		[Token(Token = "0x6002A77")]
		[Address(RVA = "0x1337024", Offset = "0x1337024", VA = "0x1337024")]
		private bool IsLiquidTagValid(string lqTag)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A78")]
		[Address(RVA = "0x13370AC", Offset = "0x13370AC", VA = "0x13370AC")]
		private void CheckFillAmount()
		{
		}

		[Token(Token = "0x6002A79")]
		[Address(RVA = "0x1337180", Offset = "0x1337180", VA = "0x1337180")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE99CDC", Offset = "0xE99CDC")]
		private IEnumerator CheckFillTime()
		{
			return null;
		}

		[Token(Token = "0x6002A7A")]
		[Address(RVA = "0x13371F8", Offset = "0x13371F8", VA = "0x13371F8")]
		protected void OnEmpty()
		{
		}

		[Token(Token = "0x6002A7B")]
		[Address(RVA = "0x1337240", Offset = "0x1337240", VA = "0x1337240")]
		protected void OnFull()
		{
		}

		[Token(Token = "0x6002A7C")]
		[Address(RVA = "0x1337260", Offset = "0x1337260", VA = "0x1337260", Slot = "10")]
		protected virtual void FireRay()
		{
		}

		[Token(Token = "0x6002A7D")]
		[Address(RVA = "0x1336AA4", Offset = "0x1336AA4", VA = "0x1336AA4")]
		protected bool AllowEmittingParticles()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A7E")]
		[Address(RVA = "0x1337530", Offset = "0x1337530", VA = "0x1337530")]
		[PublicAPI]
		public void SetPourRate(float pourRate)
		{
		}

		[Token(Token = "0x6002A7F")]
		[Address(RVA = "0x1337538", Offset = "0x1337538", VA = "0x1337538")]
		[PublicAPI]
		public void AllowPouring()
		{
		}

		[Token(Token = "0x6002A80")]
		[Address(RVA = "0x1337544", Offset = "0x1337544", VA = "0x1337544")]
		[PublicAPI]
		public void StopPouring()
		{
		}

		[Token(Token = "0x6002A81")]
		[Address(RVA = "0x1337554", Offset = "0x1337554", VA = "0x1337554", Slot = "11")]
		[PublicAPI]
		public virtual void SetFillAmount(float amount)
		{
		}

		[Token(Token = "0x6002A82")]
		[Address(RVA = "0x1336C1C", Offset = "0x1336C1C", VA = "0x1336C1C")]
		[PublicAPI]
		public void CanEmitParticles(bool enabled)
		{
		}

		[Token(Token = "0x6002A83")]
		[Address(RVA = "0x1337668", Offset = "0x1337668", VA = "0x1337668")]
		[PublicAPI]
		public string GetPourTag()
		{
			return null;
		}

		[Token(Token = "0x6002A84")]
		[Address(RVA = "0x1337670", Offset = "0x1337670", VA = "0x1337670")]
		[PublicAPI]
		public float GetFillAmount()
		{
			return default(float);
		}

		[Token(Token = "0x6002A85")]
		[Address(RVA = "0x1337678", Offset = "0x1337678", VA = "0x1337678")]
		[PublicAPI]
		public void SetLiquidTag(string newTag)
		{
		}

		[Token(Token = "0x6002A86")]
		[Address(RVA = "0x1337680", Offset = "0x1337680", VA = "0x1337680")]
		public MT_Pourable()
		{
		}
	}
	[Token(Token = "0x2000850")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE76174", Offset = "0xE76174")]
	public class MT_Shootable : MonoBehaviour, IShootable
	{
		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent onShot;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _bulletForce;

		[Token(Token = "0x6002A8D")]
		[Address(RVA = "0x12A96AC", Offset = "0x12A96AC", VA = "0x12A96AC", Slot = "4")]
		public void OnShot(float bulletForce, float bulletDamage, Vector3 direction)
		{
		}

		[Token(Token = "0x6002A8E")]
		[Address(RVA = "0x12A96D8", Offset = "0x12A96D8", VA = "0x12A96D8")]
		public Vector3 GetBulletForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A8F")]
		[Address(RVA = "0x12A96E4", Offset = "0x12A96E4", VA = "0x12A96E4")]
		public MT_Shootable()
		{
		}
	}
	[Token(Token = "0x2000851")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE761AC", Offset = "0xE761AC")]
	public class MT_Shotgun : MT_Gun
	{
		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE87F7C", Offset = "0xE87F7C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE87F7C", Offset = "0xE87F7C")]
		private float spreadRadius;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE87FCC", Offset = "0xE87FCC")]
		private int minRaycastNumber;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8800C", Offset = "0xE8800C")]
		private int maxRaycastNumber;

		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE8804C", Offset = "0xE8804C")]
		[SerializeField]
		private MT_Rotator barrel;

		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE88084", Offset = "0xE88084")]
		[SerializeField]
		private GameObject bulletTrail;

		[Token(Token = "0x6002A90")]
		[Address(RVA = "0x12A96EC", Offset = "0x12A96EC", VA = "0x12A96EC", Slot = "21")]
		protected override void OnGrab()
		{
		}

		[Token(Token = "0x6002A91")]
		[Address(RVA = "0x12A9730", Offset = "0x12A9730", VA = "0x12A9730", Slot = "25")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE99E0C", Offset = "0xE99E0C")]
		protected override void FireRay()
		{
		}

		[Token(Token = "0x6002A92")]
		[Address(RVA = "0x12A9DF0", Offset = "0x12A9DF0", VA = "0x12A9DF0")]
		private void DrawBulletTrail(Vector3 startPoint, Vector3 hitPoint)
		{
		}

		[Token(Token = "0x6002A93")]
		[Address(RVA = "0x12AA020", Offset = "0x12AA020", VA = "0x12AA020")]
		public void Reload()
		{
		}

		[Token(Token = "0x6002A94")]
		[Address(RVA = "0x12AA078", Offset = "0x12AA078", VA = "0x12AA078")]
		public MT_Shotgun()
		{
		}
	}
	[Token(Token = "0x2000852")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE761E4", Offset = "0xE761E4")]
	public class MT_Squeezable : MonoBehaviour, ISqueezable
	{
		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent onPressed;

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onReleased;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HVRGrabbable _hvrGrabbable;

		[Token(Token = "0x6002A95")]
		[Address(RVA = "0x12B0678", Offset = "0x12B0678", VA = "0x12B0678")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002A96")]
		[Address(RVA = "0x12B0764", Offset = "0x12B0764", VA = "0x12B0764")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002A97")]
		[Address(RVA = "0x12B0980", Offset = "0x12B0980", VA = "0x12B0980")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002A98")]
		[Address(RVA = "0x12B0B9C", Offset = "0x12B0B9C", VA = "0x12B0B9C", Slot = "4")]
		public void Squeeze(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
		{
		}

		[Token(Token = "0x6002A99")]
		[Address(RVA = "0x12B0C3C", Offset = "0x12B0C3C", VA = "0x12B0C3C")]
		public void ForceSqueeze()
		{
		}

		[Token(Token = "0x6002A9A")]
		[Address(RVA = "0x12B0C50", Offset = "0x12B0C50", VA = "0x12B0C50", Slot = "5")]
		public void Release(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
		{
		}

		[Token(Token = "0x6002A9B")]
		[Address(RVA = "0x12B0CF0", Offset = "0x12B0CF0", VA = "0x12B0CF0")]
		public void ForceRelease()
		{
		}

		[Token(Token = "0x6002A9C")]
		[Address(RVA = "0x12B0D04", Offset = "0x12B0D04", VA = "0x12B0D04")]
		private void OnDrop(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
		{
		}

		[Token(Token = "0x6002A9D")]
		[Address(RVA = "0x12B0D18", Offset = "0x12B0D18", VA = "0x12B0D18")]
		public MT_Squeezable()
		{
		}
	}
	[Token(Token = "0x2000853")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE7621C", Offset = "0xE7621C")]
	public class MT_Switchable : MonoBehaviour, IUsable
	{
		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE880DC", Offset = "0xE880DC")]
		private bool startOn;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onToggleOn;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onToggleOff;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool _currentValue;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected HVRGrabbable _hvrGrabbable;

		[Token(Token = "0x6002A9E")]
		[Address(RVA = "0x12B4894", Offset = "0x12B4894", VA = "0x12B4894", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002A9F")]
		[Address(RVA = "0x12B48DC", Offset = "0x12B48DC", VA = "0x12B48DC", Slot = "4")]
		public void Use()
		{
		}

		[Token(Token = "0x6002AA0")]
		[Address(RVA = "0x12B4A08", Offset = "0x12B4A08", VA = "0x12B4A08", Slot = "5")]
		public void ReleaseTrigger()
		{
		}

		[Token(Token = "0x6002AA1")]
		[Address(RVA = "0x12B48B8", Offset = "0x12B48B8", VA = "0x12B48B8")]
		[PublicAPI]
		public void Toggle()
		{
		}

		[Token(Token = "0x6002AA2")]
		[Address(RVA = "0x12B4A0C", Offset = "0x12B4A0C", VA = "0x12B4A0C", Slot = "7")]
		[PublicAPI]
		public virtual void ToggleOn()
		{
		}

		[Token(Token = "0x6002AA3")]
		[Address(RVA = "0x12B4A2C", Offset = "0x12B4A2C", VA = "0x12B4A2C", Slot = "8")]
		[PublicAPI]
		public virtual void ToggleOff()
		{
		}

		[Token(Token = "0x6002AA4")]
		[Address(RVA = "0x12B4A48", Offset = "0x12B4A48", VA = "0x12B4A48")]
		public MT_Switchable()
		{
		}
	}
	[Token(Token = "0x2000854")]
	public interface IButton
	{
		[Token(Token = "0x6002AA5")]
		UnityEvent GetHoverEnter();

		[Token(Token = "0x6002AA6")]
		UnityEvent GetHoverExit();

		[Token(Token = "0x6002AA7")]
		void InvokeHoverEnter();

		[Token(Token = "0x6002AA8")]
		void InvokeHoverExit();

		[Token(Token = "0x6002AA9")]
		int GetPriority();

		[Token(Token = "0x6002AAA")]
		bool HasUniqueHoverPose();
	}
	[Token(Token = "0x2000855")]
	public interface IHoverable
	{
		[Token(Token = "0x6002AAB")]
		UnityEvent GetHoverEnter();

		[Token(Token = "0x6002AAC")]
		UnityEvent GetHoverExit();

		[Token(Token = "0x6002AAD")]
		void InvokeHoverEnter();

		[Token(Token = "0x6002AAE")]
		void InvokeHoverExit();

		[Token(Token = "0x6002AAF")]
		int GetPriority();

		[Token(Token = "0x6002AB0")]
		bool HasUniqueHoverPose();
	}
	[Token(Token = "0x2000856")]
	public interface IGrabbable
	{
		[Token(Token = "0x6002AB1")]
		bool IsGrabbed();

		[Token(Token = "0x6002AB2")]
		bool IsGrabbable();

		[Token(Token = "0x6002AB3")]
		GrabType GetGrabType();

		[Token(Token = "0x6002AB4")]
		Transform GetObjectGrabCenter();

		[Token(Token = "0x6002AB5")]
		void Grab(MT_HandInteractor handInteractor);

		[Token(Token = "0x6002AB6")]
		void Drop(MT_HandInteractor handInteractor);
	}
	[Token(Token = "0x2000857")]
	public interface ISqueezable
	{
		[Token(Token = "0x6002AB7")]
		void Squeeze(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable);

		[Token(Token = "0x6002AB8")]
		void Release(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable);
	}
	[Token(Token = "0x2000858")]
	public interface IUsable
	{
		[Token(Token = "0x6002AB9")]
		void Use();

		[Token(Token = "0x6002ABA")]
		void ReleaseTrigger();
	}
	[Token(Token = "0x2000859")]
	public interface ITaggable
	{
		[Token(Token = "0x6002ABB")]
		string ObjectTag();
	}
	[Token(Token = "0x200085A")]
	public enum HandType
	{
		[Token(Token = "0x4002363")]
		Right,
		[Token(Token = "0x4002364")]
		Left,
		[Token(Token = "0x4002365")]
		None
	}
	[Token(Token = "0x200085B")]
	public enum GrabType
	{
		[Token(Token = "0x4002367")]
		OneHand,
		[Token(Token = "0x4002368")]
		SwapHands,
		[Token(Token = "0x4002369")]
		TwoHanded
	}
	[Token(Token = "0x200085C")]
	public abstract class ConnectedInteractables : MonoBehaviour
	{
		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected ConnectedInteractables[] _connectedInteractables;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float FollowPercentage;

		[Token(Token = "0x6002ABC")]
		[Address(RVA = "0xFF86D4", Offset = "0xFF86D4", VA = "0xFF86D4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002ABD")]
		protected abstract void UpdateConnected();

		[Token(Token = "0x6002ABE")]
		public abstract void Follow(float amount, float minLimit, float maxLimit);

		[Token(Token = "0x6002ABF")]
		[Address(RVA = "0xFF86E0", Offset = "0xFF86E0", VA = "0xFF86E0")]
		protected ConnectedInteractables()
		{
		}
	}
	[Token(Token = "0x200085D")]
	public class ConnectedRotator : ConnectedInteractables
	{
		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HVRRotationTracker rotationTracker;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private HVRRotationLimiter rotationLimiter;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Rigidbody rigidbody;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion _startRotation;

		[Token(Token = "0x6002AC0")]
		[Address(RVA = "0xFF86F0", Offset = "0xFF86F0", VA = "0xFF86F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002AC1")]
		[Address(RVA = "0xFF8884", Offset = "0xFF8884", VA = "0xFF8884", Slot = "4")]
		protected override void UpdateConnected()
		{
		}

		[Token(Token = "0x6002AC2")]
		[Address(RVA = "0xFF8A34", Offset = "0xFF8A34", VA = "0xFF8A34", Slot = "5")]
		public override void Follow(float amount, float minLimit, float maxLimit)
		{
		}

		[Token(Token = "0x6002AC3")]
		[Address(RVA = "0xFF8C04", Offset = "0xFF8C04", VA = "0xFF8C04")]
		public ConnectedRotator()
		{
		}
	}
	[Token(Token = "0x200085E")]
	public class ConnectedSlider : ConnectedInteractables
	{
		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HVRPhysicsDrawer physicsDrawer;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isMinMaxSet;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _minPosition;

		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _maxPosition;

		[Token(Token = "0x6002AC4")]
		[Address(RVA = "0xFF8C14", Offset = "0xFF8C14", VA = "0xFF8C14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002AC5")]
		[Address(RVA = "0xFF8CCC", Offset = "0xFF8CCC", VA = "0xFF8CCC")]
		private void SetupPositions()
		{
		}

		[Token(Token = "0x6002AC6")]
		[Address(RVA = "0xFF8D94", Offset = "0xFF8D94", VA = "0xFF8D94")]
		private float GetDistance()
		{
			return default(float);
		}

		[Token(Token = "0x6002AC7")]
		[Address(RVA = "0xFF8E94", Offset = "0xFF8E94", VA = "0xFF8E94", Slot = "4")]
		protected override void UpdateConnected()
		{
		}

		[Token(Token = "0x6002AC8")]
		[Address(RVA = "0xFF8F8C", Offset = "0xFF8F8C", VA = "0xFF8F8C", Slot = "5")]
		public override void Follow(float amount, float minLimit, float maxLimit)
		{
		}

		[Token(Token = "0x6002AC9")]
		[Address(RVA = "0xFF9070", Offset = "0xFF9070", VA = "0xFF9070")]
		public ConnectedSlider()
		{
		}
	}
	[Token(Token = "0x200085F")]
	public class MT_BoundHand : MT_Interactable, Controls.IBoundHandsActions
	{
		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private bool _isRightHand;

		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private Transform _handBoundTransform;

		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private Transform _handBoundParentTransform;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private float _minRotX;

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[SerializeField]
		private float _maxRotX;

		[Token(Token = "0x4002379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private float _minRotY;

		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[SerializeField]
		private float _maxRotY;

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private float _minRotZ;

		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[SerializeField]
		private float _maxRotZ;

		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private MT_GrabJournalController _grabJournalController;

		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private MT_HandInteractor _handInteractor;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private MT_HandHaptics _handHaptics;

		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private bool _hasGrabbed;

		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x229")]
		private bool _shouldDrop;

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Controls _controls;

		[Token(Token = "0x6002ACA")]
		[Address(RVA = "0x11279F4", Offset = "0x11279F4", VA = "0x11279F4", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002ACB")]
		[Address(RVA = "0x1127BE4", Offset = "0x1127BE4", VA = "0x1127BE4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002ACC")]
		[Address(RVA = "0x1127D74", Offset = "0x1127D74", VA = "0x1127D74")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002ACD")]
		[Address(RVA = "0x1127EB4", Offset = "0x1127EB4", VA = "0x1127EB4")]
		private void OnHandGesture(MT_PlayerEvents.Gesture gesture, HandType handType, float strength)
		{
		}

		[Token(Token = "0x6002ACE")]
		[Address(RVA = "0x1127EEC", Offset = "0x1127EEC", VA = "0x1127EEC", Slot = "18")]
		public override void Grab(MT_HandInteractor handInteractor)
		{
		}

		[Token(Token = "0x6002ACF")]
		[Address(RVA = "0x1127F08", Offset = "0x1127F08", VA = "0x1127F08", Slot = "19")]
		public override void Drop(MT_HandInteractor handInteractor)
		{
		}

		[Token(Token = "0x6002AD0")]
		[Address(RVA = "0x1127F1C", Offset = "0x1127F1C", VA = "0x1127F1C")]
		public void UnbindHand()
		{
		}

		[Token(Token = "0x6002AD1")]
		[Address(RVA = "0x1127F6C", Offset = "0x1127F6C", VA = "0x1127F6C", Slot = "26")]
		public void OnRightHandRotate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002AD2")]
		[Address(RVA = "0x11280C4", Offset = "0x11280C4", VA = "0x11280C4", Slot = "25")]
		public void OnLeftHandRotate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6002AD3")]
		[Address(RVA = "0x1127FD8", Offset = "0x1127FD8", VA = "0x1127FD8")]
		private void SetHandBoundRotation(Quaternion value)
		{
		}

		[Token(Token = "0x6002AD4")]
		[Address(RVA = "0x1128130", Offset = "0x1128130", VA = "0x1128130")]
		private static float SignedAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6002AD5")]
		[Address(RVA = "0x1128150", Offset = "0x1128150", VA = "0x1128150")]
		public MT_BoundHand()
		{
		}
	}
	[Token(Token = "0x2000860")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE76254", Offset = "0xE76254")]
	public class MT_Button : MonoBehaviour, IHoverable, ITaggable
	{
		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string objectTag;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int priority;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool hasUniqueHoverPose;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE88244", Offset = "0xE88244")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88244", Offset = "0xE88244")]
		private float pressDistance;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88294", Offset = "0xE88294")]
		private float speedFactor;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE882D4", Offset = "0xE882D4")]
		[SerializeField]
		private bool resetButtonPos;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8830C", Offset = "0xE8830C")]
		private float resetSpeed;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE88350", Offset = "0xE88350")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88350", Offset = "0xE88350")]
		private float pressEventPercentage;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent onButtonPressed;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent onHoverEnter;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onHoverExit;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 _startPos;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _currentInteractor;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _lastInteractorPos;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool _isPressing;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool _prevPressState;

		[Token(Token = "0x4002393")]
		private const float PressedThreshold = 0.01f;

		[Token(Token = "0x6002AD6")]
		[Address(RVA = "0x1128158", Offset = "0x1128158", VA = "0x1128158")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002AD7")]
		[Address(RVA = "0x1128194", Offset = "0x1128194", VA = "0x1128194")]
		private void Update()
		{
		}

		[Token(Token = "0x6002AD8")]
		[Address(RVA = "0x11281C4", Offset = "0x11281C4", VA = "0x11281C4")]
		private void PressButton()
		{
		}

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0x1128330", Offset = "0x1128330", VA = "0x1128330")]
		private void SetButtonPosition(float pos)
		{
		}

		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0x1128288", Offset = "0x1128288", VA = "0x1128288")]
		private void CheckPressEvent()
		{
		}

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0x11283BC", Offset = "0x11283BC", VA = "0x11283BC")]
		private bool IsPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ADC")]
		[Address(RVA = "0x1128478", Offset = "0x1128478", VA = "0x1128478")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002ADD")]
		[Address(RVA = "0x11284EC", Offset = "0x11284EC", VA = "0x11284EC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002ADE")]
		[Address(RVA = "0x1128548", Offset = "0x1128548", VA = "0x1128548")]
		private void ResetButtonPosition()
		{
		}

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0x11285C8", Offset = "0x11285C8", VA = "0x11285C8", Slot = "4")]
		public UnityEvent GetHoverEnter()
		{
			return null;
		}

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0x11285D0", Offset = "0x11285D0", VA = "0x11285D0", Slot = "5")]
		public UnityEvent GetHoverExit()
		{
			return null;
		}

		[Token(Token = "0x6002AE1")]
		[Address(RVA = "0x11284D8", Offset = "0x11284D8", VA = "0x11284D8", Slot = "6")]
		public void InvokeHoverEnter()
		{
		}

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0x11285B4", Offset = "0x11285B4", VA = "0x11285B4", Slot = "7")]
		public void InvokeHoverExit()
		{
		}

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0x11285D8", Offset = "0x11285D8", VA = "0x11285D8", Slot = "8")]
		public int GetPriority()
		{
			return default(int);
		}

		[Token(Token = "0x6002AE4")]
		[Address(RVA = "0x11285E0", Offset = "0x11285E0", VA = "0x11285E0", Slot = "9")]
		public bool HasUniqueHoverPose()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE5")]
		[Address(RVA = "0x11285E8", Offset = "0x11285E8", VA = "0x11285E8", Slot = "10")]
		public string ObjectTag()
		{
			return null;
		}

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0x11285F0", Offset = "0x11285F0", VA = "0x11285F0")]
		public MT_Button()
		{
		}
	}
	[Token(Token = "0x2000861")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE7628C", Offset = "0xE7628C")]
	public class MT_Dial : MT_Interactable
	{
		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private bool hasLimits;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE883C4", Offset = "0xE883C4")]
		private float maxLimit;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88408", Offset = "0xE88408")]
		private float minLimit;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8844C", Offset = "0xE8844C")]
		private float angleEventThreshold;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE8848C", Offset = "0xE8848C")]
		[SerializeField]
		private AngleEvent[] angleEvents;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private RotationEvent[] rotationEvents;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Vector3 _localRotationAxis;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private Vector3 _localAxisStart;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Vector3 _originalVector;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Vector3 _previousUp;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Vector3 _prevRot;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private Vector3 _upAxis;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[HideInInspector]
		public float _cumulativeRotation;

		[Token(Token = "0x6002AE7")]
		[Address(RVA = "0x1134D54", Offset = "0x1134D54", VA = "0x1134D54", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002AE8")]
		[Address(RVA = "0x1134DF4", Offset = "0x1134DF4", VA = "0x1134DF4", Slot = "22")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002AE9")]
		[Address(RVA = "0x11354C0", Offset = "0x11354C0", VA = "0x11354C0", Slot = "21")]
		protected override void OnGrab()
		{
		}

		[Token(Token = "0x6002AEA")]
		[Address(RVA = "0x1134E60", Offset = "0x1134E60", VA = "0x1134E60")]
		private void UpdateRotation()
		{
		}

		[Token(Token = "0x6002AEB")]
		[Address(RVA = "0x113516C", Offset = "0x113516C", VA = "0x113516C")]
		private void ClampRotation()
		{
		}

		[Token(Token = "0x6002AEC")]
		[Address(RVA = "0x11351CC", Offset = "0x11351CC", VA = "0x11351CC")]
		private void UpdateConnectedFollow()
		{
		}

		[Token(Token = "0x6002AED")]
		[Address(RVA = "0x11352F8", Offset = "0x11352F8", VA = "0x11352F8")]
		private void CheckRotationEvents()
		{
		}

		[Token(Token = "0x6002AEE")]
		[Address(RVA = "0x113509C", Offset = "0x113509C", VA = "0x113509C")]
		private void UpdateCumulativeRot()
		{
		}

		[Token(Token = "0x6002AEF")]
		[Address(RVA = "0x11353D8", Offset = "0x11353D8", VA = "0x11353D8")]
		private void CheckAngleEvents()
		{
		}

		[Token(Token = "0x6002AF0")]
		[Address(RVA = "0x1135568", Offset = "0x1135568", VA = "0x1135568")]
		private bool IsAngleReached(AngleEvent evt)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF1")]
		[Address(RVA = "0x1135618", Offset = "0x1135618", VA = "0x1135618")]
		private float GetRealAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6002AF2")]
		[Address(RVA = "0x1135674", Offset = "0x1135674", VA = "0x1135674", Slot = "24")]
		public override void Follow(float velocity, float maxFollowLimit, float minLimit)
		{
		}

		[Token(Token = "0x6002AF3")]
		[Address(RVA = "0x1135684", Offset = "0x1135684", VA = "0x1135684")]
		private void SetRotation(float velocity, float maxFollowLimit, float minFollowLimit)
		{
		}

		[Token(Token = "0x6002AF4")]
		[Address(RVA = "0x11357A0", Offset = "0x11357A0", VA = "0x11357A0")]
		public MT_Dial()
		{
		}
	}
	[Token(Token = "0x2000862")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE762C4", Offset = "0xE762C4")]
	public class MT_Interactable : MT_ObjectInteractionBase
	{
		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE884E4", Offset = "0xE884E4")]
		[SerializeField]
		private Transform attachTransform;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8851C", Offset = "0xE8851C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE8851C", Offset = "0xE8851C")]
		private float releaseDistance;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8856C", Offset = "0xE8856C")]
		protected float speedFactor;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE885B0", Offset = "0xE885B0")]
		[SerializeField]
		protected bool isLocked;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE885E8", Offset = "0xE885E8")]
		[SerializeField]
		protected List<MT_Interactable> connectedInteractables;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88620", Offset = "0xE88620")]
		public float followPercentage;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		protected bool isInverted;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private UnityEvent onForceRelease;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private UnityEvent onLock;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private HandType _currentHandType;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private MT_HandInteractor _currentInteractor;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Transform _currentHandInteractorTransform;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private HandType _secondaryHandType;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private MT_HandInteractor _secondaryHandInteractor;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Transform _secondaryHandModelSceneParent;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Vector3 _mainHandModelStartPos;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private Vector3 _mainHandModelStartRot;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Vector3 _secondaryHandModelStartPos;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private Vector3 _secondaryHandModelStartRot;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private GameObject _equivalentGrabbable;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float _startSpeedFactor;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private MT_HandInteractor _cachedHandInteractor;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Coroutine _waitToResetHand;

		[Token(Token = "0x1400004D")]
		public event Action<string, bool> OnTargetAngleReached
		{
			[Token(Token = "0x6002AF5")]
			[Address(RVA = "0x124B908", Offset = "0x124B908", VA = "0x124B908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE99E54", Offset = "0xE99E54")]
			add
			{
			}
			[Token(Token = "0x6002AF6")]
			[Address(RVA = "0x124B9AC", Offset = "0x124B9AC", VA = "0x124B9AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE99E64", Offset = "0xE99E64")]
			remove
			{
			}
		}

		[Token(Token = "0x6002AF7")]
		[Address(RVA = "0x124BA50", Offset = "0x124BA50", VA = "0x124BA50", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0x124BA7C", Offset = "0x124BA7C", VA = "0x124BA7C", Slot = "22")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002AF9")]
		[Address(RVA = "0x124BEC8", Offset = "0x124BEC8", VA = "0x124BEC8")]
		protected void InvokeOnTargetAngleReached(bool isInRange)
		{
		}

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0x124BF68", Offset = "0x124BF68", VA = "0x124BF68", Slot = "23")]
		public virtual Vector2 GetTargetAngleRange()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002AFB")]
		[Address(RVA = "0x124BF70", Offset = "0x124BF70", VA = "0x124BF70")]
		public float GetActiveAxisAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0x124BFF8", Offset = "0x124BFF8", VA = "0x124BFF8", Slot = "18")]
		public override void Grab(MT_HandInteractor handInteractor)
		{
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0x124C444", Offset = "0x124C444", VA = "0x124C444", Slot = "19")]
		public override void Drop(MT_HandInteractor handInteractor)
		{
		}

		[Token(Token = "0x6002AFE")]
		[Address(RVA = "0x124C2B8", Offset = "0x124C2B8", VA = "0x124C2B8")]
		private void SetUpHandAttach()
		{
		}

		[Token(Token = "0x6002AFF")]
		[Address(RVA = "0x124BAB8", Offset = "0x124BAB8", VA = "0x124BAB8")]
		private bool IsForceRelease()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B00")]
		[Address(RVA = "0x124C708", Offset = "0x124C708", VA = "0x124C708")]
		private void ResetHandPosition(Transform parent, Transform handModelTransform, Vector3 startPos, Vector3 startRot)
		{
		}

		[Token(Token = "0x6002B01")]
		[Address(RVA = "0x124C848", Offset = "0x124C848", VA = "0x124C848")]
		public void SetEquivalentGrabbable(GameObject obj)
		{
		}

		[Token(Token = "0x6002B02")]
		[Address(RVA = "0x124C858", Offset = "0x124C858", VA = "0x124C858", Slot = "24")]
		public virtual void Follow(float velocity, float maxLimit, float minLimit)
		{
		}

		[Token(Token = "0x6002B03")]
		[Address(RVA = "0x124C85C", Offset = "0x124C85C", VA = "0x124C85C")]
		[PublicAPI]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE99E74", Offset = "0xE99E74")]
		public void SetLockedState(bool setLocked)
		{
		}

		[Token(Token = "0x6002B04")]
		[Address(RVA = "0x124C91C", Offset = "0x124C91C", VA = "0x124C91C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE99EB4", Offset = "0xE99EB4")]
		[PublicAPI]
		public void SetFollowPercentage(float newPercentage)
		{
		}

		[Token(Token = "0x6002B05")]
		[Address(RVA = "0x124C924", Offset = "0x124C924", VA = "0x124C924")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE99EF4", Offset = "0xE99EF4")]
		[PublicAPI]
		public void SetSpeedFactor(float newValue)
		{
		}

		[Token(Token = "0x6002B06")]
		[Address(RVA = "0x124C92C", Offset = "0x124C92C", VA = "0x124C92C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE99F34", Offset = "0xE99F34")]
		[PublicAPI]
		public void ResetSpeedFactor()
		{
		}

		[Token(Token = "0x6002B07")]
		[Address(RVA = "0x124BB3C", Offset = "0x124BB3C", VA = "0x124BB3C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE99F74", Offset = "0xE99F74")]
		[PublicAPI]
		public void ForceRelease()
		{
		}

		[Token(Token = "0x6002B08")]
		[Address(RVA = "0x124C938", Offset = "0x124C938", VA = "0x124C938")]
		public MT_Interactable()
		{
		}
	}
	[Token(Token = "0x2000863")]
	public class MT_InteractableSqueezable : MonoBehaviour, ISqueezable
	{
		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent onPressed;

		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onReleased;

		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HVRGrabbable _hvrGrabbable;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isPressed;

		[Token(Token = "0x1700046B")]
		public bool IsPressed
		{
			[Token(Token = "0x6002B09")]
			[Address(RVA = "0x124CFCC", Offset = "0x124CFCC", VA = "0x124CFCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002B0A")]
		[Address(RVA = "0x124CFD4", Offset = "0x124CFD4", VA = "0x124CFD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002B0B")]
		[Address(RVA = "0x124D030", Offset = "0x124D030", VA = "0x124D030")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002B0C")]
		[Address(RVA = "0x124D12C", Offset = "0x124D12C", VA = "0x124D12C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002B0D")]
		[Address(RVA = "0x124D228", Offset = "0x124D228", VA = "0x124D228", Slot = "4")]
		public void Squeeze(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
		{
		}

		[Token(Token = "0x6002B0E")]
		[Address(RVA = "0x124D248", Offset = "0x124D248", VA = "0x124D248", Slot = "5")]
		public void Release(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
		{
		}

		[Token(Token = "0x6002B0F")]
		[Address(RVA = "0x124D264", Offset = "0x124D264", VA = "0x124D264")]
		public MT_InteractableSqueezable()
		{
		}
	}
	[Token(Token = "0x2000864")]
	public class MT_InteractableSwitchable : MonoBehaviour, IUsable
	{
		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE886A0", Offset = "0xE886A0")]
		private bool startOn;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onToggleOn;

		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onToggleOff;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent onReleaseTrigger;

		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _currentValue;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MT_Interactable _interactable;

		[Token(Token = "0x1700046C")]
		public bool IsOn
		{
			[Token(Token = "0x6002B10")]
			[Address(RVA = "0x124D26C", Offset = "0x124D26C", VA = "0x124D26C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002B11")]
		[Address(RVA = "0x124D274", Offset = "0x124D274", VA = "0x124D274")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002B12")]
		[Address(RVA = "0x124D2D0", Offset = "0x124D2D0", VA = "0x124D2D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002B13")]
		[Address(RVA = "0x124D31C", Offset = "0x124D31C", VA = "0x124D31C", Slot = "4")]
		public void Use()
		{
		}

		[Token(Token = "0x6002B14")]
		[Address(RVA = "0x124D340", Offset = "0x124D340", VA = "0x124D340", Slot = "5")]
		public void ReleaseTrigger()
		{
		}

		[Token(Token = "0x6002B15")]
		[Address(RVA = "0x124D2E0", Offset = "0x124D2E0", VA = "0x124D2E0")]
		[PublicAPI]
		public void Toggle()
		{
		}

		[Token(Token = "0x6002B16")]
		[Address(RVA = "0x124D370", Offset = "0x124D370", VA = "0x124D370")]
		[PublicAPI]
		public void ToggleOn()
		{
		}

		[Token(Token = "0x6002B17")]
		[Address(RVA = "0x124D390", Offset = "0x124D390", VA = "0x124D390")]
		[PublicAPI]
		public void ToggleOff()
		{
		}

		[Token(Token = "0x6002B18")]
		[Address(RVA = "0x124D3AC", Offset = "0x124D3AC", VA = "0x124D3AC")]
		public MT_InteractableSwitchable()
		{
		}
	}
	[Token(Token = "0x2000865")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE762FC", Offset = "0xE762FC")]
	public class MT_PhysicsButton : MonoBehaviour, IHoverable, ITaggable
	{
		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string objectTag;

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int priority;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool hasUniqueHoverPose;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88738", Offset = "0xE88738")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE88738", Offset = "0xE88738")]
		private float buttonPressDistance;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88788", Offset = "0xE88788")]
		private float buttonPressBounciness;

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE887CC", Offset = "0xE887CC")]
		private float slerpVelocity;

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88810", Offset = "0xE88810")]
		private float slerpSpring;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88854", Offset = "0xE88854")]
		private float slerpDamper;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88898", Offset = "0xE88898")]
		private float slerpForce;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE888DC", Offset = "0xE888DC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE888DC", Offset = "0xE888DC")]
		private float pressEventPercentage;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent onButtonPressed;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onHoverEnter;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onHoverExit;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ConfigurableJoint _joint;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isPressing;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _buttonMinHeight;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _buttonMaxHeight;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _prevPressState;

		[Token(Token = "0x40023D5")]
		private const float PressedThreshold = 0.01f;

		[Token(Token = "0x6002B19")]
		[Address(RVA = "0x1327470", Offset = "0x1327470", VA = "0x1327470")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002B1A")]
		[Address(RVA = "0x13274DC", Offset = "0x13274DC", VA = "0x13274DC")]
		private void SetUpJoint()
		{
		}

		[Token(Token = "0x6002B1B")]
		[Address(RVA = "0x1327698", Offset = "0x1327698", VA = "0x1327698")]
		private void Update()
		{
		}

		[Token(Token = "0x6002B1C")]
		[Address(RVA = "0x1327750", Offset = "0x1327750", VA = "0x1327750")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002B1D")]
		[Address(RVA = "0x132786C", Offset = "0x132786C", VA = "0x132786C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002B1E")]
		[Address(RVA = "0x13278A0", Offset = "0x13278A0", VA = "0x13278A0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002B1F")]
		[Address(RVA = "0x1327600", Offset = "0x1327600", VA = "0x1327600")]
		private void SetMinMaxButtonHeight()
		{
		}

		[Token(Token = "0x6002B20")]
		[Address(RVA = "0x13276A8", Offset = "0x13276A8", VA = "0x13276A8")]
		private void PressButton()
		{
		}

		[Token(Token = "0x6002B21")]
		[Address(RVA = "0x13278D4", Offset = "0x13278D4", VA = "0x13278D4")]
		private bool IsPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B22")]
		[Address(RVA = "0x1327990", Offset = "0x1327990", VA = "0x1327990", Slot = "4")]
		public UnityEvent GetHoverEnter()
		{
			return null;
		}

		[Token(Token = "0x6002B23")]
		[Address(RVA = "0x1327998", Offset = "0x1327998", VA = "0x1327998", Slot = "5")]
		public UnityEvent GetHoverExit()
		{
			return null;
		}

		[Token(Token = "0x6002B24")]
		[Address(RVA = "0x132788C", Offset = "0x132788C", VA = "0x132788C", Slot = "6")]
		public void InvokeHoverEnter()
		{
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0x13278C0", Offset = "0x13278C0", VA = "0x13278C0", Slot = "7")]
		public void InvokeHoverExit()
		{
		}

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0x13279A0", Offset = "0x13279A0", VA = "0x13279A0", Slot = "8")]
		public int GetPriority()
		{
			return default(int);
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0x13279A8", Offset = "0x13279A8", VA = "0x13279A8", Slot = "9")]
		public bool HasUniqueHoverPose()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B28")]
		[Address(RVA = "0x13279B0", Offset = "0x13279B0", VA = "0x13279B0", Slot = "10")]
		public string ObjectTag()
		{
			return null;
		}

		[Token(Token = "0x6002B29")]
		[Address(RVA = "0x13279B8", Offset = "0x13279B8", VA = "0x13279B8")]
		public MT_PhysicsButton()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000866")]
	public class RotationEvent
	{
		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool playOnce;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rotation;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onRotationReached;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool hasPlayed;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		public bool hasPlayedOnce;

		[Token(Token = "0x6002B2A")]
		[Address(RVA = "0x32CBF40", Offset = "0x32CBF40", VA = "0x32CBF40")]
		public RotationEvent()
		{
		}
	}
	[Token(Token = "0x2000867")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE76334", Offset = "0xE76334")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE76334", Offset = "0xE76334")]
	public class MT_PhysicsDial : MT_Interactable
	{
		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private bool useGravity;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE88970", Offset = "0xE88970")]
		[SerializeField]
		private bool isFreeSpin;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE889A8", Offset = "0xE889A8")]
		private float rotationFactor;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private bool hasLimits;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE889FC", Offset = "0xE889FC")]
		private float maxLimit;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88A40", Offset = "0xE88A40")]
		private float minLimit;

		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88A84", Offset = "0xE88A84")]
		private float angleEventThreshold;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE88AC4", Offset = "0xE88AC4")]
		[SerializeField]
		private AngleEvent[] angleEvents;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private RotationEvent[] rotationEvents;

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private ConfigurableJoint _joint;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Vector3 _localRotationAxis;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private Vector3 _localAxisStart;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Vector3 _originalVector;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		private Vector3 _previousUp;

		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private Vector3 _prevRot;

		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private float _deltaAngleNormalized;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Vector3 _upAxis;

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		[HideInInspector]
		public float _cumulativeRotation;

		[Token(Token = "0x6002B2B")]
		[Address(RVA = "0x13279C8", Offset = "0x13279C8", VA = "0x13279C8", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002B2C")]
		[Address(RVA = "0x1327B78", Offset = "0x1327B78", VA = "0x1327B78", Slot = "22")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002B2D")]
		[Address(RVA = "0x13283D0", Offset = "0x13283D0", VA = "0x13283D0", Slot = "21")]
		protected override void OnGrab()
		{
		}

		[Token(Token = "0x6002B2E")]
		[Address(RVA = "0x1328488", Offset = "0x1328488", VA = "0x1328488", Slot = "20")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x6002B2F")]
		[Address(RVA = "0x1327C04", Offset = "0x1327C04", VA = "0x1327C04")]
		private void UpdateRotation()
		{
		}

		[Token(Token = "0x6002B30")]
		[Address(RVA = "0x1327ECC", Offset = "0x1327ECC", VA = "0x1327ECC")]
		private void ClampAngle()
		{
		}

		[Token(Token = "0x6002B31")]
		[Address(RVA = "0x132800C", Offset = "0x132800C", VA = "0x132800C")]
		private void UpdateConnectedFollow()
		{
		}

		[Token(Token = "0x6002B32")]
		[Address(RVA = "0x1328208", Offset = "0x1328208", VA = "0x1328208")]
		private void CheckRotationEvents()
		{
		}

		[Token(Token = "0x6002B33")]
		[Address(RVA = "0x1328138", Offset = "0x1328138", VA = "0x1328138")]
		private void UpdateCumulativeRot()
		{
		}

		[Token(Token = "0x6002B34")]
		[Address(RVA = "0x13282E8", Offset = "0x13282E8", VA = "0x13282E8")]
		private void CheckAngleEvents()
		{
		}

		[Token(Token = "0x6002B35")]
		[Address(RVA = "0x13284D8", Offset = "0x13284D8", VA = "0x13284D8")]
		private bool IsAngleReached(AngleEvent evt)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B36")]
		[Address(RVA = "0x1328588", Offset = "0x1328588", VA = "0x1328588")]
		private float GetRealAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6002B37")]
		[Address(RVA = "0x13285E4", Offset = "0x13285E4", VA = "0x13285E4", Slot = "24")]
		public override void Follow(float velocity, float maxFollowLimit, float minLimit)
		{
		}

		[Token(Token = "0x6002B38")]
		[Address(RVA = "0x13285F4", Offset = "0x13285F4", VA = "0x13285F4")]
		private void SetRotation(float velocity, float maxFollowLimit, float minFollowLimit)
		{
		}

		[Token(Token = "0x6002B39")]
		[Address(RVA = "0x13286B4", Offset = "0x13286B4", VA = "0x13286B4")]
		public MT_PhysicsDial()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000868")]
	public class AngleEvent
	{
		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool ifGrabbed;

		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool playOnce;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88B1C", Offset = "0xE88B1C")]
		public float angleThresholdMin;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88B3C", Offset = "0xE88B3C")]
		public float angleThresholdMax;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onAngleReached;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool hasPlayed;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[HideInInspector]
		public bool hasPlayedOnce;

		[Token(Token = "0x6002B3A")]
		[Address(RVA = "0x13BF0D0", Offset = "0x13BF0D0", VA = "0x13BF0D0")]
		public AngleEvent()
		{
		}
	}
	[Token(Token = "0x2000869")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE763B8", Offset = "0xE763B8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE763B8", Offset = "0xE763B8")]
	public class MT_PhysicsRotator : MT_Interactable
	{
		[Token(Token = "0x200086A")]
		private enum RotatorAxis
		{
			[Token(Token = "0x4002414")]
			X,
			[Token(Token = "0x4002415")]
			Y,
			[Token(Token = "0x4002416")]
			Z
		}

		[Token(Token = "0x200086B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7643C", Offset = "0xE7643C")]
		private sealed class <>c__DisplayClass49_0
		{
			[Token(Token = "0x4002417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_PhysicsRotator <>4__this;

			[Token(Token = "0x4002418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool setLocked;

			[Token(Token = "0x6002B51")]
			[Address(RVA = "0x32B74F8", Offset = "0x32B74F8", VA = "0x32B74F8")]
			public <>c__DisplayClass49_0()
			{
			}

			[Token(Token = "0x6002B52")]
			[Address(RVA = "0x32B7500", Offset = "0x32B7500", VA = "0x32B7500")]
			internal void <GoToMaxAngle>b__0()
			{
			}
		}

		[Token(Token = "0x200086C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7644C", Offset = "0xE7644C")]
		private sealed class <>c__DisplayClass50_0
		{
			[Token(Token = "0x4002419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_PhysicsRotator <>4__this;

			[Token(Token = "0x400241A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool setLocked;

			[Token(Token = "0x6002B53")]
			[Address(RVA = "0x32B7538", Offset = "0x32B7538", VA = "0x32B7538")]
			public <>c__DisplayClass50_0()
			{
			}

			[Token(Token = "0x6002B54")]
			[Address(RVA = "0x32B7540", Offset = "0x32B7540", VA = "0x32B7540")]
			internal void <GoToMinAngle>b__0()
			{
			}
		}

		[Token(Token = "0x200086D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7645C", Offset = "0xE7645C")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x400241B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MT_PhysicsRotator <>4__this;

			[Token(Token = "0x400241C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool setLocked;

			[Token(Token = "0x6002B55")]
			[Address(RVA = "0x32B7578", Offset = "0x32B7578", VA = "0x32B7578")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x6002B56")]
			[Address(RVA = "0x32B7580", Offset = "0x32B7580", VA = "0x32B7580")]
			internal void <ResetAngle>b__0()
			{
			}
		}

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private bool useGravity;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE88B8C", Offset = "0xE88B8C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88B8C", Offset = "0xE88B8C")]
		private float minAngle;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88BE0", Offset = "0xE88BE0")]
		private float maxAngle;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88C24", Offset = "0xE88C24")]
		private float spring;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88C68", Offset = "0xE88C68")]
		private float damper;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88CAC", Offset = "0xE88CAC")]
		private float slerpSpring;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88CF0", Offset = "0xE88CF0")]
		private float slerpDumper;

		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88D34", Offset = "0xE88D34")]
		private float slerpForce;

		[Token(Token = "0x40023FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE88D78", Offset = "0xE88D78")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88D78", Offset = "0xE88D78")]
		private float goToAngleDuration;

		[Token(Token = "0x40023FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE88DC8", Offset = "0xE88DC8")]
		[SerializeField]
		private RotatorAxis handMovementAxis;

		[Token(Token = "0x40023FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE88E00", Offset = "0xE88E00")]
		[SerializeField]
		private RotatorAxis rotatorAxis;

		[Token(Token = "0x40023FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88E4C", Offset = "0xE88E4C")]
		private float angleEventThreshold;

		[Token(Token = "0x4002400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE88E8C", Offset = "0xE88E8C")]
		[SerializeField]
		private AngleEvent[] angleEvents;

		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public bool playOnceMinAngle;

		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public UnityEvent onMinAngleReached;

		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public bool playOnceMaxAngle;

		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public UnityEvent onMaxAngleReached;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private UnityEvent onLatching;

		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public bool isSqueaky;

		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x241")]
		public bool isMoving;

		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private ConfigurableJoint _joint;

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Vector3 _lastHandInteractorPos;

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private bool _firstSetUp;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25D")]
		private bool _isMinAngleReached;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25E")]
		private bool _isMaxAngleReached;

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25F")]
		private bool _hasPlayedOnceMaxEvent;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private bool _hasPlayedOnceMinEvent;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private float _positionSpring;

		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private float _positionDamper;

		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private float _maxForce;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private DG.Tweening.Sequence _goToAngleTween;

		[Token(Token = "0x6002B3B")]
		[Address(RVA = "0x13286DC", Offset = "0x13286DC", VA = "0x13286DC", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002B3C")]
		[Address(RVA = "0x1328AC0", Offset = "0x1328AC0", VA = "0x1328AC0")]
		public void SetLocked(bool locked)
		{
		}

		[Token(Token = "0x6002B3D")]
		[Address(RVA = "0x13288C0", Offset = "0x13288C0", VA = "0x13288C0")]
		private void SetUpJoint()
		{
		}

		[Token(Token = "0x6002B3E")]
		[Address(RVA = "0x1328ACC", Offset = "0x1328ACC", VA = "0x1328ACC", Slot = "22")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002B3F")]
		[Address(RVA = "0x13292A4", Offset = "0x13292A4", VA = "0x13292A4", Slot = "23")]
		public override Vector2 GetTargetAngleRange()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002B40")]
		[Address(RVA = "0x13292FC", Offset = "0x13292FC", VA = "0x13292FC", Slot = "21")]
		protected override void OnGrab()
		{
		}

		[Token(Token = "0x6002B41")]
		[Address(RVA = "0x13293AC", Offset = "0x13293AC", VA = "0x13293AC", Slot = "20")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x6002B42")]
		[Address(RVA = "0x1328CC4", Offset = "0x1328CC4", VA = "0x1328CC4")]
		private void UpdateAngularVelocity()
		{
		}

		[Token(Token = "0x6002B43")]
		[Address(RVA = "0x1328F74", Offset = "0x1328F74", VA = "0x1328F74")]
		private void UpdateConnectedFollow()
		{
		}

		[Token(Token = "0x6002B44")]
		[Address(RVA = "0x13291EC", Offset = "0x13291EC", VA = "0x13291EC")]
		private void CheckForMaxMinAngleEvents()
		{
		}

		[Token(Token = "0x6002B45")]
		[Address(RVA = "0x1329480", Offset = "0x1329480", VA = "0x1329480")]
		private bool IsAngleReached(bool isMaxAngle)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B46")]
		[Address(RVA = "0x1328BBC", Offset = "0x1328BBC", VA = "0x1328BBC")]
		private void CheckAngleEvents()
		{
		}

		[Token(Token = "0x6002B47")]
		[Address(RVA = "0x13295D8", Offset = "0x13295D8", VA = "0x13295D8")]
		private bool IsAngleReached(AngleEvent evt)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B48")]
		[Address(RVA = "0x1329424", Offset = "0x1329424", VA = "0x1329424")]
		private float GetRealAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6002B49")]
		[Address(RVA = "0x13296F4", Offset = "0x13296F4", VA = "0x13296F4", Slot = "24")]
		public override void Follow(float velocity, float maxLimit, float minLimit)
		{
		}

		[Token(Token = "0x6002B4A")]
		[Address(RVA = "0x1329704", Offset = "0x1329704", VA = "0x1329704")]
		private void SetRotation(float velocity, float maxLimit, float minLimit)
		{
		}

		[Token(Token = "0x6002B4B")]
		[Address(RVA = "0x13298D4", Offset = "0x13298D4", VA = "0x13298D4")]
		public float GetCurrentAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0x132999C", Offset = "0x132999C", VA = "0x132999C")]
		[PublicAPI]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE99FE4", Offset = "0xE99FE4")]
		public void GoToMaxAngle(bool setLocked)
		{
		}

		[Token(Token = "0x6002B4D")]
		[Address(RVA = "0x1329C10", Offset = "0x1329C10", VA = "0x1329C10")]
		[PublicAPI]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE9A024", Offset = "0xE9A024")]
		public void GoToMinAngle(bool setLocked)
		{
		}

		[Token(Token = "0x6002B4E")]
		[Address(RVA = "0x1329E3C", Offset = "0x1329E3C", VA = "0x1329E3C")]
		[PublicAPI]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE9A064", Offset = "0xE9A064")]
		public void ResetAngle(bool setLocked)
		{
		}

		[Token(Token = "0x6002B4F")]
		[Address(RVA = "0x1329FF4", Offset = "0x1329FF4", VA = "0x1329FF4")]
		[PublicAPI]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE9A0A4", Offset = "0xE9A0A4")]
		public void SetGoToAngleSpeed(float speed)
		{
		}

		[Token(Token = "0x6002B50")]
		[Address(RVA = "0x1329FFC", Offset = "0x1329FFC", VA = "0x1329FFC")]
		public MT_PhysicsRotator()
		{
		}
	}
	[Token(Token = "0x200086E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE7646C", Offset = "0xE7646C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE7646C", Offset = "0xE7646C")]
	public class MT_PhysicsSlider : MT_Interactable
	{
		[Token(Token = "0x200086F")]
		private enum SliderAxis
		{
			[Token(Token = "0x4002435")]
			X,
			[Token(Token = "0x4002436")]
			Y,
			[Token(Token = "0x4002437")]
			Z
		}

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private bool useGravity;

		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE88EE4", Offset = "0xE88EE4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88EE4", Offset = "0xE88EE4")]
		private float connectedAnchorX;

		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88F34", Offset = "0xE88F34")]
		private float connectedAnchorY;

		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88F74", Offset = "0xE88F74")]
		private float connectedAnchorZ;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88FB4", Offset = "0xE88FB4")]
		private float sliderDistance;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE88FF4", Offset = "0xE88FF4")]
		private float sliderBounciness;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE89038", Offset = "0xE89038")]
		private float slerpVelocity;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8907C", Offset = "0xE8907C")]
		private float slerpSpring;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE890C0", Offset = "0xE890C0")]
		private float slerpDamper;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE89104", Offset = "0xE89104")]
		private float slerpForce;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE89148", Offset = "0xE89148")]
		[SerializeField]
		private SliderAxis handAxis;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private SliderEvent[] sliderEvents;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private UnityEvent onLatching;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE891A0", Offset = "0xE891A0")]
		public bool isSqueaky;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x221")]
		public bool isMoving;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private ConfigurableJoint _joint;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Vector3 _lastHandInteractorPos;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private Vector3 _sliderMinPosition;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private float _minLimit;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private float _maxLimit;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private float _sliderDistance;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		private float _currDistance;

		[Token(Token = "0x4002433")]
		private const int openPercentage = 2;

		[Token(Token = "0x6002B57")]
		[Address(RVA = "0x132A00C", Offset = "0x132A00C", VA = "0x132A00C", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002B58")]
		[Address(RVA = "0x132A13C", Offset = "0x132A13C", VA = "0x132A13C")]
		private void SetUpJoint()
		{
		}

		[Token(Token = "0x6002B59")]
		[Address(RVA = "0x132A338", Offset = "0x132A338", VA = "0x132A338", Slot = "22")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002B5A")]
		[Address(RVA = "0x132A790", Offset = "0x132A790", VA = "0x132A790", Slot = "21")]
		protected override void OnGrab()
		{
		}

		[Token(Token = "0x6002B5B")]
		[Address(RVA = "0x132A2A8", Offset = "0x132A2A8", VA = "0x132A2A8")]
		private void SetMinMaxSliderPos()
		{
		}

		[Token(Token = "0x6002B5C")]
		[Address(RVA = "0x132A3C0", Offset = "0x132A3C0", VA = "0x132A3C0")]
		private void UpdateVelocity()
		{
		}

		[Token(Token = "0x6002B5D")]
		[Address(RVA = "0x132A560", Offset = "0x132A560", VA = "0x132A560")]
		private void UpdateConnectedFollow()
		{
		}

		[Token(Token = "0x6002B5E")]
		[Address(RVA = "0x132A6A8", Offset = "0x132A6A8", VA = "0x132A6A8")]
		private void CheckSliderEvent()
		{
		}

		[Token(Token = "0x6002B5F")]
		[Address(RVA = "0x132A814", Offset = "0x132A814", VA = "0x132A814")]
		private bool IsPercentageReached(SliderEvent sliderEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B60")]
		[Address(RVA = "0x132A8D0", Offset = "0x132A8D0", VA = "0x132A8D0", Slot = "24")]
		public override void Follow(float velocity, float maxLimit, float minLimit)
		{
		}

		[Token(Token = "0x6002B61")]
		[Address(RVA = "0x132A8E0", Offset = "0x132A8E0", VA = "0x132A8E0")]
		private void SetSliderPosition(float position, float maxLimit, float minLimit)
		{
		}

		[Token(Token = "0x6002B62")]
		[Address(RVA = "0x132A9D8", Offset = "0x132A9D8", VA = "0x132A9D8")]
		public bool IsSlidingDoorOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B63")]
		[Address(RVA = "0x132AA84", Offset = "0x132AA84", VA = "0x132AA84")]
		public MT_PhysicsSlider()
		{
		}
	}
	[Token(Token = "0x2000870")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE764F0", Offset = "0xE764F0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE764F0", Offset = "0xE764F0")]
	public class MT_PhysicsWheel : MT_Interactable
	{
		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private bool useGravity;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE891C0", Offset = "0xE891C0")]
		[SerializeField]
		private bool hasLimits;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE891F8", Offset = "0xE891F8")]
		private float maxLimit;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8923C", Offset = "0xE8923C")]
		private float minLimit;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE89280", Offset = "0xE89280")]
		private float angleEventThreshold;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE892C0", Offset = "0xE892C0")]
		[SerializeField]
		private AngleEvent[] angleEvents;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private RotationEvent[] rotationEvents;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private ConfigurableJoint _joint;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Vector3 _lastHandInteractorPos;

		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private float _prevSign;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Vector3 _upAxis;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Vector3 _localRotationAxis;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private float _cumulativeRotation;

		[Token(Token = "0x4002445")]
		private const float YMovementThreshold = 0.0001f;

		[Token(Token = "0x4002446")]
		private const float ZMovementThreshold = 0.0001f;

		[Token(Token = "0x6002B64")]
		[Address(RVA = "0x132AA8C", Offset = "0x132AA8C", VA = "0x132AA8C", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002B65")]
		[Address(RVA = "0x132AC28", Offset = "0x132AC28", VA = "0x132AC28", Slot = "22")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002B66")]
		[Address(RVA = "0x132B5B0", Offset = "0x132B5B0", VA = "0x132B5B0", Slot = "23")]
		public override Vector2 GetTargetAngleRange()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002B67")]
		[Address(RVA = "0x132B610", Offset = "0x132B610", VA = "0x132B610", Slot = "21")]
		protected override void OnGrab()
		{
		}

		[Token(Token = "0x6002B68")]
		[Address(RVA = "0x132ACB4", Offset = "0x132ACB4", VA = "0x132ACB4")]
		private void UpdateAngularVelocity()
		{
		}

		[Token(Token = "0x6002B69")]
		[Address(RVA = "0x132B0E8", Offset = "0x132B0E8", VA = "0x132B0E8")]
		private void ClampAngle()
		{
		}

		[Token(Token = "0x6002B6A")]
		[Address(RVA = "0x132B1CC", Offset = "0x132B1CC", VA = "0x132B1CC")]
		private void UpdateCumulativeRot()
		{
		}

		[Token(Token = "0x6002B6B")]
		[Address(RVA = "0x132B3C8", Offset = "0x132B3C8", VA = "0x132B3C8")]
		private void CheckRotationEvents()
		{
		}

		[Token(Token = "0x6002B6C")]
		[Address(RVA = "0x132B4A8", Offset = "0x132B4A8", VA = "0x132B4A8")]
		private void CheckAngleEvents()
		{
		}

		[Token(Token = "0x6002B6D")]
		[Address(RVA = "0x132B678", Offset = "0x132B678", VA = "0x132B678")]
		private bool IsAngleReached(AngleEvent evt)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B6E")]
		[Address(RVA = "0x132B728", Offset = "0x132B728", VA = "0x132B728")]
		private float GetRealAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6002B6F")]
		[Address(RVA = "0x132B29C", Offset = "0x132B29C", VA = "0x132B29C")]
		private void UpdateConnectedFollow()
		{
		}

		[Token(Token = "0x6002B70")]
		[Address(RVA = "0x132B784", Offset = "0x132B784", VA = "0x132B784", Slot = "24")]
		public override void Follow(float velocity, float maxFollowLimit, float minLimit)
		{
		}

		[Token(Token = "0x6002B71")]
		[Address(RVA = "0x132B794", Offset = "0x132B794", VA = "0x132B794")]
		private void SetRotation(float velocity, float maxFollowLimit, float minFolloLimit)
		{
		}

		[Token(Token = "0x6002B72")]
		[Address(RVA = "0x132B854", Offset = "0x132B854", VA = "0x132B854")]
		public MT_PhysicsWheel()
		{
		}
	}
	[Token(Token = "0x2000871")]
	public class MT_Rotator : MT_Interactable
	{
		[Token(Token = "0x2000872")]
		private enum RotationAxis
		{
			[Token(Token = "0x4002454")]
			X,
			[Token(Token = "0x4002455")]
			Y,
			[Token(Token = "0x4002456")]
			Z
		}

		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE89308", Offset = "0xE89308")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE89308", Offset = "0xE89308")]
		[SerializeField]
		private float minAngle;

		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8935C", Offset = "0xE8935C")]
		private float maxAngle;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE893A0", Offset = "0xE893A0")]
		[SerializeField]
		private bool isAutoOpen;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE893D8", Offset = "0xE893D8")]
		private float autoOpenAngle;

		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8941C", Offset = "0xE8941C")]
		private float autoOpenSpeed;

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE8945C", Offset = "0xE8945C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE8945C", Offset = "0xE8945C")]
		private float goToAngleSpeed;

		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE894AC", Offset = "0xE894AC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE894AC", Offset = "0xE894AC")]
		[SerializeField]
		private RotationAxis handMovementAxis;

		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE89508", Offset = "0xE89508")]
		private float angleEventThreshold;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE89548", Offset = "0xE89548")]
		[SerializeField]
		private AngleEvent[] angleEvents;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Vector3 _lastHandInteractorPos;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private float _currentAngle;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private bool _isOpening;

		[Token(Token = "0x6002B73")]
		[Address(RVA = "0x12A54E0", Offset = "0x12A54E0", VA = "0x12A54E0", Slot = "21")]
		protected override void OnGrab()
		{
		}

		[Token(Token = "0x6002B74")]
		[Address(RVA = "0x12A5550", Offset = "0x12A5550", VA = "0x12A5550", Slot = "20")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0x12A56D4", Offset = "0x12A56D4", VA = "0x12A56D4", Slot = "22")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002B76")]
		[Address(RVA = "0x12A5730", Offset = "0x12A5730", VA = "0x12A5730")]
		private void UpdateAngle()
		{
		}

		[Token(Token = "0x6002B77")]
		[Address(RVA = "0x12A58A4", Offset = "0x12A58A4", VA = "0x12A58A4")]
		private void UpdateConnectedFollow()
		{
		}

		[Token(Token = "0x6002B78")]
		[Address(RVA = "0x12A5560", Offset = "0x12A5560", VA = "0x12A5560")]
		private void AutoOpen()
		{
		}

		[Token(Token = "0x6002B79")]
		[Address(RVA = "0x12A5B78", Offset = "0x12A5B78", VA = "0x12A5B78")]
		public void GoToMinAngle()
		{
		}

		[Token(Token = "0x6002B7A")]
		[Address(RVA = "0x12A5A34", Offset = "0x12A5A34", VA = "0x12A5A34")]
		private void CheckAngleEvents()
		{
		}

		[Token(Token = "0x6002B7B")]
		[Address(RVA = "0x12A5C94", Offset = "0x12A5C94", VA = "0x12A5C94")]
		private bool IsAngleReached(AngleEvent evt)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B7C")]
		[Address(RVA = "0x12A5B1C", Offset = "0x12A5B1C", VA = "0x12A5B1C")]
		private float GetRealAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6002B7D")]
		[Address(RVA = "0x12A5D44", Offset = "0x12A5D44", VA = "0x12A5D44", Slot = "24")]
		public override void Follow(float velocity, float maxLimit, float minLimit)
		{
		}

		[Token(Token = "0x6002B7E")]
		[Address(RVA = "0x12A5DF0", Offset = "0x12A5DF0", VA = "0x12A5DF0")]
		public MT_Rotator()
		{
		}

		[Token(Token = "0x6002B7F")]
		[Address(RVA = "0x12A5E30", Offset = "0x12A5E30", VA = "0x12A5E30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9A0E4", Offset = "0xE9A0E4")]
		private void <AutoOpen>b__18_0()
		{
		}

		[Token(Token = "0x6002B80")]
		[Address(RVA = "0x12A5E38", Offset = "0x12A5E38", VA = "0x12A5E38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9A0F4", Offset = "0xE9A0F4")]
		private void <GoToMinAngle>b__19_0()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000873")]
	public class SliderEvent
	{
		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool playOnce;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE89580", Offset = "0xE89580")]
		public float percentage;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onPercentageReached;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool hasPlayed;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		public bool hasPlayedOnce;

		[Token(Token = "0x6002B81")]
		[Address(RVA = "0x32DE7B4", Offset = "0x32DE7B4", VA = "0x32DE7B4")]
		public SliderEvent()
		{
		}
	}
	[Token(Token = "0x2000874")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE7659C", Offset = "0xE7659C")]
	public class MT_Slider : MT_Interactable
	{
		[Token(Token = "0x2000875")]
		private enum MoveAxis
		{
			[Token(Token = "0x400246B")]
			X,
			[Token(Token = "0x400246C")]
			Y,
			[Token(Token = "0x400246D")]
			Z
		}

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE895BC", Offset = "0xE895BC")]
		[SerializeField]
		private bool resetOnRelease;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE895F4", Offset = "0xE895F4")]
		private float releaseAnimDuration;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE89634", Offset = "0xE89634")]
		[SerializeField]
		private Transform maxOpenPosition;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private Transform minOpenPosition;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE8967C", Offset = "0xE8967C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE8967C", Offset = "0xE8967C")]
		[SerializeField]
		private MoveAxis handAxis;

		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private SliderEvent[] sliderEvents;

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Vector3 _lastHandInteractorPos;

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Vector3 _startPos;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Vector3 _sliderMinPos;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private Vector3 _sliderMaxPos;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private float _sliderMin;

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private float _sliderMax;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private float _sliderDistance;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private float _currDistance;

		[Token(Token = "0x6002B82")]
		[Address(RVA = "0x12AAF3C", Offset = "0x12AAF3C", VA = "0x12AAF3C", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002B83")]
		[Address(RVA = "0x12AB064", Offset = "0x12AB064", VA = "0x12AB064", Slot = "21")]
		protected override void OnGrab()
		{
		}

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0x12AB0CC", Offset = "0x12AB0CC", VA = "0x12AB0CC", Slot = "20")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x6002B85")]
		[Address(RVA = "0x12AB114", Offset = "0x12AB114", VA = "0x12AB114", Slot = "22")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002B86")]
		[Address(RVA = "0x12AB168", Offset = "0x12AB168", VA = "0x12AB168")]
		private void UpdateSliderPosition()
		{
		}

		[Token(Token = "0x6002B87")]
		[Address(RVA = "0x12AB284", Offset = "0x12AB284", VA = "0x12AB284")]
		private void UpdateConnectedFollow()
		{
		}

		[Token(Token = "0x6002B88")]
		[Address(RVA = "0x12AAF8C", Offset = "0x12AAF8C", VA = "0x12AAF8C")]
		private void SetMinMaxSliderPos()
		{
		}

		[Token(Token = "0x6002B89")]
		[Address(RVA = "0x12AB4B4", Offset = "0x12AB4B4", VA = "0x12AB4B4")]
		private void SetSliderPosition(float pos, bool isInverse = false)
		{
		}

		[Token(Token = "0x6002B8A")]
		[Address(RVA = "0x12AB3CC", Offset = "0x12AB3CC", VA = "0x12AB3CC")]
		private void CheckSliderEvent()
		{
		}

		[Token(Token = "0x6002B8B")]
		[Address(RVA = "0x12AB55C", Offset = "0x12AB55C", VA = "0x12AB55C")]
		private bool IsPercentageReached(SliderEvent sliderEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B8C")]
		[Address(RVA = "0x12AB5FC", Offset = "0x12AB5FC", VA = "0x12AB5FC", Slot = "24")]
		public override void Follow(float velocity, float maxLimit, float minLimit)
		{
		}

		[Token(Token = "0x6002B8D")]
		[Address(RVA = "0x12AB664", Offset = "0x12AB664", VA = "0x12AB664")]
		public MT_Slider()
		{
		}
	}
	[Token(Token = "0x2000876")]
	public class PhysicsDialLocker : MonoBehaviour
	{
		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HVRPhysicsDial _physicsDial;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IsLocked;

		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _hasLocked;

		[Token(Token = "0x4002471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool _hasUnlocked;

		[Token(Token = "0x6002B8E")]
		[Address(RVA = "0x107E080", Offset = "0x107E080", VA = "0x107E080")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002B8F")]
		[Address(RVA = "0x107E0DC", Offset = "0x107E0DC", VA = "0x107E0DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002B90")]
		[Address(RVA = "0x107E0EC", Offset = "0x107E0EC", VA = "0x107E0EC")]
		private void LockJoint()
		{
		}

		[Token(Token = "0x6002B91")]
		[Address(RVA = "0x107E160", Offset = "0x107E160", VA = "0x107E160")]
		private void UnlockJoint()
		{
		}

		[Token(Token = "0x6002B92")]
		[Address(RVA = "0x107E194", Offset = "0x107E194", VA = "0x107E194")]
		private float GetCurrentAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6002B93")]
		[Address(RVA = "0x107E2B0", Offset = "0x107E2B0", VA = "0x107E2B0")]
		public void SetLocked(bool locked)
		{
		}

		[Token(Token = "0x6002B94")]
		[Address(RVA = "0x107E2BC", Offset = "0x107E2BC", VA = "0x107E2BC")]
		public PhysicsDialLocker()
		{
		}
	}
	[Token(Token = "0x2000877")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE765D4", Offset = "0xE765D4")]
	public class PhysicsDialSpringExtension : MonoBehaviour
	{
		[Token(Token = "0x2000878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7668C", Offset = "0xE7668C")]
		private sealed class <SpringCo>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400247E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400247F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PhysicsDialSpringExtension <>4__this;

			[Token(Token = "0x1700046D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BA0")]
				[Address(RVA = "0x32C4ACC", Offset = "0x32C4ACC", VA = "0x32C4ACC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BA2")]
				[Address(RVA = "0x32C4B14", Offset = "0x32C4B14", VA = "0x32C4B14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B9D")]
			[Address(RVA = "0x32C4998", Offset = "0x32C4998", VA = "0x32C4998")]
			[DebuggerHidden]
			public <SpringCo>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002B9E")]
			[Address(RVA = "0x32C49C4", Offset = "0x32C49C4", VA = "0x32C49C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B9F")]
			[Address(RVA = "0x32C49C8", Offset = "0x32C49C8", VA = "0x32C49C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BA1")]
			[Address(RVA = "0x32C4AD4", Offset = "0x32C4AD4", VA = "0x32C4AD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HVRGrabbable _grabbable;

		[Token(Token = "0x4002473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HVRRotationTracker _rotTrack;

		[Token(Token = "0x4002474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody _rb;

		[Token(Token = "0x4002475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isGrabbed;

		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _springCoRunning;

		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine springRoutine;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE896E8", Offset = "0xE896E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE896E8", Offset = "0xE896E8")]
		public float springStrength;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE89748", Offset = "0xE89748")]
		public float zeroingOutThreshold;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevVector;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _prevDelta;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE89780", Offset = "0xE89780")]
		[SerializeField]
		private float _angleDelta;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float _turnDirection;

		[Token(Token = "0x6002B95")]
		[Address(RVA = "0x107E2C4", Offset = "0x107E2C4", VA = "0x107E2C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002B96")]
		[Address(RVA = "0x107E380", Offset = "0x107E380", VA = "0x107E380")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002B97")]
		[Address(RVA = "0x107E4F0", Offset = "0x107E4F0", VA = "0x107E4F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002B98")]
		[Address(RVA = "0x107E60C", Offset = "0x107E60C", VA = "0x107E60C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002B99")]
		[Address(RVA = "0x107E754", Offset = "0x107E754", VA = "0x107E754")]
		private void OnGrabbed(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
		{
		}

		[Token(Token = "0x6002B9A")]
		[Address(RVA = "0x107E7AC", Offset = "0x107E7AC", VA = "0x107E7AC")]
		private void OnReleased(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
		{
		}

		[Token(Token = "0x6002B9B")]
		[Address(RVA = "0x107E6DC", Offset = "0x107E6DC", VA = "0x107E6DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9A104", Offset = "0xE9A104")]
		private IEnumerator SpringCo()
		{
			return null;
		}

		[Token(Token = "0x6002B9C")]
		[Address(RVA = "0x107E814", Offset = "0x107E814", VA = "0x107E814")]
		public PhysicsDialSpringExtension()
		{
		}
	}
	[Token(Token = "0x2000879")]
	public class PhysicsDrawerLocker : MonoBehaviour
	{
		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HVRPhysicsDrawer _physicsDrawer;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IsLocked;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _hasLocked;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool _hasUnlocked;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ZA_AudioEvent audioEvent;

		[Token(Token = "0x6002BA3")]
		[Address(RVA = "0x107E828", Offset = "0x107E828", VA = "0x107E828")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002BA4")]
		[Address(RVA = "0x107E884", Offset = "0x107E884", VA = "0x107E884")]
		private void Update()
		{
		}

		[Token(Token = "0x6002BA5")]
		[Address(RVA = "0x107E894", Offset = "0x107E894", VA = "0x107E894")]
		private void LockJoint()
		{
		}

		[Token(Token = "0x6002BA6")]
		[Address(RVA = "0x107EA4C", Offset = "0x107EA4C", VA = "0x107EA4C")]
		private void UnlockJoint()
		{
		}

		[Token(Token = "0x6002BA7")]
		[Address(RVA = "0x107EB4C", Offset = "0x107EB4C", VA = "0x107EB4C")]
		public void SetLocked(bool locked)
		{
		}

		[Token(Token = "0x6002BA8")]
		[Address(RVA = "0x107EB58", Offset = "0x107EB58", VA = "0x107EB58")]
		public PhysicsDrawerLocker()
		{
		}
	}
	[Token(Token = "0x200087A")]
	public class RotatorMover : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200087B")]
		private struct AngleMovement
		{
			[Token(Token = "0x400248A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angle;

			[Token(Token = "0x400248B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public HVRAxis axis;

			[Token(Token = "0x400248C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float duration;

			[Token(Token = "0x400248D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Ease ease;

			[Token(Token = "0x400248E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onComplete;
		}

		[Token(Token = "0x200087C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7669C", Offset = "0xE7669C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x400248F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onComplete;

			[Token(Token = "0x6002BB0")]
			[Address(RVA = "0x32C667C", Offset = "0x32C667C", VA = "0x32C667C")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002BB1")]
			[Address(RVA = "0x32C6684", Offset = "0x32C6684", VA = "0x32C6684")]
			internal void <GoToAngle>b__0()
			{
			}
		}

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AngleMovement[] presetAngleMovements;

		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HVRGrabbable _grabbable;

		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConfigurableJoint _joint;

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DG.Tweening.Sequence _sequence;

		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0x32CC284", Offset = "0x32CC284", VA = "0x32CC284")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0x32CC2E0", Offset = "0x32CC2E0", VA = "0x32CC2E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002BAB")]
		[Address(RVA = "0x32CC3F4", Offset = "0x32CC3F4", VA = "0x32CC3F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002BAC")]
		[Address(RVA = "0x32CC508", Offset = "0x32CC508", VA = "0x32CC508")]
		public void DoPresetAngleMovement(int index)
		{
		}

		[Token(Token = "0x6002BAD")]
		[Address(RVA = "0x32CC564", Offset = "0x32CC564", VA = "0x32CC564")]
		public void GoToAngle(float angle, HVRAxis axis, float duration, Ease ease = Ease.Unset, [Optional] Action onComplete)
		{
		}

		[Token(Token = "0x6002BAE")]
		[Address(RVA = "0x32CC75C", Offset = "0x32CC75C", VA = "0x32CC75C")]
		private void OnGrabbed(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
		{
		}

		[Token(Token = "0x6002BAF")]
		[Address(RVA = "0x32CC774", Offset = "0x32CC774", VA = "0x32CC774")]
		public RotatorMover()
		{
		}
	}
	[Token(Token = "0x200087D")]
	public class SliderMover : MonoBehaviour
	{
		[Token(Token = "0x200087E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE766AC", Offset = "0xE766AC")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onComplete;

			[Token(Token = "0x6002BB8")]
			[Address(RVA = "0x32C99B8", Offset = "0x32C99B8", VA = "0x32C99B8")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002BB9")]
			[Address(RVA = "0x32C99C0", Offset = "0x32C99C0", VA = "0x32C99C0")]
			internal void <GoToPosition>b__0()
			{
			}
		}

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HVRGrabbable _grabbable;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ConfigurableJoint _joint;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DG.Tweening.Sequence _sequence;

		[Token(Token = "0x6002BB2")]
		[Address(RVA = "0x32DE7BC", Offset = "0x32DE7BC", VA = "0x32DE7BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002BB3")]
		[Address(RVA = "0x32DE818", Offset = "0x32DE818", VA = "0x32DE818")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002BB4")]
		[Address(RVA = "0x32DE92C", Offset = "0x32DE92C", VA = "0x32DE92C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002BB5")]
		[Address(RVA = "0x32DEA40", Offset = "0x32DEA40", VA = "0x32DEA40")]
		public void GoToPosition(Vector3 position, float duration, Ease ease = Ease.Unset, [Optional] Action onComplete)
		{
		}

		[Token(Token = "0x6002BB6")]
		[Address(RVA = "0x32DEC08", Offset = "0x32DEC08", VA = "0x32DEC08")]
		private void OnGrabbed(HVRGrabberBase arg0, HVRGrabbable hvrGrabbable)
		{
		}

		[Token(Token = "0x6002BB7")]
		[Address(RVA = "0x32DEC20", Offset = "0x32DEC20", VA = "0x32DEC20")]
		public SliderMover()
		{
		}
	}
	[Token(Token = "0x200087F")]
	public class MT_ObjectInteractionBase : MonoBehaviour, IGrabbable, IHoverable, ITaggable
	{
		[Token(Token = "0x2000880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE766BC", Offset = "0xE766BC")]
		private sealed class <>c__DisplayClass59_0
		{
			[Token(Token = "0x40024BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 start;

			[Token(Token = "0x6002BD6")]
			[Address(RVA = "0x103DEB8", Offset = "0x103DEB8", VA = "0x103DEB8")]
			public <>c__DisplayClass59_0()
			{
			}

			[Token(Token = "0x6002BD7")]
			[Address(RVA = "0x103DEC0", Offset = "0x103DEC0", VA = "0x103DEC0")]
			internal int <CheckHit>b__0(Transform a, Transform b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string objectTag;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int priority;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool hasUniqueHoverPose;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[SerializeField]
		protected bool isGrabbable;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected GrabType grabType;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected bool hasCustomGrabCenter;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform customGrabCenter;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE8986C", Offset = "0xE8986C")]
		[SerializeField]
		private bool useAttachPointOnly;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<MT_AttachPoint> attachPoints;

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE898B4", Offset = "0xE898B4")]
		[SerializeField]
		private List<Transform> preciseGrabTransformList;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onGrab;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onRightGrab;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent onLeftGrab;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent onDrop;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected UnityEvent onOneHandGrab;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected UnityEvent onTwoHandsGrab;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent onHoverEnter;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent onHoverExit;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UnityAction<GameObject> onReturnToInventoryWhenDrop;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UnityAction<GameObject> onAddToInventoryWhenGrab;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UnityAction<MT_HandInteractor> onItemGrab;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityAction onItemDrop;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected bool _isGrabbed;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		protected bool _isGrabbedByNpc;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Rigidbody _rb;

		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected MT_HandInteractor _mainHandInteractor;

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Transform _mainHandInteractorTransform;

		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected HandType _mainHandType;

		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Transform _currentHandModelTransform;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Transform _mainHandModelSceneParent;

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<MT_AttachPoint> _attachPointsInRange;

		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected MT_AttachPoint _currentAttachPoint;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected bool _isPreciseGrab;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		protected Vector3 _preciseGrabOffset;

		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Transform _handAttachTransform;

		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected Vector3 _handPos;

		[Token(Token = "0x40024B8")]
		private const float AttachPointMinDistance = 0.17f;

		[Token(Token = "0x40024B9")]
		private const string ObjCollisionTag = "ObjCollision";

		[Token(Token = "0x1700046F")]
		public bool IsGrabbedByNpc
		{
			[Token(Token = "0x6002BBA")]
			[Address(RVA = "0x10FCDC8", Offset = "0x10FCDC8", VA = "0x10FCDC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002BBB")]
			[Address(RVA = "0x10FCDD0", Offset = "0x10FCDD0", VA = "0x10FCDD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000470")]
		public MT_HandInteractor MainHandInteractor
		{
			[Token(Token = "0x6002BBC")]
			[Address(RVA = "0x10FCDDC", Offset = "0x10FCDDC", VA = "0x10FCDDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BBD")]
		[Address(RVA = "0x10FCDE4", Offset = "0x10FCDE4", VA = "0x10FCDE4", Slot = "17")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002BBE")]
		[Address(RVA = "0x10FCEEC", Offset = "0x10FCEEC", VA = "0x10FCEEC", Slot = "18")]
		public virtual void Grab(MT_HandInteractor handInteractor)
		{
		}

		[Token(Token = "0x6002BBF")]
		[Address(RVA = "0x10FDA4C", Offset = "0x10FDA4C", VA = "0x10FDA4C")]
		public void RemoteGrab(GameObject obj)
		{
		}

		[Token(Token = "0x6002BC0")]
		[Address(RVA = "0x10FDBA8", Offset = "0x10FDBA8", VA = "0x10FDBA8", Slot = "19")]
		public virtual void Drop(MT_HandInteractor handInteractor)
		{
		}

		[Token(Token = "0x6002BC1")]
		[Address(RVA = "0x10FDC28", Offset = "0x10FDC28", VA = "0x10FDC28")]
		public void RemoteDrop()
		{
		}

		[Token(Token = "0x6002BC2")]
		[Address(RVA = "0x10FDCA8", Offset = "0x10FDCA8", VA = "0x10FDCA8")]
		public void ForceDrop()
		{
		}

		[Token(Token = "0x6002BC3")]
		[Address(RVA = "0x10FDCBC", Offset = "0x10FDCBC", VA = "0x10FDCBC", Slot = "20")]
		protected virtual void OnDrop()
		{
		}

		[Token(Token = "0x6002BC4")]
		[Address(RVA = "0x10FDCC0", Offset = "0x10FDCC0", VA = "0x10FDCC0", Slot = "21")]
		protected virtual void OnGrab()
		{
		}

		[Token(Token = "0x6002BC5")]
		[Address(RVA = "0x10FDCC4", Offset = "0x10FDCC4", VA = "0x10FDCC4", Slot = "10")]
		public UnityEvent GetHoverEnter()
		{
			return null;
		}

		[Token(Token = "0x6002BC6")]
		[Address(RVA = "0x10FDCCC", Offset = "0x10FDCCC", VA = "0x10FDCCC", Slot = "11")]
		public UnityEvent GetHoverExit()
		{
			return null;
		}

		[Token(Token = "0x6002BC7")]
		[Address(RVA = "0x10FDCD4", Offset = "0x10FDCD4", VA = "0x10FDCD4", Slot = "12")]
		public void InvokeHoverEnter()
		{
		}

		[Token(Token = "0x6002BC8")]
		[Address(RVA = "0x10FD83C", Offset = "0x10FD83C", VA = "0x10FD83C", Slot = "13")]
		public void InvokeHoverExit()
		{
		}

		[Token(Token = "0x6002BC9")]
		[Address(RVA = "0x10FDCE8", Offset = "0x10FDCE8", VA = "0x10FDCE8", Slot = "14")]
		public int GetPriority()
		{
			return default(int);
		}

		[Token(Token = "0x6002BCA")]
		[Address(RVA = "0x10FDCF0", Offset = "0x10FDCF0", VA = "0x10FDCF0", Slot = "15")]
		public bool HasUniqueHoverPose()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BCB")]
		[Address(RVA = "0x10FDCF8", Offset = "0x10FDCF8", VA = "0x10FDCF8", Slot = "6")]
		public GrabType GetGrabType()
		{
			return default(GrabType);
		}

		[Token(Token = "0x6002BCC")]
		[Address(RVA = "0x10FD044", Offset = "0x10FD044", VA = "0x10FD044")]
		private void CheckIfPreciseGrab()
		{
		}

		[Token(Token = "0x6002BCD")]
		[Address(RVA = "0x10FD328", Offset = "0x10FD328", VA = "0x10FD328")]
		private bool CheckHit()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BCE")]
		[Address(RVA = "0x10FD850", Offset = "0x10FD850", VA = "0x10FD850")]
		private void SetAttachPoint(MT_HandInteractor handInteractor)
		{
		}

		[Token(Token = "0x6002BCF")]
		[Address(RVA = "0x10FDD00", Offset = "0x10FDD00", VA = "0x10FDD00")]
		public void SetGrabbable(bool isGrabbable)
		{
		}

		[Token(Token = "0x6002BD0")]
		[Address(RVA = "0x10FDD0C", Offset = "0x10FDD0C", VA = "0x10FDD0C", Slot = "5")]
		public bool IsGrabbable()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD1")]
		[Address(RVA = "0x10FDD14", Offset = "0x10FDD14", VA = "0x10FDD14", Slot = "4")]
		public bool IsGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD2")]
		[Address(RVA = "0x10FDD1C", Offset = "0x10FDD1C", VA = "0x10FDD1C", Slot = "16")]
		public string ObjectTag()
		{
			return null;
		}

		[Token(Token = "0x6002BD3")]
		[Address(RVA = "0x10FDD24", Offset = "0x10FDD24", VA = "0x10FDD24", Slot = "7")]
		public Transform GetObjectGrabCenter()
		{
			return null;
		}

		[Token(Token = "0x6002BD4")]
		[Address(RVA = "0x10FDDB0", Offset = "0x10FDDB0", VA = "0x10FDDB0")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002BD5")]
		[Address(RVA = "0x10FDDB8", Offset = "0x10FDDB8", VA = "0x10FDDB8")]
		public MT_ObjectInteractionBase()
		{
		}
	}
	[Token(Token = "0x2000881")]
	public static class MT_Register
	{
		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<MT_ObjectInteractionBase> _grabbables;

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<GameObject> _npcList;

		[Token(Token = "0x17000471")]
		public static List<MT_ObjectInteractionBase> Grabbables
		{
			[Token(Token = "0x6002BD8")]
			[Address(RVA = "0x12A414C", Offset = "0x12A414C", VA = "0x12A414C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000472")]
		public static List<GameObject> NpcList
		{
			[Token(Token = "0x6002BD9")]
			[Address(RVA = "0x12A4198", Offset = "0x12A4198", VA = "0x12A4198")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BDA")]
		[Address(RVA = "0x12A41E4", Offset = "0x12A41E4", VA = "0x12A41E4")]
		public static void RegisterInteractable(MT_ObjectInteractionBase grabbable)
		{
		}

		[Token(Token = "0x6002BDB")]
		[Address(RVA = "0x12A42C0", Offset = "0x12A42C0", VA = "0x12A42C0")]
		public static void DeregisterInteractable(MT_ObjectInteractionBase grabbable)
		{
		}

		[Token(Token = "0x6002BDC")]
		[Address(RVA = "0x12A4374", Offset = "0x12A4374", VA = "0x12A4374")]
		public static void RegisterNpc(GameObject npc)
		{
		}

		[Token(Token = "0x6002BDD")]
		[Address(RVA = "0x12A4450", Offset = "0x12A4450", VA = "0x12A4450")]
		public static void DeregisterNpc(GameObject npc)
		{
		}
	}
	[Token(Token = "0x2000882")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE766CC", Offset = "0xE766CC")]
	public class MT_AttachPoint : MonoBehaviour
	{
		[Token(Token = "0x2000883")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE76704", Offset = "0xE76704")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x40024D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onObjectLerp;

			[Token(Token = "0x6002BE6")]
			[Address(RVA = "0x1035C20", Offset = "0x1035C20", VA = "0x1035C20")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6002BE7")]
			[Address(RVA = "0x1035C28", Offset = "0x1035C28", VA = "0x1035C28")]
			internal void <SetAttachPoint>b__0()
			{
			}

			[Token(Token = "0x6002BE8")]
			[Address(RVA = "0x1035C3C", Offset = "0x1035C3C", VA = "0x1035C3C")]
			internal void <SetAttachPoint>b__1()
			{
			}
		}

		[Token(Token = "0x2000884")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE76714", Offset = "0xE76714")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x40024D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform parentTransf;

			[Token(Token = "0x40024D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 position;

			[Token(Token = "0x40024D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion rotation;

			[Token(Token = "0x40024D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action onObjectLerp;

			[Token(Token = "0x40024D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Rigidbody rb;

			[Token(Token = "0x40024D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool isKinematic;

			[Token(Token = "0x40024D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public MT_HandPhysics physics;

			[Token(Token = "0x6002BE9")]
			[Address(RVA = "0x1035C50", Offset = "0x1035C50", VA = "0x1035C50")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002BEA")]
			[Address(RVA = "0x1035C58", Offset = "0x1035C58", VA = "0x1035C58")]
			internal void <MoveHand>b__0()
			{
			}
		}

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 secondaryRotAxis;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE8991C", Offset = "0xE8991C")]
		[SerializeField]
		private bool hasRealRotation;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 rotationAxis;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE89964", Offset = "0xE89964")]
		private float objLerpSpeed;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Ease objEaseType;

		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float objStoppingDistance;

		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _handPos;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _handRot;

		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 _secondaryHandPos;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 _secondaryHandRot;

		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private DG.Tweening.Sequence _moveSequence;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private DG.Tweening.Sequence _objMoveSequence;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform _attachTransf;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MT_HandPhysics _physics;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform _handTransf;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform _handParentTransf;

		[Token(Token = "0x40024CD")]
		private const float MinDistance = 0.3f;

		[Token(Token = "0x40024CE")]
		private const float MoveDuration = 0.05f;

		[Token(Token = "0x40024CF")]
		private const float RotDuration = 0.01f;

		[Token(Token = "0x6002BDE")]
		[Address(RVA = "0x11242E8", Offset = "0x11242E8", VA = "0x11242E8")]
		public void SetAttachPoint(MT_HandInteractor currentHand, Transform objectTransform, Transform handTransform, bool isSecondaryHand, bool isGrababble = true, [Optional] Action onObjectLerp, [Optional] MT_HandPhysics physics)
		{
		}

		[Token(Token = "0x6002BDF")]
		[Address(RVA = "0x11249D4", Offset = "0x11249D4", VA = "0x11249D4")]
		public void StopLerpToPosition()
		{
		}

		[Token(Token = "0x6002BE0")]
		[Address(RVA = "0x11244E0", Offset = "0x11244E0", VA = "0x11244E0")]
		private void SetUpHandToObjectPos(Transform objectTransform, Transform parentTransf, MT_HandPhysics physics, Action onObjectLerp)
		{
		}

		[Token(Token = "0x6002BE1")]
		[Address(RVA = "0x1124BE4", Offset = "0x1124BE4", VA = "0x1124BE4")]
		private void MoveHand(Transform parentTransf, Quaternion rotation, Vector3 position, MT_HandPhysics physics, Rigidbody rb, bool isKinematic, Action onObjectLerp)
		{
		}

		[Token(Token = "0x6002BE2")]
		[Address(RVA = "0x1124AD0", Offset = "0x1124AD0", VA = "0x1124AD0")]
		private void GetPositionFromAsset(float objRot, float handRot, float secHandRot, out Vector3 pos, out Vector3 rot)
		{
		}

		[Token(Token = "0x6002BE3")]
		[Address(RVA = "0x1124E38", Offset = "0x1124E38", VA = "0x1124E38")]
		private float GetRealAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6002BE4")]
		[Address(RVA = "0x11248B0", Offset = "0x11248B0", VA = "0x11248B0")]
		private void SetUpHandPos(Vector3 pos, Vector3 rot, Transform objectTransform, Transform handTransf, Action onPosSet)
		{
		}

		[Token(Token = "0x6002BE5")]
		[Address(RVA = "0x1124E94", Offset = "0x1124E94", VA = "0x1124E94")]
		public MT_AttachPoint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000885")]
	public class OnCollisionEvent : UnityEvent<Vector3>
	{
		[Token(Token = "0x6002BEB")]
		[Address(RVA = "0x107AE5C", Offset = "0x107AE5C", VA = "0x107AE5C")]
		public OnCollisionEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000886")]
	public class CollisionEvent
	{
		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE899C8", Offset = "0xE899C8")]
		public float collisionStrengthMin;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE899E0", Offset = "0xE899E0")]
		public float collisionStrengthMax;

		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string objectTag;

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnCollisionEvent onCollision;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HVRGrabbable grabbable;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool triggerWhenHeld;

		[Token(Token = "0x6002BEC")]
		[Address(RVA = "0x120BECC", Offset = "0x120BECC", VA = "0x120BECC")]
		public CollisionEvent()
		{
		}
	}
	[Token(Token = "0x2000887")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE76724", Offset = "0xE76724")]
	public sealed class MT_CollisionEvent : MonoBehaviour
	{
		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LayerMask layerMask;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool isEnabled;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CollisionEvent[] events;

		[Token(Token = "0x6002BED")]
		[Address(RVA = "0x112C734", Offset = "0x112C734", VA = "0x112C734")]
		private void OnCollisionEnter(UnityEngine.Collision collision)
		{
		}

		[Token(Token = "0x6002BEE")]
		[Address(RVA = "0x112C78C", Offset = "0x112C78C", VA = "0x112C78C")]
		private void OnCollision(UnityEngine.Collision collision)
		{
		}

		[Token(Token = "0x6002BEF")]
		[Address(RVA = "0x112C9D4", Offset = "0x112C9D4", VA = "0x112C9D4")]
		public void SetEnableCollisionEvents(bool setEnabled)
		{
		}

		[Token(Token = "0x6002BF0")]
		[Address(RVA = "0x112C9E0", Offset = "0x112C9E0", VA = "0x112C9E0")]
		public MT_CollisionEvent()
		{
		}
	}
	[Token(Token = "0x2000888")]
	public class MT_DebugAngleDistance : MonoBehaviour
	{
		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MT_Interactable interactable;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI text;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isInteractableNull;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _isTextNull;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector2 _targetAngleRange;

		[Token(Token = "0x6002BF1")]
		[Address(RVA = "0x112F004", Offset = "0x112F004", VA = "0x112F004")]
		private void Start()
		{
		}

		[Token(Token = "0x6002BF2")]
		[Address(RVA = "0x112F0C0", Offset = "0x112F0C0", VA = "0x112F0C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002BF3")]
		[Address(RVA = "0x112F25C", Offset = "0x112F25C", VA = "0x112F25C")]
		public MT_DebugAngleDistance()
		{
		}
	}
	[Token(Token = "0x2000889")]
	public class MT_InteractableInRange : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200088A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7675C", Offset = "0xE7675C")]
		private sealed class <>c
		{
			[Token(Token = "0x40024EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40024EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<string, bool>, bool> <>9__6_0;

			[Token(Token = "0x6002BFB")]
			[Address(RVA = "0x1038140", Offset = "0x1038140", VA = "0x1038140")]
			public <>c()
			{
			}

			[Token(Token = "0x6002BFC")]
			[Address(RVA = "0x1038148", Offset = "0x1038148", VA = "0x1038148")]
			internal bool <AreAllInRange>b__6_0(KeyValuePair<string, bool> interactable)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200088B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7676C", Offset = "0xE7676C")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40024ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyValuePair<string, bool> interactable;

			[Token(Token = "0x6002BFD")]
			[Address(RVA = "0x103818C", Offset = "0x103818C", VA = "0x103818C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002BFE")]
			[Address(RVA = "0x1038194", Offset = "0x1038194", VA = "0x1038194")]
			internal bool <AreAllGrabbed>b__0(MT_Interactable x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool activateOnlyIfGrabbed;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MT_Interactable[] interactableObjects;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent triggerEvent;

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _hasBeenTriggered;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<string, bool> _interactableDictionary;

		[Token(Token = "0x6002BF4")]
		[Address(RVA = "0x124C95C", Offset = "0x124C95C", VA = "0x124C95C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002BF5")]
		[Address(RVA = "0x124CAB4", Offset = "0x124CAB4", VA = "0x124CAB4")]
		private bool AreAllInRange()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BF6")]
		[Address(RVA = "0x124CBD8", Offset = "0x124CBD8", VA = "0x124CBD8")]
		private bool AreAllGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BF7")]
		[Address(RVA = "0x124CE5C", Offset = "0x124CE5C", VA = "0x124CE5C")]
		private void HandleOnInteractableInRange(string interactableName, bool isInRange)
		{
		}

		[Token(Token = "0x6002BF8")]
		[Address(RVA = "0x124CF18", Offset = "0x124CF18", VA = "0x124CF18")]
		public void Trigger()
		{
		}

		[Token(Token = "0x6002BF9")]
		[Address(RVA = "0x124CF40", Offset = "0x124CF40", VA = "0x124CF40")]
		public MT_InteractableInRange()
		{
		}
	}
	[Token(Token = "0x200088C")]
	public class OnCollisionHit : MonoBehaviour
	{
		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] gameObjectsToDisable;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] gameObjectsToEnable;

		[Token(Token = "0x6002BFF")]
		[Address(RVA = "0x107AEA8", Offset = "0x107AEA8", VA = "0x107AEA8", Slot = "4")]
		[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0xE9A1B4", Offset = "0xE9A1B4")]
		public virtual void OnHit()
		{
		}

		[Token(Token = "0x6002C00")]
		[Address(RVA = "0x107AF5C", Offset = "0x107AF5C", VA = "0x107AF5C")]
		public OnCollisionHit()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200088D")]
	public struct DropZoneTags
	{
		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform snapPosition;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string snapTag;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE89A98", Offset = "0xE89A98")]
		public bool attachMultipleObjects;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE89AA8", Offset = "0xE89AA8")]
		public MT_Interactable linkedInteractable;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE89AB8", Offset = "0xE89AB8")]
		public bool triggerSnapOnce;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onSnap;

		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE89AC8", Offset = "0xE89AC8")]
		public bool triggerRemoveOnce;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onRemove;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool snapHasTriggered;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[HideInInspector]
		public bool removeHasTriggered;
	}
	[Token(Token = "0x200088E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE7677C", Offset = "0xE7677C")]
	public class MT_SnapDropZone : MonoBehaviour
	{
		[Token(Token = "0x200088F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE767B4", Offset = "0xE767B4")]
		private sealed class <SetForceUnsnapFalse>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_SnapDropZone <>4__this;

			[Token(Token = "0x17000474")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C14")]
				[Address(RVA = "0x32B90D0", Offset = "0x32B90D0", VA = "0x32B90D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000475")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C16")]
				[Address(RVA = "0x32B9118", Offset = "0x32B9118", VA = "0x32B9118", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C11")]
			[Address(RVA = "0x32B8FE8", Offset = "0x32B8FE8", VA = "0x32B8FE8")]
			[DebuggerHidden]
			public <SetForceUnsnapFalse>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002C12")]
			[Address(RVA = "0x32B9014", Offset = "0x32B9014", VA = "0x32B9014", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C13")]
			[Address(RVA = "0x32B9018", Offset = "0x32B9018", VA = "0x32B9018", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C15")]
			[Address(RVA = "0x32B90D8", Offset = "0x32B90D8", VA = "0x32B90D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE767C4", Offset = "0xE767C4")]
		private sealed class <WaitToSnap>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400250A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400250B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_SnapDropZone <>4__this;

			[Token(Token = "0x400250C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MT_Snappable snappable;

			[Token(Token = "0x400250D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DropZoneTags dropZone;

			[Token(Token = "0x17000476")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C1A")]
				[Address(RVA = "0x32B924C", Offset = "0x32B924C", VA = "0x32B924C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000477")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C1C")]
				[Address(RVA = "0x32B9294", Offset = "0x32B9294", VA = "0x32B9294", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C17")]
			[Address(RVA = "0x32B9120", Offset = "0x32B9120", VA = "0x32B9120")]
			[DebuggerHidden]
			public <WaitToSnap>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002C18")]
			[Address(RVA = "0x32B914C", Offset = "0x32B914C", VA = "0x32B914C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C19")]
			[Address(RVA = "0x32B9150", Offset = "0x32B9150", VA = "0x32B9150", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C1B")]
			[Address(RVA = "0x32B9254", Offset = "0x32B9254", VA = "0x32B9254", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MT_Grabbable parentGrabbable;

		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Rigidbody parentRb;

		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE89B08", Offset = "0xE89B08")]
		[SerializeField]
		private bool hasSnapDistance;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float snapDistance;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DropZoneTags[] dropZoneTags;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MT_Snappable _currentSnappable;

		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DropZoneTags _currentDropZone;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<MT_Snappable> _snappables;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<GameObject> _snappedObjects;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Coroutine _waitToSnapCo;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Coroutine _waitToSetForceUnsnap;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool _isForceUnsnap;

		[Token(Token = "0x17000473")]
		public MT_Snappable CurrentSnappable
		{
			[Token(Token = "0x6002C01")]
			[Address(RVA = "0x12AB8B4", Offset = "0x12AB8B4", VA = "0x12AB8B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C02")]
		[Address(RVA = "0x12AB8BC", Offset = "0x12AB8BC", VA = "0x12AB8BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002C03")]
		[Address(RVA = "0x12AB9AC", Offset = "0x12AB9AC", VA = "0x12AB9AC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002C04")]
		[Address(RVA = "0x12ABCA4", Offset = "0x12ABCA4", VA = "0x12ABCA4")]
		private void Snap(MT_Snappable snappable, DropZoneTags dropZone)
		{
		}

		[Token(Token = "0x6002C05")]
		[Address(RVA = "0x12AC1A4", Offset = "0x12AC1A4", VA = "0x12AC1A4")]
		private void OnLerpSnap()
		{
		}

		[Token(Token = "0x6002C06")]
		[Address(RVA = "0x12AC244", Offset = "0x12AC244", VA = "0x12AC244")]
		private void OnSnap()
		{
		}

		[Token(Token = "0x6002C07")]
		[Address(RVA = "0x12AC644", Offset = "0x12AC644", VA = "0x12AC644")]
		private void SetUpLinkedInteractable(DropZoneTags dropZone)
		{
		}

		[Token(Token = "0x6002C08")]
		[Address(RVA = "0x12ACC10", Offset = "0x12ACC10", VA = "0x12ACC10")]
		private void Unsnap(MT_Snappable snappable)
		{
		}

		[Token(Token = "0x6002C09")]
		[Address(RVA = "0x12ACD60", Offset = "0x12ACD60", VA = "0x12ACD60")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002C0A")]
		[Address(RVA = "0x12AD24C", Offset = "0x12AD24C", VA = "0x12AD24C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE9A22C", Offset = "0xE9A22C")]
		[PublicAPI]
		public void ForceUnsnap()
		{
		}

		[Token(Token = "0x6002C0B")]
		[Address(RVA = "0x12AD670", Offset = "0x12AD670", VA = "0x12AD670")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9A26C", Offset = "0xE9A26C")]
		private IEnumerator SetForceUnsnapFalse()
		{
			return null;
		}

		[Token(Token = "0x6002C0C")]
		[Address(RVA = "0x12AD6E8", Offset = "0x12AD6E8", VA = "0x12AD6E8")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE9A2CC", Offset = "0xE9A2CC")]
		[PublicAPI]
		public void ForceProximitySnap()
		{
		}

		[Token(Token = "0x6002C0D")]
		[Address(RVA = "0x12AD9F8", Offset = "0x12AD9F8", VA = "0x12AD9F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9A30C", Offset = "0xE9A30C")]
		private IEnumerator WaitToSnap(MT_Snappable snappable, DropZoneTags dropZone)
		{
			return null;
		}

		[Token(Token = "0x6002C0E")]
		[Address(RVA = "0x12ADAB0", Offset = "0x12ADAB0", VA = "0x12ADAB0")]
		[PublicAPI]
		public void ForceSnap(MT_Snappable snappable)
		{
		}

		[Token(Token = "0x6002C0F")]
		[Address(RVA = "0x12ADBBC", Offset = "0x12ADBBC", VA = "0x12ADBBC")]
		[PublicAPI]
		public void SetCurrentSnappableToNull()
		{
		}

		[Token(Token = "0x6002C10")]
		[Address(RVA = "0x12ADBC8", Offset = "0x12ADBC8", VA = "0x12ADBC8")]
		public MT_SnapDropZone()
		{
		}
	}
	[Token(Token = "0x2000891")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE767D4", Offset = "0xE767D4")]
	public class MT_Snappable : MonoBehaviour
	{
		[Token(Token = "0x2000892")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7680C", Offset = "0xE7680C")]
		private sealed class <WaitToReset>d__82 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400253C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400253D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400253E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_Snappable <>4__this;

			[Token(Token = "0x17000481")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C46")]
				[Address(RVA = "0x32B9724", Offset = "0x32B9724", VA = "0x32B9724", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000482")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C48")]
				[Address(RVA = "0x32B976C", Offset = "0x32B976C", VA = "0x32B976C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C43")]
			[Address(RVA = "0x32B95EC", Offset = "0x32B95EC", VA = "0x32B95EC")]
			[DebuggerHidden]
			public <WaitToReset>d__82(int <>1__state)
			{
			}

			[Token(Token = "0x6002C44")]
			[Address(RVA = "0x32B9618", Offset = "0x32B9618", VA = "0x32B9618", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C45")]
			[Address(RVA = "0x32B961C", Offset = "0x32B961C", VA = "0x32B961C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C47")]
			[Address(RVA = "0x32B972C", Offset = "0x32B972C", VA = "0x32B972C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000893")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7681C", Offset = "0xE7681C")]
		private sealed class <EnableTriggerAfterAFrame>d__86 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400253F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002540")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MT_Snappable <>4__this;

			[Token(Token = "0x17000483")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C4C")]
				[Address(RVA = "0x32B959C", Offset = "0x32B959C", VA = "0x32B959C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000484")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C4E")]
				[Address(RVA = "0x32B95E4", Offset = "0x32B95E4", VA = "0x32B95E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C49")]
			[Address(RVA = "0x32B9404", Offset = "0x32B9404", VA = "0x32B9404")]
			[DebuggerHidden]
			public <EnableTriggerAfterAFrame>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x6002C4A")]
			[Address(RVA = "0x32B9430", Offset = "0x32B9430", VA = "0x32B9430", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C4B")]
			[Address(RVA = "0x32B9434", Offset = "0x32B9434", VA = "0x32B9434", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C4D")]
			[Address(RVA = "0x32B95A4", Offset = "0x32B95A4", VA = "0x32B95A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string snapTag;

		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform snapHighlightMesh;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE89B80", Offset = "0xE89B80")]
		[SerializeField]
		private bool hasRealRotation;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 rotationAxis;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool hasRealPosition;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector3 positionAxis;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool canSnapAlways;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		private bool startSnapped;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[SerializeField]
		private bool snapBackOnRelease;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		[SerializeField]
		private bool isKinematic;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool isLerpSnap;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE89C38", Offset = "0xE89C38")]
		private float lerpSpeed;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private bool isLerpOnRelease;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE89C8C", Offset = "0xE89C8C")]
		private float lerpOnReleaseSpeed;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float breakForce;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float breakTorque;

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE89CF0", Offset = "0xE89CF0")]
		[SerializeField]
		private float handBreakForce;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float handBreakTorque;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private bool triggerSnapOnce;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UnityEvent onSnap;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool triggerUnsnapOnce;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private UnityEvent onUnsnap;

		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityAction<MT_Snappable> onZoneUnsnap;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MT_Grabbable _grabbable;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _isSnapped;

		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private MT_SnapDropZone _zone;

		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Rigidbody _snapZoneRb;

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float _startZoneMass;

		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Rigidbody _rb;

		[Token(Token = "0x400252B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ConfigurableJoint _snapJoint;

		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 _snapPos;

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 _snapRot;

		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private ConfigurableJoint _handJoint;

		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _startBreakForce;

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _startBreakTorque;

		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ConfigurableJoint _zoneHandJoint;

		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float _zoneStartBreakForce;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float _zoneStartBreakTorque;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private DG.Tweening.Sequence _snapSequence;

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Transform _snappableSceneParent;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Transform _snappableSnapParent;

		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool _snapHasTriggered;

		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		private bool _unsnappedHasTriggered;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private List<Collider> _snappableTriggers;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Coroutine _enableTriggerCoroutine;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private WaitForSeconds _waitToEnable;

		[Token(Token = "0x17000478")]
		public bool HasRealRotation
		{
			[Token(Token = "0x6002C1D")]
			[Address(RVA = "0x12AE208", Offset = "0x12AE208", VA = "0x12AE208")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000479")]
		public Vector3 RotationAxis
		{
			[Token(Token = "0x6002C1E")]
			[Address(RVA = "0x12AE210", Offset = "0x12AE210", VA = "0x12AE210")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700047A")]
		public bool StartSnapped
		{
			[Token(Token = "0x6002C1F")]
			[Address(RVA = "0x12AE21C", Offset = "0x12AE21C", VA = "0x12AE21C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C20")]
			[Address(RVA = "0x12AE224", Offset = "0x12AE224", VA = "0x12AE224")]
			set
			{
			}
		}

		[Token(Token = "0x1700047B")]
		public bool SnapBackOnRelease
		{
			[Token(Token = "0x6002C21")]
			[Address(RVA = "0x12AE230", Offset = "0x12AE230", VA = "0x12AE230")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700047C")]
		public bool IsLerpSnap
		{
			[Token(Token = "0x6002C22")]
			[Address(RVA = "0x12AE238", Offset = "0x12AE238", VA = "0x12AE238")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700047D")]
		public bool CanSnapAlways
		{
			[Token(Token = "0x6002C23")]
			[Address(RVA = "0x12AE240", Offset = "0x12AE240", VA = "0x12AE240")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700047E")]
		public MT_Grabbable Grabbable
		{
			[Token(Token = "0x6002C24")]
			[Address(RVA = "0x12AE248", Offset = "0x12AE248", VA = "0x12AE248")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047F")]
		public bool IsSnapped
		{
			[Token(Token = "0x6002C25")]
			[Address(RVA = "0x12AE250", Offset = "0x12AE250", VA = "0x12AE250")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C26")]
			[Address(RVA = "0x12AE258", Offset = "0x12AE258", VA = "0x12AE258")]
			set
			{
			}
		}

		[Token(Token = "0x17000480")]
		public MT_SnapDropZone attachedZone
		{
			[Token(Token = "0x6002C27")]
			[Address(RVA = "0x12AE264", Offset = "0x12AE264", VA = "0x12AE264")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C28")]
		[Address(RVA = "0x12AE26C", Offset = "0x12AE26C", VA = "0x12AE26C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002C29")]
		[Address(RVA = "0x12AC064", Offset = "0x12AC064", VA = "0x12AC064")]
		public void SetHighlightMesh(Transform parent, Transform location, bool isActive)
		{
		}

		[Token(Token = "0x6002C2A")]
		[Address(RVA = "0x12AC918", Offset = "0x12AC918", VA = "0x12AC918")]
		public void SetSnapPosition(Transform parent, Transform location, Rigidbody snapzoneRb, MT_SnapDropZone attachZone)
		{
		}

		[Token(Token = "0x6002C2B")]
		[Address(RVA = "0x12AC3A4", Offset = "0x12AC3A4", VA = "0x12AC3A4")]
		public void LerpToSnapPosition(Transform parent, Transform location, Rigidbody snapzoneRb, MT_SnapDropZone attachZone)
		{
		}

		[Token(Token = "0x6002C2C")]
		[Address(RVA = "0x12AE448", Offset = "0x12AE448", VA = "0x12AE448")]
		private void SetSnapZone(MT_SnapDropZone attachZone)
		{
		}

		[Token(Token = "0x6002C2D")]
		[Address(RVA = "0x12AE908", Offset = "0x12AE908", VA = "0x12AE908")]
		private void SetSnappableCol(MT_HandInteractor interactor)
		{
		}

		[Token(Token = "0x6002C2E")]
		[Address(RVA = "0x12AEA98", Offset = "0x12AEA98", VA = "0x12AEA98")]
		private void ResetSnappableCol()
		{
		}

		[Token(Token = "0x6002C2F")]
		[Address(RVA = "0x12AE66C", Offset = "0x12AE66C", VA = "0x12AE66C")]
		private void SetNewParent(Transform parent)
		{
		}

		[Token(Token = "0x6002C30")]
		[Address(RVA = "0x12AE2F8", Offset = "0x12AE2F8", VA = "0x12AE2F8")]
		private void GetNewPosAndRot(Transform location)
		{
		}

		[Token(Token = "0x6002C31")]
		[Address(RVA = "0x12AEB9C", Offset = "0x12AEB9C", VA = "0x12AEB9C")]
		private void AddJoint()
		{
		}

		[Token(Token = "0x6002C32")]
		[Address(RVA = "0x12AE6F0", Offset = "0x12AE6F0", VA = "0x12AE6F0")]
		private void Snap()
		{
		}

		[Token(Token = "0x6002C33")]
		[Address(RVA = "0x12AED94", Offset = "0x12AED94", VA = "0x12AED94")]
		private void Unsnap()
		{
		}

		[Token(Token = "0x6002C34")]
		[Address(RVA = "0x12AF478", Offset = "0x12AF478", VA = "0x12AF478")]
		private void ResetSnapJointForce()
		{
		}

		[Token(Token = "0x6002C35")]
		[Address(RVA = "0x12AF1FC", Offset = "0x12AF1FC", VA = "0x12AF1FC")]
		private void SetHandJointToUnbreakable()
		{
		}

		[Token(Token = "0x6002C36")]
		[Address(RVA = "0x12AF520", Offset = "0x12AF520", VA = "0x12AF520")]
		private void ResetHandJoint()
		{
		}

		[Token(Token = "0x6002C37")]
		[Address(RVA = "0x12AF62C", Offset = "0x12AF62C", VA = "0x12AF62C")]
		private void OnJointBreak(float breakForce)
		{
		}

		[Token(Token = "0x6002C38")]
		[Address(RVA = "0x12AF75C", Offset = "0x12AF75C", VA = "0x12AF75C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9A42C", Offset = "0xE9A42C")]
		private IEnumerator WaitToReset()
		{
			return null;
		}

		[Token(Token = "0x6002C39")]
		[Address(RVA = "0x12AEE20", Offset = "0x12AEE20", VA = "0x12AEE20")]
		private void OnSnappableJointBreak()
		{
		}

		[Token(Token = "0x6002C3A")]
		[Address(RVA = "0x12AF7D4", Offset = "0x12AF7D4", VA = "0x12AF7D4")]
		[PublicAPI]
		public string GetSnapTag()
		{
			return null;
		}

		[Token(Token = "0x6002C3B")]
		[Address(RVA = "0x12AF7DC", Offset = "0x12AF7DC", VA = "0x12AF7DC")]
		[PublicAPI]
		public void SetSnapTag(string newTag)
		{
		}

		[Token(Token = "0x6002C3C")]
		[Address(RVA = "0x12AF9FC", Offset = "0x12AF9FC", VA = "0x12AF9FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9A4AC", Offset = "0xE9A4AC")]
		private IEnumerator EnableTriggerAfterAFrame()
		{
			return null;
		}

		[Token(Token = "0x6002C3D")]
		[Address(RVA = "0x12AFA74", Offset = "0x12AFA74", VA = "0x12AFA74")]
		[PublicAPI]
		public void SetNewHandUnsnapForce(float force)
		{
		}

		[Token(Token = "0x6002C3E")]
		[Address(RVA = "0x12AFA7C", Offset = "0x12AFA7C", VA = "0x12AFA7C")]
		[PublicAPI]
		public void SetNewHandUnsnapTorque(float torque)
		{
		}

		[Token(Token = "0x6002C3F")]
		[Address(RVA = "0x12AD554", Offset = "0x12AD554", VA = "0x12AD554")]
		public void ForceUnsnap()
		{
		}

		[Token(Token = "0x6002C40")]
		[Address(RVA = "0x12AFA84", Offset = "0x12AFA84", VA = "0x12AFA84")]
		public MT_Snappable()
		{
		}

		[Token(Token = "0x6002C41")]
		[Address(RVA = "0x12AFB38", Offset = "0x12AFB38", VA = "0x12AFB38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9A52C", Offset = "0xE9A52C")]
		private void <SetSnapPosition>b__68_0()
		{
		}

		[Token(Token = "0x6002C42")]
		[Address(RVA = "0x12AFB3C", Offset = "0x12AFB3C", VA = "0x12AFB3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE9A53C", Offset = "0xE9A53C")]
		private void <LerpToSnapPosition>b__69_0()
		{
		}
	}
}
namespace TechArt
{
	[Token(Token = "0x2000894")]
	public sealed class Splash_ObjPool : MonoBehaviour
	{
		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Splash_ObjPool SharedInstance;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> pooledObjects;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject objectToPool;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int amountToPool;

		[Token(Token = "0x6002C4F")]
		[Address(RVA = "0x32E2220", Offset = "0x32E2220", VA = "0x32E2220")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002C50")]
		[Address(RVA = "0x32E2390", Offset = "0x32E2390", VA = "0x32E2390")]
		public GameObject GetPooledObject()
		{
			return null;
		}

		[Token(Token = "0x6002C51")]
		[Address(RVA = "0x32E2460", Offset = "0x32E2460", VA = "0x32E2460")]
		public Splash_ObjPool()
		{
		}
	}
	[Token(Token = "0x2000895")]
	public class MT_BatchController : MonoBehaviour
	{
		[Token(Token = "0x6002C52")]
		[Address(RVA = "0x1126914", Offset = "0x1126914", VA = "0x1126914")]
		public MT_BatchController()
		{
		}
	}
	[Token(Token = "0x2000896")]
	public class MT_BatchingControllerConfiguration : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000897")]
		public struct MeshMaterialsPair
		{
			[Token(Token = "0x4002547")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mesh mesh;

			[Token(Token = "0x4002548")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material[] materials;
		}

		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<MeshFilter, MeshMaterialsPair> meshData;

		[Token(Token = "0x6002C53")]
		[Address(RVA = "0x112691C", Offset = "0x112691C", VA = "0x112691C")]
		public MT_BatchingControllerConfiguration()
		{
		}
	}
	[Token(Token = "0x2000898")]
	public class MT_FogDistanceFade : MonoBehaviour
	{
		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _cameraTransform;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _volumePosition;

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _cameraPosition;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _fogDensity;

		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider _coll;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float _fadeDistance;

		[Token(Token = "0x6002C54")]
		[Address(RVA = "0x15BF90C", Offset = "0x15BF90C", VA = "0x15BF90C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002C55")]
		[Address(RVA = "0x15BF9A8", Offset = "0x15BF9A8", VA = "0x15BF9A8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002C56")]
		[Address(RVA = "0x15BFA44", Offset = "0x15BFA44", VA = "0x15BFA44")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002C57")]
		[Address(RVA = "0x15BFA50", Offset = "0x15BFA50", VA = "0x15BFA50")]
		public MT_FogDistanceFade()
		{
		}
	}
	[Token(Token = "0x2000899")]
	public class TA_particlePeriodicPlay : MonoBehaviour
	{
		[Token(Token = "0x200089A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE7682C", Offset = "0xE7682C")]
		private sealed class <PlayCoRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002557")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002559")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TA_particlePeriodicPlay <>4__this;

			[Token(Token = "0x17000485")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C5F")]
				[Address(RVA = "0x2166CD0", Offset = "0x2166CD0", VA = "0x2166CD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000486")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C61")]
				[Address(RVA = "0x2166D18", Offset = "0x2166D18", VA = "0x2166D18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C5C")]
			[Address(RVA = "0x2166BB4", Offset = "0x2166BB4", VA = "0x2166BB4")]
			[DebuggerHidden]
			public <PlayCoRoutine>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002C5D")]
			[Address(RVA = "0x2166BE0", Offset = "0x2166BE0", VA = "0x2166BE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C5E")]
			[Address(RVA = "0x2166BE4", Offset = "0x2166BE4", VA = "0x2166BE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C60")]
			[Address(RVA = "0x2166CD8", Offset = "0x2166CD8", VA = "0x2166CD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float durationMin;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float durationMax;

		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _time;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _duration;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem particle;

		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ZA_AudioEvent audioEvent;

		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string audioEventName;

		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private System.Random _rand;

		[Token(Token = "0x6002C58")]
		[Address(RVA = "0x32E45A4", Offset = "0x32E45A4", VA = "0x32E45A4")]
		private void TimerReset()
		{
		}

		[Token(Token = "0x6002C59")]
		[Address(RVA = "0x32E45FC", Offset = "0x32E45FC", VA = "0x32E45FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002C5A")]
		[Address(RVA = "0x32E4798", Offset = "0x32E4798", VA = "0x32E4798")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE9A5EC", Offset = "0xE9A5EC")]
		private IEnumerator PlayCoRoutine()
		{
			return null;
		}

		[Token(Token = "0x6002C5B")]
		[Address(RVA = "0x32E4810", Offset = "0x32E4810", VA = "0x32E4810")]
		public TA_particlePeriodicPlay()
		{
		}
	}
	[Token(Token = "0x200089B")]
	public class mt_WakeOpacityController : MonoBehaviour
	{
		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer[] _renderer;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _transformPos;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _distance;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _currentSpeed;

		[Token(Token = "0x6002C62")]
		[Address(RVA = "0x169DCF8", Offset = "0x169DCF8", VA = "0x169DCF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002C63")]
		[Address(RVA = "0x169DD64", Offset = "0x169DD64", VA = "0x169DD64")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002C64")]
		[Address(RVA = "0x169DED8", Offset = "0x169DED8", VA = "0x169DED8")]
		public mt_WakeOpacityController()
		{
		}
	}
}
